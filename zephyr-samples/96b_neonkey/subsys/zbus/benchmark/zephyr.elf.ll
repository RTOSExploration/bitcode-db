; ModuleID = 'build/96b_neonkey/benchmark/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.external_data_msg = type { i8*, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.bm_msg = type { [256 x i8] }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231197 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231177 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231167 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231257 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231247 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231237 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231227 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231217 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231207 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134231187 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [55 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_bm_channel to i8*), i8* bitcast (%struct.zbus_channel* @bm_channel to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s1, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s2, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s3, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s4, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s5, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s6, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s7, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s8, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_bm_channel = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_bm_channel", align 4, !dbg !25
@_zbus_message_bm_channel = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !350
@_zbus_observers_bm_channel = internal constant [9 x %struct.zbus_observer*] [%struct.zbus_observer* @s1, %struct.zbus_observer* @s2, %struct.zbus_observer* @s3, %struct.zbus_observer* @s4, %struct.zbus_observer* @s5, %struct.zbus_observer* @s6, %struct.zbus_observer* @s7, %struct.zbus_observer* @s8, %struct.zbus_observer* null], align 4, !dbg !357
@bm_channel = dso_local constant %struct.zbus_channel { i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_bm_channel to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_bm_channel, %struct.zbus_observer** getelementptr inbounds ([9 x %struct.zbus_observer*], [9 x %struct.zbus_observer*]* @_zbus_observers_bm_channel, i32 0, i32 0) }, section "._zbus_channel.static.bm_channel", align 4, !dbg !112
@s1 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s1", align 4, !dbg !290
@s2 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s2", align 4, !dbg !292
@s3 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s3", align 4, !dbg !294
@s4 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s4", align 4, !dbg !296
@s5 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s5", align 4, !dbg !298
@s6 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s6", align 4, !dbg !300
@s7 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s7", align 4, !dbg !302
@s8 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s8", align 4, !dbg !304
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !348
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/benchmark.c\22.0", align 64, !dbg !343
@.str = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !306
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !339
@count = internal unnamed_addr global i64 0, align 8, !dbg !362
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Benchmark 1 to %d: Dynamic memory, %sSYNC transmission and message size %u\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"%c: Something wrong. Duration is zero!\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"%c: Bytes sent = %lld, received = %llu\0A\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"%c: Average data rate: %llu.%lluB/s\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"%c: Duration: %ums\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\0A@%u\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !364
@.str.1.10 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !388
@.str.15 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !398
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !448
@.str.21 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.23 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.24 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.22 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.29 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.30 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.31 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.45 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.41 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.42 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.44 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.38 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.39 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.36 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.37 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.35 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.34 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !477
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !608
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !483
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !617
@.str.57 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !653
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.70, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !663
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !668
@.str.69 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.70 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !688
@.str.1.73 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !700
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !872
@.str.81 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !834
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !817
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !790
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !806
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !836
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !849
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !851
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !853
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !855
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !857
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !859
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !861
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !863
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !865
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !867
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !877
@.str.83 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !904
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1001
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !990
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1042
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !897
@.str.92 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1108
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1384
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1354
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1340
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1285
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !895
@.str.1.93 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1386
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1358
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1356
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1302
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !893
@.str.2.94 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1399
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1362
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1360
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1308
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !891
@.str.3.95 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1401
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1366
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1364
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1314
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !889
@.str.4.96 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1403
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1370
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1368
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1320
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !887
@.str.5.97 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1405
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1374
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1372
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1326
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !885
@.str.6.98 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1407
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1378
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1376
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !883
@.str.7.99 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1409
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1382
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1380
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1338
@.str.103 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1411
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !899
@.str.1.106 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1567
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1622
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1565
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1624
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.106, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1556
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1558
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1611
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1614
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1616
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1619
@.str.2.108 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.111 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.113 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.114 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !974
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1635
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1742
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1744
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1740
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1711
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1746
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1283
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.93, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1300
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.94, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1306
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1312
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.96, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1318
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.97, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1324
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.99, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1336
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1836
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1878
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1881
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1888
@.str.146 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.150 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.151 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.152 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.156 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.157 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.158 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.159 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.160 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.155 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.154 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.156, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.157, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.158, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.159, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.160, i32 0, i32 0)], align 4
@.str.162 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.162, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1895
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2115
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2104
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2110
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2122
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2127
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.171 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.177, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.179, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.180, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.181, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.175, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.182, i32 0, i32 0)], align 4, !dbg !2157
@.str.176 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.177 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.178 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.179 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.180 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.181 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.175 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.182 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2269
@.str.8.174 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2282
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2390
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2498
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2501
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2503
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2120
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2112
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2505
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2541
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2539
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2544
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2549
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1982
@.str.283 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2584
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3336 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3384, !srcloc !3385
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3392, !srcloc !3395
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3416, !srcloc !3417
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3418, !srcloc !3419
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3424, !srcloc !3425
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3426, !srcloc !3427
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3428, !srcloc !3429
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3430, !srcloc !3431
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3432, !srcloc !3433
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3434, !srcloc !3435
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3436, !srcloc !3437
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3438, !srcloc !3439
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3440, !srcloc !3441
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3442, !srcloc !3443
  ret void, !dbg !3444
}

; Function Attrs: noinline nounwind optsize
define internal void @s_cb(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3447 {
  %2 = alloca [256 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3449, metadata !DIExpression()), !dbg !3460
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3461
  call void @llvm.dbg.declare(metadata %struct.bm_msg* undef, metadata !3450, metadata !DIExpression()), !dbg !3462
  %4 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #26, !dbg !3463
  call void @llvm.dbg.value(metadata i8* %4, metadata !3457, metadata !DIExpression()), !dbg !3460
  %5 = bitcast i8* %4 to i8**, !dbg !3464
  %6 = load i8*, i8** %5, align 4, !dbg !3464
  %7 = call i8* @memcpy(i8* noundef nonnull %3, i8* noundef %6, i32 noundef 256) #27, !dbg !3465
  %8 = load i64, i64* @count, align 8, !dbg !3466
  %9 = add i64 %8, 256, !dbg !3466
  store i64 %9, i64* @count, align 8, !dbg !3466
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3467
  ret void, !dbg !3467
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3468 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3472, metadata !DIExpression()), !dbg !3473
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3474
  %3 = load i8*, i8** %2, align 4, !dbg !3474
  ret i8* %3, !dbg !3475
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3476 {
  %1 = alloca %struct.bm_msg, align 1
  %2 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3489
  %3 = zext i8 %2 to i32, !dbg !3489
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3, i32 noundef 8, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i32 noundef 256) #27, !dbg !3489
  %4 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 0, !dbg !3494
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3494
  call void @llvm.dbg.declare(metadata %struct.bm_msg* %1, metadata !3478, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i64 255, metadata !3481, metadata !DIExpression()), !dbg !3496
  br label %10, !dbg !3497

5:                                                ; preds = %10
  %6 = tail call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3498
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3479, metadata !DIExpression()), !dbg !3499
  %7 = tail call i8* @k_malloc(i32 noundef 256) #27, !dbg !3500
  store i8* %7, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3501
  store i32 256, i32* getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 1), align 4, !dbg !3502
  %8 = tail call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3503
  %9 = tail call fastcc i32 @k_uptime_get_32() #26, !dbg !3504
  call void @llvm.dbg.value(metadata i32 %9, metadata !3483, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i64 32768, metadata !3484, metadata !DIExpression()), !dbg !3505
  br label %21, !dbg !3506

10:                                               ; preds = %0, %10
  %11 = phi i64 [ 255, %0 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !3481, metadata !DIExpression()), !dbg !3496
  %12 = trunc i64 %11 to i8, !dbg !3507
  %13 = trunc i64 %11 to i32, !dbg !3510
  %14 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 %13, !dbg !3510
  store i8 %12, i8* %14, align 1, !dbg !3511
  %15 = add nsw i64 %11, -1, !dbg !3512
  call void @llvm.dbg.value(metadata i64 %15, metadata !3481, metadata !DIExpression()), !dbg !3496
  %16 = icmp eq i64 %15, 0, !dbg !3513
  br i1 %16, label %5, label %10, !dbg !3497, !llvm.loop !3514

17:                                               ; preds = %21
  %18 = call fastcc i32 @k_uptime_get_32() #26, !dbg !3516
  %19 = sub i32 %18, %9, !dbg !3517
  call void @llvm.dbg.value(metadata i32 %19, metadata !3486, metadata !DIExpression()), !dbg !3499
  %20 = icmp eq i32 %19, 0, !dbg !3518
  br i1 %20, label %32, label %35, !dbg !3520

21:                                               ; preds = %5, %21
  %22 = phi i64 [ 32768, %5 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3484, metadata !DIExpression()), !dbg !3505
  %23 = call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3521
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3479, metadata !DIExpression()), !dbg !3499
  %24 = load i8*, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3524
  %25 = call i8* @memcpy(i8* noundef %24, i8* noundef nonnull %4, i32 noundef 256) #27, !dbg !3525
  %26 = call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3526
  %27 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #26, !dbg !3527
  %28 = insertvalue [1 x i64] poison, i64 %27, 0, !dbg !3528
  %29 = call i32 @zbus_chan_notify(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] %28) #27, !dbg !3528
  %30 = add nsw i64 %22, -256, !dbg !3529
  call void @llvm.dbg.value(metadata i64 %30, metadata !3484, metadata !DIExpression()), !dbg !3505
  %31 = icmp eq i64 %30, 0, !dbg !3530
  br i1 %31, label %17, label %21, !dbg !3506, !llvm.loop !3531

32:                                               ; preds = %17
  %33 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3533
  %34 = zext i8 %33 to i32, !dbg !3533
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0), i32 noundef %34) #27, !dbg !3533
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 3, i32 2) #25, !dbg !3539, !srcloc !3541
  br label %35, !dbg !3542

35:                                               ; preds = %32, %17
  %36 = zext i32 %19 to i64, !dbg !3543
  %37 = udiv i32 262144000, %19, !dbg !3544
  %38 = zext i32 %37 to i64, !dbg !3544
  call void @llvm.dbg.value(metadata i64 %38, metadata !3487, metadata !DIExpression()), !dbg !3499
  %39 = udiv i64 26214400000, %36, !dbg !3545
  %40 = urem i64 %39, 100, !dbg !3546
  call void @llvm.dbg.value(metadata i64 %40, metadata !3488, metadata !DIExpression()), !dbg !3499
  %41 = load i64, i64* @count, align 8, !dbg !3547
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), i32 noundef %3, i64 noundef 262144, i64 noundef %41) #27, !dbg !3547
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), i32 noundef %3, i64 noundef %38, i64 noundef %40) #27, !dbg !3552
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i32 noundef %3, i32 noundef %19) #27, !dbg !3557
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 noundef %19) #27, !dbg !3562
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3563
  ret void, !dbg !3563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3569, metadata !DIExpression()), !dbg !3570
  %2 = add i32 %0, -1, !dbg !3571
  %3 = icmp ult i32 %2, 3, !dbg !3571
  %4 = trunc i32 %2 to i24, !dbg !3571
  %5 = shl i24 %4, 3, !dbg !3571
  %6 = lshr i24 4806469, %5, !dbg !3571
  %7 = trunc i24 %6 to i8, !dbg !3571
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3571
  ret i8 %8, !dbg !3572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3573 {
  %1 = tail call fastcc i64 @k_uptime_get() #26, !dbg !3576
  %2 = trunc i64 %1 to i32, !dbg !3577
  ret i32 %2, !dbg !3578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #5 !dbg !3579 {
  call void @llvm.dbg.value(metadata i64 200, metadata !3584, metadata !DIExpression()), !dbg !3585
  ret i64 2000, !dbg !3586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3587 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #26, !dbg !3590
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #26, !dbg !3591
  ret i64 %2, !dbg !3592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3593 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3595, !srcloc !3597
  %1 = tail call i64 @z_impl_k_uptime_ticks() #27, !dbg !3598
  ret i64 %1, !dbg !3599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !3600 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3602, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i64 %0, metadata !3604, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i32 10000, metadata !3609, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i32 1000, metadata !3610, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i8 1, metadata !3611, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i8 0, metadata !3612, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i1 false, metadata !3613, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3621
  call void @llvm.dbg.value(metadata i8 0, metadata !3614, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i1 false, metadata !3615, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3621
  call void @llvm.dbg.value(metadata i1 true, metadata !3616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3621
  call void @llvm.dbg.value(metadata i64 0, metadata !3617, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i64 0, metadata !3617, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3604, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3621
  call void @llvm.dbg.value(metadata i64 %0, metadata !3604, metadata !DIExpression()), !dbg !3621
  %2 = udiv i64 %0, 10, !dbg !3623
  ret i64 %2, !dbg !3628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3629 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %0, metadata !3640, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %1, metadata !3641, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %2, metadata !3642, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %3, metadata !3643, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %0, metadata !3645, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %0, metadata !3646, metadata !DIExpression()), !dbg !3707
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3708
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3708
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3649, metadata !DIExpression()), !dbg !3709
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3710
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3710
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3651, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i32 0, metadata !3652, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 0, metadata !3653, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 0, metadata !3654, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 -1, metadata !3655, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 0, metadata !3658, metadata !DIExpression()), !dbg !3707
  %12 = and i32 %2, 4, !dbg !3712
  %13 = icmp eq i32 %12, 0, !dbg !3713
  call void @llvm.dbg.value(metadata i1 %13, metadata !3659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3707
  %14 = lshr i32 %2, 3, !dbg !3714
  %15 = and i32 %14, 7, !dbg !3714
  %16 = add nuw nsw i32 %15, 1, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %16, metadata !3660, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 0, metadata !3661, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %0, metadata !3662, metadata !DIExpression()), !dbg !3707
  %17 = ptrtoint i8* %0 to i32, !dbg !3716
  %18 = and i32 %17, 3, !dbg !3718
  %19 = icmp eq i32 %18, 0, !dbg !3718
  br i1 %19, label %20, label %316, !dbg !3719

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3720
  call void @llvm.dbg.value(metadata i8* %21, metadata !3646, metadata !DIExpression()), !dbg !3707
  %22 = icmp eq i8* %0, null, !dbg !3721
  %23 = and i32 %1, 7, !dbg !3723
  %24 = sub nuw nsw i32 8, %23, !dbg !3723
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3723
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3723
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3723
  call void @llvm.dbg.value(metadata i32 %27, metadata !3641, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %26, metadata !3646, metadata !DIExpression()), !dbg !3707
  br i1 %22, label %33, label %28, !dbg !3724

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3726
  %30 = sub i32 4, %17, !dbg !3726
  %31 = add i32 %30, %29, !dbg !3727
  %32 = icmp ugt i32 %31, %27, !dbg !3728
  br i1 %32, label %316, label %33, !dbg !3729

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3730
  call void @llvm.dbg.value(metadata i8* %34, metadata !3643, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %3, metadata !3657, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 4, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 4, metadata !3647, metadata !DIExpression()), !dbg !3707
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3731

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %42, metadata !3643, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %43, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %44, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %45, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %72, metadata !3655, metadata !DIExpression()), !dbg !3707
  br i1 %46, label %73, label %47, !dbg !3732

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3733
  %49 = zext i1 %48 to i32, !dbg !3737
  %50 = add nsw i32 %72, %49, !dbg !3737
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3737
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3737
  call void @llvm.dbg.value(metadata i32 %52, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %51, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3658, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %50, metadata !3655, metadata !DIExpression()), !dbg !3707
  br label %53, !dbg !3738

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %40, metadata !3643, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %58, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %57, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %56, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3658, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %54, metadata !3655, metadata !DIExpression()), !dbg !3707
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3739
  call void @llvm.dbg.value(metadata i8* %60, metadata !3643, metadata !DIExpression()), !dbg !3707
  %61 = load i8, i8* %60, align 1, !dbg !3741
  %62 = icmp eq i8 %61, 0, !dbg !3742
  br i1 %62, label %223, label %63, !dbg !3743, !llvm.loop !3744

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3732

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3747

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3658, metadata !DIExpression()), !dbg !3707
  %75 = add nsw i32 %72, -1, !dbg !3748
  call void @llvm.dbg.value(metadata i32 %75, metadata !3655, metadata !DIExpression()), !dbg !3707
  br label %53, !dbg !3749

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3750

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 4, metadata !3647, metadata !DIExpression()), !dbg !3707
  br label %53, !dbg !3751

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 4, metadata !3647, metadata !DIExpression()), !dbg !3707
  br label %53, !dbg !3752

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3753
  %81 = icmp eq i8 %80, 108, !dbg !3755
  br i1 %81, label %82, label %109, !dbg !3756

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3757
  %84 = load i8, i8* %83, align 1, !dbg !3757
  %85 = icmp eq i8 %84, 108, !dbg !3760
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3761
  %89 = add i32 %88, 7, !dbg !3761
  %90 = and i32 %89, -8, !dbg !3761
  %91 = inttoptr i32 %90 to i8*, !dbg !3761
  %92 = inttoptr i32 %90 to double*, !dbg !3761
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3761
  %94 = load double, double* %92, align 8, !dbg !3761
  call void @llvm.dbg.value(metadata i8* %93, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 8, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 8, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata double %94, metadata !3675, metadata !DIExpression()), !dbg !3763
  %95 = ptrtoint i8* %43 to i32, !dbg !3764
  %96 = add i32 %95, 7, !dbg !3764
  %97 = and i32 %96, -8, !dbg !3764
  %98 = inttoptr i32 %97 to i8*, !dbg !3765
  call void @llvm.dbg.value(metadata i8* %98, metadata !3646, metadata !DIExpression()), !dbg !3707
  br i1 %22, label %104, label %99, !dbg !3766

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3767
  %101 = icmp ugt i32 %100, %194, !dbg !3771
  br i1 %101, label %316, label %102, !dbg !3772

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3773
  store double %94, double* %103, align 8, !dbg !3773
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3776
  call void @llvm.dbg.value(metadata i8* %105, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3658, metadata !DIExpression()), !dbg !3707
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3658, metadata !DIExpression()), !dbg !3707
  br label %53, !dbg !3777

107:                                              ; preds = %73, %73
  br label %109, !dbg !3778

108:                                              ; preds = %73
  br label %109, !dbg !3778

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3707
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3707
  call void @llvm.dbg.value(metadata i32 %113, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %112, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3661, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3658, metadata !DIExpression()), !dbg !3707
  %114 = ptrtoint i8* %43 to i32, !dbg !3778
  %115 = add i32 %114, -1, !dbg !3778
  %116 = add i32 %115, %112, !dbg !3778
  %117 = sub i32 0, %112, !dbg !3778
  %118 = and i32 %116, %117, !dbg !3778
  %119 = inttoptr i32 %118 to i8*, !dbg !3779
  call void @llvm.dbg.value(metadata i8* %119, metadata !3646, metadata !DIExpression()), !dbg !3707
  br i1 %22, label %124, label %120, !dbg !3780

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3782
  %122 = add i32 %121, %118, !dbg !3783
  %123 = icmp ugt i32 %122, %194, !dbg !3784
  br i1 %123, label %316, label %124, !dbg !3785

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3786

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3779
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3787
  call void @llvm.dbg.value(metadata i8* %127, metadata !3644, metadata !DIExpression()), !dbg !3707
  %128 = bitcast i8* %41 to i8**, !dbg !3787
  %129 = load i8*, i8** %128, align 4, !dbg !3787
  call void @llvm.dbg.value(metadata i8* %129, metadata !3657, metadata !DIExpression()), !dbg !3707
  br label %130, !dbg !3788

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3789
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3790
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3707
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3791
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3707
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3792
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3707
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3707
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3707
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3707
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3793
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %142, metadata !3641, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %141, metadata !3643, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %140, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %139, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %138, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %137, metadata !3652, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %136, metadata !3660, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %135, metadata !3653, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3658, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %133, metadata !3657, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %132, metadata !3655, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %131, metadata !3654, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.label(metadata !3706), !dbg !3795
  br i1 %22, label %146, label %144, !dbg !3796

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3797
  store i8* %133, i8** %145, align 4, !dbg !3800
  br label %146, !dbg !3801

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3802
  call void @llvm.dbg.value(metadata i32 %147, metadata !3660, metadata !DIExpression()), !dbg !3707
  %148 = icmp sgt i32 %136, 0, !dbg !3803
  br i1 %148, label %152, label %149, !dbg !3804

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !3805
  %151 = zext i1 %150 to i32, !dbg !3805
  br label %152, !dbg !3804

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3804
  %154 = icmp eq i32 %153, 0, !dbg !3804
  call void @llvm.dbg.value(metadata i1 %154, metadata !3684, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3806
  call void @llvm.dbg.value(metadata i1 %36, metadata !3687, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3806
  %155 = or i1 %36, %154, !dbg !3807
  br i1 %155, label %156, label %190, !dbg !3807

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3808
  %158 = sub i32 %157, %17, !dbg !3808
  %159 = lshr i32 %158, 2, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %159, metadata !3688, metadata !DIExpression()), !dbg !3810
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3811
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3811
  br i1 %163, label %316, label %164, !dbg !3811

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3813

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3814
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3817
  store i8 %166, i8* %167, align 1, !dbg !3818
  %168 = trunc i32 %132 to i8, !dbg !3819
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3820
  store i8 %168, i8* %169, align 1, !dbg !3821
  br i1 %154, label %173, label %170, !dbg !3822

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3823
  store i8 %171, i8* %167, align 1, !dbg !3823
  %172 = add i32 %131, 1, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %172, metadata !3654, metadata !DIExpression()), !dbg !3707
  br label %185, !dbg !3827

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %174, metadata !3653, metadata !DIExpression()), !dbg !3707
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3830

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %177, metadata !3641, metadata !DIExpression()), !dbg !3707
  br label %185, !dbg !3834

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3835

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %180, metadata !3641, metadata !DIExpression()), !dbg !3707
  br label %185, !dbg !3839

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !3840
  %183 = add i32 %142, 2, !dbg !3842
  %184 = add i32 %183, %182, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %184, metadata !3641, metadata !DIExpression()), !dbg !3707
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3707
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3707
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3707
  call void @llvm.dbg.value(metadata i32 %188, metadata !3641, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %187, metadata !3653, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %186, metadata !3654, metadata !DIExpression()), !dbg !3707
  %189 = add nuw nsw i32 %137, 1, !dbg !3844
  call void @llvm.dbg.value(metadata i32 undef, metadata !3641, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 undef, metadata !3652, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 undef, metadata !3653, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3707
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3789
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3791
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3792
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3793
  call void @llvm.dbg.value(metadata i32 %194, metadata !3641, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %193, metadata !3652, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %192, metadata !3653, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %191, metadata !3654, metadata !DIExpression()), !dbg !3707
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3845
  call void @llvm.dbg.value(metadata i8* %195, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %143, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %141, metadata !3643, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %139, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %138, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3661, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3658, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %132, metadata !3655, metadata !DIExpression()), !dbg !3707
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3739
  call void @llvm.dbg.value(metadata i8* %196, metadata !3643, metadata !DIExpression()), !dbg !3707
  %197 = load i8, i8* %196, align 1, !dbg !3741
  %198 = icmp eq i8 %197, 0, !dbg !3742
  br i1 %198, label %223, label %63, !dbg !3743

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3846

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3847
  call void @llvm.dbg.value(metadata i8* %201, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 undef, metadata !3691, metadata !DIExpression()), !dbg !3848
  br i1 %22, label %216, label %202, !dbg !3849

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3847
  %204 = load i32, i32* %203, align 4, !dbg !3847
  call void @llvm.dbg.value(metadata i32 %204, metadata !3691, metadata !DIExpression()), !dbg !3848
  %205 = inttoptr i32 %118 to i32*, !dbg !3850
  store i32 %204, i32* %205, align 4, !dbg !3853
  br label %216, !dbg !3854

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3855
  %208 = add i32 %207, 7, !dbg !3855
  %209 = and i32 %208, -8, !dbg !3855
  %210 = inttoptr i32 %209 to i8*, !dbg !3855
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3855
  call void @llvm.dbg.value(metadata i8* %211, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i64 undef, metadata !3697, metadata !DIExpression()), !dbg !3856
  br i1 %22, label %216, label %212, !dbg !3857

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3855
  %214 = load i64, i64* %213, align 8, !dbg !3855
  call void @llvm.dbg.value(metadata i64 %214, metadata !3697, metadata !DIExpression()), !dbg !3856
  %215 = inttoptr i32 %118 to i64*, !dbg !3858
  store i64 %214, i64* %215, align 8, !dbg !3863
  br label %216, !dbg !3864

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3865
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3865
  call void @llvm.dbg.value(metadata i8* %218, metadata !3644, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %40, metadata !3643, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %219, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %113, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %112, metadata !3648, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3661, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3658, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %72, metadata !3655, metadata !DIExpression()), !dbg !3707
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3739
  call void @llvm.dbg.value(metadata i8* %220, metadata !3643, metadata !DIExpression()), !dbg !3707
  %221 = load i8, i8* %220, align 1, !dbg !3741
  %222 = icmp eq i8 %221, 0, !dbg !3742
  br i1 %222, label %223, label %38, !dbg !3743

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3866
  %225 = ptrtoint i8* %224 to i32, !dbg !3867
  %226 = sub i32 %225, %17, !dbg !3867
  %227 = lshr i32 %226, 2, !dbg !3869
  %228 = icmp ugt i32 %226, 1023, !dbg !3870
  br i1 %228, label %316, label %229, !dbg !3871

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3872

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3873
  %232 = add i32 %231, %226, !dbg !3876
  br label %316, !dbg !3877

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3878
  store i8 %234, i8* %0, align 1, !dbg !3879
  %235 = trunc i32 %192 to i8, !dbg !3880
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3882
  store i8 %236, i8* %238, align 1, !dbg !3884
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3885
  store i8 %237, i8* %239, align 1, !dbg !3886
  %240 = trunc i32 %191 to i8, !dbg !3887
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3888
  store i8 %240, i8* %241, align 1, !dbg !3889
  %242 = icmp eq i32 %191, 0, !dbg !3890
  %243 = xor i1 %242, true, !dbg !3891
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3891
  call void @llvm.dbg.value(metadata i8* %224, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 0, metadata !3656, metadata !DIExpression()), !dbg !3707
  br i1 %245, label %246, label %265, !dbg !3891

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3892

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %250, metadata !3656, metadata !DIExpression()), !dbg !3707
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3893
  %252 = load i8, i8* %251, align 1, !dbg !3893
  %253 = icmp sgt i8 %252, -1, !dbg !3895
  br i1 %253, label %261, label %254, !dbg !3896

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3700, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3897
  %255 = ptrtoint i8* %249 to i32, !dbg !3898
  %256 = add i32 %247, %255, !dbg !3900
  %257 = icmp ugt i32 %256, %194, !dbg !3901
  br i1 %257, label %316, label %258, !dbg !3902

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3903
  call void @llvm.dbg.value(metadata i8 %259, metadata !3700, metadata !DIExpression()), !dbg !3897
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3904
  call void @llvm.dbg.value(metadata i8* %260, metadata !3646, metadata !DIExpression()), !dbg !3707
  store i8 %259, i8* %249, align 1, !dbg !3905
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3845
  call void @llvm.dbg.value(metadata i8* %262, metadata !3646, metadata !DIExpression()), !dbg !3707
  %263 = add nuw i32 %250, 1, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %263, metadata !3656, metadata !DIExpression()), !dbg !3707
  %264 = icmp eq i32 %263, %193, !dbg !3907
  br i1 %264, label %265, label %248, !dbg !3892, !llvm.loop !3908

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3845
  call void @llvm.dbg.value(metadata i8* %266, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 0, metadata !3656, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %133, metadata !3657, metadata !DIExpression()), !dbg !3707
  %267 = icmp eq i32 %193, 0, !dbg !3910
  br i1 %267, label %312, label %268, !dbg !3913

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3913

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %272, metadata !3657, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %273, metadata !3656, metadata !DIExpression()), !dbg !3707
  br i1 %242, label %278, label %274, !dbg !3914

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3917
  %276 = load i8, i8* %275, align 1, !dbg !3917
  %277 = icmp sgt i8 %276, -1, !dbg !3918
  br i1 %277, label %278, label %307, !dbg !3919

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !3920

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3647, metadata !DIExpression()), !dbg !3707
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !3921
  %281 = load i8, i8* %280, align 1, !dbg !3921
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !3924
  call void @llvm.dbg.value(metadata i8* %282, metadata !3646, metadata !DIExpression()), !dbg !3707
  store i8 %281, i8* %271, align 1, !dbg !3925
  br label %293, !dbg !3926

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3927
  %285 = load i8, i8* %284, align 1, !dbg !3927
  %286 = zext i8 %285 to i32, !dbg !3927
  %287 = shl nuw nsw i32 %286, 2, !dbg !3929
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !3930
  %289 = bitcast i8* %288 to i8**, !dbg !3931
  %290 = load i8*, i8** %289, align 4, !dbg !3931
  call void @llvm.dbg.value(metadata i8* %290, metadata !3657, metadata !DIExpression()), !dbg !3707
  store i8* null, i8** %289, align 4, !dbg !3932
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !3933
  %292 = add i32 %291, 1, !dbg !3934
  call void @llvm.dbg.value(metadata i32 %292, metadata !3647, metadata !DIExpression()), !dbg !3707
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3707
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !3935
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3707
  call void @llvm.dbg.value(metadata i8* %296, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %295, metadata !3647, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %294, metadata !3657, metadata !DIExpression()), !dbg !3707
  %297 = ptrtoint i8* %296 to i32, !dbg !3936
  %298 = add i32 %269, %295, !dbg !3938
  %299 = add i32 %298, %297, !dbg !3939
  %300 = icmp ugt i32 %299, %194, !dbg !3940
  br i1 %300, label %316, label %301, !dbg !3941

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3942
  %303 = load i8, i8* %302, align 1, !dbg !3942
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !3943
  call void @llvm.dbg.value(metadata i8* %304, metadata !3646, metadata !DIExpression()), !dbg !3707
  store i8 %303, i8* %296, align 1, !dbg !3944
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !3945
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !3946
  call void @llvm.dbg.value(metadata i8* %306, metadata !3646, metadata !DIExpression()), !dbg !3707
  br label %307, !dbg !3947

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !3948
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3707
  call void @llvm.dbg.value(metadata i8* %309, metadata !3646, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %308, metadata !3657, metadata !DIExpression()), !dbg !3707
  %310 = add nuw i32 %273, 1, !dbg !3949
  call void @llvm.dbg.value(metadata i32 %310, metadata !3656, metadata !DIExpression()), !dbg !3707
  %311 = icmp eq i32 %310, %193, !dbg !3910
  br i1 %311, label %312, label %270, !dbg !3913, !llvm.loop !3950

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3845
  %314 = ptrtoint i8* %313 to i32, !dbg !3952
  %315 = sub i32 %314, %17, !dbg !3952
  br label %316, !dbg !3953

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3707
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3954
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3954
  ret i32 %317, !dbg !3954
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3955 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3959, metadata !DIExpression()), !dbg !3960
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !3961
  ret i1 %2, !dbg !3962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3963 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3968, metadata !DIExpression()), !dbg !3969
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3970
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3971
  %4 = and i1 %2, %3, !dbg !3971
  ret i1 %4, !dbg !3972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3973 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3977, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 %1, metadata !3978, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 %2, metadata !3979, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i8* %3, metadata !3980, metadata !DIExpression()), !dbg !3983
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3984
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !3984
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3981, metadata !DIExpression()), !dbg !3985
  call void @llvm.va_start(i8* nonnull %6), !dbg !3986
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3987
  %8 = load i32, i32* %7, align 4, !dbg !3987
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3987
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %10, metadata !3982, metadata !DIExpression()), !dbg !3983
  call void @llvm.va_end(i8* nonnull %6), !dbg !3988
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !3989
  ret i32 %10, !dbg !3990
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3991 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4003, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4004, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8* %2, metadata !4005, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8* %3, metadata !4006, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8* %3, metadata !4007, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8* %3, metadata !4008, metadata !DIExpression()), !dbg !4022
  %5 = icmp eq i8* %3, null, !dbg !4023
  br i1 %5, label %45, label %6, !dbg !4025

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4017, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4022
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4026
  %8 = load i8, i8* %7, align 1, !dbg !4026
  %9 = zext i8 %8 to i32, !dbg !4027
  call void @llvm.dbg.value(metadata i32 %9, metadata !4018, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8 undef, metadata !4019, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4022
  call void @llvm.dbg.value(metadata i8 undef, metadata !4020, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4022
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  call void @llvm.dbg.value(metadata i32 0, metadata !4016, metadata !DIExpression()), !dbg !4022
  %10 = icmp eq i8 %8, 0, !dbg !4028
  br i1 %10, label %39, label %11, !dbg !4031

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4032
  call void @llvm.dbg.value(metadata i8 %12, metadata !4017, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4022
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %13 = zext i8 %12 to i32, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %13, metadata !4017, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4022
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %14 = shl nuw nsw i32 %13, 2, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %14, metadata !4017, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4035
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4036
  %17 = load i8, i8* %16, align 1, !dbg !4036
  call void @llvm.dbg.value(metadata i8 %17, metadata !4019, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4022
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %18 = zext i8 %17 to i32, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %18, metadata !4019, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4038
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4039
  %21 = load i8, i8* %20, align 1, !dbg !4039
  call void @llvm.dbg.value(metadata i8 %21, metadata !4020, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4022
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %22 = zext i8 %21 to i32, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %22, metadata !4020, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %23 = shl nuw nsw i32 %22, 1, !dbg !4041
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4022
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4042
  call void @llvm.dbg.value(metadata i8* %24, metadata !4014, metadata !DIExpression()), !dbg !4022
  br label %25, !dbg !4031

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4014, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i32 %27, metadata !4016, metadata !DIExpression()), !dbg !4022
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4043
  call void @llvm.dbg.value(metadata i8* %28, metadata !4014, metadata !DIExpression()), !dbg !4022
  %29 = load i8, i8* %26, align 1, !dbg !4045
  %30 = zext i8 %29 to i32, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %30, metadata !4021, metadata !DIExpression()), !dbg !4022
  %31 = shl nuw nsw i32 %30, 2, !dbg !4046
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4047
  %33 = bitcast i8* %32 to i8**, !dbg !4048
  call void @llvm.dbg.value(metadata i8** %33, metadata !4015, metadata !DIExpression()), !dbg !4022
  store i8* %28, i8** %33, align 4, !dbg !4049
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4050
  %35 = add i32 %34, 1, !dbg !4051
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4052
  call void @llvm.dbg.value(metadata i8* %36, metadata !4014, metadata !DIExpression()), !dbg !4022
  %37 = add nuw nsw i32 %27, 1, !dbg !4053
  call void @llvm.dbg.value(metadata i32 %37, metadata !4016, metadata !DIExpression()), !dbg !4022
  %38 = icmp eq i32 %37, %9, !dbg !4028
  br i1 %38, label %39, label %25, !dbg !4031, !llvm.loop !4054

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4056
  call void @llvm.dbg.value(metadata i8* %40, metadata !4007, metadata !DIExpression()), !dbg !4022
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4057
  %42 = bitcast i8* %41 to i8**, !dbg !4057
  %43 = load i8*, i8** %42, align 1, !dbg !4057
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4058
  br label %45, !dbg !4059

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4022
  ret i32 %46, !dbg !4060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4061 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4065, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4066, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i8* %2, metadata !4067, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i8* %3, metadata !4068, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i8* %4, metadata !4069, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i8* %4, metadata !4070, metadata !DIExpression()), !dbg !4075
  %6 = ptrtoint i8* %4 to i32, !dbg !4076
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4076
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4076
  ret i32 %8, !dbg !4077
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !4078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4082, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i32 %1, metadata !4083, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i8 0, metadata !4085, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i32 0, metadata !4086, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i8 poison, metadata !4085, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i8* %0, metadata !4082, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4087
  %3 = load i8, i8* %0, align 1, !dbg !4088
  call void @llvm.dbg.value(metadata i8 %3, metadata !4084, metadata !DIExpression()), !dbg !4087
  %4 = icmp eq i8 %3, 0, !dbg !4089
  br i1 %4, label %29, label %5, !dbg !4090

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4091
  call void @llvm.dbg.value(metadata i32 %8, metadata !4086, metadata !DIExpression()), !dbg !4087
  br i1 %9, label %11, label %22, !dbg !4092

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4094
  br i1 %12, label %13, label %17, !dbg !4098

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4099
  br i1 %14, label %29, label %15, !dbg !4102

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4103
  br i1 %16, label %29, label %22, !dbg !4105

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4106
  %19 = xor i1 %18, true, !dbg !4108
  %20 = zext i1 %18 to i32, !dbg !4108
  %21 = add nsw i32 %8, %20, !dbg !4108
  br label %22, !dbg !4108

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4087
  call void @llvm.dbg.value(metadata i32 %24, metadata !4086, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i8 poison, metadata !4085, metadata !DIExpression()), !dbg !4087
  %25 = icmp eq i8 %6, 37, !dbg !4109
  %26 = xor i1 %25, %23, !dbg !4111
  call void @llvm.dbg.value(metadata i8* %10, metadata !4082, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i8* %10, metadata !4082, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4087
  %27 = load i8, i8* %10, align 1, !dbg !4088
  call void @llvm.dbg.value(metadata i8 %27, metadata !4084, metadata !DIExpression()), !dbg !4087
  %28 = icmp eq i8 %27, 0, !dbg !4089
  br i1 %28, label %29, label %5, !dbg !4090, !llvm.loop !4112

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4087
  ret i1 %30, !dbg !4114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4115 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4119, metadata !DIExpression()), !dbg !4120
  %2 = add i8 %0, -64, !dbg !4121
  %3 = icmp ult i8 %2, 59, !dbg !4121
  ret i1 %3, !dbg !4122
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4123 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4131, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %1, metadata !4132, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4133, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %3, metadata !4134, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %4, metadata !4135, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i16* %5, metadata !4136, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %6, metadata !4137, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %0, metadata !4138, metadata !DIExpression()), !dbg !4200
  %11 = bitcast i8* %0 to i32*, !dbg !4201
  call void @llvm.dbg.value(metadata i32* %11, metadata !4139, metadata !DIExpression()), !dbg !4200
  %12 = and i32 %4, 8, !dbg !4202
  %13 = icmp eq i32 %12, 0, !dbg !4203
  call void @llvm.dbg.value(metadata i1 %13, metadata !4143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %0, metadata !4146, metadata !DIExpression()), !dbg !4200
  %14 = icmp eq i32 %1, 0, !dbg !4204
  br i1 %14, label %15, label %17, !dbg !4205

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4206
  br label %17, !dbg !4205

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4205
  call void @llvm.dbg.value(metadata i32 %18, metadata !4132, metadata !DIExpression()), !dbg !4200
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4207
  %20 = load i8, i8* %19, align 1, !dbg !4207
  %21 = zext i8 %20 to i32, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %21, metadata !4141, metadata !DIExpression()), !dbg !4200
  %22 = icmp ne i8 %20, 0, !dbg !4209
  %23 = and i32 %4, 1, !dbg !4210
  %24 = icmp ne i32 %23, 0, !dbg !4210
  %25 = and i1 %24, %22, !dbg !4210
  call void @llvm.dbg.value(metadata i1 %25, metadata !4145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4200
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4211
  %27 = load i8, i8* %26, align 1, !dbg !4211
  %28 = zext i8 %27 to i32, !dbg !4212
  call void @llvm.dbg.value(metadata i32 %28, metadata !4142, metadata !DIExpression()), !dbg !4200
  %29 = icmp ne i8 %27, 0, !dbg !4213
  %30 = and i32 %4, 2, !dbg !4214
  %31 = icmp ne i32 %30, 0, !dbg !4214
  %32 = and i1 %31, %29, !dbg !4214
  call void @llvm.dbg.value(metadata i1 %32, metadata !4144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4200
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4215
  br i1 %33, label %38, label %34, !dbg !4215

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4217
  br i1 %35, label %267, label %36, !dbg !4220

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4221
  br label %267, !dbg !4223

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4224
  %40 = zext i8 %39 to i32, !dbg !4225
  %41 = shl nuw nsw i32 %40, 2, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %41, metadata !4140, metadata !DIExpression()), !dbg !4200
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4227
  %43 = bitcast i8* %42 to i8**, !dbg !4228
  %44 = load i8*, i8** %43, align 4, !dbg !4228
  call void @llvm.dbg.value(metadata i8* %44, metadata !4149, metadata !DIExpression()), !dbg !4200
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4229
  call void @llvm.dbg.value(metadata i8* %45, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 0, metadata !4151, metadata !DIExpression()), !dbg !4200
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4230
  br i1 %46, label %47, label %132, !dbg !4231

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4148, metadata !DIExpression()), !dbg !4200
  br i1 %25, label %48, label %73, !dbg !4232

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %45, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 0, metadata !4151, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 0, metadata !4152, metadata !DIExpression()), !dbg !4233
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4234

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %52, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %53, metadata !4151, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %54, metadata !4152, metadata !DIExpression()), !dbg !4233
  %55 = load i8, i8* %52, align 1, !dbg !4235
  %56 = zext i8 %55 to i32, !dbg !4236
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4236
  %58 = bitcast i32* %57 to i8**, !dbg !4237
  %59 = load i8*, i8** %58, align 4, !dbg !4237
  call void @llvm.dbg.value(metadata i8* %59, metadata !4158, metadata !DIExpression()), !dbg !4238
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %60, metadata !4161, metadata !DIExpression()), !dbg !4238
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4240
  br i1 %62, label %63, label %67, !dbg !4240

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4242
  %65 = add nuw i32 %53, 1, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %65, metadata !4151, metadata !DIExpression()), !dbg !4200
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4245
  store i16 %64, i16* %66, align 2, !dbg !4246
  br label %67, !dbg !4247

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4200
  call void @llvm.dbg.value(metadata i32 %68, metadata !4151, metadata !DIExpression()), !dbg !4200
  %69 = add nsw i32 %60, %51, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %69, metadata !4148, metadata !DIExpression()), !dbg !4200
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4249
  call void @llvm.dbg.value(metadata i8* %70, metadata !4150, metadata !DIExpression()), !dbg !4200
  %71 = add nuw nsw i32 %54, 1, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %71, metadata !4152, metadata !DIExpression()), !dbg !4233
  %72 = icmp eq i32 %71, %21, !dbg !4251
  br i1 %72, label %79, label %50, !dbg !4234, !llvm.loop !4252

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4254
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4254
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4254
  br label %79, !dbg !4254

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4257
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4200
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4258
  call void @llvm.dbg.value(metadata i1 undef, metadata !4162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4259
  call void @llvm.dbg.value(metadata i32 0, metadata !4163, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i32 %82, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %81, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %80, metadata !4151, metadata !DIExpression()), !dbg !4200
  %83 = icmp eq i8 %27, 0, !dbg !4261
  br i1 %83, label %267, label %84, !dbg !4262

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4263
  %86 = icmp eq i32 %85, 0, !dbg !4264
  call void @llvm.dbg.value(metadata i1 %86, metadata !4162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4259
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4262

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %93, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %94, metadata !4151, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %95, metadata !4163, metadata !DIExpression()), !dbg !4260
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4265
  call void @llvm.dbg.value(metadata i8* %96, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8 undef, metadata !4165, metadata !DIExpression()), !dbg !4266
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4267
  call void @llvm.dbg.value(metadata i8* %97, metadata !4150, metadata !DIExpression()), !dbg !4200
  %98 = load i8, i8* %96, align 1, !dbg !4268
  call void @llvm.dbg.value(metadata i8 %98, metadata !4168, metadata !DIExpression()), !dbg !4266
  %99 = zext i8 %98 to i32, !dbg !4269
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4269
  %101 = bitcast i32* %100 to i8**, !dbg !4270
  %102 = load i8*, i8** %101, align 4, !dbg !4270
  call void @llvm.dbg.value(metadata i8* %102, metadata !4169, metadata !DIExpression()), !dbg !4266
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4271
  call void @llvm.dbg.value(metadata i1 %103, metadata !4170, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4266
  br i1 %13, label %110, label %104, !dbg !4272

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4274
  call void @llvm.dbg.value(metadata i8 %105, metadata !4165, metadata !DIExpression()), !dbg !4266
  %106 = zext i8 %105 to i32, !dbg !4275
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4276
  br i1 %107, label %108, label %110, !dbg !4277

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4278
  %109 = add nsw i32 %92, -2, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %109, metadata !4148, metadata !DIExpression()), !dbg !4200
  br label %127, !dbg !4285

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4286

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4287

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %113, metadata !4148, metadata !DIExpression()), !dbg !4200
  br label %127, !dbg !4292

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4293

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4196), !dbg !4294
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4295
  call void @llvm.dbg.value(metadata i32 %116, metadata !4171, metadata !DIExpression()), !dbg !4266
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4296
  br i1 %118, label %119, label %123, !dbg !4296

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4298
  %121 = add nuw i32 %94, 1, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %121, metadata !4151, metadata !DIExpression()), !dbg !4200
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4301
  store i16 %120, i16* %122, align 2, !dbg !4302
  br label %123, !dbg !4303

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4200
  call void @llvm.dbg.value(metadata i32 %124, metadata !4151, metadata !DIExpression()), !dbg !4200
  %125 = add i32 %92, -1, !dbg !4304
  %126 = add i32 %125, %116, !dbg !4305
  call void @llvm.dbg.value(metadata i32 %126, metadata !4148, metadata !DIExpression()), !dbg !4200
  br label %127, !dbg !4306

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4200
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4266
  call void @llvm.dbg.value(metadata i32 %129, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %128, metadata !4151, metadata !DIExpression()), !dbg !4200
  %130 = add nuw nsw i32 %95, 1, !dbg !4307
  call void @llvm.dbg.value(metadata i8* %97, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %130, metadata !4163, metadata !DIExpression()), !dbg !4260
  %131 = icmp eq i32 %130, %28, !dbg !4261
  br i1 %131, label %267, label %91, !dbg !4262, !llvm.loop !4308

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4173, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4174, metadata !DIExpression()), !dbg !4311
  br i1 %25, label %133, label %135, !dbg !4312

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4175, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8 0, metadata !4176, metadata !DIExpression()), !dbg !4200
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %134, metadata !4177, metadata !DIExpression()), !dbg !4200
  br label %140, !dbg !4316

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4317
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4317

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4177, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8 undef, metadata !4176, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8 0, metadata !4175, metadata !DIExpression()), !dbg !4200
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4319
  br label %145, !dbg !4322

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4323
  call void @llvm.dbg.value(metadata i8* %148, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 0, metadata !4179, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i8 %146, metadata !4176, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8 %147, metadata !4175, metadata !DIExpression()), !dbg !4200
  %149 = icmp eq i8 %27, 0, !dbg !4325
  br i1 %149, label %150, label %152, !dbg !4326

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4327
  br label %157, !dbg !4326

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4326

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4327
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4328
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4329
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4200
  call void @llvm.dbg.value(metadata i8 undef, metadata !4172, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4200
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4330
  %163 = load i8, i8* %162, align 1, !dbg !4330
  %164 = zext i8 %159 to i32, !dbg !4331
  %165 = add i8 %163, %159, !dbg !4332
  call void @llvm.dbg.value(metadata i8 %165, metadata !4172, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4200
  %166 = icmp eq i32 %30, 0, !dbg !4333
  %167 = lshr i8 %160, 1, !dbg !4334
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4334
  call void @llvm.dbg.value(metadata i8 %168, metadata !4172, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4200
  %169 = icmp eq i32 %23, 0, !dbg !4335
  %170 = icmp eq i32 %158, 0, !dbg !4327
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4327
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4327
  call void @llvm.dbg.value(metadata i8 %172, metadata !4172, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4200
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4187, metadata !DIExpression()), !dbg !4336
  %173 = load i32, i32* %11, align 1, !dbg !4337
  store i8 %165, i8* %162, align 1, !dbg !4338
  store i8 %172, i8* %19, align 1, !dbg !4338
  store i8 %168, i8* %26, align 1, !dbg !4338
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %174, metadata !4178, metadata !DIExpression()), !dbg !4200
  %175 = icmp slt i32 %174, 0, !dbg !4340
  br i1 %175, label %267, label %220, !dbg !4342

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %178, metadata !4179, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i8 %179, metadata !4176, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8 %180, metadata !4175, metadata !DIExpression()), !dbg !4200
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4343
  call void @llvm.dbg.value(metadata i8* %181, metadata !4150, metadata !DIExpression()), !dbg !4200
  %182 = load i8, i8* %177, align 1, !dbg !4344
  call void @llvm.dbg.value(metadata i8 %182, metadata !4181, metadata !DIExpression()), !dbg !4345
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4346
  call void @llvm.dbg.value(metadata i8* %183, metadata !4150, metadata !DIExpression()), !dbg !4200
  %184 = load i8, i8* %181, align 1, !dbg !4347
  call void @llvm.dbg.value(metadata i8 %184, metadata !4184, metadata !DIExpression()), !dbg !4345
  %185 = zext i8 %184 to i32, !dbg !4348
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4348
  %187 = bitcast i32* %186 to i8**, !dbg !4349
  %188 = load i8*, i8** %187, align 4, !dbg !4349
  call void @llvm.dbg.value(metadata i8* %188, metadata !4185, metadata !DIExpression()), !dbg !4345
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4350
  call void @llvm.dbg.value(metadata i1 %189, metadata !4186, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4345
  br i1 %13, label %193, label %190, !dbg !4351

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4353
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4354
  br i1 %192, label %215, label %193, !dbg !4355

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4356

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4357

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4360
  call void @llvm.dbg.value(metadata i8 %196, metadata !4175, metadata !DIExpression()), !dbg !4200
  br label %208, !dbg !4363

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4364

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4365
  call void @llvm.dbg.value(metadata i8 %199, metadata !4176, metadata !DIExpression()), !dbg !4200
  br label %208, !dbg !4368

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4369

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4371
  call void @llvm.dbg.value(metadata i8 %202, metadata !4175, metadata !DIExpression()), !dbg !4200
  br label %208, !dbg !4374

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4375
  call void @llvm.dbg.value(metadata i8 %204, metadata !4176, metadata !DIExpression()), !dbg !4200
  %205 = zext i8 %179 to i32, !dbg !4377
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4377
  store i8 %182, i8* %206, align 1, !dbg !4378
  %207 = add i8 %179, 2, !dbg !4379
  call void @llvm.dbg.value(metadata i8 %207, metadata !4176, metadata !DIExpression()), !dbg !4200
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4380
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4380
  store i8 %184, i8* %214, align 1, !dbg !4380
  br label %215, !dbg !4381

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4200
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4329
  call void @llvm.dbg.value(metadata i8 %217, metadata !4176, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i8 %216, metadata !4175, metadata !DIExpression()), !dbg !4200
  %218 = add nuw nsw i32 %178, 1, !dbg !4381
  call void @llvm.dbg.value(metadata i8* %183, metadata !4150, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %218, metadata !4179, metadata !DIExpression()), !dbg !4324
  %219 = icmp eq i32 %218, %28, !dbg !4325
  br i1 %219, label %157, label %176, !dbg !4326, !llvm.loop !4382

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %174, metadata !4148, metadata !DIExpression()), !dbg !4200
  store i32 %173, i32* %11, align 1, !dbg !4384
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4385
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %223, metadata !4178, metadata !DIExpression()), !dbg !4200
  %224 = icmp slt i32 %223, 0, !dbg !4387
  br i1 %224, label %267, label %225, !dbg !4389

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4200
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4390
  %228 = add nuw nsw i32 %41, %21, !dbg !4390
  %229 = sub i32 %227, %228, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %229, metadata !4188, metadata !DIExpression()), !dbg !4200
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4391
  call void @llvm.dbg.value(metadata i32 %230, metadata !4178, metadata !DIExpression()), !dbg !4200
  %231 = icmp slt i32 %230, 0, !dbg !4392
  br i1 %231, label %267, label %232, !dbg !4394

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %233, metadata !4148, metadata !DIExpression()), !dbg !4200
  %234 = add nuw nsw i32 %233, %230, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %234, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 0, metadata !4189, metadata !DIExpression()), !dbg !4397
  %235 = icmp eq i8 %159, 0, !dbg !4398
  br i1 %235, label %264, label %236, !dbg !4399

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4399

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4189, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.value(metadata i32 %240, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4400
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4401
  %242 = load i8, i8* %241, align 1, !dbg !4401
  call void @llvm.dbg.value(metadata i8 %242, metadata !4191, metadata !DIExpression()), !dbg !4402
  store i8 %242, i8* %10, align 1, !dbg !4403
  %243 = zext i8 %242 to i32, !dbg !4404
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4404
  %245 = bitcast i32* %244 to i8**, !dbg !4405
  %246 = load i8*, i8** %245, align 4, !dbg !4405
  call void @llvm.dbg.value(metadata i8* %246, metadata !4194, metadata !DIExpression()), !dbg !4402
  br i1 %237, label %250, label %247, !dbg !4406

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4407
  %249 = load i16, i16* %248, align 2, !dbg !4407
  br label %250, !dbg !4406

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4406
  call void @llvm.dbg.value(metadata i32 undef, metadata !4195, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4402
  call void @llvm.dbg.value(metadata i8* %10, metadata !4191, metadata !DIExpression(DW_OP_deref)), !dbg !4402
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4408
  call void @llvm.dbg.value(metadata i32 %252, metadata !4178, metadata !DIExpression()), !dbg !4200
  %253 = icmp slt i32 %252, 0, !dbg !4409
  br i1 %253, label %257, label %254, !dbg !4411

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4195, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4200
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %255, metadata !4178, metadata !DIExpression()), !dbg !4200
  %256 = icmp slt i32 %255, 0, !dbg !4413
  br i1 %256, label %257, label %259, !dbg !4415

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4416
  call void @llvm.dbg.value(metadata i32 undef, metadata !4148, metadata !DIExpression()), !dbg !4200
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %260, metadata !4148, metadata !DIExpression()), !dbg !4200
  %261 = add nsw i32 %260, %255, !dbg !4418
  call void @llvm.dbg.value(metadata i32 %261, metadata !4148, metadata !DIExpression()), !dbg !4200
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4416
  %262 = add nuw nsw i32 %239, 1, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %262, metadata !4189, metadata !DIExpression()), !dbg !4397
  %263 = icmp eq i32 %262, %164, !dbg !4398
  br i1 %263, label %264, label %238, !dbg !4399, !llvm.loop !4420

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4396
  call void @llvm.dbg.value(metadata i32 %265, metadata !4148, metadata !DIExpression()), !dbg !4200
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4422
  br label %267, !dbg !4423

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4200
  ret i32 %268, !dbg !4424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4425 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4429, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i8* %0, metadata !4430, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i8* %0, metadata !4431, metadata !DIExpression()), !dbg !4437
  %2 = load i8, i8* %0, align 1, !dbg !4438
  %3 = zext i8 %2 to i32, !dbg !4438
  %4 = shl nuw nsw i32 %3, 2, !dbg !4439
  call void @llvm.dbg.value(metadata i32 %4, metadata !4432, metadata !DIExpression()), !dbg !4437
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4440
  %6 = load i8, i8* %5, align 1, !dbg !4440
  %7 = zext i8 %6 to i32, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %7, metadata !4433, metadata !DIExpression()), !dbg !4437
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4441
  %9 = load i8, i8* %8, align 1, !dbg !4441
  %10 = zext i8 %9 to i32, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %10, metadata !4434, metadata !DIExpression()), !dbg !4437
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4442
  call void @llvm.dbg.value(metadata i8* %11, metadata !4430, metadata !DIExpression()), !dbg !4437
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4443
  call void @llvm.dbg.value(metadata i8* %12, metadata !4430, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i32 0, metadata !4435, metadata !DIExpression()), !dbg !4444
  %13 = icmp eq i8 %6, 0, !dbg !4445
  br i1 %13, label %14, label %19, !dbg !4447

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4437
  %16 = ptrtoint i8* %15 to i32, !dbg !4448
  %17 = ptrtoint i8* %0 to i32, !dbg !4448
  %18 = sub i32 %16, %17, !dbg !4448
  ret i32 %18, !dbg !4449

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4435, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata i8* %21, metadata !4430, metadata !DIExpression()), !dbg !4437
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4450
  call void @llvm.dbg.value(metadata i8* %22, metadata !4430, metadata !DIExpression()), !dbg !4437
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !4452
  %24 = add i32 %23, 1, !dbg !4453
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4454
  call void @llvm.dbg.value(metadata i8* %25, metadata !4430, metadata !DIExpression()), !dbg !4437
  %26 = add nuw nsw i32 %20, 1, !dbg !4455
  call void @llvm.dbg.value(metadata i32 %26, metadata !4435, metadata !DIExpression()), !dbg !4444
  %27 = icmp eq i32 %26, %7, !dbg !4445
  br i1 %27, label %14, label %19, !dbg !4447, !llvm.loop !4456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4458 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4462, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8* %1, metadata !4463, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8* %2, metadata !4464, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i16 %3, metadata !4465, metadata !DIExpression()), !dbg !4466
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4467
  br i1 %5, label %6, label %9, !dbg !4469

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4470
  %8 = add i32 %7, 1, !dbg !4472
  br label %20, !dbg !4473

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4474
  br i1 %10, label %13, label %11, !dbg !4475

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4475
  br label %16, !dbg !4475

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4476
  %15 = add i32 %14, 1, !dbg !4477
  br label %16, !dbg !4475

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4475
  %18 = and i32 %17, 65535, !dbg !4478
  call void @llvm.dbg.value(metadata i32 %17, metadata !4465, metadata !DIExpression()), !dbg !4466
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4479
  br label %20, !dbg !4480

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4466
  ret i32 %21, !dbg !4481
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4484, metadata !DIExpression()), !dbg !4485
  ret i32 0, !dbg !4486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !4487 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4491, metadata !DIExpression()), !dbg !4492
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4493
  ret void, !dbg !4494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !4495 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4498
  ret i8* %1, !dbg !4499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4500 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4511, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i8* %0, metadata !4510, metadata !DIExpression()), !dbg !4520
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !4521
  ret void, !dbg !4523
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4528, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i8* %1, metadata !4529, metadata !DIExpression()), !dbg !4530
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4531
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4531
  ret i32 %4, !dbg !4532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4533 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4537, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i8* %1, metadata !4538, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i8* %2, metadata !4539, metadata !DIExpression()), !dbg !4541
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4542
  ret void, !dbg !4543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4544 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4548, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 %1, metadata !4549, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 0, metadata !4550, metadata !DIExpression()), !dbg !4551
  %3 = icmp eq i32 %1, 0, !dbg !4552
  br i1 %3, label %13, label %4, !dbg !4555

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4550, metadata !DIExpression()), !dbg !4551
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4556
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4558
  %8 = load i8, i8* %7, align 1, !dbg !4558
  %9 = zext i8 %8 to i32, !dbg !4558
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4556
  %11 = add nuw i32 %5, 1, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %11, metadata !4550, metadata !DIExpression()), !dbg !4551
  %12 = icmp eq i32 %11, %1, !dbg !4552
  br i1 %12, label %13, label %4, !dbg !4555, !llvm.loop !4560

13:                                               ; preds = %4, %2
  ret void, !dbg !4562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4563 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4567, metadata !DIExpression()), !dbg !4569
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4570
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4568, metadata !DIExpression()), !dbg !4571
  call void @llvm.va_start(i8* nonnull %3), !dbg !4572
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4573
  %5 = load i32, i32* %4, align 4, !dbg !4573
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4573
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !4573
  call void @llvm.va_end(i8* nonnull %3), !dbg !4574
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4575
  ret void, !dbg !4575
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4576 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4580, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.value(metadata i32 %1, metadata !4581, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.value(metadata i8* %2, metadata !4582, metadata !DIExpression()), !dbg !4585
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4586
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4586
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4583, metadata !DIExpression()), !dbg !4587
  call void @llvm.va_start(i8* nonnull %5), !dbg !4588
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4589
  %7 = load i32, i32* %6, align 4, !dbg !4589
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4589
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %9, metadata !4584, metadata !DIExpression()), !dbg !4585
  call void @llvm.va_end(i8* nonnull %5), !dbg !4590
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4591
  ret i32 %9, !dbg !4592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4593 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4600, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %0, metadata !4597, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %1, metadata !4598, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %2, metadata !4599, metadata !DIExpression()), !dbg !4607
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4608
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4608
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4601, metadata !DIExpression()), !dbg !4609
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4610
  store i8* %0, i8** %7, align 4, !dbg !4610
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4610
  store i32 %1, i32* %8, align 4, !dbg !4610
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4610
  store i32 0, i32* %9, align 4, !dbg !4610
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !4611
  %10 = load i32, i32* %9, align 4, !dbg !4612
  %11 = load i32, i32* %8, align 4, !dbg !4614
  %12 = icmp slt i32 %10, %11, !dbg !4615
  br i1 %12, label %13, label %15, !dbg !4616

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4617
  store i8 0, i8* %14, align 1, !dbg !4619
  br label %15, !dbg !4620

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4621
  ret i32 %10, !dbg !4622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4628, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4629, metadata !DIExpression()), !dbg !4630
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4631
  %4 = load i8*, i8** %3, align 4, !dbg !4631
  %5 = icmp eq i8* %4, null, !dbg !4633
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4634
  br i1 %5, label %12, label %8, !dbg !4635

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4636
  %10 = load i32, i32* %9, align 4, !dbg !4636
  %11 = icmp slt i32 %7, %10, !dbg !4637
  br i1 %11, label %15, label %12, !dbg !4638

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4639
  %14 = add nsw i32 %7, 1, !dbg !4641
  store i32 %14, i32* %13, align 4, !dbg !4641
  br label %25, !dbg !4642

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4643
  %17 = icmp eq i32 %7, %16, !dbg !4645
  br i1 %17, label %18, label %21, !dbg !4646

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4647
  store i32 %19, i32* %6, align 4, !dbg !4647
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4649
  store i8 0, i8* %20, align 1, !dbg !4650
  br label %25, !dbg !4651

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4652
  %23 = add nsw i32 %7, 1, !dbg !4654
  store i32 %23, i32* %6, align 4, !dbg !4654
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4655
  store i8 %22, i8* %24, align 1, !dbg !4656
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4657
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4658 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4663, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8* %1, metadata !4664, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8* %2, metadata !4665, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8* %3, metadata !4666, metadata !DIExpression()), !dbg !4667
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !4668
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !4669
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !4670
  unreachable, !dbg !4671
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4672 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !4776
  ret %struct.k_thread* %1, !dbg !4777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4778 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4782, metadata !DIExpression()), !dbg !4783
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4784, !srcloc !4786
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !4787
  ret void, !dbg !4788
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4789 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4790, !srcloc !4792
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !4793
  ret %struct.k_thread* %1, !dbg !4794
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #12 !dbg !4795 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4806, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.value(metadata i8* %1, metadata !4807, metadata !DIExpression()), !dbg !4810
  %3 = icmp eq i8* %1, null, !dbg !4811
  br i1 %3, label %8, label %4, !dbg !4813

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4814
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4814
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4808, metadata !DIExpression()), !dbg !4810
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4815, !range !4816
  call void @llvm.dbg.value(metadata i32 %7, metadata !4809, metadata !DIExpression()), !dbg !4810
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4817
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4818
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4820 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4824, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i8* %1, metadata !4825, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i8* %1, metadata !4826, metadata !DIExpression()), !dbg !4828
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4829
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4827, metadata !DIExpression()), !dbg !4828
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4830
  %5 = ptrtoint i8* %4 to i32, !dbg !4831
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4831
  %7 = sub i32 %5, %6, !dbg !4831
  %8 = lshr i32 %7, 3, !dbg !4832
  ret i32 %8, !dbg !4833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4834 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4838, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i32 %1, metadata !4839, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i1 %2, metadata !4840, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4843
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4844
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4841, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4843
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4845
  %6 = bitcast i8* %5 to i16*, !dbg !4845
  %7 = load i16, i16* %6, align 2, !dbg !4845
  %8 = and i16 %7, -2, !dbg !4849
  %9 = zext i1 %2 to i16, !dbg !4849
  %10 = or i16 %8, %9, !dbg !4849
  store i16 %10, i16* %6, align 2, !dbg !4845
  ret void, !dbg !4850
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4851 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4855, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.value(metadata i32 %1, metadata !4856, metadata !DIExpression()), !dbg !4857
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4858
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4860
  br i1 %4, label %7, label %5, !dbg !4861

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4862
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4864
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4865
  br label %7, !dbg !4866

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4867, !range !4869
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4870
  br i1 %9, label %13, label %10, !dbg !4871

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4872
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4874, !range !4869
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4875
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4876
  call void @llvm.dbg.value(metadata i32 %12, metadata !4856, metadata !DIExpression()), !dbg !4857
  br label %13, !dbg !4877

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4856, metadata !DIExpression()), !dbg !4857
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4878
  ret void, !dbg !4879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4884, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i32 %1, metadata !4885, metadata !DIExpression()), !dbg !4886
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4887
  %4 = add i32 %3, %1, !dbg !4888
  ret i32 %4, !dbg !4889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4894, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i32 %1, metadata !4895, metadata !DIExpression()), !dbg !4896
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4897
  %4 = and i32 %3, 1, !dbg !4898
  %5 = icmp ne i32 %4, 0, !dbg !4897
  ret i1 %5, !dbg !4899
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4900 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4902, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i32 %1, metadata !4903, metadata !DIExpression()), !dbg !4907
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4908, !range !4909
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %4, metadata !4904, metadata !DIExpression()), !dbg !4911
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4912
  ret void, !dbg !4913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4914 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4918, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.value(metadata i32 %1, metadata !4919, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.value(metadata i32 %2, metadata !4920, metadata !DIExpression()), !dbg !4923
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4924
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4925
  %6 = add i32 %5, %4, !dbg !4926
  call void @llvm.dbg.value(metadata i32 %6, metadata !4921, metadata !DIExpression()), !dbg !4923
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4927
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4928
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4929
  ret void, !dbg !4930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4931 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4933, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %1, metadata !4934, metadata !DIExpression()), !dbg !4935
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4936
  %4 = sub i32 %1, %3, !dbg !4937
  ret i32 %4, !dbg !4938
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4939 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4941, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.value(metadata i32 %1, metadata !4942, metadata !DIExpression()), !dbg !4946
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4947, !range !4909
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4948
  call void @llvm.dbg.value(metadata i32 %4, metadata !4943, metadata !DIExpression()), !dbg !4949
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4950
  ret void, !dbg !4951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4952 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4956, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i32 %1, metadata !4957, metadata !DIExpression()), !dbg !4958
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4959
  %4 = lshr i32 %3, 1, !dbg !4960
  ret i32 %4, !dbg !4961
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4962 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4966, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata i32 %1, metadata !4967, metadata !DIExpression()), !dbg !4969
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4970
  %4 = add i32 %1, 1, !dbg !4971
  %5 = sub i32 %4, %3, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %5, metadata !4968, metadata !DIExpression()), !dbg !4969
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4973, !range !4974
  %7 = sub nsw i32 31, %6, !dbg !4975
  ret i32 %7, !dbg !4976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4977 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4981, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %1, metadata !4982, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %2, metadata !4983, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4984, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4990
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4991
  %5 = load i32, i32* %4, align 4, !dbg !4991
  %6 = icmp eq i32 %5, 0, !dbg !4992
  br i1 %6, label %7, label %12, !dbg !4993

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4994
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4996
  %10 = load i32, i32* %9, align 4, !dbg !4997
  %11 = or i32 %10, %8, !dbg !4997
  store i32 %11, i32* %9, align 4, !dbg !4997
  store i32 %1, i32* %4, align 4, !dbg !4998
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4999
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5000
  br label %14, !dbg !5001

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4986, metadata !DIExpression()), !dbg !5002
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !5003, !range !5004
  call void @llvm.dbg.value(metadata i32 %13, metadata !4989, metadata !DIExpression()), !dbg !5002
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !5005
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5006
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !5007
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !5008
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5010 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5012, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata i32 %1, metadata !5013, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata i32 %2, metadata !5014, metadata !DIExpression()), !dbg !5015
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !5016
  ret void, !dbg !5017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5018 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5020, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i32 %1, metadata !5021, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i32 %2, metadata !5022, metadata !DIExpression()), !dbg !5023
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !5024
  ret void, !dbg !5025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5026 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5028, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i32 %1, metadata !5029, metadata !DIExpression()), !dbg !5030
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !5031
  ret i32 %3, !dbg !5032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !5033 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5037, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i32 %1, metadata !5038, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i32 %2, metadata !5039, metadata !DIExpression()), !dbg !5042
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5043
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5040, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5041, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5042
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5041, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5042
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5044
  call void @llvm.dbg.value(metadata i8* %5, metadata !5041, metadata !DIExpression()), !dbg !5042
  %6 = bitcast i8* %5 to i16*, !dbg !5045
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5048
  %8 = load i16, i16* %7, align 2, !dbg !5048
  %9 = zext i16 %8 to i32, !dbg !5048
  ret i32 %9, !dbg !5049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5050 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5054, metadata !DIExpression()), !dbg !5055
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5056
  ret %struct.chunk_unit_t* %2, !dbg !5057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !5058 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5062, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 %1, metadata !5063, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 %2, metadata !5064, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 %3, metadata !5065, metadata !DIExpression()), !dbg !5068
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5069
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5066, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5067, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5068
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %6, metadata !5067, metadata !DIExpression()), !dbg !5068
  %7 = trunc i32 %3 to i16, !dbg !5071
  %8 = bitcast i8* %6 to i16*, !dbg !5074
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5075
  store i16 %7, i16* %9, align 2, !dbg !5076
  ret void, !dbg !5077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5078 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5082, metadata !DIExpression()), !dbg !5083
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !5084
  ret i32 %2, !dbg !5085
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5086 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %1, metadata !5091, metadata !DIExpression()), !dbg !5092
  %3 = add i32 %1, 4, !dbg !5093
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !5094
  ret i32 %4, !dbg !5095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5100, metadata !DIExpression()), !dbg !5101
  %2 = add i32 %0, 7, !dbg !5102
  %3 = lshr i32 %2, 3, !dbg !5103
  ret i32 %3, !dbg !5104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5105 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5109, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %1, metadata !5110, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %2, metadata !5111, metadata !DIExpression()), !dbg !5112
  %4 = shl i32 %2, 1, !dbg !5113
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !5114
  ret void, !dbg !5115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5116 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5118, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i32 %1, metadata !5119, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i32 %2, metadata !5120, metadata !DIExpression()), !dbg !5121
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !5122
  ret void, !dbg !5123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5124 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5126, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 %1, metadata !5127, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 %2, metadata !5128, metadata !DIExpression()), !dbg !5134
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5135
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5129, metadata !DIExpression()), !dbg !5134
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5136
  %6 = icmp eq i32 %5, %1, !dbg !5137
  br i1 %6, label %7, label %14, !dbg !5138

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5139
  %9 = xor i32 %8, -1, !dbg !5141
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5142
  %11 = load i32, i32* %10, align 4, !dbg !5143
  %12 = and i32 %11, %9, !dbg !5143
  store i32 %12, i32* %10, align 4, !dbg !5143
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5144
  store i32 0, i32* %13, align 4, !dbg !5145
  br label %17, !dbg !5146

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %15, metadata !5130, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.value(metadata i32 %5, metadata !5133, metadata !DIExpression()), !dbg !5148
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5149
  store i32 %5, i32* %16, align 4, !dbg !5150
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !5151
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !5152
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5154 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5156, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.value(metadata i32 %1, metadata !5157, metadata !DIExpression()), !dbg !5158
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !5159
  ret i32 %3, !dbg !5160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #4 !dbg !5161 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5165, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %1, metadata !5166, metadata !DIExpression()), !dbg !5172
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5173
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5173
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5167, metadata !DIExpression()), !dbg !5172
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !5174
  call void @llvm.dbg.value(metadata i32 %5, metadata !5168, metadata !DIExpression()), !dbg !5172
  %6 = ptrtoint i8* %1 to i32, !dbg !5175
  call void @llvm.dbg.value(metadata i32 %6, metadata !5169, metadata !DIExpression()), !dbg !5172
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !5176
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5176
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %9, metadata !5170, metadata !DIExpression()), !dbg !5172
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !5178
  %11 = shl i32 %10, 3, !dbg !5179
  call void @llvm.dbg.value(metadata i32 %11, metadata !5171, metadata !DIExpression()), !dbg !5172
  %12 = sub i32 %9, %6, !dbg !5180
  %13 = add i32 %12, %11, !dbg !5181
  ret i32 %13, !dbg !5182
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5183 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5187, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 %1, metadata !5188, metadata !DIExpression()), !dbg !5193
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5194
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5194
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5189, metadata !DIExpression()), !dbg !5193
  %5 = icmp eq i32 %1, 0, !dbg !5195
  br i1 %5, label %19, label %6, !dbg !5197

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5198
  br i1 %7, label %19, label %8, !dbg !5199

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5200, !range !4816
  call void @llvm.dbg.value(metadata i32 %9, metadata !5191, metadata !DIExpression()), !dbg !5193
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %10, metadata !5192, metadata !DIExpression()), !dbg !5193
  %11 = icmp eq i32 %10, 0, !dbg !5202
  br i1 %11, label %19, label %12, !dbg !5204

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5205
  %14 = icmp ugt i32 %13, %9, !dbg !5207
  br i1 %14, label %15, label %17, !dbg !5208

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5209
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !5211
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !5212
  br label %17, !dbg !5213

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !5214
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5215
  call void @llvm.dbg.value(metadata i8* %18, metadata !5190, metadata !DIExpression()), !dbg !5193
  br label %19, !dbg !5216

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5193
  ret i8* %20, !dbg !5217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5218 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5222, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i32 %1, metadata !5223, metadata !DIExpression()), !dbg !5224
  %3 = lshr i32 %1, 3, !dbg !5225
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5226
  %5 = load i32, i32* %4, align 4, !dbg !5226
  %6 = icmp uge i32 %3, %5, !dbg !5227
  ret i1 %6, !dbg !5228
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5229 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5233, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata i32 %1, metadata !5234, metadata !DIExpression()), !dbg !5248
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5249
  call void @llvm.dbg.value(metadata i32 %3, metadata !5235, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5236, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5248
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5250
  %5 = load i32, i32* %4, align 4, !dbg !5250
  %6 = icmp eq i32 %5, 0, !dbg !5251
  br i1 %6, label %19, label %7, !dbg !5252

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5253
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5254
  call void @llvm.dbg.value(metadata i32 %9, metadata !5240, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i32 %8, metadata !5241, metadata !DIExpression()), !dbg !5255
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5256
  %11 = icmp ult i32 %10, %1, !dbg !5258
  br i1 %11, label %13, label %12, !dbg !5259

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !5260
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5262
  store i32 %14, i32* %4, align 4, !dbg !5263
  %15 = add nsw i32 %9, -1, !dbg !5264
  call void @llvm.dbg.value(metadata i32 %15, metadata !5240, metadata !DIExpression()), !dbg !5254
  %16 = icmp eq i32 %15, 0, !dbg !5264
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5265
  br i1 %18, label %19, label %7, !dbg !5265, !llvm.loop !5266

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5269
  %21 = load i32, i32* %20, align 4, !dbg !5269
  %22 = add nsw i32 %3, 1, !dbg !5270
  %23 = shl nsw i32 -1, %22, !dbg !5270
  %24 = and i32 %21, %23, !dbg !5271
  call void @llvm.dbg.value(metadata i32 %24, metadata !5243, metadata !DIExpression()), !dbg !5248
  %25 = icmp eq i32 %24, 0, !dbg !5272
  br i1 %25, label %30, label %26, !dbg !5273

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5274, !range !4974
  call void @llvm.dbg.value(metadata i32 %27, metadata !5244, metadata !DIExpression()), !dbg !5275
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5276
  %29 = load i32, i32* %28, align 4, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %29, metadata !5247, metadata !DIExpression()), !dbg !5275
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !5277
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5248
  ret i32 %31, !dbg !5278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5279 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5281, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i32 %1, metadata !5282, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i32 %2, metadata !5283, metadata !DIExpression()), !dbg !5287
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %4, metadata !5284, metadata !DIExpression()), !dbg !5287
  %5 = sub i32 %2, %1, !dbg !5289
  call void @llvm.dbg.value(metadata i32 %5, metadata !5285, metadata !DIExpression()), !dbg !5287
  %6 = sub i32 %4, %5, !dbg !5290
  call void @llvm.dbg.value(metadata i32 %6, metadata !5286, metadata !DIExpression()), !dbg !5287
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5291
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !5292
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !5293
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5294
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5295
  ret void, !dbg !5296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5297 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5301, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i32 %1, metadata !5302, metadata !DIExpression()), !dbg !5305
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5306
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5303, metadata !DIExpression()), !dbg !5305
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5307
  call void @llvm.dbg.value(metadata i8* %4, metadata !5304, metadata !DIExpression()), !dbg !5305
  ret i8* %4, !dbg !5308
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5309 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5313, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i32 %1, metadata !5314, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i32 %2, metadata !5315, metadata !DIExpression()), !dbg !5325
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5326
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5316, metadata !DIExpression()), !dbg !5325
  %6 = sub i32 0, %1, !dbg !5327
  %7 = and i32 %6, %1, !dbg !5328
  call void @llvm.dbg.value(metadata i32 %7, metadata !5318, metadata !DIExpression()), !dbg !5325
  %8 = icmp eq i32 %7, %1, !dbg !5329
  br i1 %8, label %13, label %9, !dbg !5331

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5332
  call void @llvm.dbg.value(metadata i32 %10, metadata !5314, metadata !DIExpression()), !dbg !5325
  %11 = icmp ult i32 %7, 4, !dbg !5334
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5334
  br label %17, !dbg !5334

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5335
  br i1 %14, label %15, label %17, !dbg !5338

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !5339
  br label %57, !dbg !5341

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5325
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5342
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5314, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i32 %19, metadata !5317, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i32 %18, metadata !5318, metadata !DIExpression()), !dbg !5325
  %21 = icmp eq i32 %2, 0, !dbg !5343
  br i1 %21, label %57, label %22, !dbg !5345

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !5346
  br i1 %23, label %57, label %24, !dbg !5347

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5348
  %26 = add i32 %25, %20, !dbg !5349
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !5350, !range !4816
  call void @llvm.dbg.value(metadata i32 %27, metadata !5319, metadata !DIExpression()), !dbg !5325
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !5351
  call void @llvm.dbg.value(metadata i32 %28, metadata !5320, metadata !DIExpression()), !dbg !5325
  %29 = icmp eq i32 %28, 0, !dbg !5352
  br i1 %29, label %57, label %30, !dbg !5354

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5355
  call void @llvm.dbg.value(metadata i8* %31, metadata !5321, metadata !DIExpression()), !dbg !5325
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5356
  %33 = ptrtoint i8* %32 to i32, !dbg !5356
  %34 = add i32 %20, -1, !dbg !5356
  %35 = add i32 %34, %33, !dbg !5356
  %36 = sub i32 0, %20, !dbg !5356
  %37 = and i32 %35, %36, !dbg !5356
  %38 = inttoptr i32 %37 to i8*, !dbg !5357
  %39 = sub i32 0, %18, !dbg !5358
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5358
  call void @llvm.dbg.value(metadata i8* %40, metadata !5321, metadata !DIExpression()), !dbg !5325
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5359
  %42 = ptrtoint i8* %41 to i32, !dbg !5359
  %43 = add i32 %42, 7, !dbg !5359
  %44 = and i32 %43, -8, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %44, metadata !5322, metadata !DIExpression()), !dbg !5325
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %45, metadata !5323, metadata !DIExpression()), !dbg !5325
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !5361
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5362
  %48 = sub i32 %44, %47, !dbg !5362
  %49 = ashr exact i32 %48, 3, !dbg !5362
  call void @llvm.dbg.value(metadata i32 %49, metadata !5324, metadata !DIExpression()), !dbg !5325
  %50 = icmp ugt i32 %45, %28, !dbg !5363
  br i1 %50, label %51, label %52, !dbg !5365

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !5366
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5368
  br label %52, !dbg !5369

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !5370
  %54 = icmp ugt i32 %53, %49, !dbg !5372
  br i1 %54, label %55, label %56, !dbg !5373

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !5374
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !5376
  br label %56, !dbg !5377

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !5378
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5325
  ret i8* %58, !dbg !5379
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5380 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5384, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i8* %1, metadata !5385, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %2, metadata !5386, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %3, metadata !5387, metadata !DIExpression()), !dbg !5403
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5404
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5404
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5388, metadata !DIExpression()), !dbg !5403
  %7 = icmp eq i8* %1, null, !dbg !5405
  br i1 %7, label %8, label %10, !dbg !5407

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5408
  br label %59, !dbg !5410

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5411
  br i1 %11, label %12, label %13, !dbg !5413

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5414
  br label %59, !dbg !5416

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !5417
  br i1 %14, label %59, label %15, !dbg !5419

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5420, !range !4816
  call void @llvm.dbg.value(metadata i32 %16, metadata !5389, metadata !DIExpression()), !dbg !5403
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5421
  call void @llvm.dbg.value(metadata i32 %17, metadata !5390, metadata !DIExpression()), !dbg !5403
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5422
  %19 = ptrtoint i8* %1 to i32, !dbg !5423
  %20 = ptrtoint i8* %18 to i32, !dbg !5423
  %21 = sub i32 %19, %20, !dbg !5423
  call void @llvm.dbg.value(metadata i32 %21, metadata !5391, metadata !DIExpression()), !dbg !5403
  %22 = add i32 %21, %3, !dbg !5424
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5425
  call void @llvm.dbg.value(metadata i32 %23, metadata !5392, metadata !DIExpression()), !dbg !5403
  %24 = icmp eq i32 %2, 0, !dbg !5426
  br i1 %24, label %29, label %25, !dbg !5427

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5428
  %27 = and i32 %26, %19, !dbg !5429
  %28 = icmp eq i32 %27, 0, !dbg !5429
  br i1 %28, label %29, label %49, !dbg !5430

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5431
  %31 = icmp eq i32 %23, %30, !dbg !5432
  br i1 %31, label %59, label %32, !dbg !5433

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5434
  br i1 %33, label %34, label %36, !dbg !5435

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5436
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !5438
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5439
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !5440
  br label %59, !dbg !5441

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5442
  br i1 %37, label %49, label %38, !dbg !5443

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5444
  %40 = add i32 %39, %30, !dbg !5445
  %41 = icmp ult i32 %40, %23, !dbg !5446
  br i1 %41, label %49, label %42, !dbg !5447

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5448
  call void @llvm.dbg.value(metadata i32 %43, metadata !5393, metadata !DIExpression()), !dbg !5449
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5450
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5451
  %45 = icmp ult i32 %43, %44, !dbg !5453
  br i1 %45, label %46, label %48, !dbg !5454

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5455
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !5457
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !5458
  br label %48, !dbg !5459

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !5460
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5461
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5462
  call void @llvm.dbg.value(metadata i8* %50, metadata !5399, metadata !DIExpression()), !dbg !5403
  %51 = icmp eq i8* %50, null, !dbg !5463
  br i1 %51, label %59, label %52, !dbg !5464

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5465, !range !4909
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !5466
  %55 = sub i32 %54, %21, !dbg !5467
  call void @llvm.dbg.value(metadata i32 %55, metadata !5400, metadata !DIExpression()), !dbg !5468
  %56 = icmp ult i32 %55, %3, !dbg !5469
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5469
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !5470
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5471
  br label %59, !dbg !5472

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5403
  ret i8* %60, !dbg !5473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5474 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5478, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata i32 %1, metadata !5479, metadata !DIExpression()), !dbg !5480
  %3 = shl i32 %1, 3, !dbg !5481
  %4 = add i32 %3, -4, !dbg !5482
  ret i32 %4, !dbg !5483
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5484 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5488, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i8* %1, metadata !5489, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i32 %2, metadata !5490, metadata !DIExpression()), !dbg !5499
  %4 = add i32 %2, -4, !dbg !5500
  call void @llvm.dbg.value(metadata i32 %4, metadata !5490, metadata !DIExpression()), !dbg !5499
  %5 = ptrtoint i8* %1 to i32, !dbg !5501
  %6 = add i32 %5, 7, !dbg !5501
  %7 = and i32 %6, -8, !dbg !5501
  call void @llvm.dbg.value(metadata i32 %7, metadata !5491, metadata !DIExpression()), !dbg !5499
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5502
  %9 = ptrtoint i8* %8 to i32, !dbg !5502
  %10 = and i32 %9, -8, !dbg !5502
  call void @llvm.dbg.value(metadata i32 %10, metadata !5492, metadata !DIExpression()), !dbg !5499
  %11 = sub i32 %10, %7, !dbg !5503
  %12 = lshr exact i32 %11, 3, !dbg !5504
  call void @llvm.dbg.value(metadata i32 %12, metadata !5493, metadata !DIExpression()), !dbg !5499
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5505
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5494, metadata !DIExpression()), !dbg !5499
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5506
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5507
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5508
  store i32 %12, i32* %15, align 8, !dbg !5509
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5510
  store i32 0, i32* %16, align 4, !dbg !5511
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !5512
  call void @llvm.dbg.value(metadata i32 %17, metadata !5495, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5499
  %18 = shl i32 %17, 2, !dbg !5513
  %19 = add i32 %18, 20, !dbg !5514
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !5515
  call void @llvm.dbg.value(metadata i32 %20, metadata !5496, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i32 0, metadata !5497, metadata !DIExpression()), !dbg !5516
  %21 = icmp slt i32 %17, 0, !dbg !5517
  br i1 %21, label %22, label %24, !dbg !5519

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !5520
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !5521
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !5522
  %23 = sub i32 %12, %20, !dbg !5523
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !5524
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !5525
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !5526
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !5527
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !5528
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !5529
  ret void, !dbg !5530

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5497, metadata !DIExpression()), !dbg !5516
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5531
  store i32 0, i32* %26, align 4, !dbg !5533
  %27 = add nuw i32 %25, 1, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %27, metadata !5497, metadata !DIExpression()), !dbg !5516
  %28 = icmp eq i32 %25, %17, !dbg !5517
  br i1 %28, label %22, label %24, !dbg !5519, !llvm.loop !5535
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5537 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5550, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5547, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i8* %1, metadata !5548, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i8* %2, metadata !5549, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %4, metadata !5551, metadata !DIExpression()), !dbg !5676
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5677
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5677
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5552, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.value(metadata i32 0, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i1 undef, metadata !5558, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5676
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5679

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5679

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5680
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5550, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i8* %30, metadata !5549, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %29, metadata !5556, metadata !DIExpression()), !dbg !5676
  %31 = load i8, i8* %30, align 1, !dbg !5681
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5679

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5681
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5682
  call void @llvm.dbg.value(metadata i8* %34, metadata !5549, metadata !DIExpression()), !dbg !5676
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5682
  call void @llvm.dbg.value(metadata i32 %35, metadata !5560, metadata !DIExpression()), !dbg !5683
  %36 = icmp slt i32 %35, 0, !dbg !5684
  %37 = add i32 %29, 1, !dbg !5682
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %36, label %365, label %28, !llvm.loop !5686

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5688
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5565, metadata !DIExpression()), !dbg !5689
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5689
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5608, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5611, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8* %30, metadata !5614, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i32 -1, metadata !5615, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i32 -1, metadata !5616, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8* null, metadata !5617, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8* %14, metadata !5618, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8 0, metadata !5619, metadata !DIExpression()), !dbg !5690
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5691
  call void @llvm.dbg.value(metadata i8* %39, metadata !5549, metadata !DIExpression()), !dbg !5676
  %40 = load i24, i24* %15, align 8, !dbg !5692
  %41 = and i24 %40, 256, !dbg !5692
  %42 = icmp eq i24 %41, 0, !dbg !5692
  br i1 %42, label %51, label %43, !dbg !5694

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5695
  call void @llvm.dbg.value(metadata i8* %44, metadata !5550, metadata !DIExpression()), !dbg !5676
  %45 = bitcast i8* %27 to i32*, !dbg !5695
  %46 = load i32, i32* %45, align 4, !dbg !5695
  call void @llvm.dbg.value(metadata i32 %46, metadata !5615, metadata !DIExpression()), !dbg !5690
  %47 = icmp slt i32 %46, 0, !dbg !5697
  br i1 %47, label %48, label %56, !dbg !5699

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5700
  store i24 %49, i24* %15, align 8, !dbg !5700
  %50 = sub nsw i32 0, %46, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %50, metadata !5615, metadata !DIExpression()), !dbg !5690
  br label %56, !dbg !5703

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5704
  %53 = icmp eq i24 %52, 0, !dbg !5704
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5706
  br label %56, !dbg !5706

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5707
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5690
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5550, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %58, metadata !5615, metadata !DIExpression()), !dbg !5690
  %60 = and i24 %57, 1024, !dbg !5707
  %61 = icmp eq i24 %60, 0, !dbg !5707
  br i1 %61, label %69, label %62, !dbg !5708

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5709
  call void @llvm.dbg.value(metadata i8* %63, metadata !5550, metadata !DIExpression()), !dbg !5676
  %64 = bitcast i8* %59 to i32*, !dbg !5709
  %65 = load i32, i32* %64, align 4, !dbg !5709
  call void @llvm.dbg.value(metadata i32 %65, metadata !5620, metadata !DIExpression()), !dbg !5710
  %66 = icmp slt i32 %65, 0, !dbg !5711
  br i1 %66, label %67, label %74, !dbg !5713

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5714
  store i24 %68, i24* %15, align 8, !dbg !5714
  br label %74, !dbg !5716

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5717
  %71 = icmp eq i24 %70, 0, !dbg !5717
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5719
  br label %74, !dbg !5719

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5720
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5690
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5690
  call void @llvm.dbg.value(metadata i8* %77, metadata !5550, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %76, metadata !5616, metadata !DIExpression()), !dbg !5690
  store i32 0, i32* %16, align 4, !dbg !5721
  store i32 0, i32* %17, align 8, !dbg !5722
  %78 = lshr i24 %75, 16, !dbg !5720
  call void @llvm.dbg.value(metadata i24 %78, metadata !5623, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5690
  %79 = lshr i24 %75, 11, !dbg !5723
  %80 = and i24 %79, 15, !dbg !5723
  %81 = zext i24 %80 to i32, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %81, metadata !5624, metadata !DIExpression()), !dbg !5690
  %82 = trunc i24 %78 to i3, !dbg !5724
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5724

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5725

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5728
  call void @llvm.dbg.value(metadata i8* %85, metadata !5550, metadata !DIExpression()), !dbg !5676
  %86 = bitcast i8* %77 to i32*, !dbg !5728
  %87 = load i32, i32* %86, align 4, !dbg !5728
  %88 = sext i32 %87 to i64, !dbg !5728
  store i64 %88, i64* %20, align 8, !dbg !5730
  br label %115, !dbg !5731

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5732
  call void @llvm.dbg.value(metadata i8* %90, metadata !5550, metadata !DIExpression()), !dbg !5676
  %91 = bitcast i8* %77 to i32*, !dbg !5732
  %92 = load i32, i32* %91, align 4, !dbg !5732
  %93 = sext i32 %92 to i64, !dbg !5732
  store i64 %93, i64* %20, align 8, !dbg !5735
  br label %115, !dbg !5736

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5737
  %96 = add i32 %95, 7, !dbg !5737
  %97 = and i32 %96, -8, !dbg !5737
  %98 = inttoptr i32 %97 to i8*, !dbg !5737
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5737
  call void @llvm.dbg.value(metadata i8* %99, metadata !5550, metadata !DIExpression()), !dbg !5676
  %100 = inttoptr i32 %97 to i64*, !dbg !5737
  %101 = load i64, i64* %100, align 8, !dbg !5737
  store i64 %101, i64* %20, align 8, !dbg !5738
  br label %115, !dbg !5739

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5740
  %104 = add i32 %103, 7, !dbg !5740
  %105 = and i32 %104, -8, !dbg !5740
  %106 = inttoptr i32 %105 to i8*, !dbg !5740
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5740
  call void @llvm.dbg.value(metadata i8* %107, metadata !5550, metadata !DIExpression()), !dbg !5676
  %108 = inttoptr i32 %105 to i64*, !dbg !5740
  %109 = load i64, i64* %108, align 8, !dbg !5740
  store i64 %109, i64* %20, align 8, !dbg !5741
  br label %115, !dbg !5742

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5743
  call void @llvm.dbg.value(metadata i8* %111, metadata !5550, metadata !DIExpression()), !dbg !5676
  %112 = bitcast i8* %77 to i32*, !dbg !5743
  %113 = load i32, i32* %112, align 4, !dbg !5743
  %114 = sext i32 %113 to i64, !dbg !5744
  store i64 %114, i64* %20, align 8, !dbg !5745
  br label %115, !dbg !5746

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5747
  call void @llvm.dbg.value(metadata i8* %117, metadata !5550, metadata !DIExpression()), !dbg !5676
  %118 = trunc i24 %79 to i4, !dbg !5748
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5748

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5749
  %121 = ashr exact i64 %120, 56, !dbg !5749
  store i64 %121, i64* %20, align 8, !dbg !5752
  br label %177, !dbg !5753

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5754
  %124 = ashr exact i64 %123, 48, !dbg !5754
  store i64 %124, i64* %20, align 8, !dbg !5757
  br label %177, !dbg !5758

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5759

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5762
  call void @llvm.dbg.value(metadata i8* %127, metadata !5550, metadata !DIExpression()), !dbg !5676
  %128 = bitcast i8* %77 to i32*, !dbg !5762
  %129 = load i32, i32* %128, align 4, !dbg !5762
  %130 = zext i32 %129 to i64, !dbg !5762
  store i64 %130, i64* %20, align 8, !dbg !5764
  br label %157, !dbg !5765

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5766
  call void @llvm.dbg.value(metadata i8* %132, metadata !5550, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i8* %132, metadata !5550, metadata !DIExpression()), !dbg !5676
  %133 = bitcast i8* %77 to i32*, !dbg !5766
  %134 = load i32, i32* %133, align 4, !dbg !5766
  %135 = zext i32 %134 to i64, !dbg !5766
  store i64 %135, i64* %20, align 8, !dbg !5766
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5768
  %138 = add i32 %137, 7, !dbg !5768
  %139 = and i32 %138, -8, !dbg !5768
  %140 = inttoptr i32 %139 to i8*, !dbg !5768
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5768
  call void @llvm.dbg.value(metadata i8* %141, metadata !5550, metadata !DIExpression()), !dbg !5676
  %142 = inttoptr i32 %139 to i64*, !dbg !5768
  %143 = load i64, i64* %142, align 8, !dbg !5768
  store i64 %143, i64* %20, align 8, !dbg !5769
  br label %157, !dbg !5770

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5771
  %146 = add i32 %145, 7, !dbg !5771
  %147 = and i32 %146, -8, !dbg !5771
  %148 = inttoptr i32 %147 to i8*, !dbg !5771
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5771
  call void @llvm.dbg.value(metadata i8* %149, metadata !5550, metadata !DIExpression()), !dbg !5676
  %150 = inttoptr i32 %147 to i64*, !dbg !5771
  %151 = load i64, i64* %150, align 8, !dbg !5771
  store i64 %151, i64* %20, align 8, !dbg !5772
  br label %157, !dbg !5773

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5774
  call void @llvm.dbg.value(metadata i8* %153, metadata !5550, metadata !DIExpression()), !dbg !5676
  %154 = bitcast i8* %77 to i32*, !dbg !5774
  %155 = load i32, i32* %154, align 4, !dbg !5774
  %156 = zext i32 %155 to i64, !dbg !5775
  store i64 %156, i64* %20, align 8, !dbg !5776
  br label %157, !dbg !5777

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5778
  call void @llvm.dbg.value(metadata i8* %159, metadata !5550, metadata !DIExpression()), !dbg !5676
  %160 = trunc i24 %79 to i4, !dbg !5779
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5779

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5780
  store i64 %162, i64* %20, align 8, !dbg !5783
  br label %177, !dbg !5784

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5785
  store i64 %164, i64* %20, align 8, !dbg !5788
  br label %177, !dbg !5789

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5790
  %167 = add i32 %166, 7, !dbg !5790
  %168 = and i32 %167, -8, !dbg !5790
  %169 = inttoptr i32 %168 to i8*, !dbg !5790
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5790
  call void @llvm.dbg.value(metadata i8* %170, metadata !5550, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i8* %170, metadata !5550, metadata !DIExpression()), !dbg !5676
  %171 = inttoptr i32 %168 to double*, !dbg !5790
  %172 = load double, double* %171, align 8, !dbg !5790
  store double %172, double* %19, align 8, !dbg !5790
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5794
  call void @llvm.dbg.value(metadata i8* %174, metadata !5550, metadata !DIExpression()), !dbg !5676
  %175 = bitcast i8* %77 to i8**, !dbg !5794
  %176 = load i8*, i8** %175, align 4, !dbg !5794
  store i8* %176, i8** %18, align 8, !dbg !5797
  br label %177, !dbg !5798

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5690
  call void @llvm.dbg.value(metadata i8* %178, metadata !5550, metadata !DIExpression()), !dbg !5676
  %179 = and i24 %75, 3, !dbg !5799
  %180 = icmp eq i24 %179, 0, !dbg !5799
  br i1 %180, label %185, label %181, !dbg !5799

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5800
  call void @llvm.dbg.value(metadata i32 %182, metadata !5625, metadata !DIExpression()), !dbg !5801
  %183 = icmp slt i32 %182, 0, !dbg !5802
  %184 = add i32 %182, %29, !dbg !5800
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5804
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5805

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %188, metadata !5629, metadata !DIExpression()), !dbg !5807
  %189 = icmp slt i32 %188, 0, !dbg !5808
  %190 = add i32 %29, 1, !dbg !5806
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5810
  call void @llvm.dbg.value(metadata i8* %192, metadata !5617, metadata !DIExpression()), !dbg !5690
  %193 = icmp sgt i32 %76, -1, !dbg !5811
  br i1 %193, label %194, label %196, !dbg !5813

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5814
  call void @llvm.dbg.value(metadata i32 %195, metadata !5632, metadata !DIExpression()), !dbg !5816
  br label %241, !dbg !5817

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5818
  call void @llvm.dbg.value(metadata i32 %197, metadata !5632, metadata !DIExpression()), !dbg !5816
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5617, metadata !DIExpression()), !dbg !5690
  %199 = load i64, i64* %20, align 8, !dbg !5820
  %200 = trunc i64 %199 to i8, !dbg !5821
  store i8 %200, i8* %10, align 1, !dbg !5822
  call void @llvm.dbg.value(metadata i8* %23, metadata !5618, metadata !DIExpression()), !dbg !5690
  br label %245, !dbg !5823

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5824
  %203 = icmp eq i24 %202, 0, !dbg !5824
  %204 = trunc i24 %75 to i8, !dbg !5826
  %205 = shl i8 %204, 1, !dbg !5826
  %206 = and i8 %205, 32, !dbg !5826
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5826
  call void @llvm.dbg.value(metadata i8 %207, metadata !5619, metadata !DIExpression()), !dbg !5690
  %208 = load i64, i64* %20, align 8, !dbg !5827
  call void @llvm.dbg.value(metadata i64 %208, metadata !5557, metadata !DIExpression()), !dbg !5676
  %209 = icmp slt i64 %208, 0, !dbg !5828
  br i1 %209, label %210, label %212, !dbg !5830

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5619, metadata !DIExpression()), !dbg !5690
  %211 = sub nsw i64 0, %208, !dbg !5831
  store i64 %211, i64* %20, align 8, !dbg !5833
  br label %212, !dbg !5834

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5690
  call void @llvm.dbg.value(metadata i8 %213, metadata !5619, metadata !DIExpression()), !dbg !5690
  %214 = load i64, i64* %20, align 8, !dbg !5835
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5836
  call void @llvm.dbg.value(metadata i8* %215, metadata !5617, metadata !DIExpression()), !dbg !5690
  br label %216, !dbg !5837

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5838
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5839
  call void @llvm.dbg.value(metadata i8* %218, metadata !5617, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8 %217, metadata !5619, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.label(metadata !5675), !dbg !5840
  %219 = icmp sgt i32 %76, -1, !dbg !5841
  br i1 %219, label %222, label %220, !dbg !5842

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5843
  br label %245, !dbg !5842

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5845
  %224 = sub i32 %22, %223, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %224, metadata !5634, metadata !DIExpression()), !dbg !5846
  %225 = load i24, i24* %15, align 8, !dbg !5847
  %226 = and i24 %225, -65, !dbg !5847
  store i24 %226, i24* %15, align 8, !dbg !5847
  %227 = icmp ugt i32 %76, %224, !dbg !5848
  br i1 %227, label %228, label %245, !dbg !5850

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5851
  store i32 %229, i32* %16, align 4, !dbg !5853
  br label %245, !dbg !5854

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5855
  %232 = icmp eq i8* %231, null, !dbg !5857
  br i1 %232, label %245, label %233, !dbg !5858

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5859
  %235 = zext i32 %234 to i64, !dbg !5859
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5861
  call void @llvm.dbg.value(metadata i8* %236, metadata !5617, metadata !DIExpression()), !dbg !5690
  %237 = load i24, i24* %15, align 8, !dbg !5862
  %238 = or i24 %237, 1048576, !dbg !5862
  store i24 %238, i24* %15, align 8, !dbg !5862
  store i8 120, i8* %21, align 1, !dbg !5863
  br label %216, !dbg !5864

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5865
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5868
  br label %363, !dbg !5869

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5870
  call void @llvm.dbg.value(metadata i32 %242, metadata !5632, metadata !DIExpression()), !dbg !5816
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5871
  call void @llvm.dbg.value(metadata i32 -1, metadata !5616, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i32 %29, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i8* %192, metadata !5617, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8* %243, metadata !5618, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8 0, metadata !5619, metadata !DIExpression()), !dbg !5690
  %244 = icmp eq i8* %192, null, !dbg !5872
  br i1 %244, label %363, label %245, !dbg !5874, !llvm.loop !5686

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5843
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5690
  call void @llvm.dbg.value(metadata i32 0, metadata !5638, metadata !DIExpression()), !dbg !5690
  %250 = zext i8 %249 to i32, !dbg !5875
  %251 = icmp eq i8 %249, 0, !dbg !5877
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5690
  %252 = icmp sgt i32 %58, 0, !dbg !5878
  br i1 %252, label %253, label %302, !dbg !5879

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5843
  %255 = icmp eq i24 %254, 0, !dbg !5843
  %256 = ptrtoint i8* %248 to i32, !dbg !5880
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  %257 = ptrtoint i8* %247 to i32, !dbg !5880
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  %258 = xor i1 %251, true, !dbg !5881
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  %259 = sext i1 %258 to i32, !dbg !5881
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  %260 = lshr i24 %246, 19, !dbg !5882
  %261 = and i24 %260, 1, !dbg !5882
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5882
  %263 = zext i24 %262 to i32, !dbg !5882
  %264 = add i32 %257, %259, !dbg !5882
  %265 = add i32 %256, %263, !dbg !5882
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  %266 = and i24 %246, 4194304, !dbg !5883
  %267 = icmp eq i24 %266, 0, !dbg !5883
  %268 = load i32, i32* %16, align 4, !dbg !5885
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5690
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5690
  %269 = load i32, i32* %17, align 8, !dbg !5886
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5886
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5690
  %271 = add i32 %264, %58, !dbg !5886
  %272 = add i32 %265, %268, !dbg !5886
  %273 = add i32 %272, %270, !dbg !5887
  %274 = sub i32 %271, %273, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %274, metadata !5615, metadata !DIExpression()), !dbg !5690
  %275 = and i24 %246, 4, !dbg !5888
  %276 = icmp eq i24 %275, 0, !dbg !5888
  br i1 %276, label %277, label %302, !dbg !5889

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5639, metadata !DIExpression()), !dbg !5890
  %278 = and i24 %246, 64, !dbg !5891
  %279 = icmp eq i24 %278, 0, !dbg !5891
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5892
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5892
  %282 = select i1 %279, i32 32, i32 48, !dbg !5892
  br i1 %280, label %287, label %283, !dbg !5892

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %284, metadata !5644, metadata !DIExpression()), !dbg !5894
  %285 = icmp slt i32 %284, 0, !dbg !5895
  %286 = add i32 %29, 1, !dbg !5893
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5690
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %290, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i8 undef, metadata !5639, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8 %288, metadata !5619, metadata !DIExpression()), !dbg !5690
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5897
  %292 = add i32 %291, -1, !dbg !5897
  br label %293, !dbg !5897

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5898
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %295, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %294, metadata !5615, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i32 %294, metadata !5615, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5690
  %296 = icmp sgt i32 %294, 0, !dbg !5899
  br i1 %296, label %297, label %302, !dbg !5897

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %298, metadata !5615, metadata !DIExpression()), !dbg !5690
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5901
  call void @llvm.dbg.value(metadata i32 %299, metadata !5650, metadata !DIExpression()), !dbg !5902
  %300 = icmp slt i32 %299, 0, !dbg !5903
  %301 = add i32 %295, 1, !dbg !5901
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %300, label %361, label %293, !llvm.loop !5905

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5690
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5690
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %305, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %304, metadata !5615, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8 %303, metadata !5619, metadata !DIExpression()), !dbg !5690
  %306 = icmp eq i8 %303, 0, !dbg !5907
  br i1 %306, label %312, label %307, !dbg !5908

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5909
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5910
  call void @llvm.dbg.value(metadata i32 %309, metadata !5653, metadata !DIExpression()), !dbg !5911
  %310 = icmp slt i32 %309, 0, !dbg !5912
  %311 = add i32 %305, 1, !dbg !5910
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %313, metadata !5556, metadata !DIExpression()), !dbg !5676
  %314 = lshr i24 %246, 20, !dbg !5914
  %315 = lshr i24 %246, 19, !dbg !5915
  %316 = or i24 %314, %315, !dbg !5916
  %317 = and i24 %316, 1, !dbg !5916
  %318 = icmp eq i24 %317, 0, !dbg !5916
  br i1 %318, label %323, label %319, !dbg !5917

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %320, metadata !5657, metadata !DIExpression()), !dbg !5919
  %321 = icmp slt i32 %320, 0, !dbg !5920
  %322 = add i32 %313, 1, !dbg !5918
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %324, metadata !5556, metadata !DIExpression()), !dbg !5676
  %325 = and i24 %246, 1048576, !dbg !5922
  %326 = icmp eq i24 %325, 0, !dbg !5922
  br i1 %326, label %333, label %327, !dbg !5923

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5924
  %329 = zext i8 %328 to i32, !dbg !5924
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %330, metadata !5663, metadata !DIExpression()), !dbg !5925
  %331 = icmp slt i32 %330, 0, !dbg !5926
  %332 = add i32 %324, 1, !dbg !5924
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %334, metadata !5556, metadata !DIExpression()), !dbg !5676
  %335 = load i32, i32* %16, align 4, !dbg !5928
  call void @llvm.dbg.value(metadata i32 %335, metadata !5638, metadata !DIExpression()), !dbg !5690
  br label %336, !dbg !5929

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5930
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %338, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %337, metadata !5638, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5690
  %339 = icmp sgt i32 %337, 0, !dbg !5931
  br i1 %339, label %340, label %345, !dbg !5929

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %341, metadata !5638, metadata !DIExpression()), !dbg !5690
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %342, metadata !5667, metadata !DIExpression()), !dbg !5934
  %343 = icmp slt i32 %342, 0, !dbg !5935
  %344 = add i32 %338, 1, !dbg !5933
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %343, label %361, label %336, !llvm.loop !5937

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5939
  call void @llvm.dbg.value(metadata i32 %346, metadata !5670, metadata !DIExpression()), !dbg !5940
  %347 = icmp slt i32 %346, 0, !dbg !5941
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5939
  call void @llvm.dbg.value(metadata i32 %349, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %304, metadata !5615, metadata !DIExpression()), !dbg !5690
  %350 = icmp sgt i32 %304, 0, !dbg !5943
  br i1 %350, label %351, label %363, !dbg !5944

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5944
  %353 = add i32 %352, %338, !dbg !5944
  br label %354, !dbg !5944

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %355, metadata !5615, metadata !DIExpression()), !dbg !5690
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %356, metadata !5672, metadata !DIExpression()), !dbg !5946
  %357 = icmp slt i32 %356, 0, !dbg !5947
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5949
  call void @llvm.dbg.value(metadata i32 undef, metadata !5556, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %359, metadata !5615, metadata !DIExpression()), !dbg !5690
  %360 = icmp sgt i32 %355, 1, !dbg !5943
  br i1 %360, label %354, label %363, !dbg !5944, !llvm.loop !5950

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5687
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %364, metadata !5556, metadata !DIExpression()), !dbg !5676
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5687
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5676
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5952
  ret i32 %366, !dbg !5952
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !5953 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5957, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.value(metadata i8* %1, metadata !5958, metadata !DIExpression()), !dbg !5959
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5960
  store i24 0, i24* %3, align 4, !dbg !5960
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5960
  store i8 0, i8* %4, align 1, !dbg !5960
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5960
  store i32 0, i32* %5, align 4, !dbg !5960
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5960
  store i32 0, i32* %6, align 4, !dbg !5960
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5961
  call void @llvm.dbg.value(metadata i8* %7, metadata !5958, metadata !DIExpression()), !dbg !5959
  %8 = load i8, i8* %7, align 1, !dbg !5962
  %9 = icmp eq i8 %8, 37, !dbg !5964
  br i1 %9, label %10, label %12, !dbg !5965

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5966
  call void @llvm.dbg.value(metadata i8* %11, metadata !5958, metadata !DIExpression()), !dbg !5959
  store i8 37, i8* %4, align 1, !dbg !5968
  br label %18, !dbg !5969

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5970
  call void @llvm.dbg.value(metadata i8* %13, metadata !5958, metadata !DIExpression()), !dbg !5959
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5971
  call void @llvm.dbg.value(metadata i8* %14, metadata !5958, metadata !DIExpression()), !dbg !5959
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5972
  call void @llvm.dbg.value(metadata i8* %15, metadata !5958, metadata !DIExpression()), !dbg !5959
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5973
  call void @llvm.dbg.value(metadata i8* %16, metadata !5958, metadata !DIExpression()), !dbg !5959
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5974
  call void @llvm.dbg.value(metadata i8* %17, metadata !5958, metadata !DIExpression()), !dbg !5959
  br label %18, !dbg !5975

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5959
  ret i8* %19, !dbg !5976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5977 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5981, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i8* %1, metadata !5982, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i8* %2, metadata !5983, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i8* %3, metadata !5984, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i32 0, metadata !5985, metadata !DIExpression()), !dbg !5988
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5989

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5990
  call void @llvm.dbg.value(metadata i32 %9, metadata !5985, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i8* %8, metadata !5983, metadata !DIExpression()), !dbg !5988
  %10 = icmp ult i8* %8, %3, !dbg !5991
  br i1 %10, label %11, label %13, !dbg !5992

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5993
  br label %17, !dbg !5992

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5994

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5995
  %16 = icmp eq i8 %15, 0, !dbg !5994
  br i1 %16, label %24, label %17, !dbg !5989

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5993
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5996
  call void @llvm.dbg.value(metadata i8* %19, metadata !5983, metadata !DIExpression()), !dbg !5988
  %20 = zext i8 %18 to i32, !dbg !5997
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5998
  call void @llvm.dbg.value(metadata i32 %21, metadata !5986, metadata !DIExpression()), !dbg !5999
  %22 = icmp slt i32 %21, 0, !dbg !6000
  %23 = add i32 %9, 1, !dbg !6002
  call void @llvm.dbg.value(metadata i32 undef, metadata !5985, metadata !DIExpression()), !dbg !5988
  br i1 %22, label %24, label %7, !llvm.loop !6003

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5988
  ret i32 %25, !dbg !6005
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6006 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6010, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6011, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8* %2, metadata !6012, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8* %3, metadata !6013, metadata !DIExpression()), !dbg !6020
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6021
  %6 = load i8, i8* %5, align 1, !dbg !6021
  %7 = zext i8 %6 to i32, !dbg !6022
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !6023
  %9 = icmp eq i32 %8, 0, !dbg !6023
  call void @llvm.dbg.value(metadata i1 %9, metadata !6014, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6020
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !6024
  call void @llvm.dbg.value(metadata i32 %10, metadata !6015, metadata !DIExpression()), !dbg !6020
  %11 = ptrtoint i8* %3 to i32, !dbg !6025
  %12 = ptrtoint i8* %2 to i32, !dbg !6025
  %13 = sub i32 %11, %12, !dbg !6025
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6026
  call void @llvm.dbg.value(metadata i8* %14, metadata !6017, metadata !DIExpression()), !dbg !6020
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6027

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6020
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6010, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8* %18, metadata !6017, metadata !DIExpression()), !dbg !6020
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6028
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6029
  call void @llvm.dbg.value(metadata i32 %25, metadata !6018, metadata !DIExpression()), !dbg !6030
  %26 = icmp ult i32 %25, 10, !dbg !6031
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6032
  %28 = add i32 %27, %25, !dbg !6030
  %29 = trunc i32 %28 to i8, !dbg !6032
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6033
  call void @llvm.dbg.value(metadata i8* %30, metadata !6017, metadata !DIExpression()), !dbg !6020
  store i8 %29, i8* %30, align 1, !dbg !6034
  call void @llvm.dbg.value(metadata i64 %22, metadata !6010, metadata !DIExpression()), !dbg !6020
  %31 = icmp uge i64 %19, %15, !dbg !6035
  %32 = icmp ugt i8* %30, %2, !dbg !6036
  %33 = and i1 %31, %32, !dbg !6036
  br i1 %33, label %17, label %34, !dbg !6037, !llvm.loop !6038

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6040
  %36 = load i24, i24* %35, align 4, !dbg !6040
  %37 = and i24 %36, 32, !dbg !6040
  %38 = icmp eq i24 %37, 0, !dbg !6040
  br i1 %38, label %44, label %39, !dbg !6042

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6043

40:                                               ; preds = %39
  br label %41, !dbg !6045

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6049
  store i24 %43, i24* %35, align 4, !dbg !6049
  br label %44, !dbg !6050

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6051 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6057, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i8* %1, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 %2, metadata !6059, metadata !DIExpression()), !dbg !6060
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6061
  %5 = load i24, i24* %4, align 4, !dbg !6061
  %6 = lshr i24 %5, 11, !dbg !6061
  %7 = and i24 %6, 15, !dbg !6061
  %8 = zext i24 %7 to i32, !dbg !6061
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6062

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6063
  store i32 %2, i32* %10, align 4, !dbg !6065
  br label %28, !dbg !6066

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6067
  store i8 %12, i8* %1, align 1, !dbg !6068
  br label %28, !dbg !6069

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6070
  %15 = bitcast i8* %1 to i16*, !dbg !6071
  store i16 %14, i16* %15, align 2, !dbg !6072
  br label %28, !dbg !6073

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6074
  store i32 %2, i32* %17, align 4, !dbg !6075
  br label %28, !dbg !6076

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6077
  %20 = bitcast i8* %1 to i64*, !dbg !6078
  store i64 %19, i64* %20, align 8, !dbg !6079
  br label %28, !dbg !6080

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6081
  %23 = bitcast i8* %1 to i64*, !dbg !6082
  store i64 %22, i64* %23, align 8, !dbg !6083
  br label %28, !dbg !6084

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6085
  store i32 %2, i32* %25, align 4, !dbg !6086
  br label %28, !dbg !6087

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6088
  store i32 %2, i32* %27, align 4, !dbg !6089
  br label %28, !dbg !6090

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6091
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6095, metadata !DIExpression()), !dbg !6096
  %2 = add i32 %0, -65, !dbg !6097
  %3 = icmp ult i32 %2, 26, !dbg !6098
  %4 = zext i1 %3 to i32, !dbg !6098
  ret i32 %4, !dbg !6099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6100 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6104, metadata !DIExpression()), !dbg !6105
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6106

2:                                                ; preds = %1
  br label %4, !dbg !6107

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6109

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6110
  ret i32 %5, !dbg !6111
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6112 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6114, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata i8* %1, metadata !6115, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata i8 1, metadata !6116, metadata !DIExpression()), !dbg !6117
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6118

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata i8* %5, metadata !6115, metadata !DIExpression()), !dbg !6117
  %6 = load i8, i8* %5, align 1, !dbg !6119
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6121

7:                                                ; preds = %4
  br label %11, !dbg !6122

8:                                                ; preds = %4
  br label %11, !dbg !6124

9:                                                ; preds = %4
  br label %11, !dbg !6125

10:                                               ; preds = %4
  br label %11, !dbg !6126

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6127
  %14 = or i24 %13, %12, !dbg !6127
  store i24 %14, i24* %3, align 4, !dbg !6127
  call void @llvm.dbg.value(metadata i8 poison, metadata !6116, metadata !DIExpression()), !dbg !6117
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6115, metadata !DIExpression()), !dbg !6117
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata i8* %15, metadata !6115, metadata !DIExpression()), !dbg !6117
  %17 = load i24, i24* %3, align 4, !dbg !6128
  %18 = and i24 %17, 68, !dbg !6130
  %19 = icmp eq i24 %18, 68, !dbg !6130
  br i1 %19, label %20, label %22, !dbg !6130

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6131
  store i24 %21, i24* %3, align 4, !dbg !6131
  br label %22, !dbg !6133

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6134
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6135 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6137, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8* %1, metadata !6138, metadata !DIExpression()), !dbg !6141
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6142
  %5 = load i24, i24* %4, align 4, !dbg !6143
  %6 = or i24 %5, 128, !dbg !6143
  store i24 %6, i24* %4, align 4, !dbg !6143
  call void @llvm.dbg.value(metadata i8* %1, metadata !6138, metadata !DIExpression()), !dbg !6141
  %7 = load i8, i8* %1, align 1, !dbg !6144
  %8 = icmp eq i8 %7, 42, !dbg !6146
  br i1 %8, label %9, label %12, !dbg !6147

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6148
  store i24 %10, i24* %4, align 4, !dbg !6148
  call void @llvm.dbg.value(metadata i8* %1, metadata !6138, metadata !DIExpression()), !dbg !6141
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6150
  call void @llvm.dbg.value(metadata i8* %11, metadata !6138, metadata !DIExpression()), !dbg !6141
  store i8* %11, i8** %3, align 4, !dbg !6150
  br label %29, !dbg !6151

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6139, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8** %3, metadata !6138, metadata !DIExpression(DW_OP_deref)), !dbg !6141
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6152
  call void @llvm.dbg.value(metadata i32 %13, metadata !6140, metadata !DIExpression()), !dbg !6141
  %14 = load i8*, i8** %3, align 4, !dbg !6153
  call void @llvm.dbg.value(metadata i8* %14, metadata !6138, metadata !DIExpression()), !dbg !6141
  %15 = icmp eq i8* %14, %1, !dbg !6155
  br i1 %15, label %29, label %16, !dbg !6156

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6157
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6159
  store i32 %13, i32* %18, align 4, !dbg !6160
  %19 = lshr i32 %13, 31, !dbg !6161
  %20 = lshr i24 %17, 1, !dbg !6162
  %21 = and i24 %20, 1, !dbg !6162
  %22 = zext i24 %21 to i32, !dbg !6162
  %23 = or i32 %19, %22, !dbg !6162
  %24 = trunc i32 %23 to i24, !dbg !6162
  %25 = shl nuw nsw i24 %24, 1, !dbg !6162
  %26 = and i24 %17, -131, !dbg !6162
  %27 = or i24 %26, 128, !dbg !6162
  %28 = or i24 %25, %27, !dbg !6162
  store i24 %28, i24* %4, align 4, !dbg !6162
  br label %29, !dbg !6163

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6141
  ret i8* %30, !dbg !6164
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6165 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6167, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i8* %1, metadata !6168, metadata !DIExpression()), !dbg !6170
  %4 = load i8, i8* %1, align 1, !dbg !6171
  %5 = icmp eq i8 %4, 46, !dbg !6172
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6173
  %7 = load i24, i24* %6, align 4, !dbg !6174
  %8 = select i1 %5, i24 512, i24 0, !dbg !6174
  %9 = and i24 %7, -513, !dbg !6174
  %10 = or i24 %9, %8, !dbg !6174
  store i24 %10, i24* %6, align 4, !dbg !6174
  br i1 %5, label %11, label %32, !dbg !6175

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6168, metadata !DIExpression()), !dbg !6170
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6176
  call void @llvm.dbg.value(metadata i8* %12, metadata !6168, metadata !DIExpression()), !dbg !6170
  store i8* %12, i8** %3, align 4, !dbg !6176
  %13 = load i8, i8* %12, align 1, !dbg !6177
  %14 = icmp eq i8 %13, 42, !dbg !6179
  br i1 %14, label %15, label %18, !dbg !6180

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6181
  store i24 %16, i24* %6, align 4, !dbg !6181
  call void @llvm.dbg.value(metadata i8* %12, metadata !6168, metadata !DIExpression()), !dbg !6170
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6183
  call void @llvm.dbg.value(metadata i8* %17, metadata !6168, metadata !DIExpression()), !dbg !6170
  store i8* %17, i8** %3, align 4, !dbg !6183
  br label %32, !dbg !6184

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6168, metadata !DIExpression(DW_OP_deref)), !dbg !6170
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6185
  call void @llvm.dbg.value(metadata i32 %19, metadata !6169, metadata !DIExpression()), !dbg !6170
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6186
  store i32 %19, i32* %20, align 4, !dbg !6187
  %21 = lshr i32 %19, 31, !dbg !6188
  %22 = load i24, i24* %6, align 4, !dbg !6189
  %23 = lshr i24 %22, 1, !dbg !6189
  %24 = and i24 %23, 1, !dbg !6189
  %25 = zext i24 %24 to i32, !dbg !6189
  %26 = or i32 %21, %25, !dbg !6189
  %27 = trunc i32 %26 to i24, !dbg !6189
  %28 = shl nuw nsw i24 %27, 1, !dbg !6189
  %29 = and i24 %22, -3, !dbg !6189
  %30 = or i24 %28, %29, !dbg !6189
  store i24 %30, i24* %6, align 4, !dbg !6189
  %31 = load i8*, i8** %3, align 4, !dbg !6190
  call void @llvm.dbg.value(metadata i8* %31, metadata !6168, metadata !DIExpression()), !dbg !6170
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6170
  ret i8* %33, !dbg !6191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6192 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6194, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i8* %1, metadata !6195, metadata !DIExpression()), !dbg !6196
  %3 = load i8, i8* %1, align 1, !dbg !6197
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6198

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6199
  call void @llvm.dbg.value(metadata i8* %5, metadata !6195, metadata !DIExpression()), !dbg !6196
  %6 = load i8, i8* %5, align 1, !dbg !6202
  %7 = icmp eq i8 %6, 104, !dbg !6203
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6204
  %9 = load i24, i24* %8, align 4, !dbg !6204
  %10 = and i24 %9, -30721, !dbg !6204
  br i1 %7, label %11, label %14, !dbg !6205

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6206
  store i24 %12, i24* %8, align 4, !dbg !6206
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6208
  call void @llvm.dbg.value(metadata i8* %13, metadata !6195, metadata !DIExpression()), !dbg !6196
  br label %56, !dbg !6209

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6210
  store i24 %15, i24* %8, align 4, !dbg !6210
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6212
  call void @llvm.dbg.value(metadata i8* %17, metadata !6195, metadata !DIExpression()), !dbg !6196
  %18 = load i8, i8* %17, align 1, !dbg !6214
  %19 = icmp eq i8 %18, 108, !dbg !6215
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6216
  %21 = load i24, i24* %20, align 4, !dbg !6216
  %22 = and i24 %21, -30721, !dbg !6216
  br i1 %19, label %23, label %26, !dbg !6217

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6218
  store i24 %24, i24* %20, align 4, !dbg !6218
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6220
  call void @llvm.dbg.value(metadata i8* %25, metadata !6195, metadata !DIExpression()), !dbg !6196
  br label %56, !dbg !6221

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6222
  store i24 %27, i24* %20, align 4, !dbg !6222
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6224
  %30 = load i24, i24* %29, align 4, !dbg !6225
  %31 = and i24 %30, -30721, !dbg !6225
  %32 = or i24 %31, 10240, !dbg !6225
  store i24 %32, i24* %29, align 4, !dbg !6225
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6226
  call void @llvm.dbg.value(metadata i8* %33, metadata !6195, metadata !DIExpression()), !dbg !6196
  br label %56, !dbg !6227

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6228
  %36 = load i24, i24* %35, align 4, !dbg !6229
  %37 = and i24 %36, -30721, !dbg !6229
  %38 = or i24 %37, 12288, !dbg !6229
  store i24 %38, i24* %35, align 4, !dbg !6229
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6230
  call void @llvm.dbg.value(metadata i8* %39, metadata !6195, metadata !DIExpression()), !dbg !6196
  br label %56, !dbg !6231

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6232
  %42 = load i24, i24* %41, align 4, !dbg !6233
  %43 = and i24 %42, -30721, !dbg !6233
  %44 = or i24 %43, 14336, !dbg !6233
  store i24 %44, i24* %41, align 4, !dbg !6233
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6234
  call void @llvm.dbg.value(metadata i8* %45, metadata !6195, metadata !DIExpression()), !dbg !6196
  br label %56, !dbg !6235

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6236
  %48 = load i24, i24* %47, align 4, !dbg !6237
  %49 = and i24 %48, -30723, !dbg !6237
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6238
  call void @llvm.dbg.value(metadata i8* %50, metadata !6195, metadata !DIExpression()), !dbg !6196
  %51 = or i24 %49, 16386, !dbg !6239
  store i24 %51, i24* %47, align 4, !dbg !6239
  br label %56, !dbg !6240

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6241
  %54 = load i24, i24* %53, align 4, !dbg !6242
  %55 = and i24 %54, -30721, !dbg !6242
  store i24 %55, i24* %53, align 4, !dbg !6242
  br label %56, !dbg !6243

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6195, metadata !DIExpression()), !dbg !6196
  ret i8* %57, !dbg !6244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6245 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6247, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata i8* %1, metadata !6248, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata i8 0, metadata !6249, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata i8* %1, metadata !6248, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6252
  %3 = load i8, i8* %1, align 1, !dbg !6253
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6254
  store i8 %3, i8* %4, align 1, !dbg !6255
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6256

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6257

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6258
  %9 = load i24, i24* %8, align 4, !dbg !6258
  %10 = and i24 %9, -458753, !dbg !6258
  %11 = or i24 %10, %7, !dbg !6258
  call void @llvm.dbg.label(metadata !6250), !dbg !6259
  %12 = and i24 %9, 30720, !dbg !6260
  %13 = icmp eq i24 %12, 16384, !dbg !6260
  %14 = zext i1 %13 to i24, !dbg !6262
  %15 = or i24 %11, %14, !dbg !6262
  %16 = icmp eq i8 %3, 99, !dbg !6263
  br i1 %16, label %17, label %43, !dbg !6265

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6266
  %19 = icmp ne i24 %18, 0, !dbg !6266
  call void @llvm.dbg.value(metadata i1 %19, metadata !6249, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6252
  br label %43, !dbg !6268

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6269
  %22 = load i24, i24* %21, align 4, !dbg !6270
  %23 = and i24 %22, -458753, !dbg !6270
  %24 = or i24 %23, 262144, !dbg !6270
  call void @llvm.dbg.value(metadata i8 1, metadata !6249, metadata !DIExpression()), !dbg !6252
  br label %43, !dbg !6271

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6274
  %27 = load i24, i24* %26, align 4, !dbg !6275
  %28 = and i24 %27, -458753, !dbg !6275
  %29 = or i24 %28, 196608, !dbg !6275
  %30 = and i24 %27, 30720, !dbg !6276
  %31 = icmp eq i24 %30, 16384, !dbg !6276
  br label %43, !dbg !6278

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6279
  %34 = load i24, i24* %33, align 4, !dbg !6280
  %35 = and i24 %34, -458753, !dbg !6280
  %36 = or i24 %35, 196608, !dbg !6280
  %37 = and i24 %34, 30720, !dbg !6281
  %38 = icmp ne i24 %37, 0, !dbg !6281
  br label %43, !dbg !6283

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6284
  %41 = load i24, i24* %40, align 4, !dbg !6285
  %42 = or i24 %41, 1, !dbg !6285
  br label %43, !dbg !6286

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6287
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6288
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6289
  call void @llvm.dbg.value(metadata i8* %48, metadata !6248, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata i8 poison, metadata !6249, metadata !DIExpression()), !dbg !6252
  %49 = lshr i24 %44, 1, !dbg !6287
  %50 = and i24 %49, 1, !dbg !6287
  %51 = zext i24 %50 to i32, !dbg !6287
  %52 = or i32 %51, %47, !dbg !6287
  %53 = trunc i32 %52 to i24, !dbg !6287
  %54 = shl nuw nsw i24 %53, 1, !dbg !6287
  %55 = and i24 %44, -3, !dbg !6287
  %56 = or i24 %54, %55, !dbg !6287
  store i24 %56, i24* %46, align 4, !dbg !6287
  ret i8* %48, !dbg !6290
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6291 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6295, metadata !DIExpression()), !dbg !6298
  %2 = load i8*, i8** %0, align 4, !dbg !6299
  call void @llvm.dbg.value(metadata i8* %2, metadata !6296, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i32 0, metadata !6297, metadata !DIExpression()), !dbg !6298
  %3 = load i8, i8* %2, align 1, !dbg !6300
  %4 = zext i8 %3 to i32, !dbg !6301
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6302
  %6 = icmp eq i32 %5, 0, !dbg !6303
  br i1 %6, label %19, label %7, !dbg !6303

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6297, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i8* %10, metadata !6296, metadata !DIExpression()), !dbg !6298
  %11 = mul i32 %9, 10, !dbg !6304
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6306
  call void @llvm.dbg.value(metadata i8* %12, metadata !6296, metadata !DIExpression()), !dbg !6298
  %13 = add i32 %11, -48, !dbg !6307
  %14 = add i32 %13, %8, !dbg !6308
  call void @llvm.dbg.value(metadata i32 %14, metadata !6297, metadata !DIExpression()), !dbg !6298
  %15 = load i8, i8* %12, align 1, !dbg !6300
  %16 = zext i8 %15 to i32, !dbg !6301
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6302
  %18 = icmp eq i32 %17, 0, !dbg !6303
  br i1 %18, label %19, label %7, !dbg !6303, !llvm.loop !6309

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6298
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6298
  store i8* %20, i8** %0, align 4, !dbg !6311
  ret i32 %21, !dbg !6312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6315, metadata !DIExpression()), !dbg !6316
  %2 = add i32 %0, -48, !dbg !6317
  %3 = icmp ult i32 %2, 10, !dbg !6318
  %4 = zext i1 %3 to i32, !dbg !6318
  ret i32 %4, !dbg !6319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6320 {
  tail call void asm sideeffect ".globl\09CONFIG_BM_MESSAGE_SIZE\0A\09.equ\09CONFIG_BM_MESSAGE_SIZE,256\0A\09.type\09CONFIG_BM_MESSAGE_SIZE,%object", ""() #25, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_BM_ONE_TO\0A\09.equ\09CONFIG_BM_ONE_TO,8\0A\09.type\09CONFIG_BM_ONE_TO,%object", ""() #25, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #25, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6950, !srcloc !6951
  ret void, !dbg !6952
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6955, metadata !DIExpression()), !dbg !6957
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6958
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6959
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6960, !srcloc !6969
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6960
  call void @llvm.dbg.value(metadata i32 %3, metadata !6966, metadata !DIExpression()) #25, !dbg !6970
  call void @llvm.dbg.value(metadata i32 undef, metadata !6967, metadata !DIExpression()) #25, !dbg !6970
  call void @llvm.dbg.value(metadata i32 %3, metadata !6956, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %3, metadata !6971, metadata !DIExpression()) #25, !dbg !6976
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6978, !srcloc !6979
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6980
  ret i32 0, !dbg !6981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #16 !dbg !6982 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6984
  %2 = or i32 %1, 512, !dbg !6984
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6984
  ret void, !dbg !6985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #16 !dbg !6986 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6987
  %2 = or i32 %1, 1024, !dbg !6987
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6987
  ret void, !dbg !6988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !6989 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6991, metadata !DIExpression()), !dbg !6992
  ret i32 0, !dbg !6993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6994 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6997, metadata !DIExpression()), !dbg !7005
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7006
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6998, metadata !DIExpression()), !dbg !7007
  call void @llvm.va_start(i8* nonnull %3), !dbg !7008
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7009
  %5 = load i32, i32* %4, align 4, !dbg !7009
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7009
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7009
  call void @llvm.va_end(i8* nonnull %3), !dbg !7010
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7011
  ret void, !dbg !7011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7012 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7017, metadata !DIExpression()), !dbg !7018
  call void @llvm.dbg.value(metadata i8* %0, metadata !7016, metadata !DIExpression()), !dbg !7018
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7019
  ret void, !dbg !7020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7025, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.value(metadata i8* %1, metadata !7026, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.value(metadata i32 %2, metadata !7027, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.value(metadata i8* %1, metadata !7028, metadata !DIExpression()), !dbg !7029
  %4 = icmp eq i32 %2, 0, !dbg !7030
  br i1 %4, label %14, label %5, !dbg !7031

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) #26, !dbg !7029
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7031

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7028, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.value(metadata i32 %10, metadata !7027, metadata !DIExpression()), !dbg !7029
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 noundef %7) #27, !dbg !7032
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7034
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7035
  call void @llvm.dbg.value(metadata i32 %11, metadata !7027, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.value(metadata i8* %12, metadata !7028, metadata !DIExpression()), !dbg !7029
  br i1 %13, label %14, label %8, !dbg !7035, !llvm.loop !7036

14:                                               ; preds = %8, %3
  ret void, !dbg !7038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) unnamed_addr #5 !dbg !7039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7041, metadata !DIExpression()), !dbg !7042
  %2 = add i32 %0, -1, !dbg !7043
  %3 = icmp ult i32 %2, 4, !dbg !7043
  %4 = shl i32 %2, 3, !dbg !7043
  %5 = lshr i32 1145657157, %4, !dbg !7043
  %6 = trunc i32 %5 to i8, !dbg !7043
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7043
  ret i8 %7, !dbg !7044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7045 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7049, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.value(metadata i32 %1, metadata !7050, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.value(metadata i32 0, metadata !7051, metadata !DIExpression()), !dbg !7061
  br label %4, !dbg !7062

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.22, i32 0, i32 0)) #27, !dbg !7063
  call void @llvm.dbg.value(metadata i32 0, metadata !7053, metadata !DIExpression()), !dbg !7064
  br label %16, !dbg !7065

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7051, metadata !DIExpression()), !dbg !7061
  %6 = icmp ult i32 %5, %1, !dbg !7066
  br i1 %6, label %7, label %11, !dbg !7070

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7071
  %9 = load i8, i8* %8, align 1, !dbg !7071
  %10 = zext i8 %9 to i32, !dbg !7073
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.23, i32 0, i32 0), i32 noundef %10) #27, !dbg !7074
  br label %12, !dbg !7075

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.24, i32 0, i32 0)) #27, !dbg !7076
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7078
  call void @llvm.dbg.value(metadata i32 %13, metadata !7051, metadata !DIExpression()), !dbg !7061
  %14 = icmp eq i32 %13, 8, !dbg !7079
  br i1 %14, label %3, label %4, !dbg !7062, !llvm.loop !7080

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.25, i32 0, i32 0)) #27, !dbg !7082
  ret void, !dbg !7083

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7053, metadata !DIExpression()), !dbg !7064
  %18 = icmp ult i32 %17, %1, !dbg !7084
  br i1 %18, label %19, label %26, !dbg !7085

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7086
  %21 = load i8, i8* %20, align 1, !dbg !7086
  call void @llvm.dbg.value(metadata i8 %21, metadata !7055, metadata !DIExpression()), !dbg !7087
  %22 = zext i8 %21 to i32, !dbg !7088
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7089
  %24 = icmp eq i32 %23, 0, !dbg !7090
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7089
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef %25) #27, !dbg !7091
  br label %27, !dbg !7092

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.27, i32 0, i32 0)) #27, !dbg !7093
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7095
  call void @llvm.dbg.value(metadata i32 %28, metadata !7053, metadata !DIExpression()), !dbg !7064
  %29 = icmp eq i32 %28, 8, !dbg !7096
  br i1 %29, label %15, label %16, !dbg !7065, !llvm.loop !7097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7101, metadata !DIExpression()), !dbg !7102
  %2 = add i32 %0, -32, !dbg !7103
  %3 = icmp ult i32 %2, 95, !dbg !7103
  %4 = zext i1 %3 to i32, !dbg !7103
  ret i32 %4, !dbg !7104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7154, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7155, metadata !DIExpression()), !dbg !7156
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7157
  br i1 %3, label %5, label %4, !dbg !7159

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !7160
  br label %5, !dbg !7162

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7163
  ret void, !dbg !7164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7165 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7169, metadata !DIExpression()), !dbg !7170
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7171
  %3 = load i32, i32* %2, align 4, !dbg !7171
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7171
  %5 = load i32, i32* %4, align 4, !dbg !7171
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7171
  %7 = load i32, i32* %6, align 4, !dbg !7171
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7171
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7176
  %9 = load i32, i32* %8, align 4, !dbg !7176
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7176
  %11 = load i32, i32* %10, align 4, !dbg !7176
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7176
  %13 = load i32, i32* %12, align 4, !dbg !7176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7176
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7181
  %15 = load i32, i32* %14, align 4, !dbg !7181
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.30, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7181
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7186
  %17 = load i32, i32* %16, align 4, !dbg !7186
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.31, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7186
  ret void, !dbg !7191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7192 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7209, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7210, metadata !DIExpression()), !dbg !7212
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7213
  %4 = load i32, i32* %3, align 4, !dbg !7213
  call void @llvm.dbg.value(metadata i32 %4, metadata !7211, metadata !DIExpression()), !dbg !7212
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !7214
  ret void, !dbg !7215
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7216 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7220, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i8* %0, metadata !7221, metadata !DIExpression()), !dbg !7223
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7224
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7224
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7222, metadata !DIExpression()), !dbg !7225
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7225
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7226
  %5 = bitcast i8* %4 to i32*, !dbg !7226
  %6 = load i32, i32* %5, align 4, !dbg !7226
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7227
  store i32 %6, i32* %7, align 4, !dbg !7228
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !7229
  unreachable, !dbg !7230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7234, metadata !DIExpression()), !dbg !7235
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !7236
  ret void, !dbg !7237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7242, metadata !DIExpression()), !dbg !7243
  %2 = icmp sgt i32 %0, -1, !dbg !7244
  br i1 %2, label %3, label %8, !dbg !7246

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7247, !srcloc !7249
  %4 = and i32 %0, 31, !dbg !7250
  %5 = shl nuw i32 1, %4, !dbg !7251
  %6 = lshr i32 %0, 5, !dbg !7252
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7253
  store volatile i32 %5, i32* %7, align 4, !dbg !7254
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7255, !srcloc !7256
  br label %8, !dbg !7257

8:                                                ; preds = %3, %1
  ret void, !dbg !7258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7261, metadata !DIExpression()), !dbg !7262
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !7263
  ret void, !dbg !7264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7267, metadata !DIExpression()), !dbg !7268
  %2 = icmp sgt i32 %0, -1, !dbg !7269
  br i1 %2, label %3, label %8, !dbg !7271

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7272
  %5 = shl nuw i32 1, %4, !dbg !7274
  %6 = lshr i32 %0, 5, !dbg !7275
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7276
  store volatile i32 %5, i32* %7, align 4, !dbg !7277
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7278, !srcloc !7282
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7283, !srcloc !7286
  br label %8, !dbg !7287

8:                                                ; preds = %3, %1
  ret void, !dbg !7288
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7293, metadata !DIExpression()), !dbg !7294
  %2 = lshr i32 %0, 5, !dbg !7295
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7296
  %4 = load volatile i32, i32* %3, align 4, !dbg !7296
  %5 = and i32 %0, 31, !dbg !7297
  %6 = shl nuw i32 1, %5, !dbg !7297
  %7 = and i32 %4, %6, !dbg !7298
  ret i32 %7, !dbg !7299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7304, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i32 %1, metadata !7305, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i32 %2, metadata !7306, metadata !DIExpression()), !dbg !7307
  %4 = add i32 %1, 1, !dbg !7308
  call void @llvm.dbg.value(metadata i32 %4, metadata !7305, metadata !DIExpression()), !dbg !7307
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !7311
  ret void, !dbg !7312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7317, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i32 %1, metadata !7318, metadata !DIExpression()), !dbg !7319
  %3 = trunc i32 %1 to i8, !dbg !7320
  %4 = shl i8 %3, 4, !dbg !7320
  %5 = and i32 %0, 15, !dbg !7322
  %6 = add nsw i32 %5, -4, !dbg !7322
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7322
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7322
  %9 = icmp slt i32 %0, 0, !dbg !7322
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7322
  store volatile i8 %4, i8* %10, align 1, !dbg !7320
  ret void, !dbg !7323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7324 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7326, metadata !DIExpression()), !dbg !7327
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7328
  ret void, !dbg !7329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7330 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7332
  tail call void @z_arm_int_exit() #27, !dbg !7333
  ret void, !dbg !7334
}

; Function Attrs: optsize
declare !dbg !7335 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7336 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7338 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !7340
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !7341
  tail call void @z_bss_zero() #27, !dbg !7342
  tail call void @z_data_copy() #27, !dbg !7343
  tail call void @z_arm_interrupt_init() #27, !dbg !7344
  tail call void @z_cstart() #29, !dbg !7345
  unreachable, !dbg !7345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7346 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7347
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7348, !srcloc !7351
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7352, !srcloc !7355
  ret void, !dbg !7356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7357 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7358
  %2 = and i32 %1, -15728641, !dbg !7358
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7358
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !7359, !srcloc !7364
  call void @llvm.dbg.value(metadata i32 %3, metadata !7362, metadata !DIExpression()) #25, !dbg !7365
  %4 = and i32 %3, -5, !dbg !7366
  call void @llvm.dbg.value(metadata i32 %4, metadata !7367, metadata !DIExpression()) #25, !dbg !7372
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !7374, !srcloc !7375
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7376, !srcloc !7355
  ret void, !dbg !7378
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7382, metadata !DIExpression()), !dbg !7383
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7384
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7385
  store i32 %0, i32* %3, align 4, !dbg !7386
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7387
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7388
  store i32 %4, i32* %5, align 4, !dbg !7389
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7390
  %7 = or i32 %6, 268435456, !dbg !7390
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7390
  call void @llvm.dbg.value(metadata i32 0, metadata !7391, metadata !DIExpression()) #25, !dbg !7394
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7396, !srcloc !7397
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7398
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7399
  %10 = load i32, i32* %9, align 4, !dbg !7399
  ret i32 %10, !dbg !7400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #8 !dbg !7401 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7511, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7512, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata i8* %2, metadata !7513, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7514, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata i8* %4, metadata !7515, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata i8* %5, metadata !7516, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata i8* %6, metadata !7517, metadata !DIExpression()), !dbg !7519
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7520
  call void @llvm.dbg.value(metadata i8* %8, metadata !7518, metadata !DIExpression()), !dbg !7519
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7521
  %10 = bitcast i8* %9 to i32*, !dbg !7521
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7522
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7523
  %12 = bitcast i8* %8 to i32*, !dbg !7524
  store i32 %11, i32* %12, align 4, !dbg !7525
  %13 = ptrtoint i8* %4 to i32, !dbg !7526
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7527
  %15 = bitcast i8* %14 to i32*, !dbg !7527
  store i32 %13, i32* %15, align 4, !dbg !7528
  %16 = ptrtoint i8* %5 to i32, !dbg !7529
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7530
  %18 = bitcast i8* %17 to i32*, !dbg !7530
  store i32 %16, i32* %18, align 4, !dbg !7531
  %19 = ptrtoint i8* %6 to i32, !dbg !7532
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7533
  %21 = bitcast i8* %20 to i32*, !dbg !7533
  store i32 %19, i32* %21, align 4, !dbg !7534
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7535
  %23 = bitcast i8* %22 to i32*, !dbg !7535
  store i32 16777216, i32* %23, align 4, !dbg !7536
  %24 = ptrtoint i8* %8 to i32, !dbg !7537
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7538
  store i32 %24, i32* %25, align 8, !dbg !7539
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7540
  store i32 0, i32* %26, align 4, !dbg !7541
  ret void, !dbg !7542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !7543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7548, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i32 %1, metadata !7549, metadata !DIExpression()), !dbg !7554
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7555
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7550, metadata !DIExpression()), !dbg !7554
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7556
  br i1 %4, label %19, label %5, !dbg !7558

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7553, metadata !DIExpression()), !dbg !7554
  %6 = icmp eq i32 %0, -22, !dbg !7559
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7559
  %8 = load i32, i32* %7, align 4, !dbg !7559
  br i1 %6, label %16, label %9, !dbg !7561

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7559
  %11 = icmp ule i32 %10, %0, !dbg !7559
  %12 = icmp ugt i32 %8, %0, !dbg !7559
  %13 = and i1 %12, %11, !dbg !7559
  %14 = icmp ugt i32 %8, %1, !dbg !7559
  %15 = and i1 %14, %13, !dbg !7559
  br i1 %15, label %18, label %19, !dbg !7559

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7559
  br i1 %17, label %18, label %19, !dbg !7561

18:                                               ; preds = %9, %16
  br label %19, !dbg !7562

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7554
  ret i32 %20, !dbg !7564
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !7565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7569, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i8* %1, metadata !7570, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7571, metadata !DIExpression()), !dbg !7572
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7573
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !7574
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !7575, !srcloc !7576
  unreachable, !dbg !7577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7578 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7596, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32 %1, metadata !7597, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32 %2, metadata !7598, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7599, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32 0, metadata !7600, metadata !DIExpression()), !dbg !7606
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7607
  %9 = and i32 %8, 511, !dbg !7608
  call void @llvm.dbg.value(metadata i32 %9, metadata !7601, metadata !DIExpression()), !dbg !7606
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7609
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7609
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7610
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7610
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7605, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i32 0, metadata !7612, metadata !DIExpression()) #25, !dbg !7615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7617, !srcloc !7618
  call void @llvm.dbg.value(metadata i8* %6, metadata !7603, metadata !DIExpression(DW_OP_deref)), !dbg !7606
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7619
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7604, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i8* %5, metadata !7602, metadata !DIExpression(DW_OP_deref)), !dbg !7606
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7620
  call void @llvm.dbg.value(metadata i32 %12, metadata !7600, metadata !DIExpression()), !dbg !7606
  %13 = load i8, i8* %5, align 1, !dbg !7621, !range !7623
  call void @llvm.dbg.value(metadata i8 %13, metadata !7602, metadata !DIExpression()), !dbg !7606
  %14 = icmp eq i8 %13, 0, !dbg !7621
  br i1 %14, label %15, label %32, !dbg !7624

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7625
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !7626
  %18 = load i8, i8* %6, align 1, !dbg !7627, !range !7623
  call void @llvm.dbg.value(metadata i8 %18, metadata !7603, metadata !DIExpression()), !dbg !7606
  %19 = icmp eq i8 %18, 0, !dbg !7627
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7629
  %21 = load i32, i32* %20, align 4, !dbg !7629
  br i1 %19, label %27, label %22, !dbg !7630

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7631
  %24 = icmp eq i32 %23, 0, !dbg !7634
  br i1 %24, label %25, label %31, !dbg !7635

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7636
  br label %29, !dbg !7638

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7639
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7629
  br label %31, !dbg !7641

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !7641
  br label %32, !dbg !7642

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7642
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7642
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7642
  ret void, !dbg !7642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7648, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 %1, metadata !7649, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 %2, metadata !7650, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %3, metadata !7651, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8 0, metadata !7652, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7653, metadata !DIExpression()), !dbg !7654
  store i8 0, i8* %3, align 1, !dbg !7655
  %5 = icmp ugt i32 %2, -16777217, !dbg !7656
  br i1 %5, label %6, label %17, !dbg !7658

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7659
  %8 = icmp eq i32 %7, 8, !dbg !7659
  br i1 %8, label %9, label %10, !dbg !7659

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.45, i32 0, i32 0), i32 noundef 69) #27, !dbg !7661
  br label %17, !dbg !7667

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7668
  %12 = icmp eq i32 %11, 0, !dbg !7668
  br i1 %12, label %13, label %14, !dbg !7669

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7653, metadata !DIExpression()), !dbg !7654
  store i8 1, i8* %3, align 1, !dbg !7672
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7654
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7653, metadata !DIExpression()), !dbg !7654
  br label %17, !dbg !7675

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7654
  ret %struct.__esf* %18, !dbg !7676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7677 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7681, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 %1, metadata !7682, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i8* %2, metadata !7683, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 0, metadata !7684, metadata !DIExpression()), !dbg !7685
  store i8 0, i8* %2, align 1, !dbg !7686
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7687

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7688
  call void @llvm.dbg.value(metadata i32 %5, metadata !7684, metadata !DIExpression()), !dbg !7685
  br label %12, !dbg !7690

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7691
  call void @llvm.dbg.value(metadata i32 %7, metadata !7684, metadata !DIExpression()), !dbg !7685
  br label %12, !dbg !7692

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7693
  call void @llvm.dbg.value(metadata i32 0, metadata !7684, metadata !DIExpression()), !dbg !7685
  br label %12, !dbg !7694

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7695
  call void @llvm.dbg.value(metadata i32 0, metadata !7684, metadata !DIExpression()), !dbg !7685
  br label %12, !dbg !7696

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7697
  br label %12, !dbg !7698

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !7699
  br label %12, !dbg !7700

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7685
  call void @llvm.dbg.value(metadata i32 %13, metadata !7684, metadata !DIExpression()), !dbg !7685
  ret i32 %13, !dbg !7701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7702 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7706, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i8* %1, metadata !7707, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i32 0, metadata !7708, metadata !DIExpression()), !dbg !7709
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 69) #27, !dbg !7710
  store i8 0, i8* %1, align 1, !dbg !7715
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7716
  %4 = and i32 %3, 2, !dbg !7718
  %5 = icmp eq i32 %4, 0, !dbg !7719
  br i1 %5, label %7, label %6, !dbg !7720

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 69) #27, !dbg !7721
  br label %36, !dbg !7727

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7728
  %9 = icmp sgt i32 %8, -1, !dbg !7730
  br i1 %9, label %11, label %10, !dbg !7731

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.42, i32 0, i32 0), i32 noundef 69) #27, !dbg !7732
  br label %36, !dbg !7738

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7739
  %13 = and i32 %12, 1073741824, !dbg !7741
  %14 = icmp eq i32 %13, 0, !dbg !7742
  br i1 %14, label %36, label %15, !dbg !7743

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.43, i32 0, i32 0), i32 noundef 69) #27, !dbg !7744
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7750
  br i1 %16, label %17, label %21, !dbg !7752

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7753
  %19 = load i32, i32* %18, align 4, !dbg !7753
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.44, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !7753
  %20 = load i32, i32* %18, align 4, !dbg !7759
  call void @llvm.dbg.value(metadata i32 %20, metadata !7708, metadata !DIExpression()), !dbg !7709
  br label %36, !dbg !7760

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7761
  %23 = and i32 %22, 255, !dbg !7763
  %24 = icmp eq i32 %23, 0, !dbg !7764
  br i1 %24, label %27, label %25, !dbg !7765

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %26, metadata !7708, metadata !DIExpression()), !dbg !7709
  br label %36, !dbg !7768

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7769
  %29 = and i32 %28, 65280, !dbg !7771
  %30 = icmp eq i32 %29, 0, !dbg !7772
  br i1 %30, label %32, label %31, !dbg !7773

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7774
  call void @llvm.dbg.value(metadata i32 0, metadata !7708, metadata !DIExpression()), !dbg !7709
  br label %36, !dbg !7776

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7777
  %34 = icmp ult i32 %33, 65536, !dbg !7779
  br i1 %34, label %36, label %35, !dbg !7780

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !7781
  call void @llvm.dbg.value(metadata i32 0, metadata !7708, metadata !DIExpression()), !dbg !7709
  br label %36, !dbg !7783

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7709
  call void @llvm.dbg.value(metadata i32 %37, metadata !7708, metadata !DIExpression()), !dbg !7709
  ret i32 %37, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7785 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7787, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i32 %1, metadata !7788, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i8* %2, metadata !7789, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i32 0, metadata !7790, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i32 -22, metadata !7791, metadata !DIExpression()), !dbg !7800
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.38, i32 0, i32 0), i32 noundef 69) #27, !dbg !7801
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7806
  %5 = and i32 %4, 16, !dbg !7808
  %6 = icmp eq i32 %5, 0, !dbg !7809
  br i1 %6, label %8, label %7, !dbg !7810

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.39, i32 0, i32 0), i32 noundef 69) #27, !dbg !7811
  br label %8, !dbg !7817

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7818
  %10 = and i32 %9, 8, !dbg !7820
  %11 = icmp eq i32 %10, 0, !dbg !7821
  br i1 %11, label %13, label %12, !dbg !7822

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7823
  br label %13, !dbg !7829

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7830
  %15 = and i32 %14, 2, !dbg !7831
  %16 = icmp eq i32 %15, 0, !dbg !7832
  br i1 %16, label %27, label %17, !dbg !7833

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 noundef 69) #27, !dbg !7834
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %18, metadata !7792, metadata !DIExpression()), !dbg !7840
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7841
  %20 = and i32 %19, 128, !dbg !7843
  %21 = icmp eq i32 %20, 0, !dbg !7844
  br i1 %21, label %27, label %22, !dbg !7845

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7791, metadata !DIExpression()), !dbg !7800
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !7846
  %23 = icmp eq i32 %1, 0, !dbg !7852
  br i1 %23, label %27, label %24, !dbg !7854

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7855
  %26 = and i32 %25, -129, !dbg !7855
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7855
  br label %27, !dbg !7857

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7800
  call void @llvm.dbg.value(metadata i32 %28, metadata !7791, metadata !DIExpression()), !dbg !7800
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7858
  %30 = and i32 %29, 1, !dbg !7860
  %31 = icmp eq i32 %30, 0, !dbg !7861
  br i1 %31, label %33, label %32, !dbg !7862

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #27, !dbg !7863
  br label %33, !dbg !7869

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7870
  %35 = and i32 %34, 32, !dbg !7872
  %36 = icmp eq i32 %35, 0, !dbg !7873
  br i1 %36, label %38, label %37, !dbg !7874

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #27, !dbg !7875
  br label %38, !dbg !7881

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7882
  %40 = and i32 %39, 16, !dbg !7883
  %41 = icmp eq i32 %40, 0, !dbg !7883
  br i1 %41, label %42, label %46, !dbg !7884

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7885
  %44 = and i32 %43, 2, !dbg !7886
  %45 = icmp eq i32 %44, 0, !dbg !7886
  br i1 %45, label %55, label %46, !dbg !7887

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7888
  %48 = and i32 %47, 2048, !dbg !7889
  %49 = icmp eq i32 %48, 0, !dbg !7889
  br i1 %49, label %55, label %50, !dbg !7890

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7891
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %52, metadata !7795, metadata !DIExpression()), !dbg !7893
  %53 = icmp eq i32 %52, 0, !dbg !7894
  br i1 %53, label %55, label %54, !dbg !7896

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7897, metadata !DIExpression()) #25, !dbg !7900
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !7903, !srcloc !7904
  call void @llvm.dbg.value(metadata i32 2, metadata !7790, metadata !DIExpression()), !dbg !7800
  br label %55, !dbg !7905

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7800
  call void @llvm.dbg.value(metadata i32 %56, metadata !7790, metadata !DIExpression()), !dbg !7800
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7906
  %58 = and i32 %57, 32, !dbg !7908
  %59 = icmp eq i32 %58, 0, !dbg !7909
  br i1 %59, label %63, label %60, !dbg !7910

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7911
  %62 = and i32 %61, -8193, !dbg !7911
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7911
  br label %63, !dbg !7913

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7914
  %65 = or i32 %64, 255, !dbg !7914
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7914
  store i8 0, i8* %2, align 1, !dbg !7915
  ret i32 %56, !dbg !7916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7917 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7921, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i32 %0, metadata !7922, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i8* %1, metadata !7923, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i32 0, metadata !7924, metadata !DIExpression()), !dbg !7928
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #27, !dbg !7929
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7934
  %4 = and i32 %3, 4096, !dbg !7936
  %5 = icmp eq i32 %4, 0, !dbg !7936
  br i1 %5, label %7, label %6, !dbg !7937

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #27, !dbg !7938
  br label %7, !dbg !7944

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7945
  %9 = and i32 %8, 2048, !dbg !7947
  %10 = icmp eq i32 %9, 0, !dbg !7947
  br i1 %10, label %12, label %11, !dbg !7948

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7949
  br label %12, !dbg !7955

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7956
  %14 = and i32 %13, 512, !dbg !7957
  %15 = icmp eq i32 %14, 0, !dbg !7957
  br i1 %15, label %26, label %16, !dbg !7958

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.37, i32 0, i32 0), i32 noundef 69) #27, !dbg !7959
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %17, metadata !7925, metadata !DIExpression()), !dbg !7965
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7966
  %19 = and i32 %18, 32768, !dbg !7968
  %20 = icmp eq i32 %19, 0, !dbg !7969
  br i1 %20, label %26, label %21, !dbg !7970

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7971
  %22 = icmp eq i32 %0, 0, !dbg !7977
  br i1 %22, label %26, label %23, !dbg !7979

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7980
  %25 = and i32 %24, -32769, !dbg !7980
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7980
  br label %26, !dbg !7982

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7983
  %28 = and i32 %27, 1024, !dbg !7985
  %29 = icmp eq i32 %28, 0, !dbg !7985
  br i1 %29, label %31, label %30, !dbg !7986

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #27, !dbg !7987
  br label %31, !dbg !7993

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7994
  %33 = and i32 %32, 256, !dbg !7996
  %34 = icmp eq i32 %33, 0, !dbg !7997
  br i1 %34, label %35, label %39, !dbg !7998

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7999
  %37 = and i32 %36, 8192, !dbg !8001
  %38 = icmp eq i32 %37, 0, !dbg !8001
  br i1 %38, label %41, label %39, !dbg !8002

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8003
  br label %41, !dbg !8004

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8004
  %43 = or i32 %42, 65280, !dbg !8004
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8004
  store i8 0, i8* %1, align 1, !dbg !8005
  ret void, !dbg !8006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8007 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8013, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32 0, metadata !8014, metadata !DIExpression()), !dbg !8015
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8016
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8021
  %2 = and i32 %1, 33554432, !dbg !8023
  %3 = icmp eq i32 %2, 0, !dbg !8024
  br i1 %3, label %5, label %4, !dbg !8025

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #27, !dbg !8026
  br label %5, !dbg !8032

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8033
  %7 = and i32 %6, 16777216, !dbg !8035
  %8 = icmp eq i32 %7, 0, !dbg !8036
  br i1 %8, label %10, label %9, !dbg !8037

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8038
  br label %10, !dbg !8044

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8045
  %12 = and i32 %11, 524288, !dbg !8047
  %13 = icmp eq i32 %12, 0, !dbg !8048
  br i1 %13, label %15, label %14, !dbg !8049

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8050
  br label %15, !dbg !8056

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8057
  %17 = and i32 %16, 262144, !dbg !8059
  %18 = icmp eq i32 %17, 0, !dbg !8060
  br i1 %18, label %20, label %19, !dbg !8061

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8062
  br label %20, !dbg !8068

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8069
  %22 = and i32 %21, 131072, !dbg !8071
  %23 = icmp eq i32 %22, 0, !dbg !8072
  br i1 %23, label %25, label %24, !dbg !8073

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8074
  br label %25, !dbg !8080

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8081
  %27 = and i32 %26, 65536, !dbg !8083
  %28 = icmp eq i32 %27, 0, !dbg !8084
  br i1 %28, label %30, label %29, !dbg !8085

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #27, !dbg !8086
  br label %30, !dbg !8092

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8093
  %32 = or i32 %31, -65536, !dbg !8093
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8093
  ret void, !dbg !8094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8099, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8* %0, metadata !8100, metadata !DIExpression()), !dbg !8101
  store i8 0, i8* %0, align 1, !dbg !8102
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8103
  ret void, !dbg !8108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8109 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8113, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i32 %0, metadata !8114, metadata !DIExpression()), !dbg !8115
  %2 = icmp slt i32 %0, 16, !dbg !8116
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.34, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8116
  %4 = add nsw i32 %0, -16, !dbg !8116
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8116
  ret void, !dbg !8121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8122 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8126, metadata !DIExpression()), !dbg !8129
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8130
  %3 = load i32, i32* %2, align 4, !dbg !8130
  %4 = inttoptr i32 %3 to i16*, !dbg !8131
  call void @llvm.dbg.value(metadata i16* %4, metadata !8127, metadata !DIExpression()), !dbg !8129
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8132
  %6 = or i32 %5, 256, !dbg !8132
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8132
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8133, !srcloc !8136
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8137, !srcloc !8140
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8141
  %8 = load i16, i16* %7, align 2, !dbg !8142
  call void @llvm.dbg.value(metadata i16 %8, metadata !8128, metadata !DIExpression()), !dbg !8129
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8143
  %10 = and i32 %9, -257, !dbg !8143
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8143
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8144, !srcloc !8136
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8146, !srcloc !8140
  %11 = icmp eq i16 %8, -8446, !dbg !8148
  ret i1 %11, !dbg !8150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8151 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8152
  %2 = or i32 %1, 16, !dbg !8152
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8152
  ret void, !dbg !8153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8154 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8157, metadata !DIExpression()), !dbg !8158
  br label %1, !dbg !8159

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8157, metadata !DIExpression()), !dbg !8158
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #26, !dbg !8161
  %3 = add nuw nsw i32 %2, 1, !dbg !8164
  call void @llvm.dbg.value(metadata i32 %3, metadata !8157, metadata !DIExpression()), !dbg !8158
  %4 = icmp eq i32 %3, 86, !dbg !8165
  br i1 %4, label %5, label %1, !dbg !8159, !llvm.loop !8166

5:                                                ; preds = %1
  ret void, !dbg !8168
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #16 !dbg !8169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8171, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i32 1, metadata !8172, metadata !DIExpression()), !dbg !8173
  %2 = and i32 %0, 15, !dbg !8174
  %3 = add nsw i32 %2, -4, !dbg !8174
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8174
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8174
  %6 = icmp slt i32 %0, 0, !dbg !8174
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8174
  store volatile i8 16, i8* %7, align 1, !dbg !8175
  ret void, !dbg !8177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8284, metadata !DIExpression()), !dbg !8285
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8286
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8288
  br i1 %3, label %4, label %12, !dbg !8289

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8290, !srcloc !8302
  call void @llvm.dbg.value(metadata i32 %5, metadata !8293, metadata !DIExpression()) #25, !dbg !8303
  %6 = icmp eq i32 %5, 0, !dbg !8304
  br i1 %6, label %12, label %7, !dbg !8305

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8306
  %9 = or i32 %8, 268435456, !dbg !8306
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8306
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8308
  %11 = and i32 %10, -32769, !dbg !8308
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8308
  br label %12, !dbg !8309

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8310
  ret void, !dbg !8311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8312 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8313
  ret void, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !590, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i8 0, metadata !591, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 64, metadata !593, metadata !DIExpression()), !dbg !8315
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8316
  %3 = load i32, i32* %2, align 4, !dbg !8316
  %4 = add i32 %3, -64, !dbg !8318
  call void @llvm.dbg.value(metadata i32 %4, metadata !592, metadata !DIExpression()), !dbg !8315
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8319
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8320
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8321
  call void @llvm.dbg.value(metadata i8 1, metadata !591, metadata !DIExpression()), !dbg !8315
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8322
  ret void, !dbg !8323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8324 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8325
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8326, !srcloc !8329
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8330, !srcloc !8333
  ret void, !dbg !8334
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8335 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !8336, !srcloc !8339
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8340
  ret void, !dbg !8341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8342 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8357, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i8 %1, metadata !8358, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i32 %2, metadata !8359, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i32 %3, metadata !8360, metadata !DIExpression()), !dbg !8361
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8362
  ret void, !dbg !8364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8365 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8370, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i8 %1, metadata !8371, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i32 undef, metadata !8372, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i32 undef, metadata !8373, metadata !DIExpression()), !dbg !8375
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8376
  call void @llvm.dbg.value(metadata i8 %3, metadata !8374, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8375
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !8377
  call void @llvm.dbg.value(metadata i32 %4, metadata !8374, metadata !DIExpression()), !dbg !8375
  %5 = trunc i32 %4 to i8, !dbg !8378
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8379
  ret void, !dbg !8380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8381 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8385, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i8 %1, metadata !8386, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i8 %2, metadata !8387, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i1 %3, metadata !8388, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8391
  %5 = zext i8 %2 to i32, !dbg !8392
  call void @llvm.dbg.value(metadata i32 %5, metadata !8390, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 0, metadata !8389, metadata !DIExpression()), !dbg !8391
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8390, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 0, metadata !8389, metadata !DIExpression()), !dbg !8391
  %7 = icmp eq i8 %1, 0, !dbg !8393
  br i1 %7, label %30, label %8, !dbg !8396

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8390, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 %10, metadata !8389, metadata !DIExpression()), !dbg !8391
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8397
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8400
  %13 = load i32, i32* %12, align 4, !dbg !8400
  %14 = icmp eq i32 %13, 0, !dbg !8401
  br i1 %14, label %26, label %15, !dbg !8402

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8403

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8405
  %18 = icmp eq i32 %17, 0, !dbg !8405
  br i1 %18, label %19, label %20, !dbg !8406

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.57, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8407
  br label %30, !dbg !8413

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8414
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %22, metadata !8390, metadata !DIExpression()), !dbg !8391
  %23 = icmp eq i32 %22, -22, !dbg !8416
  br i1 %23, label %30, label %24, !dbg !8418

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8419
  call void @llvm.dbg.value(metadata i32 %25, metadata !8390, metadata !DIExpression()), !dbg !8391
  br label %26, !dbg !8420

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8391
  call void @llvm.dbg.value(metadata i32 %27, metadata !8390, metadata !DIExpression()), !dbg !8391
  %28 = add nuw nsw i32 %10, 1, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %28, metadata !8389, metadata !DIExpression()), !dbg !8391
  %29 = icmp eq i32 %28, %6, !dbg !8393
  br i1 %29, label %30, label %8, !dbg !8396, !llvm.loop !8422

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8391
  ret i32 %31, !dbg !8424
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !8425 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8429, metadata !DIExpression()), !dbg !8431
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8432
  %3 = load i32, i32* %2, align 4, !dbg !8432
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8433, !range !4974
  %5 = icmp ult i32 %4, 2, !dbg !8433
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8434
  br i1 %7, label %8, label %15, !dbg !8434

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8435
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8436
  %11 = load i32, i32* %10, align 4, !dbg !8436
  %12 = and i32 %11, %9, !dbg !8437
  %13 = icmp eq i32 %12, 0, !dbg !8438
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8430, metadata !DIExpression()), !dbg !8431
  ret i32 %16, !dbg !8439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8440 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8444, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8445, metadata !DIExpression()), !dbg !8447
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8448
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8448
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8446, metadata !DIExpression()), !dbg !8449
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8450
  %6 = load i32, i32* %5, align 4, !dbg !8450
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8451
  store i32 %6, i32* %7, align 4, !dbg !8452
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8453
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8454
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8455
  %11 = load i32, i32* %10, align 4, !dbg !8455
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !8456
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !8457
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8458
  ret i32 %12, !dbg !8459
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !8460 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8467, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8468, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 undef, metadata !8469, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 %2, metadata !8470, metadata !DIExpression()), !dbg !8471
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8472
  %5 = load i32, i32* %4, align 4, !dbg !8472
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !8473
  %7 = or i32 %6, %5, !dbg !8474
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8475
  store i32 %7, i32* %8, align 4, !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8478 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8482, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8483, metadata !DIExpression()), !dbg !8484
  %3 = zext i8 %0 to i32, !dbg !8485
  %4 = icmp ugt i8 %0, 7, !dbg !8487
  br i1 %4, label %5, label %6, !dbg !8488

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !8489
  br label %7, !dbg !8495

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !8496
  br label %7, !dbg !8497

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8484
  ret i32 %8, !dbg !8498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !8499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8503, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8504, metadata !DIExpression()), !dbg !8505
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !8506
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8507
  %4 = load i32, i32* %3, align 4, !dbg !8507
  %5 = and i32 %4, -32, !dbg !8508
  %6 = or i32 %5, %0, !dbg !8509
  %7 = or i32 %6, 16, !dbg !8509
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8510
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8511
  %9 = load i32, i32* %8, align 4, !dbg !8511
  %10 = or i32 %9, 1, !dbg !8512
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8513
  ret void, !dbg !8514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !8515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8518, metadata !DIExpression()), !dbg !8519
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8520
  ret void, !dbg !8521
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !8522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8526, metadata !DIExpression()), !dbg !8527
  %2 = icmp ult i32 %0, 33, !dbg !8528
  br i1 %2, label %11, label %3, !dbg !8530

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8531
  br i1 %4, label %11, label %5, !dbg !8533

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8534
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8535, !range !4974
  %8 = mul nsw i32 %7, -2, !dbg !8536
  %9 = add nsw i32 %8, 62, !dbg !8536
  %10 = and i32 %9, 62, !dbg !8537
  br label %11, !dbg !8538

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8527
  ret i32 %12, !dbg !8539
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8540 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8544, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8 %1, metadata !8545, metadata !DIExpression()), !dbg !8546
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8547
  ret void, !dbg !8549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8550 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8554, metadata !DIExpression()), !dbg !8561
  call void @llvm.dbg.value(metadata i8 %1, metadata !8555, metadata !DIExpression()), !dbg !8561
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8562
  call void @llvm.dbg.value(metadata i8 %3, metadata !8556, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8561
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !8563
  call void @llvm.dbg.value(metadata i32 %4, metadata !8556, metadata !DIExpression()), !dbg !8561
  %5 = icmp ne i32 %4, -22, !dbg !8564
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8565
  call void @llvm.dbg.value(metadata i32 %4, metadata !8557, metadata !DIExpression()), !dbg !8566
  br i1 %7, label %8, label %12, !dbg !8565

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8557, metadata !DIExpression()), !dbg !8566
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !8567
  %10 = add i32 %9, 1, !dbg !8570
  call void @llvm.dbg.value(metadata i32 %10, metadata !8557, metadata !DIExpression()), !dbg !8566
  %11 = icmp eq i32 %10, 8, !dbg !8571
  br i1 %11, label %12, label %8, !dbg !8572, !llvm.loop !8573

12:                                               ; preds = %8, %2
  ret void, !dbg !8575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !8576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8579, metadata !DIExpression()), !dbg !8580
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8581
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8582
  ret void, !dbg !8583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8584 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8589
  %2 = icmp ugt i32 %1, 8, !dbg !8591
  br i1 %2, label %14, label %3, !dbg !8592

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !8593
  call void @llvm.dbg.value(metadata i32 0, metadata !8588, metadata !DIExpression()), !dbg !8594
  %4 = icmp eq i32 %1, 0, !dbg !8595
  br i1 %4, label %12, label %5, !dbg !8598

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8598

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8588, metadata !DIExpression()), !dbg !8594
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8599
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !8601
  %10 = add nuw i32 %8, 1, !dbg !8602
  call void @llvm.dbg.value(metadata i32 %10, metadata !8588, metadata !DIExpression()), !dbg !8594
  %11 = icmp eq i32 %10, %1, !dbg !8595
  br i1 %11, label %12, label %7, !dbg !8598, !llvm.loop !8603

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8605
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8606
  tail call void @arm_core_mpu_enable() #26, !dbg !8607
  br label %14, !dbg !8608

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8594
  ret i32 %15, !dbg !8609
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8610 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8617, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata i8* %1, metadata !8618, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata i8* %0, metadata !8619, metadata !DIExpression()), !dbg !8620
  %3 = load i8, i8* %1, align 1, !dbg !8621
  %4 = icmp eq i8 %3, 0, !dbg !8622
  br i1 %4, label %13, label %5, !dbg !8623

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8617, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata i8* %8, metadata !8618, metadata !DIExpression()), !dbg !8620
  store i8 %6, i8* %7, align 1, !dbg !8624
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8626
  call void @llvm.dbg.value(metadata i8* %9, metadata !8617, metadata !DIExpression()), !dbg !8620
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8627
  call void @llvm.dbg.value(metadata i8* %10, metadata !8618, metadata !DIExpression()), !dbg !8620
  %11 = load i8, i8* %10, align 1, !dbg !8621
  %12 = icmp eq i8 %11, 0, !dbg !8622
  br i1 %12, label %13, label %5, !dbg !8623, !llvm.loop !8628

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8630
  ret i8* %0, !dbg !8631
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8632 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8636, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %1, metadata !8637, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i32 %2, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %0, metadata !8639, metadata !DIExpression()), !dbg !8640
  %4 = icmp eq i32 %2, 0, !dbg !8641
  br i1 %4, label %22, label %5, !dbg !8642

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8636, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i32 %7, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %8, metadata !8637, metadata !DIExpression()), !dbg !8640
  %9 = load i8, i8* %8, align 1, !dbg !8643
  %10 = icmp eq i8 %9, 0, !dbg !8644
  br i1 %10, label %16, label %11, !dbg !8645

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8646
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8648
  call void @llvm.dbg.value(metadata i8* %12, metadata !8637, metadata !DIExpression()), !dbg !8640
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8649
  call void @llvm.dbg.value(metadata i8* %13, metadata !8636, metadata !DIExpression()), !dbg !8640
  %14 = add i32 %7, -1, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %14, metadata !8638, metadata !DIExpression()), !dbg !8640
  %15 = icmp eq i32 %14, 0, !dbg !8641
  br i1 %15, label %22, label %5, !dbg !8642, !llvm.loop !8651

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8636, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i32 %18, metadata !8638, metadata !DIExpression()), !dbg !8640
  store i8 0, i8* %17, align 1, !dbg !8653
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8655
  call void @llvm.dbg.value(metadata i8* %19, metadata !8636, metadata !DIExpression()), !dbg !8640
  %20 = add i32 %18, -1, !dbg !8656
  call void @llvm.dbg.value(metadata i32 %20, metadata !8638, metadata !DIExpression()), !dbg !8640
  %21 = icmp eq i32 %20, 0, !dbg !8657
  br i1 %21, label %22, label %16, !dbg !8658, !llvm.loop !8659

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8666, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i32 %1, metadata !8667, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i32 %1, metadata !8668, metadata !DIExpression()), !dbg !8669
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8670

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8666, metadata !DIExpression()), !dbg !8669
  %6 = load i8, i8* %5, align 1, !dbg !8671
  %7 = icmp eq i8 %6, %3, !dbg !8672
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8673
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8674
  call void @llvm.dbg.value(metadata i8* %10, metadata !8666, metadata !DIExpression()), !dbg !8669
  br i1 %9, label %11, label %4, !dbg !8673, !llvm.loop !8676

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8678
  ret i8* %12, !dbg !8679
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8680 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8682, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i32 %1, metadata !8683, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i8* null, metadata !8684, metadata !DIExpression()), !dbg !8685
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8686

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8685
  call void @llvm.dbg.value(metadata i8* %6, metadata !8684, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i8* %5, metadata !8682, metadata !DIExpression()), !dbg !8685
  %7 = load i8, i8* %5, align 1, !dbg !8687
  %8 = icmp eq i8 %7, %3, !dbg !8690
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8691
  call void @llvm.dbg.value(metadata i8* %9, metadata !8684, metadata !DIExpression()), !dbg !8685
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8692
  call void @llvm.dbg.value(metadata i8* %10, metadata !8682, metadata !DIExpression()), !dbg !8685
  %11 = icmp eq i8 %7, 0, !dbg !8693
  br i1 %11, label %12, label %4, !dbg !8693, !llvm.loop !8694

12:                                               ; preds = %4
  ret i8* %9, !dbg !8696
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !8697 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8701, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.value(metadata i32 0, metadata !8702, metadata !DIExpression()), !dbg !8703
  %2 = load i8, i8* %0, align 1, !dbg !8704
  %3 = icmp eq i8 %2, 0, !dbg !8705
  br i1 %3, label %11, label %4, !dbg !8706

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8702, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.value(metadata i8* %6, metadata !8701, metadata !DIExpression()), !dbg !8703
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8707
  call void @llvm.dbg.value(metadata i8* %7, metadata !8701, metadata !DIExpression()), !dbg !8703
  %8 = add i32 %5, 1, !dbg !8709
  call void @llvm.dbg.value(metadata i32 %8, metadata !8702, metadata !DIExpression()), !dbg !8703
  %9 = load i8, i8* %7, align 1, !dbg !8704
  %10 = icmp eq i8 %9, 0, !dbg !8705
  br i1 %10, label %11, label %4, !dbg !8706, !llvm.loop !8710

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8703
  ret i32 %12, !dbg !8712
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8717, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 %1, metadata !8718, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 0, metadata !8719, metadata !DIExpression()), !dbg !8720
  %3 = load i8, i8* %0, align 1, !dbg !8721
  %4 = icmp ne i8 %3, 0, !dbg !8722
  %5 = icmp ne i32 %1, 0, !dbg !8723
  %6 = and i1 %4, %5, !dbg !8723
  br i1 %6, label %7, label %16, !dbg !8724

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8719, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i8* %9, metadata !8717, metadata !DIExpression()), !dbg !8720
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8725
  call void @llvm.dbg.value(metadata i8* %10, metadata !8717, metadata !DIExpression()), !dbg !8720
  %11 = add nuw i32 %8, 1, !dbg !8727
  call void @llvm.dbg.value(metadata i32 %11, metadata !8719, metadata !DIExpression()), !dbg !8720
  %12 = load i8, i8* %10, align 1, !dbg !8721
  %13 = icmp ne i8 %12, 0, !dbg !8722
  %14 = icmp ult i32 %11, %1, !dbg !8723
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8723
  br i1 %15, label %7, label %16, !dbg !8724, !llvm.loop !8728

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8720
  ret i32 %17, !dbg !8730
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !8731 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %1, metadata !8736, metadata !DIExpression()), !dbg !8737
  %3 = load i8, i8* %0, align 1, !dbg !8738
  %4 = load i8, i8* %1, align 1, !dbg !8739
  %5 = icmp ne i8 %3, %4, !dbg !8740
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8741
  br i1 %7, label %18, label %8, !dbg !8741

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8736, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %10, metadata !8735, metadata !DIExpression()), !dbg !8737
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8742
  call void @llvm.dbg.value(metadata i8* %11, metadata !8735, metadata !DIExpression()), !dbg !8737
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8744
  call void @llvm.dbg.value(metadata i8* %12, metadata !8736, metadata !DIExpression()), !dbg !8737
  %13 = load i8, i8* %11, align 1, !dbg !8738
  %14 = load i8, i8* %12, align 1, !dbg !8739
  %15 = icmp ne i8 %13, %14, !dbg !8740
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8741
  br i1 %17, label %18, label %8, !dbg !8741, !llvm.loop !8745

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8738
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8739
  %21 = zext i8 %19 to i32, !dbg !8748
  %22 = zext i8 %20 to i32, !dbg !8749
  %23 = sub nsw i32 %21, %22, !dbg !8750
  ret i32 %23, !dbg !8751
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8752 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8756, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.value(metadata i8* %1, metadata !8757, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.value(metadata i32 %2, metadata !8758, metadata !DIExpression()), !dbg !8759
  %4 = icmp eq i32 %2, 0, !dbg !8760
  br i1 %4, label %23, label %5, !dbg !8760

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.value(metadata i8* %7, metadata !8757, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.value(metadata i8* %8, metadata !8756, metadata !DIExpression()), !dbg !8759
  %9 = load i8, i8* %8, align 1, !dbg !8761
  %10 = load i8, i8* %7, align 1, !dbg !8762
  %11 = icmp ne i8 %9, %10, !dbg !8763
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8764
  br i1 %13, label %19, label %14, !dbg !8764

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8765
  call void @llvm.dbg.value(metadata i8* %15, metadata !8756, metadata !DIExpression()), !dbg !8759
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8767
  call void @llvm.dbg.value(metadata i8* %16, metadata !8757, metadata !DIExpression()), !dbg !8759
  %17 = add i32 %6, -1, !dbg !8768
  call void @llvm.dbg.value(metadata i32 %17, metadata !8758, metadata !DIExpression()), !dbg !8759
  %18 = icmp eq i32 %17, 0, !dbg !8760
  br i1 %18, label %23, label %5, !dbg !8760, !llvm.loop !8769

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8772
  %21 = zext i8 %10 to i32, !dbg !8773
  %22 = sub nsw i32 %20, %21, !dbg !8774
  br label %23, !dbg !8775

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8775
  ret i32 %24, !dbg !8776
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8777 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8781, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i8* %1, metadata !8782, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i8** %2, metadata !8783, metadata !DIExpression()), !dbg !8786
  %4 = icmp eq i8* %0, null, !dbg !8787
  br i1 %4, label %5, label %7, !dbg !8787

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8788
  br label %7, !dbg !8787

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8787
  call void @llvm.dbg.value(metadata i8* %8, metadata !8784, metadata !DIExpression()), !dbg !8786
  %9 = load i8, i8* %8, align 1, !dbg !8789
  %10 = icmp eq i8 %9, 0, !dbg !8789
  br i1 %10, label %33, label %11, !dbg !8790

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8784, metadata !DIExpression()), !dbg !8786
  %14 = zext i8 %12 to i32, !dbg !8789
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8791
  %16 = icmp eq i8* %15, null, !dbg !8790
  br i1 %16, label %21, label %17, !dbg !8792

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8793
  call void @llvm.dbg.value(metadata i8* %18, metadata !8784, metadata !DIExpression()), !dbg !8786
  %19 = load i8, i8* %18, align 1, !dbg !8789
  %20 = icmp eq i8 %19, 0, !dbg !8789
  br i1 %20, label %33, label %11, !dbg !8790, !llvm.loop !8795

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8785, metadata !DIExpression()), !dbg !8786
  %24 = zext i8 %22 to i32, !dbg !8797
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8798
  %26 = icmp eq i8* %25, null, !dbg !8799
  br i1 %26, label %27, label %31, !dbg !8800

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8801
  call void @llvm.dbg.value(metadata i8* %28, metadata !8785, metadata !DIExpression()), !dbg !8786
  %29 = load i8, i8* %28, align 1, !dbg !8797
  %30 = icmp eq i8 %29, 0, !dbg !8797
  br i1 %30, label %33, label %21, !dbg !8803, !llvm.loop !8804

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8806
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8809
  br label %33, !dbg !8810

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8786
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8786
  store i8* %34, i8** %2, align 4, !dbg !8786
  ret i8* %35, !dbg !8811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8814, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i8* %1, metadata !8815, metadata !DIExpression()), !dbg !8816
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8817
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8818
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8819
  ret i8* %0, !dbg !8820
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8821 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8823, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i8* %1, metadata !8824, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i32 %2, metadata !8825, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i8* %0, metadata !8826, metadata !DIExpression()), !dbg !8828
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8829
  call void @llvm.dbg.value(metadata i32 %4, metadata !8827, metadata !DIExpression()), !dbg !8828
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8830
  call void @llvm.dbg.value(metadata i8* %5, metadata !8823, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i8* %1, metadata !8824, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i32 %2, metadata !8825, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i32 %2, metadata !8825, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8828
  %6 = icmp eq i32 %2, 0, !dbg !8831
  br i1 %6, label %18, label %7, !dbg !8832

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8833
  call void @llvm.dbg.value(metadata i8* %9, metadata !8823, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i8* %10, metadata !8824, metadata !DIExpression()), !dbg !8828
  %12 = load i8, i8* %10, align 1, !dbg !8834
  %13 = icmp eq i8 %12, 0, !dbg !8835
  br i1 %13, label %18, label %14, !dbg !8836

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8837
  call void @llvm.dbg.value(metadata i8* %15, metadata !8824, metadata !DIExpression()), !dbg !8828
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8839
  call void @llvm.dbg.value(metadata i8* %16, metadata !8823, metadata !DIExpression()), !dbg !8828
  store i8 %12, i8* %9, align 1, !dbg !8840
  call void @llvm.dbg.value(metadata i32 %11, metadata !8825, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i32 %11, metadata !8825, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8828
  %17 = icmp eq i32 %11, 0, !dbg !8831
  br i1 %17, label %18, label %7, !dbg !8832, !llvm.loop !8841

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8828
  store i8 0, i8* %19, align 1, !dbg !8843
  ret i8* %0, !dbg !8844
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8849, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8* %1, metadata !8850, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %2, metadata !8851, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8* %0, metadata !8852, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8* %1, metadata !8853, metadata !DIExpression()), !dbg !8854
  %4 = icmp eq i32 %2, 0, !dbg !8855
  br i1 %4, label %31, label %5, !dbg !8857

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8853, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8* %0, metadata !8852, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %2, metadata !8851, metadata !DIExpression()), !dbg !8854
  %6 = add i32 %2, -1, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %6, metadata !8851, metadata !DIExpression()), !dbg !8854
  %7 = icmp eq i32 %6, 0, !dbg !8859
  br i1 %7, label %23, label %8, !dbg !8860

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8861
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8861
  br label %11, !dbg !8861

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8853, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8* %14, metadata !8852, metadata !DIExpression()), !dbg !8854
  %15 = load i8, i8* %14, align 1, !dbg !8862
  %16 = load i8, i8* %13, align 1, !dbg !8863
  %17 = icmp eq i8 %15, %16, !dbg !8864
  br i1 %17, label %18, label %23, !dbg !8861

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8865
  call void @llvm.dbg.value(metadata i8* %19, metadata !8852, metadata !DIExpression()), !dbg !8854
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8867
  call void @llvm.dbg.value(metadata i8* %20, metadata !8853, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %12, metadata !8851, metadata !DIExpression()), !dbg !8854
  %21 = add i32 %12, -1, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %21, metadata !8851, metadata !DIExpression()), !dbg !8854
  %22 = icmp eq i32 %21, 0, !dbg !8859
  br i1 %22, label %23, label %11, !dbg !8860, !llvm.loop !8868

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8854
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8854
  %26 = load i8, i8* %24, align 1, !dbg !8870
  %27 = zext i8 %26 to i32, !dbg !8870
  %28 = load i8, i8* %25, align 1, !dbg !8871
  %29 = zext i8 %28 to i32, !dbg !8871
  %30 = sub nsw i32 %27, %29, !dbg !8872
  br label %31, !dbg !8873

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8854
  ret i32 %32, !dbg !8874
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8875 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8879, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8* %1, metadata !8880, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i32 %2, metadata !8881, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8* %0, metadata !8882, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8* %1, metadata !8883, metadata !DIExpression()), !dbg !8884
  %4 = ptrtoint i8* %0 to i32, !dbg !8885
  %5 = ptrtoint i8* %1 to i32, !dbg !8885
  %6 = sub i32 %4, %5, !dbg !8885
  %7 = icmp ult i32 %6, %2, !dbg !8887
  br i1 %7, label %10, label %8, !dbg !8888

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8883, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8* %0, metadata !8882, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i32 %2, metadata !8881, metadata !DIExpression()), !dbg !8884
  %9 = icmp eq i32 %2, 0, !dbg !8889
  br i1 %9, label %26, label %17, !dbg !8891

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8881, metadata !DIExpression()), !dbg !8884
  %12 = add i32 %11, -1, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %12, metadata !8881, metadata !DIExpression()), !dbg !8884
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8895
  %14 = load i8, i8* %13, align 1, !dbg !8895
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8896
  store i8 %14, i8* %15, align 1, !dbg !8897
  %16 = icmp eq i32 %12, 0, !dbg !8898
  br i1 %16, label %26, label %10, !dbg !8899, !llvm.loop !8900

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8883, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8* %19, metadata !8882, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i32 %20, metadata !8881, metadata !DIExpression()), !dbg !8884
  %21 = load i8, i8* %18, align 1, !dbg !8902
  store i8 %21, i8* %19, align 1, !dbg !8904
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8905
  call void @llvm.dbg.value(metadata i8* %22, metadata !8882, metadata !DIExpression()), !dbg !8884
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8906
  call void @llvm.dbg.value(metadata i8* %23, metadata !8883, metadata !DIExpression()), !dbg !8884
  %24 = add i32 %20, -1, !dbg !8907
  call void @llvm.dbg.value(metadata i32 %24, metadata !8881, metadata !DIExpression()), !dbg !8884
  %25 = icmp eq i32 %24, 0, !dbg !8889
  br i1 %25, label %26, label %17, !dbg !8891, !llvm.loop !8908

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8910
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8917, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i8* %1, metadata !8918, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i32 %2, metadata !8919, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i8* %0, metadata !8920, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i8* %1, metadata !8921, metadata !DIExpression()), !dbg !8922
  %4 = icmp eq i32 %2, 0, !dbg !8923
  br i1 %4, label %14, label %5, !dbg !8924

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8921, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i8* %7, metadata !8920, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i32 %8, metadata !8919, metadata !DIExpression()), !dbg !8922
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8925
  call void @llvm.dbg.value(metadata i8* %9, metadata !8921, metadata !DIExpression()), !dbg !8922
  %10 = load i8, i8* %6, align 1, !dbg !8927
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8928
  call void @llvm.dbg.value(metadata i8* %11, metadata !8920, metadata !DIExpression()), !dbg !8922
  store i8 %10, i8* %7, align 1, !dbg !8929
  %12 = add i32 %8, -1, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %12, metadata !8919, metadata !DIExpression()), !dbg !8922
  %13 = icmp eq i32 %12, 0, !dbg !8923
  br i1 %13, label %14, label %5, !dbg !8924, !llvm.loop !8931

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8933
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8938, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %1, metadata !8939, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %2, metadata !8940, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i8* %0, metadata !8941, metadata !DIExpression()), !dbg !8943
  %4 = trunc i32 %1 to i8, !dbg !8944
  call void @llvm.dbg.value(metadata i8 %4, metadata !8942, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %2, metadata !8940, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i8* %0, metadata !8941, metadata !DIExpression()), !dbg !8943
  %5 = icmp eq i32 %2, 0, !dbg !8945
  br i1 %5, label %12, label %6, !dbg !8946

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8940, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i8* %8, metadata !8941, metadata !DIExpression()), !dbg !8943
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8947
  call void @llvm.dbg.value(metadata i8* %9, metadata !8941, metadata !DIExpression()), !dbg !8943
  store i8 %4, i8* %8, align 1, !dbg !8949
  %10 = add i32 %7, -1, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %10, metadata !8940, metadata !DIExpression()), !dbg !8943
  %11 = icmp eq i32 %10, 0, !dbg !8945
  br i1 %11, label %12, label %6, !dbg !8946, !llvm.loop !8951

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8953
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8954 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8958, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32 %1, metadata !8959, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32 %2, metadata !8960, metadata !DIExpression()), !dbg !8964
  %4 = icmp eq i32 %2, 0, !dbg !8965
  br i1 %4, label %17, label %5, !dbg !8966

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8967

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8968
  call void @llvm.dbg.value(metadata i8* %9, metadata !8961, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i32 %8, metadata !8960, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i8* %9, metadata !8961, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8968
  %10 = load i8, i8* %9, align 1, !dbg !8969
  %11 = icmp eq i8 %10, %6, !dbg !8972
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8973
  call void @llvm.dbg.value(metadata i8* %12, metadata !8961, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i32 %13, metadata !8960, metadata !DIExpression()), !dbg !8964
  br i1 %15, label %16, label %7, !dbg !8973, !llvm.loop !8974

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8976

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8964
  ret i8* %19, !dbg !8977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !8978 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8980, metadata !DIExpression()), !dbg !8981
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8982
  ret void, !dbg !8983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !8984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8986, metadata !DIExpression()), !dbg !8987
  ret i32 -1, !dbg !8988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8993, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.value(metadata i32* %1, metadata !8994, metadata !DIExpression()), !dbg !8995
  %3 = ptrtoint i32* %1 to i32, !dbg !8996
  %4 = and i32 %3, -2, !dbg !8996
  %5 = icmp eq i32 %4, 2, !dbg !8996
  br i1 %5, label %6, label %9, !dbg !8996

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8997
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !8997
  br label %9, !dbg !8998

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8998
  ret i32 %10, !dbg !8999
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9002, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.value(metadata i32* %1, metadata !9003, metadata !DIExpression()), !dbg !9004
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9005
  ret i32 %3, !dbg !9006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9010, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32* %1, metadata !9011, metadata !DIExpression()), !dbg !9012
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9013, !srcloc !9015
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9016
  ret i32 %3, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9018 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9023, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32* %1, metadata !9024, metadata !DIExpression()), !dbg !9027
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9028
  call void @llvm.dbg.value(metadata i32 %3, metadata !9025, metadata !DIExpression()), !dbg !9027
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %4, metadata !9026, metadata !DIExpression()), !dbg !9027
  %5 = icmp ne i32 %3, %4, !dbg !9030
  %6 = sext i1 %5 to i32, !dbg !9031
  ret i32 %6, !dbg !9032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9033 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9037, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata i32 %1, metadata !9038, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata i32 %2, metadata !9039, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata i32* %3, metadata !9040, metadata !DIExpression()), !dbg !9041
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9042
  ret i32 %5, !dbg !9043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9046, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %1, metadata !9047, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %2, metadata !9048, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32* %3, metadata !9049, metadata !DIExpression()), !dbg !9050
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9051, !srcloc !9053
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9054
  ret i32 %5, !dbg !9055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9058, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32 %1, metadata !9059, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32 %2, metadata !9060, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32* %3, metadata !9061, metadata !DIExpression()), !dbg !9066
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9067
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9069
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9069
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9069
  br i1 %11, label %33, label %12, !dbg !9069

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9066
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9066
  call void @llvm.dbg.value(metadata i8* %14, metadata !9064, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32 %13, metadata !9062, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32 %1, metadata !9063, metadata !DIExpression()), !dbg !9066
  br label %15, !dbg !9070

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9072
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9066
  call void @llvm.dbg.value(metadata i8* %17, metadata !9064, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32 %16, metadata !9063, metadata !DIExpression()), !dbg !9066
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9073
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9076
  call void @llvm.dbg.value(metadata i8* %19, metadata !9064, metadata !DIExpression()), !dbg !9066
  %20 = load i8, i8* %17, align 1, !dbg !9077
  %21 = zext i8 %20 to i32, !dbg !9078
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9073
  %23 = icmp eq i32 %22, -1, !dbg !9079
  br i1 %23, label %30, label %24, !dbg !9080

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9081
  call void @llvm.dbg.value(metadata i32 %25, metadata !9063, metadata !DIExpression()), !dbg !9066
  %26 = icmp eq i32 %25, 0, !dbg !9082
  br i1 %26, label %27, label %15, !dbg !9083, !llvm.loop !9084

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9086
  call void @llvm.dbg.value(metadata i32 %28, metadata !9062, metadata !DIExpression()), !dbg !9066
  %29 = icmp eq i32 %28, 0, !dbg !9087
  br i1 %29, label %30, label %12, !dbg !9088, !llvm.loop !9089

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9066
  call void @llvm.dbg.value(metadata i32 %31, metadata !9062, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.label(metadata !9065), !dbg !9092
  %32 = sub i32 %2, %31, !dbg !9093
  br label %33, !dbg !9094

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9066
  ret i32 %34, !dbg !9095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9100, metadata !DIExpression()), !dbg !9101
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9102
  %3 = icmp eq i32 %2, -1, !dbg !9104
  br i1 %3, label %8, label %4, !dbg !9105

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9106
  %6 = icmp eq i32 %5, -1, !dbg !9107
  %7 = sext i1 %6 to i32, !dbg !9106
  br label %8, !dbg !9108

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9101
  ret i32 %9, !dbg !9109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9110 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9118, metadata !DIExpression()), !dbg !9120
  %3 = tail call i64 @sys_clock_tick_get() #27, !dbg !9121
  call void @llvm.dbg.value(metadata i64 %3, metadata !9119, metadata !DIExpression()), !dbg !9120
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9122
  %5 = sub i64 %1, %3, !dbg !9122
  store i64 %5, i64* %4, align 8, !dbg !9122
  ret void, !dbg !9123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9124 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9274, metadata !DIExpression()), !dbg !9277
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9272, metadata !DIExpression()), !dbg !9277
  call void @llvm.dbg.value(metadata i8* %1, metadata !9273, metadata !DIExpression()), !dbg !9277
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #27, !dbg !9278
  call void @llvm.dbg.value(metadata i64 %4, metadata !9276, metadata !DIExpression()), !dbg !9277
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9279
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9279
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9281
  br i1 %7, label %13, label %8, !dbg !9282

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9283
  %10 = load i16, i16* %9, align 4, !dbg !9283
  %11 = zext i16 %10 to i32, !dbg !9284
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #27, !dbg !9285
  br i1 %12, label %13, label %28, !dbg !9286

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9287
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9287
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #26, !dbg !9288
  call void @llvm.dbg.value(metadata i32 %16, metadata !9275, metadata !DIExpression()), !dbg !9277
  %17 = icmp eq i32 %16, 0, !dbg !9289
  br i1 %17, label %18, label %28, !dbg !9291

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9292
  %20 = load i8*, i8** %19, align 4, !dbg !9292
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9293
  %22 = load i16, i16* %21, align 4, !dbg !9293
  %23 = zext i16 %22 to i32, !dbg !9294
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #27, !dbg !9295
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #26, !dbg !9296
  call void @llvm.dbg.value(metadata i32 %25, metadata !9275, metadata !DIExpression()), !dbg !9277
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9297
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #26, !dbg !9298
  br label %28, !dbg !9299

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9277
  ret i32 %29, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9306, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9305, metadata !DIExpression()), !dbg !9307
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9308, !srcloc !9310
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #27, !dbg !9311
  ret i32 %3, !dbg !9312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9313 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9317, metadata !DIExpression()), !dbg !9325
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9318, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9325
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9326
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9326
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9321, metadata !DIExpression()), !dbg !9327
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9328
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9330
  br i1 %8, label %31, label %16, !dbg !9331

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9332
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9333
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9317, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9323, metadata !DIExpression()), !dbg !9335
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9325
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9336
  br i1 %12, label %31, label %13, !dbg !9337

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9337

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9321, metadata !DIExpression()), !dbg !9327
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 0, !dbg !9338
  %20 = load i8, i8* %19, align 4, !dbg !9338, !range !7623
  %21 = icmp eq i8 %20, 0, !dbg !9338
  br i1 %21, label %27, label %22, !dbg !9341

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 2, !dbg !9342
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9342
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9343
  br i1 %25, label %27, label %26, !dbg !9344

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9317, metadata !DIExpression()), !dbg !9325
  tail call void %24(%struct.zbus_channel* noundef %0) #27, !dbg !9345
  br label %27, !dbg !9347

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9348
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9321, metadata !DIExpression()), !dbg !9327
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9328
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9330
  br i1 %30, label %9, label %16, !dbg !9331, !llvm.loop !9349

31:                                               ; preds = %51, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %52, %51 ], !dbg !9325
  ret i32 %32, !dbg !9351

33:                                               ; preds = %13, %51
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %54, %51 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %53, %51 ]
  %36 = phi i32 [ 0, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9323, metadata !DIExpression()), !dbg !9335
  call void @llvm.dbg.value(metadata i32 %36, metadata !9319, metadata !DIExpression()), !dbg !9325
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 0, !dbg !9352
  %38 = load i8, i8* %37, align 4, !dbg !9352, !range !7623
  %39 = icmp eq i8 %38, 0, !dbg !9352
  br i1 %39, label %51, label %40, !dbg !9355

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9356
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9356
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9357
  br i1 %43, label %51, label %44, !dbg !9358

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #26, !dbg !9359
  %45 = load i64, i64* %15, align 8, !dbg !9361
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9361
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9317, metadata !DIExpression(DW_OP_deref)), !dbg !9325
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #26, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %47, metadata !9320, metadata !DIExpression()), !dbg !9325
  %48 = icmp eq i32 %47, 0, !dbg !9362
  br i1 %48, label %51, label %49, !dbg !9364

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9365
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.74, i32 0, i32 0), %struct.zbus_observer* noundef %50, i32 noundef %47) #27, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %47, metadata !9319, metadata !DIExpression()), !dbg !9325
  br label %51, !dbg !9371

51:                                               ; preds = %33, %40, %49, %44
  %52 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9325
  call void @llvm.dbg.value(metadata i32 %52, metadata !9319, metadata !DIExpression()), !dbg !9325
  %53 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9372
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %53, metadata !9323, metadata !DIExpression()), !dbg !9335
  %54 = load %struct.zbus_observer*, %struct.zbus_observer** %53, align 4, !dbg !9333
  %55 = icmp eq %struct.zbus_observer* %54, null, !dbg !9336
  br i1 %55, label %31, label %33, !dbg !9337, !llvm.loop !9373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9375 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9379, metadata !DIExpression()), !dbg !9380
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9381, !srcloc !9383
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #27, !dbg !9384
  ret i32 %2, !dbg !9385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9386 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9392, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9390, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9394, !srcloc !9396
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9397
  ret i32 %4, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9399 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9405, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9403, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata i8* %1, metadata !9404, metadata !DIExpression()), !dbg !9407
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9408
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9408
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #26, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %6, metadata !9406, metadata !DIExpression()), !dbg !9407
  %7 = icmp eq i32 %6, 0, !dbg !9410
  br i1 %7, label %8, label %17, !dbg !9412

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9413
  %10 = load i8*, i8** %9, align 4, !dbg !9413
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9414
  %12 = load i16, i16* %11, align 4, !dbg !9414
  %13 = zext i16 %12 to i32, !dbg !9415
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #27, !dbg !9416
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9417
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #26, !dbg !9418
  br label %17, !dbg !9419

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9407
  ret i32 %18, !dbg !9420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9421 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9426, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9425, metadata !DIExpression()), !dbg !9429
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #27, !dbg !9430
  call void @llvm.dbg.value(metadata i64 %3, metadata !9428, metadata !DIExpression()), !dbg !9429
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9431
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9431
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #26, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %6, metadata !9427, metadata !DIExpression()), !dbg !9429
  %7 = icmp eq i32 %6, 0, !dbg !9433
  br i1 %7, label %8, label %12, !dbg !9435

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #26, !dbg !9436
  call void @llvm.dbg.value(metadata i32 %9, metadata !9427, metadata !DIExpression()), !dbg !9429
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9437
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #26, !dbg !9438
  br label %12, !dbg !9439

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9429
  ret i32 %13, !dbg !9440
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9441 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9444, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9443, metadata !DIExpression()), !dbg !9446
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9447
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9447
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #26, !dbg !9448
  call void @llvm.dbg.value(metadata i32 %5, metadata !9445, metadata !DIExpression()), !dbg !9446
  ret i32 %5, !dbg !9449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9450 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9454, metadata !DIExpression()), !dbg !9456
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9457
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9457
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #26, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %4, metadata !9455, metadata !DIExpression()), !dbg !9456
  ret i32 %4, !dbg !9459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9460 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9467, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9465, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9466, metadata !DIExpression()), !dbg !9468
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 1, !dbg !9469
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9469
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9471
  br i1 %6, label %10, label %7, !dbg !9472

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9473
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #26, !dbg !9474
  br label %10, !dbg !9475

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9468
  ret i32 %11, !dbg !9476
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9477 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9483, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9481, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata i8* %1, metadata !9482, metadata !DIExpression()), !dbg !9484
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9485, !srcloc !9487
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9488
  ret i32 %4, !dbg !9489
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9492, metadata !DIExpression()), !dbg !9493
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !9494
  ret void, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9500, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i32 %1, metadata !9501, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9502, metadata !DIExpression()), !dbg !9506
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9507
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9507
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9507
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9503, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i32 %0, metadata !9505, metadata !DIExpression()), !dbg !9506
  %7 = icmp slt i32 %0, %1, !dbg !9508
  br i1 %7, label %8, label %22, !dbg !9511

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9505, metadata !DIExpression()), !dbg !9506
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !9512
  %11 = icmp eq i32 %10, 0, !dbg !9512
  br i1 %11, label %19, label %12, !dbg !9515

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !9516
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9518
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9518
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9520
  br i1 %15, label %19, label %16, !dbg !9521

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9522
  %18 = load i8*, i8** %17, align 4, !dbg !9522
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9523
  br label %19, !dbg !9524

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9525
  call void @llvm.dbg.value(metadata i32 %20, metadata !9505, metadata !DIExpression()), !dbg !9506
  %21 = icmp eq i32 %20, %1, !dbg !9508
  br i1 %21, label %22, label %8, !dbg !9511, !llvm.loop !9526

22:                                               ; preds = %19, %3
  ret void, !dbg !9528
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !9529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9531, metadata !DIExpression()), !dbg !9532
  %2 = shl nuw i32 1, %0, !dbg !9533
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !9536
  ret i32 %3, !dbg !9537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !9538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9542, metadata !DIExpression()), !dbg !9543
  %2 = shl nuw i32 1, %0, !dbg !9544
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !9547
  ret void, !dbg !9548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9552, metadata !DIExpression()), !dbg !9553
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9554
  ret void, !dbg !9555
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9558, metadata !DIExpression()), !dbg !9559
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9560
  %3 = and i32 %2, %0, !dbg !9560
  %4 = icmp eq i32 %3, %0, !dbg !9561
  %5 = zext i1 %4 to i32, !dbg !9561
  ret i32 %5, !dbg !9562
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9565, metadata !DIExpression()), !dbg !9566
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !9567
  ret void, !dbg !9568
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9571, metadata !DIExpression()), !dbg !9572
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !9573
  ret void, !dbg !9574
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9577, metadata !DIExpression()), !dbg !9578
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !9579
  ret void, !dbg !9580
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9581 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9583, metadata !DIExpression()), !dbg !9584
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !9585
  ret void, !dbg !9586
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9589, metadata !DIExpression()), !dbg !9590
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !9591
  ret void, !dbg !9592
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9595, metadata !DIExpression()), !dbg !9596
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !9597
  ret void, !dbg !9598
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9601, metadata !DIExpression()), !dbg !9602
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !9603
  ret void, !dbg !9604
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9607, metadata !DIExpression()), !dbg !9608
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !9609
  ret void, !dbg !9610
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9611 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9613, metadata !DIExpression()), !dbg !9614
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9619, metadata !DIExpression()), !dbg !9620
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9625, metadata !DIExpression()), !dbg !9626
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !9627
  ret i32 0, !dbg !9628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !838 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !842, metadata !DIExpression()), !dbg !9629
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9630
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9632
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9634
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9636
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9638
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9640
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9642
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9644
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9646
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9648
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9650
  ret void, !dbg !9652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9655, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 0, metadata !9656, metadata !DIExpression()), !dbg !9657
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9658
  %3 = load i32, i32* %2, align 4, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %3, metadata !9656, metadata !DIExpression()), !dbg !9657
  %4 = shl nuw i32 1, %0, !dbg !9659
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !9660
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !9661
  ret void, !dbg !9662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9665, metadata !DIExpression()), !dbg !9666
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9667
  %3 = or i32 %2, %0, !dbg !9667
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9667
  ret void, !dbg !9668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !9669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9671, metadata !DIExpression()), !dbg !9672
  %2 = icmp slt i32 %0, 32, !dbg !9673
  br i1 %2, label %3, label %5, !dbg !9675

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9676
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !9678
  br label %5, !dbg !9679

5:                                                ; preds = %1, %3
  ret void, !dbg !9680
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9683, metadata !DIExpression()), !dbg !9684
  %2 = xor i32 %0, -1, !dbg !9685
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9685
  %4 = and i32 %3, %2, !dbg !9685
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9685
  ret void, !dbg !9686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !9687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9691, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %1, metadata !9692, metadata !DIExpression()), !dbg !9693
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9694

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9695
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !9697
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !9698
  br label %11, !dbg !9699

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9700
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !9701
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !9702
  br label %11, !dbg !9703

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9704
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !9705
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !9706
  br label %11, !dbg !9707

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9708
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !9709
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !9710
  br label %11, !dbg !9711

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9715, metadata !DIExpression()), !dbg !9716
  %2 = xor i32 %0, -1, !dbg !9717
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9717
  %4 = and i32 %3, %2, !dbg !9717
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9717
  ret void, !dbg !9718
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9721, metadata !DIExpression()), !dbg !9722
  %2 = xor i32 %0, -1, !dbg !9723
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9723
  %4 = and i32 %3, %2, !dbg !9723
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9723
  ret void, !dbg !9724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9727, metadata !DIExpression()), !dbg !9728
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9729
  %3 = or i32 %2, %0, !dbg !9729
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9729
  ret void, !dbg !9730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9733, metadata !DIExpression()), !dbg !9734
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9735
  %3 = or i32 %2, %0, !dbg !9735
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9735
  ret void, !dbg !9736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9741, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9742, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata i8* %2, metadata !9743, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9744, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9746, metadata !DIExpression()), !dbg !9747
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9748
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9748
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9750
  br i1 %6, label %7, label %9, !dbg !9751

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9752
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9753
  store i8* %2, i8** %8, align 4, !dbg !9754
  br label %9, !dbg !9755

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9747
  ret i32 %10, !dbg !9756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #8 !dbg !9757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9759, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9760, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9761, metadata !DIExpression()), !dbg !9762
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9763
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9764
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9765
  store i8* null, i8** %3, align 4, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8* %1, metadata !9771, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8* %1, metadata !9772, metadata !DIExpression()), !dbg !9775
  %3 = bitcast i8* %1 to i32*, !dbg !9776
  %4 = load i32, i32* %3, align 4, !dbg !9776
  %5 = add i32 %4, -169, !dbg !9776
  %6 = icmp ult i32 %5, -121, !dbg !9776
  br i1 %6, label %15, label %7, !dbg !9778

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9779
  %9 = inttoptr i32 %8 to i32*, !dbg !9780
  call void @llvm.dbg.value(metadata i32* %9, metadata !9773, metadata !DIExpression()), !dbg !9775
  %10 = load volatile i32, i32* %9, align 4, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %10, metadata !9774, metadata !DIExpression()), !dbg !9775
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9782
  %12 = bitcast i8* %11 to i32*, !dbg !9782
  %13 = load i32, i32* %12, align 4, !dbg !9782
  %14 = or i32 %13, %10, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %14, metadata !9774, metadata !DIExpression()), !dbg !9775
  store volatile i32 %14, i32* %9, align 4, !dbg !9784
  br label %15, !dbg !9785

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9775
  ret i32 %16, !dbg !9786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9787 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9789, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.value(metadata i8* %1, metadata !9790, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.value(metadata i8* %1, metadata !9791, metadata !DIExpression()), !dbg !9794
  %3 = bitcast i8* %1 to i32*, !dbg !9795
  %4 = load i32, i32* %3, align 4, !dbg !9795
  %5 = add i32 %4, -169, !dbg !9795
  %6 = icmp ult i32 %5, -121, !dbg !9795
  br i1 %6, label %16, label %7, !dbg !9797

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9798
  %9 = inttoptr i32 %8 to i32*, !dbg !9799
  call void @llvm.dbg.value(metadata i32* %9, metadata !9792, metadata !DIExpression()), !dbg !9794
  %10 = load volatile i32, i32* %9, align 4, !dbg !9800
  call void @llvm.dbg.value(metadata i32 %10, metadata !9793, metadata !DIExpression()), !dbg !9794
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9801
  %12 = bitcast i8* %11 to i32*, !dbg !9801
  %13 = load i32, i32* %12, align 4, !dbg !9801
  %14 = xor i32 %13, -1, !dbg !9802
  %15 = and i32 %10, %14, !dbg !9803
  call void @llvm.dbg.value(metadata i32 %15, metadata !9793, metadata !DIExpression()), !dbg !9794
  store volatile i32 %15, i32* %9, align 4, !dbg !9804
  br label %16, !dbg !9805

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9794
  ret i32 %17, !dbg !9806
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9807 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9809, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i8* %1, metadata !9810, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i32* %2, metadata !9811, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i8* %1, metadata !9812, metadata !DIExpression()), !dbg !9817
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9818
  call void @llvm.dbg.value(metadata i32 %4, metadata !9813, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i32 undef, metadata !9814, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i32 undef, metadata !9815, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i32 %4, metadata !9816, metadata !DIExpression()), !dbg !9817
  %5 = bitcast i8* %1 to i32*, !dbg !9819
  %6 = load i32, i32* %5, align 4, !dbg !9819
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !9820

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !9821
  call void @llvm.dbg.value(metadata i32 %8, metadata !9814, metadata !DIExpression()), !dbg !9817
  br label %16, !dbg !9822

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !9824
  call void @llvm.dbg.value(metadata i32 %10, metadata !9815, metadata !DIExpression()), !dbg !9817
  br label %16, !dbg !9825

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9826
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #26, !dbg !9827
  br label %16, !dbg !9828

14:                                               ; preds = %3
  br label %16, !dbg !9829

15:                                               ; preds = %3
  br label %16, !dbg !9830

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !9831
  br label %18, !dbg !9832

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !9817
  ret i32 %19, !dbg !9832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !9833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9835, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i8* %1, metadata !9836, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i8* %2, metadata !9837, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i8* %1, metadata !9838, metadata !DIExpression()), !dbg !9843
  %4 = bitcast i8* %1 to i32*, !dbg !9844
  %5 = load i32, i32* %4, align 4, !dbg !9844
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !9845
  call void @llvm.dbg.value(metadata i32 %6, metadata !9842, metadata !DIExpression()), !dbg !9843
  %7 = icmp slt i32 %6, 0, !dbg !9846
  br i1 %7, label %22, label %8, !dbg !9848

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9838, metadata !DIExpression()), !dbg !9843
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9849
  %10 = bitcast i8* %9 to i32*, !dbg !9849
  %11 = load i32, i32* %10, align 4, !dbg !9849
  %12 = lshr i32 %11, 16, !dbg !9849
  %13 = and i32 %12, 7, !dbg !9849
  %14 = lshr i32 %11, 8, !dbg !9850
  %15 = and i32 %14, 31, !dbg !9850
  %16 = shl i32 %13, %15, !dbg !9851
  call void @llvm.dbg.value(metadata i32 %16, metadata !9841, metadata !DIExpression()), !dbg !9843
  %17 = and i32 %11, 255, !dbg !9852
  %18 = or i32 %17, 1073887232, !dbg !9853
  %19 = inttoptr i32 %18 to i32*, !dbg !9854
  call void @llvm.dbg.value(metadata i32* %19, metadata !9839, metadata !DIExpression()), !dbg !9843
  %20 = load volatile i32, i32* %19, align 4, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %20, metadata !9840, metadata !DIExpression()), !dbg !9843
  %21 = or i32 %16, %20, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %21, metadata !9840, metadata !DIExpression()), !dbg !9843
  store volatile i32 %21, i32* %19, align 4, !dbg !9857
  br label %22, !dbg !9858

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9843
  ret i32 %23, !dbg !9859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !9860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9864, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 0, metadata !9865, metadata !DIExpression()), !dbg !9866
  %2 = add i32 %0, -1, !dbg !9867
  %3 = icmp ult i32 %2, 6, !dbg !9867
  br i1 %3, label %4, label %7, !dbg !9867

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9867
  %6 = load i32, i32* %5, align 4, !dbg !9867
  call void @llvm.dbg.value(metadata i32 %6, metadata !9865, metadata !DIExpression()), !dbg !9866
  br label %7, !dbg !9868

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9866
  ret i32 %8, !dbg !9869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !9870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9874, metadata !DIExpression()), !dbg !9876
  call void @llvm.dbg.value(metadata i32 %1, metadata !9875, metadata !DIExpression()), !dbg !9876
  %3 = udiv i32 %0, %1, !dbg !9877
  ret i32 %3, !dbg !9878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #5 !dbg !9879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9883, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 16, metadata !9884, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 336, metadata !9885, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 4, metadata !9886, metadata !DIExpression()), !dbg !9887
  %2 = mul i32 %0, 336, !dbg !9888
  %3 = lshr i32 %2, 6, !dbg !9889
  ret i32 %3, !dbg !9890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9891 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9893, metadata !DIExpression()), !dbg !9896
  tail call void @config_enable_default_clocks() #27, !dbg !9897
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !9898
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !9898
  %4 = lshr i32 %3, 4, !dbg !9898
  %5 = and i32 %4, 15, !dbg !9898
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9898
  %7 = load i8, i8* %6, align 1, !dbg !9898
  %8 = zext i8 %7 to i32, !dbg !9898
  %9 = lshr i32 %2, %8, !dbg !9898
  call void @llvm.dbg.value(metadata i32 %9, metadata !9894, metadata !DIExpression()), !dbg !9896
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9895, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9896
  %10 = icmp ult i32 %9, 84000000, !dbg !9899
  br i1 %10, label %11, label %13, !dbg !9901

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !9902
  br label %13, !dbg !9904

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !9905
  tail call fastcc void @set_up_plls() #26, !dbg !9906
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9907
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !9910
  br label %14, !dbg !9911

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9912
  %16 = icmp eq i32 %15, 8, !dbg !9913
  br i1 %16, label %17, label %14, !dbg !9911, !llvm.loop !9914

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9916
  br i1 %18, label %19, label %21, !dbg !9918

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !9919
  br label %21, !dbg !9921

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9922
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !9923
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !9924
  ret i32 0, !dbg !9925
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !9926 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9928
  %2 = and i32 %1, 240, !dbg !9928
  ret i32 %2, !dbg !9929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !9930 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !9931
  %2 = icmp eq i32 %1, 1, !dbg !9935
  br i1 %2, label %7, label %3, !dbg !9936

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !9937
  br label %4, !dbg !9939

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !9940
  %6 = icmp eq i32 %5, 1, !dbg !9941
  br i1 %6, label %7, label %4, !dbg !9939, !llvm.loop !9942

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !9944
  br label %8, !dbg !9947

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !9948
  %10 = icmp eq i32 %9, 1, !dbg !9949
  br i1 %10, label %11, label %8, !dbg !9947, !llvm.loop !9950

11:                                               ; preds = %8
  ret void, !dbg !9952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9953 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9954
  %2 = icmp eq i32 %1, 8, !dbg !9956
  br i1 %2, label %3, label %4, !dbg !9957

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9958
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !9960
  br label %4, !dbg !9961

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !9962
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9963
  %6 = and i32 %5, -196609, !dbg !9963
  %7 = or i32 %6, 65536, !dbg !9963
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9963
  tail call void @config_pll_sysclock() #27, !dbg !9964
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !9965
  br label %8, !dbg !9966

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !9967
  %10 = icmp eq i32 %9, 1, !dbg !9968
  br i1 %10, label %11, label %8, !dbg !9966, !llvm.loop !9969

11:                                               ; preds = %8
  ret void, !dbg !9971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !9972 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9974, metadata !DIExpression()), !dbg !9975
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9976
  %2 = and i32 %1, -241, !dbg !9976
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9976
  ret void, !dbg !9977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !9978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9980, metadata !DIExpression()), !dbg !9981
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9982
  %3 = and i32 %2, -4, !dbg !9982
  %4 = or i32 %3, %0, !dbg !9982
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9982
  ret void, !dbg !9983
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !9984 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9985
  %2 = and i32 %1, 12, !dbg !9985
  ret i32 %2, !dbg !9986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !9987 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9989, metadata !DIExpression()), !dbg !9990
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9991
  %2 = and i32 %1, -7169, !dbg !9991
  %3 = or i32 %2, 4096, !dbg !9991
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9991
  ret void, !dbg !9992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !9993 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9995, metadata !DIExpression()), !dbg !9996
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9997
  %2 = and i32 %1, -57345, !dbg !9997
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9997
  ret void, !dbg !9998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !9999 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10000
  %2 = icmp eq i32 %1, 1, !dbg !10002
  br i1 %2, label %7, label %3, !dbg !10003

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10004
  br label %4, !dbg !10006

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10007
  %6 = icmp eq i32 %5, 1, !dbg !10008
  br i1 %6, label %7, label %4, !dbg !10006, !llvm.loop !10009

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10011
  br label %8, !dbg !10012

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10013
  %10 = icmp eq i32 %9, 0, !dbg !10014
  br i1 %10, label %11, label %8, !dbg !10012, !llvm.loop !10015

11:                                               ; preds = %8
  ret void, !dbg !10017
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10018 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10019
  %2 = and i32 %1, -16777217, !dbg !10019
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10019
  ret void, !dbg !10020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10021 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10022
  %2 = or i32 %1, 16777216, !dbg !10022
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10022
  ret void, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10024 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10025
  %2 = lshr i32 %1, 25, !dbg !10026
  %3 = and i32 %2, 1, !dbg !10026
  ret i32 %3, !dbg !10027
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10028 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10029
  %2 = lshr i32 %1, 1, !dbg !10030
  %3 = and i32 %2, 1, !dbg !10030
  ret i32 %3, !dbg !10031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10032 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10033
  %2 = or i32 %1, 1, !dbg !10033
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10033
  ret void, !dbg !10034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10035 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10036
  %2 = or i32 %1, 1, !dbg !10036
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10036
  ret void, !dbg !10037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10039
  %2 = lshr i32 %1, 1, !dbg !10040
  %3 = and i32 %2, 1, !dbg !10040
  ret i32 %3, !dbg !10041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10042 {
  ret i32 16000000, !dbg !10044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10047 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10048
  ret void, !dbg !10049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10050 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10054, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 16, metadata !10055, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 336, metadata !10056, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 65536, metadata !10057, metadata !DIExpression()), !dbg !10058
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10059
  %2 = and i32 %1, -4227072, !dbg !10059
  %3 = or i32 %2, 21520, !dbg !10059
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10059
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10060
  %5 = and i32 %4, -196609, !dbg !10060
  %6 = or i32 %5, 65536, !dbg !10060
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10060
  ret void, !dbg !10061
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #20 !dbg !10062 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10063
  ret void, !dbg !10064
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #20 !dbg !10065 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10068, metadata !DIExpression()), !dbg !10070
  %2 = bitcast i32* %1 to i8*, !dbg !10071
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10071
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10069, metadata !DIExpression()), !dbg !10072
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10073
  %4 = or i32 %3, 268435456, !dbg !10073
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10073
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10074
  %6 = and i32 %5, 268435456, !dbg !10074
  store volatile i32 %6, i32* %1, align 4, !dbg !10075
  %7 = load volatile i32, i32* %1, align 4, !dbg !10076
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10077
  ret void, !dbg !10077
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10078 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10080, metadata !DIExpression()), !dbg !10081
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10082
  br i1 %2, label %3, label %4, !dbg !10084

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10085
  br label %4, !dbg !10086

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10081
  ret i32 %5, !dbg !10087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10088 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10093, metadata !DIExpression()), !dbg !10094
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10095, !srcloc !10097
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10098
  ret i1 %1, !dbg !10099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10100 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10101
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10102
  ret void, !dbg !10103
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10106, metadata !DIExpression()), !dbg !10107
  %2 = icmp eq i32 %0, 10, !dbg !10108
  br i1 %2, label %3, label %4, !dbg !10110

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10111
  br label %4, !dbg !10113

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10114
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10115
  ret i32 %0, !dbg !10116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10117 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10120, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i8 %0, metadata !10121, metadata !DIExpression()), !dbg !10122
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10123, !srcloc !10125
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10126
  ret void, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10130, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i8 %0, metadata !10131, metadata !DIExpression()), !dbg !10133
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10134
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10132, metadata !DIExpression()), !dbg !10133
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10135
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10135
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !10136
  ret void, !dbg !10137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10138 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10140, metadata !DIExpression()), !dbg !10141
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !10142
  ret i1 %1, !dbg !10143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10144 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10191, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10192, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10193, metadata !DIExpression()), !dbg !10194
  ret void, !dbg !10195
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10196 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10198, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i8 %1, metadata !10199, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i32 %2, metadata !10200, metadata !DIExpression()), !dbg !10203
  %5 = bitcast i32* %4 to i8*, !dbg !10204
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10204
  call void @llvm.dbg.value(metadata i32* %4, metadata !10202, metadata !DIExpression(DW_OP_deref)), !dbg !10203
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %6, metadata !10201, metadata !DIExpression()), !dbg !10203
  %7 = icmp eq i32 %6, 0, !dbg !10206
  br i1 %7, label %8, label %31, !dbg !10208

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10201, metadata !DIExpression()), !dbg !10203
  %9 = and i32 %2, 131072, !dbg !10209
  %10 = icmp eq i32 %9, 0, !dbg !10211
  br i1 %10, label %28, label %11, !dbg !10212

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10213
  %13 = icmp eq i32 %12, 0, !dbg !10216
  br i1 %13, label %18, label %14, !dbg !10217

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10218
  %16 = shl nuw i32 1, %15, !dbg !10218
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !10220
  br label %25, !dbg !10221

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10222
  %20 = icmp eq i32 %19, 0, !dbg !10224
  %21 = zext i8 %1 to i32, !dbg !10203
  br i1 %20, label %25, label %22, !dbg !10225

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10226
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !10228
  br label %25, !dbg !10229

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10230
  %27 = load i32, i32* %4, align 4, !dbg !10231
  call void @llvm.dbg.value(metadata i32 %30, metadata !10202, metadata !DIExpression()), !dbg !10203
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !10232
  br label %31, !dbg !10233

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10230
  %30 = load i32, i32* %4, align 4, !dbg !10231
  call void @llvm.dbg.value(metadata i32 %30, metadata !10202, metadata !DIExpression()), !dbg !10203
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !10232
  call void @llvm.dbg.value(metadata i32 0, metadata !10201, metadata !DIExpression()), !dbg !10203
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10234
  ret i32 %6, !dbg !10234
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !10235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10239, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32* %1, metadata !10240, metadata !DIExpression()), !dbg !10244
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10245
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10245
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10245
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10241, metadata !DIExpression()), !dbg !10244
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10246
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10246
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10246
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10243, metadata !DIExpression()), !dbg !10244
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !10247
  store i32 %9, i32* %1, align 4, !dbg !10248
  ret i32 0, !dbg !10249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !10250 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10252, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i32 %1, metadata !10253, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i32 %2, metadata !10254, metadata !DIExpression()), !dbg !10258
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10259
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10259
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10259
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10255, metadata !DIExpression()), !dbg !10258
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10260
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10260
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10260
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10256, metadata !DIExpression()), !dbg !10258
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !10261
  call void @llvm.dbg.value(metadata i32 %10, metadata !10257, metadata !DIExpression()), !dbg !10258
  %11 = xor i32 %1, -1, !dbg !10262
  %12 = and i32 %10, %11, !dbg !10263
  %13 = and i32 %2, %1, !dbg !10264
  %14 = or i32 %12, %13, !dbg !10265
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !10266
  ret i32 0, !dbg !10267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10268 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10270, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()), !dbg !10274
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10275
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10275
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10275
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10272, metadata !DIExpression()), !dbg !10274
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10276
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10276
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10276
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10273, metadata !DIExpression()), !dbg !10274
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10277
  store volatile i32 %1, i32* %9, align 4, !dbg !10277
  ret i32 0, !dbg !10278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10279 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10281, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i32 %1, metadata !10282, metadata !DIExpression()), !dbg !10285
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10286
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10286
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10286
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10283, metadata !DIExpression()), !dbg !10285
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10287
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10287
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10287
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10284, metadata !DIExpression()), !dbg !10285
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !10288
  ret i32 0, !dbg !10289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10290 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10292, metadata !DIExpression()), !dbg !10296
  call void @llvm.dbg.value(metadata i32 %1, metadata !10293, metadata !DIExpression()), !dbg !10296
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10297
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10297
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10297
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10294, metadata !DIExpression()), !dbg !10296
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10298
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10298
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10298
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10295, metadata !DIExpression()), !dbg !10296
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10299
  %10 = load volatile i32, i32* %9, align 4, !dbg !10299
  %11 = xor i32 %10, %1, !dbg !10299
  store volatile i32 %11, i32* %9, align 4, !dbg !10299
  ret i32 0, !dbg !10300
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10303, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i8 %1, metadata !10304, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %2, metadata !10305, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %3, metadata !10306, metadata !DIExpression()), !dbg !10313
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10314
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10314
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10314
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10307, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i8* undef, metadata !10308, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 0, metadata !10310, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 0, metadata !10311, metadata !DIExpression()), !dbg !10313
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10315

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10316
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !10320
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10321
  %12 = load i32, i32* %11, align 4, !dbg !10321
  %13 = icmp eq i32 %10, %12, !dbg !10322
  br i1 %13, label %14, label %29, !dbg !10323

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10324
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10326
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10327
  br label %29, !dbg !10328

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10329
  %17 = load i8*, i8** %16, align 4, !dbg !10329
  call void @llvm.dbg.value(metadata i8* %17, metadata !10308, metadata !DIExpression()), !dbg !10313
  %18 = zext i8 %1 to i32, !dbg !10330
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10332
  %20 = icmp eq i32 %19, 0, !dbg !10333
  br i1 %20, label %21, label %29, !dbg !10334

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10335
  %23 = load i32, i32* %22, align 4, !dbg !10335
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !10336
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10337

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10310, metadata !DIExpression()), !dbg !10313
  br label %27, !dbg !10338

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10310, metadata !DIExpression()), !dbg !10313
  br label %27, !dbg !10340

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10310, metadata !DIExpression()), !dbg !10313
  br label %27, !dbg !10341

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10313
  call void @llvm.dbg.value(metadata i32 %28, metadata !10310, metadata !DIExpression()), !dbg !10313
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10342
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10343
  br label %29, !dbg !10343

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10313
  call void @llvm.dbg.value(metadata i32 %30, metadata !10311, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.label(metadata !10312), !dbg !10344
  ret i32 %30, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #15 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10348, metadata !DIExpression()), !dbg !10352
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10349, metadata !DIExpression()), !dbg !10352
  call void @llvm.dbg.value(metadata i1 %2, metadata !10350, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10352
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10353
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10353
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10353
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10351, metadata !DIExpression()), !dbg !10352
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10354
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !10355
  ret i32 %8, !dbg !10356
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #15 !dbg !10357 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10363, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10364, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i1 %2, metadata !10365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10366
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !10367
  br i1 %4, label %10, label %5, !dbg !10369

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10370
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !10373
  %8 = or i1 %7, %2, !dbg !10374
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10374
  br i1 %2, label %11, label %13, !dbg !10374

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10375

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10376
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !10379
  br label %13, !dbg !10380

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10366
  ret i32 %14, !dbg !10381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10382 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10386, metadata !DIExpression()), !dbg !10387
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10388
  %3 = icmp eq %struct._snode* %2, null, !dbg !10388
  ret i1 %3, !dbg !10388
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10393, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10394, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10395, metadata !DIExpression()), !dbg !10397
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10398
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10396, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10395, metadata !DIExpression()), !dbg !10397
  %4 = icmp eq %struct._snode* %3, null, !dbg !10400
  br i1 %4, label %15, label %5, !dbg !10398

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10396, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10395, metadata !DIExpression()), !dbg !10397
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10402
  br i1 %6, label %9, label %11, !dbg !10405

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10396, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10395, metadata !DIExpression()), !dbg !10397
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10402
  br i1 %8, label %9, label %11, !dbg !10405, !llvm.loop !10406

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !10407
  br label %15, !dbg !10407

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10396, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10395, metadata !DIExpression()), !dbg !10397
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !10400
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10396, metadata !DIExpression()), !dbg !10397
  %14 = icmp eq %struct._snode* %13, null, !dbg !10400
  br i1 %14, label %15, label %7, !dbg !10398, !llvm.loop !10406

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10410 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10414, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10415, metadata !DIExpression()), !dbg !10416
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10417
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !10417
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !10417
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10418
  %5 = icmp eq %struct._snode* %4, null, !dbg !10418
  br i1 %5, label %6, label %8, !dbg !10417

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10420
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !10420
  br label %8, !dbg !10420

8:                                                ; preds = %6, %2
  ret void, !dbg !10417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10422 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10426, metadata !DIExpression()), !dbg !10427
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10428
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10428
  ret %struct._snode* %3, !dbg !10429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10430 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10434, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10435, metadata !DIExpression()), !dbg !10436
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10437
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10438
  ret void, !dbg !10439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10440 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10442, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10443, metadata !DIExpression()), !dbg !10444
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10445
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10446
  ret void, !dbg !10447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10448 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10450, metadata !DIExpression()), !dbg !10451
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10452
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10452
  ret %struct._snode* %3, !dbg !10453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10456, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10457, metadata !DIExpression()), !dbg !10458
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10459
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10460
  ret void, !dbg !10461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10462 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10466, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10467, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10468, metadata !DIExpression()), !dbg !10469
  %4 = icmp eq %struct._snode* %1, null, !dbg !10470
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10472
  br i1 %4, label %6, label %11, !dbg !10473

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10474
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10476
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10476
  br i1 %8, label %9, label %15, !dbg !10474

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10478
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10478
  br label %15, !dbg !10478

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10480
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10482
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10482
  br i1 %13, label %14, label %15, !dbg !10480

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10484
  br label %15, !dbg !10484

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10473
  ret void, !dbg !10473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !10486 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10490, metadata !DIExpression()), !dbg !10491
  %2 = icmp eq %struct._snode* %0, null, !dbg !10492
  br i1 %2, label %5, label %3, !dbg !10492

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10492
  br label %5, !dbg !10492

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10492
  ret %struct._snode* %6, !dbg !10492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10493 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10495, metadata !DIExpression()), !dbg !10496
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10497
  ret %struct._snode* %2, !dbg !10497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10498 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10500, metadata !DIExpression()), !dbg !10501
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10502
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10502
  ret %struct._snode* %3, !dbg !10503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10506, metadata !DIExpression()), !dbg !10509
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10510, !range !10511
  call void @llvm.dbg.value(metadata i32 %2, metadata !10507, metadata !DIExpression()), !dbg !10509
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10512
  call void @llvm.dbg.value(metadata i32 %3, metadata !10508, metadata !DIExpression()), !dbg !10509
  ret i32 %3, !dbg !10513
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10516, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.value(metadata i8* %1, metadata !10517, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.value(metadata i8* %1, metadata !10518, metadata !DIExpression()), !dbg !10519
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10520
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10520
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10521
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10521
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10521
  %8 = shl nuw i32 1, %0, !dbg !10522
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10523
  ret void, !dbg !10524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10525 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10529, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 %1, metadata !10530, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10531, metadata !DIExpression()), !dbg !10535
  %4 = bitcast i64* %3 to i8*, !dbg !10536
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10536
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10533, metadata !DIExpression()), !dbg !10535
  store i64 70368744177732, i64* %3, align 8, !dbg !10537
  call void @llvm.dbg.value(metadata i64* %3, metadata !10533, metadata !DIExpression(DW_OP_deref)), !dbg !10535
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10538
  call void @llvm.dbg.value(metadata i32 %5, metadata !10534, metadata !DIExpression()), !dbg !10535
  %6 = icmp eq i32 %5, 0, !dbg !10539
  br i1 %6, label %7, label %8, !dbg !10541

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10542
  br label %8, !dbg !10543

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10544
  ret void, !dbg !10544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10545 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10547, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata i8* %0, metadata !10548, metadata !DIExpression()), !dbg !10550
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10551
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10549, metadata !DIExpression()), !dbg !10550
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10552
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10552
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !10553
  ret i32 %5, !dbg !10554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10557, metadata !DIExpression()), !dbg !10560
  call void @llvm.dbg.value(metadata i32 %1, metadata !10558, metadata !DIExpression()), !dbg !10560
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %3, metadata !10559, metadata !DIExpression()), !dbg !10560
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10562
  ret void, !dbg !10563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10568, metadata !DIExpression()), !dbg !10569
  %2 = sdiv i32 %0, 4, !dbg !10570
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10571
  %6 = add nsw i32 %5, 16, !dbg !10572
  %7 = shl i32 15, %6, !dbg !10573
  %8 = or i32 %7, %2, !dbg !10574
  ret i32 %8, !dbg !10575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10580, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i32 %1, metadata !10581, metadata !DIExpression()), !dbg !10582
  %3 = and i32 %1, 255, !dbg !10583
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10583
  %5 = load volatile i32, i32* %4, align 4, !dbg !10583
  %6 = lshr i32 %1, 16, !dbg !10583
  %7 = xor i32 %6, -1, !dbg !10583
  %8 = and i32 %5, %7, !dbg !10583
  call void @llvm.dbg.value(metadata i32 %6, metadata !10584, metadata !DIExpression()) #25, !dbg !10588
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10590, !srcloc !10591
  call void @llvm.dbg.value(metadata i32 %9, metadata !10587, metadata !DIExpression()) #25, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %9, metadata !10592, metadata !DIExpression()) #25, !dbg !10597
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !10599, !range !4974
  %11 = shl i32 %0, %10, !dbg !10583
  %12 = or i32 %11, %8, !dbg !10583
  store volatile i32 %12, i32* %4, align 4, !dbg !10583
  ret void, !dbg !10600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10601 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10605, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10606, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata i32 %2, metadata !10607, metadata !DIExpression()), !dbg !10610
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10611
  %5 = icmp eq %struct._snode* %4, null, !dbg !10611
  br i1 %5, label %21, label %6, !dbg !10611

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10609, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10608, metadata !DIExpression()), !dbg !10610
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10614
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10614
  %11 = load i32, i32* %10, align 4, !dbg !10614
  %12 = and i32 %11, %2, !dbg !10618
  %13 = icmp eq i32 %12, 0, !dbg !10618
  br i1 %13, label %19, label %14, !dbg !10619

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10608, metadata !DIExpression()), !dbg !10610
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10620
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10620
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10620
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !10622
  br label %19, !dbg !10623

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10608, metadata !DIExpression()), !dbg !10610
  %20 = icmp eq %struct._snode* %8, null, !dbg !10624
  br i1 %20, label %21, label %6, !dbg !10624

21:                                               ; preds = %19, %3
  ret void, !dbg !10625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10628, metadata !DIExpression()), !dbg !10629
  %2 = and i32 %0, 255, !dbg !10630
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10630
  %4 = load volatile i32, i32* %3, align 4, !dbg !10630
  %5 = lshr i32 %0, 16, !dbg !10630
  %6 = and i32 %4, %5, !dbg !10630
  call void @llvm.dbg.value(metadata i32 %5, metadata !10584, metadata !DIExpression()) #25, !dbg !10631
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !10633, !srcloc !10591
  call void @llvm.dbg.value(metadata i32 %7, metadata !10587, metadata !DIExpression()) #25, !dbg !10631
  call void @llvm.dbg.value(metadata i32 %7, metadata !10592, metadata !DIExpression()) #25, !dbg !10634
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10636, !range !4974
  %9 = lshr i32 %6, %8, !dbg !10637
  ret i32 %9, !dbg !10638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10639 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10644, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i32 %1, metadata !10645, metadata !DIExpression()), !dbg !10646
  %3 = shl i32 %1, 16, !dbg !10647
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10647
  store volatile i32 %3, i32* %4, align 4, !dbg !10647
  ret void, !dbg !10648
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10649 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10653, metadata !DIExpression()), !dbg !10654
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10655
  %3 = load volatile i32, i32* %2, align 4, !dbg !10655
  ret i32 %3, !dbg !10656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10659, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata i32 %1, metadata !10660, metadata !DIExpression()), !dbg !10661
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10662
  store volatile i32 %1, i32* %3, align 4, !dbg !10662
  ret void, !dbg !10663
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10666, metadata !DIExpression()), !dbg !10667
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10668
  %3 = load volatile i32, i32* %2, align 4, !dbg !10668
  ret i32 %3, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10674, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.value(metadata i32* %1, metadata !10675, metadata !DIExpression()), !dbg !10676
  %3 = and i32 %0, 131072, !dbg !10677
  %4 = icmp eq i32 %3, 0, !dbg !10679
  br i1 %4, label %22, label %5, !dbg !10680

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10681
  %6 = and i32 %0, 2, !dbg !10683
  %7 = icmp eq i32 %6, 0, !dbg !10685
  br i1 %7, label %11, label %8, !dbg !10686

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10687
  %10 = icmp eq i32 %9, 0, !dbg !10687
  br i1 %10, label %33, label %11, !dbg !10690

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10691
  store i32 %12, i32* %1, align 4, !dbg !10691
  %13 = and i32 %0, 16, !dbg !10692
  %14 = icmp eq i32 %13, 0, !dbg !10694
  br i1 %14, label %17, label %15, !dbg !10695

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10696
  br label %31, !dbg !10698

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10699
  %19 = icmp eq i32 %18, 0, !dbg !10701
  br i1 %19, label %33, label %20, !dbg !10702

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10703
  br label %31, !dbg !10705

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10706
  %24 = icmp eq i32 %23, 0, !dbg !10708
  br i1 %24, label %31, label %25, !dbg !10709

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10710
  %27 = icmp eq i32 %26, 0, !dbg !10713
  br i1 %27, label %28, label %31, !dbg !10714

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10715
  br label %33, !dbg !10716

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10676
  ret i32 %34, !dbg !10716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10721, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.value(metadata i32 %2, metadata !10723, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.value(metadata i32 %3, metadata !10724, metadata !DIExpression()), !dbg !10732
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10733
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10733
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10733
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10725, metadata !DIExpression()), !dbg !10732
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10734
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10734
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10734
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10726, metadata !DIExpression()), !dbg !10732
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10735
  call void @llvm.dbg.value(metadata i32 %11, metadata !10727, metadata !DIExpression()), !dbg !10732
  %12 = and i32 %2, 48, !dbg !10736
  call void @llvm.dbg.value(metadata i32 %12, metadata !10728, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.value(metadata i32 %2, metadata !10729, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10732
  call void @llvm.dbg.value(metadata i32 %2, metadata !10730, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10732
  call void @llvm.dbg.value(metadata i32 %2, metadata !10731, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10732
  %13 = lshr i32 %2, 6, !dbg !10737
  %14 = and i32 %13, 1, !dbg !10737
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10738
  %15 = lshr i32 %2, 7, !dbg !10739
  %16 = and i32 %15, 3, !dbg !10739
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10740
  %17 = lshr i32 %2, 9, !dbg !10741
  %18 = and i32 %17, 3, !dbg !10741
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10742
  %19 = icmp eq i32 %12, 32, !dbg !10743
  br i1 %19, label %20, label %24, !dbg !10745

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10746
  br i1 %21, label %22, label %23, !dbg !10749

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10750
  br label %24, !dbg !10752

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10753
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10755
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10756
  ret void, !dbg !10757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10760, metadata !DIExpression()), !dbg !10762
  %2 = shl nuw i32 1, %0, !dbg !10763
  call void @llvm.dbg.value(metadata i32 %2, metadata !10761, metadata !DIExpression()), !dbg !10762
  ret i32 %2, !dbg !10764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10765 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10769, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata i32 %1, metadata !10770, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata i32 %2, metadata !10771, metadata !DIExpression()), !dbg !10772
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10773
  %5 = load volatile i32, i32* %4, align 4, !dbg !10773
  %6 = xor i32 %1, -1, !dbg !10773
  %7 = and i32 %5, %6, !dbg !10773
  %8 = mul i32 %2, %1, !dbg !10773
  %9 = or i32 %7, %8, !dbg !10773
  store volatile i32 %9, i32* %4, align 4, !dbg !10773
  ret void, !dbg !10774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10775 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10777, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %1, metadata !10778, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10779, metadata !DIExpression()), !dbg !10780
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10781
  %5 = load volatile i32, i32* %4, align 4, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()) #25, !dbg !10782
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10784, !srcloc !10591
  call void @llvm.dbg.value(metadata i32 %6, metadata !10587, metadata !DIExpression()) #25, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10785
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10787, !range !4974
  %8 = shl nuw nsw i32 %7, 1, !dbg !10781
  %9 = shl i32 3, %8, !dbg !10781
  %10 = xor i32 %9, -1, !dbg !10781
  %11 = and i32 %5, %10, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()) #25, !dbg !10788
  call void @llvm.dbg.value(metadata i32 %6, metadata !10587, metadata !DIExpression()) #25, !dbg !10788
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10790
  %12 = shl i32 %2, %8, !dbg !10781
  %13 = or i32 %11, %12, !dbg !10781
  store volatile i32 %13, i32* %4, align 4, !dbg !10781
  ret void, !dbg !10792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10793 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10795, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.value(metadata i32 %1, metadata !10796, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.value(metadata i32 %2, metadata !10797, metadata !DIExpression()), !dbg !10798
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10799
  %5 = load volatile i32, i32* %4, align 4, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()) #25, !dbg !10800
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10802, !srcloc !10591
  call void @llvm.dbg.value(metadata i32 %6, metadata !10587, metadata !DIExpression()) #25, !dbg !10800
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10803
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10805, !range !4974
  %8 = shl nuw nsw i32 %7, 1, !dbg !10799
  %9 = shl i32 3, %8, !dbg !10799
  %10 = xor i32 %9, -1, !dbg !10799
  %11 = and i32 %5, %10, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()) #25, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %6, metadata !10587, metadata !DIExpression()) #25, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10808
  %12 = shl i32 %2, %8, !dbg !10799
  %13 = or i32 %11, %12, !dbg !10799
  store volatile i32 %13, i32* %4, align 4, !dbg !10799
  ret void, !dbg !10810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10811 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10813, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.value(metadata i32 %1, metadata !10814, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.value(metadata i32 %2, metadata !10815, metadata !DIExpression()), !dbg !10816
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10817
  %5 = load volatile i32, i32* %4, align 4, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()) #25, !dbg !10818
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10820, !srcloc !10591
  call void @llvm.dbg.value(metadata i32 %6, metadata !10587, metadata !DIExpression()) #25, !dbg !10818
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10821
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10823, !range !4974
  %8 = shl nuw nsw i32 %7, 2, !dbg !10817
  %9 = shl i32 15, %8, !dbg !10817
  %10 = xor i32 %9, -1, !dbg !10817
  %11 = and i32 %5, %10, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()) #25, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %6, metadata !10587, metadata !DIExpression()) #25, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10826
  %12 = shl i32 %2, %8, !dbg !10817
  %13 = or i32 %11, %12, !dbg !10817
  store volatile i32 %13, i32* %4, align 4, !dbg !10817
  ret void, !dbg !10828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10829 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10831, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.value(metadata i32 %1, metadata !10832, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.value(metadata i32 %2, metadata !10833, metadata !DIExpression()), !dbg !10834
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10835
  %5 = load volatile i32, i32* %4, align 4, !dbg !10835
  %6 = lshr i32 %1, 8, !dbg !10835
  call void @llvm.dbg.value(metadata i32 %6, metadata !10584, metadata !DIExpression()) #25, !dbg !10836
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10838, !srcloc !10591
  call void @llvm.dbg.value(metadata i32 %7, metadata !10587, metadata !DIExpression()) #25, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %7, metadata !10592, metadata !DIExpression()) #25, !dbg !10839
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10841, !range !4974
  %9 = shl nuw nsw i32 %8, 2, !dbg !10835
  %10 = shl i32 15, %9, !dbg !10835
  %11 = xor i32 %10, -1, !dbg !10835
  %12 = and i32 %5, %11, !dbg !10835
  call void @llvm.dbg.value(metadata i32 %6, metadata !10584, metadata !DIExpression()) #25, !dbg !10842
  call void @llvm.dbg.value(metadata i32 %7, metadata !10587, metadata !DIExpression()) #25, !dbg !10842
  call void @llvm.dbg.value(metadata i32 %7, metadata !10592, metadata !DIExpression()) #25, !dbg !10844
  %13 = shl i32 %2, %9, !dbg !10835
  %14 = or i32 %12, %13, !dbg !10835
  store volatile i32 %14, i32* %4, align 4, !dbg !10835
  ret void, !dbg !10846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10847 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10849, metadata !DIExpression()), !dbg !10852
  call void @llvm.dbg.value(metadata i32 %1, metadata !10850, metadata !DIExpression()), !dbg !10852
  call void @llvm.dbg.value(metadata i32 %2, metadata !10851, metadata !DIExpression()), !dbg !10852
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10853
  %5 = load volatile i32, i32* %4, align 4, !dbg !10853
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()) #25, !dbg !10854
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10856, !srcloc !10591
  call void @llvm.dbg.value(metadata i32 %6, metadata !10587, metadata !DIExpression()) #25, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10857
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10859, !range !4974
  %8 = shl nuw nsw i32 %7, 1, !dbg !10853
  %9 = shl i32 3, %8, !dbg !10853
  %10 = xor i32 %9, -1, !dbg !10853
  %11 = and i32 %5, %10, !dbg !10853
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()) #25, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %6, metadata !10587, metadata !DIExpression()) #25, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10862
  %12 = shl i32 %2, %8, !dbg !10853
  %13 = or i32 %11, %12, !dbg !10853
  store volatile i32 %13, i32* %4, align 4, !dbg !10853
  ret void, !dbg !10864
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10867, metadata !DIExpression()), !dbg !10870
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10871
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10871
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10871
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10868, metadata !DIExpression()), !dbg !10870
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10872
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10873
  %6 = tail call fastcc zeroext i1 @device_is_ready.101() #26, !dbg !10874
  br i1 %6, label %7, label %11, !dbg !10876

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10877
  call void @llvm.dbg.value(metadata i32 %8, metadata !10869, metadata !DIExpression()), !dbg !10870
  %9 = icmp slt i32 %8, 0, !dbg !10878
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10880
  br label %11, !dbg !10880

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10870
  ret i32 %12, !dbg !10881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.101() unnamed_addr #1 !dbg !10882 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10886, metadata !DIExpression()), !dbg !10887
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10888, !srcloc !10890
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.102() #26, !dbg !10891
  ret i1 %1, !dbg !10892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10893 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10897, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i8 1, metadata !10898, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10899, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i32 0, metadata !10900, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10901, metadata !DIExpression()), !dbg !10902
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10903
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10903
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10903
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10899, metadata !DIExpression()), !dbg !10902
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10904
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10907
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %7, metadata !10900, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i32 %7, metadata !10900, metadata !DIExpression()), !dbg !10902
  ret i32 %7, !dbg !10909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.102() unnamed_addr #1 !dbg !10910 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10912, metadata !DIExpression()), !dbg !10913
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !10914
  ret i1 %1, !dbg !10915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10920, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 %1, metadata !10921, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 %2, metadata !10922, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 %3, metadata !10923, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 0, metadata !10924, metadata !DIExpression()), !dbg !10928
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10929
  %5 = icmp eq i32 %3, 17, !dbg !10930
  br i1 %5, label %6, label %14, !dbg !10931

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10932
  call void @llvm.dbg.value(metadata i32 %7, metadata !10925, metadata !DIExpression()), !dbg !10933
  %8 = icmp eq i32 %7, 0, !dbg !10934
  %9 = shl nuw i32 1, %1, !dbg !10936
  br i1 %8, label %12, label %10, !dbg !10937

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10938
  br label %14, !dbg !10940

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10941
  br label %14, !dbg !10944

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10945
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #20 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10948, metadata !DIExpression()), !dbg !10952
  call void @llvm.dbg.value(metadata i8* %1, metadata !10949, metadata !DIExpression()), !dbg !10952
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10953
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10953
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10953
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10950, metadata !DIExpression()), !dbg !10952
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10954
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10954
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10956
  %9 = icmp eq i32 %8, 0, !dbg !10956
  br i1 %9, label %12, label %10, !dbg !10957

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10958
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10960
  br label %12, !dbg !10961

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10962
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10964
  %15 = icmp eq i32 %14, 0, !dbg !10964
  br i1 %15, label %19, label %16, !dbg !10965

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10966
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10967
  store i8 %18, i8* %1, align 1, !dbg !10968
  br label %19, !dbg !10969

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10952
  ret i32 %20, !dbg !10970
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10971 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10973, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.value(metadata i8 %1, metadata !10974, metadata !DIExpression()), !dbg !10977
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10978
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10978
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10978
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10975, metadata !DIExpression()), !dbg !10977
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10979

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10980
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10983
  %10 = icmp eq i32 %9, 0, !dbg !10983
  br i1 %10, label %18, label %11, !dbg !10984

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10985, !srcloc !10992
  call void @llvm.dbg.value(metadata i32 undef, metadata !10988, metadata !DIExpression()) #25, !dbg !10993
  call void @llvm.dbg.value(metadata i32 undef, metadata !10989, metadata !DIExpression()) #25, !dbg !10993
  call void @llvm.dbg.value(metadata i32 undef, metadata !10976, metadata !DIExpression()), !dbg !10977
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10994
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10996
  %15 = icmp eq i32 %14, 0, !dbg !10996
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10985
  br i1 %15, label %17, label %19, !dbg !10997

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10988, metadata !DIExpression()) #25, !dbg !10993
  call void @llvm.dbg.value(metadata i32 %16, metadata !10976, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.value(metadata i32 undef, metadata !10998, metadata !DIExpression()) #25, !dbg !11001
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11003, !srcloc !11004
  br label %18, !dbg !11005

18:                                               ; preds = %17, %7
  br label %7, !dbg !10980, !llvm.loop !11006

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10985
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11008
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %20, metadata !10998, metadata !DIExpression()) #25, !dbg !11010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11012, !srcloc !11004
  ret void, !dbg !11013
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #20 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11016, metadata !DIExpression()), !dbg !11019
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11020
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11020
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11020
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11017, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 0, metadata !11018, metadata !DIExpression()), !dbg !11019
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11021
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11021
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !11023
  %8 = icmp ne i32 %7, 0, !dbg !11023
  %9 = zext i1 %8 to i32, !dbg !11024
  call void @llvm.dbg.value(metadata i32 %9, metadata !11018, metadata !DIExpression()), !dbg !11019
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11025
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !11027
  %12 = icmp eq i32 %11, 0, !dbg !11027
  %13 = or i32 %9, 2, !dbg !11028
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11028
  call void @llvm.dbg.value(metadata i32 %14, metadata !11018, metadata !DIExpression()), !dbg !11019
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11029
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !11031
  %17 = icmp eq i32 %16, 0, !dbg !11031
  %18 = or i32 %14, 4, !dbg !11032
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %19, metadata !11018, metadata !DIExpression()), !dbg !11019
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11033
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !11035
  %22 = icmp eq i32 %21, 0, !dbg !11035
  %23 = or i32 %19, 8, !dbg !11036
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11036
  call void @llvm.dbg.value(metadata i32 %24, metadata !11018, metadata !DIExpression()), !dbg !11019
  %25 = and i32 %24, 8, !dbg !11037
  %26 = icmp eq i32 %25, 0, !dbg !11037
  br i1 %26, label %29, label %27, !dbg !11039

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11040
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !11042
  br label %29, !dbg !11043

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11044
  %31 = icmp eq i32 %30, 0, !dbg !11044
  br i1 %31, label %34, label %32, !dbg !11046

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11047
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !11049
  br label %34, !dbg !11050

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11051
  %36 = icmp eq i32 %35, 0, !dbg !11051
  br i1 %36, label %39, label %37, !dbg !11053

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11054
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !11056
  br label %39, !dbg !11057

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11058
  %41 = icmp eq i32 %40, 0, !dbg !11058
  br i1 %41, label %44, label %42, !dbg !11060

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11061
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !11063
  br label %44, !dbg !11064

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11065
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !11066
  ret i32 %24, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11070, metadata !DIExpression()), !dbg !11079
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11071, metadata !DIExpression()), !dbg !11079
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11080
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11080
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11080
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11072, metadata !DIExpression()), !dbg !11079
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11081
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11081
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11081
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11073, metadata !DIExpression()), !dbg !11079
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11082
  %10 = load i8, i8* %9, align 4, !dbg !11082
  %11 = zext i8 %10 to i32, !dbg !11083
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !11084
  call void @llvm.dbg.value(metadata i32 %12, metadata !11075, metadata !DIExpression()), !dbg !11079
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11085
  %14 = load i8, i8* %13, align 1, !dbg !11085
  %15 = zext i8 %14 to i32, !dbg !11086
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !11087
  call void @llvm.dbg.value(metadata i32 %16, metadata !11076, metadata !DIExpression()), !dbg !11079
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11088
  %18 = load i8, i8* %17, align 2, !dbg !11088
  %19 = zext i8 %18 to i32, !dbg !11089
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !11090
  call void @llvm.dbg.value(metadata i32 %20, metadata !11077, metadata !DIExpression()), !dbg !11079
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11091
  %22 = load i8, i8* %21, align 1, !dbg !11091
  %23 = zext i8 %22 to i32, !dbg !11092
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %24, metadata !11078, metadata !DIExpression()), !dbg !11079
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11094

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11096
  br i1 %26, label %69, label %27, !dbg !11098

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11099

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11100
  br i1 %29, label %65, label %30, !dbg !11100

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11102
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11079
  br i1 %31, label %38, label %34, !dbg !11104

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11105
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !11105

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11108
  br i1 %37, label %38, label %69, !dbg !11109

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11110
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !11111
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !11112
  %41 = icmp eq i32 %12, %40, !dbg !11114
  br i1 %41, label %43, label %42, !dbg !11115

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !11116
  br label %43, !dbg !11118

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !11119
  %45 = icmp eq i32 %16, %44, !dbg !11121
  br i1 %45, label %47, label %46, !dbg !11122

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !11123
  br label %47, !dbg !11125

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !11126
  %49 = icmp eq i32 %20, %48, !dbg !11128
  br i1 %49, label %51, label %50, !dbg !11129

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !11130
  br label %51, !dbg !11132

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !11133
  %53 = icmp eq i32 %24, %52, !dbg !11135
  br i1 %53, label %55, label %54, !dbg !11136

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !11137
  br label %55, !dbg !11139

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11140
  %57 = load i32, i32* %56, align 4, !dbg !11140
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11142
  %59 = load i32, i32* %58, align 4, !dbg !11142
  %60 = icmp eq i32 %57, %59, !dbg !11143
  br i1 %60, label %63, label %61, !dbg !11144

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !11145
  %62 = load i32, i32* %56, align 4, !dbg !11147
  store i32 %62, i32* %58, align 4, !dbg !11148
  br label %63, !dbg !11149

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11150
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !11151
  br label %69, !dbg !11152

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11100
  %67 = and i8 %66, 1, !dbg !11100
  %68 = icmp eq i8 %67, 0, !dbg !11100
  br i1 %68, label %30, label %69, !dbg !11100

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11079
  ret i32 %70, !dbg !11153
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11154 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11156, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11157, metadata !DIExpression()), !dbg !11159
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11160
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11160
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11160
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11158, metadata !DIExpression()), !dbg !11159
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11161
  %7 = load i32, i32* %6, align 4, !dbg !11161
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11162
  store i32 %7, i32* %8, align 4, !dbg !11163
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11164, !range !11165
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !11166
  %11 = trunc i32 %10 to i8, !dbg !11166
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11167
  store i8 %11, i8* %12, align 4, !dbg !11168
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !11169, !range !11170
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !11171
  %15 = trunc i32 %14 to i8, !dbg !11171
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11172
  store i8 %15, i8* %16, align 1, !dbg !11173
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !11174
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11175, !range !11165
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !11176
  %20 = trunc i32 %19 to i8, !dbg !11176
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11177
  store i8 %20, i8* %21, align 2, !dbg !11178
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !11179, !range !11180
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !11181
  %24 = trunc i32 %23 to i8, !dbg !11181
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11182
  store i8 %24, i8* %25, align 1, !dbg !11183
  ret i32 0, !dbg !11184
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11189, metadata !DIExpression()), !dbg !11191
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11192
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11192
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11192
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11190, metadata !DIExpression()), !dbg !11191
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11193
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11193
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11194
  ret i32 %7, !dbg !11195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11200, metadata !DIExpression()), !dbg !11201
  %2 = icmp eq i32 %0, 1024, !dbg !11202
  %3 = select i1 %2, i32 2, i32 0, !dbg !11202
  %4 = icmp eq i32 %0, 1536, !dbg !11202
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11202
  ret i32 %5, !dbg !11203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11204 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11206, metadata !DIExpression()), !dbg !11208
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11209
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11209
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11209
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11207, metadata !DIExpression()), !dbg !11208
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11210
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11210
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11211
  ret i32 %7, !dbg !11212
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11217, metadata !DIExpression()), !dbg !11218
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11219
  %3 = icmp ult i32 %2, 4, !dbg !11219
  br i1 %3, label %4, label %7, !dbg !11219

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11219
  %6 = load i32, i32* %5, align 4, !dbg !11219
  br label %7, !dbg !11219

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11220
  ret i32 %8, !dbg !11222
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11223 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11225, metadata !DIExpression()), !dbg !11227
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11228
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11228
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11228
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11226, metadata !DIExpression()), !dbg !11227
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11229
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11229
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11230
  ret i32 %7, !dbg !11231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11236, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.value(metadata i32 %1, metadata !11237, metadata !DIExpression()), !dbg !11238
  %3 = icmp eq i32 %0, 4096, !dbg !11239
  %4 = icmp eq i32 %1, 0, !dbg !11239
  %5 = select i1 %4, i32 4, i32 3, !dbg !11239
  %6 = select i1 %4, i32 3, i32 2, !dbg !11239
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11239
  ret i32 %7, !dbg !11240
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11243, metadata !DIExpression()), !dbg !11245
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11246
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11246
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11246
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11244, metadata !DIExpression()), !dbg !11245
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11247
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11247
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11248
  ret i32 %7, !dbg !11249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11254, metadata !DIExpression()), !dbg !11255
  %2 = icmp eq i32 %0, 768, !dbg !11256
  %3 = zext i1 %2 to i32, !dbg !11255
  ret i32 %3, !dbg !11258
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11259 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11264, metadata !DIExpression()), !dbg !11265
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11266
  %3 = load volatile i32, i32* %2, align 4, !dbg !11266
  %4 = and i32 %3, 768, !dbg !11266
  ret i32 %4, !dbg !11267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11268 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11270, metadata !DIExpression()), !dbg !11271
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11272
  %3 = load volatile i32, i32* %2, align 4, !dbg !11272
  %4 = and i32 %3, 4096, !dbg !11272
  ret i32 %4, !dbg !11273
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11274 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11276, metadata !DIExpression()), !dbg !11277
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11278
  %3 = load volatile i32, i32* %2, align 4, !dbg !11278
  %4 = and i32 %3, 12288, !dbg !11278
  ret i32 %4, !dbg !11279
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11280 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11282, metadata !DIExpression()), !dbg !11283
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11284
  %3 = load volatile i32, i32* %2, align 4, !dbg !11284
  %4 = and i32 %3, 1536, !dbg !11284
  ret i32 %4, !dbg !11285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11290, metadata !DIExpression()), !dbg !11291
  %2 = icmp eq i32 %0, 2, !dbg !11292
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11292
  %4 = icmp eq i32 %0, 1, !dbg !11292
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11292
  ret i32 %5, !dbg !11293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11298, metadata !DIExpression()), !dbg !11299
  %2 = icmp ult i32 %0, 3, !dbg !11300
  br i1 %2, label %3, label %6, !dbg !11300

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11300
  %5 = load i32, i32* %4, align 4, !dbg !11300
  br label %6, !dbg !11300

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11301
  ret i32 %7, !dbg !11303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11308, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 %1, metadata !11309, metadata !DIExpression()), !dbg !11310
  %3 = icmp eq i32 %0, 4, !dbg !11311
  %4 = icmp eq i32 %1, 0, !dbg !11311
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11311
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11311
  ret i32 %6, !dbg !11312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11317, metadata !DIExpression()), !dbg !11318
  %2 = icmp eq i32 %0, 1, !dbg !11319
  %3 = select i1 %2, i32 768, i32 0, !dbg !11318
  ret i32 %3, !dbg !11321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11322 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11326, metadata !DIExpression()), !dbg !11327
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11328
  %3 = load volatile i32, i32* %2, align 4, !dbg !11328
  %4 = and i32 %3, -8193, !dbg !11328
  store volatile i32 %4, i32* %2, align 4, !dbg !11328
  ret void, !dbg !11329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11330 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11334, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i32 %1, metadata !11335, metadata !DIExpression()), !dbg !11337
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11338
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11338
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11338
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11336, metadata !DIExpression()), !dbg !11337
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11339
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11339
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11340
  ret void, !dbg !11341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11342 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11344, metadata !DIExpression()), !dbg !11347
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()), !dbg !11347
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11348
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11348
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11348
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11346, metadata !DIExpression()), !dbg !11347
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11349
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11349
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11350
  ret void, !dbg !11351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11352 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11354, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata i32 %1, metadata !11355, metadata !DIExpression()), !dbg !11357
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11358
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11358
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11358
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11356, metadata !DIExpression()), !dbg !11357
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11359
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11359
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11360
  ret void, !dbg !11361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11362 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11364, metadata !DIExpression()), !dbg !11367
  call void @llvm.dbg.value(metadata i32 %1, metadata !11365, metadata !DIExpression()), !dbg !11367
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11368
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11368
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11368
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11366, metadata !DIExpression()), !dbg !11367
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11369
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11369
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11370
  ret void, !dbg !11371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11372 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11374, metadata !DIExpression()), !dbg !11379
  call void @llvm.dbg.value(metadata i32 %1, metadata !11375, metadata !DIExpression()), !dbg !11379
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11380
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11380
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11380
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11376, metadata !DIExpression()), !dbg !11379
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11381
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11381
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11381
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11377, metadata !DIExpression()), !dbg !11379
  %10 = bitcast i32* %3 to i8*, !dbg !11382
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11382
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11383
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11383
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11387
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11387
  %15 = load i8*, i8** %14, align 4, !dbg !11387
  call void @llvm.dbg.value(metadata i32* %3, metadata !11378, metadata !DIExpression(DW_OP_deref)), !dbg !11379
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11388
  %17 = icmp slt i32 %16, 0, !dbg !11389
  br i1 %17, label %18, label %21, !dbg !11390

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11391
  %20 = zext i8 %19 to i32, !dbg !11391
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.108, i32 0, i32 0), i32 noundef %20) #27, !dbg !11391
  br label %26, !dbg !11397

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11398
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11398
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !11399
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11400
  %25 = load i32, i32* %3, align 4, !dbg !11401
  call void @llvm.dbg.value(metadata i32 %25, metadata !11378, metadata !DIExpression()), !dbg !11379
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !11402
  br label %26, !dbg !11403

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11403
  ret void, !dbg !11403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11404 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11406, metadata !DIExpression()), !dbg !11407
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11408
  %3 = load volatile i32, i32* %2, align 4, !dbg !11408
  %4 = or i32 %3, 8192, !dbg !11408
  store volatile i32 %4, i32* %2, align 4, !dbg !11408
  ret void, !dbg !11409
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11410 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11412, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata i8* %1, metadata !11413, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata i32* %2, metadata !11414, metadata !DIExpression()), !dbg !11416
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11417
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11417
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11417
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11415, metadata !DIExpression()), !dbg !11416
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11418
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11418
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11420
  br i1 %9, label %12, label %10, !dbg !11421

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11422
  br label %12, !dbg !11423

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11416
  ret i32 %13, !dbg !11424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef %0) unnamed_addr #5 !dbg !11425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11427, metadata !DIExpression()), !dbg !11428
  %2 = icmp eq i32 %0, 2, !dbg !11429
  %3 = select i1 %2, i8 87, i8 63, !dbg !11429
  %4 = icmp eq i32 %0, 1, !dbg !11429
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11429
  ret i8 %5, !dbg !11430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11431 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11435, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata i32 0, metadata !11436, metadata !DIExpression()), !dbg !11437
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11438
  %3 = load volatile i32, i32* %2, align 4, !dbg !11438
  %4 = and i32 %3, -32769, !dbg !11438
  store volatile i32 %4, i32* %2, align 4, !dbg !11438
  ret void, !dbg !11439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11440 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11444, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.value(metadata i32 %1, metadata !11445, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.value(metadata i32 0, metadata !11446, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.value(metadata i32 %2, metadata !11447, metadata !DIExpression()), !dbg !11448
  %4 = zext i32 %1 to i64, !dbg !11449
  %5 = mul nuw nsw i64 %4, 25, !dbg !11449
  %6 = zext i32 %2 to i64, !dbg !11449
  %7 = shl nuw nsw i64 %6, 2, !dbg !11449
  %8 = udiv i64 %5, %7, !dbg !11449
  %9 = trunc i64 %8 to i32, !dbg !11449
  %10 = udiv i32 %9, 100, !dbg !11449
  %11 = shl nuw nsw i32 %10, 4, !dbg !11449
  %12 = mul i32 %10, -100, !dbg !11449
  %13 = add i32 %12, %9, !dbg !11449
  %14 = shl i32 %13, 4, !dbg !11449
  %15 = add i32 %14, 50, !dbg !11449
  %16 = udiv i32 %15, 100, !dbg !11449
  %17 = and i32 %16, 240, !dbg !11449
  %18 = add nuw nsw i32 %17, %11, !dbg !11449
  %19 = and i32 %16, 15, !dbg !11449
  %20 = and i32 %18, 65520, !dbg !11452
  %21 = or i32 %20, %19, !dbg !11452
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11453
  store volatile i32 %21, i32* %22, align 4, !dbg !11454
  ret void, !dbg !11455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11458, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i32 %1, metadata !11459, metadata !DIExpression()), !dbg !11460
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11461
  %4 = load volatile i32, i32* %3, align 4, !dbg !11461
  %5 = and i32 %4, -769, !dbg !11461
  %6 = or i32 %5, %1, !dbg !11461
  store volatile i32 %6, i32* %3, align 4, !dbg !11461
  ret void, !dbg !11462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11465, metadata !DIExpression()), !dbg !11467
  call void @llvm.dbg.value(metadata i32 %1, metadata !11466, metadata !DIExpression()), !dbg !11467
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11468
  %4 = load volatile i32, i32* %3, align 4, !dbg !11468
  %5 = and i32 %4, -4097, !dbg !11468
  %6 = or i32 %5, %1, !dbg !11468
  store volatile i32 %6, i32* %3, align 4, !dbg !11468
  ret void, !dbg !11469
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11470 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11472, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i32 %1, metadata !11473, metadata !DIExpression()), !dbg !11474
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11475
  %4 = load volatile i32, i32* %3, align 4, !dbg !11475
  %5 = and i32 %4, -12289, !dbg !11475
  %6 = or i32 %5, %1, !dbg !11475
  store volatile i32 %6, i32* %3, align 4, !dbg !11475
  ret void, !dbg !11476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11477 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11479, metadata !DIExpression()), !dbg !11481
  call void @llvm.dbg.value(metadata i32 %1, metadata !11480, metadata !DIExpression()), !dbg !11481
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11482
  %4 = load volatile i32, i32* %3, align 4, !dbg !11482
  %5 = and i32 %4, -1537, !dbg !11482
  %6 = or i32 %5, %1, !dbg !11482
  store volatile i32 %6, i32* %3, align 4, !dbg !11482
  ret void, !dbg !11483
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11484 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11486, metadata !DIExpression()), !dbg !11487
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11488
  %3 = load volatile i32, i32* %2, align 4, !dbg !11488
  %4 = lshr i32 %3, 3, !dbg !11489
  %5 = and i32 %4, 1, !dbg !11489
  ret i32 %5, !dbg !11490
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11491 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11493, metadata !DIExpression()), !dbg !11494
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11495
  %3 = load volatile i32, i32* %2, align 4, !dbg !11495
  %4 = and i32 %3, 1, !dbg !11495
  ret i32 %4, !dbg !11496
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11497 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11499, metadata !DIExpression()), !dbg !11500
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11501
  %3 = load volatile i32, i32* %2, align 4, !dbg !11501
  %4 = lshr i32 %3, 1, !dbg !11502
  %5 = and i32 %4, 1, !dbg !11502
  ret i32 %5, !dbg !11503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11504 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11506, metadata !DIExpression()), !dbg !11507
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11508
  %3 = load volatile i32, i32* %2, align 4, !dbg !11508
  %4 = lshr i32 %3, 8, !dbg !11509
  %5 = and i32 %4, 1, !dbg !11509
  ret i32 %5, !dbg !11510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11511 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11513, metadata !DIExpression()), !dbg !11514
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11515
  store volatile i32 -257, i32* %2, align 4, !dbg !11515
  ret void, !dbg !11516
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11517 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11519, metadata !DIExpression()), !dbg !11521
  %3 = bitcast i32* %2 to i8*, !dbg !11522
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11522
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11520, metadata !DIExpression()), !dbg !11523
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11524
  %5 = load volatile i32, i32* %4, align 4, !dbg !11524
  store volatile i32 %5, i32* %2, align 4, !dbg !11525
  %6 = load volatile i32, i32* %2, align 4, !dbg !11526
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11527
  %8 = load volatile i32, i32* %7, align 4, !dbg !11527
  store volatile i32 %8, i32* %2, align 4, !dbg !11528
  %9 = load volatile i32, i32* %2, align 4, !dbg !11529
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11530
  ret void, !dbg !11530
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11531 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11533, metadata !DIExpression()), !dbg !11535
  %3 = bitcast i32* %2 to i8*, !dbg !11536
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11536
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11534, metadata !DIExpression()), !dbg !11537
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11538
  %5 = load volatile i32, i32* %4, align 4, !dbg !11538
  store volatile i32 %5, i32* %2, align 4, !dbg !11539
  %6 = load volatile i32, i32* %2, align 4, !dbg !11540
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11541
  %8 = load volatile i32, i32* %7, align 4, !dbg !11541
  store volatile i32 %8, i32* %2, align 4, !dbg !11542
  %9 = load volatile i32, i32* %2, align 4, !dbg !11543
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11544
  ret void, !dbg !11544
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11545 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11547, metadata !DIExpression()), !dbg !11549
  %3 = bitcast i32* %2 to i8*, !dbg !11550
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11550
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11548, metadata !DIExpression()), !dbg !11551
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11552
  %5 = load volatile i32, i32* %4, align 4, !dbg !11552
  store volatile i32 %5, i32* %2, align 4, !dbg !11553
  %6 = load volatile i32, i32* %2, align 4, !dbg !11554
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11555
  %8 = load volatile i32, i32* %7, align 4, !dbg !11555
  store volatile i32 %8, i32* %2, align 4, !dbg !11556
  %9 = load volatile i32, i32* %2, align 4, !dbg !11557
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11558
  ret void, !dbg !11558
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11559 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11561, metadata !DIExpression()), !dbg !11563
  %3 = bitcast i32* %2 to i8*, !dbg !11564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11564
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11562, metadata !DIExpression()), !dbg !11565
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11566
  %5 = load volatile i32, i32* %4, align 4, !dbg !11566
  store volatile i32 %5, i32* %2, align 4, !dbg !11567
  %6 = load volatile i32, i32* %2, align 4, !dbg !11568
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11569
  %8 = load volatile i32, i32* %7, align 4, !dbg !11569
  store volatile i32 %8, i32* %2, align 4, !dbg !11570
  %9 = load volatile i32, i32* %2, align 4, !dbg !11571
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11572
  ret void, !dbg !11572
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11573 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11575, metadata !DIExpression()), !dbg !11576
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11577
  %3 = load volatile i32, i32* %2, align 4, !dbg !11577
  %4 = lshr i32 %3, 7, !dbg !11578
  %5 = and i32 %4, 1, !dbg !11578
  ret i32 %5, !dbg !11579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !11580 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11584, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i8 %1, metadata !11585, metadata !DIExpression()), !dbg !11586
  %3 = zext i8 %1 to i32, !dbg !11587
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11588
  store volatile i32 %3, i32* %4, align 4, !dbg !11589
  ret void, !dbg !11590
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11591 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11593, metadata !DIExpression()), !dbg !11594
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11595
  %3 = load volatile i32, i32* %2, align 4, !dbg !11595
  %4 = lshr i32 %3, 5, !dbg !11596
  %5 = and i32 %4, 1, !dbg !11596
  ret i32 %5, !dbg !11597
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11598 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11602, metadata !DIExpression()), !dbg !11603
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11604
  %3 = load volatile i32, i32* %2, align 4, !dbg !11604
  %4 = trunc i32 %3 to i8, !dbg !11605
  ret i8 %4, !dbg !11606
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11607 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11609, metadata !DIExpression()), !dbg !11615
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11616
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11616
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11616
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11610, metadata !DIExpression()), !dbg !11615
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11617
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11617
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11617
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11611, metadata !DIExpression()), !dbg !11615
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11618
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11619
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11619
  %10 = tail call fastcc zeroext i1 @device_is_ready.110(%struct.device* noundef %9) #26, !dbg !11621
  br i1 %10, label %14, label %11, !dbg !11622

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11623
  %13 = zext i8 %12 to i32, !dbg !11623
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.111, i32 0, i32 0), i32 noundef %13) #27, !dbg !11623
  br label %62, !dbg !11629

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11630
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11631
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11631
  %18 = load i8*, i8** %17, align 4, !dbg !11631
  %19 = tail call fastcc i32 @clock_control_on.112(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !11632
  call void @llvm.dbg.value(metadata i32 %19, metadata !11614, metadata !DIExpression()), !dbg !11615
  %20 = icmp eq i32 %19, 0, !dbg !11633
  br i1 %20, label %24, label %21, !dbg !11635

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11636
  %23 = zext i8 %22 to i32, !dbg !11636
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.113, i32 0, i32 0), i32 noundef %23) #27, !dbg !11636
  br label %62, !dbg !11642

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11643
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11643
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !11644
  call void @llvm.dbg.value(metadata i32 %27, metadata !11614, metadata !DIExpression()), !dbg !11615
  %28 = icmp slt i32 %27, 0, !dbg !11645
  br i1 %28, label %62, label %29, !dbg !11647

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11648
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11648
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !11649
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11650
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !11651
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11652
  %34 = load i32, i32* %33, align 4, !dbg !11652
  %35 = icmp ult i32 %34, 3, !dbg !11654
  br i1 %35, label %39, label %36, !dbg !11654

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 2) #26, !dbg !11655
  %38 = zext i8 %37 to i32, !dbg !11655
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.114, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11655
  call void @llvm.dbg.value(metadata i32 0, metadata !11612, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.value(metadata i32 0, metadata !11613, metadata !DIExpression()), !dbg !11615
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11654
  %41 = load i32, i32* %40, align 4, !dbg !11654
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !11654
  %43 = load i32, i32* %42, align 4, !dbg !11654
  br label %44, !dbg !11654

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11664
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11664
  call void @llvm.dbg.value(metadata i32 %46, metadata !11613, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.value(metadata i32 %45, metadata !11612, metadata !DIExpression()), !dbg !11615
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11665
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !11666
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11667
  %49 = load i8, i8* %48, align 4, !dbg !11667, !range !7623
  %50 = icmp eq i8 %49, 0, !dbg !11667
  br i1 %50, label %52, label %51, !dbg !11669

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11670
  br label %52, !dbg !11672

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11673
  %54 = load i32, i32* %53, align 4, !dbg !11673
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !11674
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11675
  %56 = load i8, i8* %55, align 4, !dbg !11675, !range !7623
  %57 = icmp eq i8 %56, 0, !dbg !11675
  br i1 %57, label %60, label %58, !dbg !11677

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11678
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !11680
  br label %60, !dbg !11681

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11682
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !11683
  br label %62, !dbg !11684

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11615
  ret i32 %63, !dbg !11685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11690, metadata !DIExpression()), !dbg !11694
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11695
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11695
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11695
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11691, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11692, metadata !DIExpression()), !dbg !11694
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11696
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11697
  ret void, !dbg !11698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.110(%struct.device* noundef %0) unnamed_addr #1 !dbg !11699 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11703, metadata !DIExpression()), !dbg !11704
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11705, !srcloc !11707
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.115(%struct.device* noundef %0) #26, !dbg !11708
  ret i1 %2, !dbg !11709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.112(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11710 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11712, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.value(metadata i8* %1, metadata !11713, metadata !DIExpression()), !dbg !11715
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11716
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11716
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11716
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11714, metadata !DIExpression()), !dbg !11715
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11717
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11717
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11718
  ret i32 %8, !dbg !11719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11720 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11724, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i8 0, metadata !11725, metadata !DIExpression()), !dbg !11728
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11729
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11729
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11727, metadata !DIExpression(DW_OP_deref)), !dbg !11728
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11730
  call void @llvm.dbg.value(metadata i32 %4, metadata !11726, metadata !DIExpression()), !dbg !11728
  %5 = icmp slt i32 %4, 0, !dbg !11731
  br i1 %5, label %9, label %6, !dbg !11733

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11734
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11727, metadata !DIExpression()), !dbg !11728
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11735
  br label %9, !dbg !11736

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11728
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11737
  ret i32 %10, !dbg !11737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11738 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 12, metadata !11741, metadata !DIExpression()), !dbg !11744
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11745

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11746, metadata !DIExpression()) #25, !dbg !11752
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !11755, !srcloc !11756
  call void @llvm.dbg.value(metadata i32 %4, metadata !11751, metadata !DIExpression()) #25, !dbg !11752
  %5 = or i32 %4, 12, !dbg !11757
  call void @llvm.dbg.value(metadata i32 %5, metadata !11742, metadata !DIExpression()), !dbg !11758
  call void @llvm.dbg.value(metadata i32 %5, metadata !11759, metadata !DIExpression()) #25, !dbg !11766
  call void @llvm.dbg.value(metadata i32* %2, metadata !11764, metadata !DIExpression()) #25, !dbg !11766
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !11768, !srcloc !11769
  call void @llvm.dbg.value(metadata i32 %6, metadata !11765, metadata !DIExpression()) #25, !dbg !11766
  %7 = icmp eq i32 %6, 0, !dbg !11745
  br i1 %7, label %8, label %3, !dbg !11757, !llvm.loop !11770

8:                                                ; preds = %3
  ret void, !dbg !11771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11772 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11774, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i32 %1, metadata !11775, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i32 %2, metadata !11776, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i32 0, metadata !11777, metadata !DIExpression()), !dbg !11778
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11779
  %5 = load volatile i32, i32* %4, align 4, !dbg !11779
  %6 = and i32 %5, -5633, !dbg !11779
  %7 = or i32 %2, %1, !dbg !11779
  %8 = or i32 %7, %6, !dbg !11779
  store volatile i32 %8, i32* %4, align 4, !dbg !11779
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11780
  %10 = load volatile i32, i32* %9, align 4, !dbg !11780
  %11 = and i32 %10, -12289, !dbg !11780
  store volatile i32 %11, i32* %9, align 4, !dbg !11780
  ret void, !dbg !11781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11782 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11784, metadata !DIExpression()), !dbg !11785
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11786
  %3 = load volatile i32, i32* %2, align 4, !dbg !11786
  %4 = or i32 %3, 8, !dbg !11786
  store volatile i32 %4, i32* %2, align 4, !dbg !11786
  ret void, !dbg !11787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11788 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11792, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11793, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata i32 0, metadata !11794, metadata !DIExpression()), !dbg !11795
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11796
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11796
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11797
  %5 = load i8, i8* %4, align 4, !dbg !11797
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !11798
  ret i32 %6, !dbg !11799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.115(%struct.device* noundef %0) unnamed_addr #1 !dbg !11800 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11802, metadata !DIExpression()), !dbg !11803
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !11804
  ret i1 %2, !dbg !11805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11806 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11808, metadata !DIExpression()), !dbg !11809
  tail call fastcc void @__NVIC_SetPriority.117() #26, !dbg !11810
  store i32 8399, i32* @last_load, align 4, !dbg !11811
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11812
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11813
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11814
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11815
  %3 = or i32 %2, 7, !dbg !11815
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11815
  ret i32 0, !dbg !11816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.117() unnamed_addr #16 !dbg !11817 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11819, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata i32 1, metadata !11820, metadata !DIExpression()), !dbg !11821
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11822
  ret void, !dbg !11825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11826 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11828, metadata !DIExpression()), !dbg !11830
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11831
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11832
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11833
  %5 = add i32 %4, %3, !dbg !11833
  store i32 %5, i32* @cycle_count, align 4, !dbg !11833
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11834
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11835
  %7 = sub i32 %5, %6, !dbg !11838
  %8 = udiv i32 %7, 8400, !dbg !11839
  call void @llvm.dbg.value(metadata i32 %8, metadata !11829, metadata !DIExpression()), !dbg !11830
  %9 = mul nuw i32 %8, 8400, !dbg !11840
  %10 = add i32 %9, %6, !dbg !11841
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11841
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !11842
  tail call void @z_arm_int_exit() #27, !dbg !11843
  ret void, !dbg !11844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11845 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11850
  call void @llvm.dbg.value(metadata i32 %1, metadata !11847, metadata !DIExpression()), !dbg !11851
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11852
  call void @llvm.dbg.value(metadata i32 %2, metadata !11848, metadata !DIExpression()), !dbg !11851
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11853
  call void @llvm.dbg.value(metadata i32 %3, metadata !11849, metadata !DIExpression()), !dbg !11851
  %4 = and i32 %2, 65536, !dbg !11854
  %5 = icmp ne i32 %4, 0, !dbg !11854
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11856
  %8 = load i32, i32* @last_load, align 4, !dbg !11851
  br i1 %7, label %9, label %13, !dbg !11856

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11857
  %11 = add i32 %10, %8, !dbg !11857
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11857
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11859
  br label %13, !dbg !11860

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11861
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11862
  %16 = add i32 %14, %15, !dbg !11863
  ret i32 %16, !dbg !11864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11869, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i1 %1, metadata !11870, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11882
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11883
  br i1 %4, label %5, label %8, !dbg !11883

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11885
  %7 = and i32 %6, -2, !dbg !11885
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11885
  store i32 -16777216, i32* @last_load, align 4, !dbg !11887
  br label %54, !dbg !11888

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %9, metadata !11874, metadata !DIExpression()), !dbg !11882
  br i1 %3, label %18, label %10, !dbg !11890

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11890
  call void @llvm.dbg.value(metadata i32 undef, metadata !11869, metadata !DIExpression()), !dbg !11882
  %12 = icmp slt i32 %11, 1, !dbg !11891
  br i1 %12, label %18, label %13, !dbg !11891

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11891
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11891
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11891
  %17 = add nuw nsw i32 %16, 8399, !dbg !11891
  br label %18, !dbg !11891

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11869, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11892, metadata !DIExpression()) #25, !dbg !11899
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11901, !srcloc !11907
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %21, metadata !11904, metadata !DIExpression()) #25, !dbg !11908
  call void @llvm.dbg.value(metadata i32 undef, metadata !11905, metadata !DIExpression()) #25, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %21, metadata !11898, metadata !DIExpression()) #25, !dbg !11899
  call void @llvm.dbg.value(metadata i32 %21, metadata !11875, metadata !DIExpression()), !dbg !11882
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %22, metadata !11880, metadata !DIExpression()), !dbg !11882
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11910
  call void @llvm.dbg.value(metadata i32 %23, metadata !11872, metadata !DIExpression()), !dbg !11882
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11911
  %25 = add i32 %24, %22, !dbg !11911
  store i32 %25, i32* @cycle_count, align 4, !dbg !11911
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11912
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11913
  %27 = sub i32 %25, %26, !dbg !11914
  call void @llvm.dbg.value(metadata i32 %27, metadata !11881, metadata !DIExpression()), !dbg !11882
  %28 = icmp slt i32 %27, 0, !dbg !11915
  br i1 %28, label %38, label %29, !dbg !11917

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11871, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 undef, metadata !11871, metadata !DIExpression()), !dbg !11882
  %30 = add nuw i32 %19, %27, !dbg !11918
  %31 = urem i32 %30, 8400, !dbg !11920
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11871, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11882
  %32 = sub nuw nsw i32 %19, %31, !dbg !11921
  call void @llvm.dbg.value(metadata i32 %32, metadata !11871, metadata !DIExpression()), !dbg !11882
  %33 = icmp ugt i32 %32, 1024, !dbg !11922
  br i1 %33, label %34, label %36, !dbg !11922

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11871, metadata !DIExpression()), !dbg !11882
  %35 = icmp ugt i32 %32, 16766400, !dbg !11923
  br i1 %35, label %38, label %36, !dbg !11925

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11926
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11927
  call void @llvm.dbg.value(metadata i32 %40, metadata !11873, metadata !DIExpression()), !dbg !11882
  %41 = add nsw i32 %39, -1, !dbg !11928
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11929
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11930
  %42 = icmp ult i32 %23, %40, !dbg !11931
  br i1 %42, label %43, label %48, !dbg !11933

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11934
  %45 = add i32 %23, %9, !dbg !11936
  %46 = sub i32 %45, %40, !dbg !11937
  %47 = add i32 %46, %44, !dbg !11934
  br label %52, !dbg !11938

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11939
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11941
  %51 = add i32 %49, %50, !dbg !11941
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11942
  store i32 %53, i32* @cycle_count, align 4, !dbg !11942
  call void @llvm.dbg.value(metadata i32 %21, metadata !11943, metadata !DIExpression()) #25, !dbg !11949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11948, metadata !DIExpression()) #25, !dbg !11949
  call void @llvm.dbg.value(metadata i32 %21, metadata !11951, metadata !DIExpression()) #25, !dbg !11954
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !11956, !srcloc !11957
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11958
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11959 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11892, metadata !DIExpression()) #25, !dbg !11963
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11965, !srcloc !11907
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11965
  call void @llvm.dbg.value(metadata i32 %2, metadata !11904, metadata !DIExpression()) #25, !dbg !11967
  call void @llvm.dbg.value(metadata i32 undef, metadata !11905, metadata !DIExpression()) #25, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %2, metadata !11898, metadata !DIExpression()) #25, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %2, metadata !11961, metadata !DIExpression()), !dbg !11968
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11969
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11970
  %5 = add i32 %4, %3, !dbg !11971
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11972
  %7 = sub i32 %5, %6, !dbg !11973
  call void @llvm.dbg.value(metadata i32 %7, metadata !11962, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata i32 %2, metadata !11943, metadata !DIExpression()) #25, !dbg !11974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11948, metadata !DIExpression()) #25, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %2, metadata !11951, metadata !DIExpression()) #25, !dbg !11976
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11978, !srcloc !11957
  %8 = udiv i32 %7, 8400, !dbg !11979
  ret i32 %8, !dbg !11980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11981 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11892, metadata !DIExpression()) #25, !dbg !11985
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11987, !srcloc !11907
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11987
  call void @llvm.dbg.value(metadata i32 %2, metadata !11904, metadata !DIExpression()) #25, !dbg !11989
  call void @llvm.dbg.value(metadata i32 undef, metadata !11905, metadata !DIExpression()) #25, !dbg !11989
  call void @llvm.dbg.value(metadata i32 %2, metadata !11898, metadata !DIExpression()) #25, !dbg !11985
  call void @llvm.dbg.value(metadata i32 %2, metadata !11983, metadata !DIExpression()), !dbg !11990
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11991
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11992
  %5 = add i32 %4, %3, !dbg !11993
  call void @llvm.dbg.value(metadata i32 %5, metadata !11984, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.value(metadata i32 %2, metadata !11943, metadata !DIExpression()) #25, !dbg !11994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11948, metadata !DIExpression()) #25, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %2, metadata !11951, metadata !DIExpression()) #25, !dbg !11996
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11998, !srcloc !11957
  ret i32 %5, !dbg !11999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !12000 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12001
  %2 = icmp eq i32 %1, -16777216, !dbg !12003
  br i1 %2, label %3, label %6, !dbg !12004

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12005
  %5 = or i32 %4, 1, !dbg !12005
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12005
  br label %6, !dbg !12007

6:                                                ; preds = %3, %0
  ret void, !dbg !12008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !12009 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12010
  %2 = and i32 %1, -2, !dbg !12010
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12010
  ret void, !dbg !12011
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !12012 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12038, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata i8 %1, metadata !12039, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12040, metadata !DIExpression()), !dbg !12041
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12042
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12042
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12041
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12043
  %8 = load i8, i8* %6, align 4, !dbg !12044
  %9 = zext i8 %8 to i32, !dbg !12045
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12045
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12046
  br i1 %11, label %18, label %24, !dbg !12047

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12041
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12043
  %14 = load i8, i8* %6, align 4, !dbg !12044
  %15 = zext i8 %14 to i32, !dbg !12045
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12045
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12046
  br i1 %17, label %18, label %24, !dbg !12047, !llvm.loop !12048

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12050
  %21 = load i8, i8* %20, align 1, !dbg !12050
  %22 = icmp eq i8 %21, %1, !dbg !12053
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12054
  br i1 %22, label %24, label %12, !dbg !12055

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12041
  ret i32 %25, !dbg !12056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12057 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12068, metadata !DIExpression()), !dbg !12084
  call void @llvm.dbg.value(metadata i8 %1, metadata !12069, metadata !DIExpression()), !dbg !12084
  call void @llvm.dbg.value(metadata i32 %2, metadata !12070, metadata !DIExpression()), !dbg !12084
  call void @llvm.dbg.value(metadata i32 0, metadata !12073, metadata !DIExpression()), !dbg !12084
  call void @llvm.dbg.value(metadata i32 0, metadata !12074, metadata !DIExpression()), !dbg !12084
  call void @llvm.dbg.value(metadata i8 0, metadata !12075, metadata !DIExpression()), !dbg !12085
  %4 = icmp eq i8 %1, 0, !dbg !12086
  br i1 %4, label %35, label %5, !dbg !12087

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12086
  br label %9, !dbg !12087

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12075, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i32 %29, metadata !12073, metadata !DIExpression()), !dbg !12084
  %8 = icmp eq i32 %34, %6, !dbg !12086
  br i1 %8, label %35, label %9, !dbg !12087, !llvm.loop !12088

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12075, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i32 %11, metadata !12073, metadata !DIExpression()), !dbg !12084
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12090
  %13 = load i32, i32* %12, align 4, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %13, metadata !12072, metadata !DIExpression()), !dbg !12084
  %14 = and i32 %13, 31, !dbg !12091
  %15 = icmp ult i32 %14, 16, !dbg !12092
  br i1 %15, label %16, label %20, !dbg !12093

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12094
  %18 = load i32, i32* %17, align 4, !dbg !12094
  %19 = or i32 %18, 32, !dbg !12096
  call void @llvm.dbg.value(metadata i32 %19, metadata !12073, metadata !DIExpression()), !dbg !12084
  br label %28, !dbg !12097

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12098

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12099
  %23 = load i32, i32* %22, align 4, !dbg !12099
  call void @llvm.dbg.value(metadata i32 %23, metadata !12077, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12100
  %24 = lshr i32 %23, 7, !dbg !12101
  %25 = and i32 %24, 16, !dbg !12101
  %26 = or i32 %25, %23, !dbg !12101
  call void @llvm.dbg.value(metadata i32 %26, metadata !12073, metadata !DIExpression()), !dbg !12084
  br label %28, !dbg !12102

27:                                               ; preds = %20
  br label %28, !dbg !12103

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12084
  call void @llvm.dbg.value(metadata i32 %29, metadata !12073, metadata !DIExpression()), !dbg !12084
  %30 = lshr i32 %13, 5, !dbg !12103
  %31 = and i32 %30, 255, !dbg !12103
  call void @llvm.dbg.value(metadata i32 %31, metadata !12071, metadata !DIExpression()), !dbg !12084
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12104
  call void @llvm.dbg.value(metadata i32 %32, metadata !12074, metadata !DIExpression()), !dbg !12084
  %33 = icmp slt i32 %32, 0, !dbg !12105
  %34 = add nuw nsw i32 %10, 1, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %34, metadata !12075, metadata !DIExpression()), !dbg !12085
  br i1 %33, label %35, label %7, !dbg !12108

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12114, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i32 %1, metadata !12115, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i32 %2, metadata !12116, metadata !DIExpression()), !dbg !12118
  %4 = icmp ugt i32 %0, 175, !dbg !12119
  br i1 %4, label %16, label %5, !dbg !12121

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12122
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12123
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12123
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12117, metadata !DIExpression()), !dbg !12118
  %9 = add nsw i32 %6, -8, !dbg !12124
  %10 = icmp ult i32 %9, 3, !dbg !12124
  br i1 %10, label %16, label %11, !dbg !12126

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.122(%struct.device* noundef %8) #26, !dbg !12127
  br i1 %12, label %13, label %16, !dbg !12128

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12129
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12130
  br label %16, !dbg !12131

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12118
  ret i32 %17, !dbg !12132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122(%struct.device* noundef %0) unnamed_addr #1 !dbg !12133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12137, metadata !DIExpression()), !dbg !12138
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12139, !srcloc !12141
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123(%struct.device* noundef %0) #26, !dbg !12142
  ret i1 %2, !dbg !12143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123(%struct.device* noundef %0) unnamed_addr #1 !dbg !12144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12146, metadata !DIExpression()), !dbg !12147
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12148
  ret i1 %2, !dbg !12149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12150 {
  ret void, !dbg !12151
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !12152 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12154, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i32 0, metadata !12155, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i32 2, metadata !12156, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i32 0, metadata !12157, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i32 2, metadata !12158, metadata !DIExpression()), !dbg !12159
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12160
  %2 = and i32 %1, 12, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %2, metadata !12154, metadata !DIExpression()), !dbg !12159
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12162

3:                                                ; preds = %0
  br label %21, !dbg !12163

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12165
  call void @llvm.dbg.value(metadata i32 %5, metadata !12157, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12159
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12166
  %7 = and i32 %6, 63, !dbg !12167
  call void @llvm.dbg.value(metadata i32 %7, metadata !12158, metadata !DIExpression()), !dbg !12159
  %8 = and i32 %5, 4194304, !dbg !12168
  %9 = icmp eq i32 %8, 0, !dbg !12168
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !12170
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12170
  %13 = lshr i32 %12, 6, !dbg !12170
  %14 = and i32 %13, 511, !dbg !12170
  %15 = mul i32 %14, %11, !dbg !12170
  call void @llvm.dbg.value(metadata i32 %15, metadata !12155, metadata !DIExpression()), !dbg !12159
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12171
  %17 = lshr i32 %16, 15, !dbg !12172
  %18 = and i32 %17, 6, !dbg !12172
  %19 = add nuw nsw i32 %18, 2, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %19, metadata !12156, metadata !DIExpression()), !dbg !12159
  %20 = udiv i32 %15, %19, !dbg !12173
  br label %21, !dbg !12174

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12175
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12176
  %24 = lshr i32 %23, 4, !dbg !12177
  %25 = and i32 %24, 15, !dbg !12177
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12178
  %27 = load i8, i8* %26, align 1, !dbg !12178
  %28 = zext i8 %27 to i32, !dbg !12178
  call void @llvm.dbg.value(metadata i32 %28, metadata !12154, metadata !DIExpression()), !dbg !12159
  %29 = lshr i32 %22, %28, !dbg !12179
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12179
  ret void, !dbg !12180
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12181 {
  ret i32 0, !dbg !12186
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12187 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12213, metadata !DIExpression()), !dbg !12224
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12225
  br i1 %3, label %311, label %4, !dbg !12227

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12228
  %6 = load i32, i32* %5, align 4, !dbg !12228
  %7 = and i32 %6, 1, !dbg !12230
  %8 = icmp eq i32 %7, 0, !dbg !12231
  br i1 %8, label %66, label %9, !dbg !12232

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12233
  %11 = and i32 %10, 12, !dbg !12233
  %12 = icmp eq i32 %11, 4, !dbg !12236
  br i1 %12, label %21, label %13, !dbg !12237

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12238
  %15 = and i32 %14, 12, !dbg !12238
  %16 = icmp eq i32 %15, 8, !dbg !12239
  br i1 %16, label %17, label %29, !dbg !12240

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12241
  %19 = and i32 %18, 4194304, !dbg !12242
  %20 = icmp eq i32 %19, 0, !dbg !12243
  br i1 %20, label %29, label %21, !dbg !12244

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12245
  %23 = and i32 %22, 131072, !dbg !12245
  %24 = icmp eq i32 %23, 0, !dbg !12245
  br i1 %24, label %66, label %25, !dbg !12248

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12249
  %27 = load i32, i32* %26, align 4, !dbg !12249
  %28 = icmp eq i32 %27, 0, !dbg !12250
  br i1 %28, label %311, label %66, !dbg !12251

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12252
  %31 = load i32, i32* %30, align 4, !dbg !12252
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12256

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12257
  %34 = or i32 %33, 65536, !dbg !12257
  br label %45, !dbg !12257

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12259
  %37 = or i32 %36, 262144, !dbg !12259
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12259
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12259
  %39 = or i32 %38, 65536, !dbg !12259
  br label %45, !dbg !12259

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12262
  %42 = and i32 %41, -65537, !dbg !12262
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12262
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12262
  %44 = and i32 %43, -262145, !dbg !12262
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12264
  %47 = load i32, i32* %30, align 4, !dbg !12265
  %48 = icmp eq i32 %47, 0, !dbg !12267
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !12268
  call void @llvm.dbg.value(metadata i32 %49, metadata !12214, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.value(metadata i32 %49, metadata !12214, metadata !DIExpression()), !dbg !12224
  br i1 %48, label %58, label %50, !dbg !12269

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12270
  %52 = and i32 %51, 131072, !dbg !12272
  %53 = icmp eq i32 %52, 0, !dbg !12272
  br i1 %53, label %54, label %66, !dbg !12273

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !12274
  %56 = sub i32 %55, %49, !dbg !12277
  %57 = icmp ugt i32 %56, 100, !dbg !12278
  br i1 %57, label %311, label %50, !dbg !12279, !llvm.loop !12280

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12282
  %60 = and i32 %59, 131072, !dbg !12282
  %61 = icmp eq i32 %60, 0, !dbg !12282
  br i1 %61, label %66, label %62, !dbg !12284

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !12285
  %64 = sub i32 %63, %49, !dbg !12288
  %65 = icmp ugt i32 %64, 100, !dbg !12289
  br i1 %65, label %311, label %58, !dbg !12290, !llvm.loop !12291

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12293
  %68 = and i32 %67, 2, !dbg !12295
  %69 = icmp eq i32 %68, 0, !dbg !12296
  br i1 %69, label %121, label %70, !dbg !12297

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12298
  %72 = and i32 %71, 12, !dbg !12298
  %73 = icmp eq i32 %72, 0, !dbg !12301
  br i1 %73, label %82, label %74, !dbg !12302

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12303
  %76 = and i32 %75, 12, !dbg !12303
  %77 = icmp eq i32 %76, 8, !dbg !12304
  br i1 %77, label %78, label %90, !dbg !12305

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12306
  %80 = and i32 %79, 4194304, !dbg !12307
  %81 = icmp eq i32 %80, 0, !dbg !12308
  br i1 %81, label %82, label %90, !dbg !12309

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %84 = and i32 %83, 2, !dbg !12310
  %85 = icmp eq i32 %84, 0, !dbg !12310
  br i1 %85, label %114, label %86, !dbg !12313

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12314
  %88 = load i32, i32* %87, align 4, !dbg !12314
  %89 = icmp eq i32 %88, 1, !dbg !12315
  br i1 %89, label %114, label %311, !dbg !12316

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12317
  %92 = load i32, i32* %91, align 4, !dbg !12317
  %93 = icmp eq i32 %92, 0, !dbg !12320
  br i1 %93, label %104, label %94, !dbg !12321

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12322
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !12324
  call void @llvm.dbg.value(metadata i32 %95, metadata !12214, metadata !DIExpression()), !dbg !12224
  br label %96, !dbg !12325

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12326
  %98 = and i32 %97, 2, !dbg !12327
  %99 = icmp eq i32 %98, 0, !dbg !12327
  br i1 %99, label %100, label %114, !dbg !12325

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !12328
  %102 = sub i32 %101, %95, !dbg !12331
  %103 = icmp ugt i32 %102, 2, !dbg !12332
  br i1 %103, label %311, label %96, !dbg !12333, !llvm.loop !12334

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12336
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !12338
  call void @llvm.dbg.value(metadata i32 %105, metadata !12214, metadata !DIExpression()), !dbg !12224
  br label %106, !dbg !12339

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12340
  %108 = and i32 %107, 2, !dbg !12340
  %109 = icmp eq i32 %108, 0, !dbg !12340
  br i1 %109, label %121, label %110, !dbg !12339

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !12341
  %112 = sub i32 %111, %105, !dbg !12344
  %113 = icmp ugt i32 %112, 2, !dbg !12345
  br i1 %113, label %311, label %106, !dbg !12346, !llvm.loop !12347

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12349
  %116 = and i32 %115, -249, !dbg !12349
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12349
  %118 = load i32, i32* %117, align 4, !dbg !12349
  %119 = shl i32 %118, 3, !dbg !12349
  %120 = or i32 %119, %116, !dbg !12349
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12349
  br label %121, !dbg !12350

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12350
  %123 = and i32 %122, 8, !dbg !12352
  %124 = icmp eq i32 %123, 0, !dbg !12353
  br i1 %124, label %149, label %125, !dbg !12354

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12355
  %127 = load i32, i32* %126, align 4, !dbg !12355
  %128 = icmp eq i32 %127, 0, !dbg !12358
  br i1 %128, label %139, label %129, !dbg !12359

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12360
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !12362
  call void @llvm.dbg.value(metadata i32 %130, metadata !12214, metadata !DIExpression()), !dbg !12224
  br label %131, !dbg !12363

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12364
  %133 = and i32 %132, 2, !dbg !12365
  %134 = icmp eq i32 %133, 0, !dbg !12365
  br i1 %134, label %135, label %149, !dbg !12363

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !12366
  %137 = sub i32 %136, %130, !dbg !12369
  %138 = icmp ugt i32 %137, 2, !dbg !12370
  br i1 %138, label %311, label %131, !dbg !12371, !llvm.loop !12372

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12374
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !12376
  call void @llvm.dbg.value(metadata i32 %140, metadata !12214, metadata !DIExpression()), !dbg !12224
  br label %141, !dbg !12377

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12378
  %143 = and i32 %142, 2, !dbg !12378
  %144 = icmp eq i32 %143, 0, !dbg !12378
  br i1 %144, label %149, label %145, !dbg !12377

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !12379
  %147 = sub i32 %146, %140, !dbg !12382
  %148 = icmp ugt i32 %147, 2, !dbg !12383
  br i1 %148, label %311, label %141, !dbg !12384, !llvm.loop !12385

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12387
  %151 = and i32 %150, 4, !dbg !12388
  %152 = icmp eq i32 %151, 0, !dbg !12389
  br i1 %152, label %221, label %153, !dbg !12390

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12216, metadata !DIExpression()), !dbg !12391
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12392
  %155 = and i32 %154, 268435456, !dbg !12392
  %156 = icmp eq i32 %155, 0, !dbg !12392
  br i1 %156, label %157, label %164, !dbg !12393

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12394
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12394
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12220, metadata !DIExpression()), !dbg !12394
  store volatile i32 0, i32* %2, align 4, !dbg !12394
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12394
  %160 = or i32 %159, 268435456, !dbg !12394
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12394
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12394
  %162 = and i32 %161, 268435456, !dbg !12394
  store volatile i32 %162, i32* %2, align 4, !dbg !12394
  %163 = load volatile i32, i32* %2, align 4, !dbg !12394
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12395
  call void @llvm.dbg.value(metadata i32 1, metadata !12216, metadata !DIExpression()), !dbg !12391
  br label %164, !dbg !12396

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12216, metadata !DIExpression()), !dbg !12391
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12397
  %166 = and i32 %165, 256, !dbg !12397
  %167 = icmp eq i32 %166, 0, !dbg !12397
  br i1 %167, label %168, label %180, !dbg !12399

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12400
  %170 = or i32 %169, 256, !dbg !12400
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12400
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !12402
  call void @llvm.dbg.value(metadata i32 %171, metadata !12214, metadata !DIExpression()), !dbg !12224
  br label %172, !dbg !12403

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12404
  %174 = and i32 %173, 256, !dbg !12404
  %175 = icmp eq i32 %174, 0, !dbg !12404
  br i1 %175, label %176, label %180, !dbg !12403

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !12405
  %178 = sub i32 %177, %171, !dbg !12408
  %179 = icmp ugt i32 %178, 2, !dbg !12409
  br i1 %179, label %311, label %172, !dbg !12410, !llvm.loop !12411

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12413
  %182 = load i32, i32* %181, align 4, !dbg !12413
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12416

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12417
  %185 = or i32 %184, 1, !dbg !12417
  br label %196, !dbg !12417

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12419
  %188 = or i32 %187, 4, !dbg !12419
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12419
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12419
  %190 = or i32 %189, 1, !dbg !12419
  br label %196, !dbg !12419

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12422
  %193 = and i32 %192, -2, !dbg !12422
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12422
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12422
  %195 = and i32 %194, -5, !dbg !12422
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12424
  %198 = load i32, i32* %181, align 4, !dbg !12425
  %199 = icmp eq i32 %198, 0, !dbg !12427
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !12428
  call void @llvm.dbg.value(metadata i32 %200, metadata !12214, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.value(metadata i32 %200, metadata !12214, metadata !DIExpression()), !dbg !12224
  br i1 %199, label %209, label %201, !dbg !12429

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12430
  %203 = and i32 %202, 2, !dbg !12432
  %204 = icmp eq i32 %203, 0, !dbg !12432
  br i1 %204, label %205, label %217, !dbg !12433

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12434
  %207 = sub i32 %206, %200, !dbg !12437
  %208 = icmp ugt i32 %207, 5000, !dbg !12438
  br i1 %208, label %311, label %201, !dbg !12439, !llvm.loop !12440

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12442
  %211 = and i32 %210, 2, !dbg !12442
  %212 = icmp eq i32 %211, 0, !dbg !12442
  br i1 %212, label %217, label %213, !dbg !12444

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !12445
  %215 = sub i32 %214, %200, !dbg !12448
  %216 = icmp ugt i32 %215, 5000, !dbg !12449
  br i1 %216, label %311, label %209, !dbg !12450, !llvm.loop !12451

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12453

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12454
  %220 = and i32 %219, -268435457, !dbg !12454
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12454
  br label %221, !dbg !12457

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12458
  %223 = load i32, i32* %222, align 4, !dbg !12458
  %224 = icmp eq i32 %223, 0, !dbg !12460
  br i1 %224, label %310, label %225, !dbg !12461

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12462
  %227 = and i32 %226, 12, !dbg !12462
  %228 = icmp eq i32 %227, 8, !dbg !12465
  br i1 %228, label %277, label %229, !dbg !12466

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12467
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12470
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %231, metadata !12214, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.value(metadata i32 %231, metadata !12214, metadata !DIExpression()), !dbg !12224
  br i1 %230, label %232, label %269, !dbg !12471

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12472
  %234 = and i32 %233, 33554432, !dbg !12472
  %235 = icmp eq i32 %234, 0, !dbg !12472
  br i1 %235, label %240, label %236, !dbg !12474

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !12475
  %238 = sub i32 %237, %231, !dbg !12478
  %239 = icmp ugt i32 %238, 2, !dbg !12479
  br i1 %239, label %311, label %232, !dbg !12480, !llvm.loop !12481

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12483
  %242 = load i32, i32* %241, align 4, !dbg !12483
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12483
  %244 = load i32, i32* %243, align 4, !dbg !12483
  %245 = or i32 %244, %242, !dbg !12483
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12483
  %247 = load i32, i32* %246, align 4, !dbg !12483
  %248 = shl i32 %247, 6, !dbg !12483
  %249 = or i32 %245, %248, !dbg !12483
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12483
  %251 = load i32, i32* %250, align 4, !dbg !12483
  %252 = shl i32 %251, 15, !dbg !12483
  %253 = add i32 %252, -65536, !dbg !12483
  %254 = and i32 %253, -65536, !dbg !12483
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12483
  %256 = load i32, i32* %255, align 4, !dbg !12483
  %257 = shl i32 %256, 24, !dbg !12483
  %258 = or i32 %249, %257, !dbg !12483
  %259 = or i32 %258, %254, !dbg !12483
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12483
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12484
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !12485
  call void @llvm.dbg.value(metadata i32 %260, metadata !12214, metadata !DIExpression()), !dbg !12224
  br label %261, !dbg !12486

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12487
  %263 = and i32 %262, 33554432, !dbg !12488
  %264 = icmp eq i32 %263, 0, !dbg !12488
  br i1 %264, label %265, label %310, !dbg !12486

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !12489
  %267 = sub i32 %266, %260, !dbg !12492
  %268 = icmp ugt i32 %267, 2, !dbg !12493
  br i1 %268, label %311, label %261, !dbg !12494, !llvm.loop !12495

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12497
  %271 = and i32 %270, 33554432, !dbg !12497
  %272 = icmp eq i32 %271, 0, !dbg !12497
  br i1 %272, label %310, label %273, !dbg !12499

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !12500
  %275 = sub i32 %274, %231, !dbg !12503
  %276 = icmp ugt i32 %275, 2, !dbg !12504
  br i1 %276, label %311, label %269, !dbg !12505, !llvm.loop !12506

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12508
  br i1 %278, label %311, label %279, !dbg !12511

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12512
  call void @llvm.dbg.value(metadata i32 %280, metadata !12215, metadata !DIExpression()), !dbg !12224
  %281 = and i32 %280, 4194304, !dbg !12514
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12516
  %283 = load i32, i32* %282, align 4, !dbg !12516
  %284 = icmp eq i32 %281, %283, !dbg !12517
  br i1 %284, label %285, label %311, !dbg !12518

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12519
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12520
  %288 = load i32, i32* %287, align 4, !dbg !12520
  %289 = icmp eq i32 %286, %288, !dbg !12521
  br i1 %289, label %290, label %311, !dbg !12522

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12523
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12524
  %293 = load i32, i32* %292, align 4, !dbg !12524
  %294 = shl i32 %293, 6, !dbg !12525
  %295 = icmp eq i32 %291, %294, !dbg !12526
  br i1 %295, label %296, label %311, !dbg !12527

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12528
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12529
  %299 = load i32, i32* %298, align 4, !dbg !12529
  %300 = shl i32 %299, 15, !dbg !12530
  %301 = add i32 %300, -65536, !dbg !12530
  %302 = and i32 %301, -65536, !dbg !12530
  %303 = icmp eq i32 %297, %302, !dbg !12531
  br i1 %303, label %304, label %311, !dbg !12532

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12533
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12534
  %307 = load i32, i32* %306, align 4, !dbg !12534
  %308 = shl i32 %307, 24, !dbg !12535
  %309 = icmp eq i32 %305, %308, !dbg !12536
  br i1 %309, label %310, label %311, !dbg !12537

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12538

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12224
  ret i32 %312, !dbg !12539
}

; Function Attrs: optsize
declare !dbg !12540 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12542 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12555, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 %1, metadata !12556, metadata !DIExpression()), !dbg !12558
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12559
  br i1 %3, label %115, label %4, !dbg !12561

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12562
  %6 = and i32 %5, 7, !dbg !12562
  %7 = icmp ult i32 %6, %1, !dbg !12564
  br i1 %7, label %8, label %13, !dbg !12565

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12566
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12566
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12568
  %11 = and i32 %10, 7, !dbg !12568
  %12 = icmp eq i32 %11, %1, !dbg !12570
  br i1 %12, label %13, label %115, !dbg !12571

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12572
  %15 = load i32, i32* %14, align 4, !dbg !12572
  %16 = and i32 %15, 2, !dbg !12574
  %17 = icmp eq i32 %16, 0, !dbg !12575
  br i1 %17, label %39, label %18, !dbg !12576

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12577
  %20 = icmp eq i32 %19, 0, !dbg !12580
  br i1 %20, label %25, label %21, !dbg !12581

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12582
  %23 = or i32 %22, 7168, !dbg !12582
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12582
  %24 = load i32, i32* %14, align 4, !dbg !12584
  br label %25, !dbg !12586

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12584
  %27 = and i32 %26, 8, !dbg !12587
  %28 = icmp eq i32 %27, 0, !dbg !12588
  br i1 %28, label %32, label %29, !dbg !12589

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12590
  %31 = or i32 %30, 57344, !dbg !12590
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12590
  br label %32, !dbg !12592

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12593
  %34 = and i32 %33, -241, !dbg !12593
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12593
  %36 = load i32, i32* %35, align 4, !dbg !12593
  %37 = or i32 %34, %36, !dbg !12593
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12593
  %38 = load i32, i32* %14, align 4, !dbg !12594
  br label %39, !dbg !12596

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12594
  %41 = and i32 %40, 1, !dbg !12597
  %42 = icmp eq i32 %41, 0, !dbg !12598
  br i1 %42, label %73, label %43, !dbg !12599

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12600
  %45 = load i32, i32* %44, align 4, !dbg !12600
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12603

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12604
  %48 = and i32 %47, 131072, !dbg !12607
  %49 = icmp eq i32 %48, 0, !dbg !12607
  br i1 %49, label %115, label %58, !dbg !12608

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12609
  %52 = and i32 %51, 33554432, !dbg !12613
  %53 = icmp eq i32 %52, 0, !dbg !12613
  br i1 %53, label %115, label %58, !dbg !12614

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12615
  %56 = and i32 %55, 2, !dbg !12618
  %57 = icmp eq i32 %56, 0, !dbg !12618
  br i1 %57, label %115, label %58, !dbg !12619

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12620
  %60 = and i32 %59, -4, !dbg !12620
  %61 = or i32 %60, %45, !dbg !12620
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12620
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !12621
  call void @llvm.dbg.value(metadata i32 %62, metadata !12557, metadata !DIExpression()), !dbg !12558
  br label %63, !dbg !12622

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12623
  %65 = and i32 %64, 12, !dbg !12623
  %66 = load i32, i32* %44, align 4, !dbg !12624
  %67 = shl i32 %66, 2, !dbg !12625
  %68 = icmp eq i32 %65, %67, !dbg !12626
  br i1 %68, label %73, label %69, !dbg !12622

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !12627
  %71 = sub i32 %70, %62, !dbg !12630
  %72 = icmp ugt i32 %71, 5000, !dbg !12631
  br i1 %72, label %115, label %63, !dbg !12632, !llvm.loop !12633

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12635
  %75 = and i32 %74, 7, !dbg !12635
  %76 = icmp ugt i32 %75, %1, !dbg !12637
  br i1 %76, label %77, label %82, !dbg !12638

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12639
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12639
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12641
  %80 = and i32 %79, 7, !dbg !12641
  %81 = icmp eq i32 %80, %1, !dbg !12643
  br i1 %81, label %82, label %115, !dbg !12644

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12645
  %84 = and i32 %83, 4, !dbg !12647
  %85 = icmp eq i32 %84, 0, !dbg !12648
  br i1 %85, label %93, label %86, !dbg !12649

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12650
  %88 = and i32 %87, -7169, !dbg !12650
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12650
  %90 = load i32, i32* %89, align 4, !dbg !12650
  %91 = or i32 %88, %90, !dbg !12650
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12650
  %92 = load i32, i32* %14, align 4, !dbg !12652
  br label %93, !dbg !12654

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12652
  %95 = and i32 %94, 8, !dbg !12655
  %96 = icmp eq i32 %95, 0, !dbg !12656
  br i1 %96, label %104, label %97, !dbg !12657

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12658
  %99 = and i32 %98, -57345, !dbg !12658
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12658
  %101 = load i32, i32* %100, align 4, !dbg !12658
  %102 = shl i32 %101, 3, !dbg !12658
  %103 = or i32 %102, %99, !dbg !12658
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12658
  br label %104, !dbg !12660

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12661
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12662
  %107 = lshr i32 %106, 4, !dbg !12663
  %108 = and i32 %107, 15, !dbg !12663
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12664
  %110 = load i8, i8* %109, align 1, !dbg !12664
  %111 = zext i8 %110 to i32, !dbg !12664
  %112 = lshr i32 %105, %111, !dbg !12665
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12666
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12667
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !12668
  br label %115, !dbg !12669

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12558
  ret i32 %116, !dbg !12670
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12671 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12673, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata i32 0, metadata !12674, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata i32 0, metadata !12675, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata i32 0, metadata !12676, metadata !DIExpression()), !dbg !12677
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12678
  %2 = and i32 %1, 12, !dbg !12679
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12680

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12676, metadata !DIExpression()), !dbg !12677
  br label %29, !dbg !12681

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12684
  %6 = and i32 %5, 63, !dbg !12686
  call void @llvm.dbg.value(metadata i32 %6, metadata !12673, metadata !DIExpression()), !dbg !12677
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12687
  %8 = and i32 %7, 4194304, !dbg !12687
  %9 = icmp eq i32 %8, 0, !dbg !12689
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12690
  %11 = lshr i32 %10, 6, !dbg !12690
  %12 = and i32 %11, 511, !dbg !12690
  br i1 %9, label %16, label %13, !dbg !12691

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !12692
  %15 = udiv i32 %14, %6, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %15, metadata !12674, metadata !DIExpression()), !dbg !12677
  br label %22, !dbg !12695

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !12696
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !12698
  %19 = zext i32 %6 to i64, !dbg !12699
  %20 = udiv i64 %18, %19, !dbg !12700
  %21 = trunc i64 %20 to i32, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %21, metadata !12674, metadata !DIExpression()), !dbg !12677
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !12690
  call void @llvm.dbg.value(metadata i32 %23, metadata !12674, metadata !DIExpression()), !dbg !12677
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12702
  %25 = lshr i32 %24, 15, !dbg !12703
  %26 = and i32 %25, 6, !dbg !12703
  %27 = add nuw nsw i32 %26, 2, !dbg !12703
  call void @llvm.dbg.value(metadata i32 %27, metadata !12675, metadata !DIExpression()), !dbg !12677
  %28 = udiv i32 %23, %27, !dbg !12704
  call void @llvm.dbg.value(metadata i32 %28, metadata !12676, metadata !DIExpression()), !dbg !12677
  br label %29, !dbg !12705

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !12706
  call void @llvm.dbg.value(metadata i32 %30, metadata !12676, metadata !DIExpression()), !dbg !12677
  ret i32 %30, !dbg !12707
}

; Function Attrs: optsize
declare !dbg !12708 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12711 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12715, metadata !DIExpression()), !dbg !12735
  call void @llvm.dbg.value(metadata i32 %1, metadata !12716, metadata !DIExpression()), !dbg !12735
  call void @llvm.dbg.value(metadata i32 %2, metadata !12717, metadata !DIExpression()), !dbg !12735
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12736
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !12736
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12718, metadata !DIExpression()), !dbg !12737
  %8 = icmp eq i32 %0, 0, !dbg !12738
  br i1 %8, label %9, label %23, !dbg !12739

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12740
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12740
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12728, metadata !DIExpression()), !dbg !12740
  store volatile i32 0, i32* %5, align 4, !dbg !12740
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12740
  %12 = or i32 %11, 1, !dbg !12740
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12740
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12740
  %14 = and i32 %13, 1, !dbg !12740
  store volatile i32 %14, i32* %5, align 4, !dbg !12740
  %15 = load volatile i32, i32* %5, align 4, !dbg !12740
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12741
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12742
  store i32 256, i32* %16, align 4, !dbg !12743
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12744
  store i32 2, i32* %17, align 4, !dbg !12745
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12746
  store i32 3, i32* %18, align 4, !dbg !12747
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12748
  store i32 0, i32* %19, align 4, !dbg !12749
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12750
  store i32 0, i32* %20, align 4, !dbg !12751
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !12752
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12753
  %22 = and i32 %21, -123731969, !dbg !12753
  br label %38, !dbg !12754

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12755
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12755
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12732, metadata !DIExpression()), !dbg !12755
  store volatile i32 0, i32* %6, align 4, !dbg !12755
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12755
  %26 = or i32 %25, 4, !dbg !12755
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12755
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12755
  %28 = and i32 %27, 4, !dbg !12755
  store volatile i32 %28, i32* %6, align 4, !dbg !12755
  %29 = load volatile i32, i32* %6, align 4, !dbg !12755
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12756
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12757
  store i32 512, i32* %30, align 4, !dbg !12758
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12759
  store i32 2, i32* %31, align 4, !dbg !12760
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12761
  store i32 3, i32* %32, align 4, !dbg !12762
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12763
  store i32 0, i32* %33, align 4, !dbg !12764
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12765
  store i32 0, i32* %34, align 4, !dbg !12766
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !12767
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12768
  %36 = and i32 %35, 134217727, !dbg !12768
  %37 = shl i32 %2, 3, !dbg !12768
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12769
  %42 = or i32 %41, %40, !dbg !12769
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12769
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !12770
  ret void, !dbg !12770
}

; Function Attrs: optsize
declare !dbg !12771 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !12775 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12776
  ret void, !dbg !12777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !12778 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12779
  ret void, !dbg !12780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !12781 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12782
  ret i32 %1, !dbg !12783
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !12784 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12785
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12786
  %3 = lshr i32 %2, 10, !dbg !12787
  %4 = and i32 %3, 7, !dbg !12787
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12788
  %6 = load i8, i8* %5, align 1, !dbg !12788
  %7 = zext i8 %6 to i32, !dbg !12788
  %8 = lshr i32 %1, %7, !dbg !12789
  ret i32 %8, !dbg !12790
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !12791 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12792
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12793
  %3 = lshr i32 %2, 13, !dbg !12794
  %4 = and i32 %3, 7, !dbg !12794
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12795
  %6 = load i8, i8* %5, align 1, !dbg !12795
  %7 = zext i8 %6 to i32, !dbg !12795
  %8 = lshr i32 %1, %7, !dbg !12796
  ret i32 %8, !dbg !12797
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12798 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12802, metadata !DIExpression()), !dbg !12803
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12804
  store i32 15, i32* %2, align 4, !dbg !12805
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12806
  %4 = and i32 %3, 262144, !dbg !12808
  %5 = icmp eq i32 %4, 0, !dbg !12809
  br i1 %5, label %8, label %6, !dbg !12810

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12811
  store i32 327680, i32* %7, align 4, !dbg !12813
  br label %15, !dbg !12814

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12815
  %10 = and i32 %9, 65536, !dbg !12817
  %11 = icmp eq i32 %10, 0, !dbg !12818
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12819
  br i1 %11, label %14, label %13, !dbg !12820

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12821
  br label %15, !dbg !12823

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12824
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12826
  %17 = and i32 %16, 1, !dbg !12828
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12829
  store i32 %17, i32* %18, align 4, !dbg !12831
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12832
  %20 = lshr i32 %19, 3, !dbg !12833
  %21 = and i32 %20, 31, !dbg !12833
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12834
  store i32 %21, i32* %22, align 4, !dbg !12835
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12836
  %24 = and i32 %23, 4, !dbg !12838
  %25 = icmp eq i32 %24, 0, !dbg !12839
  br i1 %25, label %28, label %26, !dbg !12840

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12841
  store i32 5, i32* %27, align 4, !dbg !12843
  br label %35, !dbg !12844

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12845
  %30 = and i32 %29, 1, !dbg !12847
  %31 = icmp eq i32 %30, 0, !dbg !12848
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12849
  br i1 %31, label %34, label %33, !dbg !12850

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12851
  br label %35, !dbg !12853

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12854
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12856
  %37 = and i32 %36, 1, !dbg !12858
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12859
  store i32 %37, i32* %38, align 4, !dbg !12861
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12862
  %40 = and i32 %39, 16777216, !dbg !12864
  %41 = icmp eq i32 %40, 0, !dbg !12865
  %42 = select i1 %41, i32 1, i32 2, !dbg !12866
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12867
  store i32 %42, i32* %43, align 4, !dbg !12869
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12870
  %45 = and i32 %44, 4194304, !dbg !12871
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12872
  store i32 %45, i32* %46, align 4, !dbg !12873
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12874
  %48 = and i32 %47, 63, !dbg !12875
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12876
  store i32 %48, i32* %49, align 4, !dbg !12877
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12878
  %51 = lshr i32 %50, 6, !dbg !12879
  %52 = and i32 %51, 511, !dbg !12879
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12880
  store i32 %52, i32* %53, align 4, !dbg !12881
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12882
  %55 = shl i32 %54, 1, !dbg !12883
  %56 = and i32 %55, 393216, !dbg !12883
  %57 = add nuw nsw i32 %56, 131072, !dbg !12883
  %58 = lshr exact i32 %57, 16, !dbg !12884
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12885
  store i32 %58, i32* %59, align 4, !dbg !12886
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12887
  %61 = lshr i32 %60, 24, !dbg !12888
  %62 = and i32 %61, 15, !dbg !12888
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12889
  store i32 %62, i32* %63, align 4, !dbg !12890
  ret void, !dbg !12891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !12892 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12896, metadata !DIExpression()), !dbg !12898
  call void @llvm.dbg.value(metadata i32* %1, metadata !12897, metadata !DIExpression()), !dbg !12898
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12899
  store i32 15, i32* %3, align 4, !dbg !12900
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12901
  %5 = and i32 %4, 3, !dbg !12902
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12903
  store i32 %5, i32* %6, align 4, !dbg !12904
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12905
  %8 = and i32 %7, 240, !dbg !12906
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12907
  store i32 %8, i32* %9, align 4, !dbg !12908
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12909
  %11 = and i32 %10, 7168, !dbg !12910
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12911
  store i32 %11, i32* %12, align 4, !dbg !12912
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12913
  %14 = lshr i32 %13, 3, !dbg !12914
  %15 = and i32 %14, 7168, !dbg !12914
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12915
  store i32 %15, i32* %16, align 4, !dbg !12916
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12917
  %18 = and i32 %17, 7, !dbg !12918
  store i32 %18, i32* %1, align 4, !dbg !12919
  ret void, !dbg !12920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12921 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12922
  %2 = and i32 %1, 128, !dbg !12922
  %3 = icmp eq i32 %2, 0, !dbg !12922
  br i1 %3, label %5, label %4, !dbg !12924

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12925
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12927
  br label %5, !dbg !12928

5:                                                ; preds = %4, %0
  ret void, !dbg !12929
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12930 {
  ret void, !dbg !12931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !12932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12935, metadata !DIExpression()), !dbg !12936
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12937
  ret void, !dbg !12938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !12939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12942, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 1000, metadata !12943, metadata !DIExpression()), !dbg !12944
  %2 = udiv i32 %0, 1000, !dbg !12945
  %3 = add nsw i32 %2, -1, !dbg !12946
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12947
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12948
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12949
  ret void, !dbg !12950
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #20 !dbg !12951 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12953, metadata !DIExpression()), !dbg !12955
  %3 = bitcast i32* %2 to i8*, !dbg !12956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12956
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12954, metadata !DIExpression()), !dbg !12957
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12958
  store volatile i32 %4, i32* %2, align 4, !dbg !12957
  %5 = load volatile i32, i32* %2, align 4, !dbg !12959
  %6 = icmp eq i32 %0, -1, !dbg !12960
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()), !dbg !12955
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12955
  call void @llvm.dbg.value(metadata i32 %8, metadata !12953, metadata !DIExpression()), !dbg !12955
  br label %9, !dbg !12962

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12953, metadata !DIExpression()), !dbg !12955
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12963
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()), !dbg !12955
  %12 = shl i32 %11, 15, !dbg !12955
  %13 = ashr i32 %12, 31, !dbg !12955
  %14 = add i32 %13, %10, !dbg !12955
  call void @llvm.dbg.value(metadata i32 %14, metadata !12953, metadata !DIExpression()), !dbg !12955
  %15 = icmp eq i32 %14, 0, !dbg !12962
  br i1 %15, label %16, label %9, !dbg !12962

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12966
  ret void, !dbg !12966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #8 !dbg !12967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12969, metadata !DIExpression()), !dbg !12970
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12971
  ret void, !dbg !12972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !12973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12978, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.value(metadata i32 0, metadata !12981, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.value(metadata i32 0, metadata !12982, metadata !DIExpression()), !dbg !12983
  %2 = icmp eq i32 %0, 0, !dbg !12984
  br i1 %2, label %50, label %3, !dbg !12986

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12987
  %5 = icmp eq i32 %4, 49152, !dbg !12990
  br i1 %5, label %6, label %15, !dbg !12991

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()), !dbg !12983
  %7 = add i32 %0, -64000001, !dbg !12992
  %8 = icmp ult i32 %7, 26000000, !dbg !12992
  br i1 %8, label %15, label %9, !dbg !12992

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12995
  %11 = select i1 %10, i32 0, i32 3, !dbg !12997
  call void @llvm.dbg.value(metadata i32 %11, metadata !12981, metadata !DIExpression()), !dbg !12983
  %12 = add i32 %0, -30000001, !dbg !12998
  %13 = icmp ult i32 %12, 60000000, !dbg !12998
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %14, metadata !12981, metadata !DIExpression()), !dbg !12983
  br label %15, !dbg !12998

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12983
  call void @llvm.dbg.value(metadata i32 %16, metadata !12981, metadata !DIExpression()), !dbg !12983
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13001
  %18 = icmp eq i32 %17, 32768, !dbg !13003
  br i1 %18, label %19, label %27, !dbg !13004

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !13005
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !13008
  br i1 %22, label %27, label %23, !dbg !13008

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !13009
  %25 = and i1 %24, %21, !dbg !13012
  %26 = select i1 %25, i32 1, i32 %16, !dbg !13012
  call void @llvm.dbg.value(metadata i32 %26, metadata !12981, metadata !DIExpression()), !dbg !12983
  br label %27, !dbg !13012

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !13013
  call void @llvm.dbg.value(metadata i32 %28, metadata !12981, metadata !DIExpression()), !dbg !12983
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13014
  %30 = icmp eq i32 %29, 16384, !dbg !13016
  br i1 %30, label %31, label %39, !dbg !13017

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !13018
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !13021
  br i1 %34, label %39, label %35, !dbg !13021

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !13022
  %37 = select i1 %36, i1 %33, i1 false, !dbg !13025
  %38 = select i1 %37, i32 1, i32 %28, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %38, metadata !12981, metadata !DIExpression()), !dbg !12983
  br label %39, !dbg !13025

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !13013
  call void @llvm.dbg.value(metadata i32 %40, metadata !12981, metadata !DIExpression()), !dbg !12983
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !13026
  call void @llvm.dbg.value(metadata i32 2, metadata !12979, metadata !DIExpression()), !dbg !12983
  br label %41, !dbg !13027

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !13013
  call void @llvm.dbg.value(metadata i32 %42, metadata !12979, metadata !DIExpression()), !dbg !12983
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !13028
  call void @llvm.dbg.value(metadata i32 %43, metadata !12980, metadata !DIExpression()), !dbg !12983
  %44 = add nsw i32 %42, -1, !dbg !13030
  call void @llvm.dbg.value(metadata i32 %44, metadata !12979, metadata !DIExpression()), !dbg !12983
  %45 = icmp ne i32 %43, %40, !dbg !13031
  %46 = icmp ne i32 %44, 0, !dbg !13032
  %47 = select i1 %45, i1 %46, i1 false, !dbg !13032
  br i1 %47, label %41, label %48, !dbg !13033, !llvm.loop !13034

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !13036
  call void @llvm.dbg.value(metadata i32 %51, metadata !12982, metadata !DIExpression()), !dbg !12983
  ret i32 %51, !dbg !13037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !13038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13040
  %2 = and i32 %1, 49152, !dbg !13040
  ret i32 %2, !dbg !13041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !13042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13044, metadata !DIExpression()), !dbg !13045
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13046
  %3 = and i32 %2, -8, !dbg !13046
  %4 = or i32 %3, %0, !dbg !13046
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13046
  ret void, !dbg !13047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !13048 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13049
  %2 = and i32 %1, 7, !dbg !13049
  ret i32 %2, !dbg !13050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13069, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13070, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 0, metadata !13071, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 0, metadata !13072, metadata !DIExpression()), !dbg !13073
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13074
  %4 = icmp eq i32 %3, 0, !dbg !13076
  br i1 %4, label %5, label %21, !dbg !13077

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !13078
  call void @llvm.dbg.value(metadata i32 %6, metadata !13072, metadata !DIExpression()), !dbg !13073
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.132() #26, !dbg !13080
  %8 = icmp eq i32 %7, 1, !dbg !13082
  br i1 %8, label %13, label %9, !dbg !13083

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.133() #26, !dbg !13084
  br label %10, !dbg !13086

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.132() #26, !dbg !13087
  %12 = icmp eq i32 %11, 1, !dbg !13088
  br i1 %12, label %13, label %10, !dbg !13086, !llvm.loop !13089

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13091
  %15 = load i32, i32* %14, align 4, !dbg !13091
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13092
  %17 = load i32, i32* %16, align 4, !dbg !13092
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13093
  %19 = load i32, i32* %18, align 4, !dbg !13093
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.134(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !13094
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %20, metadata !13071, metadata !DIExpression()), !dbg !13073
  br label %21, !dbg !13096

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13097
  call void @llvm.dbg.value(metadata i32 %22, metadata !13071, metadata !DIExpression()), !dbg !13073
  ret i32 %22, !dbg !13098
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !13099 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13103, metadata !DIExpression()), !dbg !13104
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.136() #26, !dbg !13105
  %2 = icmp ne i32 %1, 0, !dbg !13107
  call void @llvm.dbg.value(metadata i1 %2, metadata !13103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13104
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !13108
  %4 = icmp ne i32 %3, 0, !dbg !13110
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13111
  %6 = zext i1 %5 to i32, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %6, metadata !13103, metadata !DIExpression()), !dbg !13104
  ret i32 %6, !dbg !13112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !13113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13117, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13118, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.value(metadata i32 0, metadata !13119, metadata !DIExpression()), !dbg !13120
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13121
  %4 = load i32, i32* %3, align 4, !dbg !13121
  %5 = and i32 %4, 63, !dbg !13122
  %6 = udiv i32 %0, %5, !dbg !13123
  call void @llvm.dbg.value(metadata i32 %6, metadata !13119, metadata !DIExpression()), !dbg !13120
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13124
  %8 = load i32, i32* %7, align 4, !dbg !13124
  %9 = and i32 %8, 511, !dbg !13125
  %10 = mul i32 %9, %6, !dbg !13126
  call void @llvm.dbg.value(metadata i32 %10, metadata !13119, metadata !DIExpression()), !dbg !13120
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13127
  %12 = load i32, i32* %11, align 4, !dbg !13127
  %13 = lshr i32 %12, 15, !dbg !13128
  %14 = and i32 %13, 131070, !dbg !13128
  %15 = add nuw nsw i32 %14, 2, !dbg !13128
  %16 = udiv i32 %10, %15, !dbg !13129
  call void @llvm.dbg.value(metadata i32 %16, metadata !13119, metadata !DIExpression()), !dbg !13120
  ret i32 %16, !dbg !13130
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.132() unnamed_addr #17 !dbg !13131 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13132
  %2 = lshr i32 %1, 1, !dbg !13133
  %3 = and i32 %2, 1, !dbg !13133
  ret i32 %3, !dbg !13134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.133() unnamed_addr #16 !dbg !13135 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13136
  %2 = or i32 %1, 1, !dbg !13136
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13136
  ret void, !dbg !13137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.134(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !13138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13140, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 %1, metadata !13141, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 %2, metadata !13142, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 %3, metadata !13143, metadata !DIExpression()), !dbg !13144
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13145
  %6 = and i32 %5, -4227072, !dbg !13145
  %7 = or i32 %1, %0, !dbg !13145
  %8 = shl i32 %2, 6, !dbg !13145
  %9 = or i32 %7, %8, !dbg !13145
  %10 = or i32 %9, %6, !dbg !13145
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13145
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13146
  %12 = and i32 %11, -196609, !dbg !13146
  %13 = or i32 %12, %3, !dbg !13146
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13146
  ret void, !dbg !13147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13152, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13153, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.value(metadata i32 0, metadata !13154, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.value(metadata i32 0, metadata !13155, metadata !DIExpression()), !dbg !13156
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13157
  %4 = load i32, i32* %3, align 4, !dbg !13157
  %5 = lshr i32 %4, 4, !dbg !13157
  %6 = and i32 %5, 15, !dbg !13157
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13157
  %8 = load i8, i8* %7, align 1, !dbg !13157
  %9 = zext i8 %8 to i32, !dbg !13157
  %10 = lshr i32 %0, %9, !dbg !13157
  call void @llvm.dbg.value(metadata i32 %10, metadata !13155, metadata !DIExpression()), !dbg !13156
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13158
  %12 = icmp ult i32 %11, %10, !dbg !13160
  br i1 %12, label %13, label %16, !dbg !13161

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13162
  call void @llvm.dbg.value(metadata i32 %14, metadata !13154, metadata !DIExpression()), !dbg !13156
  %15 = icmp eq i32 %14, 0, !dbg !13164
  br i1 %15, label %16, label %30, !dbg !13166

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.135() #26, !dbg !13167
  br label %17, !dbg !13169

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.136() #26, !dbg !13170
  %19 = icmp eq i32 %18, 1, !dbg !13171
  br i1 %19, label %20, label %17, !dbg !13169, !llvm.loop !13172

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13174
  tail call fastcc void @LL_RCC_SetAHBPrescaler.137(i32 noundef %21) #26, !dbg !13175
  tail call fastcc void @LL_RCC_SetSysClkSource.138() #26, !dbg !13176
  br label %22, !dbg !13177

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.139() #26, !dbg !13178
  %24 = icmp eq i32 %23, 8, !dbg !13179
  br i1 %24, label %25, label %22, !dbg !13177, !llvm.loop !13180

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13182
  %27 = load i32, i32* %26, align 4, !dbg !13182
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.140(i32 noundef %27) #26, !dbg !13183
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13184
  %29 = load i32, i32* %28, align 4, !dbg !13184
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.141(i32 noundef %29) #26, !dbg !13185
  br label %30, !dbg !13186

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13187
  %33 = icmp ugt i32 %32, %10, !dbg !13189
  br i1 %33, label %34, label %36, !dbg !13190

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13191
  call void @llvm.dbg.value(metadata i32 %35, metadata !13154, metadata !DIExpression()), !dbg !13156
  br label %36, !dbg !13193

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13156
  call void @llvm.dbg.value(metadata i32 %37, metadata !13154, metadata !DIExpression()), !dbg !13156
  %38 = icmp eq i32 %37, 0, !dbg !13194
  br i1 %38, label %39, label %40, !dbg !13196

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13197
  br label %40, !dbg !13199

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.135() unnamed_addr #16 !dbg !13201 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13202
  %2 = or i32 %1, 16777216, !dbg !13202
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13202
  ret void, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.136() unnamed_addr #17 !dbg !13204 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13205
  %2 = lshr i32 %1, 25, !dbg !13206
  %3 = and i32 %2, 1, !dbg !13206
  ret i32 %3, !dbg !13207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.137(i32 noundef %0) unnamed_addr #16 !dbg !13208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13210, metadata !DIExpression()), !dbg !13211
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13212
  %3 = and i32 %2, -241, !dbg !13212
  %4 = or i32 %3, %0, !dbg !13212
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13212
  ret void, !dbg !13213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.138() unnamed_addr #16 !dbg !13214 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13216, metadata !DIExpression()), !dbg !13217
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13218
  %2 = and i32 %1, -4, !dbg !13218
  %3 = or i32 %2, 2, !dbg !13218
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13218
  ret void, !dbg !13219
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.139() unnamed_addr #17 !dbg !13220 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13221
  %2 = and i32 %1, 12, !dbg !13221
  ret i32 %2, !dbg !13222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.140(i32 noundef %0) unnamed_addr #16 !dbg !13223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13225, metadata !DIExpression()), !dbg !13226
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13227
  %3 = and i32 %2, -7169, !dbg !13227
  %4 = or i32 %3, %0, !dbg !13227
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13227
  ret void, !dbg !13228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.141(i32 noundef %0) unnamed_addr #16 !dbg !13229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13233
  %3 = and i32 %2, -57345, !dbg !13233
  %4 = or i32 %3, %0, !dbg !13233
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13233
  ret void, !dbg !13234
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !13235 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13236
  %2 = lshr i32 %1, 27, !dbg !13237
  %3 = and i32 %2, 1, !dbg !13237
  ret i32 %3, !dbg !13238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !13239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13243, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 %1, metadata !13244, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13245, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13246, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 0, metadata !13247, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 0, metadata !13248, metadata !DIExpression()), !dbg !13249
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13250
  %6 = icmp eq i32 %5, 0, !dbg !13252
  br i1 %6, label %7, label %27, !dbg !13253

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13254
  call void @llvm.dbg.value(metadata i32 %8, metadata !13248, metadata !DIExpression()), !dbg !13249
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13256
  %10 = icmp eq i32 %9, 1, !dbg !13258
  br i1 %10, label %19, label %11, !dbg !13259

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13260
  br i1 %12, label %13, label %14, !dbg !13263

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13264
  br label %15, !dbg !13266

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !13267
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !13269
  br label %16, !dbg !13270

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13271
  %18 = icmp eq i32 %17, 1, !dbg !13272
  br i1 %18, label %19, label %16, !dbg !13270, !llvm.loop !13273

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13275
  %21 = load i32, i32* %20, align 4, !dbg !13275
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13276
  %23 = load i32, i32* %22, align 4, !dbg !13276
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13277
  %25 = load i32, i32* %24, align 4, !dbg !13277
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.134(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13278
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13279
  call void @llvm.dbg.value(metadata i32 %26, metadata !13247, metadata !DIExpression()), !dbg !13249
  br label %27, !dbg !13280

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13281
  call void @llvm.dbg.value(metadata i32 %28, metadata !13247, metadata !DIExpression()), !dbg !13249
  ret i32 %28, !dbg !13282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !13283 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13284
  %2 = lshr i32 %1, 17, !dbg !13285
  %3 = and i32 %2, 1, !dbg !13285
  ret i32 %3, !dbg !13286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !13287 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13288
  %2 = or i32 %1, 262144, !dbg !13288
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13288
  ret void, !dbg !13289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !13290 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13291
  %2 = and i32 %1, -262145, !dbg !13291
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13291
  ret void, !dbg !13292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !13293 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13294
  %2 = or i32 %1, 65536, !dbg !13294
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13294
  ret void, !dbg !13295
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13296 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13299, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i32 undef, metadata !13299, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i32 undef, metadata !13299, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13315
  ret void, !dbg !13316
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13321, metadata !DIExpression()), !dbg !13323
  %2 = icmp eq i8* %0, null, !dbg !13324
  br i1 %2, label %29, label %3, !dbg !13326

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13327
  %5 = icmp eq i8 %4, 0, !dbg !13328
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13329
  br i1 %6, label %29, label %8, !dbg !13329

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13322, metadata !DIExpression()), !dbg !13323
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13330

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13322, metadata !DIExpression()), !dbg !13323
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13332
  br i1 %10, label %11, label %15, !dbg !13337

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13338
  %13 = load i8*, i8** %12, align 4, !dbg !13338
  %14 = icmp eq i8* %13, %0, !dbg !13339
  br i1 %14, label %29, label %15, !dbg !13340

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13341
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13322, metadata !DIExpression()), !dbg !13323
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13342
  br i1 %17, label %7, label %8, !dbg !13343, !llvm.loop !13344

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13322, metadata !DIExpression()), !dbg !13323
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13346
  br i1 %20, label %21, label %26, !dbg !13350

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13351
  %23 = load i8*, i8** %22, align 4, !dbg !13351
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13352
  %25 = icmp eq i32 %24, 0, !dbg !13353
  br i1 %25, label %29, label %26, !dbg !13354

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13355
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13322, metadata !DIExpression()), !dbg !13323
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13356
  br i1 %28, label %29, label %18, !dbg !13330, !llvm.loop !13357

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13323
  ret %struct.device* %30, !dbg !13359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !13360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13364, metadata !DIExpression()), !dbg !13365
  %2 = icmp eq %struct.device* %0, null, !dbg !13366
  br i1 %2, label %14, label %3, !dbg !13368

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13369
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13369
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13370
  %7 = load i8, i8* %6, align 1, !dbg !13370
  %8 = and i8 %7, 1, !dbg !13370
  %9 = icmp eq i8 %8, 0, !dbg !13370
  br i1 %9, label %14, label %10, !dbg !13371

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13372
  %12 = load i8, i8* %11, align 1, !dbg !13372
  %13 = icmp eq i8 %12, 0, !dbg !13373
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13365
  ret i1 %15, !dbg !13374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !13375 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13380, metadata !DIExpression()), !dbg !13381
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13382
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13384 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13392, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13393, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i8* %2, metadata !13394, metadata !DIExpression()), !dbg !13397
  %5 = bitcast i32* %4 to i8*, !dbg !13398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13398
  call void @llvm.dbg.value(metadata i32 0, metadata !13395, metadata !DIExpression()), !dbg !13397
  store i32 0, i32* %4, align 4, !dbg !13399
  call void @llvm.dbg.value(metadata i32* %4, metadata !13395, metadata !DIExpression(DW_OP_deref)), !dbg !13397
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13400
  call void @llvm.dbg.value(metadata i16* %6, metadata !13396, metadata !DIExpression()), !dbg !13397
  %7 = load i32, i32* %4, align 4, !dbg !13401
  call void @llvm.dbg.value(metadata i32 %7, metadata !13395, metadata !DIExpression()), !dbg !13397
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13403
  ret i32 %8, !dbg !13404
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13409, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i32* %1, metadata !13410, metadata !DIExpression()), !dbg !13415
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13416
  %4 = load i16*, i16** %3, align 4, !dbg !13416
  call void @llvm.dbg.value(metadata i16* %4, metadata !13411, metadata !DIExpression()), !dbg !13415
  %5 = icmp eq i16* %4, null, !dbg !13417
  br i1 %5, label %14, label %6, !dbg !13418

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13419
  call void @llvm.dbg.value(metadata i32 %7, metadata !13412, metadata !DIExpression()), !dbg !13419
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13420
  %9 = load i16, i16* %8, align 2, !dbg !13420
  %10 = add i16 %9, -32767, !dbg !13421
  %11 = icmp ult i16 %10, 2, !dbg !13421
  %12 = add i32 %7, 1, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %12, metadata !13412, metadata !DIExpression()), !dbg !13419
  br i1 %11, label %13, label %6, !dbg !13421, !llvm.loop !13424

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13427
  br label %14, !dbg !13428

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13430 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13434, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 %1, metadata !13435, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13436, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i8* %3, metadata !13437, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 0, metadata !13438, metadata !DIExpression()), !dbg !13446
  %5 = icmp eq i32 %1, 0, !dbg !13447
  br i1 %5, label %16, label %8, !dbg !13448

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13438, metadata !DIExpression()), !dbg !13446
  %7 = icmp eq i32 %15, %1, !dbg !13447
  br i1 %7, label %16, label %8, !dbg !13448, !llvm.loop !13449

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13438, metadata !DIExpression()), !dbg !13446
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13451
  %11 = load i16, i16* %10, align 2, !dbg !13451
  call void @llvm.dbg.value(metadata i16 %11, metadata !13440, metadata !DIExpression()), !dbg !13452
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13453
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13443, metadata !DIExpression()), !dbg !13452
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13454
  call void @llvm.dbg.value(metadata i32 %13, metadata !13444, metadata !DIExpression()), !dbg !13452
  %14 = icmp slt i32 %13, 0, !dbg !13455
  %15 = add nuw i32 %9, 1, !dbg !13457
  call void @llvm.dbg.value(metadata i32 %15, metadata !13438, metadata !DIExpression()), !dbg !13446
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13459 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13463, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13464, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13465, metadata !DIExpression()), !dbg !13466
  %2 = sext i16 %0 to i32, !dbg !13467
  %3 = icmp slt i16 %0, 1, !dbg !13469
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13470
  %6 = add nsw i32 %2, -1, !dbg !13470
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13470
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13470
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13464, metadata !DIExpression()), !dbg !13466
  ret %struct.device* %8, !dbg !13471
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13472 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13474, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13475, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.value(metadata i8* %2, metadata !13476, metadata !DIExpression()), !dbg !13479
  %5 = bitcast i32* %4 to i8*, !dbg !13480
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13480
  call void @llvm.dbg.value(metadata i32 0, metadata !13477, metadata !DIExpression()), !dbg !13479
  store i32 0, i32* %4, align 4, !dbg !13481
  call void @llvm.dbg.value(metadata i32* %4, metadata !13477, metadata !DIExpression(DW_OP_deref)), !dbg !13479
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13482
  call void @llvm.dbg.value(metadata i16* %6, metadata !13478, metadata !DIExpression()), !dbg !13479
  %7 = load i32, i32* %4, align 4, !dbg !13483
  call void @llvm.dbg.value(metadata i32 %7, metadata !13477, metadata !DIExpression()), !dbg !13479
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13484
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13485
  ret i32 %8, !dbg !13486
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13489, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32* %1, metadata !13490, metadata !DIExpression()), !dbg !13494
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13495
  %4 = load i16*, i16** %3, align 4, !dbg !13495
  call void @llvm.dbg.value(metadata i16* %4, metadata !13491, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 0, metadata !13492, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 0, metadata !13493, metadata !DIExpression()), !dbg !13494
  %5 = icmp eq i16* %4, null, !dbg !13496
  br i1 %5, label %22, label %6, !dbg !13498

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13492, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i16* %8, metadata !13491, metadata !DIExpression()), !dbg !13494
  %9 = load i16, i16* %8, align 2, !dbg !13499
  %10 = icmp eq i16 %9, -32768, !dbg !13503
  call void @llvm.dbg.value(metadata i32 undef, metadata !13492, metadata !DIExpression()), !dbg !13494
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13504
  call void @llvm.dbg.value(metadata i16* %11, metadata !13491, metadata !DIExpression()), !dbg !13494
  %12 = zext i1 %10 to i32, !dbg !13505
  %13 = add i32 %7, %12, !dbg !13505
  call void @llvm.dbg.value(metadata i32 %13, metadata !13492, metadata !DIExpression()), !dbg !13494
  %14 = icmp eq i32 %13, 2, !dbg !13506
  br i1 %14, label %15, label %6, !dbg !13507

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13494
  call void @llvm.dbg.value(metadata i32 %16, metadata !13493, metadata !DIExpression()), !dbg !13494
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13508
  %18 = load i16, i16* %17, align 2, !dbg !13508
  %19 = icmp eq i16 %18, 32767, !dbg !13509
  %20 = add i32 %16, 1, !dbg !13510
  call void @llvm.dbg.value(metadata i32 %20, metadata !13493, metadata !DIExpression()), !dbg !13494
  br i1 %19, label %21, label %15, !dbg !13512, !llvm.loop !13513

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13515
  br label %22, !dbg !13516

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13517
  call void @llvm.dbg.value(metadata i16* %23, metadata !13491, metadata !DIExpression()), !dbg !13494
  ret i16* %23, !dbg !13518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !13519 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13522
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13523
  ret i32* %2, !dbg !13524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13525 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13674, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13675, metadata !DIExpression()), !dbg !13676
  ret void, !dbg !13677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13682, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i32 %1, metadata !13683, metadata !DIExpression()), !dbg !13684
  ret void, !dbg !13685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13686 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13690, metadata !DIExpression()), !dbg !13692
  call void @llvm.dbg.value(metadata i32 %1, metadata !13691, metadata !DIExpression()), !dbg !13692
  ret void, !dbg !13693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13698, metadata !DIExpression()), !dbg !13700
  call void @llvm.dbg.value(metadata i8* %1, metadata !13699, metadata !DIExpression()), !dbg !13700
  ret i32 -134, !dbg !13701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13706, metadata !DIExpression()), !dbg !13708
  call void @llvm.dbg.value(metadata i8* %1, metadata !13707, metadata !DIExpression()), !dbg !13708
  ret i32 -134, !dbg !13709
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13713, metadata !DIExpression()), !dbg !13714
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13715, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #25, !dbg !13722
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #25, !dbg !13722
  br label %3, !dbg !13723

3:                                                ; preds = %3, %1
  br label %3, !dbg !13724, !llvm.loop !13727
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13734, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13735, metadata !DIExpression()), !dbg !13736
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.146, i32 0, i32 0), i32 noundef 69) #27, !dbg !13737
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13742
  unreachable, !dbg !13742
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13745, metadata !DIExpression()), !dbg !13746
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13747
  unreachable, !dbg !13747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13750, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13751, metadata !DIExpression()), !dbg !13754
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13755, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #25, !dbg !13757
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #25, !dbg !13757
  call void @llvm.dbg.value(metadata i32 undef, metadata !13752, metadata !DIExpression()), !dbg !13754
  %4 = tail call fastcc %struct.k_thread* @k_current_get.149() #28, !dbg !13758
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13753, metadata !DIExpression()), !dbg !13754
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !13759
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.150, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !13759
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13764
  br i1 %6, label %15, label %7, !dbg !13766

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13767, metadata !DIExpression()), !dbg !13772
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13774
  %9 = load i32, i32* %8, align 4, !dbg !13774
  %10 = and i32 %9, 511, !dbg !13775
  %11 = icmp eq i32 %10, 0, !dbg !13776
  br i1 %11, label %13, label %12, !dbg !13777

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 69) #27, !dbg !13778
  br label %13, !dbg !13784

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13785
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.152, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !13785
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13790
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13767, metadata !DIExpression()), !dbg !13791
  br label %17, !dbg !13796

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13785
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.152, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !13785
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13790
  br label %17, !dbg !13797

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13755
  call void @llvm.dbg.value(metadata i32 %18, metadata !13718, metadata !DIExpression()) #25, !dbg !13757
  call void @llvm.dbg.value(metadata i32 %18, metadata !13752, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 undef, metadata !13798, metadata !DIExpression()) #25, !dbg !13801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !13803, !srcloc !13804
  tail call fastcc void @k_thread_abort.153(%struct.k_thread* noundef %4) #26, !dbg !13805
  ret void, !dbg !13808
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.149() unnamed_addr #11 !dbg !13809 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.161() #28, !dbg !13813
  ret %struct.k_thread* %1, !dbg !13814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !13815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13819, metadata !DIExpression()), !dbg !13820
  %2 = icmp ult i32 %0, 5, !dbg !13821
  br i1 %2, label %3, label %6, !dbg !13821

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13821
  %5 = load i8*, i8** %4, align 4, !dbg !13821
  br label %6, !dbg !13821

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.155, i32 0, i32 0), %1 ], !dbg !13822
  ret i8* %7, !dbg !13824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13829, metadata !DIExpression()), !dbg !13831
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13832
  br i1 %2, label %9, label %3, !dbg !13833

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !13834
  call void @llvm.dbg.value(metadata i8* %4, metadata !13830, metadata !DIExpression()), !dbg !13831
  %5 = icmp eq i8* %4, null, !dbg !13835
  br i1 %5, label %9, label %6, !dbg !13837

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13838
  %8 = icmp eq i8 %7, 0, !dbg !13839
  br i1 %8, label %9, label %10, !dbg !13840

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.154, i32 0, i32 0), metadata !13830, metadata !DIExpression()), !dbg !13831
  br label %10, !dbg !13841

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.154, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13831
  call void @llvm.dbg.value(metadata i8* %11, metadata !13830, metadata !DIExpression()), !dbg !13831
  ret i8* %11, !dbg !13843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.153(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13844 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13848, metadata !DIExpression()), !dbg !13849
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13850, !srcloc !13852
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !13853
  ret void, !dbg !13854
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.161() unnamed_addr #11 !dbg !13855 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13856, !srcloc !13858
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !13859
  ret %struct.k_thread* %1, !dbg !13860
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13865, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i32 %1, metadata !13866, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i32 %2, metadata !13867, metadata !DIExpression()), !dbg !13868
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !13869
  ret void, !dbg !13870
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13875, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i8* %1, metadata !13876, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i32 %2, metadata !13877, metadata !DIExpression()), !dbg !13878
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !13879
  ret void, !dbg !13880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13881 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13882
  ret void, !dbg !13883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13886, metadata !DIExpression()), !dbg !13887
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13888
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13889
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13890
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13891
  %4 = trunc i32 %0 to i8, !dbg !13892
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13893
  store i8 %4, i8* %5, align 4, !dbg !13894
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13895
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13896
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13897
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13898
  store i8* %8, i8** %9, align 4, !dbg !13899
  ret void, !dbg !13900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13903, metadata !DIExpression()), !dbg !13909
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13910
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13904, metadata !DIExpression()), !dbg !13909
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13911
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13905, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.value(metadata i8* null, metadata !13908, metadata !DIExpression()), !dbg !13909
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13912
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13913
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !13914
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13915
  ret void, !dbg !13916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !13917 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13921, metadata !DIExpression()), !dbg !13922
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13923
  ret i8* %2, !dbg !13924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13930, metadata !DIExpression()), !dbg !13931
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13932
  %3 = load i8, i8* %2, align 1, !dbg !13933
  %4 = and i8 %3, -5, !dbg !13933
  store i8 %4, i8* %2, align 1, !dbg !13933
  ret void, !dbg !13934
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13935 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13938
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !13939
  %3 = ptrtoint i8* %2 to i32, !dbg !13948
  %4 = add i32 %3, 2048, !dbg !13949
  call void @llvm.dbg.value(metadata i32 %4, metadata !13943, metadata !DIExpression()) #25, !dbg !13950
  call void @llvm.dbg.value(metadata i32 %4, metadata !13951, metadata !DIExpression()) #25, !dbg !13954
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !13956, !srcloc !13957
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13958
  %6 = or i32 %5, 512, !dbg !13958
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13958
  tail call fastcc void @__NVIC_SetPriority.170(i32 noundef -2, i32 noundef 255) #27, !dbg !13959
  tail call fastcc void @__NVIC_SetPriority.170(i32 noundef -5, i32 noundef 0) #27, !dbg !13962
  tail call fastcc void @__NVIC_SetPriority.170(i32 noundef -12, i32 noundef 0) #27, !dbg !13963
  tail call fastcc void @__NVIC_SetPriority.170(i32 noundef -11, i32 noundef 0) #27, !dbg !13964
  tail call fastcc void @__NVIC_SetPriority.170(i32 noundef -10, i32 noundef 0) #27, !dbg !13965
  tail call fastcc void @__NVIC_SetPriority.170(i32 noundef -4, i32 noundef 0) #27, !dbg !13966
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13967
  %8 = or i32 %7, 458752, !dbg !13967
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13967
  tail call void @z_arm_fault_init() #27, !dbg !13968
  tail call void @z_arm_cpu_idle_init() #27, !dbg !13969
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13970
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13973
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !13974
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !13975
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13976
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !13976
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13937, metadata !DIExpression()), !dbg !13977
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13978
  call void @z_device_state_init() #27, !dbg !13979
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13980
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13981
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13982
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !13983
  unreachable, !dbg !13983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2133, metadata !DIExpression()), !dbg !13984
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13985
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13985
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2134, metadata !DIExpression()), !dbg !13984
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2134, metadata !DIExpression()), !dbg !13984
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13986
  br i1 %7, label %8, label %35, !dbg !13987

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2134, metadata !DIExpression()), !dbg !13984
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13988
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13988
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2144, metadata !DIExpression()), !dbg !13989
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13990
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13990
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !13991
  call void @llvm.dbg.value(metadata i32 %14, metadata !2148, metadata !DIExpression()), !dbg !13989
  %15 = icmp eq %struct.device* %11, null, !dbg !13992
  br i1 %15, label %32, label %16, !dbg !13994

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13995
  br i1 %17, label %26, label %18, !dbg !13998

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13999
  call void @llvm.dbg.value(metadata i32 %19, metadata !2148, metadata !DIExpression()), !dbg !13989
  %20 = icmp ult i32 %19, 255, !dbg !14001
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %21, metadata !2148, metadata !DIExpression()), !dbg !13989
  %22 = trunc i32 %21 to i8, !dbg !14002
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14003
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14003
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14004
  store i8 %22, i8* %25, align 1, !dbg !14005
  br label %26, !dbg !14006

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14007
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14007
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14008
  %30 = load i8, i8* %29, align 1, !dbg !14009
  %31 = or i8 %30, 1, !dbg !14009
  store i8 %31, i8* %29, align 1, !dbg !14009
  br label %32, !dbg !14010

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14011
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2134, metadata !DIExpression()), !dbg !13984
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13986
  br i1 %34, label %8, label %35, !dbg !13987, !llvm.loop !14012

35:                                               ; preds = %32, %1
  ret void, !dbg !14014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.170(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !14015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14017, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.value(metadata i32 %1, metadata !14018, metadata !DIExpression()), !dbg !14019
  %3 = trunc i32 %1 to i8, !dbg !14020
  %4 = shl i8 %3, 4, !dbg !14020
  %5 = and i32 %0, 15, !dbg !14023
  %6 = add nsw i32 %5, -4, !dbg !14024
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14025
  store volatile i8 %4, i8* %7, align 1, !dbg !14026
  ret void, !dbg !14027
}

; Function Attrs: optsize
declare !dbg !14028 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14032, metadata !DIExpression()), !dbg !14033
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14034
  store i8 1, i8* %2, align 1, !dbg !14035
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14036
  store i8 1, i8* %3, align 4, !dbg !14037
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14038
  store i32 0, i32* %4, align 4, !dbg !14039
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14040
  store i32 0, i32* %5, align 4, !dbg !14041
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !14042
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14043
  ret void, !dbg !14044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14045 {
  tail call void @z_sched_init() #27, !dbg !14050
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14051
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.171, i32 0, i32 0)) #27, !dbg !14052
  call void @llvm.dbg.value(metadata i8* %1, metadata !14049, metadata !DIExpression()), !dbg !14053
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14054
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14055
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !14056
  ret i8* %1, !dbg !14057
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14062, metadata !DIExpression()), !dbg !14063
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14064
  unreachable, !dbg !14065
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14068, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i8* %1, metadata !14069, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i8* %2, metadata !14070, metadata !DIExpression()), !dbg !14071
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14072
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !14073
  tail call void @boot_banner() #27, !dbg !14074
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !14075
  tail call void @z_init_static_threads() #27, !dbg !14076
  tail call void @main() #27, !dbg !14077
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14078
  %5 = and i8 %4, -2, !dbg !14078
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14078
  ret void, !dbg !14079
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14080 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14090, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i8* %1, metadata !14091, metadata !DIExpression()), !dbg !14092
  ret void, !dbg !14093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14094 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14096, metadata !DIExpression()), !dbg !14098
  call void @llvm.dbg.value(metadata i8* %1, metadata !14097, metadata !DIExpression()), !dbg !14098
  ret void, !dbg !14099
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14100 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14101, !srcloc !14108
  call void @llvm.dbg.value(metadata i32 %1, metadata !14104, metadata !DIExpression()) #25, !dbg !14109
  %2 = icmp ne i32 %1, 0, !dbg !14110
  ret i1 %2, !dbg !14111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14112 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14113
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14114
  %3 = load i8, i8* %2, align 4, !dbg !14115
  %4 = or i8 %3, 1, !dbg !14115
  store i8 %4, i8* %2, align 4, !dbg !14115
  ret void, !dbg !14116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14117 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14118
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14119
  %3 = load i8, i8* %2, align 4, !dbg !14120
  %4 = and i8 %3, -2, !dbg !14120
  store i8 %4, i8* %2, align 4, !dbg !14120
  ret void, !dbg !14121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !14122 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14123
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14124
  %3 = load i8, i8* %2, align 4, !dbg !14124
  %4 = and i8 %3, 1, !dbg !14125
  %5 = icmp ne i8 %4, 0, !dbg !14126
  ret i1 %5, !dbg !14127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14128 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14132, metadata !DIExpression()), !dbg !14134
  call void @llvm.dbg.value(metadata i8* %1, metadata !14133, metadata !DIExpression()), !dbg !14134
  ret i32 -88, !dbg !14135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14136 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14140, metadata !DIExpression()), !dbg !14141
  ret i8* null, !dbg !14142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14147, metadata !DIExpression()), !dbg !14150
  call void @llvm.dbg.value(metadata i8* %1, metadata !14148, metadata !DIExpression()), !dbg !14150
  call void @llvm.dbg.value(metadata i32 %2, metadata !14149, metadata !DIExpression()), !dbg !14150
  ret i32 -88, !dbg !14151
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2273, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i8* %1, metadata !2274, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i32 %2, metadata !2275, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i32 0, metadata !2276, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i8 undef, metadata !2278, metadata !DIExpression()), !dbg !14152
  %4 = icmp eq i8* %1, null, !dbg !14153
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14155
  br i1 %6, label %46, label %7, !dbg !14155

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14156
  %9 = load i8, i8* %8, align 1, !dbg !14156
  call void @llvm.dbg.value(metadata i8 %9, metadata !2278, metadata !DIExpression()), !dbg !14152
  %10 = add i32 %2, -1, !dbg !14157
  call void @llvm.dbg.value(metadata i32 %10, metadata !2275, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i8 0, metadata !2279, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i8 %9, metadata !2278, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i32 0, metadata !2276, metadata !DIExpression()), !dbg !14152
  %11 = icmp eq i8 %9, 0, !dbg !14159
  br i1 %11, label %12, label %15, !dbg !14161

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14162
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14163
  store i8 0, i8* %14, align 1, !dbg !14164
  br label %46, !dbg !14165

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2279, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i8 %17, metadata !2278, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i32 %18, metadata !2276, metadata !DIExpression()), !dbg !14152
  %19 = zext i8 %17 to i32, !dbg !14166
  %20 = zext i8 %16 to i32, !dbg !14167
  %21 = shl nuw i32 1, %20, !dbg !14167
  call void @llvm.dbg.value(metadata i32 %21, metadata !2277, metadata !DIExpression()), !dbg !14152
  %22 = and i32 %21, %19, !dbg !14169
  %23 = icmp eq i32 %22, 0, !dbg !14171
  br i1 %23, label %42, label %24, !dbg !14172

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14173
  %26 = sub i32 %10, %18, !dbg !14174
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14175
  %28 = load i8*, i8** %27, align 4, !dbg !14175
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14176
  %30 = load i32, i32* %29, align 4, !dbg !14176
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14177
  %32 = add i32 %31, %18, !dbg !14178
  call void @llvm.dbg.value(metadata i32 %32, metadata !2276, metadata !DIExpression()), !dbg !14152
  %33 = trunc i32 %21 to i8, !dbg !14179
  %34 = xor i8 %33, -1, !dbg !14179
  %35 = and i8 %17, %34, !dbg !14179
  call void @llvm.dbg.value(metadata i8 %35, metadata !2278, metadata !DIExpression()), !dbg !14152
  %36 = icmp eq i8 %35, 0, !dbg !14180
  br i1 %36, label %12, label %37, !dbg !14182

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14183
  %39 = sub i32 %10, %32, !dbg !14185
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.174, i32 0, i32 0), i32 noundef 1) #26, !dbg !14186
  %41 = add i32 %40, %32, !dbg !14187
  call void @llvm.dbg.value(metadata i32 %41, metadata !2276, metadata !DIExpression()), !dbg !14152
  br label %42, !dbg !14188

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14152
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14152
  call void @llvm.dbg.value(metadata i8 %44, metadata !2278, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i32 %43, metadata !2276, metadata !DIExpression()), !dbg !14152
  %45 = add i8 %16, 1, !dbg !14189
  call void @llvm.dbg.value(metadata i8 %45, metadata !2279, metadata !DIExpression()), !dbg !14158
  br label %15, !dbg !14161

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.175, i32 0, i32 0), %3 ], !dbg !14152
  ret i8* %47, !dbg !14190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14191 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14195, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 %1, metadata !14196, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i8* %2, metadata !14197, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 %3, metadata !14198, metadata !DIExpression()), !dbg !14200
  %5 = icmp ult i32 %1, %3, !dbg !14201
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14201
  call void @llvm.dbg.value(metadata i32 %6, metadata !14199, metadata !DIExpression()), !dbg !14200
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14202
  ret i32 %6, !dbg !14203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14208, metadata !DIExpression()), !dbg !14209
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14210
  ret void, !dbg !14211
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14212 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14221, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14222, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i32 %2, metadata !14223, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14224, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i8* %4, metadata !14225, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i8* %5, metadata !14226, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i8* %6, metadata !14227, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i32 %7, metadata !14228, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i32 %8, metadata !14229, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i8* undef, metadata !14230, metadata !DIExpression()), !dbg !14232
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14233
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !14234
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14235
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14236
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14237
  call void @llvm.dbg.value(metadata i8* %13, metadata !14231, metadata !DIExpression()), !dbg !14232
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14238
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14239
  store i8* null, i8** %14, align 4, !dbg !14240
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14241
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14241
  br i1 %16, label %20, label %17, !dbg !14243

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14244
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14244
  br label %20, !dbg !14245

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14232
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14246
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14248
  ret i8* %13, !dbg !14249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14250 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14255, metadata !DIExpression()), !dbg !14256
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14257
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14258
  ret void, !dbg !14259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14260 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14265, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.value(metadata i32 %1, metadata !14266, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.value(metadata i32 %2, metadata !14267, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.value(metadata i32 %3, metadata !14268, metadata !DIExpression()), !dbg !14269
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14270
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14271
  %6 = trunc i32 %3 to i8, !dbg !14272
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14273
  store i8 %6, i8* %7, align 4, !dbg !14274
  %8 = trunc i32 %2 to i8, !dbg !14275
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14276
  store i8 %8, i8* %9, align 1, !dbg !14277
  %10 = trunc i32 %1 to i8, !dbg !14278
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14279
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14279
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14279
  store i8 %10, i8* %13, align 2, !dbg !14280
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14281
  store i8 0, i8* %14, align 1, !dbg !14282
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14283
  ret void, !dbg !14284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !14285 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14289, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14290, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.value(metadata i32 %2, metadata !14291, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.value(metadata i32 0, metadata !14296, metadata !DIExpression()), !dbg !14297
  %4 = add i32 %2, 7, !dbg !14298
  %5 = and i32 %4, -8, !dbg !14298
  %6 = add i32 %5, 64, !dbg !14298
  call void @llvm.dbg.value(metadata i32 %6, metadata !14292, metadata !DIExpression()), !dbg !14297
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.185(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14300
  call void @llvm.dbg.value(metadata i8* %7, metadata !14295, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.value(metadata i32 %5, metadata !14293, metadata !DIExpression()), !dbg !14297
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14301
  call void @llvm.dbg.value(metadata i8* %8, metadata !14294, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.value(metadata i32 0, metadata !14296, metadata !DIExpression()), !dbg !14297
  %9 = ptrtoint i8* %7 to i32, !dbg !14302
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14303
  store i32 %9, i32* %10, align 4, !dbg !14304
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14305
  store i32 %5, i32* %11, align 4, !dbg !14306
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14307
  store i32 0, i32* %12, align 4, !dbg !14308
  call void @llvm.dbg.value(metadata i8* %8, metadata !14294, metadata !DIExpression()), !dbg !14297
  ret i8* %8, !dbg !14309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.185(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14310 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14314, metadata !DIExpression()), !dbg !14315
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14316
  ret i8* %2, !dbg !14317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14318 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14323, metadata !DIExpression()), !dbg !14324
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14325
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14326
  ret void, !dbg !14327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14328 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14330, metadata !DIExpression()), !dbg !14331
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14332
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14333
  ret void, !dbg !14334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14335 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14339, metadata !DIExpression()), !dbg !14340
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14341
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14342
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14343
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14344
  ret void, !dbg !14345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14346 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14351, metadata !DIExpression()), !dbg !14352
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14353
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14354
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14355
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14356
  ret void, !dbg !14357
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14358 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14375, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14366, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14367, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 %2, metadata !14368, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14369, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i8* %4, metadata !14370, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i8* %5, metadata !14371, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i8* %6, metadata !14372, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 %7, metadata !14373, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 %8, metadata !14374, metadata !DIExpression()), !dbg !14376
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14377
  %13 = icmp eq i64 %11, -1, !dbg !14378
  br i1 %13, label %15, label %14, !dbg !14380

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14381
  br label %15, !dbg !14383

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14385 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14390, metadata !DIExpression()), !dbg !14391
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14389, metadata !DIExpression()), !dbg !14391
  %4 = icmp eq i64 %3, 0, !dbg !14392
  br i1 %4, label %5, label %6, !dbg !14394

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14395
  br label %7, !dbg !14397

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14398
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14401 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14405, metadata !DIExpression()), !dbg !14406
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14407, !srcloc !14409
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14410
  ret void, !dbg !14411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14412 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14415, metadata !DIExpression()), !dbg !14416
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14414, metadata !DIExpression()), !dbg !14416
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14417
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14418
  ret void, !dbg !14419
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14420 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14422, metadata !DIExpression()), !dbg !14441
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14442

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14443
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14439, metadata !DIExpression()), !dbg !14444
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14445

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14422, metadata !DIExpression()), !dbg !14441
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14446
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14446
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14449
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14449
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14450
  %9 = load i32, i32* %8, align 4, !dbg !14450
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14451
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14451
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14452
  %13 = load i8*, i8** %12, align 4, !dbg !14452
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14453
  %15 = load i8*, i8** %14, align 4, !dbg !14453
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14454
  %17 = load i8*, i8** %16, align 4, !dbg !14454
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14455
  %19 = load i32, i32* %18, align 4, !dbg !14455
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14456
  %21 = load i32, i32* %20, align 4, !dbg !14456
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14457
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14458
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14459
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14460
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14460
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14461
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14422, metadata !DIExpression()), !dbg !14441
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14462
  br i1 %27, label %2, label %1, !dbg !14442, !llvm.loop !14464

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !14443
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14439, metadata !DIExpression()), !dbg !14444
  br label %29, !dbg !14445

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !14466
  ret void, !dbg !14467

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14439, metadata !DIExpression()), !dbg !14444
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14468
  %33 = load i32, i32* %32, align 4, !dbg !14468
  %34 = icmp eq i32 %33, -1, !dbg !14472
  br i1 %34, label %43, label %35, !dbg !14473

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14474
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14474
  %38 = icmp sgt i32 %33, 0, !dbg !14476
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14476
  %40 = zext i32 %39 to i64, !dbg !14476
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.188(i64 noundef %40) #26, !dbg !14476
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14477
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14477
  br label %43, !dbg !14478

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14479
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14439, metadata !DIExpression()), !dbg !14444
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14480
  br i1 %45, label %30, label %29, !dbg !14445, !llvm.loop !14482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.188(i64 noundef %0) unnamed_addr #5 !dbg !14484 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14486, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i64 %0, metadata !14488, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i32 1000, metadata !14491, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i32 10000, metadata !14492, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i8 1, metadata !14493, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i8 0, metadata !14494, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i8 1, metadata !14495, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i8 0, metadata !14496, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i8 1, metadata !14497, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i8 0, metadata !14498, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i64 0, metadata !14499, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i64 0, metadata !14499, metadata !DIExpression()), !dbg !14503
  %2 = mul i64 %0, 10, !dbg !14505
  ret i64 %2, !dbg !14511
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14512 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14514, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i8* %1, metadata !14515, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i8* %2, metadata !14516, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i8* %3, metadata !14517, metadata !DIExpression()), !dbg !14518
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14519
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14520
  %7 = load i8, i8* %6, align 4, !dbg !14521
  %8 = or i8 %7, 4, !dbg !14521
  store i8 %8, i8* %6, align 4, !dbg !14521
  tail call void @z_thread_essential_clear() #26, !dbg !14522
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !14523
  unreachable, !dbg !14523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14524 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14528, metadata !DIExpression()), !dbg !14529
  ret i32 -134, !dbg !14530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14531 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14535, metadata !DIExpression()), !dbg !14537
  call void @llvm.dbg.value(metadata i32 %1, metadata !14536, metadata !DIExpression()), !dbg !14537
  ret i32 -134, !dbg !14538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !14539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14546, metadata !DIExpression()), !dbg !14548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14547, metadata !DIExpression()), !dbg !14548
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14549
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14551
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14548
  ret i32 %6, !dbg !14552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !14553 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14557, metadata !DIExpression()), !dbg !14558
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14559
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14558
  ret i32 %3, !dbg !14561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14562 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14564
  ret void, !dbg !14565
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14566 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14568, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i8* %1, metadata !14569, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i8* %2, metadata !14570, metadata !DIExpression()), !dbg !14571
  br label %4, !dbg !14572

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14573, !srcloc !14580
  call void @llvm.dbg.value(metadata i32 undef, metadata !14576, metadata !DIExpression()) #25, !dbg !14581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14577, metadata !DIExpression()) #25, !dbg !14581
  tail call fastcc void @k_cpu_idle() #26, !dbg !14582
  br label %4, !dbg !14572, !llvm.loop !14583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14585 {
  tail call void @arch_cpu_idle() #27, !dbg !14586
  ret void, !dbg !14587
}

; Function Attrs: optsize
declare !dbg !14588 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14589 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14607, metadata !DIExpression()), !dbg !14611
  call void @llvm.dbg.value(metadata i8* %1, metadata !14608, metadata !DIExpression()), !dbg !14611
  call void @llvm.dbg.value(metadata i32 %2, metadata !14609, metadata !DIExpression()), !dbg !14611
  call void @llvm.dbg.value(metadata i32 %3, metadata !14610, metadata !DIExpression()), !dbg !14611
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14612
  store i32 %2, i32* %5, align 4, !dbg !14613
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14614
  store i32 %3, i32* %6, align 4, !dbg !14615
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14616
  store i8* %1, i8** %7, align 4, !dbg !14617
  %8 = mul i32 %3, %2, !dbg !14618
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14619
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14620
  store i8* %9, i8** %10, align 4, !dbg !14621
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14622
  store i8* %1, i8** %11, align 4, !dbg !14623
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14624
  store i8* %1, i8** %12, align 4, !dbg !14625
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14626
  store i32 0, i32* %13, align 4, !dbg !14627
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14628
  store i8 0, i8* %14, align 4, !dbg !14629
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14630
  tail call fastcc void @z_waitq_init.191(%struct._wait_q_t* noundef %15) #26, !dbg !14631
  ret void, !dbg !14632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.191(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14633 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14637, metadata !DIExpression()), !dbg !14638
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14639
  tail call fastcc void @sys_dlist_init.192(%struct._dnode* noundef %2) #26, !dbg !14640
  ret void, !dbg !14641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.192(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14642 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14647, metadata !DIExpression()), !dbg !14648
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14649
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14650
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14651
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14652
  ret void, !dbg !14653
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14654 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14658, metadata !DIExpression()), !dbg !14664
  call void @llvm.dbg.value(metadata i32 %1, metadata !14659, metadata !DIExpression()), !dbg !14664
  call void @llvm.dbg.value(metadata i32 %2, metadata !14660, metadata !DIExpression()), !dbg !14664
  %5 = bitcast i32* %4 to i8*, !dbg !14665
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14665
  call void @llvm.dbg.value(metadata i32* %4, metadata !14663, metadata !DIExpression(DW_OP_deref)), !dbg !14664
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !14666
  br i1 %6, label %13, label %7, !dbg !14668

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %8, metadata !14663, metadata !DIExpression()), !dbg !14664
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !14671
  call void @llvm.dbg.value(metadata i8* %9, metadata !14661, metadata !DIExpression()), !dbg !14664
  %10 = icmp eq i8* %9, null, !dbg !14672
  br i1 %10, label %13, label %11, !dbg !14674

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !14675
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14677
  store i8 1, i8* %12, align 4, !dbg !14678
  call void @llvm.dbg.value(metadata i32 0, metadata !14662, metadata !DIExpression()), !dbg !14664
  br label %13, !dbg !14679

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !14680
  call void @llvm.dbg.value(metadata i32 %14, metadata !14662, metadata !DIExpression()), !dbg !14664
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14681
  ret i32 %14, !dbg !14682
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !14683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14688, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata i32 %1, metadata !14689, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata i32* %2, metadata !14690, metadata !DIExpression()), !dbg !14691
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !14692
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !14692
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !14692
  store i32 %6, i32* %2, align 4, !dbg !14692
  ret i1 %5, !dbg !14693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !14694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14698, metadata !DIExpression()), !dbg !14699
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !14700
  ret i8* %2, !dbg !14701
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14702 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14706, metadata !DIExpression()), !dbg !14707
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14708
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !14708
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14708
  br i1 %4, label %5, label %15, !dbg !14710

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14711
  %7 = load i8, i8* %6, align 4, !dbg !14711
  %8 = and i8 %7, 1, !dbg !14713
  %9 = icmp eq i8 %8, 0, !dbg !14714
  br i1 %9, label %15, label %10, !dbg !14715

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14716
  %12 = load i8*, i8** %11, align 4, !dbg !14716
  tail call void @k_free(i8* noundef %12) #27, !dbg !14718
  %13 = load i8, i8* %6, align 4, !dbg !14719
  %14 = and i8 %13, -2, !dbg !14719
  store i8 %14, i8* %6, align 4, !dbg !14719
  br label %15, !dbg !14720

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !14707
  ret i32 %16, !dbg !14721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !14722 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14726, metadata !DIExpression()), !dbg !14727
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14728
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14729
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14730
  ret %struct.k_thread* %4, !dbg !14731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14732 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14736, metadata !DIExpression()), !dbg !14737
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14738
  br i1 %2, label %6, label %3, !dbg !14738

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14739
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14739
  br label %6, !dbg !14738

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14738
  ret %struct._dnode* %7, !dbg !14740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14741 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14745, metadata !DIExpression()), !dbg !14746
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14747
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14747
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14748
  ret i1 %4, !dbg !14749
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14750 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14760, metadata !DIExpression()), !dbg !14768
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14758, metadata !DIExpression()), !dbg !14768
  call void @llvm.dbg.value(metadata i8* %1, metadata !14759, metadata !DIExpression()), !dbg !14768
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #25, !dbg !14777
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14779, !srcloc !14785
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14779
  call void @llvm.dbg.value(metadata i32 %6, metadata !14782, metadata !DIExpression()) #25, !dbg !14786
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #25, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %6, metadata !14776, metadata !DIExpression()) #25, !dbg !14777
  call void @llvm.dbg.value(metadata i32 %6, metadata !14762, metadata !DIExpression()), !dbg !14768
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14787
  %8 = load i32, i32* %7, align 4, !dbg !14787
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14789
  %10 = load i32, i32* %9, align 4, !dbg !14789
  %11 = icmp ult i32 %8, %10, !dbg !14790
  br i1 %11, label %12, label %42, !dbg !14791

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14792
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !14794
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14761, metadata !DIExpression()), !dbg !14768
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !14795
  br i1 %15, label %24, label %16, !dbg !14797

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !14798
  %18 = load i8*, i8** %17, align 4, !dbg !14798
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14800
  %20 = load i32, i32* %19, align 4, !dbg !14800
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !14801
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14802, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 0, metadata !14807, metadata !DIExpression()), !dbg !14808
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !14810
  store i32 0, i32* %22, align 4, !dbg !14811
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !14812
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14813
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !14813
  br label %53, !dbg !14814

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14815
  %26 = load i8*, i8** %25, align 4, !dbg !14815
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14817
  %28 = load i32, i32* %27, align 4, !dbg !14817
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !14818
  %30 = load i32, i32* %27, align 4, !dbg !14819
  %31 = load i8*, i8** %25, align 4, !dbg !14820
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !14820
  store i8* %32, i8** %25, align 4, !dbg !14820
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14821
  %34 = load i8*, i8** %33, align 4, !dbg !14821
  %35 = icmp eq i8* %32, %34, !dbg !14823
  br i1 %35, label %36, label %39, !dbg !14824

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14825
  %38 = load i8*, i8** %37, align 4, !dbg !14825
  store i8* %38, i8** %25, align 4, !dbg !14827
  br label %39, !dbg !14828

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !14829
  %41 = add i32 %40, 1, !dbg !14829
  store i32 %41, i32* %7, align 4, !dbg !14829
  call void @llvm.dbg.value(metadata i32 0, metadata !14767, metadata !DIExpression()), !dbg !14768
  br label %51, !dbg !14830

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !14760, metadata !DIExpression()), !dbg !14768
  %44 = icmp eq i64 %43, 0, !dbg !14831
  br i1 %44, label %51, label %45, !dbg !14833

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14834
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !14836
  store i8* %1, i8** %47, align 4, !dbg !14837
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14838
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14839
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !14839
  call void @llvm.dbg.value(metadata i32 %50, metadata !14767, metadata !DIExpression()), !dbg !14768
  br label %53, !dbg !14840

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !14841
  call void @llvm.dbg.value(metadata i32 %52, metadata !14767, metadata !DIExpression()), !dbg !14768
  call void @llvm.dbg.value(metadata i32 %6, metadata !14842, metadata !DIExpression()) #25, !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14847, metadata !DIExpression()) #25, !dbg !14848
  call void @llvm.dbg.value(metadata i32 %6, metadata !14850, metadata !DIExpression()) #25, !dbg !14853
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14855, !srcloc !14856
  br label %53, !dbg !14857

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !14768
  ret i32 %54, !dbg !14858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !14859 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14869, metadata !DIExpression()), !dbg !14871
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14870, metadata !DIExpression()), !dbg !14871
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14872
  %4 = load i32, i32* %3, align 4, !dbg !14872
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14873
  store i32 %4, i32* %5, align 4, !dbg !14874
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14875
  %7 = load i32, i32* %6, align 4, !dbg !14875
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14876
  store i32 %7, i32* %8, align 4, !dbg !14877
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14878
  %10 = load i32, i32* %9, align 4, !dbg !14878
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14879
  store i32 %10, i32* %11, align 4, !dbg !14880
  ret void, !dbg !14881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14882 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14888, metadata !DIExpression()), !dbg !14892
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14886, metadata !DIExpression()), !dbg !14892
  call void @llvm.dbg.value(metadata i8* %1, metadata !14887, metadata !DIExpression()), !dbg !14892
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #25, !dbg !14894
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14896, !srcloc !14785
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14896
  call void @llvm.dbg.value(metadata i32 %6, metadata !14782, metadata !DIExpression()) #25, !dbg !14898
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #25, !dbg !14898
  call void @llvm.dbg.value(metadata i32 %6, metadata !14776, metadata !DIExpression()) #25, !dbg !14894
  call void @llvm.dbg.value(metadata i32 %6, metadata !14889, metadata !DIExpression()), !dbg !14892
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14899
  %8 = load i32, i32* %7, align 4, !dbg !14899
  %9 = icmp eq i32 %8, 0, !dbg !14901
  br i1 %9, label %51, label %10, !dbg !14902

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14903
  %12 = load i8*, i8** %11, align 4, !dbg !14903
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14905
  %14 = load i32, i32* %13, align 4, !dbg !14905
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !14906
  %16 = load i32, i32* %13, align 4, !dbg !14907
  %17 = load i8*, i8** %11, align 4, !dbg !14908
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !14908
  store i8* %18, i8** %11, align 4, !dbg !14908
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14909
  %20 = load i8*, i8** %19, align 4, !dbg !14909
  %21 = icmp eq i8* %18, %20, !dbg !14911
  br i1 %21, label %22, label %25, !dbg !14912

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14913
  %24 = load i8*, i8** %23, align 4, !dbg !14913
  store i8* %24, i8** %11, align 4, !dbg !14915
  br label %25, !dbg !14916

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !14917
  %27 = add i32 %26, -1, !dbg !14917
  store i32 %27, i32* %7, align 4, !dbg !14917
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14918
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !14919
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14890, metadata !DIExpression()), !dbg !14892
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !14920
  br i1 %30, label %60, label %31, !dbg !14922

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14923
  %33 = load i8*, i8** %32, align 4, !dbg !14923
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !14925
  %35 = load i8*, i8** %34, align 4, !dbg !14925
  %36 = load i32, i32* %13, align 4, !dbg !14926
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !14927
  %38 = load i32, i32* %13, align 4, !dbg !14928
  %39 = load i8*, i8** %32, align 4, !dbg !14929
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !14929
  store i8* %40, i8** %32, align 4, !dbg !14929
  %41 = load i8*, i8** %19, align 4, !dbg !14930
  %42 = icmp eq i8* %40, %41, !dbg !14932
  br i1 %42, label %43, label %46, !dbg !14933

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14934
  %45 = load i8*, i8** %44, align 4, !dbg !14934
  store i8* %45, i8** %32, align 4, !dbg !14936
  br label %46, !dbg !14937

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !14938
  %48 = add i32 %47, 1, !dbg !14938
  store i32 %48, i32* %7, align 4, !dbg !14938
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14802, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata i32 0, metadata !14807, metadata !DIExpression()), !dbg !14939
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !14941
  store i32 0, i32* %49, align 4, !dbg !14942
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !14943
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14944
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !14944
  br label %62, !dbg !14945

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !14888, metadata !DIExpression()), !dbg !14892
  %53 = icmp eq i64 %52, 0, !dbg !14946
  br i1 %53, label %60, label %54, !dbg !14948

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14949
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !14951
  store i8* %1, i8** %56, align 4, !dbg !14952
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14953
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14954
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !14954
  call void @llvm.dbg.value(metadata i32 %59, metadata !14891, metadata !DIExpression()), !dbg !14892
  br label %62, !dbg !14955

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !14956
  call void @llvm.dbg.value(metadata i32 %61, metadata !14891, metadata !DIExpression()), !dbg !14892
  call void @llvm.dbg.value(metadata i32 %6, metadata !14842, metadata !DIExpression()) #25, !dbg !14957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14847, metadata !DIExpression()) #25, !dbg !14957
  call void @llvm.dbg.value(metadata i32 %6, metadata !14850, metadata !DIExpression()) #25, !dbg !14959
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14961, !srcloc !14856
  br label %62, !dbg !14962

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !14892
  ret i32 %63, !dbg !14963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14964 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14968, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.value(metadata i8* %1, metadata !14969, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #25, !dbg !14973
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14975, !srcloc !14785
  call void @llvm.dbg.value(metadata i32 undef, metadata !14782, metadata !DIExpression()) #25, !dbg !14977
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #25, !dbg !14977
  call void @llvm.dbg.value(metadata i32 undef, metadata !14776, metadata !DIExpression()) #25, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()), !dbg !14972
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14978
  %5 = load i32, i32* %4, align 4, !dbg !14978
  %6 = icmp eq i32 %5, 0, !dbg !14980
  br i1 %6, label %13, label %7, !dbg !14981

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14982
  %9 = load i8*, i8** %8, align 4, !dbg !14982
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14984
  %11 = load i32, i32* %10, align 4, !dbg !14984
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !14985
  call void @llvm.dbg.value(metadata i32 0, metadata !14971, metadata !DIExpression()), !dbg !14972
  br label %13, !dbg !14986

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !14987
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14975
  call void @llvm.dbg.value(metadata i32 %15, metadata !14782, metadata !DIExpression()) #25, !dbg !14977
  call void @llvm.dbg.value(metadata i32 %15, metadata !14776, metadata !DIExpression()) #25, !dbg !14973
  call void @llvm.dbg.value(metadata i32 %15, metadata !14970, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.value(metadata i32 %14, metadata !14971, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14842, metadata !DIExpression()) #25, !dbg !14988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14847, metadata !DIExpression()) #25, !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #25, !dbg !14990
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !14992, !srcloc !14856
  ret i32 %14, !dbg !14993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14994 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14998, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #25, !dbg !15002
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15004, !srcloc !14785
  call void @llvm.dbg.value(metadata i32 undef, metadata !14782, metadata !DIExpression()) #25, !dbg !15006
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #25, !dbg !15006
  call void @llvm.dbg.value(metadata i32 undef, metadata !14776, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !14999, metadata !DIExpression()), !dbg !15001
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15007
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15000, metadata !DIExpression()), !dbg !15001
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15008
  br i1 %5, label %11, label %6, !dbg !15009

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14802, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata i32 -35, metadata !14807, metadata !DIExpression()), !dbg !15010
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15013
  store i32 -35, i32* %8, align 4, !dbg !15014
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15015
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15007
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15000, metadata !DIExpression()), !dbg !15001
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15008
  br i1 %10, label %11, label %6, !dbg !15009, !llvm.loop !15016

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15004
  call void @llvm.dbg.value(metadata i32 %12, metadata !14782, metadata !DIExpression()) #25, !dbg !15006
  call void @llvm.dbg.value(metadata i32 %12, metadata !14776, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata i32 %12, metadata !14999, metadata !DIExpression()), !dbg !15001
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15018
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15019
  store i32 0, i32* %14, align 4, !dbg !15020
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15021
  %16 = load i8*, i8** %15, align 4, !dbg !15021
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15022
  store i8* %16, i8** %17, align 4, !dbg !15023
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15024
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !15024
  ret void, !dbg !15025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #8 !dbg !15026 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15037, metadata !DIExpression()), !dbg !15038
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15039
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15040
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15041
  store i32 0, i32* %3, align 4, !dbg !15042
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15043
  tail call fastcc void @z_waitq_init.197(%struct._wait_q_t* noundef %4) #26, !dbg !15044
  ret i32 0, !dbg !15045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.197(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !15046 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15050, metadata !DIExpression()), !dbg !15051
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15052
  tail call fastcc void @sys_dlist_init.198(%struct._dnode* noundef %2) #26, !dbg !15053
  ret void, !dbg !15054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.198(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15055 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15060, metadata !DIExpression()), !dbg !15061
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15062
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15063
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15064
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15065
  ret void, !dbg !15066
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15067 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15076, metadata !DIExpression()), !dbg !15088
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15075, metadata !DIExpression()), !dbg !15088
  call void @llvm.dbg.value(metadata i8 0, metadata !15083, metadata !DIExpression()), !dbg !15088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15089, metadata !DIExpression()) #25, !dbg !15096
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15098, !srcloc !15104
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15098
  call void @llvm.dbg.value(metadata i32 %5, metadata !15101, metadata !DIExpression()) #25, !dbg !15105
  call void @llvm.dbg.value(metadata i32 undef, metadata !15102, metadata !DIExpression()) #25, !dbg !15105
  call void @llvm.dbg.value(metadata i32 %5, metadata !15095, metadata !DIExpression()) #25, !dbg !15096
  call void @llvm.dbg.value(metadata i32 %5, metadata !15078, metadata !DIExpression()), !dbg !15088
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15106
  %7 = load i32, i32* %6, align 4, !dbg !15106
  %8 = icmp eq i32 %7, 0, !dbg !15106
  br i1 %8, label %14, label %9, !dbg !15106

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15106
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15106
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15106
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15106
  br i1 %13, label %20, label %29, !dbg !15108, !prof !15109

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15110
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !15112
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !15112
  %18 = load i8, i8* %17, align 2, !dbg !15112
  %19 = sext i8 %18 to i32, !dbg !15110
  br label %23, !dbg !15113

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15114
  %22 = load i32, i32* %21, align 4, !dbg !15114
  br label %23, !dbg !15113

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !15115
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !15113
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15116
  store i32 %25, i32* %26, align 4, !dbg !15117
  %27 = add i32 %7, 1, !dbg !15118
  store i32 %27, i32* %6, align 4, !dbg !15118
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15119
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !15120
  call void @llvm.dbg.value(metadata i32 %5, metadata !15121, metadata !DIExpression()) #25, !dbg !15127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #25, !dbg !15127
  call void @llvm.dbg.value(metadata i32 %5, metadata !15129, metadata !DIExpression()) #25, !dbg !15132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15134, !srcloc !15135
  br label %78, !dbg !15136

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !15137
  br i1 %30, label %31, label %32, !dbg !15139, !prof !15140

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !15121, metadata !DIExpression()) #25, !dbg !15141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #25, !dbg !15141
  call void @llvm.dbg.value(metadata i32 %5, metadata !15129, metadata !DIExpression()) #25, !dbg !15144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15146, !srcloc !15135
  br label %78, !dbg !15147

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !15148
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !15148
  %35 = load i8, i8* %34, align 2, !dbg !15148
  %36 = sext i8 %35 to i32, !dbg !15149
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !15150
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !15150
  %39 = load i8, i8* %38, align 2, !dbg !15150
  %40 = sext i8 %39 to i32, !dbg !15151
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #26, !dbg !15152
  call void @llvm.dbg.value(metadata i32 %41, metadata !15077, metadata !DIExpression()), !dbg !15088
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #26, !dbg !15153
  br i1 %42, label %43, label %45, !dbg !15155

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #26, !dbg !15156
  call void @llvm.dbg.value(metadata i1 %44, metadata !15083, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15088
  br label %45, !dbg !15158

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15083, metadata !DIExpression()), !dbg !15088
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15159
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15160
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #27, !dbg !15160
  call void @llvm.dbg.value(metadata i32 %49, metadata !15084, metadata !DIExpression()), !dbg !15088
  %50 = icmp eq i32 %49, 0, !dbg !15161
  br i1 %50, label %78, label %51, !dbg !15163

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15089, metadata !DIExpression()) #25, !dbg !15164
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15166, !srcloc !15104
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !15166
  call void @llvm.dbg.value(metadata i32 %53, metadata !15101, metadata !DIExpression()) #25, !dbg !15168
  call void @llvm.dbg.value(metadata i32 undef, metadata !15102, metadata !DIExpression()) #25, !dbg !15168
  call void @llvm.dbg.value(metadata i32 %53, metadata !15095, metadata !DIExpression()) #25, !dbg !15164
  call void @llvm.dbg.value(metadata i32 %53, metadata !15078, metadata !DIExpression()), !dbg !15088
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15169
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !15169
  br i1 %55, label %74, label %56, !dbg !15170, !prof !15140

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.201(%struct._wait_q_t* noundef nonnull %47) #26, !dbg !15171
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !15085, metadata !DIExpression()), !dbg !15172
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !15173
  br i1 %58, label %67, label %59, !dbg !15174

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !15175
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !15175
  %62 = load i8, i8* %61, align 2, !dbg !15175
  %63 = sext i8 %62 to i32, !dbg !15176
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15177
  %65 = load i32, i32* %64, align 4, !dbg !15177
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #26, !dbg !15178
  br label %70, !dbg !15174

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15179
  %69 = load i32, i32* %68, align 4, !dbg !15179
  br label %70, !dbg !15174

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !15174
  call void @llvm.dbg.value(metadata i32 %71, metadata !15077, metadata !DIExpression()), !dbg !15088
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #26, !dbg !15180
  %73 = select i1 %72, i1 true, i1 %46, !dbg !15181
  call void @llvm.dbg.value(metadata i1 %73, metadata !15083, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15088
  call void @llvm.dbg.value(metadata i8 poison, metadata !15083, metadata !DIExpression()), !dbg !15088
  br i1 %73, label %75, label %77, !dbg !15182

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !15083, metadata !DIExpression()), !dbg !15088
  br i1 %46, label %75, label %77, !dbg !15182

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !15183
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #27, !dbg !15183
  br label %78, !dbg !15186

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !15121, metadata !DIExpression()) #25, !dbg !15187
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #25, !dbg !15187
  call void @llvm.dbg.value(metadata i32 %53, metadata !15129, metadata !DIExpression()) #25, !dbg !15190
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #25, !dbg !15192, !srcloc !15135
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !15088
  ret i32 %79, !dbg !15193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15198, metadata !DIExpression()), !dbg !15201
  call void @llvm.dbg.value(metadata i32 %1, metadata !15199, metadata !DIExpression()), !dbg !15201
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #26, !dbg !15202
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15202
  call void @llvm.dbg.value(metadata i32 %4, metadata !15200, metadata !DIExpression()), !dbg !15201
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #26, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %5, metadata !15200, metadata !DIExpression()), !dbg !15201
  ret i32 %5, !dbg !15204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15209, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata i32 %1, metadata !15210, metadata !DIExpression()), !dbg !15211
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15212
  ret i1 %3, !dbg !15213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15214 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15218, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.value(metadata i32 %1, metadata !15219, metadata !DIExpression()), !dbg !15220
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15221
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15221
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15223
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15223
  %7 = load i8, i8* %6, align 2, !dbg !15223
  %8 = sext i8 %7 to i32, !dbg !15224
  %9 = icmp eq i32 %8, %1, !dbg !15225
  br i1 %9, label %12, label %10, !dbg !15226

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #27, !dbg !15227
  br label %12, !dbg !15229

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15220
  ret i1 %13, !dbg !15230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.201(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !15231 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15235, metadata !DIExpression()), !dbg !15236
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15237
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.202(%struct._dnode* noundef %2) #26, !dbg !15238
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15239
  ret %struct.k_thread* %4, !dbg !15240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.202(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15241 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15245, metadata !DIExpression()), !dbg !15246
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.203(%struct._dnode* noundef %0) #26, !dbg !15247
  br i1 %2, label %6, label %3, !dbg !15247

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15248
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15248
  br label %6, !dbg !15247

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15247
  ret %struct._dnode* %7, !dbg !15249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.203(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15250 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15254, metadata !DIExpression()), !dbg !15255
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15256
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15256
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15257
  ret i1 %4, !dbg !15258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15261, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.value(metadata i32 %1, metadata !15262, metadata !DIExpression()), !dbg !15263
  %3 = icmp slt i32 %0, %1, !dbg !15264
  ret i1 %3, !dbg !15265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15268, metadata !DIExpression()), !dbg !15269
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #26, !dbg !15270
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15270
  ret i32 %3, !dbg !15271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15276, metadata !DIExpression()), !dbg !15277
  %2 = icmp sgt i32 %0, -128, !dbg !15278
  ret i1 %2, !dbg !15279
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15280 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15282, metadata !DIExpression()), !dbg !15286
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15287
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !15287
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15287
  br i1 %4, label %31, label %5, !dbg !15289

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15290
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !15290
  br i1 %7, label %8, label %31, !dbg !15292

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15293
  %10 = load i32, i32* %9, align 4, !dbg !15293
  %11 = icmp ugt i32 %10, 1, !dbg !15295
  br i1 %11, label %12, label %14, !dbg !15296

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !15297
  store i32 %13, i32* %9, align 4, !dbg !15297
  br label %31, !dbg !15299

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15089, metadata !DIExpression()) #25, !dbg !15300
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15302, !srcloc !15104
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15302
  call void @llvm.dbg.value(metadata i32 %16, metadata !15101, metadata !DIExpression()) #25, !dbg !15304
  call void @llvm.dbg.value(metadata i32 undef, metadata !15102, metadata !DIExpression()) #25, !dbg !15304
  call void @llvm.dbg.value(metadata i32 %16, metadata !15095, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 %16, metadata !15284, metadata !DIExpression()), !dbg !15286
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15305
  %18 = load i32, i32* %17, align 4, !dbg !15305
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #26, !dbg !15306
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15307
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #27, !dbg !15308
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15283, metadata !DIExpression()), !dbg !15286
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !15309
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !15310
  br i1 %22, label %30, label %23, !dbg !15312

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !15313
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !15313
  %26 = load i8, i8* %25, align 2, !dbg !15313
  %27 = sext i8 %26 to i32, !dbg !15315
  store i32 %27, i32* %17, align 4, !dbg !15316
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15317, metadata !DIExpression()), !dbg !15323
  call void @llvm.dbg.value(metadata i32 0, metadata !15322, metadata !DIExpression()), !dbg !15323
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !15325
  store i32 0, i32* %28, align 4, !dbg !15326
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #27, !dbg !15327
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15328
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #27, !dbg !15328
  br label %31, !dbg !15329

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %16, metadata !15121, metadata !DIExpression()) #25, !dbg !15332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #25, !dbg !15332
  call void @llvm.dbg.value(metadata i32 %16, metadata !15129, metadata !DIExpression()) #25, !dbg !15334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !15336, !srcloc !15135
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !15286
  ret i32 %32, !dbg !15337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !15338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15342, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15343, metadata !DIExpression()), !dbg !15346
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15347
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15347
  %5 = load i8, i8* %4, align 2, !dbg !15347
  call void @llvm.dbg.value(metadata i8 %5, metadata !15344, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15346
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15348
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15348
  %8 = load i8, i8* %7, align 2, !dbg !15348
  call void @llvm.dbg.value(metadata i8 %8, metadata !15345, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15346
  %9 = icmp eq i8 %8, %5, !dbg !15349
  %10 = sext i8 %5 to i32, !dbg !15351
  %11 = sext i8 %8 to i32, !dbg !15351
  %12 = sub nsw i32 %11, %10, !dbg !15351
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15351
  ret i32 %13, !dbg !15352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15357, metadata !DIExpression()), !dbg !15358
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15359
  %3 = icmp eq i32 %2, 0, !dbg !15361
  br i1 %3, label %8, label %4, !dbg !15362

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15363
  %6 = add i32 %5, %2, !dbg !15365
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15366
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15367
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15368
  br label %8, !dbg !15369

8:                                                ; preds = %4, %1
  ret void, !dbg !15370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !15371 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15375, metadata !DIExpression()), !dbg !15377
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15378
  call void @llvm.dbg.value(metadata i32 %1, metadata !15376, metadata !DIExpression()), !dbg !15377
  ret i32 %1, !dbg !15379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15384, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 %1, metadata !15385, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 0, metadata !15386, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !15402
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15404, !srcloc !15410
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15404
  call void @llvm.dbg.value(metadata i32 %4, metadata !15407, metadata !DIExpression()) #25, !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !15411
  call void @llvm.dbg.value(metadata i32 %4, metadata !15401, metadata !DIExpression()) #25, !dbg !15402
  call void @llvm.dbg.value(metadata i32 %4, metadata !15392, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15386, metadata !DIExpression()), !dbg !15394
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15412
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15415
  %6 = icmp sgt i32 %0, 0, !dbg !15416
  %7 = icmp sgt i32 %5, 2, !dbg !15418
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15418
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15418
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15419
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15420
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15421
  call void @llvm.dbg.value(metadata i32 %4, metadata !15422, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %4, metadata !15430, metadata !DIExpression()) #25, !dbg !15433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15435, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !15386, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15386, metadata !DIExpression()), !dbg !15394
  ret void, !dbg !15437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15440, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.value(metadata i32 %0, metadata !15442, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15457
  call void @llvm.dbg.value(metadata i32 1000, metadata !15445, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i32 10000, metadata !15446, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i8 1, metadata !15447, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i1 true, metadata !15448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15457
  call void @llvm.dbg.value(metadata i1 true, metadata !15449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15457
  call void @llvm.dbg.value(metadata i8 0, metadata !15450, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i1 true, metadata !15451, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15457
  call void @llvm.dbg.value(metadata i1 false, metadata !15452, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15457
  call void @llvm.dbg.value(metadata i64 0, metadata !15453, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i64 0, metadata !15453, metadata !DIExpression()), !dbg !15457
  %2 = mul i32 %0, 10, !dbg !15459
  ret i32 %2, !dbg !15465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15468, metadata !DIExpression()), !dbg !15470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !15471
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15473, !srcloc !15410
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !15475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !15475
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()) #25, !dbg !15471
  call void @llvm.dbg.value(metadata i32 %3, metadata !15469, metadata !DIExpression()), !dbg !15470
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15476
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15478
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15479
  br i1 %6, label %7, label %8, !dbg !15480

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !15483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !15485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15487, !srcloc !15436
  br label %24, !dbg !15488

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15489
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15490
  %10 = icmp eq i32 %9, 0, !dbg !15490
  br i1 %10, label %21, label %11, !dbg !15492

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15493
  br i1 %12, label %13, label %21, !dbg !15494

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15495
  %15 = icmp sgt i32 %14, %0, !dbg !15498
  br i1 %15, label %19, label %16, !dbg !15499

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15500
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15500
  call void @llvm.dbg.value(metadata i32 %18, metadata !15469, metadata !DIExpression()), !dbg !15470
  br label %22, !dbg !15502

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15503
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15503
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15505
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15470
  call void @llvm.dbg.value(metadata i32 %23, metadata !15469, metadata !DIExpression()), !dbg !15470
  call void @llvm.dbg.value(metadata i32 %23, metadata !15422, metadata !DIExpression()) #25, !dbg !15507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !15507
  call void @llvm.dbg.value(metadata i32 %23, metadata !15430, metadata !DIExpression()) #25, !dbg !15509
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15511, !srcloc !15436
  br label %24, !dbg !15512

24:                                               ; preds = %22, %7
  ret void, !dbg !15512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !15513 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15517, metadata !DIExpression()), !dbg !15519
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15520
  %3 = icmp eq i32 %2, 0, !dbg !15520
  br i1 %3, label %16, label %4, !dbg !15521

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15522
  br i1 %5, label %16, label %6, !dbg !15523

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15524
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15524
  %9 = load i8, i8* %8, align 2, !dbg !15524
  %10 = sext i8 %9 to i32, !dbg !15525
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15526
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.209(i32 noundef %10, i32 noundef %11) #26, !dbg !15527
  br i1 %12, label %16, label %13, !dbg !15528

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15529
  %15 = xor i1 %14, true, !dbg !15530
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15519
  call void @llvm.dbg.value(metadata i1 %17, metadata !15518, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15519
  ret i1 %17, !dbg !15531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15532 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15536, metadata !DIExpression()), !dbg !15538
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15539
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15537, metadata !DIExpression()), !dbg !15538
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15540
  br i1 %3, label %5, label %4, !dbg !15542

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15543
  br label %5, !dbg !15545

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15536, metadata !DIExpression()), !dbg !15538
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15546
  ret i32 %6, !dbg !15547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15550, metadata !DIExpression()), !dbg !15552
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15553
  %3 = load i8, i8* %2, align 1, !dbg !15553
  call void @llvm.dbg.value(metadata i8 %3, metadata !15551, metadata !DIExpression()), !dbg !15552
  %4 = and i8 %3, 31, !dbg !15554
  %5 = icmp ne i8 %4, 0, !dbg !15555
  ret i1 %5, !dbg !15556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15559, metadata !DIExpression()), !dbg !15560
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15561
  br i1 %2, label %3, label %7, !dbg !15563

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()) #25, !dbg !15567
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15570
  %5 = load i8, i8* %4, align 1, !dbg !15571
  %6 = and i8 %5, 127, !dbg !15571
  store i8 %6, i8* %4, align 1, !dbg !15571
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15572, metadata !DIExpression()) #25, !dbg !15575
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15579
  br label %7, !dbg !15580

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15581, metadata !DIExpression()) #25, !dbg !15584
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15586
  %9 = load i8, i8* %8, align 1, !dbg !15587
  %10 = or i8 %9, -128, !dbg !15587
  store i8 %10, i8* %8, align 1, !dbg !15587
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()) #25, !dbg !15591
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15595, metadata !DIExpression()) #25, !dbg !15603
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15601, metadata !DIExpression()) #25, !dbg !15603
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15605
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15602, metadata !DIExpression()) #25, !dbg !15603
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15607
  br i1 %12, label %23, label %13, !dbg !15605

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15602, metadata !DIExpression()) #25, !dbg !15603
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15609
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15602, metadata !DIExpression()) #25, !dbg !15603
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15610
  %17 = icmp sgt i32 %16, 0, !dbg !15613
  br i1 %17, label %18, label %20, !dbg !15614

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15615
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15617
  br label %25, !dbg !15618

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15607
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15602, metadata !DIExpression()) #25, !dbg !15603
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15607
  br i1 %22, label %23, label %13, !dbg !15605, !llvm.loop !15619

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15621
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15622
  br label %25, !dbg !15623

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15624
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15625
  %28 = zext i1 %27 to i32, !dbg !15625
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15626
  ret void, !dbg !15627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15630, metadata !DIExpression()), !dbg !15631
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15632
  ret i1 %2, !dbg !15633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #9 !dbg !15634 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15636, metadata !DIExpression()), !dbg !15638
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15637, metadata !DIExpression()), !dbg !15638
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15639
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15640
  ret void, !dbg !15641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15642 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15646, metadata !DIExpression()), !dbg !15647
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.207(%struct._dnode* noundef %0) #26, !dbg !15648
  br i1 %2, label %6, label %3, !dbg !15648

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15649
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15649
  br label %6, !dbg !15648

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15648
  ret %struct._dnode* %7, !dbg !15650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15651 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15655, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15656, metadata !DIExpression()), !dbg !15659
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15660
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15660
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15657, metadata !DIExpression()), !dbg !15659
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15661
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15662
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15663
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15664
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15665
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15666
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15667
  ret void, !dbg !15668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15669 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15673, metadata !DIExpression()), !dbg !15675
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15674, metadata !DIExpression()), !dbg !15675
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15676
  br i1 %3, label %6, label %4, !dbg !15677

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15678
  br label %6, !dbg !15677

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15677
  ret %struct._dnode* %7, !dbg !15679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15680 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15684, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15685, metadata !DIExpression()), !dbg !15687
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15688
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15688
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15686, metadata !DIExpression()), !dbg !15687
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15689
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15690
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15691
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15692
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15693
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15694
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15695
  ret void, !dbg !15696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15699, metadata !DIExpression()), !dbg !15701
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15702
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15709, metadata !DIExpression()) #25, !dbg !15711
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15712
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15713
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15713
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15700, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15714, metadata !DIExpression()) #25, !dbg !15720
  call void @llvm.dbg.value(metadata i32 %0, metadata !15719, metadata !DIExpression()) #25, !dbg !15720
  %6 = icmp eq i32 %0, 0, !dbg !15723
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15725
  br i1 %6, label %8, label %15, !dbg !15726

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !15727
  br i1 %9, label %15, label %10, !dbg !15729

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !15730
  br i1 %11, label %15, label %12, !dbg !15732

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !15733
  %14 = icmp eq i32 %13, 0, !dbg !15733
  br i1 %14, label %18, label %15, !dbg !15735

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15736
  br i1 %16, label %18, label %17, !dbg !15739

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15740
  br label %18, !dbg !15742

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15725
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15725
  ret void, !dbg !15743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !15744 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15748, metadata !DIExpression()), !dbg !15751
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15749, metadata !DIExpression()), !dbg !15751
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef %0) #26, !dbg !15752
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15750, metadata !DIExpression()), !dbg !15751
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15749, metadata !DIExpression()), !dbg !15751
  ret %struct.k_thread* %3, !dbg !15753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15754 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15756, metadata !DIExpression()), !dbg !15757
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15758
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15759
  %4 = xor i1 %3, true, !dbg !15760
  ret i1 %4, !dbg !15761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15762 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15764, metadata !DIExpression()), !dbg !15765
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15766
  %3 = load i16, i16* %2, align 2, !dbg !15766
  %4 = icmp ult i16 %3, 128, !dbg !15767
  %5 = zext i1 %4 to i32, !dbg !15767
  ret i32 %5, !dbg !15768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15769 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15775, metadata !DIExpression()), !dbg !15776
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15777
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15778
  %4 = xor i1 %3, true, !dbg !15779
  ret i1 %4, !dbg !15780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15781 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15787, metadata !DIExpression()), !dbg !15788
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15789
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15789
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15790
  ret i1 %4, !dbg !15791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15792 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15794, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15795, metadata !DIExpression()), !dbg !15796
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15797
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15797
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15798
  br i1 %5, label %9, label %6, !dbg !15799

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15800
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15800
  br label %9, !dbg !15799

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15799
  ret %struct._dnode* %10, !dbg !15801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.207(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15802 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15806, metadata !DIExpression()), !dbg !15807
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15808
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15808
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15809
  ret i1 %4, !dbg !15810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15811 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15815, metadata !DIExpression()), !dbg !15818
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15819
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15819
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15816, metadata !DIExpression()), !dbg !15818
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15820
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15820
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15817, metadata !DIExpression()), !dbg !15818
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15821
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15822
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15823
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15824
  tail call fastcc void @sys_dnode_init.208(%struct._dnode* noundef %0) #26, !dbg !15825
  ret void, !dbg !15826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.208(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15827 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15829, metadata !DIExpression()), !dbg !15830
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15831
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15832
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15833
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15834
  ret void, !dbg !15835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15840, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.value(metadata i32 128, metadata !15841, metadata !DIExpression()), !dbg !15842
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15843
  %3 = load i8, i8* %2, align 1, !dbg !15843
  %4 = icmp slt i8 %3, 0, !dbg !15844
  ret i1 %4, !dbg !15845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.209(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15848, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata i32 %1, metadata !15849, metadata !DIExpression()), !dbg !15850
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.210(i32 noundef %0, i32 noundef %1) #26, !dbg !15851
  ret i1 %3, !dbg !15852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !15853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15855, metadata !DIExpression()), !dbg !15856
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15857
  ret i1 %2, !dbg !15858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.210(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15861, metadata !DIExpression()), !dbg !15863
  call void @llvm.dbg.value(metadata i32 %1, metadata !15862, metadata !DIExpression()), !dbg !15863
  %3 = icmp slt i32 %0, %1, !dbg !15864
  ret i1 %3, !dbg !15865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15866 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15868, metadata !DIExpression()), !dbg !15872
  call void @llvm.dbg.value(metadata i32 0, metadata !15869, metadata !DIExpression()), !dbg !15873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !15874
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15876, !srcloc !15410
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15876
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !15878
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()) #25, !dbg !15874
  call void @llvm.dbg.value(metadata i32 %3, metadata !15871, metadata !DIExpression()), !dbg !15873
  call void @llvm.dbg.value(metadata i32 undef, metadata !15869, metadata !DIExpression()), !dbg !15873
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15879
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !15884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !15886
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15888, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !15869, metadata !DIExpression()), !dbg !15873
  call void @llvm.dbg.value(metadata i32 undef, metadata !15869, metadata !DIExpression()), !dbg !15873
  ret void, !dbg !15889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15890 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15892, metadata !DIExpression()), !dbg !15893
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15894
  br i1 %2, label %24, label %3, !dbg !15896

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15897
  br i1 %4, label %5, label %24, !dbg !15898

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15581, metadata !DIExpression()) #25, !dbg !15899
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15902
  %7 = load i8, i8* %6, align 1, !dbg !15903
  %8 = or i8 %7, -128, !dbg !15903
  store i8 %8, i8* %6, align 1, !dbg !15903
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()) #25, !dbg !15904
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15595, metadata !DIExpression()) #25, !dbg !15906
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15601, metadata !DIExpression()) #25, !dbg !15906
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15908
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15602, metadata !DIExpression()) #25, !dbg !15906
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15909
  br i1 %10, label %21, label %11, !dbg !15908

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15602, metadata !DIExpression()) #25, !dbg !15906
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15910
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15602, metadata !DIExpression()) #25, !dbg !15906
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !15911
  %15 = icmp sgt i32 %14, 0, !dbg !15912
  br i1 %15, label %16, label %18, !dbg !15913

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15914
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !15915
  br label %23, !dbg !15916

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !15909
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15602, metadata !DIExpression()) #25, !dbg !15906
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15909
  br i1 %20, label %21, label %11, !dbg !15908, !llvm.loop !15917

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15919
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !15920
  br label %23, !dbg !15921

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15922
  br label %24, !dbg !15923

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15927, metadata !DIExpression()), !dbg !15928
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15929
  br i1 %2, label %6, label %3, !dbg !15930

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15931
  %5 = xor i1 %4, true, !dbg !15930
  br label %6, !dbg !15930

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15933 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i32 0, metadata !15936, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !15941
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15943, !srcloc !15410
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15943
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !15945
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()) #25, !dbg !15941
  call void @llvm.dbg.value(metadata i32 %3, metadata !15938, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata i32 undef, metadata !15936, metadata !DIExpression()), !dbg !15940
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15946
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !15949
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !15951
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15953, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !15936, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata i32 undef, metadata !15936, metadata !DIExpression()), !dbg !15940
  ret void, !dbg !15954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15957, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !15960
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15962, !srcloc !15410
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !15964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()) #25, !dbg !15960
  call void @llvm.dbg.value(metadata i32 %3, metadata !15958, metadata !DIExpression()), !dbg !15959
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15965
  br i1 %4, label %5, label %6, !dbg !15967

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !15968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !15968
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !15971
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15973, !srcloc !15436
  br label %8, !dbg !15974

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.215(%struct.k_thread* noundef %0) #26, !dbg !15975
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15976
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15977
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15977
  br label %8, !dbg !15978

8:                                                ; preds = %6, %5
  ret void, !dbg !15978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15981, metadata !DIExpression()), !dbg !15982
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15983
  %3 = load i8, i8* %2, align 1, !dbg !15983
  %4 = and i8 %3, 4, !dbg !15984
  %5 = icmp eq i8 %4, 0, !dbg !15985
  ret i1 %5, !dbg !15986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.215(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15989, metadata !DIExpression()), !dbg !15990
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15991
  %3 = load i8, i8* %2, align 1, !dbg !15992
  %4 = and i8 %3, -5, !dbg !15992
  store i8 %4, i8* %2, align 1, !dbg !15992
  ret void, !dbg !15993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15994 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15997, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15996, metadata !DIExpression()), !dbg !15998
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15999
  br i1 %4, label %5, label %9, !dbg !16001

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16002
  br i1 %6, label %7, label %9, !dbg !16003

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16004, metadata !DIExpression()) #25, !dbg !16010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16009, metadata !DIExpression()) #25, !dbg !16010
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16013
  br label %10, !dbg !16014

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !16015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16015
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !16018
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16020, !srcloc !15436
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16026, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i32 %0, metadata !16028, metadata !DIExpression()), !dbg !16033
  %2 = icmp eq i32 %0, 0, !dbg !16035
  br i1 %2, label %3, label %6, !dbg !16036

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16037, !srcloc !16044
  call void @llvm.dbg.value(metadata i32 %4, metadata !16040, metadata !DIExpression()) #25, !dbg !16045
  %5 = icmp eq i32 %4, 0, !dbg !16046
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16027
  ret i1 %7, !dbg !16047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !16048 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16050, metadata !DIExpression()), !dbg !16052
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16053
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16054
  ret i1 %3, !dbg !16055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16058, metadata !DIExpression()), !dbg !16060
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16061
  call void @llvm.dbg.value(metadata i32 %2, metadata !16059, metadata !DIExpression()), !dbg !16060
  ret i32 %2, !dbg !16062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16065, metadata !DIExpression()), !dbg !16069
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16070
  call void @llvm.dbg.value(metadata i32 0, metadata !16066, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16072
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16074, !srcloc !15410
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16074
  call void @llvm.dbg.value(metadata i32 %4, metadata !15407, metadata !DIExpression()) #25, !dbg !16076
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16076
  call void @llvm.dbg.value(metadata i32 %4, metadata !15401, metadata !DIExpression()) #25, !dbg !16072
  call void @llvm.dbg.value(metadata i32 %4, metadata !16068, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.value(metadata i32 undef, metadata !16066, metadata !DIExpression()), !dbg !16071
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16077
  br i1 %5, label %6, label %10, !dbg !16081

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()) #25, !dbg !16082
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16085
  %8 = load i8, i8* %7, align 1, !dbg !16086
  %9 = and i8 %8, 127, !dbg !16086
  store i8 %9, i8* %7, align 1, !dbg !16086
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15572, metadata !DIExpression()) #25, !dbg !16087
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16089
  br label %10, !dbg !16090

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16091
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16092
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16093
  %13 = zext i1 %12 to i32, !dbg !16093
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16094
  call void @llvm.dbg.value(metadata i32 %4, metadata !15422, metadata !DIExpression()) #25, !dbg !16095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16095
  call void @llvm.dbg.value(metadata i32 %4, metadata !15430, metadata !DIExpression()) #25, !dbg !16097
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16099, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !16066, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.value(metadata i32 undef, metadata !16066, metadata !DIExpression()), !dbg !16071
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16100
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16102
  br i1 %15, label %16, label %17, !dbg !16103

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16104
  br label %17, !dbg !16106

17:                                               ; preds = %16, %10
  ret void, !dbg !16107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16110, metadata !DIExpression()), !dbg !16111
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16112
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16113
  ret i32 %3, !dbg !16114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16115 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16117, metadata !DIExpression()), !dbg !16118
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16119
  %3 = load i8, i8* %2, align 1, !dbg !16120
  %4 = or i8 %3, 16, !dbg !16120
  store i8 %4, i8* %2, align 1, !dbg !16120
  ret void, !dbg !16121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16122 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16123, !srcloc !15410
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16123
  call void @llvm.dbg.value(metadata i32 %2, metadata !15407, metadata !DIExpression()) #25, !dbg !16125
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16125
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16126
  ret void, !dbg !16127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16130, metadata !DIExpression()), !dbg !16131
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16132
  br i1 %2, label %3, label %5, !dbg !16134

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16135
  br label %6, !dbg !16137

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15430, metadata !DIExpression()) #25, !dbg !16138
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16141, !srcloc !15436
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16145, metadata !DIExpression()), !dbg !16147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16148
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16150, !srcloc !15410
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16150
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !16152
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16152
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()) #25, !dbg !16148
  call void @llvm.dbg.value(metadata i32 %3, metadata !16146, metadata !DIExpression()), !dbg !16147
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16153
  br i1 %4, label %6, label %5, !dbg !16155

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !16156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16156
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !16159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16161, !srcloc !15436
  br label %8, !dbg !16162

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16163
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16164
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16165
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16165
  br label %8, !dbg !16166

8:                                                ; preds = %6, %5
  ret void, !dbg !16166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16167 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16169, metadata !DIExpression()), !dbg !16170
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16171
  %3 = load i8, i8* %2, align 1, !dbg !16171
  %4 = and i8 %3, 16, !dbg !16172
  %5 = icmp ne i8 %4, 0, !dbg !16173
  ret i1 %5, !dbg !16174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16177, metadata !DIExpression()), !dbg !16178
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16179
  %3 = load i8, i8* %2, align 1, !dbg !16180
  %4 = and i8 %3, -17, !dbg !16180
  store i8 %4, i8* %2, align 1, !dbg !16180
  ret void, !dbg !16181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16182 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16192, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16190, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16191, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata i32 0, metadata !16193, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16198
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16200, !srcloc !15410
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16200
  call void @llvm.dbg.value(metadata i32 %5, metadata !15407, metadata !DIExpression()) #25, !dbg !16202
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16202
  call void @llvm.dbg.value(metadata i32 %5, metadata !15401, metadata !DIExpression()) #25, !dbg !16198
  call void @llvm.dbg.value(metadata i32 %5, metadata !16195, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata i32 undef, metadata !16193, metadata !DIExpression()), !dbg !16197
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16203
  call void @llvm.dbg.value(metadata i32 %5, metadata !15422, metadata !DIExpression()) #25, !dbg !16206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16206
  call void @llvm.dbg.value(metadata i32 %5, metadata !15430, metadata !DIExpression()) #25, !dbg !16208
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16210, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !16193, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata i32 undef, metadata !16193, metadata !DIExpression()), !dbg !16197
  ret void, !dbg !16211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16212 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16216, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16214, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16215, metadata !DIExpression()), !dbg !16217
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !16218
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16219
  ret void, !dbg !16220
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16225, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16226, metadata !DIExpression()), !dbg !16227
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16228
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16229
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16230
  br i1 %3, label %21, label %4, !dbg !16232

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16233
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16235
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16236
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15595, metadata !DIExpression()) #25, !dbg !16237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15601, metadata !DIExpression()) #25, !dbg !16237
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef nonnull %6) #27, !dbg !16239
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15602, metadata !DIExpression()) #25, !dbg !16237
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16240
  br i1 %8, label %19, label %9, !dbg !16239

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15602, metadata !DIExpression()) #25, !dbg !16237
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16241
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15602, metadata !DIExpression()) #25, !dbg !16237
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16242
  %13 = icmp sgt i32 %12, 0, !dbg !16243
  br i1 %13, label %14, label %16, !dbg !16244

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16245
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16246
  br label %21, !dbg !16247

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16240
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15602, metadata !DIExpression()) #25, !dbg !16237
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16240
  br i1 %18, label %19, label %9, !dbg !16239, !llvm.loop !16248

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16250
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16251
  br label %21, !dbg !16252

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16254 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16259, metadata !DIExpression()), !dbg !16260
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16258, metadata !DIExpression()), !dbg !16260
  %4 = icmp eq i64 %3, -1, !dbg !16261
  br i1 %4, label %6, label %5, !dbg !16263

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16264
  br label %6, !dbg !16266

6:                                                ; preds = %5, %2
  ret void, !dbg !16267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16268 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16271, metadata !DIExpression()), !dbg !16272
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16270, metadata !DIExpression()), !dbg !16272
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16273
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16274
  ret void, !dbg !16275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16276 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16278, metadata !DIExpression()), !dbg !16286
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16287
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16287
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16279, metadata !DIExpression()), !dbg !16286
  call void @llvm.dbg.value(metadata i32 0, metadata !16280, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16289
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16291, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()) #25, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15401, metadata !DIExpression()) #25, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !16282, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16280, metadata !DIExpression()), !dbg !16288
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16294
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16295
  %7 = load i8, i8* %6, align 1, !dbg !16295
  %8 = and i8 %7, 40, !dbg !16296
  %9 = icmp eq i8 %8, 0, !dbg !16296
  call void @llvm.dbg.value(metadata i1 %9, metadata !16283, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16297
  br i1 %9, label %10, label %17, !dbg !16298

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16299
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16299
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16299
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16303
  br i1 %14, label %16, label %15, !dbg !16304

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16305
  br label %16, !dbg !16307

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.215(%struct.k_thread* noundef nonnull %3) #26, !dbg !16308
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16309
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16310
  br label %17, !dbg !16311

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16291
  call void @llvm.dbg.value(metadata i32 %18, metadata !15407, metadata !DIExpression()) #25, !dbg !16293
  call void @llvm.dbg.value(metadata i32 %18, metadata !15401, metadata !DIExpression()) #25, !dbg !16289
  call void @llvm.dbg.value(metadata i32 %18, metadata !16282, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()) #25, !dbg !16312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16312
  call void @llvm.dbg.value(metadata i32 undef, metadata !15430, metadata !DIExpression()) #25, !dbg !16314
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16316, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !16280, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16280, metadata !DIExpression()), !dbg !16288
  ret void, !dbg !16317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16320, metadata !DIExpression()), !dbg !16321
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16322
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16323
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16324
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !16325
  ret void, !dbg !16326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16329, metadata !DIExpression()), !dbg !16330
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16331
  %3 = load i8, i8* %2, align 1, !dbg !16332
  %4 = and i8 %3, -3, !dbg !16332
  store i8 %4, i8* %2, align 1, !dbg !16332
  ret void, !dbg !16333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16336, metadata !DIExpression()), !dbg !16337
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16338
  br i1 %2, label %3, label %7, !dbg !16340

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()) #25, !dbg !16341
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16344
  %5 = load i8, i8* %4, align 1, !dbg !16345
  %6 = and i8 %5, 127, !dbg !16345
  store i8 %6, i8* %4, align 1, !dbg !16345
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15572, metadata !DIExpression()) #25, !dbg !16346
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16348
  br label %7, !dbg !16349

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16350
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16351
  %10 = zext i1 %9 to i32, !dbg !16351
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16352
  ret void, !dbg !16353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16354 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16356, metadata !DIExpression()), !dbg !16357
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16358
  %3 = load i8, i8* %2, align 1, !dbg !16359
  %4 = or i8 %3, 2, !dbg !16359
  store i8 %4, i8* %2, align 1, !dbg !16359
  ret void, !dbg !16360
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16363, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i32 0, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16369
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16371, !srcloc !15410
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16371
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !16373
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16373
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()) #25, !dbg !16369
  call void @llvm.dbg.value(metadata i32 %3, metadata !16366, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16364, metadata !DIExpression()), !dbg !16368
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16374
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !16377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16377
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !16379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16381, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16364, metadata !DIExpression()), !dbg !16368
  ret void, !dbg !16382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16383 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16389, metadata !DIExpression()), !dbg !16394
  call void @llvm.dbg.value(metadata i32 %0, metadata !16387, metadata !DIExpression()), !dbg !16394
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16388, metadata !DIExpression()), !dbg !16394
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16395
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16396
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16397
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16398
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16399
  call void @llvm.dbg.value(metadata i32 %6, metadata !16390, metadata !DIExpression()), !dbg !16394
  call void @llvm.dbg.value(metadata i32 0, metadata !16391, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16401
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16403, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()) #25, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !15401, metadata !DIExpression()) #25, !dbg !16401
  call void @llvm.dbg.value(metadata i32 undef, metadata !16393, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16391, metadata !DIExpression()), !dbg !16400
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16406
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16410
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16411
  br i1 %10, label %11, label %12, !dbg !16412

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16413
  br label %12, !dbg !16415

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16403
  call void @llvm.dbg.value(metadata i32 %13, metadata !15407, metadata !DIExpression()) #25, !dbg !16405
  call void @llvm.dbg.value(metadata i32 %13, metadata !15401, metadata !DIExpression()) #25, !dbg !16401
  call void @llvm.dbg.value(metadata i32 %13, metadata !16393, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()) #25, !dbg !16416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !15430, metadata !DIExpression()) #25, !dbg !16418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16420, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !16391, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16391, metadata !DIExpression()), !dbg !16400
  ret i32 %6, !dbg !16421
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16422 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16427, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i64 undef, metadata !16429, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16426, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16428, metadata !DIExpression()), !dbg !16430
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16431
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16433
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16435, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()) #25, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15401, metadata !DIExpression()) #25, !dbg !16433
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16438
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16439
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16004, metadata !DIExpression()) #25, !dbg !16440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16009, metadata !DIExpression()) #25, !dbg !16440
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16442
  ret i32 %9, !dbg !16443
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16444 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16448, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16449, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i32 0, metadata !16450, metadata !DIExpression()), !dbg !16454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16455
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16457, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()) #25, !dbg !16459
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16459
  call void @llvm.dbg.value(metadata i32 undef, metadata !15401, metadata !DIExpression()) #25, !dbg !16455
  call void @llvm.dbg.value(metadata i32 undef, metadata !16452, metadata !DIExpression()), !dbg !16454
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16449, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i32 undef, metadata !16450, metadata !DIExpression()), !dbg !16454
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16460
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16449, metadata !DIExpression()), !dbg !16453
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16463
  br i1 %5, label %7, label %6, !dbg !16465

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16466
  br label %7, !dbg !16468

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16457
  call void @llvm.dbg.value(metadata i32 %8, metadata !15407, metadata !DIExpression()) #25, !dbg !16459
  call void @llvm.dbg.value(metadata i32 %8, metadata !15401, metadata !DIExpression()) #25, !dbg !16455
  call void @llvm.dbg.value(metadata i32 %8, metadata !16452, metadata !DIExpression()), !dbg !16454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()) #25, !dbg !16469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16469
  call void @llvm.dbg.value(metadata i32 undef, metadata !15430, metadata !DIExpression()) #25, !dbg !16471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16473, !srcloc !15436
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16449, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i32 undef, metadata !16450, metadata !DIExpression()), !dbg !16454
  ret %struct.k_thread* %4, !dbg !16474
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16475 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16477, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16478, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata i32 0, metadata !16479, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16484
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16486, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()) #25, !dbg !16488
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16488
  call void @llvm.dbg.value(metadata i32 undef, metadata !15401, metadata !DIExpression()) #25, !dbg !16484
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16478, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata i32 undef, metadata !16479, metadata !DIExpression()), !dbg !16483
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16478, metadata !DIExpression()), !dbg !16482
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16492
  br i1 %5, label %8, label %6, !dbg !16494

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16495
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16497
  br label %8, !dbg !16498

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16486
  call void @llvm.dbg.value(metadata i32 %9, metadata !15407, metadata !DIExpression()) #25, !dbg !16488
  call void @llvm.dbg.value(metadata i32 %9, metadata !15401, metadata !DIExpression()) #25, !dbg !16484
  call void @llvm.dbg.value(metadata i32 %9, metadata !16481, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()) #25, !dbg !16499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15430, metadata !DIExpression()) #25, !dbg !16501
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16503, !srcloc !15436
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16478, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata i32 undef, metadata !16479, metadata !DIExpression()), !dbg !16483
  ret %struct.k_thread* %4, !dbg !16504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16507, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16363, metadata !DIExpression()) #25, !dbg !16509
  call void @llvm.dbg.value(metadata i32 0, metadata !16364, metadata !DIExpression()) #25, !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16512
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16514, !srcloc !15410
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16514
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !16516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16516
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()) #25, !dbg !16512
  call void @llvm.dbg.value(metadata i32 %3, metadata !16366, metadata !DIExpression()) #25, !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !16364, metadata !DIExpression()) #25, !dbg !16511
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16517
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !16518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !16520
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16522, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !16364, metadata !DIExpression()) #25, !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !16364, metadata !DIExpression()) #25, !dbg !16511
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16523
  ret void, !dbg !16524
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16527, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 %1, metadata !16528, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i8 0, metadata !16529, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 0, metadata !16530, metadata !DIExpression()), !dbg !16534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16535
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16537, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()) #25, !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !15401, metadata !DIExpression()) #25, !dbg !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()), !dbg !16534
  call void @llvm.dbg.value(metadata i8 poison, metadata !16529, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16530, metadata !DIExpression()), !dbg !16534
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16540
  call void @llvm.dbg.value(metadata i1 %6, metadata !16529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16533
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16543

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()) #25, !dbg !16544
  %11 = load i8, i8* %4, align 1, !dbg !16550
  %12 = and i8 %11, 127, !dbg !16550
  store i8 %12, i8* %4, align 1, !dbg !16550
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15572, metadata !DIExpression()) #25, !dbg !16551
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16553
  store i8 %9, i8* %8, align 2, !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15581, metadata !DIExpression()) #25, !dbg !16555
  %13 = load i8, i8* %4, align 1, !dbg !16557
  %14 = or i8 %13, -128, !dbg !16557
  store i8 %14, i8* %4, align 1, !dbg !16557
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()) #25, !dbg !16558
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15595, metadata !DIExpression()) #25, !dbg !16560
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15601, metadata !DIExpression()) #25, !dbg !16560
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16562
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15602, metadata !DIExpression()) #25, !dbg !16560
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16563
  br i1 %16, label %26, label %17, !dbg !16562

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15602, metadata !DIExpression()) #25, !dbg !16560
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16564
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15602, metadata !DIExpression()) #25, !dbg !16560
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16565
  %21 = icmp sgt i32 %20, 0, !dbg !16566
  br i1 %21, label %22, label %23, !dbg !16567

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16568
  br label %27, !dbg !16569

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16563
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15602, metadata !DIExpression()) #25, !dbg !16560
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16563
  br i1 %25, label %26, label %17, !dbg !16562, !llvm.loop !16570

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16572
  br label %27, !dbg !16573

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16574
  br label %29, !dbg !16575

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16576
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16537
  call void @llvm.dbg.value(metadata i32 %30, metadata !15407, metadata !DIExpression()) #25, !dbg !16539
  call void @llvm.dbg.value(metadata i32 %30, metadata !15401, metadata !DIExpression()) #25, !dbg !16535
  call void @llvm.dbg.value(metadata i32 %30, metadata !16532, metadata !DIExpression()), !dbg !16534
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()) #25, !dbg !16578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !15430, metadata !DIExpression()) #25, !dbg !16580
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16582, !srcloc !15436
  call void @llvm.dbg.value(metadata i8 poison, metadata !16529, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16530, metadata !DIExpression()), !dbg !16534
  ret i1 %6, !dbg !16583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16588, metadata !DIExpression()), !dbg !16591
  call void @llvm.dbg.value(metadata i32 %1, metadata !16589, metadata !DIExpression()), !dbg !16591
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16592
  call void @llvm.dbg.value(metadata i1 %3, metadata !16590, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16591
  br i1 %3, label %4, label %12, !dbg !16593

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16595
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16596
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16596
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16596
  %9 = load i8, i8* %8, align 1, !dbg !16596
  %10 = icmp eq i8 %9, 0, !dbg !16597
  br i1 %10, label %11, label %12, !dbg !16598

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16599
  br label %12, !dbg !16601

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16603 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16605, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16609
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16611, !srcloc !15410
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %2, metadata !15407, metadata !DIExpression()) #25, !dbg !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16613
  call void @llvm.dbg.value(metadata i32 %2, metadata !15401, metadata !DIExpression()) #25, !dbg !16609
  call void @llvm.dbg.value(metadata i32 %2, metadata !16607, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()), !dbg !16608
  tail call fastcc void @z_sched_lock() #26, !dbg !16614
  call void @llvm.dbg.value(metadata i32 %2, metadata !15422, metadata !DIExpression()) #25, !dbg !16617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16617
  call void @llvm.dbg.value(metadata i32 %2, metadata !15430, metadata !DIExpression()) #25, !dbg !16619
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16621, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !16605, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()), !dbg !16608
  ret void, !dbg !16622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16623 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16624
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16625
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16625
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16625
  %5 = load i8, i8* %4, align 1, !dbg !16626
  %6 = add i8 %5, -1, !dbg !16626
  store i8 %6, i8* %4, align 1, !dbg !16626
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16627, !srcloc !16629
  ret void, !dbg !16630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16631 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16633, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16637
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16639, !srcloc !15410
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %2, metadata !15407, metadata !DIExpression()) #25, !dbg !16641
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16641
  call void @llvm.dbg.value(metadata i32 %2, metadata !15401, metadata !DIExpression()) #25, !dbg !16637
  call void @llvm.dbg.value(metadata i32 %2, metadata !16635, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16633, metadata !DIExpression()), !dbg !16636
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16642
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16645
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16645
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16645
  %7 = load i8, i8* %6, align 1, !dbg !16646
  %8 = add i8 %7, 1, !dbg !16646
  store i8 %8, i8* %6, align 1, !dbg !16646
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16647
  call void @llvm.dbg.value(metadata i32 %2, metadata !15422, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 %2, metadata !15430, metadata !DIExpression()) #25, !dbg !16650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16652, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 1, metadata !16633, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16633, metadata !DIExpression()), !dbg !16636
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16653
  ret void, !dbg !16654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !16655 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16656
  ret %struct.k_thread* %1, !dbg !16657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !16658 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16662, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16663, metadata !DIExpression()), !dbg !16667
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16668
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16664, metadata !DIExpression()), !dbg !16667
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16669
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16665, metadata !DIExpression()), !dbg !16667
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16670
  call void @llvm.dbg.value(metadata i32 %5, metadata !16666, metadata !DIExpression()), !dbg !16667
  %6 = icmp sgt i32 %5, 0, !dbg !16671
  br i1 %6, label %17, label %7, !dbg !16673

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16674
  br i1 %8, label %17, label %9, !dbg !16676

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16677
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16677
  %12 = load i32, i32* %11, align 8, !dbg !16677
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16679
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16679
  %15 = load i32, i32* %14, align 8, !dbg !16679
  %16 = icmp ult i32 %12, %15, !dbg !16680
  br label %17, !dbg !16681

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16682
  ret i1 %18, !dbg !16683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16684 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16701, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16702, metadata !DIExpression()), !dbg !16716
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16717
  %5 = load i32, i32* %4, align 4, !dbg !16718
  %6 = add nsw i32 %5, 1, !dbg !16718
  store i32 %6, i32* %4, align 4, !dbg !16718
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16719
  store i32 %5, i32* %7, align 8, !dbg !16720
  %8 = load i32, i32* %4, align 4, !dbg !16721
  %9 = icmp eq i32 %8, 0, !dbg !16722
  br i1 %9, label %10, label %32, !dbg !16723

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16724
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16724
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16704, metadata !DIExpression()), !dbg !16724
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16724
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16724
  %14 = load i32, i32* %13, align 4, !dbg !16724
  %15 = shl i32 %14, 2, !dbg !16724
  %16 = alloca i8, i32 %15, align 8, !dbg !16724
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16724
  store i8* %16, i8** %17, align 4, !dbg !16724
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16724
  %19 = alloca i8, i32 %14, align 8, !dbg !16724
  store i8* %19, i8** %18, align 4, !dbg !16724
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16724
  store i32 -1, i32* %20, align 4, !dbg !16724
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16725
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16713, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16703, metadata !DIExpression()), !dbg !16716
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16727
  br i1 %22, label %23, label %24, !dbg !16724

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16727
  br label %32, !dbg !16728

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16703, metadata !DIExpression()), !dbg !16716
  %26 = load i32, i32* %4, align 4, !dbg !16729
  %27 = add nsw i32 %26, 1, !dbg !16729
  store i32 %27, i32* %4, align 4, !dbg !16729
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16731
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16731
  store i32 %26, i32* %29, align 8, !dbg !16732
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16725
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16713, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16703, metadata !DIExpression()), !dbg !16716
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16727
  br i1 %31, label %23, label %24, !dbg !16724, !llvm.loop !16733

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16735
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16736
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !16737
  ret void, !dbg !16738
}

; Function Attrs: optsize
declare !dbg !16739 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16744 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16747 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16749, metadata !DIExpression()), !dbg !16751
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16750, metadata !DIExpression()), !dbg !16751
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16752
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16753
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !16754
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16755
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16755
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16757
  br i1 %7, label %8, label %10, !dbg !16758

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16759
  store i32 0, i32* %9, align 4, !dbg !16761
  br label %10, !dbg !16762

10:                                               ; preds = %8, %2
  ret void, !dbg !16763
}

; Function Attrs: optsize
declare !dbg !16764 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16765 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16769, metadata !DIExpression()), !dbg !16772
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16770, metadata !DIExpression()), !dbg !16772
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16773
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16774
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16771, metadata !DIExpression()), !dbg !16772
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16770, metadata !DIExpression()), !dbg !16772
  ret %struct.k_thread* %4, !dbg !16775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16776 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16780, metadata !DIExpression()), !dbg !16781
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !16782
  ret %struct.rbnode* %2, !dbg !16783
}

; Function Attrs: optsize
declare !dbg !16784 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16787 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16799, metadata !DIExpression()), !dbg !16803
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16804
  %3 = load i32, i32* %2, align 4, !dbg !16804
  %4 = icmp eq i32 %3, 0, !dbg !16806
  br i1 %4, label %10, label %5, !dbg !16807

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16800, metadata !DIExpression()), !dbg !16803
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16808, !range !4974
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16809
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16801, metadata !DIExpression()), !dbg !16803
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef %7) #26, !dbg !16810
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16802, metadata !DIExpression()), !dbg !16803
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16800, metadata !DIExpression()), !dbg !16803
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16803
  ret %struct.k_thread* %11, !dbg !16811
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16812 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16816, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i32 0, metadata !16817, metadata !DIExpression()), !dbg !16819
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.231(%struct._wait_q_t* noundef %0) #26, !dbg !16820
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16818, metadata !DIExpression()), !dbg !16819
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16821
  br i1 %3, label %8, label %4, !dbg !16822

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16823
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16825
  call void @llvm.dbg.value(metadata i32 1, metadata !16817, metadata !DIExpression()), !dbg !16819
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.231(%struct._wait_q_t* noundef %0) #26, !dbg !16820
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16818, metadata !DIExpression()), !dbg !16819
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16821
  br i1 %7, label %8, label %4, !dbg !16822, !llvm.loop !16826

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16819
  ret i32 %9, !dbg !16828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.231(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !16829 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16831, metadata !DIExpression()), !dbg !16832
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16833
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef %2) #26, !dbg !16834
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16835
  ret %struct.k_thread* %4, !dbg !16836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #8 !dbg !16837 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16846, metadata !DIExpression()), !dbg !16847
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16848
  tail call fastcc void @sys_dlist_init.232(%struct._dnode* noundef nonnull %2) #26, !dbg !16849
  ret void, !dbg !16850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.232(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16851 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16855, metadata !DIExpression()), !dbg !16856
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16857
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16858
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16859
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16860
  ret void, !dbg !16861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16862 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16863
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16864
  ret void, !dbg !16865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !16866 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16871, metadata !DIExpression()), !dbg !16872
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16873
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16873
  %4 = load i8, i8* %3, align 2, !dbg !16873
  %5 = sext i8 %4 to i32, !dbg !16874
  ret i32 %5, !dbg !16875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16880, metadata !DIExpression()), !dbg !16883
  call void @llvm.dbg.value(metadata i32 %1, metadata !16881, metadata !DIExpression()), !dbg !16883
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16882, metadata !DIExpression()), !dbg !16883
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16884
  ret void, !dbg !16885
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16886 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16887
  br i1 %1, label %8, label %2, !dbg !16888

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !16889
  br i1 %3, label %8, label %4, !dbg !16890

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16891
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16892
  %7 = xor i1 %6, true, !dbg !16890
  br label %8, !dbg !16890

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !16894 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16895, !range !7623
  %2 = icmp eq i8 %1, 0, !dbg !16895
  ret i1 %2, !dbg !16896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16897 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16900
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16902, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()) #25, !dbg !16904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !16904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15401, metadata !DIExpression()) #25, !dbg !16900
  call void @llvm.dbg.value(metadata i32 undef, metadata !16899, metadata !DIExpression()), !dbg !16905
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16906
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15564, metadata !DIExpression()) #25, !dbg !16909
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16911
  %4 = load i8, i8* %3, align 1, !dbg !16912
  %5 = and i8 %4, 127, !dbg !16912
  store i8 %5, i8* %3, align 1, !dbg !16912
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15572, metadata !DIExpression()) #25, !dbg !16913
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !16915
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16916
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15581, metadata !DIExpression()) #25, !dbg !16917
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16919
  %8 = load i8, i8* %7, align 1, !dbg !16920
  %9 = or i8 %8, -128, !dbg !16920
  store i8 %9, i8* %7, align 1, !dbg !16920
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15588, metadata !DIExpression()) #25, !dbg !16921
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15595, metadata !DIExpression()) #25, !dbg !16923
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15601, metadata !DIExpression()) #25, !dbg !16923
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16925
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15602, metadata !DIExpression()) #25, !dbg !16923
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16926
  br i1 %11, label %22, label %12, !dbg !16925

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15602, metadata !DIExpression()) #25, !dbg !16923
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16927
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15602, metadata !DIExpression()) #25, !dbg !16923
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !16928
  %16 = icmp sgt i32 %15, 0, !dbg !16929
  br i1 %16, label %17, label %19, !dbg !16930

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16931
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16932
  br label %24, !dbg !16933

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !16926
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15602, metadata !DIExpression()) #25, !dbg !16923
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16926
  br i1 %21, label %22, label %12, !dbg !16925, !llvm.loop !16934

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16936
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !16937
  br label %24, !dbg !16938

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16902
  call void @llvm.dbg.value(metadata i32 %25, metadata !15407, metadata !DIExpression()) #25, !dbg !16904
  call void @llvm.dbg.value(metadata i32 %25, metadata !15401, metadata !DIExpression()) #25, !dbg !16900
  call void @llvm.dbg.value(metadata i32 %25, metadata !16899, metadata !DIExpression()), !dbg !16905
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16939
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #25, !dbg !16940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16009, metadata !DIExpression()) #25, !dbg !16940
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !16942
  ret void, !dbg !16943
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16944 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16948, metadata !DIExpression()), !dbg !16951
  %3 = icmp eq i64 %2, -1, !dbg !16952
  br i1 %3, label %4, label %6, !dbg !16954

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16955
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16957
  br label %11, !dbg !16958

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16949, metadata !DIExpression()), !dbg !16951
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16959
  %8 = sext i32 %7 to i64, !dbg !16959
  call void @llvm.dbg.value(metadata i64 %8, metadata !16949, metadata !DIExpression()), !dbg !16951
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64.235(i64 noundef %8) #26, !dbg !16960
  %10 = trunc i64 %9 to i32, !dbg !16960
  call void @llvm.dbg.value(metadata i32 %10, metadata !16950, metadata !DIExpression()), !dbg !16951
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16951
  ret i32 %12, !dbg !16961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16966, metadata !DIExpression()), !dbg !16967
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16968, !srcloc !16970
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16971
  ret void, !dbg !16972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16973 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16977, metadata !DIExpression()), !dbg !16981
  %2 = icmp eq i64 %0, 0, !dbg !16982
  br i1 %2, label %3, label %4, !dbg !16984

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16985
  br label %29, !dbg !16987

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16979, metadata !DIExpression()), !dbg !16981
  %5 = icmp sgt i64 %0, -3, !dbg !16988
  br i1 %5, label %6, label %10, !dbg !16990

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !16991
  %8 = trunc i64 %0 to i32, !dbg !16993
  %9 = add i32 %7, %8, !dbg !16993
  call void @llvm.dbg.value(metadata i32 %9, metadata !16978, metadata !DIExpression()), !dbg !16981
  br label %13, !dbg !16994

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16995
  %12 = sub i32 -2, %11, !dbg !16995
  call void @llvm.dbg.value(metadata i32 %12, metadata !16978, metadata !DIExpression()), !dbg !16981
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16997
  call void @llvm.dbg.value(metadata i32 %14, metadata !16978, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !16998
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17000, !srcloc !15410
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17000
  call void @llvm.dbg.value(metadata i32 %16, metadata !15407, metadata !DIExpression()) #25, !dbg !17002
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !17002
  call void @llvm.dbg.value(metadata i32 %16, metadata !15401, metadata !DIExpression()) #25, !dbg !16998
  call void @llvm.dbg.value(metadata i32 %16, metadata !16980, metadata !DIExpression()), !dbg !16981
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17003
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17004
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17005
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17006
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17007
  tail call fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17007
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17008
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17009
  call void @llvm.dbg.value(metadata i32 %16, metadata !16004, metadata !DIExpression()) #25, !dbg !17010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16009, metadata !DIExpression()) #25, !dbg !17010
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17012
  %22 = zext i32 %14 to i64, !dbg !17013
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17014
  %24 = zext i32 %23 to i64, !dbg !17014
  %25 = sub nsw i64 %22, %24, !dbg !17015
  call void @llvm.dbg.value(metadata i64 %25, metadata !16977, metadata !DIExpression()), !dbg !16981
  %26 = icmp sgt i64 %25, 0, !dbg !17016
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17016
  %28 = trunc i64 %27 to i32, !dbg !17016
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16981
  ret i32 %30, !dbg !17017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.235(i64 noundef %0) unnamed_addr #5 !dbg !17018 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17020, metadata !DIExpression()), !dbg !17021
  call void @llvm.dbg.value(metadata i64 %0, metadata !15442, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i32 10000, metadata !15445, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i32 1000, metadata !15446, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i8 1, metadata !15447, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i1 false, metadata !15448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17022
  call void @llvm.dbg.value(metadata i1 false, metadata !15449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17022
  call void @llvm.dbg.value(metadata i8 0, metadata !15450, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i1 false, metadata !15451, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17022
  call void @llvm.dbg.value(metadata i1 true, metadata !15452, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17022
  call void @llvm.dbg.value(metadata i64 0, metadata !15453, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i64 0, metadata !15453, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i64 %0, metadata !15442, metadata !DIExpression()), !dbg !17022
  %2 = udiv i64 %0, 10, !dbg !17024
  ret i64 %2, !dbg !17028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17029 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17030, !srcloc !17032
  tail call void @z_impl_k_yield() #26, !dbg !17033
  ret void, !dbg !17034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17039, metadata !DIExpression()), !dbg !17041
  %2 = sext i32 %0 to i64, !dbg !17042
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17043
  call void @llvm.dbg.value(metadata i64 %3, metadata !17040, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17041
  %4 = shl i64 %3, 32, !dbg !17044
  %5 = ashr exact i64 %4, 32, !dbg !17044
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17045
  call void @llvm.dbg.value(metadata i32 %6, metadata !17040, metadata !DIExpression()), !dbg !17041
  %7 = sext i32 %6 to i64, !dbg !17046
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17047
  %9 = trunc i64 %8 to i32, !dbg !17047
  ret i32 %9, !dbg !17048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17049 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17051, metadata !DIExpression()), !dbg !17052
  call void @llvm.dbg.value(metadata i64 %0, metadata !15442, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15445, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i32 10000, metadata !15446, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i8 1, metadata !15447, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i1 false, metadata !15448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17053
  call void @llvm.dbg.value(metadata i1 true, metadata !15449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17053
  call void @llvm.dbg.value(metadata i8 0, metadata !15450, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i1 false, metadata !15451, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17053
  call void @llvm.dbg.value(metadata i1 true, metadata !15452, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17053
  call void @llvm.dbg.value(metadata i64 0, metadata !15453, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i64 0, metadata !15453, metadata !DIExpression()), !dbg !17053
  %2 = add i64 %0, 99, !dbg !17055
  call void @llvm.dbg.value(metadata i64 %2, metadata !15442, metadata !DIExpression()), !dbg !17053
  %3 = udiv i64 %2, 100, !dbg !17056
  ret i64 %3, !dbg !17057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17058 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17060, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata i64 %0, metadata !15442, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i32 10000, metadata !15445, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15446, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i8 1, metadata !15447, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i1 false, metadata !15448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17062
  call void @llvm.dbg.value(metadata i1 false, metadata !15449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17062
  call void @llvm.dbg.value(metadata i8 0, metadata !15450, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i1 true, metadata !15451, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17062
  call void @llvm.dbg.value(metadata i1 false, metadata !15452, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17062
  call void @llvm.dbg.value(metadata i64 0, metadata !15453, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i64 0, metadata !15453, metadata !DIExpression()), !dbg !17062
  %2 = mul i64 %0, 100, !dbg !17064
  ret i64 %2, !dbg !17066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17069, metadata !DIExpression()), !dbg !17070
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17071
  br i1 %2, label %14, label %3, !dbg !17073

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17074
  %5 = icmp slt i32 %4, 0, !dbg !17076
  br i1 %5, label %6, label %10, !dbg !17077

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17078
  %8 = load i8, i8* %7, align 1, !dbg !17078
  %9 = icmp eq i8 %8, 16, !dbg !17081
  br i1 %9, label %10, label %14, !dbg !17082

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17083
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17084
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17085, !srcloc !16044
  call void @llvm.dbg.value(metadata i32 %11, metadata !16040, metadata !DIExpression()) #25, !dbg !17089
  %12 = icmp eq i32 %11, 0, !dbg !17090
  br i1 %12, label %13, label %14, !dbg !17091

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17092
  br label %14, !dbg !17094

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17098, metadata !DIExpression()), !dbg !17099
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17100
  %3 = load i8, i8* %2, align 1, !dbg !17100
  %4 = and i8 %3, 2, !dbg !17101
  %5 = icmp ne i8 %4, 0, !dbg !17102
  ret i1 %5, !dbg !17103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !17104 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17109
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17108, metadata !DIExpression()), !dbg !17110
  ret %struct.k_thread* %1, !dbg !17111
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17112 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17113, !srcloc !16044
  call void @llvm.dbg.value(metadata i32 %1, metadata !16040, metadata !DIExpression()) #25, !dbg !17116
  %2 = icmp eq i32 %1, 0, !dbg !17117
  br i1 %2, label %3, label %8, !dbg !17118

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17119
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17120
  %6 = icmp ne i32 %5, 0, !dbg !17118
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17124, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !17127
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17129, !srcloc !15410
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17129
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !17131
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !17131
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()) #25, !dbg !17127
  call void @llvm.dbg.value(metadata i32 %3, metadata !17125, metadata !DIExpression()), !dbg !17126
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17132
  %5 = load i8, i8* %4, align 4, !dbg !17132
  %6 = and i8 %5, 1, !dbg !17134
  %7 = icmp eq i8 %6, 0, !dbg !17135
  br i1 %7, label %9, label %8, !dbg !17136

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !17137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !17137
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !17140
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17142, !srcloc !15436
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17143, !srcloc !17145
  br label %24, !dbg !17146

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17147
  %11 = load i8, i8* %10, align 1, !dbg !17147
  %12 = and i8 %11, 8, !dbg !17149
  %13 = icmp eq i8 %12, 0, !dbg !17150
  br i1 %13, label %15, label %14, !dbg !17151

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !17152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !17152
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !17155
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17157, !srcloc !15436
  br label %24, !dbg !17158

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17159
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17160
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17162
  br i1 %17, label %18, label %23, !dbg !17163

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17164, !srcloc !16044
  call void @llvm.dbg.value(metadata i32 %19, metadata !16040, metadata !DIExpression()) #25, !dbg !17167
  %20 = icmp eq i32 %19, 0, !dbg !17168
  br i1 %20, label %21, label %23, !dbg !17169

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16004, metadata !DIExpression()) #25, !dbg !17170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16009, metadata !DIExpression()) #25, !dbg !17170
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17173
  br label %23, !dbg !17174

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #25, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !17175
  call void @llvm.dbg.value(metadata i32 %3, metadata !15430, metadata !DIExpression()) #25, !dbg !17177
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17179, !srcloc !15436
  br label %24, !dbg !17180

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17183, metadata !DIExpression()), !dbg !17184
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17185
  %3 = load i8, i8* %2, align 1, !dbg !17185
  %4 = and i8 %3, 8, !dbg !17187
  %5 = icmp eq i8 %4, 0, !dbg !17188
  br i1 %5, label %6, label %20, !dbg !17189

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17190
  %8 = or i8 %7, 8, !dbg !17190
  store i8 %8, i8* %2, align 1, !dbg !17190
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17192
  br i1 %9, label %10, label %12, !dbg !17194

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()) #25, !dbg !17195
  %11 = and i8 %8, 95, !dbg !17198
  store i8 %11, i8* %2, align 1, !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15572, metadata !DIExpression()) #25, !dbg !17199
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17201
  br label %12, !dbg !17202

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17203
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17203
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17205
  br i1 %15, label %17, label %16, !dbg !17206

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17207
  br label %17, !dbg !17209

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17210
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17211
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !17212
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17213
  br label %20, !dbg !17214

20:                                               ; preds = %17, %1
  ret void, !dbg !17215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17216 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17220, metadata !DIExpression()), !dbg !17222
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.231(%struct._wait_q_t* noundef %0) #26, !dbg !17223
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17221, metadata !DIExpression()), !dbg !17222
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17224
  br i1 %3, label %10, label %4, !dbg !17225

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17226
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17228
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17229, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i32 0, metadata !17234, metadata !DIExpression()), !dbg !17235
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17237
  store i32 0, i32* %7, align 4, !dbg !17238
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17239
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.231(%struct._wait_q_t* noundef %0) #26, !dbg !17223
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17221, metadata !DIExpression()), !dbg !17222
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17224
  br i1 %9, label %10, label %4, !dbg !17225, !llvm.loop !17240

10:                                               ; preds = %4, %1
  ret void, !dbg !17242
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17243 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17248, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17247, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !17252
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17254, !srcloc !15410
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17254
  call void @llvm.dbg.value(metadata i32 %4, metadata !15407, metadata !DIExpression()) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 %4, metadata !15401, metadata !DIExpression()) #25, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %4, metadata !17249, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata i32 0, metadata !17250, metadata !DIExpression()), !dbg !17251
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17257
  %6 = load i8, i8* %5, align 1, !dbg !17257
  %7 = and i8 %6, 8, !dbg !17259
  %8 = icmp eq i8 %7, 0, !dbg !17260
  br i1 %8, label %9, label %24, !dbg !17261

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17248, metadata !DIExpression()), !dbg !17251
  %11 = icmp eq i64 %10, 0, !dbg !17262
  br i1 %11, label %24, label %12, !dbg !17264

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17265
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17267
  br i1 %14, label %24, label %15, !dbg !17268

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17269
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17269
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17270
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17271
  br i1 %19, label %24, label %20, !dbg !17272

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17273
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !17275
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17276
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17277
  call void @llvm.dbg.value(metadata i32 %4, metadata !16004, metadata !DIExpression()) #25, !dbg !17278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16009, metadata !DIExpression()) #25, !dbg !17278
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17280
  call void @llvm.dbg.value(metadata i32 %23, metadata !17250, metadata !DIExpression()), !dbg !17251
  br label %26, !dbg !17281

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17282
  call void @llvm.dbg.value(metadata i32 %25, metadata !17250, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata i32 %4, metadata !15422, metadata !DIExpression()) #25, !dbg !17283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !17283
  call void @llvm.dbg.value(metadata i32 %4, metadata !15430, metadata !DIExpression()) #25, !dbg !17285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17287, !srcloc !15436
  br label %26, !dbg !17288

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17251
  ret i32 %27, !dbg !17289
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17290 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17294, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 %1, metadata !17295, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i8* %2, metadata !17296, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i8 0, metadata !17298, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 0, metadata !17299, metadata !DIExpression()), !dbg !17303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()) #25, !dbg !17304
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17306, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()) #25, !dbg !17308
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()) #25, !dbg !17308
  call void @llvm.dbg.value(metadata i32 undef, metadata !15401, metadata !DIExpression()) #25, !dbg !17304
  call void @llvm.dbg.value(metadata i32 undef, metadata !17301, metadata !DIExpression()), !dbg !17303
  call void @llvm.dbg.value(metadata i8 poison, metadata !17298, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !17299, metadata !DIExpression()), !dbg !17303
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17309
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17297, metadata !DIExpression()), !dbg !17302
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17312
  br i1 %7, label %12, label %8, !dbg !17314

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17315, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata i32 %1, metadata !17320, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata i8* %2, metadata !17321, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17229, metadata !DIExpression()), !dbg !17325
  call void @llvm.dbg.value(metadata i32 %1, metadata !17234, metadata !DIExpression()), !dbg !17325
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17327
  store i32 %1, i32* %9, align 4, !dbg !17328
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17329
  store i8* %2, i8** %10, align 4, !dbg !17330
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17331
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17332
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17333
  call void @llvm.dbg.value(metadata i8 1, metadata !17298, metadata !DIExpression()), !dbg !17302
  br label %12, !dbg !17334

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17306
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17306
  call void @llvm.dbg.value(metadata i32 %14, metadata !15407, metadata !DIExpression()) #25, !dbg !17308
  call void @llvm.dbg.value(metadata i32 %14, metadata !15401, metadata !DIExpression()) #25, !dbg !17304
  call void @llvm.dbg.value(metadata i32 %14, metadata !17301, metadata !DIExpression()), !dbg !17303
  call void @llvm.dbg.value(metadata i8 poison, metadata !17298, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()) #25, !dbg !17335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15427, metadata !DIExpression()) #25, !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !15430, metadata !DIExpression()) #25, !dbg !17337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17339, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !17299, metadata !DIExpression()), !dbg !17303
  ret i1 %13, !dbg !17340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17341 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17347, metadata !DIExpression()), !dbg !17352
  call void @llvm.dbg.value(metadata i64 undef, metadata !17349, metadata !DIExpression()), !dbg !17352
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17346, metadata !DIExpression()), !dbg !17352
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17348, metadata !DIExpression()), !dbg !17352
  call void @llvm.dbg.value(metadata i8** %4, metadata !17350, metadata !DIExpression()), !dbg !17352
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !17353
  call void @llvm.dbg.value(metadata i32 %6, metadata !17351, metadata !DIExpression()), !dbg !17352
  %7 = icmp eq i8** %4, null, !dbg !17354
  br i1 %7, label %12, label %8, !dbg !17356

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17357
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17359
  %11 = load i8*, i8** %10, align 4, !dbg !17359
  store i8* %11, i8** %4, align 4, !dbg !17360
  br label %12, !dbg !17361

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17363 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17365
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17366
  ret void, !dbg !17367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17368 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17378, metadata !DIExpression()), !dbg !17395
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17376, metadata !DIExpression()), !dbg !17395
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17377, metadata !DIExpression()), !dbg !17395
  %5 = icmp eq i64 %4, -1, !dbg !17396
  br i1 %5, label %55, label %6, !dbg !17398

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17399
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17400
  call void @llvm.dbg.value(metadata i32 0, metadata !17379, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17409
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17411, !srcloc !17417
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17411
  call void @llvm.dbg.value(metadata i32 %9, metadata !17414, metadata !DIExpression()) #25, !dbg !17418
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17418
  call void @llvm.dbg.value(metadata i32 %9, metadata !17408, metadata !DIExpression()) #25, !dbg !17409
  call void @llvm.dbg.value(metadata i32 %9, metadata !17385, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i32 undef, metadata !17379, metadata !DIExpression()), !dbg !17401
  %10 = icmp slt i64 %4, -1, !dbg !17419
  br i1 %10, label %11, label %17, !dbg !17420

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17421
  %13 = add i64 %4, %12, !dbg !17422
  %14 = sub i64 -2, %13, !dbg !17422
  call void @llvm.dbg.value(metadata i64 %14, metadata !17389, metadata !DIExpression()), !dbg !17423
  %15 = icmp sgt i64 %14, 1, !dbg !17424
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17424
  br label %22, !dbg !17425

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17426
  %19 = tail call fastcc i32 @elapsed.244() #26, !dbg !17428
  %20 = sext i32 %19 to i64, !dbg !17428
  %21 = add nsw i64 %18, %20, !dbg !17429
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17430
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17431
  store i64 %23, i64* %24, align 8, !dbg !17432
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17433
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17386, metadata !DIExpression()), !dbg !17435
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17436
  br i1 %26, label %42, label %27, !dbg !17436

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17437
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17386, metadata !DIExpression()), !dbg !17435
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17441
  %31 = load i64, i64* %30, align 8, !dbg !17441
  %32 = icmp slt i64 %28, %31, !dbg !17442
  br i1 %32, label %33, label %38, !dbg !17443

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17441
  %35 = sub nsw i64 %31, %28, !dbg !17444
  store i64 %35, i64* %34, align 8, !dbg !17444
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17446
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17447
  tail call fastcc void @sys_dlist_insert.245(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17448
  br label %44, !dbg !17449

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17450
  store i64 %39, i64* %24, align 8, !dbg !17450
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17451
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17386, metadata !DIExpression()), !dbg !17435
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17436
  br i1 %41, label %42, label %27, !dbg !17436, !llvm.loop !17452

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17454
  tail call fastcc void @sys_dlist_append.246(%struct._dnode* noundef %43) #26, !dbg !17457
  br label %44, !dbg !17458

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17459
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17460
  br i1 %46, label %47, label %54, !dbg !17461

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17462
  call void @llvm.dbg.value(metadata i32 %48, metadata !17392, metadata !DIExpression()), !dbg !17463
  %49 = icmp ne i32 %48, 0, !dbg !17464
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17466
  br i1 %52, label %54, label %53, !dbg !17466

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17467
  br label %54, !dbg !17469

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17470, metadata !DIExpression()) #25, !dbg !17476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17476
  call void @llvm.dbg.value(metadata i32 %9, metadata !17478, metadata !DIExpression()) #25, !dbg !17481
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17483, !srcloc !17484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17379, metadata !DIExpression()), !dbg !17401
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.244() unnamed_addr #1 !dbg !17486 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17489
  %2 = icmp eq i32 %1, 0, !dbg !17490
  br i1 %2, label %3, label %5, !dbg !17489

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17491
  br label %5, !dbg !17489

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17489
  ret i32 %6, !dbg !17492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !17493 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.249() #26, !dbg !17499
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17497, metadata !DIExpression()), !dbg !17500
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17501
  ret %struct._timeout* %2, !dbg !17502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.245(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17503 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17507, metadata !DIExpression()), !dbg !17511
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17508, metadata !DIExpression()), !dbg !17511
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17512
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17512
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17509, metadata !DIExpression()), !dbg !17511
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17513
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17514
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17515
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17516
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17517
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17518
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17519
  ret void, !dbg !17520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !17521 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17525, metadata !DIExpression()), !dbg !17527
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17528
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.247(%struct._dnode* noundef %2) #26, !dbg !17529
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17526, metadata !DIExpression()), !dbg !17527
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17530
  ret %struct._timeout* %4, !dbg !17531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.246(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17532 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17537, metadata !DIExpression()), !dbg !17540
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17538, metadata !DIExpression()), !dbg !17540
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17541
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17539, metadata !DIExpression()), !dbg !17540
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17542
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17543
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17544
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17545
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17546
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17547
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17548
  ret void, !dbg !17549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17550 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17555
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17552, metadata !DIExpression()), !dbg !17556
  %2 = tail call fastcc i32 @elapsed.244() #26, !dbg !17557
  call void @llvm.dbg.value(metadata i32 %2, metadata !17553, metadata !DIExpression()), !dbg !17556
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17558
  br i1 %3, label %14, label %4, !dbg !17560

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17561
  %6 = load i64, i64* %5, align 8, !dbg !17561
  %7 = sext i32 %2 to i64, !dbg !17562
  %8 = sub nsw i64 %6, %7, !dbg !17563
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17564
  br i1 %9, label %14, label %10, !dbg !17565

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17566
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17566
  %13 = trunc i64 %12 to i32, !dbg !17566
  call void @llvm.dbg.value(metadata i32 %13, metadata !17554, metadata !DIExpression()), !dbg !17556
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17568
  call void @llvm.dbg.value(metadata i32 %15, metadata !17554, metadata !DIExpression()), !dbg !17556
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17569
  %17 = icmp ne i32 %16, 0, !dbg !17571
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17572
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17572
  call void @llvm.dbg.value(metadata i32 %20, metadata !17554, metadata !DIExpression()), !dbg !17556
  ret i32 %20, !dbg !17573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.247(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17574 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17578, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17579, metadata !DIExpression()), !dbg !17580
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17581
  br i1 %2, label %5, label %3, !dbg !17582

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.248(%struct._dnode* noundef nonnull %0) #26, !dbg !17583
  br label %5, !dbg !17582

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17582
  ret %struct._dnode* %6, !dbg !17584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.248(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17585 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17587, metadata !DIExpression()), !dbg !17589
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17588, metadata !DIExpression()), !dbg !17589
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17590
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17591
  br i1 %3, label %7, label %4, !dbg !17592

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17593
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17593
  br label %7, !dbg !17592

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17592
  ret %struct._dnode* %8, !dbg !17594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.249() unnamed_addr #4 !dbg !17595 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17599, metadata !DIExpression()), !dbg !17600
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.250() #26, !dbg !17601
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17601
  ret %struct._dnode* %3, !dbg !17602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.250() unnamed_addr #4 !dbg !17603 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17607, metadata !DIExpression()), !dbg !17608
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17609
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17610
  ret i1 %2, !dbg !17611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17612 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17616, metadata !DIExpression()), !dbg !17621
  call void @llvm.dbg.value(metadata i32 -22, metadata !17617, metadata !DIExpression()), !dbg !17621
  call void @llvm.dbg.value(metadata i32 0, metadata !17618, metadata !DIExpression()), !dbg !17622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17623
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17625, !srcloc !17417
  call void @llvm.dbg.value(metadata i32 undef, metadata !17414, metadata !DIExpression()) #25, !dbg !17627
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17627
  call void @llvm.dbg.value(metadata i32 undef, metadata !17408, metadata !DIExpression()) #25, !dbg !17623
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()), !dbg !17622
  call void @llvm.dbg.value(metadata i32 -22, metadata !17617, metadata !DIExpression()), !dbg !17621
  call void @llvm.dbg.value(metadata i32 undef, metadata !17618, metadata !DIExpression()), !dbg !17622
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17617, metadata !DIExpression()), !dbg !17621
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.253(%struct._dnode* noundef %3) #26, !dbg !17628
  br i1 %4, label %5, label %6, !dbg !17632

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17633
  call void @llvm.dbg.value(metadata i32 0, metadata !17617, metadata !DIExpression()), !dbg !17621
  br label %6, !dbg !17635

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17621
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17625
  call void @llvm.dbg.value(metadata i32 %8, metadata !17414, metadata !DIExpression()) #25, !dbg !17627
  call void @llvm.dbg.value(metadata i32 %8, metadata !17408, metadata !DIExpression()) #25, !dbg !17623
  call void @llvm.dbg.value(metadata i32 %8, metadata !17620, metadata !DIExpression()), !dbg !17622
  call void @llvm.dbg.value(metadata i32 %7, metadata !17617, metadata !DIExpression()), !dbg !17621
  call void @llvm.dbg.value(metadata i32 undef, metadata !17470, metadata !DIExpression()) #25, !dbg !17636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17636
  call void @llvm.dbg.value(metadata i32 undef, metadata !17478, metadata !DIExpression()) #25, !dbg !17638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17640, !srcloc !17484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17618, metadata !DIExpression()), !dbg !17622
  ret i32 %7, !dbg !17641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.253(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17642 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17648, metadata !DIExpression()), !dbg !17649
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17650
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17650
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17651
  ret i1 %4, !dbg !17652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17653 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17655, metadata !DIExpression()), !dbg !17656
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17657
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17659
  br i1 %3, label %10, label %4, !dbg !17660

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17661
  %6 = load i64, i64* %5, align 8, !dbg !17661
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17663
  %8 = load i64, i64* %7, align 8, !dbg !17664
  %9 = add nsw i64 %8, %6, !dbg !17664
  store i64 %9, i64* %7, align 8, !dbg !17664
  br label %10, !dbg !17665

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17666
  tail call fastcc void @sys_dlist_remove.254(%struct._dnode* noundef %11) #26, !dbg !17667
  ret void, !dbg !17668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.254(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17669 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17673, metadata !DIExpression()), !dbg !17676
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17677
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17677
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17674, metadata !DIExpression()), !dbg !17676
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17678
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17678
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17675, metadata !DIExpression()), !dbg !17676
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17679
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17680
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17681
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17682
  tail call fastcc void @sys_dnode_init.255(%struct._dnode* noundef %0) #26, !dbg !17683
  ret void, !dbg !17684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.255(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !17685 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17687, metadata !DIExpression()), !dbg !17688
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17689
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17690
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17691
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17692
  ret void, !dbg !17693
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17694 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17700, metadata !DIExpression()), !dbg !17705
  call void @llvm.dbg.value(metadata i64 0, metadata !17701, metadata !DIExpression()), !dbg !17705
  call void @llvm.dbg.value(metadata i32 0, metadata !17702, metadata !DIExpression()), !dbg !17706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17707
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17709, !srcloc !17417
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17709
  call void @llvm.dbg.value(metadata i32 %3, metadata !17414, metadata !DIExpression()) #25, !dbg !17711
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17711
  call void @llvm.dbg.value(metadata i32 %3, metadata !17408, metadata !DIExpression()) #25, !dbg !17707
  call void @llvm.dbg.value(metadata i32 %3, metadata !17704, metadata !DIExpression()), !dbg !17706
  call void @llvm.dbg.value(metadata i64 0, metadata !17701, metadata !DIExpression()), !dbg !17705
  call void @llvm.dbg.value(metadata i32 undef, metadata !17702, metadata !DIExpression()), !dbg !17706
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17712
  call void @llvm.dbg.value(metadata i64 %4, metadata !17701, metadata !DIExpression()), !dbg !17705
  call void @llvm.dbg.value(metadata i32 %3, metadata !17470, metadata !DIExpression()) #25, !dbg !17715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17715
  call void @llvm.dbg.value(metadata i32 %3, metadata !17478, metadata !DIExpression()) #25, !dbg !17717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17719, !srcloc !17484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17702, metadata !DIExpression()), !dbg !17706
  ret i64 %4, !dbg !17720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17721 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17723, metadata !DIExpression()), !dbg !17727
  call void @llvm.dbg.value(metadata i64 0, metadata !17724, metadata !DIExpression()), !dbg !17727
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.256(%struct._timeout* noundef %0) #26, !dbg !17728
  br i1 %2, label %21, label %3, !dbg !17730

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17731
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17725, metadata !DIExpression()), !dbg !17732
  call void @llvm.dbg.value(metadata i64 0, metadata !17724, metadata !DIExpression()), !dbg !17727
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17733
  br i1 %5, label %16, label %6, !dbg !17735

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17725, metadata !DIExpression()), !dbg !17732
  call void @llvm.dbg.value(metadata i64 %8, metadata !17724, metadata !DIExpression()), !dbg !17727
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17736
  %10 = load i64, i64* %9, align 8, !dbg !17736
  %11 = add nsw i64 %10, %8, !dbg !17738
  call void @llvm.dbg.value(metadata i64 %11, metadata !17724, metadata !DIExpression()), !dbg !17727
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17739
  br i1 %12, label %16, label %13, !dbg !17741

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17742
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17725, metadata !DIExpression()), !dbg !17732
  call void @llvm.dbg.value(metadata i64 %11, metadata !17724, metadata !DIExpression()), !dbg !17727
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17733
  br i1 %15, label %16, label %6, !dbg !17735, !llvm.loop !17743

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17727
  call void @llvm.dbg.value(metadata i64 %17, metadata !17724, metadata !DIExpression()), !dbg !17727
  %18 = tail call fastcc i32 @elapsed.244() #26, !dbg !17745
  %19 = sext i32 %18 to i64, !dbg !17745
  %20 = sub nsw i64 %17, %19, !dbg !17746
  br label %21, !dbg !17747

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17727
  ret i64 %22, !dbg !17748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.256(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17749 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17753, metadata !DIExpression()), !dbg !17754
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17755
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.253(%struct._dnode* noundef %2) #26, !dbg !17756
  %4 = xor i1 %3, true, !dbg !17757
  ret i1 %4, !dbg !17758
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17759 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17761, metadata !DIExpression()), !dbg !17766
  call void @llvm.dbg.value(metadata i64 0, metadata !17762, metadata !DIExpression()), !dbg !17766
  call void @llvm.dbg.value(metadata i32 0, metadata !17763, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17768
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17770, !srcloc !17417
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17770
  call void @llvm.dbg.value(metadata i32 %3, metadata !17414, metadata !DIExpression()) #25, !dbg !17772
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17772
  call void @llvm.dbg.value(metadata i32 %3, metadata !17408, metadata !DIExpression()) #25, !dbg !17768
  call void @llvm.dbg.value(metadata i32 %3, metadata !17765, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.value(metadata i64 0, metadata !17762, metadata !DIExpression()), !dbg !17766
  call void @llvm.dbg.value(metadata i32 undef, metadata !17763, metadata !DIExpression()), !dbg !17767
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17773
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17776
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17762, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17766
  call void @llvm.dbg.value(metadata i32 %3, metadata !17470, metadata !DIExpression()) #25, !dbg !17777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17777
  call void @llvm.dbg.value(metadata i32 %3, metadata !17478, metadata !DIExpression()) #25, !dbg !17779
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17781, !srcloc !17484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17763, metadata !DIExpression()), !dbg !17767
  %6 = add i64 %5, %4, !dbg !17782
  ret i64 %6, !dbg !17783
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17784 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17786, metadata !DIExpression()), !dbg !17790
  call void @llvm.dbg.value(metadata i32 0, metadata !17787, metadata !DIExpression()), !dbg !17791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17792
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17794, !srcloc !17417
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17794
  call void @llvm.dbg.value(metadata i32 %2, metadata !17414, metadata !DIExpression()) #25, !dbg !17796
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17796
  call void @llvm.dbg.value(metadata i32 %2, metadata !17408, metadata !DIExpression()) #25, !dbg !17792
  call void @llvm.dbg.value(metadata i32 %2, metadata !17789, metadata !DIExpression()), !dbg !17791
  call void @llvm.dbg.value(metadata i32 -1, metadata !17786, metadata !DIExpression()), !dbg !17790
  call void @llvm.dbg.value(metadata i32 undef, metadata !17787, metadata !DIExpression()), !dbg !17791
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17797
  call void @llvm.dbg.value(metadata i32 %3, metadata !17786, metadata !DIExpression()), !dbg !17790
  call void @llvm.dbg.value(metadata i32 %2, metadata !17470, metadata !DIExpression()) #25, !dbg !17800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17800
  call void @llvm.dbg.value(metadata i32 %2, metadata !17478, metadata !DIExpression()) #25, !dbg !17802
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17804, !srcloc !17484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17787, metadata !DIExpression()), !dbg !17791
  ret i32 %3, !dbg !17805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17808, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i1 %1, metadata !17809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17818
  call void @llvm.dbg.value(metadata i32 0, metadata !17810, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17820
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17822, !srcloc !17417
  call void @llvm.dbg.value(metadata i32 undef, metadata !17414, metadata !DIExpression()) #25, !dbg !17824
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17824
  call void @llvm.dbg.value(metadata i32 undef, metadata !17408, metadata !DIExpression()) #25, !dbg !17820
  call void @llvm.dbg.value(metadata i32 undef, metadata !17812, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !17810, metadata !DIExpression()), !dbg !17819
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17825
  call void @llvm.dbg.value(metadata i32 %4, metadata !17813, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i1 undef, metadata !17816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17826
  %5 = icmp slt i32 %4, 2, !dbg !17827
  call void @llvm.dbg.value(metadata i1 %5, metadata !17817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17826
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17828
  call void @llvm.dbg.value(metadata i1 %6, metadata !17816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17826
  br i1 %7, label %11, label %8, !dbg !17828

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17830
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17830
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !17832
  br label %11, !dbg !17833

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17822
  call void @llvm.dbg.value(metadata i32 %12, metadata !17414, metadata !DIExpression()) #25, !dbg !17824
  call void @llvm.dbg.value(metadata i32 %12, metadata !17408, metadata !DIExpression()) #25, !dbg !17820
  call void @llvm.dbg.value(metadata i32 %12, metadata !17812, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !17470, metadata !DIExpression()) #25, !dbg !17834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !17478, metadata !DIExpression()) #25, !dbg !17836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17838, !srcloc !17484
  call void @llvm.dbg.value(metadata i32 1, metadata !17810, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !17810, metadata !DIExpression()), !dbg !17819
  ret void, !dbg !17839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17844, metadata !DIExpression()), !dbg !17849
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !17850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17851
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17853, !srcloc !17417
  call void @llvm.dbg.value(metadata i32 undef, metadata !17414, metadata !DIExpression()) #25, !dbg !17855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17408, metadata !DIExpression()) #25, !dbg !17851
  call void @llvm.dbg.value(metadata i32 undef, metadata !17845, metadata !DIExpression()), !dbg !17849
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17845, metadata !DIExpression()), !dbg !17849
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17856
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17857
  br i1 %4, label %28, label %5, !dbg !17858

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17859
  %10 = load i64, i64* %9, align 8, !dbg !17859
  %11 = sext i32 %8 to i64, !dbg !17860
  %12 = icmp sgt i64 %10, %11, !dbg !17861
  br i1 %12, label %26, label %13, !dbg !17862

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17849
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17846, metadata !DIExpression()), !dbg !17863
  %15 = trunc i64 %10 to i32, !dbg !17864
  call void @llvm.dbg.value(metadata i32 %15, metadata !17848, metadata !DIExpression()), !dbg !17863
  %16 = sext i32 %15 to i64, !dbg !17865
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17866
  %18 = add i64 %17, %16, !dbg !17866
  store i64 %18, i64* @curr_tick, align 8, !dbg !17866
  store i64 0, i64* %9, align 8, !dbg !17867
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17868
  call void @llvm.dbg.value(metadata i32 %14, metadata !17470, metadata !DIExpression()) #25, !dbg !17869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17869
  call void @llvm.dbg.value(metadata i32 %14, metadata !17478, metadata !DIExpression()) #25, !dbg !17871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17873, !srcloc !17484
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17874
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17874
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !17875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17876
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17878, !srcloc !17417
  call void @llvm.dbg.value(metadata i32 undef, metadata !17414, metadata !DIExpression()) #25, !dbg !17880
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17880
  call void @llvm.dbg.value(metadata i32 undef, metadata !17408, metadata !DIExpression()) #25, !dbg !17876
  call void @llvm.dbg.value(metadata i32 undef, metadata !17845, metadata !DIExpression()), !dbg !17849
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17881
  %23 = sub nsw i32 %22, %15, !dbg !17881
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17845, metadata !DIExpression()), !dbg !17849
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17856
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17857
  br i1 %25, label %28, label %5, !dbg !17858, !llvm.loop !17882

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17884
  store i64 %27, i64* %9, align 8, !dbg !17884
  br label %32, !dbg !17887

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17849
  %31 = sext i32 %30 to i64, !dbg !17888
  br label %32, !dbg !17888

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17888
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17849
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17889
  %37 = add i64 %36, %33, !dbg !17889
  store i64 %37, i64* @curr_tick, align 8, !dbg !17889
  store i32 0, i32* @announce_remaining, align 4, !dbg !17890
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17891
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !17892
  call void @llvm.dbg.value(metadata i32 %35, metadata !17470, metadata !DIExpression()) #25, !dbg !17893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17893
  call void @llvm.dbg.value(metadata i32 %35, metadata !17478, metadata !DIExpression()) #25, !dbg !17895
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !17897, !srcloc !17484
  ret void, !dbg !17898
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17899 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17901, metadata !DIExpression()), !dbg !17905
  call void @llvm.dbg.value(metadata i32 0, metadata !17902, metadata !DIExpression()), !dbg !17906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17402, metadata !DIExpression()) #25, !dbg !17907
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17909, !srcloc !17417
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17909
  call void @llvm.dbg.value(metadata i32 %2, metadata !17414, metadata !DIExpression()) #25, !dbg !17911
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()) #25, !dbg !17911
  call void @llvm.dbg.value(metadata i32 %2, metadata !17408, metadata !DIExpression()) #25, !dbg !17907
  call void @llvm.dbg.value(metadata i32 %2, metadata !17904, metadata !DIExpression()), !dbg !17906
  call void @llvm.dbg.value(metadata i64 0, metadata !17901, metadata !DIExpression()), !dbg !17905
  call void @llvm.dbg.value(metadata i32 undef, metadata !17902, metadata !DIExpression()), !dbg !17906
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17912
  %4 = tail call fastcc i32 @elapsed.244() #26, !dbg !17915
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17901, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17905
  call void @llvm.dbg.value(metadata i32 %2, metadata !17470, metadata !DIExpression()) #25, !dbg !17916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17475, metadata !DIExpression()) #25, !dbg !17916
  call void @llvm.dbg.value(metadata i32 %2, metadata !17478, metadata !DIExpression()) #25, !dbg !17918
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17920, !srcloc !17484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17902, metadata !DIExpression()), !dbg !17906
  %5 = sext i32 %4 to i64, !dbg !17915
  %6 = add i64 %3, %5, !dbg !17921
  ret i64 %6, !dbg !17922
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17923 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17924
  %2 = trunc i64 %1 to i32, !dbg !17925
  ret i32 %2, !dbg !17926
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17927 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17928
  ret i64 %1, !dbg !17929
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17932, metadata !DIExpression()), !dbg !17939
  %2 = icmp eq i32 %0, 0, !dbg !17940
  br i1 %2, label %10, label %3, !dbg !17942

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17943
  call void @llvm.dbg.value(metadata i32 %4, metadata !17933, metadata !DIExpression()), !dbg !17939
  %5 = mul i32 %0, 84, !dbg !17944
  call void @llvm.dbg.value(metadata i32 %5, metadata !17934, metadata !DIExpression()), !dbg !17939
  br label %6, !dbg !17945

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17946
  call void @llvm.dbg.value(metadata i32 %7, metadata !17935, metadata !DIExpression()), !dbg !17947
  %8 = sub i32 %7, %4, !dbg !17948
  %9 = icmp ult i32 %8, %5, !dbg !17950
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17952 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17953
  ret i32 %1, !dbg !17954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17955 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !17957
  ret i32 %1, !dbg !17958
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17959 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17963, metadata !DIExpression()), !dbg !17965
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17966

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17967
  br label %14, !dbg !17971

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17964, metadata !DIExpression()), !dbg !17965
  %6 = icmp slt i64 %2, -1, !dbg !17972
  br i1 %6, label %7, label %9, !dbg !17975

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17976
  br label %14, !dbg !17977

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17979
  %11 = icmp ugt i64 %2, 1, !dbg !17980
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17980
  %13 = add nsw i64 %10, %12, !dbg !17981
  br label %14, !dbg !17982

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17983
  ret i64 %15, !dbg !17984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !17985 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17987, metadata !DIExpression()), !dbg !17991
  %2 = icmp eq i8* %0, null, !dbg !17992
  br i1 %2, label %7, label %3, !dbg !17994

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17988, metadata !DIExpression()), !dbg !17991
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !17995
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !17995
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !17988, metadata !DIExpression()), !dbg !17991
  call void @llvm.dbg.value(metadata i8* %4, metadata !17987, metadata !DIExpression()), !dbg !17991
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !17997
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !17998
  br label %7, !dbg !17999

7:                                                ; preds = %3, %1
  ret void, !dbg !18000
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18005, metadata !DIExpression()), !dbg !18008
  call void @llvm.dbg.value(metadata i32 %1, metadata !18006, metadata !DIExpression()), !dbg !18008
  %3 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !18009
  call void @llvm.dbg.value(metadata i8* %3, metadata !18007, metadata !DIExpression()), !dbg !18008
  ret i8* %3, !dbg !18010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !18011 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18015, metadata !DIExpression()), !dbg !18021
  call void @llvm.dbg.value(metadata i32 %1, metadata !18016, metadata !DIExpression()), !dbg !18021
  call void @llvm.dbg.value(metadata i32 %2, metadata !18017, metadata !DIExpression()), !dbg !18021
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !18017, metadata !DIExpression(DW_OP_deref)), !dbg !18021
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !18022
  br i1 %5, label %14, label %6, !dbg !18024

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !18025
  call void @llvm.dbg.value(metadata i32 %7, metadata !18020, metadata !DIExpression()), !dbg !18021
  %8 = load i32, i32* %4, align 4, !dbg !18026
  call void @llvm.dbg.value(metadata i32 %8, metadata !18017, metadata !DIExpression()), !dbg !18021
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !18027
  call void @llvm.dbg.value(metadata i8* %9, metadata !18018, metadata !DIExpression()), !dbg !18021
  %10 = icmp eq i8* %9, null, !dbg !18028
  br i1 %10, label %14, label %11, !dbg !18030

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !18031
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !18019, metadata !DIExpression()), !dbg !18021
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !18032
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !18033
  call void @llvm.dbg.value(metadata i8* %13, metadata !18019, metadata !DIExpression()), !dbg !18021
  call void @llvm.dbg.value(metadata i8* %13, metadata !18018, metadata !DIExpression()), !dbg !18021
  br label %14, !dbg !18034

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !18021
  ret i8* %15, !dbg !18035
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !18036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18038, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata i32 4, metadata !18039, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata i32* %1, metadata !18040, metadata !DIExpression()), !dbg !18041
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !18042
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !18042
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !18042
  store i32 %5, i32* %1, align 4, !dbg !18042
  ret i1 %4, !dbg !18043
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !18044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18046, metadata !DIExpression()), !dbg !18048
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !18049
  call void @llvm.dbg.value(metadata i8* %2, metadata !18047, metadata !DIExpression()), !dbg !18048
  ret i8* %2, !dbg !18050
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18051 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !18053, metadata !DIExpression()), !dbg !18057
  call void @llvm.dbg.value(metadata i32 %1, metadata !18054, metadata !DIExpression()), !dbg !18057
  %4 = bitcast i32* %3 to i8*, !dbg !18058
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18058
  call void @llvm.dbg.value(metadata i32* %3, metadata !18056, metadata !DIExpression(DW_OP_deref)), !dbg !18057
  %5 = call fastcc zeroext i1 @size_mul_overflow.274(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !18059
  br i1 %5, label %12, label %6, !dbg !18061

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !18062
  call void @llvm.dbg.value(metadata i32 %7, metadata !18056, metadata !DIExpression()), !dbg !18057
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !18063
  call void @llvm.dbg.value(metadata i8* %8, metadata !18055, metadata !DIExpression()), !dbg !18057
  %9 = icmp eq i8* %8, null, !dbg !18064
  br i1 %9, label %12, label %10, !dbg !18066

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !18056, metadata !DIExpression()), !dbg !18057
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !18067
  br label %12, !dbg !18069

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !18057
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18070
  ret i8* %13, !dbg !18070
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.274(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !18071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18073, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata i32 %1, metadata !18074, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata i32* %2, metadata !18075, metadata !DIExpression()), !dbg !18076
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !18077
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !18077
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !18077
  store i32 %6, i32* %2, align 4, !dbg !18077
  ret i1 %5, !dbg !18078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !18079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18153, metadata !DIExpression()), !dbg !18154
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !18155
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !18156
  ret void, !dbg !18157
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18160, metadata !DIExpression()), !dbg !18164
  call void @llvm.dbg.value(metadata i32 %1, metadata !18161, metadata !DIExpression()), !dbg !18164
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !18165
  br i1 %3, label %9, label %4, !dbg !18167

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18168
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !18170
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !18170
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !18163, metadata !DIExpression()), !dbg !18164
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !18171
  br i1 %8, label %12, label %9, !dbg !18173

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !18174
  call void @llvm.dbg.value(metadata i8* %11, metadata !18162, metadata !DIExpression()), !dbg !18164
  br label %12, !dbg !18176

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !18177
  call void @llvm.dbg.value(metadata i8* %13, metadata !18162, metadata !DIExpression()), !dbg !18164
  ret i8* %13, !dbg !18178
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !18179 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !18181, !srcloc !18184
  ret void, !dbg !18185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18186 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.283, i32 0, i32 0)) #27, !dbg !18188
  ret void, !dbg !18189
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18190 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18192, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18193, metadata !DIExpression()), !dbg !18213
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18214

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18215

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18193, metadata !DIExpression()), !dbg !18213
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18216
  %6 = load i8*, i8** %5, align 4, !dbg !18216
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18220
  %8 = load i32, i32* %7, align 4, !dbg !18220
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !18221
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18222
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18193, metadata !DIExpression()), !dbg !18213
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18223
  br i1 %10, label %3, label %2, !dbg !18214, !llvm.loop !18225
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18227 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18231, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.value(metadata i8* %1, metadata !18232, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.value(metadata i32 %2, metadata !18233, metadata !DIExpression()), !dbg !18234
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18235
  tail call fastcc void @z_waitq_init.285(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !18236
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18237
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18238
  ret void, !dbg !18239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.285(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !18240 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18245, metadata !DIExpression()), !dbg !18246
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18247
  tail call fastcc void @sys_dlist_init.286(%struct._dnode* noundef %2) #26, !dbg !18248
  ret void, !dbg !18249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.286(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !18250 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18255, metadata !DIExpression()), !dbg !18256
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18257
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18258
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18259
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18260
  ret void, !dbg !18261
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18262 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18273, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18270, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i32 %1, metadata !18271, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i32 %2, metadata !18272, metadata !DIExpression()), !dbg !18283
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !18284
  call void @llvm.dbg.value(metadata i64 %6, metadata !18275, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i8* null, metadata !18276, metadata !DIExpression()), !dbg !18283
  %7 = icmp eq i64 %5, -1, !dbg !18285
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18285
  call void @llvm.dbg.value(metadata i64 %8, metadata !18275, metadata !DIExpression()), !dbg !18283
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18287, metadata !DIExpression()) #25, !dbg !18294
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18296, !srcloc !18302
  call void @llvm.dbg.value(metadata i32 undef, metadata !18299, metadata !DIExpression()) #25, !dbg !18303
  call void @llvm.dbg.value(metadata i32 undef, metadata !18300, metadata !DIExpression()) #25, !dbg !18303
  call void @llvm.dbg.value(metadata i32 undef, metadata !18293, metadata !DIExpression()) #25, !dbg !18294
  call void @llvm.dbg.value(metadata i32 undef, metadata !18277, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i8 0, metadata !18282, metadata !DIExpression()), !dbg !18283
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18276, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i8 0, metadata !18282, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i32 undef, metadata !18277, metadata !DIExpression()), !dbg !18283
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18304
  call void @llvm.dbg.value(metadata i8* %12, metadata !18276, metadata !DIExpression()), !dbg !18283
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !18306
  call void @llvm.dbg.value(metadata i64 %13, metadata !18274, metadata !DIExpression()), !dbg !18283
  %14 = icmp eq i8* %12, null, !dbg !18307
  br i1 %14, label %15, label %31, !dbg !18309

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18277, metadata !DIExpression()), !dbg !18283
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18309

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18282, metadata !DIExpression()), !dbg !18283
  %20 = sub nsw i64 %8, %18, !dbg !18310
  %21 = icmp slt i64 %20, 1, !dbg !18311
  br i1 %21, label %31, label %22, !dbg !18312

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18283
  call void @llvm.dbg.value(metadata i8 undef, metadata !18282, metadata !DIExpression()), !dbg !18283
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18313
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18313
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !18313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18287, metadata !DIExpression()) #25, !dbg !18314
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18316, !srcloc !18302
  call void @llvm.dbg.value(metadata i32 undef, metadata !18299, metadata !DIExpression()) #25, !dbg !18318
  call void @llvm.dbg.value(metadata i32 undef, metadata !18300, metadata !DIExpression()) #25, !dbg !18318
  call void @llvm.dbg.value(metadata i32 undef, metadata !18293, metadata !DIExpression()) #25, !dbg !18314
  call void @llvm.dbg.value(metadata i32 undef, metadata !18277, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i8* null, metadata !18276, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i32 undef, metadata !18277, metadata !DIExpression()), !dbg !18283
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18304
  call void @llvm.dbg.value(metadata i8* %28, metadata !18276, metadata !DIExpression()), !dbg !18283
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !18306
  call void @llvm.dbg.value(metadata i64 %29, metadata !18274, metadata !DIExpression()), !dbg !18283
  %30 = icmp eq i8* %28, null, !dbg !18307
  br i1 %30, label %17, label %31, !dbg !18309, !llvm.loop !18319

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18304
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18283
  call void @llvm.dbg.value(metadata i8* %33, metadata !18276, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata i32 %34, metadata !18322, metadata !DIExpression()) #25, !dbg !18328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18327, metadata !DIExpression()) #25, !dbg !18328
  call void @llvm.dbg.value(metadata i32 %34, metadata !18330, metadata !DIExpression()) #25, !dbg !18333
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !18335, !srcloc !18336
  ret i8* %33, !dbg !18337
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18338 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18344, metadata !DIExpression()), !dbg !18346
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18342, metadata !DIExpression()), !dbg !18346
  call void @llvm.dbg.value(metadata i32 %1, metadata !18343, metadata !DIExpression()), !dbg !18346
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !18347
  call void @llvm.dbg.value(metadata i8* %4, metadata !18345, metadata !DIExpression()), !dbg !18346
  ret i8* %4, !dbg !18348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18349 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18353, metadata !DIExpression()), !dbg !18356
  call void @llvm.dbg.value(metadata i8* %1, metadata !18354, metadata !DIExpression()), !dbg !18356
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18287, metadata !DIExpression()) #25, !dbg !18357
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18359, !srcloc !18302
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18359
  call void @llvm.dbg.value(metadata i32 %4, metadata !18299, metadata !DIExpression()) #25, !dbg !18361
  call void @llvm.dbg.value(metadata i32 undef, metadata !18300, metadata !DIExpression()) #25, !dbg !18361
  call void @llvm.dbg.value(metadata i32 %4, metadata !18293, metadata !DIExpression()) #25, !dbg !18357
  call void @llvm.dbg.value(metadata i32 %4, metadata !18355, metadata !DIExpression()), !dbg !18356
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18362
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !18363
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18364
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !18366
  %8 = icmp eq i32 %7, 0, !dbg !18367
  br i1 %8, label %12, label %9, !dbg !18368

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18369
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18370
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !18370
  br label %13, !dbg !18372

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18322, metadata !DIExpression()) #25, !dbg !18373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18327, metadata !DIExpression()) #25, !dbg !18373
  call void @llvm.dbg.value(metadata i32 %4, metadata !18330, metadata !DIExpression()) #25, !dbg !18376
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !18378, !srcloc !18336
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18379
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!874, !2, !2617, !27, !366, !390, !2619, !2621, !2654, !2688, !400, !450, !2690, !2693, !2704, !2750, !2752, !2780, !2808, !2851, !2922, !2967, !479, !619, !2995, !655, !665, !690, !702, !906, !3000, !1044, !1110, !1413, !1637, !3039, !1748, !1838, !3041, !3127, !3192, !1890, !3195, !1897, !2264, !3213, !3215, !2284, !2392, !3319, !2507, !2546, !3322, !3324, !2586}
!llvm.ident = !{!3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326, !3326}
!llvm.module.flags = !{!3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_bm_channel", scope: !27, file: !114, line: 16, type: !136, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !290, !292, !294, !296, !298, !300, !302, !304, !306, !339, !343, !348, !350, !357, !362}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "bm_channel", scope: !27, file: !114, line: 16, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !123, !125, !126, !134, !259}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !120, size: 16)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !13, !132}
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !133, line: 214, baseType: !32)
!133 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !135, size: 32, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !160, !257, !258}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !136, file: !137, line: 2722, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !142, file: !141, line: 232, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !148)
!148 = !{!149, !155}
!149 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 38, baseType: !150, size: 32)
!150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 38, size: 32, elements: !151)
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !150, file: !146, line: 39, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !146, line: 40, baseType: !153, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 42, baseType: !156, size: 32, offset: 32)
!156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 42, size: 32, elements: !157)
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !156, file: !146, line: 43, baseType: !153, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !156, file: !146, line: 44, baseType: !153, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !136, file: !137, line: 2724, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = !{!165, !212, !225, !226, !227, !228, !234, !252}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !162, file: !163, line: 247, baseType: !166, size: 384)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !167)
!167 = !{!168, !182, !184, !187, !188, !199, !200, !201}
!168 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 60, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 60, size: 64, elements: !170)
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !169, file: !163, line: 61, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !147)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !169, file: !163, line: 62, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !176)
!175 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !174, file: !175, line: 50, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 64, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!180 = !{!181}
!181 = !DISubrange(count: 2)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !166, file: !163, line: 68, baseType: !183, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !166, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !166, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !163, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !163, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !163, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !163, line: 100, baseType: !121, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !166, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !166, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !166, file: !163, line: 131, baseType: !202, size: 192, offset: 192)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !203)
!203 = !{!204, !205, !211}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !202, file: !141, line: 245, baseType: !172, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !202, file: !141, line: 246, baseType: !206, size: 32, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !210}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !202, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !162, file: !163, line: 250, baseType: !213, size: 288, offset: 384)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !213, file: !214, line: 26, baseType: !108, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !213, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !213, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !213, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !213, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !213, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !213, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !213, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !213, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !162, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !162, file: !163, line: 256, baseType: !140, size: 64, offset: 704)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !162, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !162, file: !163, line: 300, baseType: !229, size: 96, offset: 800)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !230)
!230 = !{!231, !232, !233}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !229, file: !163, line: 153, baseType: !22, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !229, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !162, file: !163, line: 325, baseType: !235, size: 32, offset: 896)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !237)
!237 = !{!238, !247, !248}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !236, file: !137, line: 5074, baseType: !239, size: 96)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !241)
!240 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !{!242, !245, !246}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !240, line: 57, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !240, line: 57, flags: DIFlagFwdDecl)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !239, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !239, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !236, file: !137, line: 5075, baseType: !140, size: 64, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !236, file: !137, line: 5076, baseType: !249, offset: 160)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !162, file: !163, line: 343, baseType: !253, size: 64, offset: 928)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !253, file: !214, line: 63, baseType: !108, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !253, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !136, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !136, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !265)
!265 = !{!266, !267, !284}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !264, file: !117, line: 91, baseType: !131, size: 8)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !264, file: !117, line: 93, baseType: !268, size: 32, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !279, !280, !281, !282, !283}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !137, line: 4206, baseType: !140, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !137, line: 4208, baseType: !249, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !270, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !270, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !270, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !270, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !270, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !270, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !270, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !270, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !264, file: !117, line: 96, baseType: !285, size: 32, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "s1", scope: !27, file: !114, line: 126, type: !264, isLocal: false, isDefinition: true, align: 32)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "s2", scope: !27, file: !114, line: 129, type: !264, isLocal: false, isDefinition: true, align: 32)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "s3", scope: !27, file: !114, line: 131, type: !264, isLocal: false, isDefinition: true, align: 32)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "s4", scope: !27, file: !114, line: 132, type: !264, isLocal: false, isDefinition: true, align: 32)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "s5", scope: !27, file: !114, line: 134, type: !264, isLocal: false, isDefinition: true, align: 32)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "s6", scope: !27, file: !114, line: 135, type: !264, isLocal: false, isDefinition: true, align: 32)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "s7", scope: !27, file: !114, line: 136, type: !264, isLocal: false, isDefinition: true, align: 32)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "s8", scope: !27, file: !114, line: 137, type: !264, isLocal: false, isDefinition: true, align: 32)
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression())
!307 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !27, file: !114, line: 216, type: !308, isLocal: false, isDefinition: true, align: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !309)
!309 = !{!310, !311, !319, !320, !325, !326, !327, !328, !329, !330, !332, !336}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !308, file: !137, line: 621, baseType: !161, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !308, file: !137, line: 622, baseType: !312, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !315)
!314 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{!318}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !316, line: 48, baseType: !278, size: 8)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !308, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !308, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !314, line: 46, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null, !102, !102, !102}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !308, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !308, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !308, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !308, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !308, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !308, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !308, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DISubroutineType(types: !335)
!335 = !{null}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !308, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !27, file: !114, line: 216, type: !341, isLocal: false, isDefinition: true)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !161)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !27, file: !114, line: 216, type: !345, isLocal: false, isDefinition: true, align: 512)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 8704, elements: !346)
!346 = !{!347}
!347 = !DISubrange(count: 1088)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !27, file: !114, line: 216, type: !162, isLocal: false, isDefinition: true)
!350 = !DIGlobalVariableExpression(var: !351, expr: !DIExpression())
!351 = distinct !DIGlobalVariable(name: "_zbus_message_bm_channel", scope: !27, file: !114, line: 16, type: !352, isLocal: true, isDefinition: true)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !353, line: 10, size: 64, elements: !354)
!353 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!354 = !{!355, !356}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !352, file: !353, line: 11, baseType: !102, size: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !352, file: !353, line: 12, baseType: !132, size: 32, offset: 32)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(name: "_zbus_observers_bm_channel", scope: !27, file: !114, line: 16, type: !359, isLocal: true, isDefinition: true)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 288, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 9)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 44, type: !109, isLocal: true, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !366, file: !381, line: 18, type: !382, isLocal: false, isDefinition: true)
!366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !368, globals: !380, splitDebugInlining: false, nameTableKind: None)
!367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!368 = !{!22, !102, !24, !369, !371, !373, !132, !103, !374, !375, !377, !378, !277, !379, !121, !337}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!380 = !{!364}
!381 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !383, file: !384, line: 17, baseType: !337, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !383, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "_char_out", scope: !390, file: !394, line: 54, type: !395, isLocal: false, isDefinition: true)
!390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !391, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !393, splitDebugInlining: false, nameTableKind: None)
!391 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!392 = !{!102, !103}
!393 = !{!388}
!394 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{!103, !103}
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !400, file: !417, line: 56, type: !418, isLocal: true, isDefinition: true, align: 32)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !402, globals: !416, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 259, baseType: !406)
!405 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 250, size: 224, elements: !407)
!407 = !{!408, !410, !411, !412, !413, !414, !415}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !406, file: !405, line: 252, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !406, file: !405, line: 253, baseType: !409, size: 32, offset: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !406, file: !405, line: 254, baseType: !409, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !406, file: !405, line: 255, baseType: !409, size: 32, offset: 96)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !406, file: !405, line: 256, baseType: !409, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !406, file: !405, line: 257, baseType: !409, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !406, file: !405, line: 258, baseType: !409, size: 32, offset: 192)
!416 = !{!398}
!417 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !447}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !419, file: !420, line: 60, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DISubroutineType(types: !425)
!425 = !{!103, !426}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !430)
!429 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!430 = !{!431, !432, !433, !434, !440, !441}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !429, line: 380, baseType: !337, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !428, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !428, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !428, file: !429, line: 386, baseType: !435, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 32)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !436, file: !429, line: 359, baseType: !185, size: 8)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !436, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !428, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !428, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !429, line: 43, baseType: !445)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !446)
!446 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !419, file: !420, line: 65, baseType: !426, size: 32, offset: 32)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !450, file: !453, line: 71, type: !454, isLocal: true, isDefinition: true, align: 32)
!450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !452, splitDebugInlining: false, nameTableKind: None)
!451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!452 = !{!448}
!453 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !456)
!456 = !{!457, !476}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !455, file: !420, line: 60, baseType: !458, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DISubroutineType(types: !460)
!460 = !{!103, !461}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !464)
!464 = !{!465, !466, !467, !468, !474, !475}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !463, file: !429, line: 380, baseType: !337, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !463, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !463, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !463, file: !429, line: 386, baseType: !469, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !471)
!471 = !{!472, !473}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !470, file: !429, line: 359, baseType: !185, size: 8)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !470, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !463, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !463, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !455, file: !420, line: 65, baseType: !461, size: 32, offset: 32)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !479, file: !486, line: 17, type: !612, isLocal: false, isDefinition: true)
!479 = distinct !DICompileUnit(language: DW_LANG_C99, file: !480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !481, globals: !482, splitDebugInlining: false, nameTableKind: None)
!480 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!481 = !{!132, !103, !108, !102}
!482 = !{!477, !483, !608}
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !485, file: !486, line: 198, type: !594, isLocal: true, isDefinition: true)
!485 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !486, file: !486, line: 175, type: !487, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !589)
!486 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !DISubroutineType(types: !488)
!488 = !{null, !489}
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !491)
!491 = !{!492, !550, !562, !563, !564, !565, !571, !584}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !490, file: !163, line: 247, baseType: !493, size: 384)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !494)
!494 = !{!495, !519, !526, !527, !528, !537, !538, !539}
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 60, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 60, size: 64, elements: !497)
!497 = !{!498, !513}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !496, file: !163, line: 61, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !501)
!501 = !{!502, !508}
!502 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 38, baseType: !503, size: 32)
!503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 38, size: 32, elements: !504)
!504 = !{!505, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !503, file: !146, line: 39, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !503, file: !146, line: 40, baseType: !506, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 42, baseType: !509, size: 32, offset: 32)
!509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 42, size: 32, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !509, file: !146, line: 43, baseType: !506, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !509, file: !146, line: 44, baseType: !506, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !496, file: !163, line: 62, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !514, file: !175, line: 50, baseType: !517, size: 64)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 64, elements: !180)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !493, file: !163, line: 68, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !522, file: !141, line: 232, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !500)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !493, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !493, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!528 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 90, baseType: !529, size: 16, offset: 112)
!529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 90, size: 16, elements: !530)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, scope: !529, file: !163, line: 91, baseType: !532, size: 16)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !529, file: !163, line: 91, size: 16, elements: !533)
!533 = !{!534, !535}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !532, file: !163, line: 96, baseType: !195, size: 8)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !532, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !529, file: !163, line: 100, baseType: !121, size: 16)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !493, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !493, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !493, file: !163, line: 131, baseType: !540, size: 192, offset: 192)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !541)
!541 = !{!542, !543, !549}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !540, file: !141, line: 245, baseType: !499, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !540, file: !141, line: 246, baseType: !544, size: 32, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 32)
!546 = !DISubroutineType(types: !547)
!547 = !{null, !548}
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !540, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !490, file: !163, line: 250, baseType: !551, size: 288, offset: 384)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !552)
!552 = !{!553, !554, !555, !556, !557, !558, !559, !560, !561}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !551, file: !214, line: 26, baseType: !108, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !551, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !551, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !551, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !551, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !551, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !551, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !551, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !551, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !490, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !490, file: !163, line: 256, baseType: !521, size: 64, offset: 704)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !490, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !490, file: !163, line: 300, baseType: !566, size: 96, offset: 800)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !566, file: !163, line: 153, baseType: !22, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !566, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !566, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !490, file: !163, line: 325, baseType: !572, size: 32, offset: 896)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !574)
!574 = !{!575, !581, !582}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !573, file: !137, line: 5074, baseType: !576, size: 96)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !577)
!577 = !{!578, !579, !580}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !576, file: !240, line: 57, baseType: !243, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !576, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !576, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !573, file: !137, line: 5075, baseType: !521, size: 64, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !573, file: !137, line: 5076, baseType: !583, offset: 160)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !490, file: !163, line: 343, baseType: !585, size: 64, offset: 928)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !585, file: !214, line: 63, baseType: !108, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !585, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!589 = !{!590, !591, !592, !593}
!590 = !DILocalVariable(name: "thread", arg: 1, scope: !485, file: !486, line: 175, type: !489)
!591 = !DILocalVariable(name: "region_num", scope: !485, file: !486, line: 200, type: !185)
!592 = !DILocalVariable(name: "guard_start", scope: !485, file: !486, line: 265, type: !22)
!593 = !DILocalVariable(name: "guard_size", scope: !485, file: !486, line: 266, type: !132)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 96, elements: !606)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !597)
!596 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!597 = !{!598, !599, !600}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !595, file: !596, line: 53, baseType: !22, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !595, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !595, file: !596, line: 55, baseType: !601, size: 32, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !603)
!602 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !604)
!604 = !{!605}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !603, file: !602, line: 150, baseType: !108, size: 32)
!606 = !{!607}
!607 = !DISubrange(count: 1)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "static_regions", scope: !479, file: !486, line: 62, type: !610, isLocal: true, isDefinition: true)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 96, elements: !606)
!611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !613, file: !384, line: 17, baseType: !337, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !613, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !619, file: !652, line: 39, type: !185, isLocal: true, isDefinition: true)
!619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !621, globals: !651, splitDebugInlining: false, nameTableKind: None)
!620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!621 = !{!622, !102, !103, !639, !185}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !624, line: 1226, baseType: !625)
!624 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 1213, size: 352, elements: !626)
!626 = !{!627, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !625, file: !624, line: 1215, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !625, file: !624, line: 1216, baseType: !409, size: 32, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !625, file: !624, line: 1217, baseType: !409, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !625, file: !624, line: 1218, baseType: !409, size: 32, offset: 96)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !625, file: !624, line: 1219, baseType: !409, size: 32, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !625, file: !624, line: 1220, baseType: !409, size: 32, offset: 160)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !625, file: !624, line: 1221, baseType: !409, size: 32, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !625, file: !624, line: 1222, baseType: !409, size: 32, offset: 224)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !625, file: !624, line: 1223, baseType: !409, size: 32, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !625, file: !624, line: 1224, baseType: !409, size: 32, offset: 288)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !625, file: !624, line: 1225, baseType: !409, size: 32, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !643)
!642 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!643 = !{!644, !645, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !641, file: !642, line: 29, baseType: !108, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !641, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !641, file: !642, line: 37, baseType: !647, size: 32, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !648, file: !602, line: 143, baseType: !108, size: 32)
!651 = !{!617}
!652 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !655, file: !662, line: 21, type: !395, isLocal: true, isDefinition: true)
!655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !656, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !657, globals: !661, splitDebugInlining: false, nameTableKind: None)
!656 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!657 = !{!658, !103, !102}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !660, line: 22, baseType: !103)
!660 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!661 = !{!653}
!662 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !665, file: !670, line: 13, type: !687, isLocal: true, isDefinition: true)
!665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !666, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !667, splitDebugInlining: false, nameTableKind: None)
!666 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!667 = !{!668, !663}
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "mpu_config", scope: !665, file: !670, line: 37, type: !671, isLocal: false, isDefinition: true)
!670 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !642, line: 41, size: 64, elements: !673)
!673 = !{!674, !675}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !672, file: !642, line: 43, baseType: !108, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !672, file: !642, line: 45, baseType: !676, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !679)
!679 = !{!680, !681, !682}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !678, file: !642, line: 29, baseType: !108, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !678, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !678, file: !642, line: 37, baseType: !683, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !685)
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !684, file: !602, line: 143, baseType: !108, size: 32)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 192, elements: !180)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !690, file: !694, line: 10, type: !695, isLocal: false, isDefinition: true)
!690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !692, globals: !693, splitDebugInlining: false, nameTableKind: None)
!691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!692 = !{!104, !102, !103}
!693 = !{!688}
!694 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !697)
!697 = !{!698, !699}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !384, line: 17, baseType: !337, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !696, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !702, file: !786, line: 72, type: !869, isLocal: true, isDefinition: true)
!702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !704, retainedTypes: !772, globals: !783, splitDebugInlining: false, nameTableKind: None)
!703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!704 = !{!30, !705}
!705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 65, baseType: !103, size: 32, elements: !706)
!706 = !{!707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771}
!707 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!708 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!709 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!710 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!711 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!712 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!713 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!714 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!715 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!716 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!717 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!718 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!719 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!720 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!721 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!722 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!723 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!724 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!725 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!726 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!727 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!728 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!729 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!730 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!731 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!732 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!733 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!734 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!735 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!736 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!737 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!738 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!739 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!740 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!741 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!742 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!743 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!744 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!745 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!746 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!747 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!748 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!749 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!750 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!751 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!752 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!753 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!754 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!755 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!756 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!757 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!758 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!759 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!760 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!761 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!762 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!763 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!764 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!765 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!766 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!767 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!768 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!769 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!770 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!771 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!772 = !{!132, !103, !102, !773}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !405, line: 244, baseType: !775)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 236, size: 192, elements: !776)
!776 = !{!777, !778, !779, !780, !781, !782}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !775, file: !405, line: 238, baseType: !409, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !775, file: !405, line: 239, baseType: !409, size: 32, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !775, file: !405, line: 240, baseType: !409, size: 32, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !775, file: !405, line: 241, baseType: !409, size: 32, offset: 96)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !775, file: !405, line: 242, baseType: !409, size: 32, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !775, file: !405, line: 243, baseType: !409, size: 32, offset: 160)
!783 = !{!784, !790, !806, !817, !834, !700, !836, !849, !851, !853, !855, !857, !859, !861, !863, !865, !867}
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !702, file: !786, line: 424, type: !787, isLocal: false, isDefinition: true, align: 16)
!786 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 64, elements: !788)
!788 = !{!789}
!789 = !DISubrange(count: 4)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !702, file: !786, line: 424, type: !792, isLocal: false, isDefinition: true, align: 32)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !794)
!794 = !{!795, !796, !797, !798, !804, !805}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !793, file: !429, line: 380, baseType: !337, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !793, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !793, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !793, file: !429, line: 386, baseType: !799, size: 32, offset: 96)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !801)
!801 = !{!802, !803}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !800, file: !429, line: 359, baseType: !185, size: 8)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !800, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !793, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !793, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !702, file: !786, line: 424, type: !808, isLocal: true, isDefinition: true, align: 32)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !810)
!810 = !{!811, !816}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !809, file: !420, line: 60, baseType: !812, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!813 = !DISubroutineType(types: !814)
!814 = !{!103, !815}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !809, file: !420, line: 65, baseType: !815, size: 32, offset: 32)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "exti_data", scope: !702, file: !786, line: 423, type: !819, isLocal: true, isDefinition: true)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !786, line: 107, size: 1472, elements: !820)
!820 = !{!821}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !819, file: !786, line: 109, baseType: !822, size: 1472)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !823, size: 1472, elements: !832)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !786, line: 101, size: 64, elements: !824)
!824 = !{!825, !831}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !823, file: !786, line: 102, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !827, line: 63, baseType: !828)
!827 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !103, !102}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !823, file: !786, line: 103, baseType: !102, size: 32, offset: 32)
!832 = !{!833}
!833 = !DISubrange(count: 23)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !702, file: !786, line: 424, type: !800, isLocal: true, isDefinition: true, align: 8)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !838, file: !786, line: 493, type: !843, isLocal: true, isDefinition: true, align: 32)
!838 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !786, file: !786, line: 460, type: !839, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !841)
!839 = !DISubroutineType(types: !840)
!840 = !{null, !815}
!841 = !{!842}
!842 = !DILocalVariable(name: "dev", arg: 1, scope: !838, file: !786, line: 460, type: !815)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !844)
!844 = !{!845, !846, !847, !848}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !843, file: !10, line: 55, baseType: !331, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !843, file: !10, line: 57, baseType: !331, size: 32, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !843, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !843, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !838, file: !786, line: 497, type: !843, isLocal: true, isDefinition: true, align: 32)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !838, file: !786, line: 507, type: !843, isLocal: true, isDefinition: true, align: 32)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !838, file: !786, line: 512, type: !843, isLocal: true, isDefinition: true, align: 32)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !838, file: !786, line: 516, type: !843, isLocal: true, isDefinition: true, align: 32)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !838, file: !786, line: 523, type: !843, isLocal: true, isDefinition: true, align: 32)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !838, file: !786, line: 527, type: !843, isLocal: true, isDefinition: true, align: 32)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !838, file: !786, line: 581, type: !843, isLocal: true, isDefinition: true, align: 32)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !838, file: !786, line: 586, type: !843, isLocal: true, isDefinition: true, align: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !838, file: !786, line: 591, type: !843, isLocal: true, isDefinition: true, align: 32)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !838, file: !786, line: 595, type: !843, isLocal: true, isDefinition: true, align: 32)
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !870, size: 736, elements: !832)
!870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !871)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !405, line: 134, baseType: !705)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !874, file: !879, line: 22, type: !901, isLocal: false, isDefinition: true, align: 16)
!874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !876, splitDebugInlining: false, nameTableKind: None)
!875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!876 = !{!877, !872, !883, !885, !887, !889, !891, !893, !895, !897, !899}
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !874, file: !879, line: 17, type: !880, isLocal: false, isDefinition: true, align: 16)
!879 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 192, elements: !881)
!881 = !{!882}
!882 = !DISubrange(count: 12)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !874, file: !879, line: 29, type: !787, isLocal: false, isDefinition: true, align: 16)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !874, file: !879, line: 36, type: !787, isLocal: false, isDefinition: true, align: 16)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !874, file: !879, line: 43, type: !787, isLocal: false, isDefinition: true, align: 16)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !874, file: !879, line: 50, type: !787, isLocal: false, isDefinition: true, align: 16)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !874, file: !879, line: 57, type: !787, isLocal: false, isDefinition: true, align: 16)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !874, file: !879, line: 64, type: !787, isLocal: false, isDefinition: true, align: 16)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !874, file: !879, line: 71, type: !787, isLocal: false, isDefinition: true, align: 16)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !874, file: !879, line: 78, type: !787, isLocal: false, isDefinition: true, align: 16)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !874, file: !879, line: 85, type: !787, isLocal: false, isDefinition: true, align: 16)
!901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 48, elements: !902)
!902 = !{!903}
!903 = !DISubrange(count: 3)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !906, file: !970, line: 398, type: !1003, isLocal: true, isDefinition: true)
!906 = distinct !DICompileUnit(language: DW_LANG_C99, file: !907, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !908, retainedTypes: !921, globals: !967, splitDebugInlining: false, nameTableKind: None)
!907 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!908 = !{!909, !30, !914}
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !910, line: 197, baseType: !32, size: 32, elements: !911)
!910 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!911 = !{!912, !913}
!912 = !DIEnumerator(name: "SUCCESS", value: 0)
!913 = !DIEnumerator(name: "ERROR", value: 1)
!914 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !915, line: 44, baseType: !32, size: 32, elements: !916)
!915 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!916 = !{!917, !918, !919, !920}
!917 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!918 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!919 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!920 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!921 = !{!102, !103, !108, !922, !960, !966}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 370, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 336, size: 1152, elements: !925)
!925 = !{!926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !959}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !924, file: !405, line: 338, baseType: !409, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !924, file: !405, line: 339, baseType: !409, size: 32, offset: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !924, file: !405, line: 340, baseType: !409, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !924, file: !405, line: 341, baseType: !409, size: 32, offset: 96)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !924, file: !405, line: 342, baseType: !409, size: 32, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !924, file: !405, line: 343, baseType: !409, size: 32, offset: 160)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !924, file: !405, line: 344, baseType: !409, size: 32, offset: 192)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !924, file: !405, line: 345, baseType: !108, size: 32, offset: 224)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !924, file: !405, line: 346, baseType: !409, size: 32, offset: 256)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !924, file: !405, line: 347, baseType: !409, size: 32, offset: 288)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !924, file: !405, line: 348, baseType: !937, size: 64, offset: 320)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !180)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !924, file: !405, line: 349, baseType: !409, size: 32, offset: 384)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !924, file: !405, line: 350, baseType: !409, size: 32, offset: 416)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !924, file: !405, line: 351, baseType: !409, size: 32, offset: 448)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !924, file: !405, line: 352, baseType: !108, size: 32, offset: 480)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !924, file: !405, line: 353, baseType: !409, size: 32, offset: 512)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !924, file: !405, line: 354, baseType: !409, size: 32, offset: 544)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !924, file: !405, line: 355, baseType: !937, size: 64, offset: 576)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !924, file: !405, line: 356, baseType: !409, size: 32, offset: 640)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !924, file: !405, line: 357, baseType: !409, size: 32, offset: 672)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !924, file: !405, line: 358, baseType: !409, size: 32, offset: 704)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !924, file: !405, line: 359, baseType: !108, size: 32, offset: 736)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !924, file: !405, line: 360, baseType: !409, size: 32, offset: 768)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !924, file: !405, line: 361, baseType: !409, size: 32, offset: 800)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !924, file: !405, line: 362, baseType: !937, size: 64, offset: 832)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !924, file: !405, line: 363, baseType: !409, size: 32, offset: 896)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !924, file: !405, line: 364, baseType: !409, size: 32, offset: 928)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !924, file: !405, line: 365, baseType: !937, size: 64, offset: 960)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !924, file: !405, line: 366, baseType: !409, size: 32, offset: 1024)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !924, file: !405, line: 367, baseType: !409, size: 32, offset: 1056)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !924, file: !405, line: 368, baseType: !958, size: 32, offset: 1088)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 32, elements: !606)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !924, file: !405, line: 369, baseType: !409, size: 32, offset: 1120)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !962, line: 343, size: 64, elements: !963)
!962 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!963 = !{!964, !965}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !961, file: !962, line: 344, baseType: !108, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !961, file: !962, line: 345, baseType: !108, size: 32, offset: 32)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!967 = !{!968, !974, !990, !1001, !904}
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !906, file: !970, line: 752, type: !971, isLocal: false, isDefinition: true, align: 16)
!970 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 704, elements: !972)
!972 = !{!973}
!973 = !DISubrange(count: 44)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !906, file: !970, line: 752, type: !976, isLocal: false, isDefinition: true, align: 32)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !978)
!978 = !{!979, !980, !981, !982, !988, !989}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !977, file: !429, line: 380, baseType: !337, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !977, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !977, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !977, file: !429, line: 386, baseType: !983, size: 32, offset: 96)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !985)
!985 = !{!986, !987}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !984, file: !429, line: 359, baseType: !185, size: 8)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !984, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !977, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !977, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !906, file: !970, line: 752, type: !992, isLocal: true, isDefinition: true, align: 32)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !994)
!994 = !{!995, !1000}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !993, file: !420, line: 60, baseType: !996, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = !DISubroutineType(types: !998)
!998 = !{!103, !999}
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !993, file: !420, line: 65, baseType: !999, size: 32, offset: 32)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !906, file: !970, line: 752, type: !984, isLocal: true, isDefinition: true, align: 8)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !915, line: 100, size: 224, elements: !1004)
!1004 = !{!1005, !1011, !1012, !1021, !1026, !1031, !1037}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1003, file: !915, line: 101, baseType: !1006, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !915, line: 76, baseType: !1007)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!103, !999, !1010}
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !915, line: 56, baseType: !102)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1003, file: !915, line: 102, baseType: !1006, size: 32, offset: 32)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1003, file: !915, line: 103, baseType: !1013, size: 32, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !915, line: 83, baseType: !1014)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!103, !999, !1010, !1017, !102}
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !915, line: 72, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{null, !999, !1010, !102}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1003, file: !915, line: 104, baseType: !1022, size: 32, offset: 96)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !915, line: 79, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!103, !999, !1010, !966}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1003, file: !915, line: 105, baseType: !1027, size: 32, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !915, line: 88, baseType: !1028)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!914, !999, !1010}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1003, file: !915, line: 106, baseType: !1032, size: 32, offset: 160)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !915, line: 92, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!103, !999, !1010, !1036}
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !915, line: 64, baseType: !102)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1003, file: !915, line: 107, baseType: !1038, size: 32, offset: 192)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !915, line: 96, baseType: !1039)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!103, !999, !1010, !102}
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1044, file: !1101, line: 603, type: !1103, isLocal: true, isDefinition: true, align: 32)
!1044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1045, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1046, globals: !1098, splitDebugInlining: false, nameTableKind: None)
!1045 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!1046 = !{!102, !103, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1050, line: 336, size: 160, elements: !1051)
!1050 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1051 = !{!1052, !1072, !1076, !1080, !1093}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1049, file: !1050, line: 365, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!103, !1056, !1071}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063, !1069, !1070}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1058, file: !429, line: 380, baseType: !337, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1058, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1058, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1058, file: !429, line: 386, baseType: !1064, size: 32, offset: 96)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1065, file: !429, line: 359, baseType: !185, size: 8)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1065, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1058, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1058, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1049, file: !1050, line: 366, baseType: !1073, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !1056, !186}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1049, file: !1050, line: 374, baseType: !1077, size: 32, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!103, !1056}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1049, file: !1050, line: 377, baseType: !1081, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!103, !1056, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1050, line: 122, size: 64, elements: !1087)
!1087 = !{!1088, !1089, !1090, !1091, !1092}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1086, file: !1050, line: 123, baseType: !108, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1086, file: !1050, line: 124, baseType: !185, size: 8, offset: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1086, file: !1050, line: 125, baseType: !185, size: 8, offset: 40)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1086, file: !1050, line: 126, baseType: !185, size: 8, offset: 48)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1086, file: !1050, line: 127, baseType: !185, size: 8, offset: 56)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1049, file: !1050, line: 379, baseType: !1094, size: 32, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!103, !1056, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!1098 = !{!1042, !1099}
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1044, file: !1101, line: 38, type: !1102, isLocal: true, isDefinition: true)
!1101 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1056)
!1103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1105)
!1105 = !{!1106, !1107}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1104, file: !420, line: 60, baseType: !1077, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1104, file: !420, line: 65, baseType: !1056, size: 32, offset: 32)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1110, file: !1279, line: 762, type: !1388, isLocal: true, isDefinition: true)
!1110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1112, retainedTypes: !1130, globals: !1276, splitDebugInlining: false, nameTableKind: None)
!1111 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!1112 = !{!30, !1113, !1119, !1124, !914}
!1113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1114, line: 506, baseType: !32, size: 32, elements: !1115)
!1114 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1115 = !{!1116, !1117, !1118}
!1116 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1117 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1118 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1114, line: 512, baseType: !32, size: 32, elements: !1120)
!1120 = !{!1121, !1122, !1123}
!1121 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1122 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1123 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !827, line: 43, baseType: !32, size: 32, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1129}
!1126 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1127 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1128 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1129 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1130 = !{!102, !103, !1131, !1201, !1206, !1166, !1119, !1113, !1211, !1212, !108, !1226, !1181, !277, !1236, !1237}
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1114, line: 523, size: 288, elements: !1134)
!1134 = !{!1135, !1156, !1162, !1167, !1171, !1172, !1173, !1177, !1197}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1133, file: !1114, line: 524, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!103, !1139, !1154, !1155}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1152, !1153}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1141, file: !429, line: 380, baseType: !337, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1141, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1141, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1141, file: !429, line: 386, baseType: !1147, size: 32, offset: 96)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1149)
!1149 = !{!1150, !1151}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1148, file: !429, line: 359, baseType: !185, size: 8)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1148, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1141, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1141, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1114, line: 237, baseType: !185)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1114, line: 257, baseType: !108)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1133, file: !1114, line: 530, baseType: !1157, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!103, !1139, !1160}
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1114, line: 229, baseType: !108)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1133, file: !1114, line: 532, baseType: !1163, size: 32, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!103, !1139, !1166, !1161}
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1114, line: 216, baseType: !108)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1133, file: !1114, line: 535, baseType: !1168, size: 32, offset: 96)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!103, !1139, !1166}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1133, file: !1114, line: 537, baseType: !1168, size: 32, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1133, file: !1114, line: 539, baseType: !1168, size: 32, offset: 160)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1133, file: !1114, line: 541, baseType: !1174, size: 32, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!103, !1139, !1154, !1113, !1119}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1133, file: !1114, line: 544, baseType: !1178, size: 32, offset: 224)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!103, !1139, !1181, !131}
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1114, line: 478, size: 96, elements: !1183)
!1183 = !{!1184, !1191, !1196}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1182, file: !1114, line: 482, baseType: !1185, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1186, line: 33, baseType: !1187)
!1186 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1186, line: 29, size: 32, elements: !1188)
!1188 = !{!1189}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1187, file: !1186, line: 30, baseType: !1190, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1182, file: !1114, line: 485, baseType: !1192, size: 32, offset: 32)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1114, line: 464, baseType: !1193)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{null, !1139, !1181, !1166}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1182, file: !1114, line: 493, baseType: !1166, size: 32, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1133, file: !1114, line: 547, baseType: !1198, size: 32, offset: 256)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!108, !1139}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1114, line: 428, size: 32, elements: !1204)
!1204 = !{!1205}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1203, file: !1114, line: 434, baseType: !1166, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1114, line: 441, size: 32, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1208, file: !1114, line: 447, baseType: !1166, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 276, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 265, size: 320, elements: !1215)
!1215 = !{!1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1214, file: !405, line: 267, baseType: !409, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1214, file: !405, line: 268, baseType: !409, size: 32, offset: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1214, file: !405, line: 269, baseType: !409, size: 32, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1214, file: !405, line: 270, baseType: !409, size: 32, offset: 96)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1214, file: !405, line: 271, baseType: !409, size: 32, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1214, file: !405, line: 272, baseType: !409, size: 32, offset: 160)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1214, file: !405, line: 273, baseType: !409, size: 32, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1214, file: !405, line: 274, baseType: !409, size: 32, offset: 224)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1214, file: !405, line: 275, baseType: !1225, size: 64, offset: 256)
!1225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !180)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !405, line: 289, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 282, size: 288, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1234, !1235}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1228, file: !405, line: 284, baseType: !409, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1228, file: !405, line: 285, baseType: !409, size: 32, offset: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1228, file: !405, line: 286, baseType: !1233, size: 128, offset: 64)
!1233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 128, elements: !788)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1228, file: !405, line: 287, baseType: !937, size: 64, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1228, file: !405, line: 288, baseType: !409, size: 32, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !915, line: 100, size: 224, elements: !1240)
!1240 = !{!1241, !1246, !1247, !1256, !1261, !1266, !1271}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1239, file: !915, line: 101, baseType: !1242, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !915, line: 76, baseType: !1243)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!103, !1139, !1010}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1239, file: !915, line: 102, baseType: !1242, size: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1239, file: !915, line: 103, baseType: !1248, size: 32, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !915, line: 83, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!103, !1139, !1010, !1252, !102}
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !915, line: 72, baseType: !1253)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{null, !1139, !1010, !102}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1239, file: !915, line: 104, baseType: !1257, size: 32, offset: 96)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !915, line: 79, baseType: !1258)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!103, !1139, !1010, !966}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1239, file: !915, line: 105, baseType: !1262, size: 32, offset: 128)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !915, line: 88, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!914, !1139, !1010}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1239, file: !915, line: 106, baseType: !1267, size: 32, offset: 160)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !915, line: 92, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!103, !1139, !1010, !1036}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1239, file: !915, line: 107, baseType: !1272, size: 32, offset: 192)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !915, line: 96, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!103, !1139, !1010, !102}
!1276 = !{!1277, !1283, !1285, !1295, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1314, !1316, !1318, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1108, !1384, !1386, !1399, !1401, !1403, !1405, !1407, !1409}
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1110, file: !1279, line: 762, type: !1280, isLocal: false, isDefinition: true, align: 16)
!1279 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 80, elements: !1281)
!1281 = !{!1282}
!1282 = !DISubrange(count: 5)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1110, file: !1279, line: 762, type: !1140, isLocal: false, isDefinition: true, align: 32)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1110, file: !1279, line: 762, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1289)
!1289 = !{!1290, !1294}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1288, file: !420, line: 60, baseType: !1291, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!103, !1139}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1288, file: !420, line: 65, baseType: !1139, size: 32, offset: 32)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1110, file: !1279, line: 766, type: !1297, isLocal: false, isDefinition: true, align: 16)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 160, elements: !1298)
!1298 = !{!1299}
!1299 = !DISubrange(count: 10)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1110, file: !1279, line: 766, type: !1140, isLocal: false, isDefinition: true, align: 32)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1110, file: !1279, line: 766, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1110, file: !1279, line: 770, type: !1280, isLocal: false, isDefinition: true, align: 16)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1110, file: !1279, line: 770, type: !1140, isLocal: false, isDefinition: true, align: 32)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1110, file: !1279, line: 770, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1110, file: !1279, line: 774, type: !1280, isLocal: false, isDefinition: true, align: 16)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1110, file: !1279, line: 774, type: !1140, isLocal: false, isDefinition: true, align: 32)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1110, file: !1279, line: 774, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1110, file: !1279, line: 778, type: !1280, isLocal: false, isDefinition: true, align: 16)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1110, file: !1279, line: 778, type: !1140, isLocal: false, isDefinition: true, align: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1110, file: !1279, line: 778, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1110, file: !1279, line: 782, type: !1280, isLocal: false, isDefinition: true, align: 16)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1110, file: !1279, line: 782, type: !1140, isLocal: false, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1110, file: !1279, line: 782, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1110, file: !1279, line: 786, type: !1280, isLocal: false, isDefinition: true, align: 16)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1110, file: !1279, line: 786, type: !1140, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1110, file: !1279, line: 786, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1110, file: !1279, line: 790, type: !1280, isLocal: false, isDefinition: true, align: 16)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1110, file: !1279, line: 790, type: !1140, isLocal: false, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1110, file: !1279, line: 790, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1110, file: !1279, line: 762, type: !1342, isLocal: true, isDefinition: true)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1343, line: 237, size: 128, elements: !1344)
!1343 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1344 = !{!1345, !1346, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1342, file: !1343, line: 239, baseType: !1208, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1342, file: !1343, line: 241, baseType: !1139, size: 32, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1342, file: !1343, line: 243, baseType: !1348, size: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1186, line: 40, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1186, line: 35, size: 64, elements: !1350)
!1350 = !{!1351, !1353}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1349, file: !1186, line: 36, baseType: !1352, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1349, file: !1186, line: 37, baseType: !1352, size: 32, offset: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1110, file: !1279, line: 762, type: !1148, isLocal: true, isDefinition: true, align: 8)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1110, file: !1279, line: 766, type: !1342, isLocal: true, isDefinition: true)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1110, file: !1279, line: 766, type: !1148, isLocal: true, isDefinition: true, align: 8)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1110, file: !1279, line: 770, type: !1342, isLocal: true, isDefinition: true)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1110, file: !1279, line: 770, type: !1148, isLocal: true, isDefinition: true, align: 8)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1110, file: !1279, line: 774, type: !1342, isLocal: true, isDefinition: true)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1110, file: !1279, line: 774, type: !1148, isLocal: true, isDefinition: true, align: 8)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1110, file: !1279, line: 778, type: !1342, isLocal: true, isDefinition: true)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1110, file: !1279, line: 778, type: !1148, isLocal: true, isDefinition: true, align: 8)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1110, file: !1279, line: 782, type: !1342, isLocal: true, isDefinition: true)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1110, file: !1279, line: 782, type: !1148, isLocal: true, isDefinition: true, align: 8)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1110, file: !1279, line: 786, type: !1342, isLocal: true, isDefinition: true)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1110, file: !1279, line: 786, type: !1148, isLocal: true, isDefinition: true, align: 8)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1110, file: !1279, line: 790, type: !1342, isLocal: true, isDefinition: true)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1110, file: !1279, line: 790, type: !1148, isLocal: true, isDefinition: true, align: 8)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1110, file: !1279, line: 656, type: !1132, isLocal: true, isDefinition: true)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1110, file: !1279, line: 766, type: !1388, isLocal: true, isDefinition: true)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1343, line: 224, size: 160, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1389, file: !1343, line: 226, baseType: !1203, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1389, file: !1343, line: 228, baseType: !966, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1389, file: !1343, line: 230, baseType: !103, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1389, file: !1343, line: 231, baseType: !1395, size: 64, offset: 96)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !962, line: 343, size: 64, elements: !1396)
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1395, file: !962, line: 344, baseType: !108, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1395, file: !962, line: 345, baseType: !108, size: 32, offset: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1110, file: !1279, line: 770, type: !1388, isLocal: true, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1110, file: !1279, line: 774, type: !1388, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1110, file: !1279, line: 778, type: !1388, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1110, file: !1279, line: 782, type: !1388, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1110, file: !1279, line: 786, type: !1388, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1110, file: !1279, line: 790, type: !1388, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1413, file: !1552, line: 44, type: !1630, isLocal: false, isDefinition: true)
!1413 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1414, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1415, retainedTypes: !1448, globals: !1549, splitDebugInlining: false, nameTableKind: None)
!1414 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!1415 = !{!30, !1416, !1423, !1430, !1437, !1443, !914}
!1416 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1050, line: 47, baseType: !32, size: 32, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422}
!1418 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1419 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1420 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1421 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1422 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1423 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1050, line: 75, baseType: !32, size: 32, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428, !1429}
!1425 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1426 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1427 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1428 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1429 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1050, line: 92, baseType: !32, size: 32, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436}
!1432 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1433 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1434 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1435 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1436 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1437 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1050, line: 84, baseType: !32, size: 32, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442}
!1439 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1440 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1441 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1442 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1443 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1050, line: 107, baseType: !32, size: 32, elements: !1444)
!1444 = !{!1445, !1446, !1447}
!1445 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1446 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1447 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1448 = !{!102, !103, !1449, !186, !185, !1498, !108, !1010, !1509, !121, !109, !1548}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1050, line: 336, size: 160, elements: !1452)
!1452 = !{!1453, !1472, !1476, !1480, !1493}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1451, file: !1050, line: 365, baseType: !1454, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!103, !1457, !1071}
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1459)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1470, !1471}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1459, file: !429, line: 380, baseType: !337, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1459, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1459, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1459, file: !429, line: 386, baseType: !1465, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1467)
!1467 = !{!1468, !1469}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1466, file: !429, line: 359, baseType: !185, size: 8)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1466, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1459, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1459, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1451, file: !1050, line: 366, baseType: !1473, size: 32, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{null, !1457, !186}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1451, file: !1050, line: 374, baseType: !1477, size: 32, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!103, !1457}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1451, file: !1050, line: 377, baseType: !1481, size: 32, offset: 96)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!103, !1457, !1484}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1050, line: 122, size: 64, elements: !1487)
!1487 = !{!1488, !1489, !1490, !1491, !1492}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1486, file: !1050, line: 123, baseType: !108, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1486, file: !1050, line: 124, baseType: !185, size: 8, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1486, file: !1050, line: 125, baseType: !185, size: 8, offset: 40)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1486, file: !1050, line: 126, baseType: !185, size: 8, offset: 48)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1486, file: !1050, line: 127, baseType: !185, size: 8, offset: 56)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1451, file: !1050, line: 379, baseType: !1494, size: 32, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!103, !1457, !1497}
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !405, line: 508, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 499, size: 224, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1500, file: !405, line: 501, baseType: !409, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1500, file: !405, line: 502, baseType: !409, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1500, file: !405, line: 503, baseType: !409, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1500, file: !405, line: 504, baseType: !409, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1500, file: !405, line: 505, baseType: !409, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1500, file: !405, line: 506, baseType: !409, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1500, file: !405, line: 507, baseType: !409, size: 32, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !915, line: 100, size: 224, elements: !1512)
!1512 = !{!1513, !1518, !1519, !1528, !1533, !1538, !1543}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1511, file: !915, line: 101, baseType: !1514, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !915, line: 76, baseType: !1515)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!103, !1457, !1010}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1511, file: !915, line: 102, baseType: !1514, size: 32, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1511, file: !915, line: 103, baseType: !1520, size: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !915, line: 83, baseType: !1521)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!103, !1457, !1010, !1524, !102}
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !915, line: 72, baseType: !1525)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{null, !1457, !1010, !102}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1511, file: !915, line: 104, baseType: !1529, size: 32, offset: 96)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !915, line: 79, baseType: !1530)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!103, !1457, !1010, !966}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1511, file: !915, line: 105, baseType: !1534, size: 32, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !915, line: 88, baseType: !1535)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!914, !1457, !1010}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1511, file: !915, line: 106, baseType: !1539, size: 32, offset: 160)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !915, line: 92, baseType: !1540)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!103, !1457, !1010, !1036}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1511, file: !915, line: 107, baseType: !1544, size: 32, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !915, line: 96, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!103, !1457, !1010, !102}
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!1549 = !{!1411, !1550, !1556, !1558, !1565, !1567, !1611, !1614, !1616, !1619, !1622, !1624}
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1413, file: !1552, line: 1914, type: !1553, isLocal: false, isDefinition: true, align: 16)
!1552 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 128, elements: !1554)
!1554 = !{!1555}
!1555 = !DISubrange(count: 8)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1413, file: !1552, line: 1914, type: !1458, isLocal: false, isDefinition: true, align: 32)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1413, file: !1552, line: 1914, type: !1560, isLocal: true, isDefinition: true, align: 32)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1562)
!1562 = !{!1563, !1564}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1561, file: !420, line: 60, baseType: !1477, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1561, file: !420, line: 65, baseType: !1457, size: 32, offset: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1413, file: !1552, line: 1914, type: !1466, isLocal: true, isDefinition: true, align: 8)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1413, file: !1552, line: 1914, type: !1569, isLocal: true, isDefinition: true)
!1569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1571, line: 22, size: 224, elements: !1572)
!1571 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1572 = !{!1573, !1574, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1570, file: !1571, line: 24, baseType: !1498, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1570, file: !1571, line: 26, baseType: !1575, size: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !962, line: 343, size: 64, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1577, file: !962, line: 344, baseType: !108, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1577, file: !962, line: 345, baseType: !108, size: 32, offset: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1570, file: !1571, line: 28, baseType: !132, size: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1570, file: !1571, line: 30, baseType: !131, size: 8, offset: 96)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1570, file: !1571, line: 32, baseType: !103, size: 32, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1570, file: !1571, line: 34, baseType: !131, size: 8, offset: 160)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1570, file: !1571, line: 36, baseType: !131, size: 8, offset: 168)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1570, file: !1571, line: 38, baseType: !131, size: 8, offset: 176)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1570, file: !1571, line: 40, baseType: !131, size: 8, offset: 184)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1570, file: !1571, line: 41, baseType: !1589, size: 32, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1592, line: 60, size: 64, elements: !1593)
!1592 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1593 = !{!1594, !1610}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1591, file: !1592, line: 69, baseType: !1595, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1592, line: 50, size: 64, elements: !1598)
!1598 = !{!1599, !1608, !1609}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1597, file: !1592, line: 52, baseType: !1600, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1603, line: 37, baseType: !1604)
!1603 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1603, line: 32, size: 64, elements: !1605)
!1605 = !{!1606, !1607}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1604, file: !1603, line: 34, baseType: !108, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1604, file: !1603, line: 36, baseType: !108, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1597, file: !1592, line: 54, baseType: !185, size: 8, offset: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1597, file: !1592, line: 56, baseType: !185, size: 8, offset: 40)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1591, file: !1592, line: 71, baseType: !185, size: 8, offset: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1413, file: !1552, line: 1914, type: !1613, isLocal: true, isDefinition: true)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1576, size: 64, elements: !606)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1413, file: !1552, line: 1914, type: !1590, isLocal: true, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1413, file: !1552, line: 1914, type: !1618, isLocal: true, isDefinition: true)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1596, size: 64, elements: !606)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1413, file: !1552, line: 1914, type: !1621, isLocal: true, isDefinition: true)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1601, size: 128, elements: !180)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1413, file: !1552, line: 1539, type: !1450, isLocal: true, isDefinition: true)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1413, file: !1552, line: 1914, type: !1626, isLocal: true, isDefinition: true)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1571, line: 74, size: 64, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1626, file: !1571, line: 76, baseType: !108, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1626, file: !1571, line: 78, baseType: !1457, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !1632)
!1632 = !{!1633, !1634}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1631, file: !384, line: 17, baseType: !337, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1631, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1637, file: !1713, line: 65, type: !409, isLocal: true, isDefinition: true)
!1637 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1638, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1639, retainedTypes: !1640, globals: !1710, splitDebugInlining: false, nameTableKind: None)
!1638 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!1639 = !{!705}
!1640 = !{!104, !1641, !331, !185, !108, !1649, !1680}
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !1644)
!1644 = !{!1645, !1646, !1647, !1648}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1643, file: !624, line: 766, baseType: !409, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1643, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1643, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1643, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !1651)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !1652)
!1652 = !{!1653, !1655, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1670, !1675, !1679}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1651, file: !624, line: 413, baseType: !1654, size: 256)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 256, elements: !1554)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1651, file: !624, line: 414, baseType: !1656, size: 768, offset: 256)
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1657)
!1657 = !{!1658}
!1658 = !DISubrange(count: 24)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1651, file: !624, line: 415, baseType: !1654, size: 256, offset: 1024)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1651, file: !624, line: 416, baseType: !1656, size: 768, offset: 1280)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1651, file: !624, line: 417, baseType: !1654, size: 256, offset: 2048)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1651, file: !624, line: 418, baseType: !1656, size: 768, offset: 2304)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1651, file: !624, line: 419, baseType: !1654, size: 256, offset: 3072)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1651, file: !624, line: 420, baseType: !1656, size: 768, offset: 3328)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1651, file: !624, line: 421, baseType: !1654, size: 256, offset: 4096)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1651, file: !624, line: 422, baseType: !1667, size: 1792, offset: 4352)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1668)
!1668 = !{!1669}
!1669 = !DISubrange(count: 56)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1651, file: !624, line: 423, baseType: !1671, size: 1920, offset: 6144)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1672, size: 1920, elements: !1673)
!1672 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1673 = !{!1674}
!1674 = !DISubrange(count: 240)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1651, file: !624, line: 424, baseType: !1676, size: 20608, offset: 8064)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1677)
!1677 = !{!1678}
!1678 = !DISubrange(count: 644)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1651, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1682)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1683)
!1683 = !{!1684, !1685, !1686, !1687, !1688, !1689, !1690, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1701, !1702, !1703, !1705, !1707, !1709}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1682, file: !624, line: 447, baseType: !628, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1682, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1682, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1682, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1682, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1682, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1682, file: !624, line: 453, baseType: !1691, size: 96, offset: 192)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1672, size: 96, elements: !881)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1682, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1682, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1682, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1682, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1682, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1682, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1682, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1682, file: !624, line: 461, baseType: !1700, size: 64, offset: 512)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 64, elements: !180)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1682, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1682, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1682, file: !624, line: 464, baseType: !1704, size: 128, offset: 640)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 128, elements: !788)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1682, file: !624, line: 465, baseType: !1706, size: 160, offset: 768)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 160, elements: !1281)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1682, file: !624, line: 466, baseType: !1708, size: 160, offset: 928)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1281)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1682, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!1710 = !{!1711, !1737, !1740, !1742, !1744, !1635}
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1637, file: !1713, line: 285, type: !1714, isLocal: true, isDefinition: true, align: 32)
!1713 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1716)
!1716 = !{!1717, !1736}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1715, file: !420, line: 60, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!103, !1721}
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1734, !1735}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1723, file: !429, line: 380, baseType: !337, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1723, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1723, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1723, file: !429, line: 386, baseType: !1729, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1731)
!1731 = !{!1732, !1733}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1730, file: !429, line: 359, baseType: !185, size: 8)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1730, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1723, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1723, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1715, file: !420, line: 65, baseType: !1721, size: 32, offset: 32)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "lock", scope: !1637, file: !1713, line: 34, type: !1739, isLocal: true, isDefinition: true)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "last_load", scope: !1637, file: !1713, line: 36, type: !108, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1637, file: !1713, line: 48, type: !108, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1637, file: !1713, line: 54, type: !108, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1748, file: !1830, line: 22, type: !1832, isLocal: true, isDefinition: true)
!1748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1749, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1750, retainedTypes: !1751, globals: !1827, splitDebugInlining: false, nameTableKind: None)
!1749 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!1750 = !{!1113, !1119}
!1751 = !{!1752, !1816, !1821, !1166, !1119, !1113, !1826, !102}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1114, line: 523, size: 288, elements: !1755)
!1755 = !{!1756, !1775, !1779, !1783, !1787, !1788, !1789, !1793, !1812}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1754, file: !1114, line: 524, baseType: !1757, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{!103, !1760, !1154, !1155}
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1773, !1774}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1762, file: !429, line: 380, baseType: !337, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1762, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1762, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1762, file: !429, line: 386, baseType: !1768, size: 32, offset: 96)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1769, file: !429, line: 359, baseType: !185, size: 8)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1769, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1762, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1762, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1754, file: !1114, line: 530, baseType: !1776, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!103, !1760, !1160}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1754, file: !1114, line: 532, baseType: !1780, size: 32, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!103, !1760, !1166, !1161}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1754, file: !1114, line: 535, baseType: !1784, size: 32, offset: 96)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!103, !1760, !1166}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1754, file: !1114, line: 537, baseType: !1784, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1754, file: !1114, line: 539, baseType: !1784, size: 32, offset: 160)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1754, file: !1114, line: 541, baseType: !1790, size: 32, offset: 192)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!103, !1760, !1154, !1113, !1119}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1754, file: !1114, line: 544, baseType: !1794, size: 32, offset: 224)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!103, !1760, !1797, !131}
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1114, line: 478, size: 96, elements: !1799)
!1799 = !{!1800, !1806, !1811}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1798, file: !1114, line: 482, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1186, line: 33, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1186, line: 29, size: 32, elements: !1803)
!1803 = !{!1804}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1802, file: !1186, line: 30, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1798, file: !1114, line: 485, baseType: !1807, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1114, line: 464, baseType: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{null, !1760, !1797, !1166}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1798, file: !1114, line: 493, baseType: !1166, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1754, file: !1114, line: 547, baseType: !1813, size: 32, offset: 256)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!108, !1760}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1114, line: 428, size: 32, elements: !1819)
!1819 = !{!1820}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1818, file: !1114, line: 434, baseType: !1166, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1114, line: 441, size: 32, elements: !1824)
!1824 = !{!1825}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1823, file: !1114, line: 447, baseType: !1166, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1827 = !{!1828, !1746}
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1829 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1748, file: !1830, line: 37, type: !1831, isLocal: true, isDefinition: true)
!1830 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1833, size: 352, elements: !1834)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!1834 = !{!1835}
!1835 = !DISubrange(count: 11)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1838, file: !1880, line: 139, type: !1887, isLocal: false, isDefinition: true)
!1838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1840, globals: !1877, splitDebugInlining: false, nameTableKind: None)
!1839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!1840 = !{!1841}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 370, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 336, size: 1152, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1843, file: !405, line: 338, baseType: !409, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1843, file: !405, line: 339, baseType: !409, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1843, file: !405, line: 340, baseType: !409, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1843, file: !405, line: 341, baseType: !409, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1843, file: !405, line: 342, baseType: !409, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1843, file: !405, line: 343, baseType: !409, size: 32, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1843, file: !405, line: 344, baseType: !409, size: 32, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1843, file: !405, line: 345, baseType: !108, size: 32, offset: 224)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1843, file: !405, line: 346, baseType: !409, size: 32, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1843, file: !405, line: 347, baseType: !409, size: 32, offset: 288)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1843, file: !405, line: 348, baseType: !937, size: 64, offset: 320)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1843, file: !405, line: 349, baseType: !409, size: 32, offset: 384)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1843, file: !405, line: 350, baseType: !409, size: 32, offset: 416)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1843, file: !405, line: 351, baseType: !409, size: 32, offset: 448)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1843, file: !405, line: 352, baseType: !108, size: 32, offset: 480)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1843, file: !405, line: 353, baseType: !409, size: 32, offset: 512)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1843, file: !405, line: 354, baseType: !409, size: 32, offset: 544)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1843, file: !405, line: 355, baseType: !937, size: 64, offset: 576)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1843, file: !405, line: 356, baseType: !409, size: 32, offset: 640)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1843, file: !405, line: 357, baseType: !409, size: 32, offset: 672)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1843, file: !405, line: 358, baseType: !409, size: 32, offset: 704)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1843, file: !405, line: 359, baseType: !108, size: 32, offset: 736)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1843, file: !405, line: 360, baseType: !409, size: 32, offset: 768)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1843, file: !405, line: 361, baseType: !409, size: 32, offset: 800)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1843, file: !405, line: 362, baseType: !937, size: 64, offset: 832)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1843, file: !405, line: 363, baseType: !409, size: 32, offset: 896)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1843, file: !405, line: 364, baseType: !409, size: 32, offset: 928)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1843, file: !405, line: 365, baseType: !937, size: 64, offset: 960)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1843, file: !405, line: 366, baseType: !409, size: 32, offset: 1024)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1843, file: !405, line: 367, baseType: !409, size: 32, offset: 1056)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1843, file: !405, line: 368, baseType: !958, size: 32, offset: 1088)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1843, file: !405, line: 369, baseType: !409, size: 32, offset: 1120)
!1877 = !{!1878, !1881, !1836}
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1838, file: !1880, line: 137, type: !108, isLocal: false, isDefinition: true)
!1880 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1838, file: !1880, line: 138, type: !1883, isLocal: false, isDefinition: true)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1884, size: 128, elements: !1885)
!1884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1885 = !{!1886}
!1886 = !DISubrange(count: 16)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1884, size: 64, elements: !1554)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1890, file: !1893, line: 23, type: !1894, isLocal: false, isDefinition: true)
!1890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !1892, splitDebugInlining: false, nameTableKind: None)
!1891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!1892 = !{!1888}
!1893 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1897, file: !1901, line: 37, type: !2152, isLocal: false, isDefinition: true)
!1897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1899, retainedTypes: !1908, globals: !1981, splitDebugInlining: false, nameTableKind: None)
!1898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!1899 = !{!1900, !30, !705}
!1900 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1901, line: 63, baseType: !32, size: 32, elements: !1902)
!1901 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1902 = !{!1903, !1904, !1905, !1906, !1907}
!1903 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1904 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1905 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1906 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1907 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1908 = !{!132, !102, !103, !1909, !277, !108, !1939, !331, !185, !1964}
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1912, line: 51, size: 64, elements: !1913)
!1912 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1913 = !{!1914, !1934}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1911, file: !1912, line: 52, baseType: !1915, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1912, line: 38, baseType: !1916)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!103, !1919, !379, !121}
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1922)
!1922 = !{!1923, !1924, !1925, !1926, !1932, !1933}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1921, file: !429, line: 380, baseType: !337, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1921, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1921, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1921, file: !429, line: 386, baseType: !1927, size: 32, offset: 96)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1929)
!1929 = !{!1930, !1931}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1928, file: !429, line: 359, baseType: !185, size: 8)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1928, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1921, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1921, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1911, file: !1912, line: 53, baseType: !1935, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1912, line: 47, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!103, !1919, !379, !121, !108}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1941, file: !624, line: 447, baseType: !628, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1941, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1941, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1941, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1941, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1941, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1941, file: !624, line: 453, baseType: !1691, size: 96, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1941, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1941, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1941, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1941, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1941, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1941, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1941, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1941, file: !624, line: 461, baseType: !1700, size: 64, offset: 512)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1941, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1941, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1941, file: !624, line: 464, baseType: !1704, size: 128, offset: 640)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1941, file: !624, line: 465, baseType: !1706, size: 160, offset: 768)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1941, file: !624, line: 466, baseType: !1708, size: 160, offset: 928)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1941, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1966, file: !624, line: 413, baseType: !1654, size: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1966, file: !624, line: 414, baseType: !1656, size: 768, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1966, file: !624, line: 415, baseType: !1654, size: 256, offset: 1024)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1966, file: !624, line: 416, baseType: !1656, size: 768, offset: 1280)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1966, file: !624, line: 417, baseType: !1654, size: 256, offset: 2048)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1966, file: !624, line: 418, baseType: !1656, size: 768, offset: 2304)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1966, file: !624, line: 419, baseType: !1654, size: 256, offset: 3072)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1966, file: !624, line: 420, baseType: !1656, size: 768, offset: 3328)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1966, file: !624, line: 421, baseType: !1654, size: 256, offset: 4096)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1966, file: !624, line: 422, baseType: !1667, size: 1792, offset: 4352)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1966, file: !624, line: 423, baseType: !1671, size: 1920, offset: 6144)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1966, file: !624, line: 424, baseType: !1676, size: 20608, offset: 8064)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1966, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!1981 = !{!1895, !1982, !2104, !2110, !2112, !2115, !2120, !2122, !2127}
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "_kernel", scope: !1897, file: !1901, line: 40, type: !1984, isLocal: false, isDefinition: true)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !141, line: 158, size: 288, elements: !1985)
!1985 = !{!1986, !2099}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1984, file: !141, line: 159, baseType: !1987, size: 192)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 192, elements: !606)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !141, line: 100, size: 192, elements: !1989)
!1989 = !{!1990, !1991, !1992, !2093, !2094, !2095, !2096}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1988, file: !141, line: 102, baseType: !108, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1988, file: !141, line: 105, baseType: !277, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1988, file: !141, line: 108, baseType: !1993, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !1995)
!1995 = !{!1996, !2054, !2066, !2067, !2068, !2069, !2075, !2088}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1994, file: !163, line: 247, baseType: !1997, size: 384)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !1998)
!1998 = !{!1999, !2023, !2030, !2031, !2032, !2041, !2042, !2043}
!1999 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !163, line: 60, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !163, line: 60, size: 64, elements: !2001)
!2001 = !{!2002, !2017}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2000, file: !163, line: 61, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2005)
!2005 = !{!2006, !2012}
!2006 = !DIDerivedType(tag: DW_TAG_member, scope: !2004, file: !146, line: 38, baseType: !2007, size: 32)
!2007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2004, file: !146, line: 38, size: 32, elements: !2008)
!2008 = !{!2009, !2011}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2007, file: !146, line: 39, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2007, file: !146, line: 40, baseType: !2010, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, scope: !2004, file: !146, line: 42, baseType: !2013, size: 32, offset: 32)
!2013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2004, file: !146, line: 42, size: 32, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2013, file: !146, line: 43, baseType: !2010, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2013, file: !146, line: 44, baseType: !2010, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2000, file: !163, line: 62, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2019)
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2018, file: !175, line: 50, baseType: !2021, size: 64)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2022, size: 64, elements: !180)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1997, file: !163, line: 68, baseType: !2024, size: 32, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2027)
!2027 = !{!2028}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2026, file: !141, line: 232, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2004)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1997, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1997, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !163, line: 90, baseType: !2033, size: 16, offset: 112)
!2033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !163, line: 90, size: 16, elements: !2034)
!2034 = !{!2035, !2040}
!2035 = !DIDerivedType(tag: DW_TAG_member, scope: !2033, file: !163, line: 91, baseType: !2036, size: 16)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2033, file: !163, line: 91, size: 16, elements: !2037)
!2037 = !{!2038, !2039}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2036, file: !163, line: 96, baseType: !195, size: 8)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2036, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2033, file: !163, line: 100, baseType: !121, size: 16)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1997, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1997, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1997, file: !163, line: 131, baseType: !2044, size: 192, offset: 192)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2045)
!2045 = !{!2046, !2047, !2053}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2044, file: !141, line: 245, baseType: !2003, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2044, file: !141, line: 246, baseType: !2048, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2049)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{null, !2052}
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2044, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1994, file: !163, line: 250, baseType: !2055, size: 288, offset: 384)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2055, file: !214, line: 26, baseType: !108, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2055, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2055, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2055, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2055, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2055, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2055, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2055, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2055, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1994, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1994, file: !163, line: 256, baseType: !2025, size: 64, offset: 704)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1994, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1994, file: !163, line: 300, baseType: !2070, size: 96, offset: 800)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2071)
!2071 = !{!2072, !2073, !2074}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2070, file: !163, line: 153, baseType: !22, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2070, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2070, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1994, file: !163, line: 325, baseType: !2076, size: 32, offset: 896)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2078)
!2078 = !{!2079, !2085, !2086}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2077, file: !137, line: 5074, baseType: !2080, size: 96)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2081)
!2081 = !{!2082, !2083, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2080, file: !240, line: 57, baseType: !243, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2080, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2080, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2077, file: !137, line: 5075, baseType: !2025, size: 64, offset: 96)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2077, file: !137, line: 5076, baseType: !2087, offset: 160)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1994, file: !163, line: 343, baseType: !2089, size: 64, offset: 928)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2090)
!2090 = !{!2091, !2092}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2089, file: !214, line: 63, baseType: !108, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2089, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1988, file: !141, line: 111, baseType: !1993, size: 32, offset: 96)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1988, file: !141, line: 124, baseType: !103, size: 32, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1988, file: !141, line: 127, baseType: !185, size: 8, offset: 160)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1988, file: !141, line: 153, baseType: !2097, offset: 168)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2098, line: 33, elements: !251)
!2098 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1984, file: !141, line: 170, baseType: !2100, size: 96, offset: 192)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2100, file: !141, line: 86, baseType: !1993, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2100, file: !141, line: 90, baseType: !2029, size: 64, offset: 32)
!2104 = !DIGlobalVariableExpression(var: !2105, expr: !DIExpression())
!2105 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1897, file: !1901, line: 43, type: !2106, isLocal: false, isDefinition: true, align: 512)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2107, size: 8704, elements: !346)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !2108)
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2107, file: !316, line: 48, baseType: !278, size: 8)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1897, file: !1901, line: 44, type: !1994, isLocal: false, isDefinition: true)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1897, file: !1901, line: 48, type: !2114, isLocal: false, isDefinition: true)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1994, size: 1024, elements: !606)
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1897, file: !1901, line: 86, type: !2117, isLocal: false, isDefinition: true, align: 512)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2107, size: 16896, elements: !2118)
!2118 = !{!607, !2119}
!2119 = !DISubrange(count: 2112)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1897, file: !1901, line: 217, type: !131, isLocal: false, isDefinition: true)
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1897, file: !1901, line: 50, type: !2124, isLocal: true, isDefinition: true, align: 512)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2107, size: 3072, elements: !2125)
!2125 = !{!607, !2126}
!2126 = !DISubrange(count: 384)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "levels", scope: !2129, file: !1901, line: 232, type: !2149, isLocal: true, isDefinition: true)
!2129 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1901, file: !1901, line: 230, type: !2130, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !2132)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !1900}
!2132 = !{!2133, !2134, !2144, !2148}
!2133 = !DILocalVariable(name: "level", arg: 1, scope: !2129, file: !1901, line: 230, type: !1900)
!2134 = !DILocalVariable(name: "entry", scope: !2129, file: !1901, line: 244, type: !2135)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2138)
!2138 = !{!2139, !2143}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2137, file: !420, line: 60, baseType: !2140, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!103, !1919}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2137, file: !420, line: 65, baseType: !1919, size: 32, offset: 32)
!2144 = !DILocalVariable(name: "dev", scope: !2145, file: !1901, line: 247, type: !1919)
!2145 = distinct !DILexicalBlock(scope: !2146, file: !1901, line: 246, column: 64)
!2146 = distinct !DILexicalBlock(scope: !2147, file: !1901, line: 246, column: 2)
!2147 = distinct !DILexicalBlock(scope: !2129, file: !1901, line: 246, column: 2)
!2148 = !DILocalVariable(name: "rc", scope: !2145, file: !1901, line: 248, type: !103)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2135, size: 192, elements: !2150)
!2150 = !{!2151}
!2151 = !DISubrange(count: 6)
!2152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !2154)
!2154 = !{!2155, !2156}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2153, file: !384, line: 17, baseType: !337, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2153, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "states_str", scope: !2159, file: !2160, line: 276, type: !2281, isLocal: true, isDefinition: true)
!2159 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2160, file: !2160, line: 271, type: !2161, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !2272)
!2160 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2161 = !DISubroutineType(types: !2162)
!2162 = !{!337, !2163, !277, !132}
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2164)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2166)
!2166 = !{!2167, !2225, !2237, !2238, !2239, !2240, !2246, !2259}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2165, file: !163, line: 247, baseType: !2168, size: 384)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2169)
!2169 = !{!2170, !2194, !2201, !2202, !2203, !2212, !2213, !2214}
!2170 = !DIDerivedType(tag: DW_TAG_member, scope: !2168, file: !163, line: 60, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2168, file: !163, line: 60, size: 64, elements: !2172)
!2172 = !{!2173, !2188}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2171, file: !163, line: 61, baseType: !2174, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2175)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2176)
!2176 = !{!2177, !2183}
!2177 = !DIDerivedType(tag: DW_TAG_member, scope: !2175, file: !146, line: 38, baseType: !2178, size: 32)
!2178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2175, file: !146, line: 38, size: 32, elements: !2179)
!2179 = !{!2180, !2182}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2178, file: !146, line: 39, baseType: !2181, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2178, file: !146, line: 40, baseType: !2181, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, scope: !2175, file: !146, line: 42, baseType: !2184, size: 32, offset: 32)
!2184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2175, file: !146, line: 42, size: 32, elements: !2185)
!2185 = !{!2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2184, file: !146, line: 43, baseType: !2181, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2184, file: !146, line: 44, baseType: !2181, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2171, file: !163, line: 62, baseType: !2189, size: 64)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2190)
!2190 = !{!2191}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2189, file: !175, line: 50, baseType: !2192, size: 64)
!2192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2193, size: 64, elements: !180)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2168, file: !163, line: 68, baseType: !2195, size: 32, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2197)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2198)
!2198 = !{!2199}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2197, file: !141, line: 232, baseType: !2200, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2175)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2168, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2168, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2203 = !DIDerivedType(tag: DW_TAG_member, scope: !2168, file: !163, line: 90, baseType: !2204, size: 16, offset: 112)
!2204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2168, file: !163, line: 90, size: 16, elements: !2205)
!2205 = !{!2206, !2211}
!2206 = !DIDerivedType(tag: DW_TAG_member, scope: !2204, file: !163, line: 91, baseType: !2207, size: 16)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2204, file: !163, line: 91, size: 16, elements: !2208)
!2208 = !{!2209, !2210}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2207, file: !163, line: 96, baseType: !195, size: 8)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2207, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2204, file: !163, line: 100, baseType: !121, size: 16)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2168, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2168, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2168, file: !163, line: 131, baseType: !2215, size: 192, offset: 192)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2216)
!2216 = !{!2217, !2218, !2224}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2215, file: !141, line: 245, baseType: !2174, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2215, file: !141, line: 246, baseType: !2219, size: 32, offset: 64)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2220)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !2223}
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2215, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2165, file: !163, line: 250, baseType: !2226, size: 288, offset: 384)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2227)
!2227 = !{!2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2226, file: !214, line: 26, baseType: !108, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2226, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2226, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2226, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2226, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2226, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2226, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2226, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2226, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2165, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2165, file: !163, line: 256, baseType: !2196, size: 64, offset: 704)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2165, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2165, file: !163, line: 300, baseType: !2241, size: 96, offset: 800)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2242)
!2242 = !{!2243, !2244, !2245}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2241, file: !163, line: 153, baseType: !22, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2241, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2241, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2165, file: !163, line: 325, baseType: !2247, size: 32, offset: 896)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2249)
!2249 = !{!2250, !2256, !2257}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2248, file: !137, line: 5074, baseType: !2251, size: 96)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2252)
!2252 = !{!2253, !2254, !2255}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2251, file: !240, line: 57, baseType: !243, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2251, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2251, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2248, file: !137, line: 5075, baseType: !2196, size: 64, offset: 96)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2248, file: !137, line: 5076, baseType: !2258, offset: 160)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2165, file: !163, line: 343, baseType: !2260, size: 64, offset: 928)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2260, file: !214, line: 63, baseType: !108, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2260, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2266, globals: !2268, splitDebugInlining: false, nameTableKind: None)
!2265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2266 = !{!102, !337, !104, !185, !103, !2267, !24, !132, !277, !22, !108, !109}
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2268 = !{!2157, !2269}
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "states_sz", scope: !2159, file: !2160, line: 279, type: !2271, isLocal: true, isDefinition: true)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1831, size: 256, elements: !1554)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279}
!2273 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2159, file: !2160, line: 271, type: !2163)
!2274 = !DILocalVariable(name: "buf", arg: 2, scope: !2159, file: !2160, line: 271, type: !277)
!2275 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2159, file: !2160, line: 271, type: !132)
!2276 = !DILocalVariable(name: "off", scope: !2159, file: !2160, line: 273, type: !132)
!2277 = !DILocalVariable(name: "bit", scope: !2159, file: !2160, line: 274, type: !185)
!2278 = !DILocalVariable(name: "thread_state", scope: !2159, file: !2160, line: 275, type: !185)
!2279 = !DILocalVariable(name: "index", scope: !2280, file: !2160, line: 293, type: !185)
!2280 = distinct !DILexicalBlock(scope: !2159, file: !2160, line: 293, column: 2)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !1554)
!2282 = !DIGlobalVariableExpression(var: !2283, expr: !DIExpression())
!2283 = distinct !DIGlobalVariable(name: "lock", scope: !2284, file: !2389, line: 47, type: !2382, isLocal: true, isDefinition: true)
!2284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2285, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2286, globals: !2388, splitDebugInlining: false, nameTableKind: None)
!2285 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2286 = !{!131, !102, !103, !2287, !2302}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2289)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2290)
!2290 = !{!2291, !2297}
!2291 = !DIDerivedType(tag: DW_TAG_member, scope: !2289, file: !146, line: 38, baseType: !2292, size: 32)
!2292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2289, file: !146, line: 38, size: 32, elements: !2293)
!2293 = !{!2294, !2296}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2292, file: !146, line: 39, baseType: !2295, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2292, file: !146, line: 40, baseType: !2295, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, scope: !2289, file: !146, line: 42, baseType: !2298, size: 32, offset: 32)
!2298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2289, file: !146, line: 42, size: 32, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2298, file: !146, line: 43, baseType: !2295, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2298, file: !146, line: 44, baseType: !2295, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2304)
!2304 = !{!2305, !2349, !2361, !2362, !2363, !2364, !2370, !2383}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2303, file: !163, line: 247, baseType: !2306, size: 384)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2307)
!2307 = !{!2308, !2318, !2325, !2326, !2327, !2336, !2337, !2338}
!2308 = !DIDerivedType(tag: DW_TAG_member, scope: !2306, file: !163, line: 60, baseType: !2309, size: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2306, file: !163, line: 60, size: 64, elements: !2310)
!2310 = !{!2311, !2312}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2309, file: !163, line: 61, baseType: !2288, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2309, file: !163, line: 62, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2314)
!2314 = !{!2315}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2313, file: !175, line: 50, baseType: !2316, size: 64)
!2316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2317, size: 64, elements: !180)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2306, file: !163, line: 68, baseType: !2319, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2321)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2322)
!2322 = !{!2323}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2321, file: !141, line: 232, baseType: !2324, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2289)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2306, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2306, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2327 = !DIDerivedType(tag: DW_TAG_member, scope: !2306, file: !163, line: 90, baseType: !2328, size: 16, offset: 112)
!2328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2306, file: !163, line: 90, size: 16, elements: !2329)
!2329 = !{!2330, !2335}
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2328, file: !163, line: 91, baseType: !2331, size: 16)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2328, file: !163, line: 91, size: 16, elements: !2332)
!2332 = !{!2333, !2334}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2331, file: !163, line: 96, baseType: !195, size: 8)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2331, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2328, file: !163, line: 100, baseType: !121, size: 16)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2306, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2306, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2306, file: !163, line: 131, baseType: !2339, size: 192, offset: 192)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2340)
!2340 = !{!2341, !2342, !2348}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2339, file: !141, line: 245, baseType: !2288, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2339, file: !141, line: 246, baseType: !2343, size: 32, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2344)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 32)
!2345 = !DISubroutineType(types: !2346)
!2346 = !{null, !2347}
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2339, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2303, file: !163, line: 250, baseType: !2350, size: 288, offset: 384)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2351)
!2351 = !{!2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2350, file: !214, line: 26, baseType: !108, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2350, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2350, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2350, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2350, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2350, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2350, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2350, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2350, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2303, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2303, file: !163, line: 256, baseType: !2320, size: 64, offset: 704)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2303, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2303, file: !163, line: 300, baseType: !2365, size: 96, offset: 800)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2366)
!2366 = !{!2367, !2368, !2369}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2365, file: !163, line: 153, baseType: !22, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2365, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2365, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2303, file: !163, line: 325, baseType: !2371, size: 32, offset: 896)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2373)
!2373 = !{!2374, !2380, !2381}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2372, file: !137, line: 5074, baseType: !2375, size: 96)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2376)
!2376 = !{!2377, !2378, !2379}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2375, file: !240, line: 57, baseType: !243, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2375, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2375, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2372, file: !137, line: 5075, baseType: !2320, size: 64, offset: 96)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2372, file: !137, line: 5076, baseType: !2382, offset: 160)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2303, file: !163, line: 343, baseType: !2384, size: 64, offset: 928)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2385)
!2385 = !{!2386, !2387}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2384, file: !214, line: 63, baseType: !108, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2384, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2388 = !{!2282}
!2389 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2392, file: !2500, line: 56, type: !2489, isLocal: false, isDefinition: true)
!2392 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2393, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2394, globals: !2497, splitDebugInlining: false, nameTableKind: None)
!2393 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2394 = !{!2395, !277, !102, !2495, !379, !104, !331, !103, !108, !109, !2496}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2397)
!2397 = !{!2398, !2456, !2468, !2469, !2470, !2471, !2477, !2490}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2396, file: !163, line: 247, baseType: !2399, size: 384)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2400)
!2400 = !{!2401, !2425, !2432, !2433, !2434, !2443, !2444, !2445}
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !2399, file: !163, line: 60, baseType: !2402, size: 64)
!2402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2399, file: !163, line: 60, size: 64, elements: !2403)
!2403 = !{!2404, !2419}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2402, file: !163, line: 61, baseType: !2405, size: 64)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2406)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2407)
!2407 = !{!2408, !2414}
!2408 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !146, line: 38, baseType: !2409, size: 32)
!2409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !146, line: 38, size: 32, elements: !2410)
!2410 = !{!2411, !2413}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2409, file: !146, line: 39, baseType: !2412, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2409, file: !146, line: 40, baseType: !2412, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !146, line: 42, baseType: !2415, size: 32, offset: 32)
!2415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !146, line: 42, size: 32, elements: !2416)
!2416 = !{!2417, !2418}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2415, file: !146, line: 43, baseType: !2412, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2415, file: !146, line: 44, baseType: !2412, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2402, file: !163, line: 62, baseType: !2420, size: 64)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2421)
!2421 = !{!2422}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2420, file: !175, line: 50, baseType: !2423, size: 64)
!2423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2424, size: 64, elements: !180)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2399, file: !163, line: 68, baseType: !2426, size: 32, offset: 64)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2429)
!2429 = !{!2430}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2428, file: !141, line: 232, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2406)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2399, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2399, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2434 = !DIDerivedType(tag: DW_TAG_member, scope: !2399, file: !163, line: 90, baseType: !2435, size: 16, offset: 112)
!2435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2399, file: !163, line: 90, size: 16, elements: !2436)
!2436 = !{!2437, !2442}
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !2435, file: !163, line: 91, baseType: !2438, size: 16)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2435, file: !163, line: 91, size: 16, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2438, file: !163, line: 96, baseType: !195, size: 8)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2438, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2435, file: !163, line: 100, baseType: !121, size: 16)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2399, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2399, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2399, file: !163, line: 131, baseType: !2446, size: 192, offset: 192)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2447)
!2447 = !{!2448, !2449, !2455}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2446, file: !141, line: 245, baseType: !2405, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2446, file: !141, line: 246, baseType: !2450, size: 32, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2451)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{null, !2454}
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2446, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2396, file: !163, line: 250, baseType: !2457, size: 288, offset: 384)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2457, file: !214, line: 26, baseType: !108, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2457, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2457, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2457, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2457, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2457, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2457, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2457, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2457, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2396, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2396, file: !163, line: 256, baseType: !2427, size: 64, offset: 704)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2396, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2396, file: !163, line: 300, baseType: !2472, size: 96, offset: 800)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2473)
!2473 = !{!2474, !2475, !2476}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2472, file: !163, line: 153, baseType: !22, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2472, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2472, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2396, file: !163, line: 325, baseType: !2478, size: 32, offset: 896)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2480)
!2480 = !{!2481, !2487, !2488}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2479, file: !137, line: 5074, baseType: !2482, size: 96)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2483)
!2483 = !{!2484, !2485, !2486}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2482, file: !240, line: 57, baseType: !243, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2482, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2482, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2479, file: !137, line: 5075, baseType: !2427, size: 64, offset: 96)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2479, file: !137, line: 5076, baseType: !2489, offset: 160)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2396, file: !163, line: 343, baseType: !2491, size: 64, offset: 928)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2492)
!2492 = !{!2493, !2494}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2491, file: !214, line: 63, baseType: !108, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2491, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32)
!2497 = !{!2390, !2498, !2501, !2503}
!2498 = !DIGlobalVariableExpression(var: !2499, expr: !DIExpression())
!2499 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2392, file: !2500, line: 404, type: !103, isLocal: true, isDefinition: true)
!2500 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2501 = !DIGlobalVariableExpression(var: !2502, expr: !DIExpression())
!2502 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2392, file: !2500, line: 405, type: !103, isLocal: true, isDefinition: true)
!2503 = !DIGlobalVariableExpression(var: !2504, expr: !DIExpression())
!2504 = distinct !DIGlobalVariable(name: "pending_current", scope: !2392, file: !2500, line: 425, type: !2395, isLocal: true, isDefinition: true)
!2505 = !DIGlobalVariableExpression(var: !2506, expr: !DIExpression())
!2506 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2507, file: !2537, line: 15, type: !109, isLocal: true, isDefinition: true)
!2507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2509, globals: !2534, splitDebugInlining: false, nameTableKind: None)
!2508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2509 = !{!104, !102, !331, !108, !109, !103, !2510, !277, !106}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2512)
!2512 = !{!2513, !2528, !2533}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2511, file: !141, line: 245, baseType: !2514, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2515)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2516)
!2516 = !{!2517, !2523}
!2517 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !146, line: 38, baseType: !2518, size: 32)
!2518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !146, line: 38, size: 32, elements: !2519)
!2519 = !{!2520, !2522}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2518, file: !146, line: 39, baseType: !2521, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2518, file: !146, line: 40, baseType: !2521, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !146, line: 42, baseType: !2524, size: 32, offset: 32)
!2524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !146, line: 42, size: 32, elements: !2525)
!2525 = !{!2526, !2527}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2524, file: !146, line: 43, baseType: !2521, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2524, file: !146, line: 44, baseType: !2521, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2511, file: !141, line: 246, baseType: !2529, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2530)
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 32)
!2531 = !DISubroutineType(types: !2532)
!2532 = !{null, !2510}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2511, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2534 = !{!2505, !2535, !2539, !2541}
!2535 = !DIGlobalVariableExpression(var: !2536, expr: !DIExpression())
!2536 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2507, file: !2537, line: 19, type: !2538, isLocal: true, isDefinition: true)
!2537 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2507, file: !2537, line: 25, type: !103, isLocal: true, isDefinition: true)
!2541 = !DIGlobalVariableExpression(var: !2542, expr: !DIExpression())
!2542 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2507, file: !2537, line: 17, type: !2543, isLocal: true, isDefinition: true)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2515)
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2546, file: !2551, line: 61, type: !2581, isLocal: false, isDefinition: true, align: 64)
!2546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !2548, splitDebugInlining: false, nameTableKind: None)
!2547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2548 = !{!2549, !2544}
!2549 = !DIGlobalVariableExpression(var: !2550, expr: !DIExpression())
!2550 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2546, file: !2551, line: 61, type: !2552, isLocal: false, isDefinition: true, align: 32)
!2551 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2553)
!2553 = !{!2554, !2560, !2579}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2552, file: !137, line: 5074, baseType: !2555, size: 96)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2556)
!2556 = !{!2557, !2558, !2559}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2555, file: !240, line: 57, baseType: !243, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2555, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2555, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2552, file: !137, line: 5075, baseType: !2561, size: 64, offset: 96)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2563)
!2563 = !{!2564}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2562, file: !141, line: 232, baseType: !2565, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2566)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2567)
!2567 = !{!2568, !2574}
!2568 = !DIDerivedType(tag: DW_TAG_member, scope: !2566, file: !146, line: 38, baseType: !2569, size: 32)
!2569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2566, file: !146, line: 38, size: 32, elements: !2570)
!2570 = !{!2571, !2573}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2569, file: !146, line: 39, baseType: !2572, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2569, file: !146, line: 40, baseType: !2572, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, scope: !2566, file: !146, line: 42, baseType: !2575, size: 32, offset: 32)
!2575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2566, file: !146, line: 42, size: 32, elements: !2576)
!2576 = !{!2577, !2578}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2575, file: !146, line: 43, baseType: !2572, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2575, file: !146, line: 44, baseType: !2572, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2552, file: !137, line: 5076, baseType: !2580, offset: 160)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 8192, elements: !2582)
!2582 = !{!2583}
!2583 = !DISubrange(count: 1024)
!2584 = !DIGlobalVariableExpression(var: !2585, expr: !DIExpression())
!2585 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2586, file: !2605, line: 55, type: !2606, isLocal: true, isDefinition: true, align: 32)
!2586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2587, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2588, globals: !2604, splitDebugInlining: false, nameTableKind: None)
!2587 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2588 = !{!102, !104, !103, !2589}
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2591)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2592)
!2592 = !{!2593, !2599}
!2593 = !DIDerivedType(tag: DW_TAG_member, scope: !2591, file: !146, line: 38, baseType: !2594, size: 32)
!2594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2591, file: !146, line: 38, size: 32, elements: !2595)
!2595 = !{!2596, !2598}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2594, file: !146, line: 39, baseType: !2597, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2594, file: !146, line: 40, baseType: !2597, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, scope: !2591, file: !146, line: 42, baseType: !2600, size: 32, offset: 32)
!2600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2591, file: !146, line: 42, size: 32, elements: !2601)
!2601 = !{!2602, !2603}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2600, file: !146, line: 43, baseType: !2597, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2600, file: !146, line: 44, baseType: !2597, size: 32)
!2604 = !{!2584}
!2605 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2607)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2608)
!2608 = !{!2609, !2616}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2607, file: !420, line: 60, baseType: !2610, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!103, !2613}
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2615)
!2615 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !420, line: 48, flags: DIFlagFwdDecl)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2607, file: !420, line: 65, baseType: !2613, size: 32, offset: 32)
!2617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2618, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2618 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2623, retainedTypes: !2631, splitDebugInlining: false, nameTableKind: None)
!2622 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2623 = !{!30, !2624}
!2624 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2625, line: 54, baseType: !32, size: 32, elements: !2626)
!2625 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2626 = !{!2627, !2628, !2629, !2630}
!2627 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2628 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2629 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2630 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2631 = !{!102, !132, !379, !24, !2632, !22, !2638, !103, !966, !2653}
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2625, line: 58, baseType: !2634)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2625, line: 58, size: 64, elements: !2635)
!2635 = !{!2636}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2634, file: !2625, line: 58, baseType: !2637, size: 64)
!2637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 64, elements: !1554)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 32)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2625, line: 68, size: 128, elements: !2640)
!2640 = !{!2641, !2644, !2645, !2646}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2639, file: !2625, line: 69, baseType: !2642, size: 64)
!2642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2643, size: 64, elements: !180)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2625, line: 61, baseType: !108)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2639, file: !2625, line: 70, baseType: !2643, size: 32, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2639, file: !2625, line: 71, baseType: !108, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2639, file: !2625, line: 77, baseType: !2647, offset: 128)
!2647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2648, elements: !2651)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2625, line: 64, size: 32, elements: !2649)
!2649 = !{!2650}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2648, file: !2625, line: 65, baseType: !2643, size: 32)
!2651 = !{!2652}
!2652 = !DISubrange(count: 0)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!2654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2656, retainedTypes: !2676, splitDebugInlining: false, nameTableKind: None)
!2655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2656 = !{!2657, !2665}
!2657 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2658, line: 69, baseType: !32, size: 32, elements: !2659)
!2658 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2659 = !{!2660, !2661, !2662, !2663, !2664}
!2660 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2661 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2662 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2663 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2664 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2665 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2658, line: 56, baseType: !32, size: 32, elements: !2666)
!2666 = !{!2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675}
!2667 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2668 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2669 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2670 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2671 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2672 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2673 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2674 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2675 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2676 = !{!103, !2657, !2665, !2677, !196, !446, !2679, !2680, !186, !122, !337, !132, !102, !22, !32, !374, !2682, !2683, !376, !375, !107, !377, !2678, !2684, !2685, !2686, !2687}
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2658, line: 31, baseType: !2678)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !133, line: 329, baseType: !32)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2658, line: 32, baseType: !2681)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !133, line: 145, baseType: !103)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 32)
!2688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2689, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2689 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2692, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2692 = !{!337, !186, !103, !32}
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2695, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2695 = !{!2696, !30}
!2696 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2697, line: 27, baseType: !32, size: 32, elements: !2698)
!2697 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2698 = !{!2699, !2700, !2701, !2702, !2703}
!2699 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2700 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2701 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2702 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2703 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2706, retainedTypes: !2707, splitDebugInlining: false, nameTableKind: None)
!2705 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2706 = !{!705, !2696, !30}
!2707 = !{!871, !2708, !102, !103, !331, !108, !185, !2725}
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2710)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2711)
!2711 = !{!2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2710, file: !624, line: 413, baseType: !1654, size: 256)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2710, file: !624, line: 414, baseType: !1656, size: 768, offset: 256)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2710, file: !624, line: 415, baseType: !1654, size: 256, offset: 1024)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2710, file: !624, line: 416, baseType: !1656, size: 768, offset: 1280)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2710, file: !624, line: 417, baseType: !1654, size: 256, offset: 2048)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2710, file: !624, line: 418, baseType: !1656, size: 768, offset: 2304)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2710, file: !624, line: 419, baseType: !1654, size: 256, offset: 3072)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2710, file: !624, line: 420, baseType: !1656, size: 768, offset: 3328)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2710, file: !624, line: 421, baseType: !1654, size: 256, offset: 4096)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2710, file: !624, line: 422, baseType: !1667, size: 1792, offset: 4352)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2710, file: !624, line: 423, baseType: !1671, size: 1920, offset: 6144)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2710, file: !624, line: 424, baseType: !1676, size: 20608, offset: 8064)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2710, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2727, file: !624, line: 447, baseType: !628, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2727, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2727, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2727, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2727, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2727, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2727, file: !624, line: 453, baseType: !1691, size: 96, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2727, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2727, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2727, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2727, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2727, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2727, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2727, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2727, file: !624, line: 461, baseType: !1700, size: 64, offset: 512)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2727, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2727, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2727, file: !624, line: 464, baseType: !1704, size: 128, offset: 640)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2727, file: !624, line: 465, baseType: !1706, size: 160, offset: 768)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2727, file: !624, line: 466, baseType: !1708, size: 160, offset: 928)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2727, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2753, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2754, splitDebugInlining: false, nameTableKind: None)
!2753 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2754 = !{!102, !103, !22, !2755}
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2758)
!2758 = !{!2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2757, file: !624, line: 447, baseType: !628, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2757, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2757, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2757, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2757, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2757, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2757, file: !624, line: 453, baseType: !1691, size: 96, offset: 192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2757, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2757, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2757, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2757, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2757, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2757, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2757, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2757, file: !624, line: 461, baseType: !1700, size: 64, offset: 512)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2757, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2757, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2757, file: !624, line: 464, baseType: !1704, size: 128, offset: 640)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2757, file: !624, line: 465, baseType: !1706, size: 160, offset: 768)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2757, file: !624, line: 466, baseType: !1708, size: 160, offset: 928)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2757, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2782, splitDebugInlining: false, nameTableKind: None)
!2781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2782 = !{!2783, !102, !103}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2785, file: !624, line: 447, baseType: !628, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2785, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2785, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2785, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2785, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2785, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2785, file: !624, line: 453, baseType: !1691, size: 96, offset: 192)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2785, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2785, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2785, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2785, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2785, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2785, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2785, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2785, file: !624, line: 461, baseType: !1700, size: 64, offset: 512)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2785, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2785, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2785, file: !624, line: 464, baseType: !1704, size: 128, offset: 640)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2785, file: !624, line: 465, baseType: !1706, size: 160, offset: 768)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2785, file: !624, line: 466, baseType: !1708, size: 160, offset: 928)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2785, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2810, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2810 = !{!2811, !108, !102, !103}
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 32)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2813, line: 98, size: 256, elements: !2814)
!2813 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2814 = !{!2815, !2820, !2825, !2830, !2835, !2840, !2845, !2850}
!2815 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 99, baseType: !2816, size: 32)
!2816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 99, size: 32, elements: !2817)
!2817 = !{!2818, !2819}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2816, file: !2813, line: 99, baseType: !108, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2816, file: !2813, line: 99, baseType: !108, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 100, baseType: !2821, size: 32, offset: 32)
!2821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 100, size: 32, elements: !2822)
!2822 = !{!2823, !2824}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2821, file: !2813, line: 100, baseType: !108, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2821, file: !2813, line: 100, baseType: !108, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 101, baseType: !2826, size: 32, offset: 64)
!2826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 101, size: 32, elements: !2827)
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2826, file: !2813, line: 101, baseType: !108, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2826, file: !2813, line: 101, baseType: !108, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 102, baseType: !2831, size: 32, offset: 96)
!2831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 102, size: 32, elements: !2832)
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2831, file: !2813, line: 102, baseType: !108, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2831, file: !2813, line: 102, baseType: !108, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 103, baseType: !2836, size: 32, offset: 128)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 103, size: 32, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2836, file: !2813, line: 103, baseType: !108, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2836, file: !2813, line: 103, baseType: !108, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 104, baseType: !2841, size: 32, offset: 160)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 104, size: 32, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2841, file: !2813, line: 104, baseType: !108, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2841, file: !2813, line: 104, baseType: !108, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 105, baseType: !2846, size: 32, offset: 192)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 105, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2846, file: !2813, line: 105, baseType: !108, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2846, file: !2813, line: 105, baseType: !108, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2812, file: !2813, line: 106, baseType: !108, size: 32, offset: 224)
!2851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2695, retainedTypes: !2853, splitDebugInlining: false, nameTableKind: None)
!2852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2853 = !{!2854, !102, !103, !2879, !2653, !108}
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2857)
!2857 = !{!2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2856, file: !624, line: 447, baseType: !628, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2856, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2856, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2856, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2856, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2856, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2856, file: !624, line: 453, baseType: !1691, size: 96, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2856, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2856, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2856, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2856, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2856, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2856, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2856, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2856, file: !624, line: 461, baseType: !1700, size: 64, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2856, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2856, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2856, file: !624, line: 464, baseType: !1704, size: 128, offset: 640)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2856, file: !624, line: 465, baseType: !1706, size: 160, offset: 768)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2856, file: !624, line: 466, baseType: !1708, size: 160, offset: 928)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2856, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2813, line: 141, baseType: !2881)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2813, line: 97, size: 256, elements: !2882)
!2882 = !{!2883}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2881, file: !2813, line: 107, baseType: !2884, size: 256)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2813, line: 98, size: 256, elements: !2885)
!2885 = !{!2886, !2891, !2896, !2901, !2906, !2911, !2916, !2921}
!2886 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 99, baseType: !2887, size: 32)
!2887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 99, size: 32, elements: !2888)
!2888 = !{!2889, !2890}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2887, file: !2813, line: 99, baseType: !108, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2887, file: !2813, line: 99, baseType: !108, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 100, baseType: !2892, size: 32, offset: 32)
!2892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 100, size: 32, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2892, file: !2813, line: 100, baseType: !108, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2892, file: !2813, line: 100, baseType: !108, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 101, baseType: !2897, size: 32, offset: 64)
!2897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 101, size: 32, elements: !2898)
!2898 = !{!2899, !2900}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2897, file: !2813, line: 101, baseType: !108, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2897, file: !2813, line: 101, baseType: !108, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 102, baseType: !2902, size: 32, offset: 96)
!2902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 102, size: 32, elements: !2903)
!2903 = !{!2904, !2905}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2902, file: !2813, line: 102, baseType: !108, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2902, file: !2813, line: 102, baseType: !108, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 103, baseType: !2907, size: 32, offset: 128)
!2907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 103, size: 32, elements: !2908)
!2908 = !{!2909, !2910}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2907, file: !2813, line: 103, baseType: !108, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2907, file: !2813, line: 103, baseType: !108, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 104, baseType: !2912, size: 32, offset: 160)
!2912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 104, size: 32, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2912, file: !2813, line: 104, baseType: !108, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2912, file: !2813, line: 104, baseType: !108, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 105, baseType: !2917, size: 32, offset: 192)
!2917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 105, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2917, file: !2813, line: 105, baseType: !108, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2917, file: !2813, line: 105, baseType: !108, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2884, file: !2813, line: 106, baseType: !108, size: 32, offset: 224)
!2922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1639, retainedTypes: !2924, splitDebugInlining: false, nameTableKind: None)
!2923 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2924 = !{!871, !331, !185, !108, !2925, !2942}
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2927, file: !624, line: 413, baseType: !1654, size: 256)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2927, file: !624, line: 414, baseType: !1656, size: 768, offset: 256)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2927, file: !624, line: 415, baseType: !1654, size: 256, offset: 1024)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2927, file: !624, line: 416, baseType: !1656, size: 768, offset: 1280)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2927, file: !624, line: 417, baseType: !1654, size: 256, offset: 2048)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2927, file: !624, line: 418, baseType: !1656, size: 768, offset: 2304)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2927, file: !624, line: 419, baseType: !1654, size: 256, offset: 3072)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2927, file: !624, line: 420, baseType: !1656, size: 768, offset: 3328)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2927, file: !624, line: 421, baseType: !1654, size: 256, offset: 4096)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2927, file: !624, line: 422, baseType: !1667, size: 1792, offset: 4352)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2927, file: !624, line: 423, baseType: !1671, size: 1920, offset: 6144)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2927, file: !624, line: 424, baseType: !1676, size: 20608, offset: 8064)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2927, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2944)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2945)
!2945 = !{!2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2944, file: !624, line: 447, baseType: !628, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2944, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2944, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2944, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2944, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2944, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2944, file: !624, line: 453, baseType: !1691, size: 96, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2944, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2944, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2944, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2944, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2944, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2944, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2944, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2944, file: !624, line: 461, baseType: !1700, size: 64, offset: 512)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2944, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2944, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2944, file: !624, line: 464, baseType: !1704, size: 128, offset: 640)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2944, file: !624, line: 465, baseType: !1706, size: 160, offset: 768)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2944, file: !624, line: 466, baseType: !1708, size: 160, offset: 928)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2944, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2967 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2968, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2969, splitDebugInlining: false, nameTableKind: None)
!2968 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2969 = !{!2970, !102, !103}
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2972)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2973)
!2973 = !{!2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2972, file: !624, line: 447, baseType: !628, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2972, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2972, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2972, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2972, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2972, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2972, file: !624, line: 453, baseType: !1691, size: 96, offset: 192)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2972, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2972, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2972, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2972, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2972, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2972, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2972, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2972, file: !624, line: 461, baseType: !1700, size: 64, offset: 512)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2972, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2972, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2972, file: !624, line: 464, baseType: !1704, size: 128, offset: 640)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2972, file: !624, line: 465, baseType: !1706, size: 160, offset: 768)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2972, file: !624, line: 466, baseType: !1708, size: 160, offset: 928)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2972, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2995 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2996, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2997, splitDebugInlining: false, nameTableKind: None)
!2996 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!2997 = !{!278, !277, !132, !1071, !2998, !186, !102}
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!3000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3002, splitDebugInlining: false, nameTableKind: None)
!3001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3002 = !{!3003}
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 370, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 336, size: 1152, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3005, file: !405, line: 338, baseType: !409, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3005, file: !405, line: 339, baseType: !409, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3005, file: !405, line: 340, baseType: !409, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3005, file: !405, line: 341, baseType: !409, size: 32, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3005, file: !405, line: 342, baseType: !409, size: 32, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3005, file: !405, line: 343, baseType: !409, size: 32, offset: 160)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3005, file: !405, line: 344, baseType: !409, size: 32, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3005, file: !405, line: 345, baseType: !108, size: 32, offset: 224)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3005, file: !405, line: 346, baseType: !409, size: 32, offset: 256)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3005, file: !405, line: 347, baseType: !409, size: 32, offset: 288)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3005, file: !405, line: 348, baseType: !937, size: 64, offset: 320)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3005, file: !405, line: 349, baseType: !409, size: 32, offset: 384)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3005, file: !405, line: 350, baseType: !409, size: 32, offset: 416)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3005, file: !405, line: 351, baseType: !409, size: 32, offset: 448)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3005, file: !405, line: 352, baseType: !108, size: 32, offset: 480)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3005, file: !405, line: 353, baseType: !409, size: 32, offset: 512)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3005, file: !405, line: 354, baseType: !409, size: 32, offset: 544)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3005, file: !405, line: 355, baseType: !937, size: 64, offset: 576)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3005, file: !405, line: 356, baseType: !409, size: 32, offset: 640)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3005, file: !405, line: 357, baseType: !409, size: 32, offset: 672)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3005, file: !405, line: 358, baseType: !409, size: 32, offset: 704)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3005, file: !405, line: 359, baseType: !108, size: 32, offset: 736)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3005, file: !405, line: 360, baseType: !409, size: 32, offset: 768)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3005, file: !405, line: 361, baseType: !409, size: 32, offset: 800)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3005, file: !405, line: 362, baseType: !937, size: 64, offset: 832)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3005, file: !405, line: 363, baseType: !409, size: 32, offset: 896)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3005, file: !405, line: 364, baseType: !409, size: 32, offset: 928)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3005, file: !405, line: 365, baseType: !937, size: 64, offset: 960)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3005, file: !405, line: 366, baseType: !409, size: 32, offset: 1024)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3005, file: !405, line: 367, baseType: !409, size: 32, offset: 1056)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3005, file: !405, line: 368, baseType: !958, size: 32, offset: 1088)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3005, file: !405, line: 369, baseType: !409, size: 32, offset: 1120)
!3039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3040, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3040 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3043, retainedTypes: !3059, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3043 = !{!3044, !3051, !3055}
!3044 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3045, line: 38, baseType: !32, size: 32, elements: !3046)
!3045 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3046 = !{!3047, !3048, !3049, !3050}
!3047 = !DIEnumerator(name: "HAL_OK", value: 0)
!3048 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3049 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3050 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3051 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !910, line: 184, baseType: !32, size: 32, elements: !3052)
!3052 = !{!3053, !3054}
!3053 = !DIEnumerator(name: "RESET", value: 0)
!3054 = !DIEnumerator(name: "SET", value: 1)
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !910, line: 190, baseType: !32, size: 32, elements: !3056)
!3056 = !{!3057, !3058}
!3057 = !DIEnumerator(name: "DISABLE", value: 0)
!3058 = !DIEnumerator(name: "ENABLE", value: 1)
!3059 = !{!102, !3060, !185, !108, !1548, !3096, !3102, !3113, !121, !3114, !109}
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 370, baseType: !3062)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 336, size: 1152, elements: !3063)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3062, file: !405, line: 338, baseType: !409, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3062, file: !405, line: 339, baseType: !409, size: 32, offset: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3062, file: !405, line: 340, baseType: !409, size: 32, offset: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3062, file: !405, line: 341, baseType: !409, size: 32, offset: 96)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3062, file: !405, line: 342, baseType: !409, size: 32, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3062, file: !405, line: 343, baseType: !409, size: 32, offset: 160)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3062, file: !405, line: 344, baseType: !409, size: 32, offset: 192)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3062, file: !405, line: 345, baseType: !108, size: 32, offset: 224)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3062, file: !405, line: 346, baseType: !409, size: 32, offset: 256)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3062, file: !405, line: 347, baseType: !409, size: 32, offset: 288)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3062, file: !405, line: 348, baseType: !937, size: 64, offset: 320)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3062, file: !405, line: 349, baseType: !409, size: 32, offset: 384)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3062, file: !405, line: 350, baseType: !409, size: 32, offset: 416)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3062, file: !405, line: 351, baseType: !409, size: 32, offset: 448)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3062, file: !405, line: 352, baseType: !108, size: 32, offset: 480)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3062, file: !405, line: 353, baseType: !409, size: 32, offset: 512)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3062, file: !405, line: 354, baseType: !409, size: 32, offset: 544)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3062, file: !405, line: 355, baseType: !937, size: 64, offset: 576)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3062, file: !405, line: 356, baseType: !409, size: 32, offset: 640)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3062, file: !405, line: 357, baseType: !409, size: 32, offset: 672)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3062, file: !405, line: 358, baseType: !409, size: 32, offset: 704)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3062, file: !405, line: 359, baseType: !108, size: 32, offset: 736)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3062, file: !405, line: 360, baseType: !409, size: 32, offset: 768)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3062, file: !405, line: 361, baseType: !409, size: 32, offset: 800)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3062, file: !405, line: 362, baseType: !937, size: 64, offset: 832)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3062, file: !405, line: 363, baseType: !409, size: 32, offset: 896)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3062, file: !405, line: 364, baseType: !409, size: 32, offset: 928)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3062, file: !405, line: 365, baseType: !937, size: 64, offset: 960)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3062, file: !405, line: 366, baseType: !409, size: 32, offset: 1024)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3062, file: !405, line: 367, baseType: !409, size: 32, offset: 1056)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3062, file: !405, line: 368, baseType: !958, size: 32, offset: 1088)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3062, file: !405, line: 369, baseType: !409, size: 32, offset: 1120)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 330, baseType: !3098)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 326, size: 64, elements: !3099)
!3099 = !{!3100, !3101}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3098, file: !405, line: 328, baseType: !409, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3098, file: !405, line: 329, baseType: !409, size: 32, offset: 32)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 259, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 250, size: 224, elements: !3105)
!3105 = !{!3106, !3107, !3108, !3109, !3110, !3111, !3112}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3104, file: !405, line: 252, baseType: !409, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3104, file: !405, line: 253, baseType: !409, size: 32, offset: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3104, file: !405, line: 254, baseType: !409, size: 32, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3104, file: !405, line: 255, baseType: !409, size: 32, offset: 96)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3104, file: !405, line: 256, baseType: !409, size: 32, offset: 128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3104, file: !405, line: 257, baseType: !409, size: 32, offset: 160)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3104, file: !405, line: 258, baseType: !409, size: 32, offset: 192)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 276, baseType: !3116)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 265, size: 320, elements: !3117)
!3117 = !{!3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3116, file: !405, line: 267, baseType: !409, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3116, file: !405, line: 268, baseType: !409, size: 32, offset: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3116, file: !405, line: 269, baseType: !409, size: 32, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3116, file: !405, line: 270, baseType: !409, size: 32, offset: 96)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3116, file: !405, line: 271, baseType: !409, size: 32, offset: 128)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3116, file: !405, line: 272, baseType: !409, size: 32, offset: 160)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3116, file: !405, line: 273, baseType: !409, size: 32, offset: 192)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3116, file: !405, line: 274, baseType: !409, size: 32, offset: 224)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3116, file: !405, line: 275, baseType: !1225, size: 64, offset: 256)
!3127 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3128, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3129, retainedTypes: !3130, splitDebugInlining: false, nameTableKind: None)
!3128 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3129 = !{!909}
!3130 = !{!3131, !108, !3139, !3145, !3156}
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !3133)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !3134)
!3134 = !{!3135, !3136, !3137, !3138}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3133, file: !624, line: 766, baseType: !409, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3133, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3133, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3133, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 330, baseType: !3141)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 326, size: 64, elements: !3142)
!3142 = !{!3143, !3144}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3141, file: !405, line: 328, baseType: !409, size: 32)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3141, file: !405, line: 329, baseType: !409, size: 32, offset: 32)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 259, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 250, size: 224, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152, !3153, !3154, !3155}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3147, file: !405, line: 252, baseType: !409, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3147, file: !405, line: 253, baseType: !409, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3147, file: !405, line: 254, baseType: !409, size: 32, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3147, file: !405, line: 255, baseType: !409, size: 32, offset: 96)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3147, file: !405, line: 256, baseType: !409, size: 32, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3147, file: !405, line: 257, baseType: !409, size: 32, offset: 160)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3147, file: !405, line: 258, baseType: !409, size: 32, offset: 192)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 370, baseType: !3158)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 336, size: 1152, elements: !3159)
!3159 = !{!3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3158, file: !405, line: 338, baseType: !409, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3158, file: !405, line: 339, baseType: !409, size: 32, offset: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3158, file: !405, line: 340, baseType: !409, size: 32, offset: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3158, file: !405, line: 341, baseType: !409, size: 32, offset: 96)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3158, file: !405, line: 342, baseType: !409, size: 32, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3158, file: !405, line: 343, baseType: !409, size: 32, offset: 160)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3158, file: !405, line: 344, baseType: !409, size: 32, offset: 192)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3158, file: !405, line: 345, baseType: !108, size: 32, offset: 224)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3158, file: !405, line: 346, baseType: !409, size: 32, offset: 256)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3158, file: !405, line: 347, baseType: !409, size: 32, offset: 288)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3158, file: !405, line: 348, baseType: !937, size: 64, offset: 320)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3158, file: !405, line: 349, baseType: !409, size: 32, offset: 384)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3158, file: !405, line: 350, baseType: !409, size: 32, offset: 416)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3158, file: !405, line: 351, baseType: !409, size: 32, offset: 448)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3158, file: !405, line: 352, baseType: !108, size: 32, offset: 480)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3158, file: !405, line: 353, baseType: !409, size: 32, offset: 512)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3158, file: !405, line: 354, baseType: !409, size: 32, offset: 544)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3158, file: !405, line: 355, baseType: !937, size: 64, offset: 576)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3158, file: !405, line: 356, baseType: !409, size: 32, offset: 640)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3158, file: !405, line: 357, baseType: !409, size: 32, offset: 672)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3158, file: !405, line: 358, baseType: !409, size: 32, offset: 704)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3158, file: !405, line: 359, baseType: !108, size: 32, offset: 736)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3158, file: !405, line: 360, baseType: !409, size: 32, offset: 768)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3158, file: !405, line: 361, baseType: !409, size: 32, offset: 800)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3158, file: !405, line: 362, baseType: !937, size: 64, offset: 832)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3158, file: !405, line: 363, baseType: !409, size: 32, offset: 896)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3158, file: !405, line: 364, baseType: !409, size: 32, offset: 928)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3158, file: !405, line: 365, baseType: !937, size: 64, offset: 960)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3158, file: !405, line: 366, baseType: !409, size: 32, offset: 1024)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3158, file: !405, line: 367, baseType: !409, size: 32, offset: 1056)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3158, file: !405, line: 368, baseType: !958, size: 32, offset: 1088)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3158, file: !405, line: 369, baseType: !409, size: 32, offset: 1120)
!3192 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3193, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3194, splitDebugInlining: false, nameTableKind: None)
!3193 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3194 = !{!102, !132}
!3195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3196, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3197, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3196 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3197 = !{!3198, !3205, !30}
!3198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3199, line: 14, baseType: !32, size: 32, elements: !3200)
!3199 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3200 = !{!3201, !3202, !3203, !3204}
!3201 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3202 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3203 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3204 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3205 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3199, line: 42, baseType: !32, size: 32, elements: !3206)
!3206 = !{!3207, !3208, !3209, !3210, !3211, !3212}
!3207 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3208 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3209 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3210 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3211 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3212 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3214, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3214 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3216, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3217, splitDebugInlining: false, nameTableKind: None)
!3216 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3217 = !{!102, !103, !3218, !3233}
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 32)
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !3220)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !3221)
!3221 = !{!3222, !3228}
!3222 = !DIDerivedType(tag: DW_TAG_member, scope: !3220, file: !146, line: 38, baseType: !3223, size: 32)
!3223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3220, file: !146, line: 38, size: 32, elements: !3224)
!3224 = !{!3225, !3227}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3223, file: !146, line: 39, baseType: !3226, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3223, file: !146, line: 40, baseType: !3226, size: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, scope: !3220, file: !146, line: 42, baseType: !3229, size: 32, offset: 32)
!3229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3220, file: !146, line: 42, size: 32, elements: !3230)
!3230 = !{!3231, !3232}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3229, file: !146, line: 43, baseType: !3226, size: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3229, file: !146, line: 44, baseType: !3226, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 32)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !3235)
!3235 = !{!3236, !3280, !3292, !3293, !3294, !3295, !3301, !3314}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3234, file: !163, line: 247, baseType: !3237, size: 384)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !3238)
!3238 = !{!3239, !3249, !3256, !3257, !3258, !3267, !3268, !3269}
!3239 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !163, line: 60, baseType: !3240, size: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !163, line: 60, size: 64, elements: !3241)
!3241 = !{!3242, !3243}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3240, file: !163, line: 61, baseType: !3219, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3240, file: !163, line: 62, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !3245)
!3245 = !{!3246}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3244, file: !175, line: 50, baseType: !3247, size: 64)
!3247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3248, size: 64, elements: !180)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3237, file: !163, line: 68, baseType: !3250, size: 32, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !3252)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !3253)
!3253 = !{!3254}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3252, file: !141, line: 232, baseType: !3255, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !3220)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3237, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3237, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!3258 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !163, line: 90, baseType: !3259, size: 16, offset: 112)
!3259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !163, line: 90, size: 16, elements: !3260)
!3260 = !{!3261, !3266}
!3261 = !DIDerivedType(tag: DW_TAG_member, scope: !3259, file: !163, line: 91, baseType: !3262, size: 16)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3259, file: !163, line: 91, size: 16, elements: !3263)
!3263 = !{!3264, !3265}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3262, file: !163, line: 96, baseType: !195, size: 8)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3262, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3259, file: !163, line: 100, baseType: !121, size: 16)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3237, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3237, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3237, file: !163, line: 131, baseType: !3270, size: 192, offset: 192)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !3271)
!3271 = !{!3272, !3273, !3279}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3270, file: !141, line: 245, baseType: !3219, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3270, file: !141, line: 246, baseType: !3274, size: 32, offset: 64)
!3274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !3275)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 32)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{null, !3278}
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3270, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3234, file: !163, line: 250, baseType: !3281, size: 288, offset: 384)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3281, file: !214, line: 26, baseType: !108, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3281, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3281, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3281, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3281, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3281, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3281, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3281, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3281, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3234, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3234, file: !163, line: 256, baseType: !3251, size: 64, offset: 704)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3234, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3234, file: !163, line: 300, baseType: !3296, size: 96, offset: 800)
!3296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !3297)
!3297 = !{!3298, !3299, !3300}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3296, file: !163, line: 153, baseType: !22, size: 32)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3296, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3296, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3234, file: !163, line: 325, baseType: !3302, size: 32, offset: 896)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 32)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !3304)
!3304 = !{!3305, !3311, !3312}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3303, file: !137, line: 5074, baseType: !3306, size: 96)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !3307)
!3307 = !{!3308, !3309, !3310}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3306, file: !240, line: 57, baseType: !243, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3306, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3306, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3303, file: !137, line: 5075, baseType: !3251, size: 64, offset: 96)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3303, file: !137, line: 5076, baseType: !3313, offset: 160)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3234, file: !163, line: 343, baseType: !3315, size: 64, offset: 928)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !3316)
!3316 = !{!3317, !3318}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3315, file: !214, line: 63, baseType: !108, size: 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3315, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!3319 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3320, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3321, splitDebugInlining: false, nameTableKind: None)
!3320 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3321 = !{!22, !102, !103}
!3322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3323, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3323 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3325, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3325 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3326 = !{!"Ubuntu clang version 14.0.6"}
!3327 = !{i32 7, !"Dwarf Version", i32 4}
!3328 = !{i32 2, !"Debug Info Version", i32 3}
!3329 = !{i32 1, !"wchar_size", i32 4}
!3330 = !{i32 1, !"min_enum_size", i32 4}
!3331 = !{i32 1, !"branch-target-enforcement", i32 0}
!3332 = !{i32 1, !"sign-return-address", i32 0}
!3333 = !{i32 1, !"sign-return-address-all", i32 0}
!3334 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3335 = !{i32 7, !"frame-pointer", i32 2}
!3336 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3337, file: !3337, line: 26, type: !334, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !251)
!3337 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3338 = !DILocation(line: 28, column: 1, scope: !3336)
!3339 = !{i64 2154341550, i64 2154341570, i64 2154341633}
!3340 = !DILocation(line: 29, column: 1, scope: !3336)
!3341 = !{i64 2154341965, i64 2154341985, i64 2154342048}
!3342 = !DILocation(line: 30, column: 1, scope: !3336)
!3343 = !{i64 2154342384, i64 2154342404, i64 2154342467}
!3344 = !DILocation(line: 31, column: 1, scope: !3336)
!3345 = !{i64 2154342803, i64 2154342823, i64 2154342886}
!3346 = !DILocation(line: 33, column: 1, scope: !3336)
!3347 = !{i64 2154343095, i64 2154343115, i64 2154343178}
!3348 = !DILocation(line: 35, column: 1, scope: !3336)
!3349 = !{i64 2154343420, i64 2154343440, i64 2154343503}
!3350 = !DILocation(line: 50, column: 1, scope: !3336)
!3351 = !{i64 2154343847, i64 2154343867, i64 2154343930}
!3352 = !DILocation(line: 54, column: 1, scope: !3336)
!3353 = !{i64 2154344286, i64 2154344306, i64 2154344369}
!3354 = !DILocation(line: 61, column: 1, scope: !3336)
!3355 = !{i64 2154344603, i64 2154344623, i64 2154344686}
!3356 = !DILocation(line: 63, column: 1, scope: !3336)
!3357 = !{i64 2154344983, i64 2154345003, i64 2154345066}
!3358 = !DILocation(line: 64, column: 1, scope: !3336)
!3359 = !{i64 2154345505, i64 2154345525, i64 2154345588}
!3360 = !DILocation(line: 65, column: 1, scope: !3336)
!3361 = !{i64 2154346003, i64 2154346023, i64 2154346086}
!3362 = !DILocation(line: 66, column: 1, scope: !3336)
!3363 = !{i64 2154346485, i64 2154346505, i64 2154346568}
!3364 = !DILocation(line: 67, column: 1, scope: !3336)
!3365 = !{i64 2154346992, i64 2154347012, i64 2154347075}
!3366 = !DILocation(line: 68, column: 1, scope: !3336)
!3367 = !{i64 2154347480, i64 2154347500, i64 2154347563}
!3368 = !DILocation(line: 70, column: 1, scope: !3336)
!3369 = !{i64 2154347948, i64 2154347968, i64 2154348031}
!3370 = !DILocation(line: 71, column: 1, scope: !3336)
!3371 = !{i64 2154348390, i64 2154348410, i64 2154348473}
!3372 = !DILocation(line: 72, column: 1, scope: !3336)
!3373 = !{i64 2154348848, i64 2154348868, i64 2154348931}
!3374 = !DILocation(line: 79, column: 1, scope: !3336)
!3375 = !{i64 2154349302, i64 2154349322, i64 2154349385}
!3376 = !DILocation(line: 80, column: 1, scope: !3336)
!3377 = !{i64 2154349813, i64 2154349833, i64 2154349896}
!3378 = !DILocation(line: 82, column: 1, scope: !3336)
!3379 = !{i64 2154354365, i64 2154354385, i64 2154354448}
!3380 = !DILocation(line: 97, column: 1, scope: !3336)
!3381 = !{i64 2154354702, i64 2154354722, i64 2154354785}
!3382 = !DILocation(line: 99, column: 1, scope: !3336)
!3383 = !{i64 2154354920, i64 2154354940, i64 2154355003}
!3384 = !DILocation(line: 102, column: 1, scope: !3336)
!3385 = !{i64 2154355177, i64 2154355197, i64 2154355260}
!3386 = !DILocation(line: 105, column: 1, scope: !3336)
!3387 = !{i64 2154355417, i64 2154355437, i64 2154355500}
!3388 = !DILocation(line: 115, column: 1, scope: !3336)
!3389 = !{i64 2154355756, i64 2154355776, i64 2154355839}
!3390 = !DILocation(line: 118, column: 1, scope: !3336)
!3391 = !{i64 2154356100, i64 2154356120, i64 2154356183}
!3392 = !DILocation(line: 32, column: 1, scope: !3393)
!3393 = !DILexicalBlockFile(scope: !3336, file: !3394, discriminator: 0)
!3394 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3395 = !{i64 2154356456, i64 2154356476, i64 2154356539}
!3396 = !DILocation(line: 33, column: 1, scope: !3393)
!3397 = !{i64 2154356968, i64 2154356988, i64 2154357051}
!3398 = !DILocation(line: 53, column: 1, scope: !3393)
!3399 = !{i64 2154357476, i64 2154357496, i64 2154357559}
!3400 = !DILocation(line: 54, column: 1, scope: !3393)
!3401 = !{i64 2154357894, i64 2154357914, i64 2154357977}
!3402 = !DILocation(line: 55, column: 1, scope: !3393)
!3403 = !{i64 2154358312, i64 2154358332, i64 2154358395}
!3404 = !DILocation(line: 56, column: 1, scope: !3393)
!3405 = !{i64 2154358730, i64 2154358750, i64 2154358813}
!3406 = !DILocation(line: 57, column: 1, scope: !3393)
!3407 = !{i64 2154359148, i64 2154359168, i64 2154359231}
!3408 = !DILocation(line: 58, column: 1, scope: !3393)
!3409 = !{i64 2154359566, i64 2154359586, i64 2154359649}
!3410 = !DILocation(line: 59, column: 1, scope: !3393)
!3411 = !{i64 2154359984, i64 2154360004, i64 2154360067}
!3412 = !DILocation(line: 60, column: 1, scope: !3393)
!3413 = !{i64 2154360408, i64 2154360428, i64 2154360491}
!3414 = !DILocation(line: 61, column: 1, scope: !3393)
!3415 = !{i64 2154360725, i64 2154360745, i64 2154360808}
!3416 = !DILocation(line: 70, column: 1, scope: !3393)
!3417 = !{i64 2154360954, i64 2154360974, i64 2154361037}
!3418 = !DILocation(line: 72, column: 1, scope: !3393)
!3419 = !{i64 2154361286, i64 2154361306, i64 2154361369}
!3420 = !DILocation(line: 73, column: 1, scope: !3393)
!3421 = !{i64 2154361736, i64 2154361756, i64 2154361819}
!3422 = !DILocation(line: 74, column: 1, scope: !3393)
!3423 = !{i64 2154362186, i64 2154362206, i64 2154362269}
!3424 = !DILocation(line: 75, column: 1, scope: !3393)
!3425 = !{i64 2154362636, i64 2154362656, i64 2154362719}
!3426 = !DILocation(line: 76, column: 1, scope: !3393)
!3427 = !{i64 2154363086, i64 2154363106, i64 2154363169}
!3428 = !DILocation(line: 77, column: 1, scope: !3393)
!3429 = !{i64 2154363536, i64 2154363556, i64 2154363619}
!3430 = !DILocation(line: 78, column: 1, scope: !3393)
!3431 = !{i64 2154368047, i64 2154368067, i64 2154368130}
!3432 = !DILocation(line: 79, column: 1, scope: !3393)
!3433 = !{i64 2154368497, i64 2154368517, i64 2154368580}
!3434 = !DILocation(line: 80, column: 1, scope: !3393)
!3435 = !{i64 2154368950, i64 2154368970, i64 2154369033}
!3436 = !DILocation(line: 84, column: 1, scope: !3393)
!3437 = !{i64 2154369282, i64 2154369302, i64 2154369365}
!3438 = !DILocation(line: 91, column: 1, scope: !3393)
!3439 = !{i64 2154369679, i64 2154369699, i64 2154369762}
!3440 = !DILocation(line: 93, column: 1, scope: !3393)
!3441 = !{i64 2154370046, i64 2154370066, i64 2154370129}
!3442 = !DILocation(line: 106, column: 1, scope: !3393)
!3443 = !{i64 2154370316, i64 2154370336, i64 2154370399}
!3444 = !DILocation(line: 11, column: 1, scope: !3445)
!3445 = !DILexicalBlockFile(scope: !3336, file: !3446, discriminator: 0)
!3446 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3447 = distinct !DISubprogram(name: "s_cb", scope: !114, file: !114, line: 152, type: !287, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3448)
!3448 = !{!3449, !3450, !3457}
!3449 = !DILocalVariable(name: "chan", arg: 1, scope: !3447, file: !114, line: 152, type: !289)
!3450 = !DILocalVariable(name: "msg_received", scope: !3447, file: !114, line: 154, type: !3451)
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bm_msg", file: !353, line: 15, size: 2048, elements: !3452)
!3452 = !{!3453}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3451, file: !353, line: 16, baseType: !3454, size: 2048)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2048, elements: !3455)
!3455 = !{!3456}
!3456 = !DISubrange(count: 256)
!3457 = !DILocalVariable(name: "actual_message_data", scope: !3447, file: !114, line: 155, type: !3458)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 32)
!3459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!3460 = !DILocation(line: 0, scope: !3447)
!3461 = !DILocation(line: 154, column: 2, scope: !3447)
!3462 = !DILocation(line: 154, column: 16, scope: !3447)
!3463 = !DILocation(line: 155, column: 56, scope: !3447)
!3464 = !DILocation(line: 157, column: 45, scope: !3447)
!3465 = !DILocation(line: 157, column: 2, scope: !3447)
!3466 = !DILocation(line: 159, column: 8, scope: !3447)
!3467 = !DILocation(line: 160, column: 1, scope: !3447)
!3468 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3469, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3471)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!13, !289}
!3471 = !{!3472}
!3472 = !DILocalVariable(name: "chan", arg: 1, scope: !3468, file: !117, line: 416, type: !289)
!3473 = !DILocation(line: 0, scope: !3468)
!3474 = !DILocation(line: 420, column: 15, scope: !3468)
!3475 = !DILocation(line: 420, column: 2, scope: !3468)
!3476 = distinct !DISubprogram(name: "producer_thread", scope: !114, file: !114, line: 164, type: !334, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3477)
!3477 = !{!3478, !3479, !3481, !3483, !3484, !3486, !3487, !3488}
!3478 = !DILocalVariable(name: "msg", scope: !3476, file: !114, line: 169, type: !3451)
!3479 = !DILocalVariable(name: "actual_message_data", scope: !3476, file: !114, line: 170, type: !3480)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3481 = !DILocalVariable(name: "i", scope: !3482, file: !114, line: 172, type: !109)
!3482 = distinct !DILexicalBlock(scope: !3476, file: !114, line: 172, column: 2)
!3483 = !DILocalVariable(name: "start", scope: !3476, file: !114, line: 186, type: !108)
!3484 = !DILocalVariable(name: "internal_count", scope: !3485, file: !114, line: 188, type: !109)
!3485 = distinct !DILexicalBlock(scope: !3476, file: !114, line: 188, column: 2)
!3486 = !DILocalVariable(name: "duration", scope: !3476, file: !114, line: 200, type: !108)
!3487 = !DILocalVariable(name: "i", scope: !3476, file: !114, line: 206, type: !109)
!3488 = !DILocalVariable(name: "f", scope: !3476, file: !114, line: 207, type: !109)
!3489 = !DILocation(line: 166, column: 2, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !114, line: 166, column: 2)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !114, line: 166, column: 2)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 166, column: 2)
!3493 = distinct !DILexicalBlock(scope: !3476, file: !114, line: 166, column: 2)
!3494 = !DILocation(line: 169, column: 2, scope: !3476)
!3495 = !DILocation(line: 169, column: 16, scope: !3476)
!3496 = !DILocation(line: 0, scope: !3482)
!3497 = !DILocation(line: 172, column: 2, scope: !3482)
!3498 = !DILocation(line: 176, column: 2, scope: !3476)
!3499 = !DILocation(line: 0, scope: !3476)
!3500 = !DILocation(line: 179, column: 35, scope: !3476)
!3501 = !DILocation(line: 179, column: 33, scope: !3476)
!3502 = !DILocation(line: 181, column: 28, scope: !3476)
!3503 = !DILocation(line: 184, column: 2, scope: !3476)
!3504 = !DILocation(line: 186, column: 19, scope: !3476)
!3505 = !DILocation(line: 0, scope: !3485)
!3506 = !DILocation(line: 188, column: 2, scope: !3485)
!3507 = !DILocation(line: 173, column: 18, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !114, line: 172, column: 62)
!3509 = distinct !DILexicalBlock(scope: !3482, file: !114, line: 172, column: 2)
!3510 = !DILocation(line: 173, column: 3, scope: !3508)
!3511 = !DILocation(line: 173, column: 16, scope: !3508)
!3512 = !DILocation(line: 172, column: 57, scope: !3509)
!3513 = !DILocation(line: 172, column: 52, scope: !3509)
!3514 = distinct !{!3514, !3497, !3515}
!3515 = !DILocation(line: 174, column: 2, scope: !3482)
!3516 = !DILocation(line: 200, column: 23, scope: !3476)
!3517 = !DILocation(line: 200, column: 41, scope: !3476)
!3518 = !DILocation(line: 202, column: 15, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3476, file: !114, line: 202, column: 6)
!3520 = !DILocation(line: 202, column: 6, scope: !3476)
!3521 = !DILocation(line: 190, column: 3, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !114, line: 189, column: 49)
!3523 = distinct !DILexicalBlock(scope: !3485, file: !114, line: 188, column: 2)
!3524 = !DILocation(line: 194, column: 31, scope: !3522)
!3525 = !DILocation(line: 194, column: 3, scope: !3522)
!3526 = !DILocation(line: 196, column: 3, scope: !3522)
!3527 = !DILocation(line: 198, column: 33, scope: !3522)
!3528 = !DILocation(line: 198, column: 3, scope: !3522)
!3529 = !DILocation(line: 189, column: 22, scope: !3523)
!3530 = !DILocation(line: 188, column: 85, scope: !3523)
!3531 = distinct !{!3531, !3506, !3532}
!3532 = !DILocation(line: 199, column: 2, scope: !3485)
!3533 = !DILocation(line: 203, column: 3, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !114, line: 203, column: 3)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !114, line: 203, column: 3)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !114, line: 203, column: 3)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !114, line: 203, column: 3)
!3538 = distinct !DILexicalBlock(scope: !3519, file: !114, line: 202, column: 21)
!3539 = !DILocation(line: 204, column: 3, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3538, file: !114, line: 204, column: 3)
!3541 = !{i64 2154816301, i64 2154816317, i64 2154816343, i64 2154816371, i64 2154816391}
!3542 = !DILocation(line: 205, column: 2, scope: !3538)
!3543 = !DILocation(line: 206, column: 43, scope: !3476)
!3544 = !DILocation(line: 206, column: 41, scope: !3476)
!3545 = !DILocation(line: 207, column: 44, scope: !3476)
!3546 = !DILocation(line: 207, column: 56, scope: !3476)
!3547 = !DILocation(line: 209, column: 2, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !114, line: 209, column: 2)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !114, line: 209, column: 2)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !114, line: 209, column: 2)
!3551 = distinct !DILexicalBlock(scope: !3476, file: !114, line: 209, column: 2)
!3552 = !DILocation(line: 210, column: 2, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !114, line: 210, column: 2)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !114, line: 210, column: 2)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !114, line: 210, column: 2)
!3556 = distinct !DILexicalBlock(scope: !3476, file: !114, line: 210, column: 2)
!3557 = !DILocation(line: 211, column: 2, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !114, line: 211, column: 2)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !114, line: 211, column: 2)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !114, line: 211, column: 2)
!3561 = distinct !DILexicalBlock(scope: !3476, file: !114, line: 211, column: 2)
!3562 = !DILocation(line: 213, column: 2, scope: !3476)
!3563 = !DILocation(line: 214, column: 1, scope: !3476)
!3564 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3565, file: !3565, line: 175, type: !3566, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3568)
!3565 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!278, !103}
!3568 = !{!3569}
!3569 = !DILocalVariable(name: "level", arg: 1, scope: !3564, file: !3565, line: 175, type: !103)
!3570 = !DILocation(line: 0, scope: !3564)
!3571 = !DILocation(line: 177, column: 2, scope: !3564)
!3572 = !DILocation(line: 189, column: 1, scope: !3564)
!3573 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !137, file: !137, line: 1640, type: !3574, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!108}
!3576 = !DILocation(line: 1642, column: 19, scope: !3573)
!3577 = !DILocation(line: 1642, column: 9, scope: !3573)
!3578 = !DILocation(line: 1642, column: 2, scope: !3573)
!3579 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3580, file: !3580, line: 403, type: !3581, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3583)
!3580 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3581 = !DISubroutineType(types: !3582)
!3582 = !{!109, !109}
!3583 = !{!3584}
!3584 = !DILocalVariable(name: "t", arg: 1, scope: !3579, file: !3580, line: 403, type: !109)
!3585 = !DILocation(line: 0, scope: !3579)
!3586 = !DILocation(line: 406, column: 2, scope: !3579)
!3587 = distinct !DISubprogram(name: "k_uptime_get", scope: !137, file: !137, line: 1616, type: !3588, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!106}
!3590 = !DILocation(line: 1618, column: 31, scope: !3587)
!3591 = !DILocation(line: 1618, column: 9, scope: !3587)
!3592 = !DILocation(line: 1618, column: 2, scope: !3587)
!3593 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3594, file: !3594, line: 564, type: !3588, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3594 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!3595 = !DILocation(line: 573, column: 2, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3593, file: !3594, line: 573, column: 2)
!3597 = !{i64 2154083243}
!3598 = !DILocation(line: 574, column: 9, scope: !3593)
!3599 = !DILocation(line: 574, column: 2, scope: !3593)
!3600 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3580, file: !3580, line: 1103, type: !3581, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3601)
!3601 = !{!3602}
!3602 = !DILocalVariable(name: "t", arg: 1, scope: !3600, file: !3580, line: 1103, type: !109)
!3603 = !DILocation(line: 0, scope: !3600)
!3604 = !DILocalVariable(name: "t", arg: 1, scope: !3605, file: !3580, line: 102, type: !109)
!3605 = distinct !DISubprogram(name: "z_tmcvt", scope: !3580, file: !3580, line: 102, type: !3606, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3608)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!109, !109, !108, !108, !131, !131, !131, !131}
!3608 = !{!3604, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618}
!3609 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3605, file: !3580, line: 102, type: !108)
!3610 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3605, file: !3580, line: 103, type: !108)
!3611 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3605, file: !3580, line: 103, type: !131)
!3612 = !DILocalVariable(name: "result32", arg: 5, scope: !3605, file: !3580, line: 104, type: !131)
!3613 = !DILocalVariable(name: "round_up", arg: 6, scope: !3605, file: !3580, line: 104, type: !131)
!3614 = !DILocalVariable(name: "round_off", arg: 7, scope: !3605, file: !3580, line: 105, type: !131)
!3615 = !DILocalVariable(name: "mul_ratio", scope: !3605, file: !3580, line: 107, type: !131)
!3616 = !DILocalVariable(name: "div_ratio", scope: !3605, file: !3580, line: 109, type: !131)
!3617 = !DILocalVariable(name: "off", scope: !3605, file: !3580, line: 116, type: !109)
!3618 = !DILocalVariable(name: "rdivisor", scope: !3619, file: !3580, line: 119, type: !108)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !3580, line: 118, column: 18)
!3620 = distinct !DILexicalBlock(scope: !3605, file: !3580, line: 118, column: 6)
!3621 = !DILocation(line: 0, scope: !3605, inlinedAt: !3622)
!3622 = distinct !DILocation(line: 1106, column: 9, scope: !3600)
!3623 = !DILocation(line: 139, column: 13, scope: !3624, inlinedAt: !3622)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !3580, line: 138, column: 10)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !3580, line: 136, column: 7)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !3580, line: 134, column: 17)
!3627 = distinct !DILexicalBlock(scope: !3605, file: !3580, line: 134, column: 6)
!3628 = !DILocation(line: 1106, column: 2, scope: !3600)
!3629 = distinct !DISubprogram(name: "cbvprintf_package", scope: !381, file: !381, line: 233, type: !3630, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3639)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!103, !102, !132, !108, !337, !3632}
!3632 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3633, line: 99, baseType: !3634)
!3633 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3634 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3633, line: 40, baseType: !3635)
!3635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !381, baseType: !3636)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3637)
!3637 = !{!3638}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3636, file: !381, line: 18, baseType: !102, size: 32)
!3639 = !{!3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3675, !3684, !3687, !3688, !3691, !3694, !3697, !3700, !3706}
!3640 = !DILocalVariable(name: "packaged", arg: 1, scope: !3629, file: !381, line: 233, type: !102)
!3641 = !DILocalVariable(name: "len", arg: 2, scope: !3629, file: !381, line: 233, type: !132)
!3642 = !DILocalVariable(name: "flags", arg: 3, scope: !3629, file: !381, line: 233, type: !108)
!3643 = !DILocalVariable(name: "fmt", arg: 4, scope: !3629, file: !381, line: 234, type: !337)
!3644 = !DILocalVariable(name: "ap", arg: 5, scope: !3629, file: !381, line: 234, type: !3632)
!3645 = !DILocalVariable(name: "buf0", scope: !3629, file: !381, line: 247, type: !379)
!3646 = !DILocalVariable(name: "buf", scope: !3629, file: !381, line: 248, type: !379)
!3647 = !DILocalVariable(name: "size", scope: !3629, file: !381, line: 249, type: !32)
!3648 = !DILocalVariable(name: "align", scope: !3629, file: !381, line: 250, type: !32)
!3649 = !DILocalVariable(name: "str_ptr_pos", scope: !3629, file: !381, line: 251, type: !3650)
!3650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !1885)
!3651 = !DILocalVariable(name: "str_ptr_arg", scope: !3629, file: !381, line: 252, type: !3650)
!3652 = !DILocalVariable(name: "s_idx", scope: !3629, file: !381, line: 253, type: !32)
!3653 = !DILocalVariable(name: "s_rw_cnt", scope: !3629, file: !381, line: 254, type: !32)
!3654 = !DILocalVariable(name: "s_ro_cnt", scope: !3629, file: !381, line: 255, type: !32)
!3655 = !DILocalVariable(name: "arg_idx", scope: !3629, file: !381, line: 256, type: !103)
!3656 = !DILocalVariable(name: "i", scope: !3629, file: !381, line: 257, type: !32)
!3657 = !DILocalVariable(name: "s", scope: !3629, file: !381, line: 258, type: !337)
!3658 = !DILocalVariable(name: "parsing", scope: !3629, file: !381, line: 259, type: !131)
!3659 = !DILocalVariable(name: "rws_pos_en", scope: !3629, file: !381, line: 263, type: !131)
!3660 = !DILocalVariable(name: "fros_cnt", scope: !3629, file: !381, line: 268, type: !103)
!3661 = !DILocalVariable(name: "is_str_arg", scope: !3629, file: !381, line: 269, type: !131)
!3662 = !DILocalVariable(name: "pkg_hdr", scope: !3629, file: !381, line: 270, type: !3663)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 32)
!3664 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3665, line: 78, size: 32, elements: !3666)
!3665 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3666 = !{!3667, !3674}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3664, file: !3665, line: 80, baseType: !3668, size: 32)
!3668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3665, line: 45, size: 32, elements: !3669)
!3669 = !{!3670, !3671, !3672, !3673}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3668, file: !3665, line: 47, baseType: !185, size: 8)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3668, file: !3665, line: 50, baseType: !185, size: 8, offset: 8)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3668, file: !3665, line: 53, baseType: !185, size: 8, offset: 16)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3668, file: !3665, line: 56, baseType: !185, size: 8, offset: 24)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3664, file: !3665, line: 82, baseType: !102, size: 32)
!3675 = !DILocalVariable(name: "v", scope: !3676, file: !381, line: 567, type: !3680)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !381, line: 562, column: 14)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !381, line: 481, column: 18)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !381, line: 466, column: 3)
!3679 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 343, column: 15)
!3680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3629, file: !381, line: 567, size: 64, elements: !3681)
!3681 = !{!3682, !3683}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3680, file: !381, line: 567, baseType: !372, size: 64)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3680, file: !381, line: 567, baseType: !370, size: 64)
!3684 = !DILocalVariable(name: "is_ro", scope: !3685, file: !381, line: 620, type: !131)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !381, line: 613, column: 19)
!3686 = distinct !DILexicalBlock(scope: !3679, file: !381, line: 613, column: 7)
!3687 = !DILocalVariable(name: "do_ro", scope: !3685, file: !381, line: 621, type: !131)
!3688 = !DILocalVariable(name: "s_ptr_idx", scope: !3689, file: !381, line: 626, type: !108)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !381, line: 625, column: 11)
!3690 = distinct !DILexicalBlock(scope: !3685, file: !381, line: 623, column: 8)
!3691 = !DILocalVariable(name: "v", scope: !3692, file: !381, line: 684, type: !103)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !381, line: 683, column: 35)
!3693 = distinct !DILexicalBlock(scope: !3686, file: !381, line: 683, column: 14)
!3694 = !DILocalVariable(name: "v", scope: !3695, file: !381, line: 691, type: !376)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !381, line: 690, column: 36)
!3696 = distinct !DILexicalBlock(scope: !3693, file: !381, line: 690, column: 14)
!3697 = !DILocalVariable(name: "v", scope: !3698, file: !381, line: 698, type: !107)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !381, line: 697, column: 41)
!3699 = distinct !DILexicalBlock(scope: !3696, file: !381, line: 697, column: 14)
!3700 = !DILocalVariable(name: "pos", scope: !3701, file: !381, line: 762, type: !185)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !381, line: 757, column: 31)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !381, line: 757, column: 3)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !381, line: 757, column: 3)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !381, line: 756, column: 16)
!3705 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 756, column: 6)
!3706 = !DILabel(scope: !3685, name: "process_string", file: !381, line: 615)
!3707 = !DILocation(line: 0, scope: !3629)
!3708 = !DILocation(line: 251, column: 2, scope: !3629)
!3709 = !DILocation(line: 251, column: 10, scope: !3629)
!3710 = !DILocation(line: 252, column: 2, scope: !3629)
!3711 = !DILocation(line: 252, column: 10, scope: !3629)
!3712 = !DILocation(line: 263, column: 29, scope: !3629)
!3713 = !DILocation(line: 263, column: 21, scope: !3629)
!3714 = !DILocation(line: 268, column: 21, scope: !3629)
!3715 = !DILocation(line: 268, column: 19, scope: !3629)
!3716 = !DILocation(line: 273, column: 6, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 273, column: 6)
!3718 = !DILocation(line: 273, column: 26, scope: !3717)
!3719 = !DILocation(line: 273, column: 6, scope: !3629)
!3720 = !DILocation(line: 297, column: 6, scope: !3629)
!3721 = !DILocation(line: 305, column: 11, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 305, column: 6)
!3723 = !DILocation(line: 305, column: 6, scope: !3629)
!3724 = !DILocation(line: 327, column: 19, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 327, column: 6)
!3726 = !DILocation(line: 327, column: 22, scope: !3725)
!3727 = !DILocation(line: 327, column: 33, scope: !3725)
!3728 = !DILocation(line: 327, column: 50, scope: !3725)
!3729 = !DILocation(line: 327, column: 6, scope: !3629)
!3730 = !DILocation(line: 338, column: 9, scope: !3629)
!3731 = !DILocation(line: 341, column: 2, scope: !3629)
!3732 = !DILocation(line: 472, column: 8, scope: !3678)
!3733 = !DILocation(line: 473, column: 14, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !381, line: 473, column: 9)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !381, line: 472, column: 18)
!3736 = distinct !DILexicalBlock(scope: !3678, file: !381, line: 472, column: 8)
!3737 = !DILocation(line: 473, column: 9, scope: !3735)
!3738 = !DILocation(line: 479, column: 5, scope: !3735)
!3739 = !DILocation(line: 468, column: 9, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3678, file: !381, line: 468, column: 8)
!3741 = !DILocation(line: 468, column: 8, scope: !3740)
!3742 = !DILocation(line: 468, column: 15, scope: !3740)
!3743 = !DILocation(line: 468, column: 8, scope: !3678)
!3744 = distinct !{!3744, !3745, !3746}
!3745 = !DILocation(line: 343, column: 2, scope: !3629)
!3746 = !DILocation(line: 712, column: 2, scope: !3629)
!3747 = !DILocation(line: 481, column: 4, scope: !3678)
!3748 = !DILocation(line: 484, column: 12, scope: !3677)
!3749 = !DILocation(line: 485, column: 5, scope: !3677)
!3750 = !DILocation(line: 505, column: 5, scope: !3677)
!3751 = !DILocation(line: 518, column: 5, scope: !3677)
!3752 = !DILocation(line: 523, column: 5, scope: !3677)
!3753 = !DILocation(line: 532, column: 9, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3677, file: !381, line: 532, column: 9)
!3755 = !DILocation(line: 532, column: 17, scope: !3754)
!3756 = !DILocation(line: 532, column: 9, scope: !3677)
!3757 = !DILocation(line: 533, column: 10, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !381, line: 533, column: 10)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !381, line: 532, column: 25)
!3760 = !DILocation(line: 533, column: 18, scope: !3758)
!3761 = !DILocation(line: 0, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3676, file: !381, line: 569, column: 9)
!3763 = !DILocation(line: 0, scope: !3676)
!3764 = !DILocation(line: 579, column: 20, scope: !3676)
!3765 = !DILocation(line: 579, column: 11, scope: !3676)
!3766 = !DILocation(line: 580, column: 9, scope: !3676)
!3767 = !DILocation(line: 582, column: 21, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !381, line: 582, column: 10)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !381, line: 580, column: 23)
!3770 = distinct !DILexicalBlock(scope: !3676, file: !381, line: 580, column: 9)
!3771 = !DILocation(line: 582, column: 28, scope: !3768)
!3772 = !DILocation(line: 582, column: 10, scope: !3769)
!3773 = !DILocation(line: 0, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !381, line: 587, column: 17)
!3775 = distinct !DILexicalBlock(scope: !3769, file: !381, line: 585, column: 10)
!3776 = !DILocation(line: 593, column: 9, scope: !3676)
!3777 = !DILocation(line: 600, column: 5, scope: !3677)
!3778 = !DILocation(line: 605, column: 18, scope: !3679)
!3779 = !DILocation(line: 605, column: 9, scope: !3679)
!3780 = !DILocation(line: 608, column: 20, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3679, file: !381, line: 608, column: 7)
!3782 = !DILocation(line: 608, column: 23, scope: !3781)
!3783 = !DILocation(line: 608, column: 34, scope: !3781)
!3784 = !DILocation(line: 608, column: 41, scope: !3781)
!3785 = !DILocation(line: 608, column: 7, scope: !3679)
!3786 = !DILocation(line: 613, column: 7, scope: !3679)
!3787 = !DILocation(line: 614, column: 8, scope: !3685)
!3788 = !DILocation(line: 614, column: 4, scope: !3685)
!3789 = !DILocation(line: 255, column: 15, scope: !3629)
!3790 = !DILocation(line: 256, column: 6, scope: !3629)
!3791 = !DILocation(line: 254, column: 15, scope: !3629)
!3792 = !DILocation(line: 253, column: 15, scope: !3629)
!3793 = !DILocation(line: 320, column: 7, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3722, file: !381, line: 305, column: 20)
!3795 = !DILocation(line: 615, column: 1, scope: !3685)
!3796 = !DILocation(line: 616, column: 8, scope: !3685)
!3797 = !DILocation(line: 617, column: 5, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !381, line: 616, column: 22)
!3799 = distinct !DILexicalBlock(scope: !3685, file: !381, line: 616, column: 8)
!3800 = !DILocation(line: 617, column: 25, scope: !3798)
!3801 = !DILocation(line: 618, column: 4, scope: !3798)
!3802 = !DILocation(line: 620, column: 26, scope: !3685)
!3803 = !DILocation(line: 620, column: 29, scope: !3685)
!3804 = !DILocation(line: 620, column: 17, scope: !3685)
!3805 = !DILocation(line: 620, column: 43, scope: !3685)
!3806 = !DILocation(line: 0, scope: !3685)
!3807 = !DILocation(line: 623, column: 14, scope: !3690)
!3808 = !DILocation(line: 626, column: 26, scope: !3689)
!3809 = !DILocation(line: 626, column: 37, scope: !3689)
!3810 = !DILocation(line: 0, scope: !3689)
!3811 = !DILocation(line: 634, column: 15, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3689, file: !381, line: 634, column: 9)
!3813 = !DILocation(line: 644, column: 9, scope: !3689)
!3814 = !DILocation(line: 649, column: 27, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !381, line: 644, column: 23)
!3816 = distinct !DILexicalBlock(scope: !3689, file: !381, line: 644, column: 9)
!3817 = !DILocation(line: 649, column: 6, scope: !3815)
!3818 = !DILocation(line: 649, column: 25, scope: !3815)
!3819 = !DILocation(line: 650, column: 27, scope: !3815)
!3820 = !DILocation(line: 650, column: 6, scope: !3815)
!3821 = !DILocation(line: 650, column: 25, scope: !3815)
!3822 = !DILocation(line: 651, column: 10, scope: !3815)
!3823 = !DILocation(line: 653, column: 26, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !381, line: 651, column: 17)
!3825 = distinct !DILexicalBlock(scope: !3815, file: !381, line: 651, column: 10)
!3826 = !DILocation(line: 654, column: 15, scope: !3824)
!3827 = !DILocation(line: 655, column: 6, scope: !3824)
!3828 = !DILocation(line: 656, column: 15, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !381, line: 655, column: 13)
!3830 = !DILocation(line: 658, column: 16, scope: !3816)
!3831 = !DILocation(line: 663, column: 10, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !381, line: 658, column: 23)
!3833 = distinct !DILexicalBlock(scope: !3816, file: !381, line: 658, column: 16)
!3834 = !DILocation(line: 664, column: 5, scope: !3832)
!3835 = !DILocation(line: 664, column: 16, scope: !3833)
!3836 = !DILocation(line: 669, column: 10, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !381, line: 664, column: 28)
!3838 = distinct !DILexicalBlock(scope: !3833, file: !381, line: 664, column: 16)
!3839 = !DILocation(line: 670, column: 5, scope: !3837)
!3840 = !DILocation(line: 675, column: 13, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3838, file: !381, line: 670, column: 12)
!3842 = !DILocation(line: 675, column: 27, scope: !3841)
!3843 = !DILocation(line: 675, column: 10, scope: !3841)
!3844 = !DILocation(line: 678, column: 10, scope: !3689)
!3845 = !DILocation(line: 680, column: 8, scope: !3685)
!3846 = !DILocation(line: 683, column: 14, scope: !3686)
!3847 = !DILocation(line: 684, column: 12, scope: !3692)
!3848 = !DILocation(line: 0, scope: !3692)
!3849 = !DILocation(line: 686, column: 8, scope: !3692)
!3850 = !DILocation(line: 687, column: 5, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !381, line: 686, column: 22)
!3852 = distinct !DILexicalBlock(scope: !3692, file: !381, line: 686, column: 8)
!3853 = !DILocation(line: 687, column: 17, scope: !3851)
!3854 = !DILocation(line: 688, column: 4, scope: !3851)
!3855 = !DILocation(line: 698, column: 18, scope: !3698)
!3856 = !DILocation(line: 0, scope: !3698)
!3857 = !DILocation(line: 700, column: 8, scope: !3698)
!3858 = !DILocation(line: 704, column: 6, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !381, line: 703, column: 12)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !381, line: 701, column: 9)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !381, line: 700, column: 22)
!3862 = distinct !DILexicalBlock(scope: !3698, file: !381, line: 700, column: 8)
!3863 = !DILocation(line: 704, column: 24, scope: !3859)
!3864 = !DILocation(line: 706, column: 4, scope: !3861)
!3865 = !DILocation(line: 0, scope: !3693)
!3866 = !DILocation(line: 0, scope: !3679)
!3867 = !DILocation(line: 720, column: 6, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 720, column: 6)
!3869 = !DILocation(line: 720, column: 17, scope: !3868)
!3870 = !DILocation(line: 720, column: 31, scope: !3868)
!3871 = !DILocation(line: 720, column: 6, scope: !3629)
!3872 = !DILocation(line: 729, column: 6, scope: !3629)
!3873 = !DILocation(line: 730, column: 21, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !381, line: 729, column: 20)
!3875 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 729, column: 6)
!3876 = !DILocation(line: 730, column: 27, scope: !3874)
!3877 = !DILocation(line: 730, column: 3, scope: !3874)
!3878 = !DILocation(line: 737, column: 22, scope: !3629)
!3879 = !DILocation(line: 737, column: 20, scope: !3629)
!3880 = !DILocation(line: 0, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 739, column: 6)
!3882 = !DILocation(line: 745, column: 17, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3881, file: !381, line: 743, column: 9)
!3884 = !DILocation(line: 745, column: 25, scope: !3883)
!3885 = !DILocation(line: 746, column: 17, scope: !3883)
!3886 = !DILocation(line: 746, column: 28, scope: !3883)
!3887 = !DILocation(line: 749, column: 29, scope: !3629)
!3888 = !DILocation(line: 749, column: 16, scope: !3629)
!3889 = !DILocation(line: 749, column: 27, scope: !3629)
!3890 = !DILocation(line: 756, column: 6, scope: !3705)
!3891 = !DILocation(line: 756, column: 6, scope: !3629)
!3892 = !DILocation(line: 757, column: 3, scope: !3703)
!3893 = !DILocation(line: 758, column: 10, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3701, file: !381, line: 758, column: 8)
!3895 = !DILocation(line: 758, column: 25, scope: !3894)
!3896 = !DILocation(line: 758, column: 8, scope: !3701)
!3897 = !DILocation(line: 0, scope: !3701)
!3898 = !DILocation(line: 765, column: 8, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3701, file: !381, line: 765, column: 8)
!3900 = !DILocation(line: 765, column: 19, scope: !3899)
!3901 = !DILocation(line: 765, column: 23, scope: !3899)
!3902 = !DILocation(line: 765, column: 8, scope: !3701)
!3903 = !DILocation(line: 762, column: 33, scope: !3701)
!3904 = !DILocation(line: 769, column: 8, scope: !3701)
!3905 = !DILocation(line: 769, column: 11, scope: !3701)
!3906 = !DILocation(line: 757, column: 27, scope: !3702)
!3907 = !DILocation(line: 757, column: 17, scope: !3702)
!3908 = distinct !{!3908, !3892, !3909}
!3909 = !DILocation(line: 770, column: 3, scope: !3703)
!3910 = !DILocation(line: 774, column: 16, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !381, line: 774, column: 2)
!3912 = distinct !DILexicalBlock(scope: !3629, file: !381, line: 774, column: 2)
!3913 = !DILocation(line: 774, column: 2, scope: !3912)
!3914 = !DILocation(line: 776, column: 16, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !381, line: 776, column: 7)
!3916 = distinct !DILexicalBlock(scope: !3911, file: !381, line: 774, column: 30)
!3917 = !DILocation(line: 776, column: 19, scope: !3915)
!3918 = !DILocation(line: 776, column: 34, scope: !3915)
!3919 = !DILocation(line: 776, column: 7, scope: !3916)
!3920 = !DILocation(line: 780, column: 7, scope: !3916)
!3921 = !DILocation(line: 782, column: 13, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3923, file: !381, line: 780, column: 19)
!3923 = distinct !DILexicalBlock(scope: !3916, file: !381, line: 780, column: 7)
!3924 = !DILocation(line: 782, column: 8, scope: !3922)
!3925 = !DILocation(line: 782, column: 11, scope: !3922)
!3926 = !DILocation(line: 783, column: 3, scope: !3922)
!3927 = !DILocation(line: 785, column: 26, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3923, file: !381, line: 783, column: 10)
!3929 = !DILocation(line: 785, column: 41, scope: !3928)
!3930 = !DILocation(line: 785, column: 24, scope: !3928)
!3931 = !DILocation(line: 785, column: 8, scope: !3928)
!3932 = !DILocation(line: 787, column: 52, scope: !3928)
!3933 = !DILocation(line: 789, column: 11, scope: !3928)
!3934 = !DILocation(line: 789, column: 21, scope: !3928)
!3935 = !DILocation(line: 0, scope: !3923)
!3936 = !DILocation(line: 793, column: 7, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3916, file: !381, line: 793, column: 7)
!3938 = !DILocation(line: 793, column: 18, scope: !3937)
!3939 = !DILocation(line: 793, column: 22, scope: !3937)
!3940 = !DILocation(line: 793, column: 29, scope: !3937)
!3941 = !DILocation(line: 793, column: 7, scope: !3916)
!3942 = !DILocation(line: 797, column: 12, scope: !3916)
!3943 = !DILocation(line: 797, column: 7, scope: !3916)
!3944 = !DILocation(line: 797, column: 10, scope: !3916)
!3945 = !DILocation(line: 799, column: 3, scope: !3916)
!3946 = !DILocation(line: 800, column: 7, scope: !3916)
!3947 = !DILocation(line: 801, column: 2, scope: !3916)
!3948 = !DILocation(line: 338, column: 4, scope: !3629)
!3949 = !DILocation(line: 774, column: 26, scope: !3911)
!3950 = distinct !{!3950, !3913, !3951}
!3951 = !DILocation(line: 801, column: 2, scope: !3912)
!3952 = !DILocation(line: 808, column: 9, scope: !3629)
!3953 = !DILocation(line: 808, column: 2, scope: !3629)
!3954 = !DILocation(line: 813, column: 1, scope: !3629)
!3955 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !381, file: !381, line: 33, type: !3956, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3958)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!131, !337}
!3958 = !{!3959}
!3959 = !DILocalVariable(name: "addr", arg: 1, scope: !3955, file: !381, line: 33, type: !337)
!3960 = !DILocation(line: 0, scope: !3955)
!3961 = !DILocation(line: 41, column: 9, scope: !3955)
!3962 = !DILocation(line: 41, column: 2, scope: !3955)
!3963 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3964, file: !3964, line: 24, type: !3965, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3967)
!3964 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3965 = !DISubroutineType(types: !3966)
!3966 = !{!131, !13}
!3967 = !{!3968}
!3968 = !DILocalVariable(name: "addr", arg: 1, scope: !3963, file: !3964, line: 24, type: !13)
!3969 = !DILocation(line: 0, scope: !3963)
!3970 = !DILocation(line: 49, column: 30, scope: !3963)
!3971 = !DILocation(line: 49, column: 57, scope: !3963)
!3972 = !DILocation(line: 49, column: 2, scope: !3963)
!3973 = distinct !DISubprogram(name: "cbprintf_package", scope: !381, file: !381, line: 815, type: !3974, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3976)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{!103, !102, !132, !108, !337, null}
!3976 = !{!3977, !3978, !3979, !3980, !3981, !3982}
!3977 = !DILocalVariable(name: "packaged", arg: 1, scope: !3973, file: !381, line: 815, type: !102)
!3978 = !DILocalVariable(name: "len", arg: 2, scope: !3973, file: !381, line: 815, type: !132)
!3979 = !DILocalVariable(name: "flags", arg: 3, scope: !3973, file: !381, line: 815, type: !108)
!3980 = !DILocalVariable(name: "format", arg: 4, scope: !3973, file: !381, line: 816, type: !337)
!3981 = !DILocalVariable(name: "ap", scope: !3973, file: !381, line: 818, type: !3632)
!3982 = !DILocalVariable(name: "ret", scope: !3973, file: !381, line: 819, type: !103)
!3983 = !DILocation(line: 0, scope: !3973)
!3984 = !DILocation(line: 818, column: 2, scope: !3973)
!3985 = !DILocation(line: 818, column: 10, scope: !3973)
!3986 = !DILocation(line: 821, column: 2, scope: !3973)
!3987 = !DILocation(line: 822, column: 8, scope: !3973)
!3988 = !DILocation(line: 823, column: 2, scope: !3973)
!3989 = !DILocation(line: 825, column: 1, scope: !3973)
!3990 = !DILocation(line: 824, column: 2, scope: !3973)
!3991 = distinct !DISubprogram(name: "cbpprintf_external", scope: !381, file: !381, line: 827, type: !3992, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4002)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!103, !3994, !3998, !102, !102}
!3994 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3665, line: 297, baseType: !3995)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 32)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!103, null}
!3998 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3665, line: 328, baseType: !3999)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 32)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{!103, !3994, !102, !337, !3632}
!4002 = !{!4003, !4004, !4005, !4006, !4007, !4008, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021}
!4003 = !DILocalVariable(name: "out", arg: 1, scope: !3991, file: !381, line: 827, type: !3994)
!4004 = !DILocalVariable(name: "formatter", arg: 2, scope: !3991, file: !381, line: 828, type: !3998)
!4005 = !DILocalVariable(name: "ctx", arg: 3, scope: !3991, file: !381, line: 829, type: !102)
!4006 = !DILocalVariable(name: "packaged", arg: 4, scope: !3991, file: !381, line: 829, type: !102)
!4007 = !DILocalVariable(name: "buf", scope: !3991, file: !381, line: 831, type: !379)
!4008 = !DILocalVariable(name: "hdr", scope: !3991, file: !381, line: 832, type: !4009)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 32)
!4010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3665, line: 96, size: 64, elements: !4011)
!4011 = !{!4012, !4013}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4010, file: !3665, line: 98, baseType: !3664, size: 32)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4010, file: !3665, line: 101, baseType: !277, size: 32, offset: 32)
!4014 = !DILocalVariable(name: "s", scope: !3991, file: !381, line: 833, type: !277)
!4015 = !DILocalVariable(name: "ps", scope: !3991, file: !381, line: 833, type: !378)
!4016 = !DILocalVariable(name: "i", scope: !3991, file: !381, line: 834, type: !32)
!4017 = !DILocalVariable(name: "args_size", scope: !3991, file: !381, line: 834, type: !32)
!4018 = !DILocalVariable(name: "s_nbr", scope: !3991, file: !381, line: 834, type: !32)
!4019 = !DILocalVariable(name: "ros_nbr", scope: !3991, file: !381, line: 834, type: !32)
!4020 = !DILocalVariable(name: "rws_nbr", scope: !3991, file: !381, line: 834, type: !32)
!4021 = !DILocalVariable(name: "s_idx", scope: !3991, file: !381, line: 834, type: !32)
!4022 = !DILocation(line: 0, scope: !3991)
!4023 = !DILocation(line: 836, column: 10, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3991, file: !381, line: 836, column: 6)
!4025 = !DILocation(line: 836, column: 6, scope: !3991)
!4026 = !DILocation(line: 842, column: 28, scope: !3991)
!4027 = !DILocation(line: 842, column: 14, scope: !3991)
!4028 = !DILocation(line: 852, column: 16, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !381, line: 852, column: 2)
!4030 = distinct !DILexicalBlock(scope: !3991, file: !381, line: 852, column: 2)
!4031 = !DILocation(line: 852, column: 2, scope: !4030)
!4032 = !DILocation(line: 841, column: 28, scope: !3991)
!4033 = !DILocation(line: 841, column: 14, scope: !3991)
!4034 = !DILocation(line: 841, column: 32, scope: !3991)
!4035 = !DILocation(line: 847, column: 19, scope: !3991)
!4036 = !DILocation(line: 843, column: 28, scope: !3991)
!4037 = !DILocation(line: 843, column: 14, scope: !3991)
!4038 = !DILocation(line: 847, column: 31, scope: !3991)
!4039 = !DILocation(line: 844, column: 28, scope: !3991)
!4040 = !DILocation(line: 844, column: 14, scope: !3991)
!4041 = !DILocation(line: 847, column: 45, scope: !3991)
!4042 = !DILocation(line: 847, column: 41, scope: !3991)
!4043 = !DILocation(line: 854, column: 24, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4029, file: !381, line: 852, column: 30)
!4045 = !DILocation(line: 854, column: 11, scope: !4044)
!4046 = !DILocation(line: 855, column: 30, scope: !4044)
!4047 = !DILocation(line: 855, column: 22, scope: !4044)
!4048 = !DILocation(line: 855, column: 8, scope: !4044)
!4049 = !DILocation(line: 857, column: 7, scope: !4044)
!4050 = !DILocation(line: 859, column: 8, scope: !4044)
!4051 = !DILocation(line: 859, column: 18, scope: !4044)
!4052 = !DILocation(line: 859, column: 5, scope: !4044)
!4053 = !DILocation(line: 852, column: 26, scope: !4029)
!4054 = distinct !{!4054, !4031, !4055}
!4055 = !DILocation(line: 860, column: 2, scope: !4030)
!4056 = !DILocation(line: 863, column: 6, scope: !3991)
!4057 = !DILocation(line: 866, column: 56, scope: !3991)
!4058 = !DILocation(line: 866, column: 9, scope: !3991)
!4059 = !DILocation(line: 866, column: 2, scope: !3991)
!4060 = !DILocation(line: 867, column: 1, scope: !3991)
!4061 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !381, file: !381, line: 179, type: !4062, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4064)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!103, !3994, !3998, !102, !337, !102}
!4064 = !{!4065, !4066, !4067, !4068, !4069, !4070}
!4065 = !DILocalVariable(name: "out", arg: 1, scope: !4061, file: !381, line: 179, type: !3994)
!4066 = !DILocalVariable(name: "formatter", arg: 2, scope: !4061, file: !381, line: 180, type: !3998)
!4067 = !DILocalVariable(name: "ctx", arg: 3, scope: !4061, file: !381, line: 181, type: !102)
!4068 = !DILocalVariable(name: "fmt", arg: 4, scope: !4061, file: !381, line: 182, type: !337)
!4069 = !DILocalVariable(name: "buf", arg: 5, scope: !4061, file: !381, line: 182, type: !102)
!4070 = !DILocalVariable(name: "u", scope: !4061, file: !381, line: 187, type: !4071)
!4071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4061, file: !381, line: 184, size: 32, elements: !4072)
!4072 = !{!4073, !4074}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4071, file: !381, line: 185, baseType: !3632, size: 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4071, file: !381, line: 186, baseType: !102, size: 32)
!4075 = !DILocation(line: 0, scope: !4061)
!4076 = !DILocation(line: 191, column: 9, scope: !4061)
!4077 = !DILocation(line: 191, column: 2, scope: !4061)
!4078 = distinct !DISubprogram(name: "is_ptr", scope: !381, file: !381, line: 881, type: !4079, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4081)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{!131, !337, !103}
!4081 = !{!4082, !4083, !4084, !4085, !4086}
!4082 = !DILocalVariable(name: "fmt", arg: 1, scope: !4078, file: !381, line: 881, type: !337)
!4083 = !DILocalVariable(name: "n", arg: 2, scope: !4078, file: !381, line: 881, type: !103)
!4084 = !DILocalVariable(name: "c", scope: !4078, file: !381, line: 883, type: !278)
!4085 = !DILocalVariable(name: "mod", scope: !4078, file: !381, line: 884, type: !131)
!4086 = !DILocalVariable(name: "cnt", scope: !4078, file: !381, line: 885, type: !103)
!4087 = !DILocation(line: 0, scope: !4078)
!4088 = !DILocation(line: 887, column: 14, scope: !4078)
!4089 = !DILocation(line: 887, column: 22, scope: !4078)
!4090 = !DILocation(line: 887, column: 2, scope: !4078)
!4091 = !DILocation(line: 887, column: 18, scope: !4078)
!4092 = !DILocation(line: 888, column: 7, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4078, file: !381, line: 887, column: 31)
!4094 = !DILocation(line: 889, column: 12, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !381, line: 889, column: 8)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !381, line: 888, column: 12)
!4097 = distinct !DILexicalBlock(scope: !4093, file: !381, line: 888, column: 7)
!4098 = !DILocation(line: 889, column: 8, scope: !4096)
!4099 = !DILocation(line: 890, column: 11, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !381, line: 890, column: 9)
!4101 = distinct !DILexicalBlock(scope: !4095, file: !381, line: 889, column: 18)
!4102 = !DILocation(line: 890, column: 9, scope: !4101)
!4103 = !DILocation(line: 892, column: 16, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4100, file: !381, line: 892, column: 16)
!4105 = !DILocation(line: 892, column: 16, scope: !4100)
!4106 = !DILocation(line: 895, column: 15, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4095, file: !381, line: 895, column: 15)
!4108 = !DILocation(line: 895, column: 15, scope: !4095)
!4109 = !DILocation(line: 900, column: 9, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4093, file: !381, line: 900, column: 7)
!4111 = !DILocation(line: 900, column: 7, scope: !4093)
!4112 = distinct !{!4112, !4090, !4113}
!4113 = !DILocation(line: 903, column: 2, scope: !4078)
!4114 = !DILocation(line: 906, column: 1, scope: !4078)
!4115 = distinct !DISubprogram(name: "is_fmt_spec", scope: !381, file: !381, line: 873, type: !4116, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4118)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!131, !278}
!4118 = !{!4119}
!4119 = !DILocalVariable(name: "c", arg: 1, scope: !4115, file: !381, line: 873, type: !278)
!4120 = !DILocation(line: 0, scope: !4115)
!4121 = !DILocation(line: 875, column: 19, scope: !4115)
!4122 = !DILocation(line: 875, column: 2, scope: !4115)
!4123 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !381, file: !381, line: 908, type: !4124, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4130)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!103, !102, !132, !4126, !102, !108, !2653, !132}
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3665, line: 308, baseType: !4127)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 32)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!103, !13, !132, !102}
!4130 = !{!4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4148, !4149, !4150, !4151, !4152, !4158, !4161, !4162, !4163, !4165, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4181, !4184, !4185, !4186, !4187, !4188, !4189, !4191, !4194, !4195, !4196}
!4131 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4123, file: !381, line: 908, type: !102)
!4132 = !DILocalVariable(name: "in_len", arg: 2, scope: !4123, file: !381, line: 909, type: !132)
!4133 = !DILocalVariable(name: "cb", arg: 3, scope: !4123, file: !381, line: 910, type: !4126)
!4134 = !DILocalVariable(name: "ctx", arg: 4, scope: !4123, file: !381, line: 911, type: !102)
!4135 = !DILocalVariable(name: "flags", arg: 5, scope: !4123, file: !381, line: 912, type: !108)
!4136 = !DILocalVariable(name: "strl", arg: 6, scope: !4123, file: !381, line: 913, type: !2653)
!4137 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4123, file: !381, line: 914, type: !132)
!4138 = !DILocalVariable(name: "buf", scope: !4123, file: !381, line: 918, type: !379)
!4139 = !DILocalVariable(name: "buf32", scope: !4123, file: !381, line: 919, type: !966)
!4140 = !DILocalVariable(name: "args_size", scope: !4123, file: !381, line: 920, type: !32)
!4141 = !DILocalVariable(name: "ros_nbr", scope: !4123, file: !381, line: 920, type: !32)
!4142 = !DILocalVariable(name: "rws_nbr", scope: !4123, file: !381, line: 920, type: !32)
!4143 = !DILocalVariable(name: "fmt_present", scope: !4123, file: !381, line: 921, type: !131)
!4144 = !DILocalVariable(name: "rw_cpy", scope: !4123, file: !381, line: 922, type: !131)
!4145 = !DILocalVariable(name: "ro_cpy", scope: !4123, file: !381, line: 923, type: !131)
!4146 = !DILocalVariable(name: "in_desc", scope: !4123, file: !381, line: 924, type: !4147)
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3668, size: 32)
!4148 = !DILocalVariable(name: "out_len", scope: !4123, file: !381, line: 960, type: !103)
!4149 = !DILocalVariable(name: "fmt", scope: !4123, file: !381, line: 965, type: !337)
!4150 = !DILocalVariable(name: "str_pos", scope: !4123, file: !381, line: 966, type: !379)
!4151 = !DILocalVariable(name: "strl_cnt", scope: !4123, file: !381, line: 967, type: !132)
!4152 = !DILocalVariable(name: "i", scope: !4153, file: !381, line: 973, type: !103)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !381, line: 973, column: 4)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !381, line: 972, column: 15)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !381, line: 972, column: 7)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !381, line: 970, column: 18)
!4157 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 970, column: 6)
!4158 = !DILocalVariable(name: "str", scope: !4159, file: !381, line: 974, type: !337)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !381, line: 973, column: 38)
!4160 = distinct !DILexicalBlock(scope: !4153, file: !381, line: 973, column: 4)
!4161 = !DILocalVariable(name: "len", scope: !4159, file: !381, line: 975, type: !103)
!4162 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4156, file: !381, line: 990, type: !131)
!4163 = !DILocalVariable(name: "i", scope: !4164, file: !381, line: 995, type: !103)
!4164 = distinct !DILexicalBlock(scope: !4156, file: !381, line: 995, column: 3)
!4165 = !DILocalVariable(name: "arg_idx", scope: !4166, file: !381, line: 996, type: !185)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !381, line: 995, column: 37)
!4167 = distinct !DILexicalBlock(scope: !4164, file: !381, line: 995, column: 3)
!4168 = !DILocalVariable(name: "arg_pos", scope: !4166, file: !381, line: 997, type: !185)
!4169 = !DILocalVariable(name: "str", scope: !4166, file: !381, line: 998, type: !337)
!4170 = !DILocalVariable(name: "is_ro", scope: !4166, file: !381, line: 999, type: !131)
!4171 = !DILocalVariable(name: "len", scope: !4166, file: !381, line: 1000, type: !103)
!4172 = !DILocalVariable(name: "out_desc", scope: !4123, file: !381, line: 1038, type: !3668)
!4173 = !DILocalVariable(name: "cpy_str_pos", scope: !4123, file: !381, line: 1040, type: !3650)
!4174 = !DILocalVariable(name: "keep_str_pos", scope: !4123, file: !381, line: 1042, type: !3650)
!4175 = !DILocalVariable(name: "scpy_cnt", scope: !4123, file: !381, line: 1043, type: !185)
!4176 = !DILocalVariable(name: "keep_cnt", scope: !4123, file: !381, line: 1044, type: !185)
!4177 = !DILocalVariable(name: "dst", scope: !4123, file: !381, line: 1045, type: !379)
!4178 = !DILocalVariable(name: "rv", scope: !4123, file: !381, line: 1046, type: !103)
!4179 = !DILocalVariable(name: "i", scope: !4180, file: !381, line: 1074, type: !103)
!4180 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 1074, column: 2)
!4181 = !DILocalVariable(name: "arg_idx", scope: !4182, file: !381, line: 1075, type: !185)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !381, line: 1074, column: 36)
!4183 = distinct !DILexicalBlock(scope: !4180, file: !381, line: 1074, column: 2)
!4184 = !DILocalVariable(name: "arg_pos", scope: !4182, file: !381, line: 1076, type: !185)
!4185 = !DILocalVariable(name: "str", scope: !4182, file: !381, line: 1077, type: !337)
!4186 = !DILocalVariable(name: "is_ro", scope: !4182, file: !381, line: 1078, type: !131)
!4187 = !DILocalVariable(name: "in_desc_backup", scope: !4123, file: !381, line: 1114, type: !3668)
!4188 = !DILocalVariable(name: "strs_len", scope: !4123, file: !381, line: 1134, type: !132)
!4189 = !DILocalVariable(name: "i", scope: !4190, file: !381, line: 1143, type: !103)
!4190 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 1143, column: 2)
!4191 = !DILocalVariable(name: "loc", scope: !4192, file: !381, line: 1144, type: !185)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !381, line: 1143, column: 37)
!4193 = distinct !DILexicalBlock(scope: !4190, file: !381, line: 1143, column: 2)
!4194 = !DILocalVariable(name: "str", scope: !4192, file: !381, line: 1145, type: !337)
!4195 = !DILocalVariable(name: "str_len", scope: !4192, file: !381, line: 1146, type: !121)
!4196 = !DILabel(scope: !4197, name: "calculate_string_length", file: !381, line: 1021)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !381, line: 1020, column: 56)
!4198 = distinct !DILexicalBlock(scope: !4199, file: !381, line: 1020, column: 15)
!4199 = distinct !DILexicalBlock(scope: !4166, file: !381, line: 1014, column: 8)
!4200 = !DILocation(line: 0, scope: !4123)
!4201 = !DILocation(line: 919, column: 20, scope: !4123)
!4202 = !DILocation(line: 921, column: 27, scope: !4123)
!4203 = !DILocation(line: 921, column: 21, scope: !4123)
!4204 = !DILocation(line: 926, column: 18, scope: !4123)
!4205 = !DILocation(line: 926, column: 11, scope: !4123)
!4206 = !DILocation(line: 926, column: 34, scope: !4123)
!4207 = !DILocation(line: 931, column: 21, scope: !4123)
!4208 = !DILocation(line: 931, column: 12, scope: !4123)
!4209 = !DILocation(line: 932, column: 11, scope: !4123)
!4210 = !DILocation(line: 932, column: 19, scope: !4123)
!4211 = !DILocation(line: 938, column: 21, scope: !4123)
!4212 = !DILocation(line: 938, column: 12, scope: !4123)
!4213 = !DILocation(line: 939, column: 19, scope: !4123)
!4214 = !DILocation(line: 939, column: 23, scope: !4123)
!4215 = !DILocation(line: 946, column: 14, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 946, column: 6)
!4217 = !DILocation(line: 947, column: 7, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !381, line: 947, column: 7)
!4219 = distinct !DILexicalBlock(scope: !4216, file: !381, line: 946, column: 26)
!4220 = !DILocation(line: 947, column: 7, scope: !4219)
!4221 = !DILocation(line: 948, column: 4, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4218, file: !381, line: 947, column: 11)
!4223 = !DILocation(line: 949, column: 3, scope: !4222)
!4224 = !DILocation(line: 958, column: 23, scope: !4123)
!4225 = !DILocation(line: 958, column: 14, scope: !4123)
!4226 = !DILocation(line: 958, column: 27, scope: !4123)
!4227 = !DILocation(line: 965, column: 41, scope: !4123)
!4228 = !DILocation(line: 965, column: 20, scope: !4123)
!4229 = !DILocation(line: 966, column: 22, scope: !4123)
!4230 = !DILocation(line: 970, column: 9, scope: !4157)
!4231 = !DILocation(line: 970, column: 6, scope: !4123)
!4232 = !DILocation(line: 972, column: 7, scope: !4156)
!4233 = !DILocation(line: 0, scope: !4153)
!4234 = !DILocation(line: 973, column: 4, scope: !4153)
!4235 = !DILocation(line: 974, column: 46, scope: !4159)
!4236 = !DILocation(line: 974, column: 40, scope: !4159)
!4237 = !DILocation(line: 974, column: 23, scope: !4159)
!4238 = !DILocation(line: 0, scope: !4159)
!4239 = !DILocation(line: 975, column: 15, scope: !4159)
!4240 = !DILocation(line: 978, column: 14, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4159, file: !381, line: 978, column: 9)
!4242 = !DILocation(line: 979, column: 25, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4241, file: !381, line: 978, column: 38)
!4244 = !DILocation(line: 979, column: 19, scope: !4243)
!4245 = !DILocation(line: 979, column: 6, scope: !4243)
!4246 = !DILocation(line: 979, column: 23, scope: !4243)
!4247 = !DILocation(line: 980, column: 5, scope: !4243)
!4248 = !DILocation(line: 981, column: 13, scope: !4159)
!4249 = !DILocation(line: 982, column: 12, scope: !4159)
!4250 = !DILocation(line: 973, column: 34, scope: !4160)
!4251 = !DILocation(line: 973, column: 22, scope: !4160)
!4252 = distinct !{!4252, !4234, !4253}
!4253 = !DILocation(line: 983, column: 4, scope: !4153)
!4254 = !DILocation(line: 985, column: 16, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !381, line: 985, column: 8)
!4256 = distinct !DILexicalBlock(scope: !4155, file: !381, line: 984, column: 10)
!4257 = !DILocation(line: 967, column: 9, scope: !4123)
!4258 = !DILocation(line: 971, column: 11, scope: !4156)
!4259 = !DILocation(line: 0, scope: !4156)
!4260 = !DILocation(line: 0, scope: !4164)
!4261 = !DILocation(line: 995, column: 21, scope: !4167)
!4262 = !DILocation(line: 995, column: 3, scope: !4164)
!4263 = !DILocation(line: 990, column: 34, scope: !4156)
!4264 = !DILocation(line: 990, column: 26, scope: !4156)
!4265 = !DILocation(line: 996, column: 30, scope: !4166)
!4266 = !DILocation(line: 0, scope: !4166)
!4267 = !DILocation(line: 997, column: 30, scope: !4166)
!4268 = !DILocation(line: 997, column: 22, scope: !4166)
!4269 = !DILocation(line: 998, column: 39, scope: !4166)
!4270 = !DILocation(line: 998, column: 22, scope: !4166)
!4271 = !DILocation(line: 999, column: 17, scope: !4166)
!4272 = !DILocation(line: 1002, column: 20, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4166, file: !381, line: 1002, column: 8)
!4274 = !DILocation(line: 996, column: 22, scope: !4166)
!4275 = !DILocation(line: 1002, column: 35, scope: !4273)
!4276 = !DILocation(line: 1002, column: 23, scope: !4273)
!4277 = !DILocation(line: 1002, column: 8, scope: !4166)
!4278 = !DILocation(line: 1003, column: 5, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !381, line: 1003, column: 5)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !381, line: 1003, column: 5)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !381, line: 1003, column: 5)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !381, line: 1003, column: 5)
!4283 = distinct !DILexicalBlock(scope: !4273, file: !381, line: 1002, column: 45)
!4284 = !DILocation(line: 1010, column: 13, scope: !4283)
!4285 = !DILocation(line: 1011, column: 5, scope: !4283)
!4286 = !DILocation(line: 1014, column: 8, scope: !4166)
!4287 = !DILocation(line: 1015, column: 9, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4199, file: !381, line: 1014, column: 15)
!4289 = !DILocation(line: 1018, column: 14, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !381, line: 1017, column: 12)
!4291 = distinct !DILexicalBlock(scope: !4288, file: !381, line: 1015, column: 9)
!4292 = !DILocation(line: 1020, column: 4, scope: !4288)
!4293 = !DILocation(line: 1020, column: 15, scope: !4199)
!4294 = !DILocation(line: 1021, column: 1, scope: !4197)
!4295 = !DILocation(line: 1022, column: 11, scope: !4197)
!4296 = !DILocation(line: 1025, column: 14, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4197, file: !381, line: 1025, column: 9)
!4298 = !DILocation(line: 1026, column: 25, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4297, file: !381, line: 1025, column: 38)
!4300 = !DILocation(line: 1026, column: 19, scope: !4299)
!4301 = !DILocation(line: 1026, column: 6, scope: !4299)
!4302 = !DILocation(line: 1026, column: 23, scope: !4299)
!4303 = !DILocation(line: 1027, column: 5, scope: !4299)
!4304 = !DILocation(line: 1031, column: 21, scope: !4197)
!4305 = !DILocation(line: 1031, column: 13, scope: !4197)
!4306 = !DILocation(line: 1032, column: 4, scope: !4197)
!4307 = !DILocation(line: 995, column: 33, scope: !4167)
!4308 = distinct !{!4308, !4262, !4309}
!4309 = !DILocation(line: 1033, column: 3, scope: !4164)
!4310 = !DILocation(line: 1040, column: 10, scope: !4123)
!4311 = !DILocation(line: 1042, column: 10, scope: !4123)
!4312 = !DILocation(line: 1052, column: 6, scope: !4123)
!4313 = !DILocation(line: 1055, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !381, line: 1052, column: 14)
!4315 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 1052, column: 6)
!4316 = !DILocation(line: 1056, column: 2, scope: !4314)
!4317 = !DILocation(line: 1056, column: 21, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4315, file: !381, line: 1056, column: 13)
!4319 = !DILocation(line: 1066, column: 3, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !381, line: 1065, column: 11)
!4321 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 1065, column: 6)
!4322 = !DILocation(line: 1067, column: 2, scope: !4320)
!4323 = !DILocation(line: 1068, column: 10, scope: !4123)
!4324 = !DILocation(line: 0, scope: !4180)
!4325 = !DILocation(line: 1074, column: 20, scope: !4183)
!4326 = !DILocation(line: 1074, column: 2, scope: !4180)
!4327 = !DILocation(line: 1110, column: 24, scope: !4123)
!4328 = !DILocation(line: 1053, column: 12, scope: !4314)
!4329 = !DILocation(line: 1054, column: 12, scope: !4314)
!4330 = !DILocation(line: 1108, column: 30, scope: !4123)
!4331 = !DILocation(line: 1108, column: 40, scope: !4123)
!4332 = !DILocation(line: 1108, column: 38, scope: !4123)
!4333 = !DILocation(line: 1109, column: 31, scope: !4123)
!4334 = !DILocation(line: 1109, column: 24, scope: !4123)
!4335 = !DILocation(line: 1110, column: 31, scope: !4123)
!4336 = !DILocation(line: 1114, column: 31, scope: !4123)
!4337 = !DILocation(line: 1114, column: 48, scope: !4123)
!4338 = !DILocation(line: 1115, column: 13, scope: !4123)
!4339 = !DILocation(line: 1118, column: 7, scope: !4123)
!4340 = !DILocation(line: 1119, column: 9, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 1119, column: 6)
!4342 = !DILocation(line: 1119, column: 6, scope: !4123)
!4343 = !DILocation(line: 1075, column: 29, scope: !4182)
!4344 = !DILocation(line: 1075, column: 21, scope: !4182)
!4345 = !DILocation(line: 0, scope: !4182)
!4346 = !DILocation(line: 1076, column: 29, scope: !4182)
!4347 = !DILocation(line: 1076, column: 21, scope: !4182)
!4348 = !DILocation(line: 1077, column: 38, scope: !4182)
!4349 = !DILocation(line: 1077, column: 21, scope: !4182)
!4350 = !DILocation(line: 1078, column: 16, scope: !4182)
!4351 = !DILocation(line: 1080, column: 19, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4182, file: !381, line: 1080, column: 7)
!4353 = !DILocation(line: 1080, column: 34, scope: !4352)
!4354 = !DILocation(line: 1080, column: 22, scope: !4352)
!4355 = !DILocation(line: 1080, column: 7, scope: !4182)
!4356 = !DILocation(line: 1084, column: 7, scope: !4182)
!4357 = !DILocation(line: 1085, column: 8, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !381, line: 1084, column: 14)
!4359 = distinct !DILexicalBlock(scope: !4182, file: !381, line: 1084, column: 7)
!4360 = !DILocation(line: 1087, column: 25, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !381, line: 1085, column: 49)
!4362 = distinct !DILexicalBlock(scope: !4358, file: !381, line: 1085, column: 8)
!4363 = !DILocation(line: 1088, column: 4, scope: !4361)
!4364 = !DILocation(line: 1088, column: 15, scope: !4362)
!4365 = !DILocation(line: 1090, column: 26, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !381, line: 1088, column: 61)
!4367 = distinct !DILexicalBlock(scope: !4362, file: !381, line: 1088, column: 15)
!4368 = !DILocation(line: 1091, column: 4, scope: !4366)
!4369 = !DILocation(line: 1095, column: 8, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4359, file: !381, line: 1094, column: 10)
!4371 = !DILocation(line: 1097, column: 25, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !381, line: 1095, column: 49)
!4373 = distinct !DILexicalBlock(scope: !4370, file: !381, line: 1095, column: 8)
!4374 = !DILocation(line: 1098, column: 4, scope: !4372)
!4375 = !DILocation(line: 1100, column: 26, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4373, file: !381, line: 1098, column: 11)
!4377 = !DILocation(line: 1100, column: 5, scope: !4376)
!4378 = !DILocation(line: 1100, column: 30, scope: !4376)
!4379 = !DILocation(line: 1101, column: 26, scope: !4376)
!4380 = !DILocation(line: 0, scope: !4359)
!4381 = !DILocation(line: 1074, column: 32, scope: !4183)
!4382 = distinct !{!4382, !4326, !4383}
!4383 = !DILocation(line: 1104, column: 2, scope: !4180)
!4384 = !DILocation(line: 1124, column: 13, scope: !4123)
!4385 = !DILocation(line: 1127, column: 10, scope: !4123)
!4386 = !DILocation(line: 1127, column: 7, scope: !4123)
!4387 = !DILocation(line: 1128, column: 9, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 1128, column: 6)
!4389 = !DILocation(line: 1128, column: 6, scope: !4123)
!4390 = !DILocation(line: 1134, column: 27, scope: !4123)
!4391 = !DILocation(line: 1136, column: 7, scope: !4123)
!4392 = !DILocation(line: 1137, column: 9, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4123, file: !381, line: 1137, column: 6)
!4394 = !DILocation(line: 1137, column: 6, scope: !4123)
!4395 = !DILocation(line: 1131, column: 10, scope: !4123)
!4396 = !DILocation(line: 1140, column: 10, scope: !4123)
!4397 = !DILocation(line: 0, scope: !4190)
!4398 = !DILocation(line: 1143, column: 20, scope: !4193)
!4399 = !DILocation(line: 1143, column: 2, scope: !4190)
!4400 = !DILocation(line: 1144, column: 3, scope: !4192)
!4401 = !DILocation(line: 1144, column: 17, scope: !4192)
!4402 = !DILocation(line: 0, scope: !4192)
!4403 = !DILocation(line: 1144, column: 11, scope: !4192)
!4404 = !DILocation(line: 1145, column: 38, scope: !4192)
!4405 = !DILocation(line: 1145, column: 21, scope: !4192)
!4406 = !DILocation(line: 1146, column: 22, scope: !4192)
!4407 = !DILocation(line: 1146, column: 29, scope: !4192)
!4408 = !DILocation(line: 1148, column: 8, scope: !4192)
!4409 = !DILocation(line: 1149, column: 10, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4192, file: !381, line: 1149, column: 7)
!4411 = !DILocation(line: 1149, column: 7, scope: !4192)
!4412 = !DILocation(line: 1154, column: 8, scope: !4192)
!4413 = !DILocation(line: 1155, column: 10, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4192, file: !381, line: 1155, column: 7)
!4415 = !DILocation(line: 1155, column: 7, scope: !4192)
!4416 = !DILocation(line: 1159, column: 2, scope: !4193)
!4417 = !DILocation(line: 1152, column: 11, scope: !4192)
!4418 = !DILocation(line: 1158, column: 11, scope: !4192)
!4419 = !DILocation(line: 1143, column: 33, scope: !4193)
!4420 = distinct !{!4420, !4399, !4421}
!4421 = !DILocation(line: 1159, column: 2, scope: !4190)
!4422 = !DILocation(line: 1162, column: 8, scope: !4123)
!4423 = !DILocation(line: 1164, column: 2, scope: !4123)
!4424 = !DILocation(line: 1165, column: 1, scope: !4123)
!4425 = distinct !DISubprogram(name: "get_package_len", scope: !381, file: !381, line: 196, type: !4426, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4428)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!132, !102}
!4428 = !{!4429, !4430, !4431, !4432, !4433, !4434, !4435}
!4429 = !DILocalVariable(name: "packaged", arg: 1, scope: !4425, file: !381, line: 196, type: !102)
!4430 = !DILocalVariable(name: "buf", scope: !4425, file: !381, line: 200, type: !379)
!4431 = !DILocalVariable(name: "start", scope: !4425, file: !381, line: 201, type: !379)
!4432 = !DILocalVariable(name: "args_size", scope: !4425, file: !381, line: 202, type: !32)
!4433 = !DILocalVariable(name: "s_nbr", scope: !4425, file: !381, line: 202, type: !32)
!4434 = !DILocalVariable(name: "ros_nbr", scope: !4425, file: !381, line: 202, type: !32)
!4435 = !DILocalVariable(name: "i", scope: !4436, file: !381, line: 215, type: !103)
!4436 = distinct !DILexicalBlock(scope: !4425, file: !381, line: 215, column: 2)
!4437 = !DILocation(line: 0, scope: !4425)
!4438 = !DILocation(line: 204, column: 14, scope: !4425)
!4439 = !DILocation(line: 204, column: 21, scope: !4425)
!4440 = !DILocation(line: 205, column: 14, scope: !4425)
!4441 = !DILocation(line: 206, column: 14, scope: !4425)
!4442 = !DILocation(line: 209, column: 6, scope: !4425)
!4443 = !DILocation(line: 212, column: 6, scope: !4425)
!4444 = !DILocation(line: 0, scope: !4436)
!4445 = !DILocation(line: 215, column: 20, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4436, file: !381, line: 215, column: 2)
!4447 = !DILocation(line: 215, column: 2, scope: !4436)
!4448 = !DILocation(line: 220, column: 33, scope: !4425)
!4449 = !DILocation(line: 220, column: 2, scope: !4425)
!4450 = !DILocation(line: 216, column: 6, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4446, file: !381, line: 215, column: 34)
!4452 = !DILocation(line: 217, column: 10, scope: !4451)
!4453 = !DILocation(line: 217, column: 36, scope: !4451)
!4454 = !DILocation(line: 217, column: 7, scope: !4451)
!4455 = !DILocation(line: 215, column: 30, scope: !4446)
!4456 = distinct !{!4456, !4447, !4457}
!4457 = !DILocation(line: 218, column: 2, scope: !4436)
!4458 = distinct !DISubprogram(name: "append_string", scope: !381, file: !381, line: 223, type: !4459, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4461)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!103, !4126, !102, !337, !121}
!4461 = !{!4462, !4463, !4464, !4465}
!4462 = !DILocalVariable(name: "cb", arg: 1, scope: !4458, file: !381, line: 223, type: !4126)
!4463 = !DILocalVariable(name: "ctx", arg: 2, scope: !4458, file: !381, line: 223, type: !102)
!4464 = !DILocalVariable(name: "str", arg: 3, scope: !4458, file: !381, line: 223, type: !337)
!4465 = !DILocalVariable(name: "strl", arg: 4, scope: !4458, file: !381, line: 223, type: !121)
!4466 = !DILocation(line: 0, scope: !4458)
!4467 = !DILocation(line: 225, column: 9, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4458, file: !381, line: 225, column: 6)
!4469 = !DILocation(line: 225, column: 6, scope: !4458)
!4470 = !DILocation(line: 226, column: 14, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4468, file: !381, line: 225, column: 18)
!4472 = !DILocation(line: 226, column: 12, scope: !4471)
!4473 = !DILocation(line: 226, column: 3, scope: !4471)
!4474 = !DILocation(line: 229, column: 14, scope: !4458)
!4475 = !DILocation(line: 229, column: 9, scope: !4458)
!4476 = !DILocation(line: 229, column: 27, scope: !4458)
!4477 = !DILocation(line: 229, column: 39, scope: !4458)
!4478 = !DILocation(line: 230, column: 17, scope: !4458)
!4479 = !DILocation(line: 230, column: 9, scope: !4458)
!4480 = !DILocation(line: 230, column: 2, scope: !4458)
!4481 = !DILocation(line: 231, column: 1, scope: !4458)
!4482 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !394, file: !394, line: 45, type: !396, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4483)
!4483 = !{!4484}
!4484 = !DILocalVariable(name: "c", arg: 1, scope: !4482, file: !394, line: 45, type: !103)
!4485 = !DILocation(line: 0, scope: !4482)
!4486 = !DILocation(line: 50, column: 2, scope: !4482)
!4487 = distinct !DISubprogram(name: "__printk_hook_install", scope: !394, file: !394, line: 63, type: !4488, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4490)
!4488 = !DISubroutineType(types: !4489)
!4489 = !{null, !395}
!4490 = !{!4491}
!4491 = !DILocalVariable(name: "fn", arg: 1, scope: !4487, file: !394, line: 63, type: !395)
!4492 = !DILocation(line: 0, scope: !4487)
!4493 = !DILocation(line: 65, column: 12, scope: !4487)
!4494 = !DILocation(line: 66, column: 1, scope: !4487)
!4495 = distinct !DISubprogram(name: "__printk_get_hook", scope: !394, file: !394, line: 76, type: !4496, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !251)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!102}
!4498 = !DILocation(line: 78, column: 9, scope: !4495)
!4499 = !DILocation(line: 78, column: 2, scope: !4495)
!4500 = distinct !DISubprogram(name: "vprintk", scope: !394, file: !394, line: 113, type: !4501, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4509)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{null, !337, !4503}
!4503 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3633, line: 99, baseType: !4504)
!4504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3633, line: 40, baseType: !4505)
!4505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !394, baseType: !4506)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4507)
!4507 = !{!4508}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4506, file: !394, line: 79, baseType: !102, size: 32)
!4509 = !{!4510, !4511, !4512}
!4510 = !DILocalVariable(name: "fmt", arg: 1, scope: !4500, file: !394, line: 113, type: !337)
!4511 = !DILocalVariable(name: "ap", arg: 2, scope: !4500, file: !394, line: 113, type: !4503)
!4512 = !DILocalVariable(name: "ctx", scope: !4513, file: !394, line: 121, type: !4515)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !394, line: 120, column: 27)
!4514 = distinct !DILexicalBlock(scope: !4500, file: !394, line: 120, column: 6)
!4515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !394, line: 81, size: 32, elements: !4516)
!4516 = !{!4517, !4518}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4515, file: !394, line: 85, baseType: !32, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4515, file: !394, line: 86, baseType: !4519, offset: 32)
!4519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, elements: !2651)
!4520 = !DILocation(line: 0, scope: !4500)
!4521 = !DILocation(line: 148, column: 3, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4514, file: !394, line: 138, column: 9)
!4523 = !DILocation(line: 155, column: 1, scope: !4500)
!4524 = distinct !DISubprogram(name: "char_out", scope: !394, file: !394, line: 107, type: !4525, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4527)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!103, !103, !102}
!4527 = !{!4528, !4529}
!4528 = !DILocalVariable(name: "c", arg: 1, scope: !4524, file: !394, line: 107, type: !103)
!4529 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4524, file: !394, line: 107, type: !102)
!4530 = !DILocation(line: 0, scope: !4524)
!4531 = !DILocation(line: 110, column: 9, scope: !4524)
!4532 = !DILocation(line: 110, column: 2, scope: !4524)
!4533 = distinct !DISubprogram(name: "cbvprintf", scope: !3665, file: !3665, line: 739, type: !4534, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4536)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!103, !3994, !102, !337, !4503}
!4536 = !{!4537, !4538, !4539, !4540}
!4537 = !DILocalVariable(name: "out", arg: 1, scope: !4533, file: !3665, line: 739, type: !3994)
!4538 = !DILocalVariable(name: "ctx", arg: 2, scope: !4533, file: !3665, line: 739, type: !102)
!4539 = !DILocalVariable(name: "format", arg: 3, scope: !4533, file: !3665, line: 739, type: !337)
!4540 = !DILocalVariable(name: "ap", arg: 4, scope: !4533, file: !3665, line: 739, type: !4503)
!4541 = !DILocation(line: 0, scope: !4533)
!4542 = !DILocation(line: 741, column: 9, scope: !4533)
!4543 = !DILocation(line: 741, column: 2, scope: !4533)
!4544 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !394, file: !394, line: 157, type: !4545, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4547)
!4545 = !DISubroutineType(types: !4546)
!4546 = !{null, !277, !132}
!4547 = !{!4548, !4549, !4550}
!4548 = !DILocalVariable(name: "c", arg: 1, scope: !4544, file: !394, line: 157, type: !277)
!4549 = !DILocalVariable(name: "n", arg: 2, scope: !4544, file: !394, line: 157, type: !132)
!4550 = !DILocalVariable(name: "i", scope: !4544, file: !394, line: 159, type: !132)
!4551 = !DILocation(line: 0, scope: !4544)
!4552 = !DILocation(line: 164, column: 16, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !394, line: 164, column: 2)
!4554 = distinct !DILexicalBlock(scope: !4544, file: !394, line: 164, column: 2)
!4555 = !DILocation(line: 164, column: 2, scope: !4554)
!4556 = !DILocation(line: 165, column: 3, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4553, file: !394, line: 164, column: 26)
!4558 = !DILocation(line: 165, column: 13, scope: !4557)
!4559 = !DILocation(line: 164, column: 22, scope: !4553)
!4560 = distinct !{!4560, !4555, !4561}
!4561 = !DILocation(line: 166, column: 2, scope: !4554)
!4562 = !DILocation(line: 171, column: 1, scope: !4544)
!4563 = distinct !DISubprogram(name: "printk", scope: !394, file: !394, line: 203, type: !4564, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4566)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{null, !337, null}
!4566 = !{!4567, !4568}
!4567 = !DILocalVariable(name: "fmt", arg: 1, scope: !4563, file: !394, line: 203, type: !337)
!4568 = !DILocalVariable(name: "ap", scope: !4563, file: !394, line: 205, type: !4503)
!4569 = !DILocation(line: 0, scope: !4563)
!4570 = !DILocation(line: 205, column: 2, scope: !4563)
!4571 = !DILocation(line: 205, column: 10, scope: !4563)
!4572 = !DILocation(line: 207, column: 2, scope: !4563)
!4573 = !DILocation(line: 209, column: 2, scope: !4563)
!4574 = !DILocation(line: 211, column: 2, scope: !4563)
!4575 = !DILocation(line: 212, column: 1, scope: !4563)
!4576 = distinct !DISubprogram(name: "snprintk", scope: !394, file: !394, line: 239, type: !4577, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4579)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{!103, !277, !132, !337, null}
!4579 = !{!4580, !4581, !4582, !4583, !4584}
!4580 = !DILocalVariable(name: "str", arg: 1, scope: !4576, file: !394, line: 239, type: !277)
!4581 = !DILocalVariable(name: "size", arg: 2, scope: !4576, file: !394, line: 239, type: !132)
!4582 = !DILocalVariable(name: "fmt", arg: 3, scope: !4576, file: !394, line: 239, type: !337)
!4583 = !DILocalVariable(name: "ap", scope: !4576, file: !394, line: 241, type: !4503)
!4584 = !DILocalVariable(name: "ret", scope: !4576, file: !394, line: 242, type: !103)
!4585 = !DILocation(line: 0, scope: !4576)
!4586 = !DILocation(line: 241, column: 2, scope: !4576)
!4587 = !DILocation(line: 241, column: 10, scope: !4576)
!4588 = !DILocation(line: 244, column: 2, scope: !4576)
!4589 = !DILocation(line: 245, column: 8, scope: !4576)
!4590 = !DILocation(line: 246, column: 2, scope: !4576)
!4591 = !DILocation(line: 249, column: 1, scope: !4576)
!4592 = !DILocation(line: 248, column: 2, scope: !4576)
!4593 = distinct !DISubprogram(name: "vsnprintk", scope: !394, file: !394, line: 251, type: !4594, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4596)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!103, !277, !132, !337, !4503}
!4596 = !{!4597, !4598, !4599, !4600, !4601}
!4597 = !DILocalVariable(name: "str", arg: 1, scope: !4593, file: !394, line: 251, type: !277)
!4598 = !DILocalVariable(name: "size", arg: 2, scope: !4593, file: !394, line: 251, type: !132)
!4599 = !DILocalVariable(name: "fmt", arg: 3, scope: !4593, file: !394, line: 251, type: !337)
!4600 = !DILocalVariable(name: "ap", arg: 4, scope: !4593, file: !394, line: 251, type: !4503)
!4601 = !DILocalVariable(name: "ctx", scope: !4593, file: !394, line: 253, type: !4602)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !394, line: 217, size: 96, elements: !4603)
!4603 = !{!4604, !4605, !4606}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4602, file: !394, line: 218, baseType: !277, size: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4602, file: !394, line: 219, baseType: !103, size: 32, offset: 32)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4602, file: !394, line: 220, baseType: !103, size: 32, offset: 64)
!4607 = !DILocation(line: 0, scope: !4593)
!4608 = !DILocation(line: 253, column: 2, scope: !4593)
!4609 = !DILocation(line: 253, column: 21, scope: !4593)
!4610 = !DILocation(line: 253, column: 27, scope: !4593)
!4611 = !DILocation(line: 255, column: 2, scope: !4593)
!4612 = !DILocation(line: 257, column: 10, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4593, file: !394, line: 257, column: 6)
!4614 = !DILocation(line: 257, column: 22, scope: !4613)
!4615 = !DILocation(line: 257, column: 16, scope: !4613)
!4616 = !DILocation(line: 257, column: 6, scope: !4593)
!4617 = !DILocation(line: 258, column: 3, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4613, file: !394, line: 257, column: 27)
!4619 = !DILocation(line: 258, column: 18, scope: !4618)
!4620 = !DILocation(line: 259, column: 2, scope: !4618)
!4621 = !DILocation(line: 262, column: 1, scope: !4593)
!4622 = !DILocation(line: 261, column: 2, scope: !4593)
!4623 = distinct !DISubprogram(name: "str_out", scope: !394, file: !394, line: 223, type: !4624, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4627)
!4624 = !DISubroutineType(types: !4625)
!4625 = !{!103, !103, !4626}
!4626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4602, size: 32)
!4627 = !{!4628, !4629}
!4628 = !DILocalVariable(name: "c", arg: 1, scope: !4623, file: !394, line: 223, type: !103)
!4629 = !DILocalVariable(name: "ctx", arg: 2, scope: !4623, file: !394, line: 223, type: !4626)
!4630 = !DILocation(line: 0, scope: !4623)
!4631 = !DILocation(line: 225, column: 11, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4623, file: !394, line: 225, column: 6)
!4633 = !DILocation(line: 225, column: 15, scope: !4632)
!4634 = !DILocation(line: 0, scope: !4632)
!4635 = !DILocation(line: 225, column: 23, scope: !4632)
!4636 = !DILocation(line: 225, column: 45, scope: !4632)
!4637 = !DILocation(line: 225, column: 37, scope: !4632)
!4638 = !DILocation(line: 225, column: 6, scope: !4623)
!4639 = !DILocation(line: 226, column: 8, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4632, file: !394, line: 225, column: 50)
!4641 = !DILocation(line: 226, column: 13, scope: !4640)
!4642 = !DILocation(line: 227, column: 3, scope: !4640)
!4643 = !DILocation(line: 230, column: 29, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4623, file: !394, line: 230, column: 6)
!4645 = !DILocation(line: 230, column: 17, scope: !4644)
!4646 = !DILocation(line: 230, column: 6, scope: !4623)
!4647 = !DILocation(line: 231, column: 22, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4644, file: !394, line: 230, column: 34)
!4649 = !DILocation(line: 231, column: 3, scope: !4648)
!4650 = !DILocation(line: 231, column: 26, scope: !4648)
!4651 = !DILocation(line: 232, column: 2, scope: !4648)
!4652 = !DILocation(line: 233, column: 28, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4644, file: !394, line: 232, column: 9)
!4654 = !DILocation(line: 233, column: 22, scope: !4653)
!4655 = !DILocation(line: 233, column: 3, scope: !4653)
!4656 = !DILocation(line: 233, column: 26, scope: !4653)
!4657 = !DILocation(line: 237, column: 1, scope: !4623)
!4658 = distinct !DISubprogram(name: "z_thread_entry", scope: !4659, file: !4659, line: 30, type: !4660, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4662)
!4659 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4660 = !DISubroutineType(types: !4661)
!4661 = !{null, !321, !102, !102, !102}
!4662 = !{!4663, !4664, !4665, !4666}
!4663 = !DILocalVariable(name: "entry", arg: 1, scope: !4658, file: !4659, line: 30, type: !321)
!4664 = !DILocalVariable(name: "p1", arg: 2, scope: !4658, file: !4659, line: 31, type: !102)
!4665 = !DILocalVariable(name: "p2", arg: 3, scope: !4658, file: !4659, line: 31, type: !102)
!4666 = !DILocalVariable(name: "p3", arg: 4, scope: !4658, file: !4659, line: 31, type: !102)
!4667 = !DILocation(line: 0, scope: !4658)
!4668 = !DILocation(line: 36, column: 2, scope: !4658)
!4669 = !DILocation(line: 38, column: 17, scope: !4658)
!4670 = !DILocation(line: 38, column: 2, scope: !4658)
!4671 = !DILocation(line: 45, column: 2, scope: !4658)
!4672 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !4673, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !251)
!4673 = !DISubroutineType(types: !4674)
!4674 = !{!4675}
!4675 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !4676)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 32)
!4677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !4678)
!4678 = !{!4679, !4737, !4749, !4750, !4751, !4752, !4758, !4771}
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4677, file: !163, line: 247, baseType: !4680, size: 384)
!4680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !4681)
!4681 = !{!4682, !4706, !4713, !4714, !4715, !4724, !4725, !4726}
!4682 = !DIDerivedType(tag: DW_TAG_member, scope: !4680, file: !163, line: 60, baseType: !4683, size: 64)
!4683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4680, file: !163, line: 60, size: 64, elements: !4684)
!4684 = !{!4685, !4700}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4683, file: !163, line: 61, baseType: !4686, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !4687)
!4687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !4688)
!4688 = !{!4689, !4695}
!4689 = !DIDerivedType(tag: DW_TAG_member, scope: !4687, file: !146, line: 38, baseType: !4690, size: 32)
!4690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4687, file: !146, line: 38, size: 32, elements: !4691)
!4691 = !{!4692, !4694}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4690, file: !146, line: 39, baseType: !4693, size: 32)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 32)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4690, file: !146, line: 40, baseType: !4693, size: 32)
!4695 = !DIDerivedType(tag: DW_TAG_member, scope: !4687, file: !146, line: 42, baseType: !4696, size: 32, offset: 32)
!4696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4687, file: !146, line: 42, size: 32, elements: !4697)
!4697 = !{!4698, !4699}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4696, file: !146, line: 43, baseType: !4693, size: 32)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4696, file: !146, line: 44, baseType: !4693, size: 32)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4683, file: !163, line: 62, baseType: !4701, size: 64)
!4701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !4702)
!4702 = !{!4703}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4701, file: !175, line: 50, baseType: !4704, size: 64)
!4704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4705, size: 64, elements: !180)
!4705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 32)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4680, file: !163, line: 68, baseType: !4707, size: 32, offset: 64)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 32)
!4708 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !4709)
!4709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !4710)
!4710 = !{!4711}
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4709, file: !141, line: 232, baseType: !4712, size: 64)
!4712 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !4687)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4680, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4680, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!4715 = !DIDerivedType(tag: DW_TAG_member, scope: !4680, file: !163, line: 90, baseType: !4716, size: 16, offset: 112)
!4716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4680, file: !163, line: 90, size: 16, elements: !4717)
!4717 = !{!4718, !4723}
!4718 = !DIDerivedType(tag: DW_TAG_member, scope: !4716, file: !163, line: 91, baseType: !4719, size: 16)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4716, file: !163, line: 91, size: 16, elements: !4720)
!4720 = !{!4721, !4722}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4719, file: !163, line: 96, baseType: !195, size: 8)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4719, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4716, file: !163, line: 100, baseType: !121, size: 16)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4680, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4680, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4680, file: !163, line: 131, baseType: !4727, size: 192, offset: 192)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !4728)
!4728 = !{!4729, !4730, !4736}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4727, file: !141, line: 245, baseType: !4686, size: 64)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4727, file: !141, line: 246, baseType: !4731, size: 32, offset: 64)
!4731 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !4732)
!4732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4733, size: 32)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{null, !4735}
!4735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 32)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4727, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4677, file: !163, line: 250, baseType: !4738, size: 288, offset: 384)
!4738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !4739)
!4739 = !{!4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748}
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4738, file: !214, line: 26, baseType: !108, size: 32)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4738, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4738, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4738, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4738, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4738, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4738, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4738, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4738, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4677, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4677, file: !163, line: 256, baseType: !4708, size: 64, offset: 704)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4677, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4677, file: !163, line: 300, baseType: !4753, size: 96, offset: 800)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !4754)
!4754 = !{!4755, !4756, !4757}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4753, file: !163, line: 153, baseType: !22, size: 32)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4753, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4753, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4677, file: !163, line: 325, baseType: !4759, size: 32, offset: 896)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 32)
!4760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !4761)
!4761 = !{!4762, !4768, !4769}
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4760, file: !137, line: 5074, baseType: !4763, size: 96)
!4763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4764)
!4764 = !{!4765, !4766, !4767}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4763, file: !240, line: 57, baseType: !243, size: 32)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4763, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4763, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4760, file: !137, line: 5075, baseType: !4708, size: 64, offset: 96)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4760, file: !137, line: 5076, baseType: !4770, offset: 160)
!4770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4677, file: !163, line: 343, baseType: !4772, size: 64, offset: 928)
!4772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !4773)
!4773 = !{!4774, !4775}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4772, file: !214, line: 63, baseType: !108, size: 32)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4772, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!4776 = !DILocation(line: 535, column: 9, scope: !4672)
!4777 = !DILocation(line: 535, column: 2, scope: !4672)
!4778 = distinct !DISubprogram(name: "k_thread_abort", scope: !3594, file: !3594, line: 188, type: !4779, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4781)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{null, !4675}
!4781 = !{!4782}
!4782 = !DILocalVariable(name: "thread", arg: 1, scope: !4778, file: !3594, line: 188, type: !4675)
!4783 = !DILocation(line: 0, scope: !4778)
!4784 = !DILocation(line: 197, column: 2, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4778, file: !3594, line: 197, column: 2)
!4786 = !{i64 2154062509}
!4787 = !DILocation(line: 198, column: 2, scope: !4778)
!4788 = !DILocation(line: 199, column: 1, scope: !4778)
!4789 = distinct !DISubprogram(name: "z_current_get", scope: !3594, file: !3594, line: 173, type: !4673, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !251)
!4790 = !DILocation(line: 180, column: 2, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4789, file: !3594, line: 180, column: 2)
!4792 = !{i64 2154062441}
!4793 = !DILocation(line: 181, column: 9, scope: !4789)
!4794 = !DILocation(line: 181, column: 2, scope: !4789)
!4795 = distinct !DISubprogram(name: "sys_heap_free", scope: !4796, file: !4796, line: 163, type: !4797, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4805)
!4796 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4797 = !DISubroutineType(types: !4798)
!4798 = !{null, !4799, !102}
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 32)
!4800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4801)
!4801 = !{!4802, !4803, !4804}
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4800, file: !240, line: 57, baseType: !2638, size: 32)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4800, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4800, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4805 = !{!4806, !4807, !4808, !4809}
!4806 = !DILocalVariable(name: "heap", arg: 1, scope: !4795, file: !4796, line: 163, type: !4799)
!4807 = !DILocalVariable(name: "mem", arg: 2, scope: !4795, file: !4796, line: 163, type: !102)
!4808 = !DILocalVariable(name: "h", scope: !4795, file: !4796, line: 168, type: !2638)
!4809 = !DILocalVariable(name: "c", scope: !4795, file: !4796, line: 169, type: !2643)
!4810 = !DILocation(line: 0, scope: !4795)
!4811 = !DILocation(line: 165, column: 10, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4795, file: !4796, line: 165, column: 6)
!4813 = !DILocation(line: 165, column: 6, scope: !4795)
!4814 = !DILocation(line: 168, column: 27, scope: !4795)
!4815 = !DILocation(line: 169, column: 16, scope: !4795)
!4816 = !{i32 0, i32 536870912}
!4817 = !DILocation(line: 187, column: 2, scope: !4795)
!4818 = !DILocation(line: 197, column: 2, scope: !4795)
!4819 = !DILocation(line: 198, column: 1, scope: !4795)
!4820 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4796, file: !4796, line: 157, type: !4821, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4823)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!2643, !2638, !102}
!4823 = !{!4824, !4825, !4826, !4827}
!4824 = !DILocalVariable(name: "h", arg: 1, scope: !4820, file: !4796, line: 157, type: !2638)
!4825 = !DILocalVariable(name: "p", arg: 2, scope: !4820, file: !4796, line: 157, type: !102)
!4826 = !DILocalVariable(name: "mem", scope: !4820, file: !4796, line: 159, type: !379)
!4827 = !DILocalVariable(name: "base", scope: !4820, file: !4796, line: 159, type: !379)
!4828 = !DILocation(line: 0, scope: !4820)
!4829 = !DILocation(line: 159, column: 39, scope: !4820)
!4830 = !DILocation(line: 160, column: 14, scope: !4820)
!4831 = !DILocation(line: 160, column: 38, scope: !4820)
!4832 = !DILocation(line: 160, column: 46, scope: !4820)
!4833 = !DILocation(line: 160, column: 2, scope: !4820)
!4834 = distinct !DISubprogram(name: "set_chunk_used", scope: !2625, file: !2625, line: 147, type: !4835, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4837)
!4835 = !DISubroutineType(types: !4836)
!4836 = !{null, !2638, !2643, !131}
!4837 = !{!4838, !4839, !4840, !4841, !4842}
!4838 = !DILocalVariable(name: "h", arg: 1, scope: !4834, file: !2625, line: 147, type: !2638)
!4839 = !DILocalVariable(name: "c", arg: 2, scope: !4834, file: !2625, line: 147, type: !2643)
!4840 = !DILocalVariable(name: "used", arg: 3, scope: !4834, file: !2625, line: 147, type: !131)
!4841 = !DILocalVariable(name: "buf", scope: !4834, file: !2625, line: 149, type: !2632)
!4842 = !DILocalVariable(name: "cmem", scope: !4834, file: !2625, line: 150, type: !102)
!4843 = !DILocation(line: 0, scope: !4834)
!4844 = !DILocation(line: 149, column: 22, scope: !4834)
!4845 = !DILocation(line: 0, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !2625, line: 159, column: 7)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !2625, line: 158, column: 9)
!4848 = distinct !DILexicalBlock(scope: !4834, file: !2625, line: 152, column: 6)
!4849 = !DILocation(line: 159, column: 7, scope: !4847)
!4850 = !DILocation(line: 165, column: 1, scope: !4834)
!4851 = distinct !DISubprogram(name: "free_chunk", scope: !4796, file: !4796, line: 133, type: !4852, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4854)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{null, !2638, !2643}
!4854 = !{!4855, !4856}
!4855 = !DILocalVariable(name: "h", arg: 1, scope: !4851, file: !4796, line: 133, type: !2638)
!4856 = !DILocalVariable(name: "c", arg: 2, scope: !4851, file: !4796, line: 133, type: !2643)
!4857 = !DILocation(line: 0, scope: !4851)
!4858 = !DILocation(line: 136, column: 21, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4851, file: !4796, line: 136, column: 6)
!4860 = !DILocation(line: 136, column: 7, scope: !4859)
!4861 = !DILocation(line: 136, column: 6, scope: !4851)
!4862 = !DILocation(line: 137, column: 3, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4859, file: !4796, line: 136, column: 41)
!4864 = !DILocation(line: 138, column: 22, scope: !4863)
!4865 = !DILocation(line: 138, column: 3, scope: !4863)
!4866 = !DILocation(line: 139, column: 2, scope: !4863)
!4867 = !DILocation(line: 142, column: 21, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4851, file: !4796, line: 142, column: 6)
!4869 = !{i32 -65535, i32 536903678}
!4870 = !DILocation(line: 142, column: 7, scope: !4868)
!4871 = !DILocation(line: 142, column: 6, scope: !4851)
!4872 = !DILocation(line: 143, column: 3, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4868, file: !4796, line: 142, column: 40)
!4874 = !DILocation(line: 144, column: 19, scope: !4873)
!4875 = !DILocation(line: 144, column: 3, scope: !4873)
!4876 = !DILocation(line: 145, column: 7, scope: !4873)
!4877 = !DILocation(line: 146, column: 2, scope: !4873)
!4878 = !DILocation(line: 148, column: 2, scope: !4851)
!4879 = !DILocation(line: 149, column: 1, scope: !4851)
!4880 = distinct !DISubprogram(name: "right_chunk", scope: !2625, file: !2625, line: 204, type: !4881, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4883)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!2643, !2638, !2643}
!4883 = !{!4884, !4885}
!4884 = !DILocalVariable(name: "h", arg: 1, scope: !4880, file: !2625, line: 204, type: !2638)
!4885 = !DILocalVariable(name: "c", arg: 2, scope: !4880, file: !2625, line: 204, type: !2643)
!4886 = !DILocation(line: 0, scope: !4880)
!4887 = !DILocation(line: 206, column: 13, scope: !4880)
!4888 = !DILocation(line: 206, column: 11, scope: !4880)
!4889 = !DILocation(line: 206, column: 2, scope: !4880)
!4890 = distinct !DISubprogram(name: "chunk_used", scope: !2625, file: !2625, line: 137, type: !4891, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4893)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!131, !2638, !2643}
!4893 = !{!4894, !4895}
!4894 = !DILocalVariable(name: "h", arg: 1, scope: !4890, file: !2625, line: 137, type: !2638)
!4895 = !DILocalVariable(name: "c", arg: 2, scope: !4890, file: !2625, line: 137, type: !2643)
!4896 = !DILocation(line: 0, scope: !4890)
!4897 = !DILocation(line: 139, column: 9, scope: !4890)
!4898 = !DILocation(line: 139, column: 42, scope: !4890)
!4899 = !DILocation(line: 139, column: 2, scope: !4890)
!4900 = distinct !DISubprogram(name: "free_list_remove", scope: !4796, file: !4796, line: 60, type: !4852, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4901)
!4901 = !{!4902, !4903, !4904}
!4902 = !DILocalVariable(name: "h", arg: 1, scope: !4900, file: !4796, line: 60, type: !2638)
!4903 = !DILocalVariable(name: "c", arg: 2, scope: !4900, file: !4796, line: 60, type: !2643)
!4904 = !DILocalVariable(name: "bidx", scope: !4905, file: !4796, line: 63, type: !103)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !4796, line: 62, column: 31)
!4906 = distinct !DILexicalBlock(scope: !4900, file: !4796, line: 62, column: 6)
!4907 = !DILocation(line: 0, scope: !4900)
!4908 = !DILocation(line: 63, column: 28, scope: !4905)
!4909 = !{i32 0, i32 32768}
!4910 = !DILocation(line: 63, column: 14, scope: !4905)
!4911 = !DILocation(line: 0, scope: !4905)
!4912 = !DILocation(line: 64, column: 3, scope: !4905)
!4913 = !DILocation(line: 66, column: 1, scope: !4900)
!4914 = distinct !DISubprogram(name: "merge_chunks", scope: !4796, file: !4796, line: 125, type: !4915, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4917)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{null, !2638, !2643, !2643}
!4917 = !{!4918, !4919, !4920, !4921}
!4918 = !DILocalVariable(name: "h", arg: 1, scope: !4914, file: !4796, line: 125, type: !2638)
!4919 = !DILocalVariable(name: "lc", arg: 2, scope: !4914, file: !4796, line: 125, type: !2643)
!4920 = !DILocalVariable(name: "rc", arg: 3, scope: !4914, file: !4796, line: 125, type: !2643)
!4921 = !DILocalVariable(name: "newsz", scope: !4914, file: !4796, line: 127, type: !4922)
!4922 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2625, line: 62, baseType: !108)
!4923 = !DILocation(line: 0, scope: !4914)
!4924 = !DILocation(line: 127, column: 20, scope: !4914)
!4925 = !DILocation(line: 127, column: 40, scope: !4914)
!4926 = !DILocation(line: 127, column: 38, scope: !4914)
!4927 = !DILocation(line: 129, column: 2, scope: !4914)
!4928 = !DILocation(line: 130, column: 25, scope: !4914)
!4929 = !DILocation(line: 130, column: 2, scope: !4914)
!4930 = !DILocation(line: 131, column: 1, scope: !4914)
!4931 = distinct !DISubprogram(name: "left_chunk", scope: !2625, file: !2625, line: 199, type: !4881, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4932)
!4932 = !{!4933, !4934}
!4933 = !DILocalVariable(name: "h", arg: 1, scope: !4931, file: !2625, line: 199, type: !2638)
!4934 = !DILocalVariable(name: "c", arg: 2, scope: !4931, file: !2625, line: 199, type: !2643)
!4935 = !DILocation(line: 0, scope: !4931)
!4936 = !DILocation(line: 201, column: 13, scope: !4931)
!4937 = !DILocation(line: 201, column: 11, scope: !4931)
!4938 = !DILocation(line: 201, column: 2, scope: !4931)
!4939 = distinct !DISubprogram(name: "free_list_add", scope: !4796, file: !4796, line: 98, type: !4852, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4940)
!4940 = !{!4941, !4942, !4943}
!4941 = !DILocalVariable(name: "h", arg: 1, scope: !4939, file: !4796, line: 98, type: !2638)
!4942 = !DILocalVariable(name: "c", arg: 2, scope: !4939, file: !4796, line: 98, type: !2643)
!4943 = !DILocalVariable(name: "bidx", scope: !4944, file: !4796, line: 101, type: !103)
!4944 = distinct !DILexicalBlock(scope: !4945, file: !4796, line: 100, column: 31)
!4945 = distinct !DILexicalBlock(scope: !4939, file: !4796, line: 100, column: 6)
!4946 = !DILocation(line: 0, scope: !4939)
!4947 = !DILocation(line: 101, column: 28, scope: !4944)
!4948 = !DILocation(line: 101, column: 14, scope: !4944)
!4949 = !DILocation(line: 0, scope: !4944)
!4950 = !DILocation(line: 102, column: 3, scope: !4944)
!4951 = !DILocation(line: 104, column: 1, scope: !4939)
!4952 = distinct !DISubprogram(name: "chunk_size", scope: !2625, file: !2625, line: 142, type: !4953, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4955)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!4922, !2638, !2643}
!4955 = !{!4956, !4957}
!4956 = !DILocalVariable(name: "h", arg: 1, scope: !4952, file: !2625, line: 142, type: !2638)
!4957 = !DILocalVariable(name: "c", arg: 2, scope: !4952, file: !2625, line: 142, type: !2643)
!4958 = !DILocation(line: 0, scope: !4952)
!4959 = !DILocation(line: 144, column: 9, scope: !4952)
!4960 = !DILocation(line: 144, column: 42, scope: !4952)
!4961 = !DILocation(line: 144, column: 2, scope: !4952)
!4962 = distinct !DISubprogram(name: "bucket_idx", scope: !2625, file: !2625, line: 250, type: !4963, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4965)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!103, !2638, !4922}
!4965 = !{!4966, !4967, !4968}
!4966 = !DILocalVariable(name: "h", arg: 1, scope: !4962, file: !2625, line: 250, type: !2638)
!4967 = !DILocalVariable(name: "sz", arg: 2, scope: !4962, file: !2625, line: 250, type: !4922)
!4968 = !DILocalVariable(name: "usable_sz", scope: !4962, file: !2625, line: 252, type: !32)
!4969 = !DILocation(line: 0, scope: !4962)
!4970 = !DILocation(line: 252, column: 32, scope: !4962)
!4971 = !DILocation(line: 252, column: 30, scope: !4962)
!4972 = !DILocation(line: 252, column: 50, scope: !4962)
!4973 = !DILocation(line: 253, column: 14, scope: !4962)
!4974 = !{i32 0, i32 33}
!4975 = !DILocation(line: 253, column: 12, scope: !4962)
!4976 = !DILocation(line: 253, column: 2, scope: !4962)
!4977 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4796, file: !4796, line: 68, type: !4978, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !4980)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{null, !2638, !2643, !103}
!4980 = !{!4981, !4982, !4983, !4984, !4986, !4989}
!4981 = !DILocalVariable(name: "h", arg: 1, scope: !4977, file: !4796, line: 68, type: !2638)
!4982 = !DILocalVariable(name: "c", arg: 2, scope: !4977, file: !4796, line: 68, type: !2643)
!4983 = !DILocalVariable(name: "bidx", arg: 3, scope: !4977, file: !4796, line: 68, type: !103)
!4984 = !DILocalVariable(name: "b", scope: !4977, file: !4796, line: 70, type: !4985)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!4986 = !DILocalVariable(name: "second", scope: !4987, file: !4796, line: 84, type: !2643)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !4796, line: 80, column: 9)
!4988 = distinct !DILexicalBlock(scope: !4977, file: !4796, line: 72, column: 6)
!4989 = !DILocalVariable(name: "first", scope: !4987, file: !4796, line: 85, type: !2643)
!4990 = !DILocation(line: 0, scope: !4977)
!4991 = !DILocation(line: 72, column: 9, scope: !4988)
!4992 = !DILocation(line: 72, column: 14, scope: !4988)
!4993 = !DILocation(line: 72, column: 6, scope: !4977)
!4994 = !DILocation(line: 76, column: 23, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4988, file: !4796, line: 72, column: 21)
!4996 = !DILocation(line: 76, column: 6, scope: !4995)
!4997 = !DILocation(line: 76, column: 20, scope: !4995)
!4998 = !DILocation(line: 77, column: 11, scope: !4995)
!4999 = !DILocation(line: 78, column: 3, scope: !4995)
!5000 = !DILocation(line: 79, column: 3, scope: !4995)
!5001 = !DILocation(line: 80, column: 2, scope: !4995)
!5002 = !DILocation(line: 0, scope: !4987)
!5003 = !DILocation(line: 85, column: 21, scope: !4987)
!5004 = !{i32 0, i32 65536}
!5005 = !DILocation(line: 87, column: 3, scope: !4987)
!5006 = !DILocation(line: 88, column: 3, scope: !4987)
!5007 = !DILocation(line: 89, column: 3, scope: !4987)
!5008 = !DILocation(line: 90, column: 3, scope: !4987)
!5009 = !DILocation(line: 96, column: 1, scope: !4977)
!5010 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2625, file: !2625, line: 187, type: !4915, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5011)
!5011 = !{!5012, !5013, !5014}
!5012 = !DILocalVariable(name: "h", arg: 1, scope: !5010, file: !2625, line: 187, type: !2638)
!5013 = !DILocalVariable(name: "c", arg: 2, scope: !5010, file: !2625, line: 187, type: !2643)
!5014 = !DILocalVariable(name: "prev", arg: 3, scope: !5010, file: !2625, line: 188, type: !2643)
!5015 = !DILocation(line: 0, scope: !5010)
!5016 = !DILocation(line: 190, column: 2, scope: !5010)
!5017 = !DILocation(line: 191, column: 1, scope: !5010)
!5018 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2625, file: !2625, line: 193, type: !4915, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5019)
!5019 = !{!5020, !5021, !5022}
!5020 = !DILocalVariable(name: "h", arg: 1, scope: !5018, file: !2625, line: 193, type: !2638)
!5021 = !DILocalVariable(name: "c", arg: 2, scope: !5018, file: !2625, line: 193, type: !2643)
!5022 = !DILocalVariable(name: "next", arg: 3, scope: !5018, file: !2625, line: 194, type: !2643)
!5023 = !DILocation(line: 0, scope: !5018)
!5024 = !DILocation(line: 196, column: 2, scope: !5018)
!5025 = !DILocation(line: 197, column: 1, scope: !5018)
!5026 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2625, file: !2625, line: 177, type: !4881, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5027)
!5027 = !{!5028, !5029}
!5028 = !DILocalVariable(name: "h", arg: 1, scope: !5026, file: !2625, line: 177, type: !2638)
!5029 = !DILocalVariable(name: "c", arg: 2, scope: !5026, file: !2625, line: 177, type: !2643)
!5030 = !DILocation(line: 0, scope: !5026)
!5031 = !DILocation(line: 179, column: 9, scope: !5026)
!5032 = !DILocation(line: 179, column: 2, scope: !5026)
!5033 = distinct !DISubprogram(name: "chunk_field", scope: !2625, file: !2625, line: 107, type: !5034, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5036)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{!2643, !2638, !2643, !2624}
!5036 = !{!5037, !5038, !5039, !5040, !5041}
!5037 = !DILocalVariable(name: "h", arg: 1, scope: !5033, file: !2625, line: 107, type: !2638)
!5038 = !DILocalVariable(name: "c", arg: 2, scope: !5033, file: !2625, line: 107, type: !2643)
!5039 = !DILocalVariable(name: "f", arg: 3, scope: !5033, file: !2625, line: 108, type: !2624)
!5040 = !DILocalVariable(name: "buf", scope: !5033, file: !2625, line: 110, type: !2632)
!5041 = !DILocalVariable(name: "cmem", scope: !5033, file: !2625, line: 111, type: !102)
!5042 = !DILocation(line: 0, scope: !5033)
!5043 = !DILocation(line: 110, column: 22, scope: !5033)
!5044 = !DILocation(line: 111, column: 15, scope: !5033)
!5045 = !DILocation(line: 116, column: 11, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !2625, line: 115, column: 9)
!5047 = distinct !DILexicalBlock(scope: !5033, file: !2625, line: 113, column: 6)
!5048 = !DILocation(line: 116, column: 10, scope: !5046)
!5049 = !DILocation(line: 118, column: 1, scope: !5033)
!5050 = distinct !DISubprogram(name: "chunk_buf", scope: !2625, file: !2625, line: 101, type: !5051, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5053)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{!2632, !2638}
!5053 = !{!5054}
!5054 = !DILocalVariable(name: "h", arg: 1, scope: !5050, file: !2625, line: 101, type: !2638)
!5055 = !DILocation(line: 0, scope: !5050)
!5056 = !DILocation(line: 104, column: 9, scope: !5050)
!5057 = !DILocation(line: 104, column: 2, scope: !5050)
!5058 = distinct !DISubprogram(name: "chunk_set", scope: !2625, file: !2625, line: 120, type: !5059, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5061)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{null, !2638, !2643, !2624, !2643}
!5061 = !{!5062, !5063, !5064, !5065, !5066, !5067}
!5062 = !DILocalVariable(name: "h", arg: 1, scope: !5058, file: !2625, line: 120, type: !2638)
!5063 = !DILocalVariable(name: "c", arg: 2, scope: !5058, file: !2625, line: 120, type: !2643)
!5064 = !DILocalVariable(name: "f", arg: 3, scope: !5058, file: !2625, line: 121, type: !2624)
!5065 = !DILocalVariable(name: "val", arg: 4, scope: !5058, file: !2625, line: 121, type: !2643)
!5066 = !DILocalVariable(name: "buf", scope: !5058, file: !2625, line: 125, type: !2632)
!5067 = !DILocalVariable(name: "cmem", scope: !5058, file: !2625, line: 126, type: !102)
!5068 = !DILocation(line: 0, scope: !5058)
!5069 = !DILocation(line: 125, column: 22, scope: !5058)
!5070 = !DILocation(line: 126, column: 15, scope: !5058)
!5071 = !DILocation(line: 133, column: 27, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5073, file: !2625, line: 131, column: 9)
!5073 = distinct !DILexicalBlock(scope: !5058, file: !2625, line: 128, column: 6)
!5074 = !DILocation(line: 133, column: 4, scope: !5072)
!5075 = !DILocation(line: 133, column: 3, scope: !5072)
!5076 = !DILocation(line: 133, column: 25, scope: !5072)
!5077 = !DILocation(line: 135, column: 1, scope: !5058)
!5078 = distinct !DISubprogram(name: "min_chunk_size", scope: !2625, file: !2625, line: 240, type: !5079, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5081)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!4922, !2638}
!5081 = !{!5082}
!5082 = !DILocalVariable(name: "h", arg: 1, scope: !5078, file: !2625, line: 240, type: !2638)
!5083 = !DILocation(line: 0, scope: !5078)
!5084 = !DILocation(line: 242, column: 9, scope: !5078)
!5085 = !DILocation(line: 242, column: 2, scope: !5078)
!5086 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2625, file: !2625, line: 235, type: !5087, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!4922, !2638, !132}
!5089 = !{!5090, !5091}
!5090 = !DILocalVariable(name: "h", arg: 1, scope: !5086, file: !2625, line: 235, type: !2638)
!5091 = !DILocalVariable(name: "bytes", arg: 2, scope: !5086, file: !2625, line: 235, type: !132)
!5092 = !DILocation(line: 0, scope: !5086)
!5093 = !DILocation(line: 237, column: 39, scope: !5086)
!5094 = !DILocation(line: 237, column: 9, scope: !5086)
!5095 = !DILocation(line: 237, column: 2, scope: !5086)
!5096 = distinct !DISubprogram(name: "chunksz", scope: !2625, file: !2625, line: 230, type: !5097, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5099)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!4922, !132}
!5099 = !{!5100}
!5100 = !DILocalVariable(name: "bytes", arg: 1, scope: !5096, file: !2625, line: 230, type: !132)
!5101 = !DILocation(line: 0, scope: !5096)
!5102 = !DILocation(line: 232, column: 29, scope: !5096)
!5103 = !DILocation(line: 232, column: 35, scope: !5096)
!5104 = !DILocation(line: 232, column: 2, scope: !5096)
!5105 = distinct !DISubprogram(name: "set_chunk_size", scope: !2625, file: !2625, line: 172, type: !5106, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5108)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{null, !2638, !2643, !4922}
!5108 = !{!5109, !5110, !5111}
!5109 = !DILocalVariable(name: "h", arg: 1, scope: !5105, file: !2625, line: 172, type: !2638)
!5110 = !DILocalVariable(name: "c", arg: 2, scope: !5105, file: !2625, line: 172, type: !2643)
!5111 = !DILocalVariable(name: "size", arg: 3, scope: !5105, file: !2625, line: 172, type: !4922)
!5112 = !DILocation(line: 0, scope: !5105)
!5113 = !DILocation(line: 174, column: 38, scope: !5105)
!5114 = !DILocation(line: 174, column: 2, scope: !5105)
!5115 = !DILocation(line: 175, column: 1, scope: !5105)
!5116 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2625, file: !2625, line: 209, type: !5106, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5117)
!5117 = !{!5118, !5119, !5120}
!5118 = !DILocalVariable(name: "h", arg: 1, scope: !5116, file: !2625, line: 209, type: !2638)
!5119 = !DILocalVariable(name: "c", arg: 2, scope: !5116, file: !2625, line: 209, type: !2643)
!5120 = !DILocalVariable(name: "size", arg: 3, scope: !5116, file: !2625, line: 210, type: !4922)
!5121 = !DILocation(line: 0, scope: !5116)
!5122 = !DILocation(line: 212, column: 2, scope: !5116)
!5123 = !DILocation(line: 213, column: 1, scope: !5116)
!5124 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4796, file: !4796, line: 34, type: !4978, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5125)
!5125 = !{!5126, !5127, !5128, !5129, !5130, !5133}
!5126 = !DILocalVariable(name: "h", arg: 1, scope: !5124, file: !4796, line: 34, type: !2638)
!5127 = !DILocalVariable(name: "c", arg: 2, scope: !5124, file: !4796, line: 34, type: !2643)
!5128 = !DILocalVariable(name: "bidx", arg: 3, scope: !5124, file: !4796, line: 34, type: !103)
!5129 = !DILocalVariable(name: "b", scope: !5124, file: !4796, line: 36, type: !4985)
!5130 = !DILocalVariable(name: "first", scope: !5131, file: !4796, line: 47, type: !2643)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !4796, line: 46, column: 9)
!5132 = distinct !DILexicalBlock(scope: !5124, file: !4796, line: 42, column: 6)
!5133 = !DILocalVariable(name: "second", scope: !5131, file: !4796, line: 48, type: !2643)
!5134 = !DILocation(line: 0, scope: !5124)
!5135 = !DILocation(line: 36, column: 29, scope: !5124)
!5136 = !DILocation(line: 42, column: 6, scope: !5132)
!5137 = !DILocation(line: 42, column: 28, scope: !5132)
!5138 = !DILocation(line: 42, column: 6, scope: !5124)
!5139 = !DILocation(line: 44, column: 24, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5132, file: !4796, line: 42, column: 34)
!5141 = !DILocation(line: 44, column: 23, scope: !5140)
!5142 = !DILocation(line: 44, column: 6, scope: !5140)
!5143 = !DILocation(line: 44, column: 20, scope: !5140)
!5144 = !DILocation(line: 45, column: 6, scope: !5140)
!5145 = !DILocation(line: 45, column: 11, scope: !5140)
!5146 = !DILocation(line: 46, column: 2, scope: !5140)
!5147 = !DILocation(line: 47, column: 21, scope: !5131)
!5148 = !DILocation(line: 0, scope: !5131)
!5149 = !DILocation(line: 50, column: 6, scope: !5131)
!5150 = !DILocation(line: 50, column: 11, scope: !5131)
!5151 = !DILocation(line: 51, column: 3, scope: !5131)
!5152 = !DILocation(line: 52, column: 3, scope: !5131)
!5153 = !DILocation(line: 58, column: 1, scope: !5124)
!5154 = distinct !DISubprogram(name: "next_free_chunk", scope: !2625, file: !2625, line: 182, type: !4881, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5155)
!5155 = !{!5156, !5157}
!5156 = !DILocalVariable(name: "h", arg: 1, scope: !5154, file: !2625, line: 182, type: !2638)
!5157 = !DILocalVariable(name: "c", arg: 2, scope: !5154, file: !2625, line: 182, type: !2643)
!5158 = !DILocation(line: 0, scope: !5154)
!5159 = !DILocation(line: 184, column: 9, scope: !5154)
!5160 = !DILocation(line: 184, column: 2, scope: !5154)
!5161 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4796, file: !4796, line: 200, type: !5162, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5164)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!132, !4799, !102}
!5164 = !{!5165, !5166, !5167, !5168, !5169, !5170, !5171}
!5165 = !DILocalVariable(name: "heap", arg: 1, scope: !5161, file: !4796, line: 200, type: !4799)
!5166 = !DILocalVariable(name: "mem", arg: 2, scope: !5161, file: !4796, line: 200, type: !102)
!5167 = !DILocalVariable(name: "h", scope: !5161, file: !4796, line: 202, type: !2638)
!5168 = !DILocalVariable(name: "c", scope: !5161, file: !4796, line: 203, type: !2643)
!5169 = !DILocalVariable(name: "addr", scope: !5161, file: !4796, line: 204, type: !132)
!5170 = !DILocalVariable(name: "chunk_base", scope: !5161, file: !4796, line: 205, type: !132)
!5171 = !DILocalVariable(name: "chunk_sz", scope: !5161, file: !4796, line: 206, type: !132)
!5172 = !DILocation(line: 0, scope: !5161)
!5173 = !DILocation(line: 202, column: 27, scope: !5161)
!5174 = !DILocation(line: 203, column: 16, scope: !5161)
!5175 = !DILocation(line: 204, column: 16, scope: !5161)
!5176 = !DILocation(line: 205, column: 31, scope: !5161)
!5177 = !DILocation(line: 205, column: 22, scope: !5161)
!5178 = !DILocation(line: 206, column: 20, scope: !5161)
!5179 = !DILocation(line: 206, column: 37, scope: !5161)
!5180 = !DILocation(line: 208, column: 26, scope: !5161)
!5181 = !DILocation(line: 208, column: 18, scope: !5161)
!5182 = !DILocation(line: 208, column: 2, scope: !5161)
!5183 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4796, file: !4796, line: 263, type: !5184, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5186)
!5184 = !DISubroutineType(types: !5185)
!5185 = !{!102, !4799, !132}
!5186 = !{!5187, !5188, !5189, !5190, !5191, !5192}
!5187 = !DILocalVariable(name: "heap", arg: 1, scope: !5183, file: !4796, line: 263, type: !4799)
!5188 = !DILocalVariable(name: "bytes", arg: 2, scope: !5183, file: !4796, line: 263, type: !132)
!5189 = !DILocalVariable(name: "h", scope: !5183, file: !4796, line: 265, type: !2638)
!5190 = !DILocalVariable(name: "mem", scope: !5183, file: !4796, line: 266, type: !102)
!5191 = !DILocalVariable(name: "chunk_sz", scope: !5183, file: !4796, line: 272, type: !4922)
!5192 = !DILocalVariable(name: "c", scope: !5183, file: !4796, line: 273, type: !2643)
!5193 = !DILocation(line: 0, scope: !5183)
!5194 = !DILocation(line: 265, column: 27, scope: !5183)
!5195 = !DILocation(line: 268, column: 12, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5183, file: !4796, line: 268, column: 6)
!5197 = !DILocation(line: 268, column: 18, scope: !5196)
!5198 = !DILocation(line: 268, column: 21, scope: !5196)
!5199 = !DILocation(line: 268, column: 6, scope: !5183)
!5200 = !DILocation(line: 272, column: 23, scope: !5183)
!5201 = !DILocation(line: 273, column: 16, scope: !5183)
!5202 = !DILocation(line: 274, column: 8, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5183, file: !4796, line: 274, column: 6)
!5204 = !DILocation(line: 274, column: 6, scope: !5183)
!5205 = !DILocation(line: 279, column: 6, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5183, file: !4796, line: 279, column: 6)
!5207 = !DILocation(line: 279, column: 23, scope: !5206)
!5208 = !DILocation(line: 279, column: 6, scope: !5183)
!5209 = !DILocation(line: 280, column: 24, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5206, file: !4796, line: 279, column: 35)
!5211 = !DILocation(line: 280, column: 3, scope: !5210)
!5212 = !DILocation(line: 281, column: 3, scope: !5210)
!5213 = !DILocation(line: 282, column: 2, scope: !5210)
!5214 = !DILocation(line: 284, column: 2, scope: !5183)
!5215 = !DILocation(line: 286, column: 8, scope: !5183)
!5216 = !DILocation(line: 298, column: 2, scope: !5183)
!5217 = !DILocation(line: 299, column: 1, scope: !5183)
!5218 = distinct !DISubprogram(name: "size_too_big", scope: !2625, file: !2625, line: 256, type: !5219, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5221)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{!131, !2638, !132}
!5221 = !{!5222, !5223}
!5222 = !DILocalVariable(name: "h", arg: 1, scope: !5218, file: !2625, line: 256, type: !2638)
!5223 = !DILocalVariable(name: "bytes", arg: 2, scope: !5218, file: !2625, line: 256, type: !132)
!5224 = !DILocation(line: 0, scope: !5218)
!5225 = !DILocation(line: 262, column: 16, scope: !5218)
!5226 = !DILocation(line: 262, column: 36, scope: !5218)
!5227 = !DILocation(line: 262, column: 30, scope: !5218)
!5228 = !DILocation(line: 262, column: 2, scope: !5218)
!5229 = distinct !DISubprogram(name: "alloc_chunk", scope: !4796, file: !4796, line: 211, type: !5230, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5232)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!2643, !2638, !4922}
!5232 = !{!5233, !5234, !5235, !5236, !5237, !5240, !5241, !5243, !5244, !5247}
!5233 = !DILocalVariable(name: "h", arg: 1, scope: !5229, file: !4796, line: 211, type: !2638)
!5234 = !DILocalVariable(name: "sz", arg: 2, scope: !5229, file: !4796, line: 211, type: !4922)
!5235 = !DILocalVariable(name: "bi", scope: !5229, file: !4796, line: 213, type: !103)
!5236 = !DILocalVariable(name: "b", scope: !5229, file: !4796, line: 214, type: !4985)
!5237 = !DILocalVariable(name: "first", scope: !5238, file: !4796, line: 233, type: !2643)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !4796, line: 232, column: 15)
!5239 = distinct !DILexicalBlock(scope: !5229, file: !4796, line: 232, column: 6)
!5240 = !DILocalVariable(name: "i", scope: !5238, file: !4796, line: 234, type: !103)
!5241 = !DILocalVariable(name: "c", scope: !5242, file: !4796, line: 236, type: !2643)
!5242 = distinct !DILexicalBlock(scope: !5238, file: !4796, line: 235, column: 6)
!5243 = !DILocalVariable(name: "bmask", scope: !5229, file: !4796, line: 249, type: !108)
!5244 = !DILocalVariable(name: "minbucket", scope: !5245, file: !4796, line: 252, type: !103)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !4796, line: 251, column: 19)
!5246 = distinct !DILexicalBlock(scope: !5229, file: !4796, line: 251, column: 6)
!5247 = !DILocalVariable(name: "c", scope: !5245, file: !4796, line: 253, type: !2643)
!5248 = !DILocation(line: 0, scope: !5229)
!5249 = !DILocation(line: 213, column: 11, scope: !5229)
!5250 = !DILocation(line: 232, column: 9, scope: !5239)
!5251 = !DILocation(line: 232, column: 6, scope: !5239)
!5252 = !DILocation(line: 232, column: 6, scope: !5229)
!5253 = !DILocation(line: 236, column: 21, scope: !5242)
!5254 = !DILocation(line: 0, scope: !5238)
!5255 = !DILocation(line: 0, scope: !5242)
!5256 = !DILocation(line: 237, column: 8, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5242, file: !4796, line: 237, column: 8)
!5258 = !DILocation(line: 237, column: 25, scope: !5257)
!5259 = !DILocation(line: 237, column: 8, scope: !5242)
!5260 = !DILocation(line: 238, column: 5, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !4796, line: 237, column: 32)
!5262 = !DILocation(line: 241, column: 14, scope: !5242)
!5263 = !DILocation(line: 241, column: 12, scope: !5242)
!5264 = !DILocation(line: 243, column: 12, scope: !5238)
!5265 = !DILocation(line: 243, column: 16, scope: !5238)
!5266 = distinct !{!5266, !5267, !5268}
!5267 = !DILocation(line: 235, column: 3, scope: !5238)
!5268 = !DILocation(line: 243, column: 35, scope: !5238)
!5269 = !DILocation(line: 249, column: 22, scope: !5229)
!5270 = !DILocation(line: 249, column: 39, scope: !5229)
!5271 = !DILocation(line: 249, column: 36, scope: !5229)
!5272 = !DILocation(line: 251, column: 12, scope: !5246)
!5273 = !DILocation(line: 251, column: 6, scope: !5229)
!5274 = !DILocation(line: 252, column: 19, scope: !5245)
!5275 = !DILocation(line: 0, scope: !5245)
!5276 = !DILocation(line: 253, column: 39, scope: !5245)
!5277 = !DILocation(line: 255, column: 3, scope: !5245)
!5278 = !DILocation(line: 261, column: 1, scope: !5229)
!5279 = distinct !DISubprogram(name: "split_chunks", scope: !4796, file: !4796, line: 109, type: !4915, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5280)
!5280 = !{!5281, !5282, !5283, !5284, !5285, !5286}
!5281 = !DILocalVariable(name: "h", arg: 1, scope: !5279, file: !4796, line: 109, type: !2638)
!5282 = !DILocalVariable(name: "lc", arg: 2, scope: !5279, file: !4796, line: 109, type: !2643)
!5283 = !DILocalVariable(name: "rc", arg: 3, scope: !5279, file: !4796, line: 109, type: !2643)
!5284 = !DILocalVariable(name: "sz0", scope: !5279, file: !4796, line: 114, type: !4922)
!5285 = !DILocalVariable(name: "lsz", scope: !5279, file: !4796, line: 115, type: !4922)
!5286 = !DILocalVariable(name: "rsz", scope: !5279, file: !4796, line: 116, type: !4922)
!5287 = !DILocation(line: 0, scope: !5279)
!5288 = !DILocation(line: 114, column: 18, scope: !5279)
!5289 = !DILocation(line: 115, column: 21, scope: !5279)
!5290 = !DILocation(line: 116, column: 22, scope: !5279)
!5291 = !DILocation(line: 118, column: 2, scope: !5279)
!5292 = !DILocation(line: 119, column: 2, scope: !5279)
!5293 = !DILocation(line: 120, column: 2, scope: !5279)
!5294 = !DILocation(line: 121, column: 25, scope: !5279)
!5295 = !DILocation(line: 121, column: 2, scope: !5279)
!5296 = !DILocation(line: 122, column: 1, scope: !5279)
!5297 = distinct !DISubprogram(name: "chunk_mem", scope: !4796, file: !4796, line: 24, type: !5298, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5300)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{!102, !2638, !2643}
!5300 = !{!5301, !5302, !5303, !5304}
!5301 = !DILocalVariable(name: "h", arg: 1, scope: !5297, file: !4796, line: 24, type: !2638)
!5302 = !DILocalVariable(name: "c", arg: 2, scope: !5297, file: !4796, line: 24, type: !2643)
!5303 = !DILocalVariable(name: "buf", scope: !5297, file: !4796, line: 26, type: !2632)
!5304 = !DILocalVariable(name: "ret", scope: !5297, file: !4796, line: 27, type: !379)
!5305 = !DILocation(line: 0, scope: !5297)
!5306 = !DILocation(line: 26, column: 22, scope: !5297)
!5307 = !DILocation(line: 27, column: 38, scope: !5297)
!5308 = !DILocation(line: 31, column: 2, scope: !5297)
!5309 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4796, file: !4796, line: 301, type: !5310, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5312)
!5310 = !DISubroutineType(types: !5311)
!5311 = !{!102, !4799, !132, !132}
!5312 = !{!5313, !5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324}
!5313 = !DILocalVariable(name: "heap", arg: 1, scope: !5309, file: !4796, line: 301, type: !4799)
!5314 = !DILocalVariable(name: "align", arg: 2, scope: !5309, file: !4796, line: 301, type: !132)
!5315 = !DILocalVariable(name: "bytes", arg: 3, scope: !5309, file: !4796, line: 301, type: !132)
!5316 = !DILocalVariable(name: "h", scope: !5309, file: !4796, line: 303, type: !2638)
!5317 = !DILocalVariable(name: "gap", scope: !5309, file: !4796, line: 304, type: !132)
!5318 = !DILocalVariable(name: "rew", scope: !5309, file: !4796, line: 304, type: !132)
!5319 = !DILocalVariable(name: "padded_sz", scope: !5309, file: !4796, line: 335, type: !4922)
!5320 = !DILocalVariable(name: "c0", scope: !5309, file: !4796, line: 336, type: !2643)
!5321 = !DILocalVariable(name: "mem", scope: !5309, file: !4796, line: 341, type: !379)
!5322 = !DILocalVariable(name: "end", scope: !5309, file: !4796, line: 345, type: !2632)
!5323 = !DILocalVariable(name: "c", scope: !5309, file: !4796, line: 348, type: !2643)
!5324 = !DILocalVariable(name: "c_end", scope: !5309, file: !4796, line: 349, type: !2643)
!5325 = !DILocation(line: 0, scope: !5309)
!5326 = !DILocation(line: 303, column: 27, scope: !5309)
!5327 = !DILocation(line: 313, column: 16, scope: !5309)
!5328 = !DILocation(line: 313, column: 14, scope: !5309)
!5329 = !DILocation(line: 314, column: 12, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5309, file: !4796, line: 314, column: 6)
!5331 = !DILocation(line: 314, column: 6, scope: !5309)
!5332 = !DILocation(line: 315, column: 9, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5330, file: !4796, line: 314, column: 20)
!5334 = !DILocation(line: 316, column: 9, scope: !5333)
!5335 = !DILocation(line: 318, column: 13, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5337, file: !4796, line: 318, column: 7)
!5337 = distinct !DILexicalBlock(scope: !5330, file: !4796, line: 317, column: 9)
!5338 = !DILocation(line: 318, column: 7, scope: !5337)
!5339 = !DILocation(line: 319, column: 11, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5336, file: !4796, line: 318, column: 39)
!5341 = !DILocation(line: 319, column: 4, scope: !5340)
!5342 = !DILocation(line: 0, scope: !5330)
!5343 = !DILocation(line: 326, column: 12, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5309, file: !4796, line: 326, column: 6)
!5345 = !DILocation(line: 326, column: 17, scope: !5344)
!5346 = !DILocation(line: 326, column: 20, scope: !5344)
!5347 = !DILocation(line: 326, column: 6, scope: !5309)
!5348 = !DILocation(line: 335, column: 50, scope: !5309)
!5349 = !DILocation(line: 335, column: 58, scope: !5309)
!5350 = !DILocation(line: 335, column: 24, scope: !5309)
!5351 = !DILocation(line: 336, column: 17, scope: !5309)
!5352 = !DILocation(line: 338, column: 9, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5309, file: !4796, line: 338, column: 6)
!5354 = !DILocation(line: 338, column: 6, scope: !5309)
!5355 = !DILocation(line: 341, column: 17, scope: !5309)
!5356 = !DILocation(line: 344, column: 20, scope: !5309)
!5357 = !DILocation(line: 344, column: 8, scope: !5309)
!5358 = !DILocation(line: 344, column: 47, scope: !5309)
!5359 = !DILocation(line: 345, column: 39, scope: !5309)
!5360 = !DILocation(line: 348, column: 16, scope: !5309)
!5361 = !DILocation(line: 349, column: 26, scope: !5309)
!5362 = !DILocation(line: 349, column: 24, scope: !5309)
!5363 = !DILocation(line: 353, column: 8, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5309, file: !4796, line: 353, column: 6)
!5365 = !DILocation(line: 353, column: 6, scope: !5309)
!5366 = !DILocation(line: 354, column: 3, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5364, file: !4796, line: 353, column: 14)
!5368 = !DILocation(line: 355, column: 3, scope: !5367)
!5369 = !DILocation(line: 356, column: 2, scope: !5367)
!5370 = !DILocation(line: 359, column: 6, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5309, file: !4796, line: 359, column: 6)
!5372 = !DILocation(line: 359, column: 24, scope: !5371)
!5373 = !DILocation(line: 359, column: 6, scope: !5309)
!5374 = !DILocation(line: 360, column: 3, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5371, file: !4796, line: 359, column: 33)
!5376 = !DILocation(line: 361, column: 3, scope: !5375)
!5377 = !DILocation(line: 362, column: 2, scope: !5375)
!5378 = !DILocation(line: 364, column: 2, scope: !5309)
!5379 = !DILocation(line: 377, column: 1, scope: !5309)
!5380 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4796, file: !4796, line: 379, type: !5381, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5383)
!5381 = !DISubroutineType(types: !5382)
!5382 = !{!102, !4799, !102, !132, !132}
!5383 = !{!5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5399, !5400}
!5384 = !DILocalVariable(name: "heap", arg: 1, scope: !5380, file: !4796, line: 379, type: !4799)
!5385 = !DILocalVariable(name: "ptr", arg: 2, scope: !5380, file: !4796, line: 379, type: !102)
!5386 = !DILocalVariable(name: "align", arg: 3, scope: !5380, file: !4796, line: 380, type: !132)
!5387 = !DILocalVariable(name: "bytes", arg: 4, scope: !5380, file: !4796, line: 380, type: !132)
!5388 = !DILocalVariable(name: "h", scope: !5380, file: !4796, line: 382, type: !2638)
!5389 = !DILocalVariable(name: "c", scope: !5380, file: !4796, line: 399, type: !2643)
!5390 = !DILocalVariable(name: "rc", scope: !5380, file: !4796, line: 400, type: !2643)
!5391 = !DILocalVariable(name: "align_gap", scope: !5380, file: !4796, line: 401, type: !132)
!5392 = !DILocalVariable(name: "chunks_need", scope: !5380, file: !4796, line: 402, type: !4922)
!5393 = !DILocalVariable(name: "split_size", scope: !5394, file: !4796, line: 435, type: !4922)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !4796, line: 433, column: 61)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !4796, line: 432, column: 13)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !4796, line: 409, column: 13)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !4796, line: 406, column: 13)
!5398 = distinct !DILexicalBlock(scope: !5380, file: !4796, line: 404, column: 6)
!5399 = !DILocalVariable(name: "ptr2", scope: !5380, file: !4796, line: 474, type: !102)
!5400 = !DILocalVariable(name: "prev_size", scope: !5401, file: !4796, line: 477, type: !132)
!5401 = distinct !DILexicalBlock(scope: !5402, file: !4796, line: 476, column: 20)
!5402 = distinct !DILexicalBlock(scope: !5380, file: !4796, line: 476, column: 6)
!5403 = !DILocation(line: 0, scope: !5380)
!5404 = !DILocation(line: 382, column: 27, scope: !5380)
!5405 = !DILocation(line: 385, column: 10, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5380, file: !4796, line: 385, column: 6)
!5407 = !DILocation(line: 385, column: 6, scope: !5380)
!5408 = !DILocation(line: 386, column: 10, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5406, file: !4796, line: 385, column: 19)
!5410 = !DILocation(line: 386, column: 3, scope: !5409)
!5411 = !DILocation(line: 388, column: 12, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5380, file: !4796, line: 388, column: 6)
!5413 = !DILocation(line: 388, column: 6, scope: !5380)
!5414 = !DILocation(line: 389, column: 3, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5412, file: !4796, line: 388, column: 18)
!5416 = !DILocation(line: 390, column: 3, scope: !5415)
!5417 = !DILocation(line: 395, column: 6, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5380, file: !4796, line: 395, column: 6)
!5419 = !DILocation(line: 395, column: 6, scope: !5380)
!5420 = !DILocation(line: 399, column: 16, scope: !5380)
!5421 = !DILocation(line: 400, column: 17, scope: !5380)
!5422 = !DILocation(line: 401, column: 49, scope: !5380)
!5423 = !DILocation(line: 401, column: 36, scope: !5380)
!5424 = !DILocation(line: 402, column: 52, scope: !5380)
!5425 = !DILocation(line: 402, column: 26, scope: !5380)
!5426 = !DILocation(line: 404, column: 6, scope: !5398)
!5427 = !DILocation(line: 404, column: 12, scope: !5398)
!5428 = !DILocation(line: 404, column: 40, scope: !5398)
!5429 = !DILocation(line: 404, column: 31, scope: !5398)
!5430 = !DILocation(line: 404, column: 6, scope: !5380)
!5431 = !DILocation(line: 406, column: 13, scope: !5397)
!5432 = !DILocation(line: 406, column: 30, scope: !5397)
!5433 = !DILocation(line: 406, column: 13, scope: !5398)
!5434 = !DILocation(line: 409, column: 30, scope: !5396)
!5435 = !DILocation(line: 409, column: 13, scope: !5397)
!5436 = !DILocation(line: 420, column: 24, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5396, file: !4796, line: 409, column: 45)
!5438 = !DILocation(line: 420, column: 3, scope: !5437)
!5439 = !DILocation(line: 421, column: 3, scope: !5437)
!5440 = !DILocation(line: 422, column: 3, scope: !5437)
!5441 = !DILocation(line: 431, column: 3, scope: !5437)
!5442 = !DILocation(line: 432, column: 14, scope: !5395)
!5443 = !DILocation(line: 432, column: 32, scope: !5395)
!5444 = !DILocation(line: 433, column: 26, scope: !5395)
!5445 = !DILocation(line: 433, column: 24, scope: !5395)
!5446 = !DILocation(line: 433, column: 44, scope: !5395)
!5447 = !DILocation(line: 432, column: 13, scope: !5396)
!5448 = !DILocation(line: 435, column: 38, scope: !5394)
!5449 = !DILocation(line: 0, scope: !5394)
!5450 = !DILocation(line: 445, column: 3, scope: !5394)
!5451 = !DILocation(line: 447, column: 20, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5394, file: !4796, line: 447, column: 7)
!5453 = !DILocation(line: 447, column: 18, scope: !5452)
!5454 = !DILocation(line: 447, column: 7, scope: !5394)
!5455 = !DILocation(line: 448, column: 27, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5452, file: !4796, line: 447, column: 39)
!5457 = !DILocation(line: 448, column: 4, scope: !5456)
!5458 = !DILocation(line: 449, column: 4, scope: !5456)
!5459 = !DILocation(line: 450, column: 3, scope: !5456)
!5460 = !DILocation(line: 452, column: 3, scope: !5394)
!5461 = !DILocation(line: 453, column: 3, scope: !5394)
!5462 = !DILocation(line: 474, column: 15, scope: !5380)
!5463 = !DILocation(line: 476, column: 11, scope: !5402)
!5464 = !DILocation(line: 476, column: 6, scope: !5380)
!5465 = !DILocation(line: 477, column: 42, scope: !5401)
!5466 = !DILocation(line: 477, column: 22, scope: !5401)
!5467 = !DILocation(line: 477, column: 60, scope: !5401)
!5468 = !DILocation(line: 0, scope: !5401)
!5469 = !DILocation(line: 479, column: 21, scope: !5401)
!5470 = !DILocation(line: 479, column: 3, scope: !5401)
!5471 = !DILocation(line: 480, column: 3, scope: !5401)
!5472 = !DILocation(line: 481, column: 2, scope: !5401)
!5473 = !DILocation(line: 483, column: 1, scope: !5380)
!5474 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2625, file: !2625, line: 245, type: !5475, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5477)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{!132, !2638, !4922}
!5477 = !{!5478, !5479}
!5478 = !DILocalVariable(name: "h", arg: 1, scope: !5474, file: !2625, line: 245, type: !2638)
!5479 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5474, file: !2625, line: 245, type: !4922)
!5480 = !DILocation(line: 0, scope: !5474)
!5481 = !DILocation(line: 247, column: 20, scope: !5474)
!5482 = !DILocation(line: 247, column: 33, scope: !5474)
!5483 = !DILocation(line: 247, column: 2, scope: !5474)
!5484 = distinct !DISubprogram(name: "sys_heap_init", scope: !4796, file: !4796, line: 485, type: !5485, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5487)
!5485 = !DISubroutineType(types: !5486)
!5486 = !{null, !4799, !102, !132}
!5487 = !{!5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497}
!5488 = !DILocalVariable(name: "heap", arg: 1, scope: !5484, file: !4796, line: 485, type: !4799)
!5489 = !DILocalVariable(name: "mem", arg: 2, scope: !5484, file: !4796, line: 485, type: !102)
!5490 = !DILocalVariable(name: "bytes", arg: 3, scope: !5484, file: !4796, line: 485, type: !132)
!5491 = !DILocalVariable(name: "addr", scope: !5484, file: !4796, line: 502, type: !22)
!5492 = !DILocalVariable(name: "end", scope: !5484, file: !4796, line: 503, type: !22)
!5493 = !DILocalVariable(name: "heap_sz", scope: !5484, file: !4796, line: 504, type: !4922)
!5494 = !DILocalVariable(name: "h", scope: !5484, file: !4796, line: 509, type: !2638)
!5495 = !DILocalVariable(name: "nb_buckets", scope: !5484, file: !4796, line: 520, type: !103)
!5496 = !DILocalVariable(name: "chunk0_size", scope: !5484, file: !4796, line: 521, type: !4922)
!5497 = !DILocalVariable(name: "i", scope: !5498, file: !4796, line: 526, type: !103)
!5498 = distinct !DILexicalBlock(scope: !5484, file: !4796, line: 526, column: 2)
!5499 = !DILocation(line: 0, scope: !5484)
!5500 = !DILocation(line: 499, column: 8, scope: !5484)
!5501 = !DILocation(line: 502, column: 19, scope: !5484)
!5502 = !DILocation(line: 503, column: 18, scope: !5484)
!5503 = !DILocation(line: 504, column: 27, scope: !5484)
!5504 = !DILocation(line: 504, column: 35, scope: !5484)
!5505 = !DILocation(line: 509, column: 21, scope: !5484)
!5506 = !DILocation(line: 510, column: 8, scope: !5484)
!5507 = !DILocation(line: 510, column: 13, scope: !5484)
!5508 = !DILocation(line: 511, column: 5, scope: !5484)
!5509 = !DILocation(line: 511, column: 15, scope: !5484)
!5510 = !DILocation(line: 512, column: 5, scope: !5484)
!5511 = !DILocation(line: 512, column: 19, scope: !5484)
!5512 = !DILocation(line: 520, column: 19, scope: !5484)
!5513 = !DILocation(line: 522, column: 21, scope: !5484)
!5514 = !DILocation(line: 521, column: 56, scope: !5484)
!5515 = !DILocation(line: 521, column: 26, scope: !5484)
!5516 = !DILocation(line: 0, scope: !5498)
!5517 = !DILocation(line: 526, column: 20, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5498, file: !4796, line: 526, column: 2)
!5519 = !DILocation(line: 526, column: 2, scope: !5498)
!5520 = !DILocation(line: 531, column: 2, scope: !5484)
!5521 = !DILocation(line: 532, column: 2, scope: !5484)
!5522 = !DILocation(line: 533, column: 2, scope: !5484)
!5523 = !DILocation(line: 536, column: 41, scope: !5484)
!5524 = !DILocation(line: 536, column: 2, scope: !5484)
!5525 = !DILocation(line: 537, column: 2, scope: !5484)
!5526 = !DILocation(line: 540, column: 2, scope: !5484)
!5527 = !DILocation(line: 541, column: 2, scope: !5484)
!5528 = !DILocation(line: 542, column: 2, scope: !5484)
!5529 = !DILocation(line: 544, column: 2, scope: !5484)
!5530 = !DILocation(line: 545, column: 1, scope: !5484)
!5531 = !DILocation(line: 527, column: 17, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5518, file: !4796, line: 526, column: 39)
!5533 = !DILocation(line: 527, column: 22, scope: !5532)
!5534 = !DILocation(line: 526, column: 35, scope: !5518)
!5535 = distinct !{!5535, !5519, !5536}
!5536 = !DILocation(line: 528, column: 2, scope: !5498)
!5537 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2658, file: !2658, line: 1338, type: !5538, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !5546)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{!103, !3994, !102, !337, !5540, !108}
!5540 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3633, line: 99, baseType: !5541)
!5541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3633, line: 40, baseType: !5542)
!5542 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2658, baseType: !5543)
!5543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5544)
!5544 = !{!5545}
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5543, file: !2658, baseType: !102, size: 32)
!5546 = !{!5547, !5548, !5549, !5550, !5551, !5552, !5556, !5557, !5558, !5560, !5565, !5608, !5611, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5623, !5624, !5625, !5629, !5632, !5634, !5637, !5638, !5639, !5644, !5650, !5653, !5657, !5663, !5667, !5670, !5672, !5675}
!5547 = !DILocalVariable(name: "out", arg: 1, scope: !5537, file: !2658, line: 1338, type: !3994)
!5548 = !DILocalVariable(name: "ctx", arg: 2, scope: !5537, file: !2658, line: 1338, type: !102)
!5549 = !DILocalVariable(name: "fp", arg: 3, scope: !5537, file: !2658, line: 1338, type: !337)
!5550 = !DILocalVariable(name: "ap", arg: 4, scope: !5537, file: !2658, line: 1339, type: !5540)
!5551 = !DILocalVariable(name: "flags", arg: 5, scope: !5537, file: !2658, line: 1339, type: !108)
!5552 = !DILocalVariable(name: "buf", scope: !5537, file: !2658, line: 1341, type: !5553)
!5553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 176, elements: !5554)
!5554 = !{!5555}
!5555 = !DISubrange(count: 22)
!5556 = !DILocalVariable(name: "count", scope: !5537, file: !2658, line: 1342, type: !132)
!5557 = !DILocalVariable(name: "sint", scope: !5537, file: !2658, line: 1343, type: !2677)
!5558 = !DILocalVariable(name: "tagged_ap", scope: !5537, file: !2658, line: 1345, type: !5559)
!5559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!5560 = !DILocalVariable(name: "rc", scope: !5561, file: !2658, line: 1377, type: !103)
!5561 = distinct !DILexicalBlock(scope: !5562, file: !2658, line: 1377, column: 4)
!5562 = distinct !DILexicalBlock(scope: !5563, file: !2658, line: 1376, column: 19)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1376, column: 7)
!5564 = distinct !DILexicalBlock(scope: !5537, file: !2658, line: 1375, column: 19)
!5565 = !DILocalVariable(name: "state", scope: !5564, file: !2658, line: 1395, type: !5566)
!5566 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5537, file: !2658, line: 1392, size: 192, elements: !5567)
!5567 = !{!5568, !5576}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5566, file: !2658, line: 1393, baseType: !5569, size: 64)
!5569 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2658, line: 166, size: 64, elements: !5570)
!5570 = !{!5571, !5572, !5573, !5574, !5575}
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5569, file: !2658, line: 168, baseType: !2677, size: 64)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5569, file: !2658, line: 171, baseType: !2680, size: 64)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5569, file: !2658, line: 174, baseType: !372, size: 64)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5569, file: !2658, line: 177, baseType: !370, size: 64)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5569, file: !2658, line: 180, baseType: !102, size: 32)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5566, file: !2658, line: 1394, baseType: !5577, size: 96, offset: 64)
!5577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2658, line: 189, size: 96, elements: !5578)
!5578 = !{!5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5603}
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5577, file: !2658, line: 191, baseType: !131, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5577, file: !2658, line: 194, baseType: !131, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5577, file: !2658, line: 197, baseType: !131, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5577, file: !2658, line: 200, baseType: !131, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5577, file: !2658, line: 203, baseType: !131, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5577, file: !2658, line: 206, baseType: !131, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5577, file: !2658, line: 209, baseType: !131, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5577, file: !2658, line: 212, baseType: !131, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5577, file: !2658, line: 219, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5577, file: !2658, line: 222, baseType: !131, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5577, file: !2658, line: 229, baseType: !131, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5577, file: !2658, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5577, file: !2658, line: 238, baseType: !131, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5577, file: !2658, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5577, file: !2658, line: 244, baseType: !131, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5577, file: !2658, line: 247, baseType: !131, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5577, file: !2658, line: 252, baseType: !131, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5577, file: !2658, line: 257, baseType: !131, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5577, file: !2658, line: 260, baseType: !186, size: 8, offset: 24)
!5598 = !DIDerivedType(tag: DW_TAG_member, scope: !5577, file: !2658, line: 262, baseType: !5599, size: 32, offset: 32)
!5599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5577, file: !2658, line: 262, size: 32, elements: !5600)
!5600 = !{!5601, !5602}
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5599, file: !2658, line: 267, baseType: !103, size: 32)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5599, file: !2658, line: 289, baseType: !103, size: 32)
!5603 = !DIDerivedType(tag: DW_TAG_member, scope: !5577, file: !2658, line: 292, baseType: !5604, size: 32, offset: 64)
!5604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5577, file: !2658, line: 292, size: 32, elements: !5605)
!5605 = !{!5606, !5607}
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5604, file: !2658, line: 297, baseType: !103, size: 32)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5604, file: !2658, line: 306, baseType: !103, size: 32)
!5608 = !DILocalVariable(name: "conv", scope: !5564, file: !2658, line: 1400, type: !5609)
!5609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5610)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5577, size: 32)
!5611 = !DILocalVariable(name: "value", scope: !5564, file: !2658, line: 1401, type: !5612)
!5612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5613)
!5613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5569, size: 32)
!5614 = !DILocalVariable(name: "sp", scope: !5564, file: !2658, line: 1402, type: !337)
!5615 = !DILocalVariable(name: "width", scope: !5564, file: !2658, line: 1403, type: !103)
!5616 = !DILocalVariable(name: "precision", scope: !5564, file: !2658, line: 1404, type: !103)
!5617 = !DILocalVariable(name: "bps", scope: !5564, file: !2658, line: 1405, type: !337)
!5618 = !DILocalVariable(name: "bpe", scope: !5564, file: !2658, line: 1406, type: !337)
!5619 = !DILocalVariable(name: "sign", scope: !5564, file: !2658, line: 1407, type: !278)
!5620 = !DILocalVariable(name: "arg", scope: !5621, file: !2658, line: 1432, type: !103)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !2658, line: 1431, column: 24)
!5622 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1431, column: 7)
!5623 = !DILocalVariable(name: "specifier_cat", scope: !5564, file: !2658, line: 1468, type: !2657)
!5624 = !DILocalVariable(name: "length_mod", scope: !5564, file: !2658, line: 1470, type: !2665)
!5625 = !DILocalVariable(name: "rc", scope: !5626, file: !2658, line: 1575, type: !103)
!5626 = distinct !DILexicalBlock(scope: !5627, file: !2658, line: 1575, column: 4)
!5627 = distinct !DILexicalBlock(scope: !5628, file: !2658, line: 1574, column: 43)
!5628 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1574, column: 7)
!5629 = !DILocalVariable(name: "rc", scope: !5630, file: !2658, line: 1584, type: !103)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !2658, line: 1584, column: 4)
!5631 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1582, column: 28)
!5632 = !DILocalVariable(name: "len", scope: !5633, file: !2658, line: 1589, type: !132)
!5633 = distinct !DILexicalBlock(scope: !5631, file: !2658, line: 1586, column: 13)
!5634 = !DILocalVariable(name: "len", scope: !5635, file: !2658, line: 1641, type: !132)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !2658, line: 1640, column: 24)
!5636 = distinct !DILexicalBlock(scope: !5631, file: !2658, line: 1640, column: 8)
!5637 = !DILocalVariable(name: "nj_len", scope: !5564, file: !2658, line: 1722, type: !132)
!5638 = !DILocalVariable(name: "pad_len", scope: !5564, file: !2658, line: 1723, type: !103)
!5639 = !DILocalVariable(name: "pad", scope: !5640, file: !2658, line: 1751, type: !278)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !2658, line: 1750, column: 26)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !2658, line: 1750, column: 8)
!5642 = distinct !DILexicalBlock(scope: !5643, file: !2658, line: 1747, column: 18)
!5643 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1747, column: 7)
!5644 = !DILocalVariable(name: "rc", scope: !5645, file: !2658, line: 1758, type: !103)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !2658, line: 1758, column: 7)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !2658, line: 1757, column: 21)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !2658, line: 1757, column: 10)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !2658, line: 1756, column: 26)
!5649 = distinct !DILexicalBlock(scope: !5640, file: !2658, line: 1756, column: 9)
!5650 = !DILocalVariable(name: "rc", scope: !5651, file: !2658, line: 1765, type: !103)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !2658, line: 1765, column: 6)
!5652 = distinct !DILexicalBlock(scope: !5640, file: !2658, line: 1764, column: 25)
!5653 = !DILocalVariable(name: "rc", scope: !5654, file: !2658, line: 1774, type: !103)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !2658, line: 1774, column: 4)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !2658, line: 1773, column: 18)
!5656 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1773, column: 7)
!5657 = !DILocalVariable(name: "rc", scope: !5658, file: !2658, line: 1819, type: !103)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !2658, line: 1819, column: 5)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !2658, line: 1818, column: 44)
!5660 = distinct !DILexicalBlock(scope: !5661, file: !2658, line: 1818, column: 8)
!5661 = distinct !DILexicalBlock(scope: !5662, file: !2658, line: 1817, column: 10)
!5662 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1777, column: 7)
!5663 = !DILocalVariable(name: "rc", scope: !5664, file: !2658, line: 1823, type: !103)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !2658, line: 1823, column: 5)
!5665 = distinct !DILexicalBlock(scope: !5666, file: !2658, line: 1822, column: 26)
!5666 = distinct !DILexicalBlock(scope: !5661, file: !2658, line: 1822, column: 8)
!5667 = !DILocalVariable(name: "rc", scope: !5668, file: !2658, line: 1828, type: !103)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !2658, line: 1828, column: 5)
!5669 = distinct !DILexicalBlock(scope: !5661, file: !2658, line: 1827, column: 26)
!5670 = !DILocalVariable(name: "rc", scope: !5671, file: !2658, line: 1831, type: !103)
!5671 = distinct !DILexicalBlock(scope: !5661, file: !2658, line: 1831, column: 4)
!5672 = !DILocalVariable(name: "rc", scope: !5673, file: !2658, line: 1836, type: !103)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !2658, line: 1836, column: 4)
!5674 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1835, column: 21)
!5675 = !DILabel(scope: !5631, name: "prec_int_pad0", file: !2658, line: 1634)
!5676 = !DILocation(line: 0, scope: !5537)
!5677 = !DILocation(line: 1341, column: 2, scope: !5537)
!5678 = !DILocation(line: 1341, column: 7, scope: !5537)
!5679 = !DILocation(line: 1375, column: 2, scope: !5537)
!5680 = !DILocation(line: 1342, column: 9, scope: !5537)
!5681 = !DILocation(line: 1375, column: 9, scope: !5537)
!5682 = !DILocation(line: 1377, column: 4, scope: !5561)
!5683 = !DILocation(line: 0, scope: !5561)
!5684 = !DILocation(line: 1377, column: 4, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5561, file: !2658, line: 1377, column: 4)
!5686 = distinct !{!5686, !5679, !5687}
!5687 = !DILocation(line: 1839, column: 2, scope: !5537)
!5688 = !DILocation(line: 1392, column: 3, scope: !5564)
!5689 = !DILocation(line: 1395, column: 5, scope: !5564)
!5690 = !DILocation(line: 0, scope: !5564)
!5691 = !DILocation(line: 1409, column: 8, scope: !5564)
!5692 = !DILocation(line: 1414, column: 13, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1414, column: 7)
!5694 = !DILocation(line: 1414, column: 7, scope: !5564)
!5695 = !DILocation(line: 1415, column: 12, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5693, file: !2658, line: 1414, column: 25)
!5697 = !DILocation(line: 1417, column: 14, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5696, file: !2658, line: 1417, column: 8)
!5699 = !DILocation(line: 1417, column: 8, scope: !5696)
!5700 = !DILocation(line: 1418, column: 21, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5698, file: !2658, line: 1417, column: 19)
!5702 = !DILocation(line: 1419, column: 13, scope: !5701)
!5703 = !DILocation(line: 1420, column: 4, scope: !5701)
!5704 = !DILocation(line: 1421, column: 20, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5693, file: !2658, line: 1421, column: 14)
!5706 = !DILocation(line: 1421, column: 14, scope: !5693)
!5707 = !DILocation(line: 1431, column: 13, scope: !5622)
!5708 = !DILocation(line: 1431, column: 7, scope: !5564)
!5709 = !DILocation(line: 1432, column: 14, scope: !5621)
!5710 = !DILocation(line: 0, scope: !5621)
!5711 = !DILocation(line: 1434, column: 12, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5621, file: !2658, line: 1434, column: 8)
!5713 = !DILocation(line: 1434, column: 8, scope: !5621)
!5714 = !DILocation(line: 1435, column: 24, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5712, file: !2658, line: 1434, column: 17)
!5716 = !DILocation(line: 1436, column: 4, scope: !5715)
!5717 = !DILocation(line: 1439, column: 20, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5622, file: !2658, line: 1439, column: 14)
!5719 = !DILocation(line: 1439, column: 14, scope: !5622)
!5720 = !DILocation(line: 1469, column: 37, scope: !5564)
!5721 = !DILocation(line: 1448, column: 20, scope: !5564)
!5722 = !DILocation(line: 1449, column: 22, scope: !5564)
!5723 = !DILocation(line: 1471, column: 34, scope: !5564)
!5724 = !DILocation(line: 1478, column: 7, scope: !5564)
!5725 = !DILocation(line: 1479, column: 4, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !2658, line: 1478, column: 40)
!5727 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1478, column: 7)
!5728 = !DILocation(line: 1484, column: 19, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5726, file: !2658, line: 1479, column: 24)
!5730 = !DILocation(line: 1484, column: 17, scope: !5729)
!5731 = !DILocation(line: 1485, column: 5, scope: !5729)
!5732 = !DILocation(line: 1492, column: 20, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !2658, line: 1491, column: 12)
!5734 = distinct !DILexicalBlock(scope: !5729, file: !2658, line: 1487, column: 9)
!5735 = !DILocation(line: 1492, column: 18, scope: !5733)
!5736 = !DILocation(line: 1494, column: 5, scope: !5729)
!5737 = !DILocation(line: 1497, column: 23, scope: !5729)
!5738 = !DILocation(line: 1496, column: 17, scope: !5729)
!5739 = !DILocation(line: 1498, column: 5, scope: !5729)
!5740 = !DILocation(line: 1501, column: 23, scope: !5729)
!5741 = !DILocation(line: 1500, column: 17, scope: !5729)
!5742 = !DILocation(line: 1502, column: 5, scope: !5729)
!5743 = !DILocation(line: 1513, column: 23, scope: !5729)
!5744 = !DILocation(line: 1513, column: 6, scope: !5729)
!5745 = !DILocation(line: 1512, column: 17, scope: !5729)
!5746 = !DILocation(line: 1514, column: 5, scope: !5729)
!5747 = !DILocation(line: 0, scope: !5729)
!5748 = !DILocation(line: 1516, column: 8, scope: !5726)
!5749 = !DILocation(line: 1517, column: 19, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !2658, line: 1516, column: 33)
!5751 = distinct !DILexicalBlock(scope: !5726, file: !2658, line: 1516, column: 8)
!5752 = !DILocation(line: 1517, column: 17, scope: !5750)
!5753 = !DILocation(line: 1518, column: 4, scope: !5750)
!5754 = !DILocation(line: 1519, column: 19, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !2658, line: 1518, column: 39)
!5756 = distinct !DILexicalBlock(scope: !5751, file: !2658, line: 1518, column: 15)
!5757 = !DILocation(line: 1519, column: 17, scope: !5755)
!5758 = !DILocation(line: 1520, column: 4, scope: !5755)
!5759 = !DILocation(line: 1522, column: 4, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5761, file: !2658, line: 1521, column: 47)
!5761 = distinct !DILexicalBlock(scope: !5727, file: !2658, line: 1521, column: 14)
!5762 = !DILocation(line: 1527, column: 19, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5760, file: !2658, line: 1522, column: 24)
!5764 = !DILocation(line: 1527, column: 17, scope: !5763)
!5765 = !DILocation(line: 1528, column: 5, scope: !5763)
!5766 = !DILocation(line: 0, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5763, file: !2658, line: 1530, column: 9)
!5768 = !DILocation(line: 1540, column: 23, scope: !5763)
!5769 = !DILocation(line: 1539, column: 17, scope: !5763)
!5770 = !DILocation(line: 1542, column: 5, scope: !5763)
!5771 = !DILocation(line: 1545, column: 23, scope: !5763)
!5772 = !DILocation(line: 1544, column: 17, scope: !5763)
!5773 = !DILocation(line: 1547, column: 5, scope: !5763)
!5774 = !DILocation(line: 1551, column: 23, scope: !5763)
!5775 = !DILocation(line: 1551, column: 6, scope: !5763)
!5776 = !DILocation(line: 1550, column: 17, scope: !5763)
!5777 = !DILocation(line: 1552, column: 5, scope: !5763)
!5778 = !DILocation(line: 0, scope: !5763)
!5779 = !DILocation(line: 1554, column: 8, scope: !5760)
!5780 = !DILocation(line: 1555, column: 19, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !2658, line: 1554, column: 33)
!5782 = distinct !DILexicalBlock(scope: !5760, file: !2658, line: 1554, column: 8)
!5783 = !DILocation(line: 1555, column: 17, scope: !5781)
!5784 = !DILocation(line: 1556, column: 4, scope: !5781)
!5785 = !DILocation(line: 1557, column: 19, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5787, file: !2658, line: 1556, column: 39)
!5787 = distinct !DILexicalBlock(scope: !5782, file: !2658, line: 1556, column: 15)
!5788 = !DILocation(line: 1557, column: 17, scope: !5786)
!5789 = !DILocation(line: 1558, column: 4, scope: !5786)
!5790 = !DILocation(line: 0, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !2658, line: 1560, column: 8)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !2658, line: 1559, column: 45)
!5793 = distinct !DILexicalBlock(scope: !5761, file: !2658, line: 1559, column: 14)
!5794 = !DILocation(line: 1566, column: 17, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !2658, line: 1565, column: 46)
!5796 = distinct !DILexicalBlock(scope: !5793, file: !2658, line: 1565, column: 14)
!5797 = !DILocation(line: 1566, column: 15, scope: !5795)
!5798 = !DILocation(line: 1567, column: 3, scope: !5795)
!5799 = !DILocation(line: 1574, column: 21, scope: !5628)
!5800 = !DILocation(line: 1575, column: 4, scope: !5626)
!5801 = !DILocation(line: 0, scope: !5626)
!5802 = !DILocation(line: 1575, column: 4, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5626, file: !2658, line: 1575, column: 4)
!5804 = !DILocation(line: 1582, column: 17, scope: !5564)
!5805 = !DILocation(line: 1582, column: 3, scope: !5564)
!5806 = !DILocation(line: 1584, column: 4, scope: !5630)
!5807 = !DILocation(line: 0, scope: !5630)
!5808 = !DILocation(line: 1584, column: 4, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5630, file: !2658, line: 1584, column: 4)
!5810 = !DILocation(line: 1587, column: 31, scope: !5633)
!5811 = !DILocation(line: 1591, column: 18, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5633, file: !2658, line: 1591, column: 8)
!5813 = !DILocation(line: 1591, column: 8, scope: !5633)
!5814 = !DILocation(line: 1592, column: 11, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5812, file: !2658, line: 1591, column: 24)
!5816 = !DILocation(line: 0, scope: !5633)
!5817 = !DILocation(line: 1593, column: 4, scope: !5815)
!5818 = !DILocation(line: 1594, column: 11, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5812, file: !2658, line: 1593, column: 11)
!5820 = !DILocation(line: 1604, column: 51, scope: !5631)
!5821 = !DILocation(line: 1604, column: 13, scope: !5631)
!5822 = !DILocation(line: 1604, column: 11, scope: !5631)
!5823 = !DILocation(line: 1606, column: 4, scope: !5631)
!5824 = !DILocation(line: 1609, column: 14, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5631, file: !2658, line: 1609, column: 8)
!5826 = !DILocation(line: 1609, column: 8, scope: !5631)
!5827 = !DILocation(line: 1619, column: 18, scope: !5631)
!5828 = !DILocation(line: 1620, column: 13, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5631, file: !2658, line: 1620, column: 8)
!5830 = !DILocation(line: 1620, column: 8, scope: !5631)
!5831 = !DILocation(line: 1622, column: 36, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5829, file: !2658, line: 1620, column: 18)
!5833 = !DILocation(line: 1622, column: 17, scope: !5832)
!5834 = !DILocation(line: 1623, column: 4, scope: !5832)
!5835 = !DILocation(line: 1632, column: 29, scope: !5631)
!5836 = !DILocation(line: 1632, column: 10, scope: !5631)
!5837 = !DILocation(line: 1632, column: 4, scope: !5631)
!5838 = !DILocation(line: 1407, column: 8, scope: !5564)
!5839 = !DILocation(line: 0, scope: !5631)
!5840 = !DILocation(line: 1634, column: 3, scope: !5631)
!5841 = !DILocation(line: 1640, column: 18, scope: !5636)
!5842 = !DILocation(line: 1640, column: 8, scope: !5631)
!5843 = !DILocation(line: 1729, column: 13, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1729, column: 7)
!5845 = !DILocation(line: 1641, column: 22, scope: !5635)
!5846 = !DILocation(line: 0, scope: !5635)
!5847 = !DILocation(line: 1646, column: 21, scope: !5635)
!5848 = !DILocation(line: 1649, column: 13, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5635, file: !2658, line: 1649, column: 9)
!5850 = !DILocation(line: 1649, column: 9, scope: !5635)
!5851 = !DILocation(line: 1650, column: 35, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5849, file: !2658, line: 1649, column: 34)
!5853 = !DILocation(line: 1650, column: 23, scope: !5852)
!5854 = !DILocation(line: 1651, column: 5, scope: !5852)
!5855 = !DILocation(line: 1660, column: 15, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5631, file: !2658, line: 1660, column: 8)
!5857 = !DILocation(line: 1660, column: 19, scope: !5856)
!5858 = !DILocation(line: 1660, column: 8, scope: !5631)
!5859 = !DILocation(line: 1661, column: 23, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5856, file: !2658, line: 1660, column: 28)
!5861 = !DILocation(line: 1661, column: 11, scope: !5860)
!5862 = !DILocation(line: 1665, column: 22, scope: !5860)
!5863 = !DILocation(line: 1666, column: 21, scope: !5860)
!5864 = !DILocation(line: 1668, column: 5, scope: !5860)
!5865 = !DILocation(line: 1677, column: 30, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5867, file: !2658, line: 1676, column: 49)
!5867 = distinct !DILexicalBlock(scope: !5631, file: !2658, line: 1676, column: 8)
!5868 = !DILocation(line: 1677, column: 5, scope: !5866)
!5869 = !DILocation(line: 1680, column: 4, scope: !5631)
!5870 = !DILocation(line: 0, scope: !5812)
!5871 = !DILocation(line: 1597, column: 14, scope: !5633)
!5872 = !DILocation(line: 1699, column: 11, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1699, column: 7)
!5874 = !DILocation(line: 1699, column: 7, scope: !5564)
!5875 = !DILocation(line: 1725, column: 7, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1725, column: 7)
!5877 = !DILocation(line: 1725, column: 12, scope: !5876)
!5878 = !DILocation(line: 1747, column: 13, scope: !5643)
!5879 = !DILocation(line: 1747, column: 7, scope: !5564)
!5880 = !DILocation(line: 1722, column: 24, scope: !5564)
!5881 = !DILocation(line: 1725, column: 7, scope: !5564)
!5882 = !DILocation(line: 1729, column: 7, scope: !5564)
!5883 = !DILocation(line: 1736, column: 13, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5564, file: !2658, line: 1736, column: 7)
!5885 = !DILocation(line: 1735, column: 19, scope: !5564)
!5886 = !DILocation(line: 1736, column: 7, scope: !5564)
!5887 = !DILocation(line: 1748, column: 10, scope: !5642)
!5888 = !DILocation(line: 1750, column: 15, scope: !5641)
!5889 = !DILocation(line: 1750, column: 8, scope: !5642)
!5890 = !DILocation(line: 0, scope: !5640)
!5891 = !DILocation(line: 1756, column: 15, scope: !5649)
!5892 = !DILocation(line: 1756, column: 9, scope: !5640)
!5893 = !DILocation(line: 1758, column: 7, scope: !5645)
!5894 = !DILocation(line: 0, scope: !5645)
!5895 = !DILocation(line: 1758, column: 7, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5645, file: !2658, line: 1758, column: 7)
!5897 = !DILocation(line: 1764, column: 5, scope: !5640)
!5898 = !DILocation(line: 0, scope: !5642)
!5899 = !DILocation(line: 1764, column: 20, scope: !5640)
!5900 = !DILocation(line: 1764, column: 17, scope: !5640)
!5901 = !DILocation(line: 1765, column: 6, scope: !5651)
!5902 = !DILocation(line: 0, scope: !5651)
!5903 = !DILocation(line: 1765, column: 6, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5651, file: !2658, line: 1765, column: 6)
!5905 = distinct !{!5905, !5897, !5906}
!5906 = !DILocation(line: 1766, column: 5, scope: !5640)
!5907 = !DILocation(line: 1773, column: 12, scope: !5656)
!5908 = !DILocation(line: 1773, column: 7, scope: !5564)
!5909 = !DILocation(line: 1773, column: 7, scope: !5656)
!5910 = !DILocation(line: 1774, column: 4, scope: !5654)
!5911 = !DILocation(line: 0, scope: !5654)
!5912 = !DILocation(line: 1774, column: 4, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5654, file: !2658, line: 1774, column: 4)
!5914 = !DILocation(line: 1818, column: 8, scope: !5660)
!5915 = !DILocation(line: 1818, column: 27, scope: !5660)
!5916 = !DILocation(line: 1818, column: 25, scope: !5660)
!5917 = !DILocation(line: 1818, column: 8, scope: !5661)
!5918 = !DILocation(line: 1819, column: 5, scope: !5658)
!5919 = !DILocation(line: 0, scope: !5658)
!5920 = !DILocation(line: 1819, column: 5, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5658, file: !2658, line: 1819, column: 5)
!5922 = !DILocation(line: 1822, column: 14, scope: !5666)
!5923 = !DILocation(line: 1822, column: 8, scope: !5661)
!5924 = !DILocation(line: 1823, column: 5, scope: !5664)
!5925 = !DILocation(line: 0, scope: !5664)
!5926 = !DILocation(line: 1823, column: 5, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5664, file: !2658, line: 1823, column: 5)
!5928 = !DILocation(line: 1826, column: 20, scope: !5661)
!5929 = !DILocation(line: 1827, column: 4, scope: !5661)
!5930 = !DILocation(line: 0, scope: !5661)
!5931 = !DILocation(line: 1827, column: 21, scope: !5661)
!5932 = !DILocation(line: 1827, column: 18, scope: !5661)
!5933 = !DILocation(line: 1828, column: 5, scope: !5668)
!5934 = !DILocation(line: 0, scope: !5668)
!5935 = !DILocation(line: 1828, column: 5, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5668, file: !2658, line: 1828, column: 5)
!5937 = distinct !{!5937, !5929, !5938}
!5938 = !DILocation(line: 1829, column: 4, scope: !5661)
!5939 = !DILocation(line: 1831, column: 4, scope: !5671)
!5940 = !DILocation(line: 0, scope: !5671)
!5941 = !DILocation(line: 1831, column: 4, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5671, file: !2658, line: 1831, column: 4)
!5943 = !DILocation(line: 1835, column: 16, scope: !5564)
!5944 = !DILocation(line: 1835, column: 3, scope: !5564)
!5945 = !DILocation(line: 1836, column: 4, scope: !5673)
!5946 = !DILocation(line: 0, scope: !5673)
!5947 = !DILocation(line: 1836, column: 4, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5673, file: !2658, line: 1836, column: 4)
!5949 = !DILocation(line: 1837, column: 4, scope: !5674)
!5950 = distinct !{!5950, !5944, !5951}
!5951 = !DILocation(line: 1838, column: 3, scope: !5564)
!5952 = !DILocation(line: 1844, column: 1, scope: !5537)
!5953 = distinct !DISubprogram(name: "extract_conversion", scope: !2658, file: !2658, line: 642, type: !5954, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !5956)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{!337, !5610, !337}
!5956 = !{!5957, !5958}
!5957 = !DILocalVariable(name: "conv", arg: 1, scope: !5953, file: !2658, line: 642, type: !5610)
!5958 = !DILocalVariable(name: "sp", arg: 2, scope: !5953, file: !2658, line: 643, type: !337)
!5959 = !DILocation(line: 0, scope: !5953)
!5960 = !DILocation(line: 645, column: 10, scope: !5953)
!5961 = !DILocation(line: 653, column: 2, scope: !5953)
!5962 = !DILocation(line: 654, column: 6, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5953, file: !2658, line: 654, column: 6)
!5964 = !DILocation(line: 654, column: 10, scope: !5963)
!5965 = !DILocation(line: 654, column: 6, scope: !5953)
!5966 = !DILocation(line: 655, column: 24, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5963, file: !2658, line: 654, column: 18)
!5968 = !DILocation(line: 655, column: 19, scope: !5967)
!5969 = !DILocation(line: 656, column: 3, scope: !5967)
!5970 = !DILocation(line: 659, column: 7, scope: !5953)
!5971 = !DILocation(line: 660, column: 7, scope: !5953)
!5972 = !DILocation(line: 661, column: 7, scope: !5953)
!5973 = !DILocation(line: 662, column: 7, scope: !5953)
!5974 = !DILocation(line: 663, column: 7, scope: !5953)
!5975 = !DILocation(line: 665, column: 2, scope: !5953)
!5976 = !DILocation(line: 666, column: 1, scope: !5953)
!5977 = distinct !DISubprogram(name: "outs", scope: !2658, file: !2658, line: 1319, type: !5978, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !5980)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!103, !3994, !102, !337, !337}
!5980 = !{!5981, !5982, !5983, !5984, !5985, !5986}
!5981 = !DILocalVariable(name: "out", arg: 1, scope: !5977, file: !2658, line: 1319, type: !3994)
!5982 = !DILocalVariable(name: "ctx", arg: 2, scope: !5977, file: !2658, line: 1320, type: !102)
!5983 = !DILocalVariable(name: "sp", arg: 3, scope: !5977, file: !2658, line: 1321, type: !337)
!5984 = !DILocalVariable(name: "ep", arg: 4, scope: !5977, file: !2658, line: 1322, type: !337)
!5985 = !DILocalVariable(name: "count", scope: !5977, file: !2658, line: 1324, type: !132)
!5986 = !DILocalVariable(name: "rc", scope: !5987, file: !2658, line: 1327, type: !103)
!5987 = distinct !DILexicalBlock(scope: !5977, file: !2658, line: 1326, column: 45)
!5988 = !DILocation(line: 0, scope: !5977)
!5989 = !DILocation(line: 1326, column: 2, scope: !5977)
!5990 = !DILocation(line: 1324, column: 9, scope: !5977)
!5991 = !DILocation(line: 1326, column: 13, scope: !5977)
!5992 = !DILocation(line: 1326, column: 19, scope: !5977)
!5993 = !DILocation(line: 1327, column: 21, scope: !5987)
!5994 = !DILocation(line: 1326, column: 36, scope: !5977)
!5995 = !DILocation(line: 1326, column: 39, scope: !5977)
!5996 = !DILocation(line: 1327, column: 24, scope: !5987)
!5997 = !DILocation(line: 1327, column: 16, scope: !5987)
!5998 = !DILocation(line: 1327, column: 12, scope: !5987)
!5999 = !DILocation(line: 0, scope: !5987)
!6000 = !DILocation(line: 1329, column: 10, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5987, file: !2658, line: 1329, column: 7)
!6002 = !DILocation(line: 1329, column: 7, scope: !5987)
!6003 = distinct !{!6003, !5989, !6004}
!6004 = !DILocation(line: 1333, column: 2, scope: !5977)
!6005 = !DILocation(line: 1336, column: 1, scope: !5977)
!6006 = distinct !DISubprogram(name: "encode_uint", scope: !2658, file: !2658, line: 788, type: !6007, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6009)
!6007 = !DISubroutineType(types: !6008)
!6008 = !{!277, !2680, !5610, !277, !337}
!6009 = !{!6010, !6011, !6012, !6013, !6014, !6015, !6017, !6018}
!6010 = !DILocalVariable(name: "value", arg: 1, scope: !6006, file: !2658, line: 788, type: !2680)
!6011 = !DILocalVariable(name: "conv", arg: 2, scope: !6006, file: !2658, line: 789, type: !5610)
!6012 = !DILocalVariable(name: "bps", arg: 3, scope: !6006, file: !2658, line: 790, type: !277)
!6013 = !DILocalVariable(name: "bpe", arg: 4, scope: !6006, file: !2658, line: 791, type: !337)
!6014 = !DILocalVariable(name: "upcase", scope: !6006, file: !2658, line: 793, type: !131)
!6015 = !DILocalVariable(name: "radix", scope: !6006, file: !2658, line: 794, type: !6016)
!6016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6017 = !DILocalVariable(name: "bp", scope: !6006, file: !2658, line: 795, type: !277)
!6018 = !DILocalVariable(name: "lsv", scope: !6019, file: !2658, line: 798, type: !32)
!6019 = distinct !DILexicalBlock(scope: !6006, file: !2658, line: 797, column: 5)
!6020 = !DILocation(line: 0, scope: !6006)
!6021 = !DILocation(line: 793, column: 35, scope: !6006)
!6022 = !DILocation(line: 793, column: 24, scope: !6006)
!6023 = !DILocation(line: 793, column: 16, scope: !6006)
!6024 = !DILocation(line: 794, column: 29, scope: !6006)
!6025 = !DILocation(line: 795, column: 24, scope: !6006)
!6026 = !DILocation(line: 795, column: 17, scope: !6006)
!6027 = !DILocation(line: 797, column: 2, scope: !6006)
!6028 = !DILocation(line: 802, column: 9, scope: !6019)
!6029 = !DILocation(line: 798, column: 22, scope: !6019)
!6030 = !DILocation(line: 0, scope: !6019)
!6031 = !DILocation(line: 800, column: 16, scope: !6019)
!6032 = !DILocation(line: 800, column: 11, scope: !6019)
!6033 = !DILocation(line: 800, column: 4, scope: !6019)
!6034 = !DILocation(line: 800, column: 9, scope: !6019)
!6035 = !DILocation(line: 803, column: 18, scope: !6006)
!6036 = !DILocation(line: 803, column: 24, scope: !6006)
!6037 = !DILocation(line: 803, column: 2, scope: !6019)
!6038 = distinct !{!6038, !6027, !6039}
!6039 = !DILocation(line: 803, column: 37, scope: !6006)
!6040 = !DILocation(line: 808, column: 12, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6006, file: !2658, line: 808, column: 6)
!6042 = !DILocation(line: 808, column: 6, scope: !6006)
!6043 = !DILocation(line: 809, column: 7, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6041, file: !2658, line: 808, column: 23)
!6045 = !DILocation(line: 813, column: 3, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !2658, line: 811, column: 27)
!6047 = distinct !DILexicalBlock(scope: !6048, file: !2658, line: 811, column: 14)
!6048 = distinct !DILexicalBlock(scope: !6044, file: !2658, line: 809, column: 7)
!6049 = !DILocation(line: 0, scope: !6048)
!6050 = !DILocation(line: 818, column: 2, scope: !6006)
!6051 = distinct !DISubprogram(name: "store_count", scope: !2658, file: !2658, line: 1280, type: !6052, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6056)
!6052 = !DISubroutineType(types: !6053)
!6053 = !{null, !6054, !102, !103}
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 32)
!6055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5577)
!6056 = !{!6057, !6058, !6059}
!6057 = !DILocalVariable(name: "conv", arg: 1, scope: !6051, file: !2658, line: 1280, type: !6054)
!6058 = !DILocalVariable(name: "dp", arg: 2, scope: !6051, file: !2658, line: 1281, type: !102)
!6059 = !DILocalVariable(name: "count", arg: 3, scope: !6051, file: !2658, line: 1282, type: !103)
!6060 = !DILocation(line: 0, scope: !6051)
!6061 = !DILocation(line: 1284, column: 38, scope: !6051)
!6062 = !DILocation(line: 1284, column: 2, scope: !6051)
!6063 = !DILocation(line: 1286, column: 4, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6051, file: !2658, line: 1284, column: 50)
!6065 = !DILocation(line: 1286, column: 14, scope: !6064)
!6066 = !DILocation(line: 1287, column: 3, scope: !6064)
!6067 = !DILocation(line: 1289, column: 24, scope: !6064)
!6068 = !DILocation(line: 1289, column: 22, scope: !6064)
!6069 = !DILocation(line: 1290, column: 3, scope: !6064)
!6070 = !DILocation(line: 1292, column: 18, scope: !6064)
!6071 = !DILocation(line: 1292, column: 4, scope: !6064)
!6072 = !DILocation(line: 1292, column: 16, scope: !6064)
!6073 = !DILocation(line: 1293, column: 3, scope: !6064)
!6074 = !DILocation(line: 1295, column: 4, scope: !6064)
!6075 = !DILocation(line: 1295, column: 15, scope: !6064)
!6076 = !DILocation(line: 1296, column: 3, scope: !6064)
!6077 = !DILocation(line: 1298, column: 22, scope: !6064)
!6078 = !DILocation(line: 1298, column: 4, scope: !6064)
!6079 = !DILocation(line: 1298, column: 20, scope: !6064)
!6080 = !DILocation(line: 1299, column: 3, scope: !6064)
!6081 = !DILocation(line: 1301, column: 21, scope: !6064)
!6082 = !DILocation(line: 1301, column: 4, scope: !6064)
!6083 = !DILocation(line: 1301, column: 19, scope: !6064)
!6084 = !DILocation(line: 1302, column: 3, scope: !6064)
!6085 = !DILocation(line: 1304, column: 4, scope: !6064)
!6086 = !DILocation(line: 1304, column: 17, scope: !6064)
!6087 = !DILocation(line: 1305, column: 3, scope: !6064)
!6088 = !DILocation(line: 1307, column: 4, scope: !6064)
!6089 = !DILocation(line: 1307, column: 20, scope: !6064)
!6090 = !DILocation(line: 1308, column: 3, scope: !6064)
!6091 = !DILocation(line: 1316, column: 1, scope: !6051)
!6092 = distinct !DISubprogram(name: "isupper", scope: !6093, file: !6093, line: 16, type: !396, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6094)
!6093 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6094 = !{!6095}
!6095 = !DILocalVariable(name: "a", arg: 1, scope: !6092, file: !6093, line: 16, type: !103)
!6096 = !DILocation(line: 0, scope: !6092)
!6097 = !DILocation(line: 18, column: 29, scope: !6092)
!6098 = !DILocation(line: 18, column: 45, scope: !6092)
!6099 = !DILocation(line: 18, column: 2, scope: !6092)
!6100 = distinct !DISubprogram(name: "conversion_radix", scope: !2658, file: !2658, line: 761, type: !6101, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6103)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!132, !278}
!6103 = !{!6104}
!6104 = !DILocalVariable(name: "specifier", arg: 1, scope: !6100, file: !2658, line: 761, type: !278)
!6105 = !DILocation(line: 0, scope: !6100)
!6106 = !DILocation(line: 763, column: 2, scope: !6100)
!6107 = !DILocation(line: 770, column: 3, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6100, file: !2658, line: 763, column: 21)
!6109 = !DILocation(line: 774, column: 3, scope: !6108)
!6110 = !DILocation(line: 0, scope: !6108)
!6111 = !DILocation(line: 776, column: 1, scope: !6100)
!6112 = distinct !DISubprogram(name: "extract_flags", scope: !2658, file: !2658, line: 339, type: !5954, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6113)
!6113 = !{!6114, !6115, !6116}
!6114 = !DILocalVariable(name: "conv", arg: 1, scope: !6112, file: !2658, line: 339, type: !5610)
!6115 = !DILocalVariable(name: "sp", arg: 2, scope: !6112, file: !2658, line: 340, type: !337)
!6116 = !DILocalVariable(name: "loop", scope: !6112, file: !2658, line: 342, type: !131)
!6117 = !DILocation(line: 0, scope: !6112)
!6118 = !DILocation(line: 344, column: 2, scope: !6112)
!6119 = !DILocation(line: 345, column: 11, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6112, file: !2658, line: 344, column: 5)
!6121 = !DILocation(line: 345, column: 3, scope: !6120)
!6122 = !DILocation(line: 351, column: 4, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6120, file: !2658, line: 345, column: 16)
!6124 = !DILocation(line: 354, column: 4, scope: !6123)
!6125 = !DILocation(line: 357, column: 4, scope: !6123)
!6126 = !DILocation(line: 360, column: 4, scope: !6123)
!6127 = !DILocation(line: 0, scope: !6123)
!6128 = !DILocation(line: 370, column: 12, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6112, file: !2658, line: 370, column: 6)
!6130 = !DILocation(line: 370, column: 22, scope: !6129)
!6131 = !DILocation(line: 371, column: 19, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6129, file: !2658, line: 370, column: 42)
!6133 = !DILocation(line: 372, column: 2, scope: !6132)
!6134 = !DILocation(line: 376, column: 2, scope: !6112)
!6135 = distinct !DISubprogram(name: "extract_width", scope: !2658, file: !2658, line: 388, type: !5954, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6136)
!6136 = !{!6137, !6138, !6139, !6140}
!6137 = !DILocalVariable(name: "conv", arg: 1, scope: !6135, file: !2658, line: 388, type: !5610)
!6138 = !DILocalVariable(name: "sp", arg: 2, scope: !6135, file: !2658, line: 389, type: !337)
!6139 = !DILocalVariable(name: "wp", scope: !6135, file: !2658, line: 398, type: !337)
!6140 = !DILocalVariable(name: "width", scope: !6135, file: !2658, line: 399, type: !132)
!6141 = !DILocation(line: 0, scope: !6135)
!6142 = !DILocation(line: 391, column: 8, scope: !6135)
!6143 = !DILocation(line: 391, column: 22, scope: !6135)
!6144 = !DILocation(line: 393, column: 6, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6135, file: !2658, line: 393, column: 6)
!6146 = !DILocation(line: 393, column: 10, scope: !6145)
!6147 = !DILocation(line: 393, column: 6, scope: !6135)
!6148 = !DILocation(line: 394, column: 20, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6145, file: !2658, line: 393, column: 18)
!6150 = !DILocation(line: 395, column: 10, scope: !6149)
!6151 = !DILocation(line: 395, column: 3, scope: !6149)
!6152 = !DILocation(line: 399, column: 17, scope: !6135)
!6153 = !DILocation(line: 401, column: 6, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6135, file: !2658, line: 401, column: 6)
!6155 = !DILocation(line: 401, column: 9, scope: !6154)
!6156 = !DILocation(line: 401, column: 6, scope: !6135)
!6157 = !DILocation(line: 402, column: 23, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6154, file: !2658, line: 401, column: 16)
!6159 = !DILocation(line: 403, column: 9, scope: !6158)
!6160 = !DILocation(line: 403, column: 21, scope: !6158)
!6161 = !DILocation(line: 405, column: 11, scope: !6158)
!6162 = !DILocation(line: 404, column: 21, scope: !6158)
!6163 = !DILocation(line: 406, column: 2, scope: !6158)
!6164 = !DILocation(line: 409, column: 1, scope: !6135)
!6165 = distinct !DISubprogram(name: "extract_prec", scope: !2658, file: !2658, line: 420, type: !5954, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6166)
!6166 = !{!6167, !6168, !6169}
!6167 = !DILocalVariable(name: "conv", arg: 1, scope: !6165, file: !2658, line: 420, type: !5610)
!6168 = !DILocalVariable(name: "sp", arg: 2, scope: !6165, file: !2658, line: 421, type: !337)
!6169 = !DILocalVariable(name: "prec", scope: !6165, file: !2658, line: 435, type: !132)
!6170 = !DILocation(line: 0, scope: !6165)
!6171 = !DILocation(line: 423, column: 24, scope: !6165)
!6172 = !DILocation(line: 423, column: 28, scope: !6165)
!6173 = !DILocation(line: 423, column: 8, scope: !6165)
!6174 = !DILocation(line: 423, column: 21, scope: !6165)
!6175 = !DILocation(line: 425, column: 6, scope: !6165)
!6176 = !DILocation(line: 428, column: 2, scope: !6165)
!6177 = !DILocation(line: 430, column: 6, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6165, file: !2658, line: 430, column: 6)
!6179 = !DILocation(line: 430, column: 10, scope: !6178)
!6180 = !DILocation(line: 430, column: 6, scope: !6165)
!6181 = !DILocation(line: 431, column: 19, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6178, file: !2658, line: 430, column: 18)
!6183 = !DILocation(line: 432, column: 10, scope: !6182)
!6184 = !DILocation(line: 432, column: 3, scope: !6182)
!6185 = !DILocation(line: 435, column: 16, scope: !6165)
!6186 = !DILocation(line: 437, column: 8, scope: !6165)
!6187 = !DILocation(line: 437, column: 19, scope: !6165)
!6188 = !DILocation(line: 439, column: 10, scope: !6165)
!6189 = !DILocation(line: 438, column: 20, scope: !6165)
!6190 = !DILocation(line: 441, column: 9, scope: !6165)
!6191 = !DILocation(line: 442, column: 1, scope: !6165)
!6192 = distinct !DISubprogram(name: "extract_length", scope: !2658, file: !2658, line: 453, type: !5954, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6193)
!6193 = !{!6194, !6195}
!6194 = !DILocalVariable(name: "conv", arg: 1, scope: !6192, file: !2658, line: 453, type: !5610)
!6195 = !DILocalVariable(name: "sp", arg: 2, scope: !6192, file: !2658, line: 454, type: !337)
!6196 = !DILocation(line: 0, scope: !6192)
!6197 = !DILocation(line: 456, column: 10, scope: !6192)
!6198 = !DILocation(line: 456, column: 2, scope: !6192)
!6199 = !DILocation(line: 458, column: 8, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !2658, line: 458, column: 7)
!6201 = distinct !DILexicalBlock(scope: !6192, file: !2658, line: 456, column: 15)
!6202 = !DILocation(line: 458, column: 7, scope: !6200)
!6203 = !DILocation(line: 458, column: 13, scope: !6200)
!6204 = !DILocation(line: 0, scope: !6200)
!6205 = !DILocation(line: 458, column: 7, scope: !6201)
!6206 = !DILocation(line: 459, column: 21, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6200, file: !2658, line: 458, column: 21)
!6208 = !DILocation(line: 460, column: 4, scope: !6207)
!6209 = !DILocation(line: 461, column: 3, scope: !6207)
!6210 = !DILocation(line: 462, column: 21, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6200, file: !2658, line: 461, column: 10)
!6212 = !DILocation(line: 466, column: 8, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6201, file: !2658, line: 466, column: 7)
!6214 = !DILocation(line: 466, column: 7, scope: !6213)
!6215 = !DILocation(line: 466, column: 13, scope: !6213)
!6216 = !DILocation(line: 0, scope: !6213)
!6217 = !DILocation(line: 466, column: 7, scope: !6201)
!6218 = !DILocation(line: 467, column: 21, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6213, file: !2658, line: 466, column: 21)
!6220 = !DILocation(line: 468, column: 4, scope: !6219)
!6221 = !DILocation(line: 469, column: 3, scope: !6219)
!6222 = !DILocation(line: 470, column: 21, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6213, file: !2658, line: 469, column: 10)
!6224 = !DILocation(line: 474, column: 9, scope: !6201)
!6225 = !DILocation(line: 474, column: 20, scope: !6201)
!6226 = !DILocation(line: 475, column: 3, scope: !6201)
!6227 = !DILocation(line: 476, column: 3, scope: !6201)
!6228 = !DILocation(line: 478, column: 9, scope: !6201)
!6229 = !DILocation(line: 478, column: 20, scope: !6201)
!6230 = !DILocation(line: 479, column: 3, scope: !6201)
!6231 = !DILocation(line: 480, column: 3, scope: !6201)
!6232 = !DILocation(line: 482, column: 9, scope: !6201)
!6233 = !DILocation(line: 482, column: 20, scope: !6201)
!6234 = !DILocation(line: 483, column: 3, scope: !6201)
!6235 = !DILocation(line: 484, column: 3, scope: !6201)
!6236 = !DILocation(line: 486, column: 9, scope: !6201)
!6237 = !DILocation(line: 486, column: 20, scope: !6201)
!6238 = !DILocation(line: 487, column: 3, scope: !6201)
!6239 = !DILocation(line: 492, column: 21, scope: !6201)
!6240 = !DILocation(line: 493, column: 3, scope: !6201)
!6241 = !DILocation(line: 495, column: 9, scope: !6201)
!6242 = !DILocation(line: 495, column: 20, scope: !6201)
!6243 = !DILocation(line: 496, column: 3, scope: !6201)
!6244 = !DILocation(line: 498, column: 2, scope: !6192)
!6245 = distinct !DISubprogram(name: "extract_specifier", scope: !2658, file: !2658, line: 513, type: !5954, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6246)
!6246 = !{!6247, !6248, !6249, !6250}
!6247 = !DILocalVariable(name: "conv", arg: 1, scope: !6245, file: !2658, line: 513, type: !5610)
!6248 = !DILocalVariable(name: "sp", arg: 2, scope: !6245, file: !2658, line: 514, type: !337)
!6249 = !DILocalVariable(name: "unsupported", scope: !6245, file: !2658, line: 516, type: !131)
!6250 = !DILabel(scope: !6251, name: "int_conv", file: !2658, line: 526)
!6251 = distinct !DILexicalBlock(scope: !6245, file: !2658, line: 520, column: 27)
!6252 = !DILocation(line: 0, scope: !6245)
!6253 = !DILocation(line: 518, column: 20, scope: !6245)
!6254 = !DILocation(line: 518, column: 8, scope: !6245)
!6255 = !DILocation(line: 518, column: 18, scope: !6245)
!6256 = !DILocation(line: 520, column: 2, scope: !6245)
!6257 = !DILocation(line: 525, column: 3, scope: !6251)
!6258 = !DILocation(line: 0, scope: !6251)
!6259 = !DILocation(line: 526, column: 1, scope: !6251)
!6260 = !DILocation(line: 528, column: 24, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6251, file: !2658, line: 528, column: 7)
!6262 = !DILocation(line: 528, column: 7, scope: !6251)
!6263 = !DILocation(line: 535, column: 23, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6251, file: !2658, line: 535, column: 7)
!6265 = !DILocation(line: 535, column: 7, scope: !6251)
!6266 = !DILocation(line: 536, column: 36, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6264, file: !2658, line: 535, column: 31)
!6268 = !DILocation(line: 537, column: 3, scope: !6267)
!6269 = !DILocation(line: 570, column: 9, scope: !6251)
!6270 = !DILocation(line: 570, column: 23, scope: !6251)
!6271 = !DILocation(line: 575, column: 4, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !2658, line: 573, column: 48)
!6273 = distinct !DILexicalBlock(scope: !6251, file: !2658, line: 573, column: 7)
!6274 = !DILocation(line: 603, column: 9, scope: !6251)
!6275 = !DILocation(line: 603, column: 23, scope: !6251)
!6276 = !DILocation(line: 605, column: 24, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6251, file: !2658, line: 605, column: 7)
!6278 = !DILocation(line: 605, column: 7, scope: !6251)
!6279 = !DILocation(line: 612, column: 9, scope: !6251)
!6280 = !DILocation(line: 612, column: 23, scope: !6251)
!6281 = !DILocation(line: 619, column: 24, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6251, file: !2658, line: 619, column: 7)
!6283 = !DILocation(line: 619, column: 7, scope: !6251)
!6284 = !DILocation(line: 625, column: 9, scope: !6251)
!6285 = !DILocation(line: 625, column: 17, scope: !6251)
!6286 = !DILocation(line: 626, column: 3, scope: !6251)
!6287 = !DILocation(line: 629, column: 20, scope: !6245)
!6288 = !DILocation(line: 629, column: 8, scope: !6245)
!6289 = !DILocation(line: 518, column: 23, scope: !6245)
!6290 = !DILocation(line: 631, column: 2, scope: !6245)
!6291 = distinct !DISubprogram(name: "extract_decimal", scope: !2658, file: !2658, line: 318, type: !6292, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6294)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{!132, !373}
!6294 = !{!6295, !6296, !6297}
!6295 = !DILocalVariable(name: "str", arg: 1, scope: !6291, file: !2658, line: 318, type: !373)
!6296 = !DILocalVariable(name: "sp", scope: !6291, file: !2658, line: 320, type: !337)
!6297 = !DILocalVariable(name: "val", scope: !6291, file: !2658, line: 321, type: !132)
!6298 = !DILocation(line: 0, scope: !6291)
!6299 = !DILocation(line: 320, column: 19, scope: !6291)
!6300 = !DILocation(line: 323, column: 37, scope: !6291)
!6301 = !DILocation(line: 323, column: 17, scope: !6291)
!6302 = !DILocation(line: 323, column: 9, scope: !6291)
!6303 = !DILocation(line: 323, column: 2, scope: !6291)
!6304 = !DILocation(line: 324, column: 13, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6291, file: !2658, line: 323, column: 43)
!6306 = !DILocation(line: 324, column: 24, scope: !6305)
!6307 = !DILocation(line: 324, column: 19, scope: !6305)
!6308 = !DILocation(line: 324, column: 27, scope: !6305)
!6309 = distinct !{!6309, !6303, !6310}
!6310 = !DILocation(line: 325, column: 2, scope: !6291)
!6311 = !DILocation(line: 326, column: 7, scope: !6291)
!6312 = !DILocation(line: 327, column: 2, scope: !6291)
!6313 = distinct !DISubprogram(name: "isdigit", scope: !6093, file: !6093, line: 43, type: !396, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6314)
!6314 = !{!6315}
!6315 = !DILocalVariable(name: "a", arg: 1, scope: !6313, file: !6093, line: 43, type: !103)
!6316 = !DILocation(line: 0, scope: !6313)
!6317 = !DILocation(line: 45, column: 29, scope: !6313)
!6318 = !DILocation(line: 45, column: 45, scope: !6313)
!6319 = !DILocation(line: 45, column: 2, scope: !6313)
!6320 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6321, file: !6321, line: 9, type: !334, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !251)
!6321 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!6322 = !DILocation(line: 11, column: 1, scope: !6320)
!6323 = !{i64 2147564478, i64 2147564521, i64 2147564561}
!6324 = !DILocation(line: 12, column: 1, scope: !6320)
!6325 = !{i64 2147568740, i64 2147568783, i64 2147568823}
!6326 = !DILocation(line: 13, column: 1, scope: !6320)
!6327 = !{i64 2147568921, i64 2147568964, i64 2147569004}
!6328 = !DILocation(line: 14, column: 1, scope: !6320)
!6329 = !{i64 2147569087, i64 2147569130, i64 2147569170}
!6330 = !DILocation(line: 15, column: 1, scope: !6320)
!6331 = !{i64 2147569296, i64 2147569339, i64 2147569379}
!6332 = !DILocation(line: 16, column: 1, scope: !6320)
!6333 = !{i64 2147569465, i64 2147569508, i64 2147569548}
!6334 = !DILocation(line: 17, column: 1, scope: !6320)
!6335 = !{i64 2147569628, i64 2147569671, i64 2147569711}
!6336 = !DILocation(line: 18, column: 1, scope: !6320)
!6337 = !{i64 2147569812, i64 2147569855, i64 2147569895}
!6338 = !DILocation(line: 19, column: 1, scope: !6320)
!6339 = !{i64 2147569991, i64 2147570034, i64 2147570074}
!6340 = !DILocation(line: 20, column: 1, scope: !6320)
!6341 = !{i64 2147570233, i64 2147570276, i64 2147570316}
!6342 = !DILocation(line: 21, column: 1, scope: !6320)
!6343 = !{i64 2147570468, i64 2147570511, i64 2147570551}
!6344 = !DILocation(line: 22, column: 1, scope: !6320)
!6345 = !{i64 2147570654, i64 2147570697, i64 2147570737}
!6346 = !DILocation(line: 23, column: 1, scope: !6320)
!6347 = !{i64 2147570870, i64 2147570913, i64 2147570953}
!6348 = !DILocation(line: 24, column: 1, scope: !6320)
!6349 = !{i64 2147571073, i64 2147571116, i64 2147571156}
!6350 = !DILocation(line: 25, column: 1, scope: !6320)
!6351 = !{i64 2147571276, i64 2147571319, i64 2147571359}
!6352 = !DILocation(line: 26, column: 1, scope: !6320)
!6353 = !{i64 2147571451, i64 2147571494, i64 2147571534}
!6354 = !DILocation(line: 27, column: 1, scope: !6320)
!6355 = !{i64 2147571662, i64 2147571705, i64 2147571745}
!6356 = !DILocation(line: 28, column: 1, scope: !6320)
!6357 = !{i64 2147571866, i64 2147571909, i64 2147571949}
!6358 = !DILocation(line: 29, column: 1, scope: !6320)
!6359 = !{i64 2147572059, i64 2147572102, i64 2147572142}
!6360 = !DILocation(line: 30, column: 1, scope: !6320)
!6361 = !{i64 2147572261, i64 2147572304, i64 2147572344}
!6362 = !DILocation(line: 31, column: 1, scope: !6320)
!6363 = !{i64 2147572460, i64 2147572503, i64 2147572543}
!6364 = !DILocation(line: 32, column: 1, scope: !6320)
!6365 = !{i64 2147572687, i64 2147572730, i64 2147572770}
!6366 = !DILocation(line: 33, column: 1, scope: !6320)
!6367 = !{i64 2147572889, i64 2147572932, i64 2147572972}
!6368 = !DILocation(line: 34, column: 1, scope: !6320)
!6369 = !{i64 2147573104, i64 2147573147, i64 2147573187}
!6370 = !DILocation(line: 35, column: 1, scope: !6320)
!6371 = !{i64 2147573276, i64 2147573319, i64 2147573359}
!6372 = !DILocation(line: 36, column: 1, scope: !6320)
!6373 = !{i64 2147573478, i64 2147573521, i64 2147573561}
!6374 = !DILocation(line: 37, column: 1, scope: !6320)
!6375 = !{i64 2147573704, i64 2147573747, i64 2147573787}
!6376 = !DILocation(line: 38, column: 1, scope: !6320)
!6377 = !{i64 2147573903, i64 2147573946, i64 2147573986}
!6378 = !DILocation(line: 39, column: 1, scope: !6320)
!6379 = !{i64 2147574078, i64 2147574121, i64 2147574161}
!6380 = !DILocation(line: 40, column: 1, scope: !6320)
!6381 = !{i64 2147574331, i64 2147574374, i64 2147574414}
!6382 = !DILocation(line: 41, column: 1, scope: !6320)
!6383 = !{i64 2147574572, i64 2147574615, i64 2147574655}
!6384 = !DILocation(line: 42, column: 1, scope: !6320)
!6385 = !{i64 2147574807, i64 2147574850, i64 2147574890}
!6386 = !DILocation(line: 43, column: 1, scope: !6320)
!6387 = !{i64 2147575039, i64 2147575082, i64 2147575122}
!6388 = !DILocation(line: 44, column: 1, scope: !6320)
!6389 = !{i64 2147575265, i64 2147575308, i64 2147575348}
!6390 = !DILocation(line: 45, column: 1, scope: !6320)
!6391 = !{i64 2147575491, i64 2147575534, i64 2147575574}
!6392 = !DILocation(line: 46, column: 1, scope: !6320)
!6393 = !{i64 2147575717, i64 2147575760, i64 2147575800}
!6394 = !DILocation(line: 47, column: 1, scope: !6320)
!6395 = !{i64 2147575952, i64 2147575995, i64 2147576035}
!6396 = !DILocation(line: 48, column: 1, scope: !6320)
!6397 = !{i64 2147576190, i64 2147576233, i64 2147576273}
!6398 = !DILocation(line: 49, column: 1, scope: !6320)
!6399 = !{i64 2147576464, i64 2147576507, i64 2147576547}
!6400 = !DILocation(line: 50, column: 1, scope: !6320)
!6401 = !{i64 2147576702, i64 2147576745, i64 2147576785}
!6402 = !DILocation(line: 51, column: 1, scope: !6320)
!6403 = !{i64 2147576946, i64 2147576989, i64 2147577029}
!6404 = !DILocation(line: 52, column: 1, scope: !6320)
!6405 = !{i64 2147577196, i64 2147577239, i64 2147577279}
!6406 = !DILocation(line: 53, column: 1, scope: !6320)
!6407 = !{i64 2147577443, i64 2147577486, i64 2147577526}
!6408 = !DILocation(line: 54, column: 1, scope: !6320)
!6409 = !{i64 2147581739, i64 2147581782, i64 2147581822}
!6410 = !DILocation(line: 55, column: 1, scope: !6320)
!6411 = !{i64 2147581974, i64 2147582017, i64 2147582057}
!6412 = !DILocation(line: 56, column: 1, scope: !6320)
!6413 = !{i64 2147582209, i64 2147582252, i64 2147582292}
!6414 = !DILocation(line: 57, column: 1, scope: !6320)
!6415 = !{i64 2147582447, i64 2147582490, i64 2147582530}
!6416 = !DILocation(line: 58, column: 1, scope: !6320)
!6417 = !{i64 2147582688, i64 2147582731, i64 2147582771}
!6418 = !DILocation(line: 59, column: 1, scope: !6320)
!6419 = !{i64 2147582968, i64 2147583011, i64 2147583051}
!6420 = !DILocation(line: 60, column: 1, scope: !6320)
!6421 = !{i64 2147583227, i64 2147583270, i64 2147583310}
!6422 = !DILocation(line: 61, column: 1, scope: !6320)
!6423 = !{i64 2147583453, i64 2147583496, i64 2147583536}
!6424 = !DILocation(line: 62, column: 1, scope: !6320)
!6425 = !{i64 2147583691, i64 2147583734, i64 2147583774}
!6426 = !DILocation(line: 63, column: 1, scope: !6320)
!6427 = !{i64 2147583920, i64 2147583963, i64 2147584003}
!6428 = !DILocation(line: 64, column: 1, scope: !6320)
!6429 = !{i64 2147584128, i64 2147584171, i64 2147584211}
!6430 = !DILocation(line: 65, column: 1, scope: !6320)
!6431 = !{i64 2147584339, i64 2147584382, i64 2147584422}
!6432 = !DILocation(line: 66, column: 1, scope: !6320)
!6433 = !{i64 2147584574, i64 2147584617, i64 2147584657}
!6434 = !DILocation(line: 67, column: 1, scope: !6320)
!6435 = !{i64 2147584803, i64 2147584846, i64 2147584886}
!6436 = !DILocation(line: 68, column: 1, scope: !6320)
!6437 = !{i64 2147585020, i64 2147585063, i64 2147585103}
!6438 = !DILocation(line: 69, column: 1, scope: !6320)
!6439 = !{i64 2147585249, i64 2147585292, i64 2147585332}
!6440 = !DILocation(line: 70, column: 1, scope: !6320)
!6441 = !{i64 2147585487, i64 2147585530, i64 2147585570}
!6442 = !DILocation(line: 71, column: 1, scope: !6320)
!6443 = !{i64 2147585719, i64 2147585762, i64 2147585802}
!6444 = !DILocation(line: 72, column: 1, scope: !6320)
!6445 = !{i64 2147585945, i64 2147585988, i64 2147586028}
!6446 = !DILocation(line: 73, column: 1, scope: !6320)
!6447 = !{i64 2147586162, i64 2147586205, i64 2147586245}
!6448 = !DILocation(line: 74, column: 1, scope: !6320)
!6449 = !{i64 2147586394, i64 2147586437, i64 2147586477}
!6450 = !DILocation(line: 75, column: 1, scope: !6320)
!6451 = !{i64 2147586620, i64 2147586663, i64 2147586703}
!6452 = !DILocation(line: 76, column: 1, scope: !6320)
!6453 = !{i64 2147586834, i64 2147586877, i64 2147586917}
!6454 = !DILocation(line: 77, column: 1, scope: !6320)
!6455 = !{i64 2147587054, i64 2147587097, i64 2147587137}
!6456 = !DILocation(line: 78, column: 1, scope: !6320)
!6457 = !{i64 2147587286, i64 2147587329, i64 2147587369}
!6458 = !DILocation(line: 79, column: 1, scope: !6320)
!6459 = !{i64 2147587494, i64 2147587537, i64 2147587577}
!6460 = !DILocation(line: 80, column: 1, scope: !6320)
!6461 = !{i64 2147587699, i64 2147587742, i64 2147587782}
!6462 = !DILocation(line: 81, column: 1, scope: !6320)
!6463 = !{i64 2147587916, i64 2147587959, i64 2147587999}
!6464 = !DILocation(line: 82, column: 1, scope: !6320)
!6465 = !{i64 2147588130, i64 2147588173, i64 2147588213}
!6466 = !DILocation(line: 83, column: 1, scope: !6320)
!6467 = !{i64 2147588356, i64 2147588399, i64 2147588439}
!6468 = !DILocation(line: 84, column: 1, scope: !6320)
!6469 = !{i64 2147588576, i64 2147588619, i64 2147588659}
!6470 = !DILocation(line: 85, column: 1, scope: !6320)
!6471 = !{i64 2147588781, i64 2147588824, i64 2147588864}
!6472 = !DILocation(line: 86, column: 1, scope: !6320)
!6473 = !{i64 2147589013, i64 2147589056, i64 2147589096}
!6474 = !DILocation(line: 87, column: 1, scope: !6320)
!6475 = !{i64 2147589248, i64 2147589291, i64 2147589331}
!6476 = !DILocation(line: 88, column: 1, scope: !6320)
!6477 = !{i64 2147589498, i64 2147589541, i64 2147589581}
!6478 = !DILocation(line: 89, column: 1, scope: !6320)
!6479 = !{i64 2147593809, i64 2147593852, i64 2147593892}
!6480 = !DILocation(line: 90, column: 1, scope: !6320)
!6481 = !{i64 2147594047, i64 2147594090, i64 2147594130}
!6482 = !DILocation(line: 91, column: 1, scope: !6320)
!6483 = !{i64 2147594258, i64 2147594301, i64 2147594341}
!6484 = !DILocation(line: 92, column: 1, scope: !6320)
!6485 = !{i64 2147594475, i64 2147594518, i64 2147594558}
!6486 = !DILocation(line: 93, column: 1, scope: !6320)
!6487 = !{i64 2147594671, i64 2147594714, i64 2147594754}
!6488 = !DILocation(line: 94, column: 1, scope: !6320)
!6489 = !{i64 2147594873, i64 2147594916, i64 2147594956}
!6490 = !DILocation(line: 95, column: 1, scope: !6320)
!6491 = !{i64 2147595066, i64 2147595109, i64 2147595149}
!6492 = !DILocation(line: 96, column: 1, scope: !6320)
!6493 = !{i64 2147595274, i64 2147595317, i64 2147595357}
!6494 = !DILocation(line: 97, column: 1, scope: !6320)
!6495 = !{i64 2147595470, i64 2147595513, i64 2147595553}
!6496 = !DILocation(line: 98, column: 1, scope: !6320)
!6497 = !{i64 2147595675, i64 2147595718, i64 2147595758}
!6498 = !DILocation(line: 99, column: 1, scope: !6320)
!6499 = !{i64 2147595886, i64 2147595929, i64 2147595969}
!6500 = !DILocation(line: 100, column: 1, scope: !6320)
!6501 = !{i64 2147596085, i64 2147596128, i64 2147596168}
!6502 = !DILocation(line: 101, column: 1, scope: !6320)
!6503 = !{i64 2147596260, i64 2147596303, i64 2147596343}
!6504 = !DILocation(line: 102, column: 1, scope: !6320)
!6505 = !{i64 2147596444, i64 2147596487, i64 2147596527}
!6506 = !DILocation(line: 103, column: 1, scope: !6320)
!6507 = !{i64 2147596646, i64 2147596689, i64 2147596729}
!6508 = !DILocation(line: 104, column: 1, scope: !6320)
!6509 = !{i64 2147596845, i64 2147596888, i64 2147596928}
!6510 = !DILocation(line: 105, column: 1, scope: !6320)
!6511 = !{i64 2147597050, i64 2147597093, i64 2147597133}
!6512 = !DILocation(line: 106, column: 1, scope: !6320)
!6513 = !{i64 2147597243, i64 2147597286, i64 2147597326}
!6514 = !DILocation(line: 107, column: 1, scope: !6320)
!6515 = !{i64 2147597409, i64 2147597452, i64 2147597492}
!6516 = !DILocation(line: 108, column: 1, scope: !6320)
!6517 = !{i64 2147597593, i64 2147597636, i64 2147597676}
!6518 = !DILocation(line: 109, column: 1, scope: !6320)
!6519 = !{i64 2147597783, i64 2147597826, i64 2147597866}
!6520 = !DILocation(line: 110, column: 1, scope: !6320)
!6521 = !{i64 2147597967, i64 2147598010, i64 2147598050}
!6522 = !DILocation(line: 111, column: 1, scope: !6320)
!6523 = !{i64 2147598181, i64 2147598224, i64 2147598264}
!6524 = !DILocation(line: 112, column: 1, scope: !6320)
!6525 = !{i64 2147598392, i64 2147598435, i64 2147598475}
!6526 = !DILocation(line: 113, column: 1, scope: !6320)
!6527 = !{i64 2147598615, i64 2147598658, i64 2147598698}
!6528 = !DILocation(line: 114, column: 1, scope: !6320)
!6529 = !{i64 2147598799, i64 2147598842, i64 2147598882}
!6530 = !DILocation(line: 115, column: 1, scope: !6320)
!6531 = !{i64 2147599013, i64 2147599056, i64 2147599096}
!6532 = !DILocation(line: 116, column: 1, scope: !6320)
!6533 = !{i64 2147599179, i64 2147599222, i64 2147599262}
!6534 = !DILocation(line: 117, column: 1, scope: !6320)
!6535 = !{i64 2147599360, i64 2147599403, i64 2147599443}
!6536 = !DILocation(line: 118, column: 1, scope: !6320)
!6537 = !{i64 2147599553, i64 2147599596, i64 2147599636}
!6538 = !DILocation(line: 119, column: 1, scope: !6320)
!6539 = !{i64 2147599779, i64 2147599822, i64 2147599862}
!6540 = !DILocation(line: 120, column: 1, scope: !6320)
!6541 = !{i64 2147599993, i64 2147600036, i64 2147600076}
!6542 = !DILocation(line: 121, column: 1, scope: !6320)
!6543 = !{i64 2147600219, i64 2147600262, i64 2147600302}
!6544 = !DILocation(line: 122, column: 1, scope: !6320)
!6545 = !{i64 2147600436, i64 2147600479, i64 2147600519}
!6546 = !DILocation(line: 123, column: 1, scope: !6320)
!6547 = !{i64 2147600713, i64 2147600756, i64 2147600796}
!6548 = !DILocation(line: 124, column: 1, scope: !6320)
!6549 = !{i64 2147600939, i64 2147600982, i64 2147601022}
!6550 = !DILocation(line: 125, column: 1, scope: !6320)
!6551 = !{i64 2147601147, i64 2147601190, i64 2147601230}
!6552 = !DILocation(line: 126, column: 1, scope: !6320)
!6553 = !{i64 2147601343, i64 2147601386, i64 2147601426}
!6554 = !DILocation(line: 127, column: 1, scope: !6320)
!6555 = !{i64 2147601608, i64 2147601651, i64 2147601691}
!6556 = !DILocation(line: 128, column: 1, scope: !6320)
!6557 = !{i64 2147601822, i64 2147601865, i64 2147601905}
!6558 = !DILocation(line: 129, column: 1, scope: !6320)
!6559 = !{i64 2147601997, i64 2147602040, i64 2147602080}
!6560 = !DILocation(line: 130, column: 1, scope: !6320)
!6561 = !{i64 2147602251, i64 2147602294, i64 2147602334}
!6562 = !DILocation(line: 131, column: 1, scope: !6320)
!6563 = !{i64 2147602450, i64 2147602493, i64 2147602533}
!6564 = !DILocation(line: 132, column: 1, scope: !6320)
!6565 = !{i64 2147602692, i64 2147602735, i64 2147602775}
!6566 = !DILocation(line: 133, column: 1, scope: !6320)
!6567 = !{i64 2147602855, i64 2147602898, i64 2147602938}
!6568 = !DILocation(line: 134, column: 1, scope: !6320)
!6569 = !{i64 2147603042, i64 2147603085, i64 2147603125}
!6570 = !DILocation(line: 135, column: 1, scope: !6320)
!6571 = !{i64 2147607311, i64 2147607354, i64 2147607394}
!6572 = !DILocation(line: 136, column: 1, scope: !6320)
!6573 = !{i64 2147607507, i64 2147607550, i64 2147607590}
!6574 = !DILocation(line: 137, column: 1, scope: !6320)
!6575 = !{i64 2147607700, i64 2147607743, i64 2147607783}
!6576 = !DILocation(line: 138, column: 1, scope: !6320)
!6577 = !{i64 2147607883, i64 2147607926, i64 2147607966}
!6578 = !DILocation(line: 139, column: 1, scope: !6320)
!6579 = !{i64 2147608097, i64 2147608140, i64 2147608180}
!6580 = !DILocation(line: 140, column: 1, scope: !6320)
!6581 = !{i64 2147608308, i64 2147608351, i64 2147608391}
!6582 = !DILocation(line: 141, column: 1, scope: !6320)
!6583 = !{i64 2147608528, i64 2147608571, i64 2147608611}
!6584 = !DILocation(line: 142, column: 1, scope: !6320)
!6585 = !{i64 2147608735, i64 2147608778, i64 2147608818}
!6586 = !DILocation(line: 143, column: 1, scope: !6320)
!6587 = !{i64 2147609008, i64 2147609051, i64 2147609091}
!6588 = !DILocation(line: 144, column: 1, scope: !6320)
!6589 = !{i64 2147609256, i64 2147609299, i64 2147609339}
!6590 = !DILocation(line: 145, column: 1, scope: !6320)
!6591 = !{i64 2147609455, i64 2147609498, i64 2147609538}
!6592 = !DILocation(line: 146, column: 1, scope: !6320)
!6593 = !{i64 2147609690, i64 2147609733, i64 2147609773}
!6594 = !DILocation(line: 147, column: 1, scope: !6320)
!6595 = !{i64 2147609940, i64 2147609983, i64 2147610023}
!6596 = !DILocation(line: 148, column: 1, scope: !6320)
!6597 = !{i64 2147610142, i64 2147610185, i64 2147610225}
!6598 = !DILocation(line: 149, column: 1, scope: !6320)
!6599 = !{i64 2147610365, i64 2147610408, i64 2147610448}
!6600 = !DILocation(line: 150, column: 1, scope: !6320)
!6601 = !{i64 2147610579, i64 2147610622, i64 2147610662}
!6602 = !DILocation(line: 151, column: 1, scope: !6320)
!6603 = !{i64 2147610823, i64 2147610866, i64 2147610906}
!6604 = !DILocation(line: 152, column: 1, scope: !6320)
!6605 = !{i64 2147611052, i64 2147611095, i64 2147611135}
!6606 = !DILocation(line: 153, column: 1, scope: !6320)
!6607 = !{i64 2147611281, i64 2147611324, i64 2147611364}
!6608 = !DILocation(line: 154, column: 1, scope: !6320)
!6609 = !{i64 2147611489, i64 2147611532, i64 2147611572}
!6610 = !DILocation(line: 155, column: 1, scope: !6320)
!6611 = !{i64 2147611727, i64 2147611770, i64 2147611810}
!6612 = !DILocation(line: 156, column: 1, scope: !6320)
!6613 = !{i64 2147611953, i64 2147611996, i64 2147612036}
!6614 = !DILocation(line: 157, column: 1, scope: !6320)
!6615 = !{i64 2147612212, i64 2147612255, i64 2147612295}
!6616 = !DILocation(line: 158, column: 1, scope: !6320)
!6617 = !{i64 2147612432, i64 2147612475, i64 2147612515}
!6618 = !DILocation(line: 159, column: 1, scope: !6320)
!6619 = !{i64 2147612664, i64 2147612707, i64 2147612747}
!6620 = !DILocation(line: 160, column: 1, scope: !6320)
!6621 = !{i64 2147612905, i64 2147612948, i64 2147612988}
!6622 = !DILocation(line: 161, column: 1, scope: !6320)
!6623 = !{i64 2147613146, i64 2147613189, i64 2147613229}
!6624 = !DILocation(line: 162, column: 1, scope: !6320)
!6625 = !{i64 2147613369, i64 2147613412, i64 2147613452}
!6626 = !DILocation(line: 163, column: 1, scope: !6320)
!6627 = !{i64 2147613586, i64 2147613629, i64 2147613669}
!6628 = !DILocation(line: 164, column: 1, scope: !6320)
!6629 = !{i64 2147613827, i64 2147613870, i64 2147613910}
!6630 = !DILocation(line: 165, column: 1, scope: !6320)
!6631 = !{i64 2147614014, i64 2147614057, i64 2147614097}
!6632 = !DILocation(line: 166, column: 1, scope: !6320)
!6633 = !{i64 2147614201, i64 2147614244, i64 2147614284}
!6634 = !DILocation(line: 167, column: 1, scope: !6320)
!6635 = !{i64 2147614364, i64 2147614407, i64 2147614447}
!6636 = !DILocation(line: 168, column: 1, scope: !6320)
!6637 = !{i64 2147614569, i64 2147614612, i64 2147614652}
!6638 = !DILocation(line: 169, column: 1, scope: !6320)
!6639 = !{i64 2147614762, i64 2147614805, i64 2147614845}
!6640 = !DILocation(line: 170, column: 1, scope: !6320)
!6641 = !{i64 2147615021, i64 2147615064, i64 2147615104}
!6642 = !DILocation(line: 171, column: 1, scope: !6320)
!6643 = !{i64 2147615244, i64 2147615287, i64 2147615327}
!6644 = !DILocation(line: 172, column: 1, scope: !6320)
!6645 = !{i64 2147615473, i64 2147615516, i64 2147615556}
!6646 = !DILocation(line: 173, column: 1, scope: !6320)
!6647 = !{i64 2147615687, i64 2147615730, i64 2147615770}
!6648 = !DILocation(line: 174, column: 1, scope: !6320)
!6649 = !{i64 2147619950, i64 2147619993, i64 2147620033}
!6650 = !DILocation(line: 175, column: 1, scope: !6320)
!6651 = !{i64 2147620146, i64 2147620189, i64 2147620229}
!6652 = !DILocation(line: 176, column: 1, scope: !6320)
!6653 = !{i64 2147620358, i64 2147620401, i64 2147620441}
!6654 = !DILocation(line: 177, column: 1, scope: !6320)
!6655 = !{i64 2147620579, i64 2147620622, i64 2147620662}
!6656 = !DILocation(line: 178, column: 1, scope: !6320)
!6657 = !{i64 2147620793, i64 2147620836, i64 2147620876}
!6658 = !DILocation(line: 179, column: 1, scope: !6320)
!6659 = !{i64 2147620983, i64 2147621026, i64 2147621066}
!6660 = !DILocation(line: 180, column: 1, scope: !6320)
!6661 = !{i64 2147621182, i64 2147621225, i64 2147621265}
!6662 = !DILocation(line: 181, column: 1, scope: !6320)
!6663 = !{i64 2147621387, i64 2147621430, i64 2147621470}
!6664 = !DILocation(line: 182, column: 1, scope: !6320)
!6665 = !{i64 2147621607, i64 2147621650, i64 2147621690}
!6666 = !DILocation(line: 183, column: 1, scope: !6320)
!6667 = !{i64 2147621808, i64 2147621851, i64 2147621891}
!6668 = !DILocation(line: 184, column: 1, scope: !6320)
!6669 = !{i64 2147622007, i64 2147622050, i64 2147622090}
!6670 = !DILocation(line: 185, column: 1, scope: !6320)
!6671 = !{i64 2147622212, i64 2147622255, i64 2147622295}
!6672 = !DILocation(line: 186, column: 1, scope: !6320)
!6673 = !{i64 2147622381, i64 2147622424, i64 2147622464}
!6674 = !DILocation(line: 187, column: 1, scope: !6320)
!6675 = !{i64 2147622565, i64 2147622608, i64 2147622648}
!6676 = !DILocation(line: 188, column: 1, scope: !6320)
!6677 = !{i64 2147622749, i64 2147622792, i64 2147622832}
!6678 = !DILocation(line: 189, column: 1, scope: !6320)
!6679 = !{i64 2147622936, i64 2147622979, i64 2147623019}
!6680 = !DILocation(line: 190, column: 1, scope: !6320)
!6681 = !{i64 2147623120, i64 2147623163, i64 2147623203}
!6682 = !DILocation(line: 191, column: 1, scope: !6320)
!6683 = !{i64 2147623358, i64 2147623401, i64 2147623441}
!6684 = !DILocation(line: 192, column: 1, scope: !6320)
!6685 = !{i64 2147623588, i64 2147623631, i64 2147623671}
!6686 = !DILocation(line: 193, column: 1, scope: !6320)
!6687 = !{i64 2147623817, i64 2147623860, i64 2147623900}
!6688 = !DILocation(line: 194, column: 1, scope: !6320)
!6689 = !{i64 2147624004, i64 2147624047, i64 2147624087}
!6690 = !DILocation(line: 195, column: 1, scope: !6320)
!6691 = !{i64 2147624200, i64 2147624243, i64 2147624283}
!6692 = !DILocation(line: 196, column: 1, scope: !6320)
!6693 = !{i64 2147624408, i64 2147624451, i64 2147624491}
!6694 = !DILocation(line: 197, column: 1, scope: !6320)
!6695 = !{i64 2147624620, i64 2147624663, i64 2147624703}
!6696 = !DILocation(line: 198, column: 1, scope: !6320)
!6697 = !{i64 2147624819, i64 2147624862, i64 2147624902}
!6698 = !DILocation(line: 199, column: 1, scope: !6320)
!6699 = !{i64 2147625057, i64 2147625100, i64 2147625140}
!6700 = !DILocation(line: 200, column: 1, scope: !6320)
!6701 = !{i64 2147625253, i64 2147625296, i64 2147625336}
!6702 = !DILocation(line: 201, column: 1, scope: !6320)
!6703 = !{i64 2147625455, i64 2147625498, i64 2147625538}
!6704 = !DILocation(line: 202, column: 1, scope: !6320)
!6705 = !{i64 2147625648, i64 2147625691, i64 2147625731}
!6706 = !DILocation(line: 203, column: 1, scope: !6320)
!6707 = !{i64 2147625882, i64 2147625925, i64 2147625965}
!6708 = !DILocation(line: 204, column: 1, scope: !6320)
!6709 = !{i64 2147626045, i64 2147626088, i64 2147626128}
!6710 = !DILocation(line: 205, column: 1, scope: !6320)
!6711 = !{i64 2147626284, i64 2147626327, i64 2147626367}
!6712 = !DILocation(line: 206, column: 1, scope: !6320)
!6713 = !{i64 2147626523, i64 2147626566, i64 2147626606}
!6714 = !DILocation(line: 207, column: 1, scope: !6320)
!6715 = !{i64 2147626759, i64 2147626802, i64 2147626842}
!6716 = !DILocation(line: 208, column: 1, scope: !6320)
!6717 = !{i64 2147626989, i64 2147627032, i64 2147627072}
!6718 = !DILocation(line: 209, column: 1, scope: !6320)
!6719 = !{i64 2147627176, i64 2147627219, i64 2147627259}
!6720 = !DILocation(line: 210, column: 1, scope: !6320)
!6721 = !{i64 2147627375, i64 2147627418, i64 2147627458}
!6722 = !DILocation(line: 211, column: 1, scope: !6320)
!6723 = !{i64 2147627646, i64 2147627689, i64 2147627729}
!6724 = !DILocation(line: 212, column: 1, scope: !6320)
!6725 = !{i64 2147627821, i64 2147627864, i64 2147627904}
!6726 = !DILocation(line: 213, column: 1, scope: !6320)
!6727 = !{i64 2147628055, i64 2147628098, i64 2147628138}
!6728 = !DILocation(line: 214, column: 1, scope: !6320)
!6729 = !{i64 2147628263, i64 2147628306, i64 2147628346}
!6730 = !DILocation(line: 215, column: 1, scope: !6320)
!6731 = !{i64 2147628481, i64 2147628524, i64 2147628564}
!6732 = !DILocation(line: 216, column: 1, scope: !6320)
!6733 = !{i64 2147628671, i64 2147628714, i64 2147628754}
!6734 = !DILocation(line: 217, column: 1, scope: !6320)
!6735 = !{i64 2147628903, i64 2147628946, i64 2147628986}
!6736 = !DILocation(line: 218, column: 1, scope: !6320)
!6737 = !{i64 2147633184, i64 2147633227, i64 2147633267}
!6738 = !DILocation(line: 219, column: 1, scope: !6320)
!6739 = !{i64 2147633380, i64 2147633423, i64 2147633463}
!6740 = !DILocation(line: 220, column: 1, scope: !6320)
!6741 = !{i64 2147633586, i64 2147633629, i64 2147633669}
!6742 = !DILocation(line: 221, column: 1, scope: !6320)
!6743 = !{i64 2147633791, i64 2147633834, i64 2147633874}
!6744 = !DILocation(line: 222, column: 1, scope: !6320)
!6745 = !{i64 2147634017, i64 2147634060, i64 2147634100}
!6746 = !DILocation(line: 223, column: 1, scope: !6320)
!6747 = !{i64 2147634225, i64 2147634268, i64 2147634308}
!6748 = !DILocation(line: 224, column: 1, scope: !6320)
!6749 = !{i64 2147634421, i64 2147634464, i64 2147634504}
!6750 = !DILocation(line: 225, column: 1, scope: !6320)
!6751 = !{i64 2147634653, i64 2147634696, i64 2147634736}
!6752 = !DILocation(line: 226, column: 1, scope: !6320)
!6753 = !{i64 2147634837, i64 2147634880, i64 2147634920}
!6754 = !DILocation(line: 227, column: 1, scope: !6320)
!6755 = !{i64 2147635046, i64 2147635089, i64 2147635129}
!6756 = !DILocation(line: 228, column: 1, scope: !6320)
!6757 = !{i64 2147635254, i64 2147635297, i64 2147635337}
!6758 = !DILocation(line: 229, column: 1, scope: !6320)
!6759 = !{i64 2147635450, i64 2147635493, i64 2147635533}
!6760 = !DILocation(line: 230, column: 1, scope: !6320)
!6761 = !{i64 2147635634, i64 2147635677, i64 2147635717}
!6762 = !DILocation(line: 231, column: 1, scope: !6320)
!6763 = !{i64 2147635860, i64 2147635903, i64 2147635943}
!6764 = !DILocation(line: 232, column: 1, scope: !6320)
!6765 = !{i64 2147636086, i64 2147636129, i64 2147636169}
!6766 = !DILocation(line: 233, column: 1, scope: !6320)
!6767 = !{i64 2147636312, i64 2147636355, i64 2147636395}
!6768 = !DILocation(line: 234, column: 1, scope: !6320)
!6769 = !{i64 2147636538, i64 2147636581, i64 2147636621}
!6770 = !DILocation(line: 235, column: 1, scope: !6320)
!6771 = !{i64 2147636764, i64 2147636807, i64 2147636847}
!6772 = !DILocation(line: 236, column: 1, scope: !6320)
!6773 = !{i64 2147636996, i64 2147637039, i64 2147637079}
!6774 = !DILocation(line: 237, column: 1, scope: !6320)
!6775 = !{i64 2147637234, i64 2147637277, i64 2147637317}
!6776 = !DILocation(line: 238, column: 1, scope: !6320)
!6777 = !{i64 2147637454, i64 2147637497, i64 2147637537}
!6778 = !DILocation(line: 239, column: 1, scope: !6320)
!6779 = !{i64 2147637698, i64 2147637741, i64 2147637781}
!6780 = !DILocation(line: 240, column: 1, scope: !6320)
!6781 = !{i64 2147637939, i64 2147637982, i64 2147638022}
!6782 = !DILocation(line: 241, column: 1, scope: !6320)
!6783 = !{i64 2147638174, i64 2147638217, i64 2147638257}
!6784 = !DILocation(line: 242, column: 1, scope: !6320)
!6785 = !{i64 2147638406, i64 2147638449, i64 2147638489}
!6786 = !DILocation(line: 243, column: 1, scope: !6320)
!6787 = !{i64 2147638608, i64 2147638651, i64 2147638691}
!6788 = !DILocation(line: 244, column: 1, scope: !6320)
!6789 = !{i64 2147638858, i64 2147638901, i64 2147638941}
!6790 = !DILocation(line: 245, column: 1, scope: !6320)
!6791 = !{i64 2147639096, i64 2147639139, i64 2147639179}
!6792 = !DILocation(line: 246, column: 1, scope: !6320)
!6793 = !{i64 2147639304, i64 2147639347, i64 2147639387}
!6794 = !DILocation(line: 247, column: 1, scope: !6320)
!6795 = !{i64 2147639500, i64 2147639543, i64 2147639583}
!6796 = !DILocation(line: 248, column: 1, scope: !6320)
!6797 = !{i64 2147639684, i64 2147639727, i64 2147639767}
!6798 = !DILocation(line: 249, column: 1, scope: !6320)
!6799 = !{i64 2147639901, i64 2147639944, i64 2147639984}
!6800 = !DILocation(line: 250, column: 1, scope: !6320)
!6801 = !{i64 2147640106, i64 2147640149, i64 2147640189}
!6802 = !DILocation(line: 251, column: 1, scope: !6320)
!6803 = !{i64 2147640341, i64 2147640384, i64 2147640424}
!6804 = !DILocation(line: 252, column: 1, scope: !6320)
!6805 = !{i64 2147640564, i64 2147640607, i64 2147640647}
!6806 = !DILocation(line: 253, column: 1, scope: !6320)
!6807 = !{i64 2147640787, i64 2147640830, i64 2147640870}
!6808 = !DILocation(line: 254, column: 1, scope: !6320)
!6809 = !{i64 2147641025, i64 2147641068, i64 2147641108}
!6810 = !DILocation(line: 255, column: 1, scope: !6320)
!6811 = !{i64 2147641263, i64 2147641306, i64 2147641346}
!6812 = !DILocation(line: 256, column: 1, scope: !6320)
!6813 = !{i64 2147641480, i64 2147641523, i64 2147641563}
!6814 = !DILocation(line: 257, column: 1, scope: !6320)
!6815 = !{i64 2147645746, i64 2147645789, i64 2147645829}
!6816 = !DILocation(line: 258, column: 1, scope: !6320)
!6817 = !{i64 2147645939, i64 2147645982, i64 2147646022}
!6818 = !DILocation(line: 259, column: 1, scope: !6320)
!6819 = !{i64 2147646192, i64 2147646235, i64 2147646275}
!6820 = !DILocation(line: 260, column: 1, scope: !6320)
!6821 = !{i64 2147646400, i64 2147646443, i64 2147646483}
!6822 = !DILocation(line: 261, column: 1, scope: !6320)
!6823 = !{i64 2147646596, i64 2147646639, i64 2147646679}
!6824 = !DILocation(line: 262, column: 1, scope: !6320)
!6825 = !{i64 2147646810, i64 2147646853, i64 2147646893}
!6826 = !DILocation(line: 263, column: 1, scope: !6320)
!6827 = !{i64 2147647018, i64 2147647061, i64 2147647101}
!6828 = !DILocation(line: 264, column: 1, scope: !6320)
!6829 = !{i64 2147647208, i64 2147647251, i64 2147647291}
!6830 = !DILocation(line: 265, column: 1, scope: !6320)
!6831 = !{i64 2147647422, i64 2147647465, i64 2147647505}
!6832 = !DILocation(line: 266, column: 1, scope: !6320)
!6833 = !{i64 2147647684, i64 2147647727, i64 2147647767}
!6834 = !DILocation(line: 267, column: 1, scope: !6320)
!6835 = !{i64 2147647895, i64 2147647938, i64 2147647978}
!6836 = !DILocation(line: 268, column: 1, scope: !6320)
!6837 = !{i64 2147648139, i64 2147648182, i64 2147648222}
!6838 = !DILocation(line: 269, column: 1, scope: !6320)
!6839 = !{i64 2147648350, i64 2147648393, i64 2147648433}
!6840 = !DILocation(line: 270, column: 1, scope: !6320)
!6841 = !{i64 2147648579, i64 2147648622, i64 2147648662}
!6842 = !DILocation(line: 271, column: 1, scope: !6320)
!6843 = !{i64 2147648844, i64 2147648887, i64 2147648927}
!6844 = !DILocation(line: 272, column: 1, scope: !6320)
!6845 = !{i64 2147649049, i64 2147649092, i64 2147649132}
!6846 = !DILocation(line: 273, column: 1, scope: !6320)
!6847 = !{i64 2147649245, i64 2147649288, i64 2147649328}
!6848 = !DILocation(line: 274, column: 1, scope: !6320)
!6849 = !{i64 2147649468, i64 2147649511, i64 2147649551}
!6850 = !DILocation(line: 275, column: 1, scope: !6320)
!6851 = !{i64 2147649631, i64 2147649674, i64 2147649714}
!6852 = !DILocation(line: 276, column: 1, scope: !6320)
!6853 = !{i64 2147649836, i64 2147649879, i64 2147649919}
!6854 = !DILocation(line: 277, column: 1, scope: !6320)
!6855 = !{i64 2147650056, i64 2147650099, i64 2147650139}
!6856 = !DILocation(line: 278, column: 1, scope: !6320)
!6857 = !{i64 2147650270, i64 2147650313, i64 2147650353}
!6858 = !DILocation(line: 279, column: 1, scope: !6320)
!6859 = !{i64 2147650514, i64 2147650557, i64 2147650597}
!6860 = !DILocation(line: 280, column: 1, scope: !6320)
!6861 = !{i64 2147650746, i64 2147650789, i64 2147650829}
!6862 = !DILocation(line: 281, column: 1, scope: !6320)
!6863 = !{i64 2147650960, i64 2147651003, i64 2147651043}
!6864 = !DILocation(line: 282, column: 1, scope: !6320)
!6865 = !{i64 2147651171, i64 2147651214, i64 2147651254}
!6866 = !DILocation(line: 283, column: 1, scope: !6320)
!6867 = !{i64 2147651364, i64 2147651407, i64 2147651447}
!6868 = !DILocation(line: 284, column: 1, scope: !6320)
!6869 = !{i64 2147651563, i64 2147651606, i64 2147651646}
!6870 = !DILocation(line: 285, column: 1, scope: !6320)
!6871 = !{i64 2147651735, i64 2147651778, i64 2147651818}
!6872 = !DILocation(line: 286, column: 1, scope: !6320)
!6873 = !{i64 2147651928, i64 2147651971, i64 2147652011}
!6874 = !DILocation(line: 287, column: 1, scope: !6320)
!6875 = !{i64 2147652124, i64 2147652167, i64 2147652207}
!6876 = !DILocation(line: 288, column: 1, scope: !6320)
!6877 = !{i64 2147652287, i64 2147652330, i64 2147652370}
!6878 = !DILocation(line: 289, column: 1, scope: !6320)
!6879 = !{i64 2147652489, i64 2147652532, i64 2147652572}
!6880 = !DILocation(line: 290, column: 1, scope: !6320)
!6881 = !{i64 2147652694, i64 2147652737, i64 2147652777}
!6882 = !DILocation(line: 291, column: 1, scope: !6320)
!6883 = !{i64 2147652902, i64 2147652945, i64 2147652985}
!6884 = !DILocation(line: 292, column: 1, scope: !6320)
!6885 = !{i64 2147653095, i64 2147653138, i64 2147653178}
!6886 = !DILocation(line: 293, column: 1, scope: !6320)
!6887 = !{i64 2147653282, i64 2147653325, i64 2147653365}
!6888 = !DILocation(line: 294, column: 1, scope: !6320)
!6889 = !{i64 2147653509, i64 2147653552, i64 2147653592}
!6890 = !DILocation(line: 295, column: 1, scope: !6320)
!6891 = !{i64 2147653675, i64 2147653718, i64 2147653758}
!6892 = !DILocation(line: 296, column: 1, scope: !6320)
!6893 = !{i64 2147653913, i64 2147653956, i64 2147653996}
!6894 = !DILocation(line: 297, column: 1, scope: !6320)
!6895 = !{i64 2147654163, i64 2147654206, i64 2147654246}
!6896 = !DILocation(line: 298, column: 1, scope: !6320)
!6897 = !{i64 2147654371, i64 2147654414, i64 2147654454}
!6898 = !DILocation(line: 299, column: 1, scope: !6320)
!6899 = !{i64 2147654567, i64 2147654610, i64 2147654650}
!6900 = !DILocation(line: 300, column: 1, scope: !6320)
!6901 = !{i64 2147658845, i64 2147658888, i64 2147658928}
!6902 = !DILocation(line: 301, column: 1, scope: !6320)
!6903 = !{i64 2147659137, i64 2147659180, i64 2147659220}
!6904 = !DILocation(line: 302, column: 1, scope: !6320)
!6905 = !{i64 2147659369, i64 2147659412, i64 2147659452}
!6906 = !DILocation(line: 303, column: 1, scope: !6320)
!6907 = !{i64 2147659586, i64 2147659629, i64 2147659669}
!6908 = !DILocation(line: 304, column: 1, scope: !6320)
!6909 = !{i64 2147659793, i64 2147659836, i64 2147659876}
!6910 = !DILocation(line: 305, column: 1, scope: !6320)
!6911 = !{i64 2147659994, i64 2147660037, i64 2147660077}
!6912 = !DILocation(line: 306, column: 1, scope: !6320)
!6913 = !{i64 2147660226, i64 2147660269, i64 2147660309}
!6914 = !DILocation(line: 307, column: 1, scope: !6320)
!6915 = !{i64 2147660434, i64 2147660477, i64 2147660517}
!6916 = !DILocation(line: 308, column: 1, scope: !6320)
!6917 = !{i64 2147660624, i64 2147660667, i64 2147660707}
!6918 = !DILocation(line: 309, column: 1, scope: !6320)
!6919 = !{i64 2147660850, i64 2147660893, i64 2147660933}
!6920 = !DILocation(line: 310, column: 1, scope: !6320)
!6921 = !{i64 2147661039, i64 2147661082, i64 2147661122}
!6922 = !DILocation(line: 311, column: 1, scope: !6320)
!6923 = !{i64 2147661310, i64 2147661353, i64 2147661393}
!6924 = !DILocation(line: 312, column: 1, scope: !6320)
!6925 = !{i64 2147661530, i64 2147661573, i64 2147661613}
!6926 = !DILocation(line: 313, column: 1, scope: !6320)
!6927 = !{i64 2147661783, i64 2147661826, i64 2147661866}
!6928 = !DILocation(line: 314, column: 1, scope: !6320)
!6929 = !{i64 2147661991, i64 2147662034, i64 2147662074}
!6930 = !DILocation(line: 315, column: 1, scope: !6320)
!6931 = !{i64 2147662223, i64 2147662266, i64 2147662306}
!6932 = !DILocation(line: 316, column: 1, scope: !6320)
!6933 = !{i64 2147662434, i64 2147662477, i64 2147662517}
!6934 = !DILocation(line: 317, column: 1, scope: !6320)
!6935 = !{i64 2147662624, i64 2147662667, i64 2147662707}
!6936 = !DILocation(line: 318, column: 1, scope: !6320)
!6937 = !{i64 2147662838, i64 2147662881, i64 2147662921}
!6938 = !DILocation(line: 319, column: 1, scope: !6320)
!6939 = !{i64 2147663037, i64 2147663080, i64 2147663120}
!6940 = !DILocation(line: 320, column: 1, scope: !6320)
!6941 = !{i64 2147663224, i64 2147663267, i64 2147663307}
!6942 = !DILocation(line: 321, column: 1, scope: !6320)
!6943 = !{i64 2147663432, i64 2147663475, i64 2147663515}
!6944 = !DILocation(line: 322, column: 1, scope: !6320)
!6945 = !{i64 2147663661, i64 2147663704, i64 2147663744}
!6946 = !DILocation(line: 323, column: 1, scope: !6320)
!6947 = !{i64 2147663863, i64 2147663906, i64 2147663946}
!6948 = !DILocation(line: 324, column: 1, scope: !6320)
!6949 = !{i64 2147664062, i64 2147664105, i64 2147664145}
!6950 = !DILocation(line: 325, column: 1, scope: !6320)
!6951 = !{i64 2147664279, i64 2147664322, i64 2147664362}
!6952 = !DILocation(line: 327, column: 1, scope: !6320)
!6953 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !417, file: !417, line: 30, type: !424, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6954)
!6954 = !{!6955, !6956}
!6955 = !DILocalVariable(name: "arg", arg: 1, scope: !6953, file: !417, line: 30, type: !426)
!6956 = !DILocalVariable(name: "key", scope: !6953, file: !417, line: 32, type: !108)
!6957 = !DILocation(line: 0, scope: !6953)
!6958 = !DILocation(line: 37, column: 2, scope: !6953)
!6959 = !DILocation(line: 38, column: 2, scope: !6953)
!6960 = !DILocation(line: 55, column: 2, scope: !6961, inlinedAt: !6968)
!6961 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6965)
!6962 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6963 = !DISubroutineType(types: !6964)
!6964 = !{!32}
!6965 = !{!6966, !6967}
!6966 = !DILocalVariable(name: "key", scope: !6961, file: !6962, line: 44, type: !32)
!6967 = !DILocalVariable(name: "tmp", scope: !6961, file: !6962, line: 53, type: !32)
!6968 = distinct !DILocation(line: 40, column: 8, scope: !6953)
!6969 = !{i64 1828178}
!6970 = !DILocation(line: 0, scope: !6961, inlinedAt: !6968)
!6971 = !DILocalVariable(name: "key", arg: 1, scope: !6972, file: !6962, line: 84, type: !32)
!6972 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6975)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{null, !32}
!6975 = !{!6971}
!6976 = !DILocation(line: 0, scope: !6972, inlinedAt: !6977)
!6977 = distinct !DILocation(line: 47, column: 2, scope: !6953)
!6978 = !DILocation(line: 95, column: 2, scope: !6972, inlinedAt: !6977)
!6979 = !{i64 1828995}
!6980 = !DILocation(line: 51, column: 18, scope: !6953)
!6981 = !DILocation(line: 53, column: 2, scope: !6953)
!6982 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6983, file: !6983, line: 1609, type: !334, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!6983 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6984 = !DILocation(line: 1611, column: 3, scope: !6982)
!6985 = !DILocation(line: 1612, column: 1, scope: !6982)
!6986 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6983, file: !6983, line: 1629, type: !334, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!6987 = !DILocation(line: 1631, column: 3, scope: !6986)
!6988 = !DILocation(line: 1632, column: 1, scope: !6986)
!6989 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !453, file: !453, line: 26, type: !459, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !450, retainedNodes: !6990)
!6990 = !{!6991}
!6991 = !DILocalVariable(name: "dev", arg: 1, scope: !6989, file: !453, line: 26, type: !461)
!6992 = !DILocation(line: 0, scope: !6989)
!6993 = !DILocation(line: 68, column: 2, scope: !6989)
!6994 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6995, file: !6995, line: 14, type: !4564, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6996)
!6995 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6996 = !{!6997, !6998}
!6997 = !DILocalVariable(name: "fmt", arg: 1, scope: !6994, file: !6995, line: 14, type: !337)
!6998 = !DILocalVariable(name: "ap", scope: !6994, file: !6995, line: 16, type: !6999)
!6999 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3633, line: 99, baseType: !7000)
!7000 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3633, line: 40, baseType: !7001)
!7001 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6995, baseType: !7002)
!7002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7003)
!7003 = !{!7004}
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7002, file: !6995, line: 16, baseType: !102, size: 32)
!7005 = !DILocation(line: 0, scope: !6994)
!7006 = !DILocation(line: 16, column: 2, scope: !6994)
!7007 = !DILocation(line: 16, column: 10, scope: !6994)
!7008 = !DILocation(line: 18, column: 2, scope: !6994)
!7009 = !DILocation(line: 19, column: 2, scope: !6994)
!7010 = !DILocation(line: 20, column: 2, scope: !6994)
!7011 = !DILocation(line: 21, column: 1, scope: !6994)
!7012 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6995, file: !6995, line: 23, type: !7013, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7015)
!7013 = !DISubroutineType(types: !7014)
!7014 = !{null, !337, !6999}
!7015 = !{!7016, !7017}
!7016 = !DILocalVariable(name: "fmt", arg: 1, scope: !7012, file: !6995, line: 23, type: !337)
!7017 = !DILocalVariable(name: "ap", arg: 2, scope: !7012, file: !6995, line: 23, type: !6999)
!7018 = !DILocation(line: 0, scope: !7012)
!7019 = !DILocation(line: 25, column: 2, scope: !7012)
!7020 = !DILocation(line: 26, column: 1, scope: !7012)
!7021 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6995, file: !6995, line: 52, type: !7022, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7024)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{null, !103, !13, !132}
!7024 = !{!7025, !7026, !7027, !7028}
!7025 = !DILocalVariable(name: "level", arg: 1, scope: !7021, file: !6995, line: 52, type: !103)
!7026 = !DILocalVariable(name: "data", arg: 2, scope: !7021, file: !6995, line: 52, type: !13)
!7027 = !DILocalVariable(name: "size", arg: 3, scope: !7021, file: !6995, line: 52, type: !132)
!7028 = !DILocalVariable(name: "data_buffer", scope: !7021, file: !6995, line: 54, type: !337)
!7029 = !DILocation(line: 0, scope: !7021)
!7030 = !DILocation(line: 55, column: 14, scope: !7021)
!7031 = !DILocation(line: 55, column: 2, scope: !7021)
!7032 = !DILocation(line: 56, column: 3, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7021, file: !6995, line: 55, column: 20)
!7034 = !DILocation(line: 57, column: 3, scope: !7033)
!7035 = !DILocation(line: 59, column: 7, scope: !7033)
!7036 = distinct !{!7036, !7031, !7037}
!7037 = !DILocation(line: 65, column: 2, scope: !7021)
!7038 = !DILocation(line: 66, column: 1, scope: !7021)
!7039 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3565, file: !3565, line: 175, type: !3566, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7040)
!7040 = !{!7041}
!7041 = !DILocalVariable(name: "level", arg: 1, scope: !7039, file: !3565, line: 175, type: !103)
!7042 = !DILocation(line: 0, scope: !7039)
!7043 = !DILocation(line: 177, column: 2, scope: !7039)
!7044 = !DILocation(line: 189, column: 1, scope: !7039)
!7045 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6995, file: !6995, line: 28, type: !7046, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7048)
!7046 = !DISubroutineType(types: !7047)
!7047 = !{null, !337, !132}
!7048 = !{!7049, !7050, !7051, !7053, !7055}
!7049 = !DILocalVariable(name: "data", arg: 1, scope: !7045, file: !6995, line: 28, type: !337)
!7050 = !DILocalVariable(name: "length", arg: 2, scope: !7045, file: !6995, line: 28, type: !132)
!7051 = !DILocalVariable(name: "i", scope: !7052, file: !6995, line: 30, type: !132)
!7052 = distinct !DILexicalBlock(scope: !7045, file: !6995, line: 30, column: 2)
!7053 = !DILocalVariable(name: "i", scope: !7054, file: !6995, line: 40, type: !132)
!7054 = distinct !DILexicalBlock(scope: !7045, file: !6995, line: 40, column: 2)
!7055 = !DILocalVariable(name: "c", scope: !7056, file: !6995, line: 42, type: !186)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !6995, line: 41, column: 19)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !6995, line: 41, column: 7)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6995, line: 40, column: 54)
!7059 = distinct !DILexicalBlock(scope: !7054, file: !6995, line: 40, column: 2)
!7060 = !DILocation(line: 0, scope: !7045)
!7061 = !DILocation(line: 0, scope: !7052)
!7062 = !DILocation(line: 30, column: 2, scope: !7052)
!7063 = !DILocation(line: 38, column: 2, scope: !7045)
!7064 = !DILocation(line: 0, scope: !7054)
!7065 = !DILocation(line: 40, column: 2, scope: !7054)
!7066 = !DILocation(line: 31, column: 9, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !6995, line: 31, column: 7)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !6995, line: 30, column: 54)
!7069 = distinct !DILexicalBlock(scope: !7052, file: !6995, line: 30, column: 2)
!7070 = !DILocation(line: 31, column: 7, scope: !7068)
!7071 = !DILocation(line: 32, column: 35, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7067, file: !6995, line: 31, column: 19)
!7073 = !DILocation(line: 32, column: 20, scope: !7072)
!7074 = !DILocation(line: 32, column: 4, scope: !7072)
!7075 = !DILocation(line: 33, column: 3, scope: !7072)
!7076 = !DILocation(line: 34, column: 4, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7067, file: !6995, line: 33, column: 10)
!7078 = !DILocation(line: 30, column: 50, scope: !7069)
!7079 = !DILocation(line: 30, column: 24, scope: !7069)
!7080 = distinct !{!7080, !7062, !7081}
!7081 = !DILocation(line: 36, column: 2, scope: !7052)
!7082 = !DILocation(line: 49, column: 2, scope: !7045)
!7083 = !DILocation(line: 50, column: 1, scope: !7045)
!7084 = !DILocation(line: 41, column: 9, scope: !7057)
!7085 = !DILocation(line: 41, column: 7, scope: !7058)
!7086 = !DILocation(line: 42, column: 22, scope: !7056)
!7087 = !DILocation(line: 0, scope: !7056)
!7088 = !DILocation(line: 44, column: 25, scope: !7056)
!7089 = !DILocation(line: 44, column: 17, scope: !7056)
!7090 = !DILocation(line: 44, column: 33, scope: !7056)
!7091 = !DILocation(line: 44, column: 4, scope: !7056)
!7092 = !DILocation(line: 45, column: 3, scope: !7056)
!7093 = !DILocation(line: 46, column: 4, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7057, file: !6995, line: 45, column: 10)
!7095 = !DILocation(line: 40, column: 50, scope: !7059)
!7096 = !DILocation(line: 40, column: 24, scope: !7059)
!7097 = distinct !{!7097, !7065, !7098}
!7098 = !DILocation(line: 48, column: 2, scope: !7054)
!7099 = distinct !DISubprogram(name: "isprint", scope: !6093, file: !6093, line: 37, type: !396, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7100)
!7100 = !{!7101}
!7101 = !DILocalVariable(name: "c", arg: 1, scope: !7099, file: !6093, line: 37, type: !103)
!7102 = !DILocation(line: 0, scope: !7099)
!7103 = !DILocation(line: 39, column: 38, scope: !7099)
!7104 = !DILocation(line: 39, column: 2, scope: !7099)
!7105 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7106, file: !7106, line: 57, type: !7107, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !7153)
!7106 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7107 = !DISubroutineType(types: !7108)
!7108 = !{null, !32, !7109}
!7109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7110, size: 32)
!7110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7111)
!7111 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2813, line: 141, baseType: !7112)
!7112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2813, line: 97, size: 256, elements: !7113)
!7113 = !{!7114}
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7112, file: !2813, line: 107, baseType: !7115, size: 256)
!7115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2813, line: 98, size: 256, elements: !7116)
!7116 = !{!7117, !7122, !7127, !7132, !7137, !7142, !7147, !7152}
!7117 = !DIDerivedType(tag: DW_TAG_member, scope: !7115, file: !2813, line: 99, baseType: !7118, size: 32)
!7118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7115, file: !2813, line: 99, size: 32, elements: !7119)
!7119 = !{!7120, !7121}
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7118, file: !2813, line: 99, baseType: !108, size: 32)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7118, file: !2813, line: 99, baseType: !108, size: 32)
!7122 = !DIDerivedType(tag: DW_TAG_member, scope: !7115, file: !2813, line: 100, baseType: !7123, size: 32, offset: 32)
!7123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7115, file: !2813, line: 100, size: 32, elements: !7124)
!7124 = !{!7125, !7126}
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7123, file: !2813, line: 100, baseType: !108, size: 32)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7123, file: !2813, line: 100, baseType: !108, size: 32)
!7127 = !DIDerivedType(tag: DW_TAG_member, scope: !7115, file: !2813, line: 101, baseType: !7128, size: 32, offset: 64)
!7128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7115, file: !2813, line: 101, size: 32, elements: !7129)
!7129 = !{!7130, !7131}
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7128, file: !2813, line: 101, baseType: !108, size: 32)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7128, file: !2813, line: 101, baseType: !108, size: 32)
!7132 = !DIDerivedType(tag: DW_TAG_member, scope: !7115, file: !2813, line: 102, baseType: !7133, size: 32, offset: 96)
!7133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7115, file: !2813, line: 102, size: 32, elements: !7134)
!7134 = !{!7135, !7136}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7133, file: !2813, line: 102, baseType: !108, size: 32)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7133, file: !2813, line: 102, baseType: !108, size: 32)
!7137 = !DIDerivedType(tag: DW_TAG_member, scope: !7115, file: !2813, line: 103, baseType: !7138, size: 32, offset: 128)
!7138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7115, file: !2813, line: 103, size: 32, elements: !7139)
!7139 = !{!7140, !7141}
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7138, file: !2813, line: 103, baseType: !108, size: 32)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7138, file: !2813, line: 103, baseType: !108, size: 32)
!7142 = !DIDerivedType(tag: DW_TAG_member, scope: !7115, file: !2813, line: 104, baseType: !7143, size: 32, offset: 160)
!7143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7115, file: !2813, line: 104, size: 32, elements: !7144)
!7144 = !{!7145, !7146}
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7143, file: !2813, line: 104, baseType: !108, size: 32)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7143, file: !2813, line: 104, baseType: !108, size: 32)
!7147 = !DIDerivedType(tag: DW_TAG_member, scope: !7115, file: !2813, line: 105, baseType: !7148, size: 32, offset: 192)
!7148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7115, file: !2813, line: 105, size: 32, elements: !7149)
!7149 = !{!7150, !7151}
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7148, file: !2813, line: 105, baseType: !108, size: 32)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7148, file: !2813, line: 105, baseType: !108, size: 32)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7115, file: !2813, line: 106, baseType: !108, size: 32, offset: 224)
!7153 = !{!7154, !7155}
!7154 = !DILocalVariable(name: "reason", arg: 1, scope: !7105, file: !7106, line: 57, type: !32)
!7155 = !DILocalVariable(name: "esf", arg: 2, scope: !7105, file: !7106, line: 57, type: !7109)
!7156 = !DILocation(line: 0, scope: !7105)
!7157 = !DILocation(line: 60, column: 10, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7105, file: !7106, line: 60, column: 6)
!7159 = !DILocation(line: 60, column: 6, scope: !7105)
!7160 = !DILocation(line: 61, column: 3, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7158, file: !7106, line: 60, column: 19)
!7162 = !DILocation(line: 62, column: 2, scope: !7161)
!7163 = !DILocation(line: 63, column: 2, scope: !7105)
!7164 = !DILocation(line: 64, column: 1, scope: !7105)
!7165 = distinct !DISubprogram(name: "esf_dump", scope: !7106, file: !7106, line: 20, type: !7166, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !7168)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{null, !7109}
!7168 = !{!7169}
!7169 = !DILocalVariable(name: "esf", arg: 1, scope: !7165, file: !7106, line: 20, type: !7109)
!7170 = !DILocation(line: 0, scope: !7165)
!7171 = !DILocation(line: 22, column: 2, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !7106, line: 22, column: 2)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !7106, line: 22, column: 2)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !7106, line: 22, column: 2)
!7175 = distinct !DILexicalBlock(scope: !7165, file: !7106, line: 22, column: 2)
!7176 = !DILocation(line: 24, column: 2, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !7106, line: 24, column: 2)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !7106, line: 24, column: 2)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !7106, line: 24, column: 2)
!7180 = distinct !DILexicalBlock(scope: !7165, file: !7106, line: 24, column: 2)
!7181 = !DILocation(line: 26, column: 2, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !7106, line: 26, column: 2)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !7106, line: 26, column: 2)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !7106, line: 26, column: 2)
!7185 = distinct !DILexicalBlock(scope: !7165, file: !7106, line: 26, column: 2)
!7186 = !DILocation(line: 53, column: 2, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !7106, line: 53, column: 2)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !7106, line: 53, column: 2)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !7106, line: 53, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7165, file: !7106, line: 53, column: 2)
!7191 = !DILocation(line: 55, column: 1, scope: !7165)
!7192 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7106, file: !7106, line: 82, type: !7193, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !7208)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{null, !7109, !7195}
!7195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7196, size: 32)
!7196 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7197)
!7197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7198)
!7198 = !{!7199, !7200, !7201, !7202, !7203, !7204, !7205, !7206, !7207}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7197, file: !214, line: 26, baseType: !108, size: 32)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7197, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7197, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7197, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7197, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7197, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7197, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7197, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7197, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7208 = !{!7209, !7210, !7211}
!7209 = !DILocalVariable(name: "esf", arg: 1, scope: !7192, file: !7106, line: 82, type: !7109)
!7210 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7192, file: !7106, line: 82, type: !7195)
!7211 = !DILocalVariable(name: "reason", scope: !7192, file: !7106, line: 88, type: !32)
!7212 = !DILocation(line: 0, scope: !7192)
!7213 = !DILocation(line: 88, column: 35, scope: !7192)
!7214 = !DILocation(line: 108, column: 2, scope: !7192)
!7215 = !DILocation(line: 131, column: 1, scope: !7192)
!7216 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7106, file: !7106, line: 133, type: !7217, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !7219)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{null, !102}
!7219 = !{!7220, !7221, !7222}
!7220 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7216, file: !7106, line: 133, type: !102)
!7221 = !DILocalVariable(name: "ssf_contents", scope: !7216, file: !7106, line: 135, type: !966)
!7222 = !DILocalVariable(name: "oops_esf", scope: !7216, file: !7106, line: 136, type: !7111)
!7223 = !DILocation(line: 0, scope: !7216)
!7224 = !DILocation(line: 136, column: 2, scope: !7216)
!7225 = !DILocation(line: 136, column: 15, scope: !7216)
!7226 = !DILocation(line: 139, column: 22, scope: !7216)
!7227 = !DILocation(line: 139, column: 17, scope: !7216)
!7228 = !DILocation(line: 139, column: 20, scope: !7216)
!7229 = !DILocation(line: 141, column: 2, scope: !7216)
!7230 = !DILocation(line: 142, column: 2, scope: !7216)
!7231 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7232, file: !7232, line: 40, type: !6973, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7233)
!7232 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7233 = !{!7234}
!7234 = !DILocalVariable(name: "irq", arg: 1, scope: !7231, file: !7232, line: 40, type: !32)
!7235 = !DILocation(line: 0, scope: !7231)
!7236 = !DILocation(line: 42, column: 2, scope: !7231)
!7237 = !DILocation(line: 43, column: 1, scope: !7231)
!7238 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !624, file: !624, line: 1684, type: !7239, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7241)
!7239 = !DISubroutineType(types: !7240)
!7240 = !{null, !871}
!7241 = !{!7242}
!7242 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7238, file: !624, line: 1684, type: !871)
!7243 = !DILocation(line: 0, scope: !7238)
!7244 = !DILocation(line: 1686, column: 23, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7238, file: !624, line: 1686, column: 7)
!7246 = !DILocation(line: 1686, column: 7, scope: !7238)
!7247 = !DILocation(line: 1688, column: 5, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7245, file: !624, line: 1687, column: 3)
!7249 = !{i64 2150356760}
!7250 = !DILocation(line: 1689, column: 81, scope: !7248)
!7251 = !DILocation(line: 1689, column: 60, scope: !7248)
!7252 = !DILocation(line: 1689, column: 34, scope: !7248)
!7253 = !DILocation(line: 1689, column: 5, scope: !7248)
!7254 = !DILocation(line: 1689, column: 43, scope: !7248)
!7255 = !DILocation(line: 1690, column: 5, scope: !7248)
!7256 = !{i64 2150356874}
!7257 = !DILocation(line: 1691, column: 3, scope: !7248)
!7258 = !DILocation(line: 1692, column: 1, scope: !7238)
!7259 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7232, file: !7232, line: 45, type: !6973, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7260)
!7260 = !{!7261}
!7261 = !DILocalVariable(name: "irq", arg: 1, scope: !7259, file: !7232, line: 45, type: !32)
!7262 = !DILocation(line: 0, scope: !7259)
!7263 = !DILocation(line: 47, column: 2, scope: !7259)
!7264 = !DILocation(line: 48, column: 1, scope: !7259)
!7265 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !624, file: !624, line: 1722, type: !7239, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7266)
!7266 = !{!7267}
!7267 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7265, file: !624, line: 1722, type: !871)
!7268 = !DILocation(line: 0, scope: !7265)
!7269 = !DILocation(line: 1724, column: 23, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7265, file: !624, line: 1724, column: 7)
!7271 = !DILocation(line: 1724, column: 7, scope: !7265)
!7272 = !DILocation(line: 1726, column: 81, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7270, file: !624, line: 1725, column: 3)
!7274 = !DILocation(line: 1726, column: 60, scope: !7273)
!7275 = !DILocation(line: 1726, column: 34, scope: !7273)
!7276 = !DILocation(line: 1726, column: 5, scope: !7273)
!7277 = !DILocation(line: 1726, column: 43, scope: !7273)
!7278 = !DILocation(line: 271, column: 3, scope: !7279, inlinedAt: !7281)
!7279 = distinct !DISubprogram(name: "__DSB", scope: !7280, file: !7280, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !251)
!7280 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7281 = distinct !DILocation(line: 1727, column: 5, scope: !7273)
!7282 = !{i64 2811143}
!7283 = !DILocation(line: 260, column: 3, scope: !7284, inlinedAt: !7285)
!7284 = distinct !DISubprogram(name: "__ISB", scope: !7280, file: !7280, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !251)
!7285 = distinct !DILocation(line: 1728, column: 5, scope: !7273)
!7286 = !{i64 2810860}
!7287 = !DILocation(line: 1729, column: 3, scope: !7273)
!7288 = !DILocation(line: 1730, column: 1, scope: !7265)
!7289 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7232, file: !7232, line: 50, type: !7290, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7292)
!7290 = !DISubroutineType(types: !7291)
!7291 = !{!103, !32}
!7292 = !{!7293}
!7293 = !DILocalVariable(name: "irq", arg: 1, scope: !7289, file: !7232, line: 50, type: !32)
!7294 = !DILocation(line: 0, scope: !7289)
!7295 = !DILocation(line: 52, column: 20, scope: !7289)
!7296 = !DILocation(line: 52, column: 9, scope: !7289)
!7297 = !DILocation(line: 52, column: 41, scope: !7289)
!7298 = !DILocation(line: 52, column: 39, scope: !7289)
!7299 = !DILocation(line: 52, column: 2, scope: !7289)
!7300 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7232, file: !7232, line: 64, type: !7301, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7303)
!7301 = !DISubroutineType(types: !7302)
!7302 = !{null, !32, !32, !108}
!7303 = !{!7304, !7305, !7306}
!7304 = !DILocalVariable(name: "irq", arg: 1, scope: !7300, file: !7232, line: 64, type: !32)
!7305 = !DILocalVariable(name: "prio", arg: 2, scope: !7300, file: !7232, line: 64, type: !32)
!7306 = !DILocalVariable(name: "flags", arg: 3, scope: !7300, file: !7232, line: 64, type: !108)
!7307 = !DILocation(line: 0, scope: !7300)
!7308 = !DILocation(line: 83, column: 8, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !7232, line: 82, column: 9)
!7310 = distinct !DILexicalBlock(scope: !7300, file: !7232, line: 76, column: 6)
!7311 = !DILocation(line: 95, column: 2, scope: !7300)
!7312 = !DILocation(line: 96, column: 1, scope: !7300)
!7313 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7314, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7316)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{null, !871, !108}
!7316 = !{!7317, !7318}
!7317 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7313, file: !624, line: 1814, type: !871)
!7318 = !DILocalVariable(name: "priority", arg: 2, scope: !7313, file: !624, line: 1814, type: !108)
!7319 = !DILocation(line: 0, scope: !7313)
!7320 = !DILocation(line: 0, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7313, file: !624, line: 1816, column: 7)
!7322 = !DILocation(line: 1816, column: 7, scope: !7313)
!7323 = !DILocation(line: 1824, column: 1, scope: !7313)
!7324 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7232, file: !7232, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7325)
!7325 = !{!7326}
!7326 = !DILocalVariable(name: "unused", arg: 1, scope: !7324, file: !7232, line: 155, type: !13)
!7327 = !DILocation(line: 0, scope: !7324)
!7328 = !DILocation(line: 159, column: 2, scope: !7324)
!7329 = !DILocation(line: 160, column: 1, scope: !7324)
!7330 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7331, file: !7331, line: 87, type: !334, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !251)
!7331 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7332 = !DILocation(line: 89, column: 2, scope: !7330)
!7333 = !DILocation(line: 90, column: 2, scope: !7330)
!7334 = !DILocation(line: 91, column: 1, scope: !7330)
!7335 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7331, file: !7331, line: 23, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7336 = !DISubprogram(name: "z_arm_int_exit", scope: !7337, file: !7337, line: 153, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7337 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7338 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7339, file: !7339, line: 256, type: !334, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !251)
!7339 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7340 = !DILocation(line: 258, column: 2, scope: !7338)
!7341 = !DILocation(line: 260, column: 2, scope: !7338)
!7342 = !DILocation(line: 262, column: 2, scope: !7338)
!7343 = !DILocation(line: 263, column: 2, scope: !7338)
!7344 = !DILocation(line: 267, column: 2, scope: !7338)
!7345 = !DILocation(line: 268, column: 2, scope: !7338)
!7346 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7339, file: !7339, line: 53, type: !334, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !251)
!7347 = !DILocation(line: 55, column: 12, scope: !7346)
!7348 = !DILocation(line: 271, column: 3, scope: !7349, inlinedAt: !7350)
!7349 = distinct !DISubprogram(name: "__DSB", scope: !7280, file: !7280, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !251)
!7350 = distinct !DILocation(line: 56, column: 2, scope: !7346)
!7351 = !{i64 2809814}
!7352 = !DILocation(line: 260, column: 3, scope: !7353, inlinedAt: !7354)
!7353 = distinct !DISubprogram(name: "__ISB", scope: !7280, file: !7280, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !251)
!7354 = distinct !DILocation(line: 57, column: 2, scope: !7346)
!7355 = !{i64 2809531}
!7356 = !DILocation(line: 58, column: 1, scope: !7346)
!7357 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7339, file: !7339, line: 96, type: !334, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !251)
!7358 = !DILocation(line: 103, column: 13, scope: !7357)
!7359 = !DILocation(line: 975, column: 3, scope: !7360, inlinedAt: !7363)
!7360 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7280, file: !7280, line: 971, type: !3574, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !7361)
!7361 = !{!7362}
!7362 = !DILocalVariable(name: "result", scope: !7360, file: !7280, line: 973, type: !108)
!7363 = distinct !DILocation(line: 189, column: 16, scope: !7357)
!7364 = !{i64 2830644}
!7365 = !DILocation(line: 0, scope: !7360, inlinedAt: !7363)
!7366 = !DILocation(line: 189, column: 32, scope: !7357)
!7367 = !DILocalVariable(name: "control", arg: 1, scope: !7368, file: !7280, line: 1001, type: !108)
!7368 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7280, file: !7280, line: 1001, type: !7369, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !7371)
!7369 = !DISubroutineType(types: !7370)
!7370 = !{null, !108}
!7371 = !{!7367}
!7372 = !DILocation(line: 0, scope: !7368, inlinedAt: !7373)
!7373 = distinct !DILocation(line: 189, column: 2, scope: !7357)
!7374 = !DILocation(line: 1003, column: 3, scope: !7368, inlinedAt: !7373)
!7375 = !{i64 2831364}
!7376 = !DILocation(line: 260, column: 3, scope: !7353, inlinedAt: !7377)
!7377 = distinct !DILocation(line: 1004, column: 3, scope: !7368, inlinedAt: !7373)
!7378 = !DILocation(line: 191, column: 1, scope: !7357)
!7379 = distinct !DISubprogram(name: "arch_swap", scope: !7380, file: !7380, line: 33, type: !7290, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !7381)
!7380 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7381 = !{!7382}
!7382 = !DILocalVariable(name: "key", arg: 1, scope: !7379, file: !7380, line: 33, type: !32)
!7383 = !DILocation(line: 0, scope: !7379)
!7384 = !DILocation(line: 36, column: 2, scope: !7379)
!7385 = !DILocation(line: 36, column: 17, scope: !7379)
!7386 = !DILocation(line: 36, column: 25, scope: !7379)
!7387 = !DILocation(line: 37, column: 37, scope: !7379)
!7388 = !DILocation(line: 37, column: 17, scope: !7379)
!7389 = !DILocation(line: 37, column: 35, scope: !7379)
!7390 = !DILocation(line: 41, column: 12, scope: !7379)
!7391 = !DILocalVariable(name: "key", arg: 1, scope: !7392, file: !6962, line: 84, type: !32)
!7392 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !7393)
!7393 = !{!7391}
!7394 = !DILocation(line: 0, scope: !7392, inlinedAt: !7395)
!7395 = distinct !DILocation(line: 44, column: 2, scope: !7379)
!7396 = !DILocation(line: 95, column: 2, scope: !7392, inlinedAt: !7395)
!7397 = !{i64 1949010}
!7398 = !DILocation(line: 53, column: 9, scope: !7379)
!7399 = !DILocation(line: 53, column: 24, scope: !7379)
!7400 = !DILocation(line: 53, column: 2, scope: !7379)
!7401 = distinct !DISubprogram(name: "arch_new_thread", scope: !7402, file: !7402, line: 56, type: !7403, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7510)
!7402 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7403 = !DISubroutineType(types: !7404)
!7404 = !{null, !7405, !7505, !277, !321, !102, !102, !102}
!7405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7406, size: 32)
!7406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !7407)
!7407 = !{!7408, !7466, !7478, !7479, !7480, !7481, !7487, !7500}
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7406, file: !163, line: 247, baseType: !7409, size: 384)
!7409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !7410)
!7410 = !{!7411, !7435, !7442, !7443, !7444, !7453, !7454, !7455}
!7411 = !DIDerivedType(tag: DW_TAG_member, scope: !7409, file: !163, line: 60, baseType: !7412, size: 64)
!7412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7409, file: !163, line: 60, size: 64, elements: !7413)
!7413 = !{!7414, !7429}
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7412, file: !163, line: 61, baseType: !7415, size: 64)
!7415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !7416)
!7416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !7417)
!7417 = !{!7418, !7424}
!7418 = !DIDerivedType(tag: DW_TAG_member, scope: !7416, file: !146, line: 38, baseType: !7419, size: 32)
!7419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7416, file: !146, line: 38, size: 32, elements: !7420)
!7420 = !{!7421, !7423}
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7419, file: !146, line: 39, baseType: !7422, size: 32)
!7422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7416, size: 32)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7419, file: !146, line: 40, baseType: !7422, size: 32)
!7424 = !DIDerivedType(tag: DW_TAG_member, scope: !7416, file: !146, line: 42, baseType: !7425, size: 32, offset: 32)
!7425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7416, file: !146, line: 42, size: 32, elements: !7426)
!7426 = !{!7427, !7428}
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7425, file: !146, line: 43, baseType: !7422, size: 32)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7425, file: !146, line: 44, baseType: !7422, size: 32)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7412, file: !163, line: 62, baseType: !7430, size: 64)
!7430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !7431)
!7431 = !{!7432}
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7430, file: !175, line: 50, baseType: !7433, size: 64)
!7433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7434, size: 64, elements: !180)
!7434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7430, size: 32)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7409, file: !163, line: 68, baseType: !7436, size: 32, offset: 64)
!7436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7437, size: 32)
!7437 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !7438)
!7438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !7439)
!7439 = !{!7440}
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7438, file: !141, line: 232, baseType: !7441, size: 64)
!7441 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !7416)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7409, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7409, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!7444 = !DIDerivedType(tag: DW_TAG_member, scope: !7409, file: !163, line: 90, baseType: !7445, size: 16, offset: 112)
!7445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7409, file: !163, line: 90, size: 16, elements: !7446)
!7446 = !{!7447, !7452}
!7447 = !DIDerivedType(tag: DW_TAG_member, scope: !7445, file: !163, line: 91, baseType: !7448, size: 16)
!7448 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7445, file: !163, line: 91, size: 16, elements: !7449)
!7449 = !{!7450, !7451}
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7448, file: !163, line: 96, baseType: !195, size: 8)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7448, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7445, file: !163, line: 100, baseType: !121, size: 16)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7409, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7409, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7409, file: !163, line: 131, baseType: !7456, size: 192, offset: 192)
!7456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !7457)
!7457 = !{!7458, !7459, !7465}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7456, file: !141, line: 245, baseType: !7415, size: 64)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7456, file: !141, line: 246, baseType: !7460, size: 32, offset: 64)
!7460 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !7461)
!7461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7462, size: 32)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{null, !7464}
!7464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7456, size: 32)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7456, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7406, file: !163, line: 250, baseType: !7467, size: 288, offset: 384)
!7467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7468)
!7468 = !{!7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477}
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7467, file: !214, line: 26, baseType: !108, size: 32)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7467, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7467, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7467, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7467, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7467, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7467, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7467, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7467, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7406, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7406, file: !163, line: 256, baseType: !7437, size: 64, offset: 704)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7406, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7406, file: !163, line: 300, baseType: !7482, size: 96, offset: 800)
!7482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !7483)
!7483 = !{!7484, !7485, !7486}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7482, file: !163, line: 153, baseType: !22, size: 32)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7482, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7482, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7406, file: !163, line: 325, baseType: !7488, size: 32, offset: 896)
!7488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7489, size: 32)
!7489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !7490)
!7490 = !{!7491, !7497, !7498}
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7489, file: !137, line: 5074, baseType: !7492, size: 96)
!7492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !7493)
!7493 = !{!7494, !7495, !7496}
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7492, file: !240, line: 57, baseType: !243, size: 32)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7492, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7492, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7489, file: !137, line: 5075, baseType: !7437, size: 64, offset: 96)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7489, file: !137, line: 5076, baseType: !7499, offset: 160)
!7499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7406, file: !163, line: 343, baseType: !7501, size: 64, offset: 928)
!7501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !7502)
!7502 = !{!7503, !7504}
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7501, file: !214, line: 63, baseType: !108, size: 32)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7501, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!7505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7506, size: 32)
!7506 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !7507)
!7507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !7508)
!7508 = !{!7509}
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7507, file: !316, line: 48, baseType: !278, size: 8)
!7510 = !{!7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518}
!7511 = !DILocalVariable(name: "thread", arg: 1, scope: !7401, file: !7402, line: 56, type: !7405)
!7512 = !DILocalVariable(name: "stack", arg: 2, scope: !7401, file: !7402, line: 56, type: !7505)
!7513 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7401, file: !7402, line: 57, type: !277)
!7514 = !DILocalVariable(name: "entry", arg: 4, scope: !7401, file: !7402, line: 57, type: !321)
!7515 = !DILocalVariable(name: "p1", arg: 5, scope: !7401, file: !7402, line: 58, type: !102)
!7516 = !DILocalVariable(name: "p2", arg: 6, scope: !7401, file: !7402, line: 58, type: !102)
!7517 = !DILocalVariable(name: "p3", arg: 7, scope: !7401, file: !7402, line: 58, type: !102)
!7518 = !DILocalVariable(name: "iframe", scope: !7401, file: !7402, line: 60, type: !2811)
!7519 = !DILocation(line: 0, scope: !7401)
!7520 = !DILocation(line: 85, column: 11, scope: !7401)
!7521 = !DILocation(line: 93, column: 10, scope: !7401)
!7522 = !DILocation(line: 98, column: 13, scope: !7401)
!7523 = !DILocation(line: 100, column: 15, scope: !7401)
!7524 = !DILocation(line: 100, column: 10, scope: !7401)
!7525 = !DILocation(line: 100, column: 13, scope: !7401)
!7526 = !DILocation(line: 101, column: 15, scope: !7401)
!7527 = !DILocation(line: 101, column: 10, scope: !7401)
!7528 = !DILocation(line: 101, column: 13, scope: !7401)
!7529 = !DILocation(line: 102, column: 15, scope: !7401)
!7530 = !DILocation(line: 102, column: 10, scope: !7401)
!7531 = !DILocation(line: 102, column: 13, scope: !7401)
!7532 = !DILocation(line: 103, column: 15, scope: !7401)
!7533 = !DILocation(line: 103, column: 10, scope: !7401)
!7534 = !DILocation(line: 103, column: 13, scope: !7401)
!7535 = !DILocation(line: 106, column: 10, scope: !7401)
!7536 = !DILocation(line: 106, column: 15, scope: !7401)
!7537 = !DILocation(line: 122, column: 29, scope: !7401)
!7538 = !DILocation(line: 122, column: 23, scope: !7401)
!7539 = !DILocation(line: 122, column: 27, scope: !7401)
!7540 = !DILocation(line: 123, column: 15, scope: !7401)
!7541 = !DILocation(line: 123, column: 23, scope: !7401)
!7542 = !DILocation(line: 143, column: 1, scope: !7401)
!7543 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7402, file: !7402, line: 385, type: !7544, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7547)
!7544 = !DISubroutineType(types: !7545)
!7545 = !{!108, !7546, !7546}
!7546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7547 = !{!7548, !7549, !7550, !7553}
!7548 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7543, file: !7402, line: 385, type: !7546)
!7549 = !DILocalVariable(name: "psp", arg: 2, scope: !7543, file: !7402, line: 385, type: !7546)
!7550 = !DILocalVariable(name: "thread", scope: !7543, file: !7402, line: 388, type: !7551)
!7551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7552, size: 32)
!7552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7406)
!7553 = !DILocalVariable(name: "guard_len", scope: !7543, file: !7402, line: 405, type: !108)
!7554 = !DILocation(line: 0, scope: !7543)
!7555 = !DILocation(line: 388, column: 34, scope: !7543)
!7556 = !DILocation(line: 390, column: 13, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7543, file: !7402, line: 390, column: 6)
!7558 = !DILocation(line: 390, column: 6, scope: !7543)
!7559 = !DILocation(line: 438, column: 6, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7543, file: !7402, line: 438, column: 6)
!7561 = !DILocation(line: 438, column: 6, scope: !7543)
!7562 = !DILocation(line: 442, column: 3, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7560, file: !7402, line: 440, column: 22)
!7564 = !DILocation(line: 455, column: 1, scope: !7543)
!7565 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7402, file: !7402, line: 530, type: !7566, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7568)
!7566 = !DISubroutineType(types: !7567)
!7567 = !{null, !7405, !277, !321}
!7568 = !{!7569, !7570, !7571}
!7569 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7565, file: !7402, line: 530, type: !7405)
!7570 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7565, file: !7402, line: 530, type: !277)
!7571 = !DILocalVariable(name: "_main", arg: 3, scope: !7565, file: !7402, line: 531, type: !321)
!7572 = !DILocation(line: 0, scope: !7565)
!7573 = !DILocation(line: 535, column: 11, scope: !7565)
!7574 = !DILocation(line: 560, column: 2, scope: !7565)
!7575 = !DILocation(line: 576, column: 2, scope: !7565)
!7576 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7577 = !DILocation(line: 603, column: 2, scope: !7565)
!7578 = distinct !DISubprogram(name: "z_arm_fault", scope: !7579, file: !7579, line: 1036, type: !7580, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7595)
!7579 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7580 = !DISubroutineType(types: !7581)
!7581 = !{null, !108, !108, !108, !7582}
!7582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7583, size: 32)
!7583 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7584)
!7584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7585)
!7585 = !{!7586, !7587, !7588, !7589, !7590, !7591, !7592, !7593, !7594}
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7584, file: !214, line: 26, baseType: !108, size: 32)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7584, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7584, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7584, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7584, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7584, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7584, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7584, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7584, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7595 = !{!7596, !7597, !7598, !7599, !7600, !7601, !7602, !7603, !7604, !7605}
!7596 = !DILocalVariable(name: "msp", arg: 1, scope: !7578, file: !7579, line: 1036, type: !108)
!7597 = !DILocalVariable(name: "psp", arg: 2, scope: !7578, file: !7579, line: 1036, type: !108)
!7598 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7578, file: !7579, line: 1036, type: !108)
!7599 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7578, file: !7579, line: 1037, type: !7582)
!7600 = !DILocalVariable(name: "reason", scope: !7578, file: !7579, line: 1039, type: !108)
!7601 = !DILocalVariable(name: "fault", scope: !7578, file: !7579, line: 1040, type: !103)
!7602 = !DILocalVariable(name: "recoverable", scope: !7578, file: !7579, line: 1041, type: !131)
!7603 = !DILocalVariable(name: "nested_exc", scope: !7578, file: !7579, line: 1041, type: !131)
!7604 = !DILocalVariable(name: "esf", scope: !7578, file: !7579, line: 1042, type: !2879)
!7605 = !DILocalVariable(name: "esf_copy", scope: !7578, file: !7579, line: 1047, type: !2880)
!7606 = !DILocation(line: 0, scope: !7578)
!7607 = !DILocation(line: 1040, column: 19, scope: !7578)
!7608 = !DILocation(line: 1040, column: 24, scope: !7578)
!7609 = !DILocation(line: 1041, column: 2, scope: !7578)
!7610 = !DILocation(line: 1047, column: 2, scope: !7578)
!7611 = !DILocation(line: 1047, column: 15, scope: !7578)
!7612 = !DILocalVariable(name: "key", arg: 1, scope: !7613, file: !6962, line: 84, type: !32)
!7613 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7614)
!7614 = !{!7612}
!7615 = !DILocation(line: 0, scope: !7613, inlinedAt: !7616)
!7616 = distinct !DILocation(line: 1050, column: 2, scope: !7578)
!7617 = !DILocation(line: 95, column: 2, scope: !7613, inlinedAt: !7616)
!7618 = !{i64 1982254}
!7619 = !DILocation(line: 1055, column: 9, scope: !7578)
!7620 = !DILocation(line: 1063, column: 11, scope: !7578)
!7621 = !DILocation(line: 1064, column: 6, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7578, file: !7579, line: 1064, column: 6)
!7623 = !{i8 0, i8 2}
!7624 = !DILocation(line: 1064, column: 6, scope: !7578)
!7625 = !DILocation(line: 1070, column: 20, scope: !7578)
!7626 = !DILocation(line: 1070, column: 2, scope: !7578)
!7627 = !DILocation(line: 1089, column: 6, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7578, file: !7579, line: 1089, column: 6)
!7629 = !DILocation(line: 0, scope: !7628)
!7630 = !DILocation(line: 1089, column: 6, scope: !7578)
!7631 = !DILocation(line: 1090, column: 28, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !7579, line: 1090, column: 7)
!7633 = distinct !DILexicalBlock(scope: !7628, file: !7579, line: 1089, column: 18)
!7634 = !DILocation(line: 1090, column: 44, scope: !7632)
!7635 = !DILocation(line: 1090, column: 7, scope: !7633)
!7636 = !DILocation(line: 1091, column: 24, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7632, file: !7579, line: 1090, column: 50)
!7638 = !DILocation(line: 1092, column: 3, scope: !7637)
!7639 = !DILocation(line: 1094, column: 23, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7628, file: !7579, line: 1093, column: 9)
!7641 = !DILocation(line: 1097, column: 2, scope: !7578)
!7642 = !DILocation(line: 1098, column: 1, scope: !7578)
!7643 = distinct !DISubprogram(name: "get_esf", scope: !7579, file: !7579, line: 894, type: !7644, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7647)
!7644 = !DISubroutineType(types: !7645)
!7645 = !{!2879, !108, !108, !108, !7646}
!7646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!7647 = !{!7648, !7649, !7650, !7651, !7652, !7653}
!7648 = !DILocalVariable(name: "msp", arg: 1, scope: !7643, file: !7579, line: 894, type: !108)
!7649 = !DILocalVariable(name: "psp", arg: 2, scope: !7643, file: !7579, line: 894, type: !108)
!7650 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7643, file: !7579, line: 894, type: !108)
!7651 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7643, file: !7579, line: 895, type: !7646)
!7652 = !DILocalVariable(name: "alternative_state_exc", scope: !7643, file: !7579, line: 897, type: !131)
!7653 = !DILocalVariable(name: "ptr_esf", scope: !7643, file: !7579, line: 898, type: !2879)
!7654 = !DILocation(line: 0, scope: !7643)
!7655 = !DILocation(line: 900, column: 14, scope: !7643)
!7656 = !DILocation(line: 902, column: 49, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7643, file: !7579, line: 902, column: 6)
!7658 = !DILocation(line: 902, column: 6, scope: !7643)
!7659 = !DILocation(line: 983, column: 44, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7643, file: !7579, line: 983, column: 6)
!7661 = !DILocation(line: 985, column: 3, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !7579, line: 985, column: 3)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !7579, line: 985, column: 3)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !7579, line: 985, column: 3)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !7579, line: 985, column: 3)
!7666 = distinct !DILexicalBlock(scope: !7660, file: !7579, line: 984, column: 47)
!7667 = !DILocation(line: 986, column: 3, scope: !7666)
!7668 = !DILocation(line: 983, column: 18, scope: !7660)
!7669 = !DILocation(line: 991, column: 7, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !7579, line: 990, column: 30)
!7671 = distinct !DILexicalBlock(scope: !7643, file: !7579, line: 990, column: 6)
!7672 = !DILocation(line: 998, column: 16, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !7579, line: 995, column: 10)
!7674 = distinct !DILexicalBlock(scope: !7670, file: !7579, line: 991, column: 7)
!7675 = !DILocation(line: 1002, column: 2, scope: !7643)
!7676 = !DILocation(line: 1003, column: 1, scope: !7643)
!7677 = distinct !DISubprogram(name: "fault_handle", scope: !7579, file: !7579, line: 786, type: !7678, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7680)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!108, !2879, !103, !7646}
!7680 = !{!7681, !7682, !7683, !7684}
!7681 = !DILocalVariable(name: "esf", arg: 1, scope: !7677, file: !7579, line: 786, type: !2879)
!7682 = !DILocalVariable(name: "fault", arg: 2, scope: !7677, file: !7579, line: 786, type: !103)
!7683 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7677, file: !7579, line: 786, type: !7646)
!7684 = !DILocalVariable(name: "reason", scope: !7677, file: !7579, line: 788, type: !108)
!7685 = !DILocation(line: 0, scope: !7677)
!7686 = !DILocation(line: 790, column: 15, scope: !7677)
!7687 = !DILocation(line: 792, column: 2, scope: !7677)
!7688 = !DILocation(line: 794, column: 12, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7677, file: !7579, line: 792, column: 17)
!7690 = !DILocation(line: 795, column: 3, scope: !7689)
!7691 = !DILocation(line: 800, column: 12, scope: !7689)
!7692 = !DILocation(line: 801, column: 3, scope: !7689)
!7693 = !DILocation(line: 803, column: 12, scope: !7689)
!7694 = !DILocation(line: 804, column: 3, scope: !7689)
!7695 = !DILocation(line: 806, column: 12, scope: !7689)
!7696 = !DILocation(line: 807, column: 3, scope: !7689)
!7697 = !DILocation(line: 814, column: 3, scope: !7689)
!7698 = !DILocation(line: 815, column: 3, scope: !7689)
!7699 = !DILocation(line: 820, column: 3, scope: !7689)
!7700 = !DILocation(line: 821, column: 3, scope: !7689)
!7701 = !DILocation(line: 829, column: 2, scope: !7677)
!7702 = distinct !DISubprogram(name: "hard_fault", scope: !7579, file: !7579, line: 709, type: !7703, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7705)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!108, !2879, !7646}
!7705 = !{!7706, !7707, !7708}
!7706 = !DILocalVariable(name: "esf", arg: 1, scope: !7702, file: !7579, line: 709, type: !2879)
!7707 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7702, file: !7579, line: 709, type: !7646)
!7708 = !DILocalVariable(name: "reason", scope: !7702, file: !7579, line: 711, type: !108)
!7709 = !DILocation(line: 0, scope: !7702)
!7710 = !DILocation(line: 713, column: 2, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !7579, line: 713, column: 2)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7579, line: 713, column: 2)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !7579, line: 713, column: 2)
!7714 = distinct !DILexicalBlock(scope: !7702, file: !7579, line: 713, column: 2)
!7715 = !DILocation(line: 732, column: 15, scope: !7702)
!7716 = !DILocation(line: 734, column: 12, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7702, file: !7579, line: 734, column: 6)
!7718 = !DILocation(line: 734, column: 17, scope: !7717)
!7719 = !DILocation(line: 734, column: 41, scope: !7717)
!7720 = !DILocation(line: 734, column: 6, scope: !7702)
!7721 = !DILocation(line: 735, column: 3, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !7579, line: 735, column: 3)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !7579, line: 735, column: 3)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !7579, line: 735, column: 3)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7579, line: 735, column: 3)
!7726 = distinct !DILexicalBlock(scope: !7717, file: !7579, line: 734, column: 47)
!7727 = !DILocation(line: 736, column: 2, scope: !7726)
!7728 = !DILocation(line: 736, column: 19, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7717, file: !7579, line: 736, column: 13)
!7730 = !DILocation(line: 736, column: 49, scope: !7729)
!7731 = !DILocation(line: 736, column: 13, scope: !7717)
!7732 = !DILocation(line: 737, column: 3, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !7579, line: 737, column: 3)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !7579, line: 737, column: 3)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !7579, line: 737, column: 3)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7579, line: 737, column: 3)
!7737 = distinct !DILexicalBlock(scope: !7729, file: !7579, line: 736, column: 55)
!7738 = !DILocation(line: 738, column: 2, scope: !7737)
!7739 = !DILocation(line: 738, column: 19, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7729, file: !7579, line: 738, column: 13)
!7741 = !DILocation(line: 738, column: 24, scope: !7740)
!7742 = !DILocation(line: 738, column: 47, scope: !7740)
!7743 = !DILocation(line: 738, column: 13, scope: !7729)
!7744 = !DILocation(line: 739, column: 3, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7579, line: 739, column: 3)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7579, line: 739, column: 3)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7579, line: 739, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7579, line: 739, column: 3)
!7749 = distinct !DILexicalBlock(scope: !7740, file: !7579, line: 738, column: 53)
!7750 = !DILocation(line: 740, column: 7, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7749, file: !7579, line: 740, column: 7)
!7752 = !DILocation(line: 740, column: 7, scope: !7749)
!7753 = !DILocation(line: 741, column: 4, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !7579, line: 741, column: 4)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !7579, line: 741, column: 4)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !7579, line: 741, column: 4)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7579, line: 741, column: 4)
!7758 = distinct !DILexicalBlock(scope: !7751, file: !7579, line: 740, column: 38)
!7759 = !DILocation(line: 742, column: 24, scope: !7758)
!7760 = !DILocation(line: 743, column: 3, scope: !7758)
!7761 = !DILocation(line: 743, column: 20, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7751, file: !7579, line: 743, column: 14)
!7763 = !DILocation(line: 743, column: 25, scope: !7762)
!7764 = !DILocation(line: 743, column: 52, scope: !7762)
!7765 = !DILocation(line: 743, column: 14, scope: !7751)
!7766 = !DILocation(line: 744, column: 13, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7762, file: !7579, line: 743, column: 58)
!7768 = !DILocation(line: 745, column: 3, scope: !7767)
!7769 = !DILocation(line: 745, column: 20, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7762, file: !7579, line: 745, column: 14)
!7771 = !DILocation(line: 745, column: 25, scope: !7770)
!7772 = !DILocation(line: 745, column: 52, scope: !7770)
!7773 = !DILocation(line: 745, column: 14, scope: !7762)
!7774 = !DILocation(line: 746, column: 13, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7770, file: !7579, line: 745, column: 58)
!7776 = !DILocation(line: 747, column: 3, scope: !7775)
!7777 = !DILocation(line: 747, column: 20, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7770, file: !7579, line: 747, column: 14)
!7779 = !DILocation(line: 747, column: 52, scope: !7778)
!7780 = !DILocation(line: 747, column: 14, scope: !7770)
!7781 = !DILocation(line: 748, column: 13, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7778, file: !7579, line: 747, column: 58)
!7783 = !DILocation(line: 753, column: 3, scope: !7782)
!7784 = !DILocation(line: 766, column: 2, scope: !7702)
!7785 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7579, file: !7579, line: 229, type: !7678, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7786)
!7786 = !{!7787, !7788, !7789, !7790, !7791, !7792, !7795}
!7787 = !DILocalVariable(name: "esf", arg: 1, scope: !7785, file: !7579, line: 229, type: !2879)
!7788 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7785, file: !7579, line: 229, type: !103)
!7789 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7785, file: !7579, line: 230, type: !7646)
!7790 = !DILocalVariable(name: "reason", scope: !7785, file: !7579, line: 232, type: !108)
!7791 = !DILocalVariable(name: "mmfar", scope: !7785, file: !7579, line: 233, type: !108)
!7792 = !DILocalVariable(name: "temp", scope: !7793, file: !7579, line: 254, type: !108)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !7579, line: 244, column: 48)
!7794 = distinct !DILexicalBlock(scope: !7785, file: !7579, line: 244, column: 6)
!7795 = !DILocalVariable(name: "min_stack_ptr", scope: !7796, file: !7579, line: 309, type: !108)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !7579, line: 308, column: 43)
!7797 = distinct !DILexicalBlock(scope: !7798, file: !7579, line: 308, column: 7)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !7579, line: 289, column: 40)
!7799 = distinct !DILexicalBlock(scope: !7785, file: !7579, line: 288, column: 6)
!7800 = !DILocation(line: 0, scope: !7785)
!7801 = !DILocation(line: 235, column: 2, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7579, line: 235, column: 2)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !7579, line: 235, column: 2)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !7579, line: 235, column: 2)
!7805 = distinct !DILexicalBlock(scope: !7785, file: !7579, line: 235, column: 2)
!7806 = !DILocation(line: 237, column: 12, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7785, file: !7579, line: 237, column: 6)
!7808 = !DILocation(line: 237, column: 17, scope: !7807)
!7809 = !DILocation(line: 237, column: 41, scope: !7807)
!7810 = !DILocation(line: 237, column: 6, scope: !7785)
!7811 = !DILocation(line: 238, column: 3, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !7579, line: 238, column: 3)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !7579, line: 238, column: 3)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !7579, line: 238, column: 3)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7579, line: 238, column: 3)
!7816 = distinct !DILexicalBlock(scope: !7807, file: !7579, line: 237, column: 47)
!7817 = !DILocation(line: 240, column: 2, scope: !7816)
!7818 = !DILocation(line: 241, column: 12, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7785, file: !7579, line: 241, column: 6)
!7820 = !DILocation(line: 241, column: 17, scope: !7819)
!7821 = !DILocation(line: 241, column: 43, scope: !7819)
!7822 = !DILocation(line: 241, column: 6, scope: !7785)
!7823 = !DILocation(line: 242, column: 3, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7579, line: 242, column: 3)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !7579, line: 242, column: 3)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !7579, line: 242, column: 3)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !7579, line: 242, column: 3)
!7828 = distinct !DILexicalBlock(scope: !7819, file: !7579, line: 241, column: 49)
!7829 = !DILocation(line: 243, column: 2, scope: !7828)
!7830 = !DILocation(line: 244, column: 12, scope: !7794)
!7831 = !DILocation(line: 244, column: 17, scope: !7794)
!7832 = !DILocation(line: 244, column: 42, scope: !7794)
!7833 = !DILocation(line: 244, column: 6, scope: !7785)
!7834 = !DILocation(line: 245, column: 3, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !7579, line: 245, column: 3)
!7836 = distinct !DILexicalBlock(scope: !7837, file: !7579, line: 245, column: 3)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !7579, line: 245, column: 3)
!7838 = distinct !DILexicalBlock(scope: !7793, file: !7579, line: 245, column: 3)
!7839 = !DILocation(line: 254, column: 24, scope: !7793)
!7840 = !DILocation(line: 0, scope: !7793)
!7841 = !DILocation(line: 256, column: 13, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7793, file: !7579, line: 256, column: 7)
!7843 = !DILocation(line: 256, column: 18, scope: !7842)
!7844 = !DILocation(line: 256, column: 44, scope: !7842)
!7845 = !DILocation(line: 256, column: 7, scope: !7793)
!7846 = !DILocation(line: 258, column: 4, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7579, line: 258, column: 4)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !7579, line: 258, column: 4)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !7579, line: 258, column: 4)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !7579, line: 258, column: 4)
!7851 = distinct !DILexicalBlock(scope: !7842, file: !7579, line: 256, column: 50)
!7852 = !DILocation(line: 259, column: 24, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7851, file: !7579, line: 259, column: 8)
!7854 = !DILocation(line: 259, column: 8, scope: !7851)
!7855 = !DILocation(line: 261, column: 15, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7853, file: !7579, line: 259, column: 30)
!7857 = !DILocation(line: 262, column: 4, scope: !7856)
!7858 = !DILocation(line: 265, column: 12, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7785, file: !7579, line: 265, column: 6)
!7860 = !DILocation(line: 265, column: 17, scope: !7859)
!7861 = !DILocation(line: 265, column: 42, scope: !7859)
!7862 = !DILocation(line: 265, column: 6, scope: !7785)
!7863 = !DILocation(line: 266, column: 3, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !7579, line: 266, column: 3)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !7579, line: 266, column: 3)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !7579, line: 266, column: 3)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !7579, line: 266, column: 3)
!7868 = distinct !DILexicalBlock(scope: !7859, file: !7579, line: 265, column: 48)
!7869 = !DILocation(line: 267, column: 2, scope: !7868)
!7870 = !DILocation(line: 269, column: 12, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7785, file: !7579, line: 269, column: 6)
!7872 = !DILocation(line: 269, column: 17, scope: !7871)
!7873 = !DILocation(line: 269, column: 41, scope: !7871)
!7874 = !DILocation(line: 269, column: 6, scope: !7785)
!7875 = !DILocation(line: 270, column: 3, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !7579, line: 270, column: 3)
!7877 = distinct !DILexicalBlock(scope: !7878, file: !7579, line: 270, column: 3)
!7878 = distinct !DILexicalBlock(scope: !7879, file: !7579, line: 270, column: 3)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !7579, line: 270, column: 3)
!7880 = distinct !DILexicalBlock(scope: !7871, file: !7579, line: 269, column: 47)
!7881 = !DILocation(line: 272, column: 2, scope: !7880)
!7882 = !DILocation(line: 288, column: 12, scope: !7799)
!7883 = !DILocation(line: 288, column: 17, scope: !7799)
!7884 = !DILocation(line: 288, column: 41, scope: !7799)
!7885 = !DILocation(line: 289, column: 9, scope: !7799)
!7886 = !DILocation(line: 289, column: 14, scope: !7799)
!7887 = !DILocation(line: 288, column: 6, scope: !7785)
!7888 = !DILocation(line: 308, column: 12, scope: !7797)
!7889 = !DILocation(line: 308, column: 17, scope: !7797)
!7890 = !DILocation(line: 308, column: 7, scope: !7798)
!7891 = !DILocation(line: 310, column: 6, scope: !7796)
!7892 = !DILocation(line: 309, column: 29, scope: !7796)
!7893 = !DILocation(line: 0, scope: !7796)
!7894 = !DILocation(line: 312, column: 8, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7796, file: !7579, line: 312, column: 8)
!7896 = !DILocation(line: 312, column: 8, scope: !7796)
!7897 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7898, file: !7280, line: 1099, type: !108)
!7898 = distinct !DISubprogram(name: "__set_PSP", scope: !7280, file: !7280, line: 1099, type: !7369, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7899)
!7899 = !{!7897}
!7900 = !DILocation(line: 0, scope: !7898, inlinedAt: !7901)
!7901 = distinct !DILocation(line: 338, column: 5, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7895, file: !7579, line: 312, column: 23)
!7903 = !DILocation(line: 1101, column: 3, scope: !7898, inlinedAt: !7901)
!7904 = !{i64 2860783}
!7905 = !DILocation(line: 341, column: 4, scope: !7902)
!7906 = !DILocation(line: 360, column: 12, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7785, file: !7579, line: 360, column: 6)
!7908 = !DILocation(line: 360, column: 17, scope: !7907)
!7909 = !DILocation(line: 360, column: 41, scope: !7907)
!7910 = !DILocation(line: 360, column: 6, scope: !7785)
!7911 = !DILocation(line: 361, column: 14, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7907, file: !7579, line: 360, column: 47)
!7913 = !DILocation(line: 362, column: 2, scope: !7912)
!7914 = !DILocation(line: 366, column: 12, scope: !7785)
!7915 = !DILocation(line: 369, column: 15, scope: !7785)
!7916 = !DILocation(line: 371, column: 2, scope: !7785)
!7917 = distinct !DISubprogram(name: "bus_fault", scope: !7579, file: !7579, line: 383, type: !7918, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7920)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{!103, !2879, !103, !7646}
!7920 = !{!7921, !7922, !7923, !7924, !7925}
!7921 = !DILocalVariable(name: "esf", arg: 1, scope: !7917, file: !7579, line: 383, type: !2879)
!7922 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7917, file: !7579, line: 383, type: !103)
!7923 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7917, file: !7579, line: 383, type: !7646)
!7924 = !DILocalVariable(name: "reason", scope: !7917, file: !7579, line: 385, type: !108)
!7925 = !DILocalVariable(name: "bfar", scope: !7926, file: !7579, line: 405, type: !108)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !7579, line: 395, column: 42)
!7927 = distinct !DILexicalBlock(scope: !7917, file: !7579, line: 395, column: 6)
!7928 = !DILocation(line: 0, scope: !7917)
!7929 = !DILocation(line: 387, column: 2, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7931, file: !7579, line: 387, column: 2)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !7579, line: 387, column: 2)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !7579, line: 387, column: 2)
!7933 = distinct !DILexicalBlock(scope: !7917, file: !7579, line: 387, column: 2)
!7934 = !DILocation(line: 389, column: 11, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7917, file: !7579, line: 389, column: 6)
!7936 = !DILocation(line: 389, column: 16, scope: !7935)
!7937 = !DILocation(line: 389, column: 6, scope: !7917)
!7938 = !DILocation(line: 390, column: 3, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7940, file: !7579, line: 390, column: 3)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !7579, line: 390, column: 3)
!7941 = distinct !DILexicalBlock(scope: !7942, file: !7579, line: 390, column: 3)
!7942 = distinct !DILexicalBlock(scope: !7943, file: !7579, line: 390, column: 3)
!7943 = distinct !DILexicalBlock(scope: !7935, file: !7579, line: 389, column: 39)
!7944 = !DILocation(line: 391, column: 2, scope: !7943)
!7945 = !DILocation(line: 392, column: 11, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7917, file: !7579, line: 392, column: 6)
!7947 = !DILocation(line: 392, column: 16, scope: !7946)
!7948 = !DILocation(line: 392, column: 6, scope: !7917)
!7949 = !DILocation(line: 393, column: 3, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !7579, line: 393, column: 3)
!7951 = distinct !DILexicalBlock(scope: !7952, file: !7579, line: 393, column: 3)
!7952 = distinct !DILexicalBlock(scope: !7953, file: !7579, line: 393, column: 3)
!7953 = distinct !DILexicalBlock(scope: !7954, file: !7579, line: 393, column: 3)
!7954 = distinct !DILexicalBlock(scope: !7946, file: !7579, line: 392, column: 41)
!7955 = !DILocation(line: 394, column: 2, scope: !7954)
!7956 = !DILocation(line: 395, column: 11, scope: !7927)
!7957 = !DILocation(line: 395, column: 16, scope: !7927)
!7958 = !DILocation(line: 395, column: 6, scope: !7917)
!7959 = !DILocation(line: 396, column: 3, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !7579, line: 396, column: 3)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !7579, line: 396, column: 3)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7579, line: 396, column: 3)
!7963 = distinct !DILexicalBlock(scope: !7926, file: !7579, line: 396, column: 3)
!7964 = !DILocation(line: 405, column: 3, scope: !7926)
!7965 = !DILocation(line: 0, scope: !7926)
!7966 = !DILocation(line: 407, column: 13, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7926, file: !7579, line: 407, column: 7)
!7968 = !DILocation(line: 407, column: 18, scope: !7967)
!7969 = !DILocation(line: 407, column: 44, scope: !7967)
!7970 = !DILocation(line: 407, column: 7, scope: !7926)
!7971 = !DILocation(line: 408, column: 4, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !7579, line: 408, column: 4)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7579, line: 408, column: 4)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7579, line: 408, column: 4)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7579, line: 408, column: 4)
!7976 = distinct !DILexicalBlock(scope: !7967, file: !7579, line: 407, column: 50)
!7977 = !DILocation(line: 409, column: 24, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7976, file: !7579, line: 409, column: 8)
!7979 = !DILocation(line: 409, column: 8, scope: !7976)
!7980 = !DILocation(line: 411, column: 15, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7978, file: !7579, line: 409, column: 30)
!7982 = !DILocation(line: 412, column: 4, scope: !7981)
!7983 = !DILocation(line: 415, column: 11, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7917, file: !7579, line: 415, column: 6)
!7985 = !DILocation(line: 415, column: 16, scope: !7984)
!7986 = !DILocation(line: 415, column: 6, scope: !7917)
!7987 = !DILocation(line: 416, column: 3, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !7579, line: 416, column: 3)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !7579, line: 416, column: 3)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !7579, line: 416, column: 3)
!7991 = distinct !DILexicalBlock(scope: !7992, file: !7579, line: 416, column: 3)
!7992 = distinct !DILexicalBlock(scope: !7984, file: !7579, line: 415, column: 44)
!7993 = !DILocation(line: 417, column: 2, scope: !7992)
!7994 = !DILocation(line: 418, column: 12, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7917, file: !7579, line: 418, column: 6)
!7996 = !DILocation(line: 418, column: 17, scope: !7995)
!7997 = !DILocation(line: 418, column: 41, scope: !7995)
!7998 = !DILocation(line: 418, column: 6, scope: !7917)
!7999 = !DILocation(line: 423, column: 18, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7995, file: !7579, line: 423, column: 13)
!8001 = !DILocation(line: 423, column: 23, scope: !8000)
!8002 = !DILocation(line: 423, column: 13, scope: !7995)
!8003 = !DILocation(line: 0, scope: !7995)
!8004 = !DILocation(line: 524, column: 12, scope: !7917)
!8005 = !DILocation(line: 526, column: 15, scope: !7917)
!8006 = !DILocation(line: 528, column: 2, scope: !7917)
!8007 = distinct !DISubprogram(name: "usage_fault", scope: !7579, file: !7579, line: 539, type: !8008, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !8012)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!108, !8010}
!8010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8011, size: 32)
!8011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2880)
!8012 = !{!8013, !8014}
!8013 = !DILocalVariable(name: "esf", arg: 1, scope: !8007, file: !7579, line: 539, type: !8010)
!8014 = !DILocalVariable(name: "reason", scope: !8007, file: !7579, line: 541, type: !108)
!8015 = !DILocation(line: 0, scope: !8007)
!8016 = !DILocation(line: 543, column: 2, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !7579, line: 543, column: 2)
!8018 = distinct !DILexicalBlock(scope: !8019, file: !7579, line: 543, column: 2)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !7579, line: 543, column: 2)
!8020 = distinct !DILexicalBlock(scope: !8007, file: !7579, line: 543, column: 2)
!8021 = !DILocation(line: 546, column: 12, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8007, file: !7579, line: 546, column: 6)
!8023 = !DILocation(line: 546, column: 17, scope: !8022)
!8024 = !DILocation(line: 546, column: 43, scope: !8022)
!8025 = !DILocation(line: 546, column: 6, scope: !8007)
!8026 = !DILocation(line: 547, column: 3, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7579, line: 547, column: 3)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7579, line: 547, column: 3)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !7579, line: 547, column: 3)
!8030 = distinct !DILexicalBlock(scope: !8031, file: !7579, line: 547, column: 3)
!8031 = distinct !DILexicalBlock(scope: !8022, file: !7579, line: 546, column: 49)
!8032 = !DILocation(line: 548, column: 2, scope: !8031)
!8033 = !DILocation(line: 549, column: 12, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8007, file: !7579, line: 549, column: 6)
!8035 = !DILocation(line: 549, column: 17, scope: !8034)
!8036 = !DILocation(line: 549, column: 43, scope: !8034)
!8037 = !DILocation(line: 549, column: 6, scope: !8007)
!8038 = !DILocation(line: 550, column: 3, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !7579, line: 550, column: 3)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !7579, line: 550, column: 3)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !7579, line: 550, column: 3)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !7579, line: 550, column: 3)
!8043 = distinct !DILexicalBlock(scope: !8034, file: !7579, line: 549, column: 49)
!8044 = !DILocation(line: 551, column: 2, scope: !8043)
!8045 = !DILocation(line: 567, column: 12, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8007, file: !7579, line: 567, column: 6)
!8047 = !DILocation(line: 567, column: 17, scope: !8046)
!8048 = !DILocation(line: 567, column: 38, scope: !8046)
!8049 = !DILocation(line: 567, column: 6, scope: !8007)
!8050 = !DILocation(line: 568, column: 3, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !7579, line: 568, column: 3)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !7579, line: 568, column: 3)
!8053 = distinct !DILexicalBlock(scope: !8054, file: !7579, line: 568, column: 3)
!8054 = distinct !DILexicalBlock(scope: !8055, file: !7579, line: 568, column: 3)
!8055 = distinct !DILexicalBlock(scope: !8046, file: !7579, line: 567, column: 44)
!8056 = !DILocation(line: 569, column: 2, scope: !8055)
!8057 = !DILocation(line: 570, column: 12, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8007, file: !7579, line: 570, column: 6)
!8059 = !DILocation(line: 570, column: 17, scope: !8058)
!8060 = !DILocation(line: 570, column: 39, scope: !8058)
!8061 = !DILocation(line: 570, column: 6, scope: !8007)
!8062 = !DILocation(line: 571, column: 3, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !7579, line: 571, column: 3)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !7579, line: 571, column: 3)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !7579, line: 571, column: 3)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !7579, line: 571, column: 3)
!8067 = distinct !DILexicalBlock(scope: !8058, file: !7579, line: 570, column: 45)
!8068 = !DILocation(line: 572, column: 2, scope: !8067)
!8069 = !DILocation(line: 573, column: 12, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8007, file: !7579, line: 573, column: 6)
!8071 = !DILocation(line: 573, column: 17, scope: !8070)
!8072 = !DILocation(line: 573, column: 42, scope: !8070)
!8073 = !DILocation(line: 573, column: 6, scope: !8007)
!8074 = !DILocation(line: 574, column: 3, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !7579, line: 574, column: 3)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !7579, line: 574, column: 3)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !7579, line: 574, column: 3)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !7579, line: 574, column: 3)
!8079 = distinct !DILexicalBlock(scope: !8070, file: !7579, line: 573, column: 48)
!8080 = !DILocation(line: 575, column: 2, scope: !8079)
!8081 = !DILocation(line: 576, column: 12, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8007, file: !7579, line: 576, column: 6)
!8083 = !DILocation(line: 576, column: 17, scope: !8082)
!8084 = !DILocation(line: 576, column: 44, scope: !8082)
!8085 = !DILocation(line: 576, column: 6, scope: !8007)
!8086 = !DILocation(line: 577, column: 3, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7579, line: 577, column: 3)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !7579, line: 577, column: 3)
!8089 = distinct !DILexicalBlock(scope: !8090, file: !7579, line: 577, column: 3)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !7579, line: 577, column: 3)
!8091 = distinct !DILexicalBlock(scope: !8082, file: !7579, line: 576, column: 50)
!8092 = !DILocation(line: 578, column: 2, scope: !8091)
!8093 = !DILocation(line: 581, column: 12, scope: !8007)
!8094 = !DILocation(line: 583, column: 2, scope: !8007)
!8095 = distinct !DISubprogram(name: "debug_monitor", scope: !7579, file: !7579, line: 632, type: !8096, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !8098)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{null, !2879, !7646}
!8098 = !{!8099, !8100}
!8099 = !DILocalVariable(name: "esf", arg: 1, scope: !8095, file: !7579, line: 632, type: !2879)
!8100 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8095, file: !7579, line: 632, type: !7646)
!8101 = !DILocation(line: 0, scope: !8095)
!8102 = !DILocation(line: 634, column: 15, scope: !8095)
!8103 = !DILocation(line: 636, column: 2, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8105, file: !7579, line: 636, column: 2)
!8105 = distinct !DILexicalBlock(scope: !8106, file: !7579, line: 636, column: 2)
!8106 = distinct !DILexicalBlock(scope: !8107, file: !7579, line: 636, column: 2)
!8107 = distinct !DILexicalBlock(scope: !8095, file: !7579, line: 636, column: 2)
!8108 = !DILocation(line: 652, column: 1, scope: !8095)
!8109 = distinct !DISubprogram(name: "reserved_exception", scope: !7579, file: !7579, line: 776, type: !8110, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !8112)
!8110 = !DISubroutineType(types: !8111)
!8111 = !{null, !8010, !103}
!8112 = !{!8113, !8114}
!8113 = !DILocalVariable(name: "esf", arg: 1, scope: !8109, file: !7579, line: 776, type: !8010)
!8114 = !DILocalVariable(name: "fault", arg: 2, scope: !8109, file: !7579, line: 776, type: !103)
!8115 = !DILocation(line: 0, scope: !8109)
!8116 = !DILocation(line: 780, column: 2, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !7579, line: 780, column: 2)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !7579, line: 780, column: 2)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !7579, line: 780, column: 2)
!8120 = distinct !DILexicalBlock(scope: !8109, file: !7579, line: 780, column: 2)
!8121 = !DILocation(line: 783, column: 1, scope: !8109)
!8122 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7579, file: !7579, line: 658, type: !8123, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !8125)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{!131, !2879}
!8125 = !{!8126, !8127, !8128}
!8126 = !DILocalVariable(name: "esf", arg: 1, scope: !8122, file: !7579, line: 658, type: !2879)
!8127 = !DILocalVariable(name: "ret_addr", scope: !8122, file: !7579, line: 660, type: !2653)
!8128 = !DILocalVariable(name: "fault_insn", scope: !8122, file: !7579, line: 686, type: !121)
!8129 = !DILocation(line: 0, scope: !8122)
!8130 = !DILocation(line: 660, column: 46, scope: !8122)
!8131 = !DILocation(line: 660, column: 23, scope: !8122)
!8132 = !DILocation(line: 682, column: 11, scope: !8122)
!8133 = !DILocation(line: 271, column: 3, scope: !8134, inlinedAt: !8135)
!8134 = distinct !DISubprogram(name: "__DSB", scope: !7280, file: !7280, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !251)
!8135 = distinct !DILocation(line: 683, column: 2, scope: !8122)
!8136 = !{i64 2836918}
!8137 = !DILocation(line: 260, column: 3, scope: !8138, inlinedAt: !8139)
!8138 = distinct !DISubprogram(name: "__ISB", scope: !7280, file: !7280, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !251)
!8139 = distinct !DILocation(line: 684, column: 2, scope: !8122)
!8140 = !{i64 2836635}
!8141 = !DILocation(line: 686, column: 35, scope: !8122)
!8142 = !DILocation(line: 686, column: 24, scope: !8122)
!8143 = !DILocation(line: 688, column: 11, scope: !8122)
!8144 = !DILocation(line: 271, column: 3, scope: !8134, inlinedAt: !8145)
!8145 = distinct !DILocation(line: 689, column: 2, scope: !8122)
!8146 = !DILocation(line: 260, column: 3, scope: !8138, inlinedAt: !8147)
!8147 = distinct !DILocation(line: 690, column: 2, scope: !8122)
!8148 = !DILocation(line: 693, column: 45, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8122, file: !7579, line: 693, column: 6)
!8150 = !DILocation(line: 699, column: 1, scope: !8122)
!8151 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7579, file: !7579, line: 1107, type: !334, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !251)
!8152 = !DILocation(line: 1111, column: 11, scope: !8151)
!8153 = !DILocation(line: 1136, column: 1, scope: !8151)
!8154 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8155, file: !8155, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !8156)
!8155 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8156 = !{!8157}
!8157 = !DILocalVariable(name: "irq", scope: !8154, file: !8155, line: 28, type: !103)
!8158 = !DILocation(line: 0, scope: !8154)
!8159 = !DILocation(line: 30, column: 2, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8154, file: !8155, line: 30, column: 2)
!8161 = !DILocation(line: 31, column: 3, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !8155, line: 30, column: 39)
!8163 = distinct !DILexicalBlock(scope: !8160, file: !8155, line: 30, column: 2)
!8164 = !DILocation(line: 30, column: 35, scope: !8163)
!8165 = !DILocation(line: 30, column: 13, scope: !8163)
!8166 = distinct !{!8166, !8159, !8167}
!8167 = !DILocation(line: 32, column: 2, scope: !8160)
!8168 = !DILocation(line: 33, column: 1, scope: !8154)
!8169 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7314, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !8170)
!8170 = !{!8171, !8172}
!8171 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8169, file: !624, line: 1814, type: !871)
!8172 = !DILocalVariable(name: "priority", arg: 2, scope: !8169, file: !624, line: 1814, type: !108)
!8173 = !DILocation(line: 0, scope: !8169)
!8174 = !DILocation(line: 1816, column: 7, scope: !8169)
!8175 = !DILocation(line: 0, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8169, file: !624, line: 1816, column: 7)
!8177 = !DILocation(line: 1824, column: 1, scope: !8169)
!8178 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8179, file: !8179, line: 27, type: !8180, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !8283)
!8179 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8180 = !DISubroutineType(types: !8181)
!8181 = !{null, !8182}
!8182 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !8183)
!8183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8184, size: 32)
!8184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !8185)
!8185 = !{!8186, !8244, !8256, !8257, !8258, !8259, !8265, !8278}
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8184, file: !163, line: 247, baseType: !8187, size: 384)
!8187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !8188)
!8188 = !{!8189, !8213, !8220, !8221, !8222, !8231, !8232, !8233}
!8189 = !DIDerivedType(tag: DW_TAG_member, scope: !8187, file: !163, line: 60, baseType: !8190, size: 64)
!8190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8187, file: !163, line: 60, size: 64, elements: !8191)
!8191 = !{!8192, !8207}
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8190, file: !163, line: 61, baseType: !8193, size: 64)
!8193 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !8194)
!8194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !8195)
!8195 = !{!8196, !8202}
!8196 = !DIDerivedType(tag: DW_TAG_member, scope: !8194, file: !146, line: 38, baseType: !8197, size: 32)
!8197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8194, file: !146, line: 38, size: 32, elements: !8198)
!8198 = !{!8199, !8201}
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8197, file: !146, line: 39, baseType: !8200, size: 32)
!8200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8194, size: 32)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8197, file: !146, line: 40, baseType: !8200, size: 32)
!8202 = !DIDerivedType(tag: DW_TAG_member, scope: !8194, file: !146, line: 42, baseType: !8203, size: 32, offset: 32)
!8203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8194, file: !146, line: 42, size: 32, elements: !8204)
!8204 = !{!8205, !8206}
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8203, file: !146, line: 43, baseType: !8200, size: 32)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8203, file: !146, line: 44, baseType: !8200, size: 32)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8190, file: !163, line: 62, baseType: !8208, size: 64)
!8208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !8209)
!8209 = !{!8210}
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8208, file: !175, line: 50, baseType: !8211, size: 64)
!8211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8212, size: 64, elements: !180)
!8212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8208, size: 32)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8187, file: !163, line: 68, baseType: !8214, size: 32, offset: 64)
!8214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8215, size: 32)
!8215 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !8216)
!8216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !8217)
!8217 = !{!8218}
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8216, file: !141, line: 232, baseType: !8219, size: 64)
!8219 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !8194)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8187, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8187, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!8222 = !DIDerivedType(tag: DW_TAG_member, scope: !8187, file: !163, line: 90, baseType: !8223, size: 16, offset: 112)
!8223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8187, file: !163, line: 90, size: 16, elements: !8224)
!8224 = !{!8225, !8230}
!8225 = !DIDerivedType(tag: DW_TAG_member, scope: !8223, file: !163, line: 91, baseType: !8226, size: 16)
!8226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8223, file: !163, line: 91, size: 16, elements: !8227)
!8227 = !{!8228, !8229}
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8226, file: !163, line: 96, baseType: !195, size: 8)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8226, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8223, file: !163, line: 100, baseType: !121, size: 16)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8187, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8187, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8187, file: !163, line: 131, baseType: !8234, size: 192, offset: 192)
!8234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !8235)
!8235 = !{!8236, !8237, !8243}
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8234, file: !141, line: 245, baseType: !8193, size: 64)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8234, file: !141, line: 246, baseType: !8238, size: 32, offset: 64)
!8238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !8239)
!8239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8240, size: 32)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{null, !8242}
!8242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8234, size: 32)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8234, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8184, file: !163, line: 250, baseType: !8245, size: 288, offset: 384)
!8245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !8246)
!8246 = !{!8247, !8248, !8249, !8250, !8251, !8252, !8253, !8254, !8255}
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8245, file: !214, line: 26, baseType: !108, size: 32)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8245, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8245, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8245, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8245, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8245, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8245, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8245, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8245, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8184, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8184, file: !163, line: 256, baseType: !8215, size: 64, offset: 704)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8184, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8184, file: !163, line: 300, baseType: !8260, size: 96, offset: 800)
!8260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !8261)
!8261 = !{!8262, !8263, !8264}
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8260, file: !163, line: 153, baseType: !22, size: 32)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8260, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8260, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8184, file: !163, line: 325, baseType: !8266, size: 32, offset: 896)
!8266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8267, size: 32)
!8267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !8268)
!8268 = !{!8269, !8275, !8276}
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8267, file: !137, line: 5074, baseType: !8270, size: 96)
!8270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !8271)
!8271 = !{!8272, !8273, !8274}
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8270, file: !240, line: 57, baseType: !243, size: 32)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8270, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8270, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8267, file: !137, line: 5075, baseType: !8215, size: 64, offset: 96)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8267, file: !137, line: 5076, baseType: !8277, offset: 160)
!8277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8184, file: !163, line: 343, baseType: !8279, size: 64, offset: 928)
!8279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !8280)
!8280 = !{!8281, !8282}
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8279, file: !214, line: 63, baseType: !108, size: 32)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8279, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!8283 = !{!8284}
!8284 = !DILocalVariable(name: "thread", arg: 1, scope: !8178, file: !8179, line: 27, type: !8182)
!8285 = !DILocation(line: 0, scope: !8178)
!8286 = !DILocation(line: 29, column: 6, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8178, file: !8179, line: 29, column: 6)
!8288 = !DILocation(line: 29, column: 15, scope: !8287)
!8289 = !DILocation(line: 29, column: 6, scope: !8178)
!8290 = !DILocation(line: 1031, column: 3, scope: !8291, inlinedAt: !8294)
!8291 = distinct !DISubprogram(name: "__get_IPSR", scope: !7280, file: !7280, line: 1027, type: !3574, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !8292)
!8292 = !{!8293}
!8293 = !DILocalVariable(name: "result", scope: !8291, file: !7280, line: 1029, type: !108)
!8294 = distinct !DILocation(line: 48, column: 10, scope: !8295, inlinedAt: !8299)
!8295 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !251)
!8296 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8297 = !DISubroutineType(types: !8298)
!8298 = !{!131}
!8299 = distinct !DILocation(line: 30, column: 7, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !8179, line: 30, column: 7)
!8301 = distinct !DILexicalBlock(scope: !8287, file: !8179, line: 29, column: 26)
!8302 = !{i64 2825766}
!8303 = !DILocation(line: 0, scope: !8291, inlinedAt: !8294)
!8304 = !DILocation(line: 48, column: 9, scope: !8295, inlinedAt: !8299)
!8305 = !DILocation(line: 30, column: 7, scope: !8301)
!8306 = !DILocation(line: 42, column: 14, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8300, file: !8179, line: 30, column: 25)
!8308 = !DILocation(line: 48, column: 15, scope: !8307)
!8309 = !DILocation(line: 49, column: 3, scope: !8307)
!8310 = !DILocation(line: 52, column: 2, scope: !8178)
!8311 = !DILocation(line: 53, column: 1, scope: !8178)
!8312 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !486, file: !486, line: 127, type: !334, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !251)
!8313 = !DILocation(line: 134, column: 2, scope: !8312)
!8314 = !DILocation(line: 156, column: 1, scope: !8312)
!8315 = !DILocation(line: 0, scope: !485)
!8316 = !DILocation(line: 289, column: 36, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !485, file: !486, line: 285, column: 2)
!8318 = !DILocation(line: 289, column: 42, scope: !8317)
!8319 = !DILocation(line: 300, column: 36, scope: !485)
!8320 = !DILocation(line: 301, column: 35, scope: !485)
!8321 = !DILocation(line: 302, column: 37, scope: !485)
!8322 = !DILocation(line: 311, column: 2, scope: !485)
!8323 = !DILocation(line: 316, column: 1, scope: !485)
!8324 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !652, file: !652, line: 180, type: !334, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8325 = !DILocation(line: 188, column: 12, scope: !8324)
!8326 = !DILocation(line: 271, column: 3, scope: !8327, inlinedAt: !8328)
!8327 = distinct !DISubprogram(name: "__DSB", scope: !7280, file: !7280, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8328 = distinct !DILocation(line: 192, column: 2, scope: !8324)
!8329 = !{i64 2985913}
!8330 = !DILocation(line: 260, column: 3, scope: !8331, inlinedAt: !8332)
!8331 = distinct !DISubprogram(name: "__ISB", scope: !7280, file: !7280, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8332 = distinct !DILocation(line: 193, column: 2, scope: !8324)
!8333 = !{i64 2985630}
!8334 = !DILocation(line: 194, column: 1, scope: !8324)
!8335 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !652, file: !652, line: 199, type: !334, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8336 = !DILocation(line: 282, column: 3, scope: !8337, inlinedAt: !8338)
!8337 = distinct !DISubprogram(name: "__DMB", scope: !7280, file: !7280, line: 280, type: !334, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8338 = distinct !DILocation(line: 202, column: 2, scope: !8335)
!8339 = !{i64 2986189}
!8340 = !DILocation(line: 205, column: 12, scope: !8335)
!8341 = !DILocation(line: 206, column: 1, scope: !8335)
!8342 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !652, file: !652, line: 275, type: !8343, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8356)
!8343 = !DISubroutineType(types: !8344)
!8344 = !{null, !8345, !1884, !7546, !7546}
!8345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8346, size: 32)
!8346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8347)
!8347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !8348)
!8348 = !{!8349, !8350, !8351}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8347, file: !596, line: 53, baseType: !22, size: 32)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8347, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8347, file: !596, line: 55, baseType: !8352, size: 32, offset: 64)
!8352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !8353)
!8353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !8354)
!8354 = !{!8355}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8353, file: !602, line: 150, baseType: !108, size: 32)
!8356 = !{!8357, !8358, !8359, !8360}
!8357 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8342, file: !652, line: 276, type: !8345)
!8358 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8342, file: !652, line: 276, type: !1884)
!8359 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8342, file: !652, line: 277, type: !7546)
!8360 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8342, file: !652, line: 277, type: !7546)
!8361 = !DILocation(line: 0, scope: !8342)
!8362 = !DILocation(line: 279, column: 6, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8342, file: !652, line: 279, column: 6)
!8364 = !DILocation(line: 285, column: 1, scope: !8342)
!8365 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8366, file: !8366, line: 220, type: !8367, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8369)
!8366 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8367 = !DISubroutineType(types: !8368)
!8368 = !{!103, !8345, !1884, !7546, !7546}
!8369 = !{!8370, !8371, !8372, !8373, !8374}
!8370 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8365, file: !8366, line: 221, type: !8345)
!8371 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8365, file: !8366, line: 221, type: !1884)
!8372 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8365, file: !8366, line: 222, type: !7546)
!8373 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8365, file: !8366, line: 223, type: !7546)
!8374 = !DILocalVariable(name: "mpu_reg_index", scope: !8365, file: !8366, line: 225, type: !103)
!8375 = !DILocation(line: 0, scope: !8365)
!8376 = !DILocation(line: 225, column: 22, scope: !8365)
!8377 = !DILocation(line: 233, column: 18, scope: !8365)
!8378 = !DILocation(line: 236, column: 23, scope: !8365)
!8379 = !DILocation(line: 236, column: 21, scope: !8365)
!8380 = !DILocation(line: 238, column: 2, scope: !8365)
!8381 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !652, file: !652, line: 105, type: !8382, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8384)
!8382 = !DISubroutineType(types: !8383)
!8383 = !{!103, !8345, !185, !185, !131}
!8384 = !{!8385, !8386, !8387, !8388, !8389, !8390}
!8385 = !DILocalVariable(name: "regions", arg: 1, scope: !8381, file: !652, line: 106, type: !8345)
!8386 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8381, file: !652, line: 106, type: !185)
!8387 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8381, file: !652, line: 106, type: !185)
!8388 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8381, file: !652, line: 107, type: !131)
!8389 = !DILocalVariable(name: "i", scope: !8381, file: !652, line: 109, type: !103)
!8390 = !DILocalVariable(name: "reg_index", scope: !8381, file: !652, line: 110, type: !103)
!8391 = !DILocation(line: 0, scope: !8381)
!8392 = !DILocation(line: 110, column: 18, scope: !8381)
!8393 = !DILocation(line: 112, column: 16, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !652, line: 112, column: 2)
!8395 = distinct !DILexicalBlock(scope: !8381, file: !652, line: 112, column: 2)
!8396 = !DILocation(line: 112, column: 2, scope: !8395)
!8397 = !DILocation(line: 113, column: 7, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !652, line: 113, column: 7)
!8399 = distinct !DILexicalBlock(scope: !8394, file: !652, line: 112, column: 36)
!8400 = !DILocation(line: 113, column: 18, scope: !8398)
!8401 = !DILocation(line: 113, column: 23, scope: !8398)
!8402 = !DILocation(line: 113, column: 7, scope: !8399)
!8403 = !DILocation(line: 118, column: 23, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8399, file: !652, line: 118, column: 7)
!8405 = !DILocation(line: 119, column: 7, scope: !8404)
!8406 = !DILocation(line: 118, column: 7, scope: !8399)
!8407 = !DILocation(line: 120, column: 4, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !652, line: 120, column: 4)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !652, line: 120, column: 4)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !652, line: 120, column: 4)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !652, line: 120, column: 4)
!8412 = distinct !DILexicalBlock(scope: !8404, file: !652, line: 119, column: 45)
!8413 = !DILocation(line: 121, column: 4, scope: !8412)
!8414 = !DILocation(line: 124, column: 36, scope: !8399)
!8415 = !DILocation(line: 124, column: 15, scope: !8399)
!8416 = !DILocation(line: 126, column: 17, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8399, file: !652, line: 126, column: 7)
!8418 = !DILocation(line: 126, column: 7, scope: !8399)
!8419 = !DILocation(line: 131, column: 12, scope: !8399)
!8420 = !DILocation(line: 132, column: 2, scope: !8399)
!8421 = !DILocation(line: 112, column: 32, scope: !8394)
!8422 = distinct !{!8422, !8396, !8423}
!8423 = !DILocation(line: 132, column: 2, scope: !8395)
!8424 = !DILocation(line: 135, column: 1, scope: !8381)
!8425 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8366, file: !8366, line: 63, type: !8426, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8428)
!8426 = !DISubroutineType(types: !8427)
!8427 = !{!103, !8345}
!8428 = !{!8429, !8430}
!8429 = !DILocalVariable(name: "part", arg: 1, scope: !8425, file: !8366, line: 63, type: !8345)
!8430 = !DILocalVariable(name: "partition_is_valid", scope: !8425, file: !8366, line: 70, type: !103)
!8431 = !DILocation(line: 0, scope: !8425)
!8432 = !DILocation(line: 71, column: 11, scope: !8425)
!8433 = !DILocation(line: 71, column: 37, scope: !8425)
!8434 = !DILocation(line: 72, column: 3, scope: !8425)
!8435 = !DILocation(line: 71, column: 30, scope: !8425)
!8436 = !DILocation(line: 75, column: 11, scope: !8425)
!8437 = !DILocation(line: 75, column: 17, scope: !8425)
!8438 = !DILocation(line: 75, column: 38, scope: !8425)
!8439 = !DILocation(line: 77, column: 2, scope: !8425)
!8440 = distinct !DISubprogram(name: "mpu_configure_region", scope: !652, file: !652, line: 79, type: !8441, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8443)
!8441 = !DISubroutineType(types: !8442)
!8442 = !{!103, !1884, !8345}
!8443 = !{!8444, !8445, !8446}
!8444 = !DILocalVariable(name: "index", arg: 1, scope: !8440, file: !652, line: 79, type: !1884)
!8445 = !DILocalVariable(name: "new_region", arg: 2, scope: !8440, file: !652, line: 80, type: !8345)
!8446 = !DILocalVariable(name: "region_conf", scope: !8440, file: !652, line: 82, type: !641)
!8447 = !DILocation(line: 0, scope: !8440)
!8448 = !DILocation(line: 82, column: 2, scope: !8440)
!8449 = !DILocation(line: 82, column: 24, scope: !8440)
!8450 = !DILocation(line: 87, column: 33, scope: !8440)
!8451 = !DILocation(line: 87, column: 14, scope: !8440)
!8452 = !DILocation(line: 87, column: 19, scope: !8440)
!8453 = !DILocation(line: 91, column: 55, scope: !8440)
!8454 = !DILocation(line: 92, column: 16, scope: !8440)
!8455 = !DILocation(line: 92, column: 53, scope: !8440)
!8456 = !DILocation(line: 91, column: 2, scope: !8440)
!8457 = !DILocation(line: 95, column: 9, scope: !8440)
!8458 = !DILocation(line: 97, column: 1, scope: !8440)
!8459 = !DILocation(line: 95, column: 2, scope: !8440)
!8460 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8366, file: !8366, line: 113, type: !8461, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8466)
!8461 = !DISubroutineType(types: !8462)
!8462 = !{null, !8463, !8464, !108, !108}
!8463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!8464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8465, size: 32)
!8465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8352)
!8466 = !{!8467, !8468, !8469, !8470}
!8467 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8460, file: !8366, line: 114, type: !8463)
!8468 = !DILocalVariable(name: "attr", arg: 2, scope: !8460, file: !8366, line: 115, type: !8464)
!8469 = !DILocalVariable(name: "base", arg: 3, scope: !8460, file: !8366, line: 115, type: !108)
!8470 = !DILocalVariable(name: "size", arg: 4, scope: !8460, file: !8366, line: 115, type: !108)
!8471 = !DILocation(line: 0, scope: !8460)
!8472 = !DILocation(line: 127, column: 23, scope: !8460)
!8473 = !DILocation(line: 127, column: 35, scope: !8460)
!8474 = !DILocation(line: 127, column: 33, scope: !8460)
!8475 = !DILocation(line: 127, column: 10, scope: !8460)
!8476 = !DILocation(line: 127, column: 15, scope: !8460)
!8477 = !DILocation(line: 129, column: 1, scope: !8460)
!8478 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !652, file: !652, line: 57, type: !8479, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8481)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{!103, !1884, !639}
!8481 = !{!8482, !8483}
!8482 = !DILocalVariable(name: "index", arg: 1, scope: !8478, file: !652, line: 57, type: !1884)
!8483 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8478, file: !652, line: 58, type: !639)
!8484 = !DILocation(line: 0, scope: !8478)
!8485 = !DILocation(line: 61, column: 6, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8478, file: !652, line: 61, column: 6)
!8487 = !DILocation(line: 61, column: 12, scope: !8486)
!8488 = !DILocation(line: 61, column: 6, scope: !8478)
!8489 = !DILocation(line: 64, column: 3, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !652, line: 64, column: 3)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !652, line: 64, column: 3)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !652, line: 64, column: 3)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !652, line: 64, column: 3)
!8494 = distinct !DILexicalBlock(scope: !8486, file: !652, line: 61, column: 40)
!8495 = !DILocation(line: 65, column: 3, scope: !8494)
!8496 = !DILocation(line: 71, column: 2, scope: !8478)
!8497 = !DILocation(line: 73, column: 2, scope: !8478)
!8498 = !DILocation(line: 74, column: 1, scope: !8478)
!8499 = distinct !DISubprogram(name: "region_init", scope: !8366, file: !8366, line: 29, type: !8500, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8502)
!8500 = !DISubroutineType(types: !8501)
!8501 = !{null, !7546, !639}
!8502 = !{!8503, !8504}
!8503 = !DILocalVariable(name: "index", arg: 1, scope: !8499, file: !8366, line: 29, type: !7546)
!8504 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8499, file: !8366, line: 30, type: !639)
!8505 = !DILocation(line: 0, scope: !8499)
!8506 = !DILocation(line: 33, column: 2, scope: !8499)
!8507 = !DILocation(line: 47, column: 28, scope: !8499)
!8508 = !DILocation(line: 47, column: 33, scope: !8499)
!8509 = !DILocation(line: 48, column: 26, scope: !8499)
!8510 = !DILocation(line: 47, column: 12, scope: !8499)
!8511 = !DILocation(line: 49, column: 32, scope: !8499)
!8512 = !DILocation(line: 49, column: 37, scope: !8499)
!8513 = !DILocation(line: 49, column: 12, scope: !8499)
!8514 = !DILocation(line: 53, column: 1, scope: !8499)
!8515 = distinct !DISubprogram(name: "set_region_number", scope: !8516, file: !8516, line: 32, type: !7369, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8517)
!8516 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8517 = !{!8518}
!8518 = !DILocalVariable(name: "index", arg: 1, scope: !8515, file: !8516, line: 32, type: !108)
!8519 = !DILocation(line: 0, scope: !8515)
!8520 = !DILocation(line: 34, column: 11, scope: !8515)
!8521 = !DILocation(line: 35, column: 1, scope: !8515)
!8522 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8366, file: !8366, line: 88, type: !8523, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8525)
!8523 = !DISubroutineType(types: !8524)
!8524 = !{!108, !108}
!8525 = !{!8526}
!8526 = !DILocalVariable(name: "size", arg: 1, scope: !8522, file: !8366, line: 88, type: !108)
!8527 = !DILocation(line: 0, scope: !8522)
!8528 = !DILocation(line: 91, column: 11, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8522, file: !8366, line: 91, column: 6)
!8530 = !DILocation(line: 91, column: 6, scope: !8522)
!8531 = !DILocation(line: 100, column: 11, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8522, file: !8366, line: 100, column: 6)
!8533 = !DILocation(line: 100, column: 6, scope: !8522)
!8534 = !DILocation(line: 104, column: 35, scope: !8522)
!8535 = !DILocation(line: 104, column: 16, scope: !8522)
!8536 = !DILocation(line: 104, column: 50, scope: !8522)
!8537 = !DILocation(line: 104, column: 72, scope: !8522)
!8538 = !DILocation(line: 104, column: 2, scope: !8522)
!8539 = !DILocation(line: 106, column: 1, scope: !8522)
!8540 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !652, file: !652, line: 307, type: !8541, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8543)
!8541 = !DISubroutineType(types: !8542)
!8542 = !{null, !8345, !185}
!8543 = !{!8544, !8545}
!8544 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8540, file: !652, line: 308, type: !8345)
!8545 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8540, file: !652, line: 308, type: !185)
!8546 = !DILocation(line: 0, scope: !8540)
!8547 = !DILocation(line: 310, column: 6, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8540, file: !652, line: 310, column: 6)
!8549 = !DILocation(line: 316, column: 1, scope: !8540)
!8550 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8366, file: !8366, line: 249, type: !8551, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8553)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{!103, !8345, !185}
!8553 = !{!8554, !8555, !8556, !8557}
!8554 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8550, file: !8366, line: 250, type: !8345)
!8555 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8550, file: !8366, line: 250, type: !185)
!8556 = !DILocalVariable(name: "mpu_reg_index", scope: !8550, file: !8366, line: 252, type: !103)
!8557 = !DILocalVariable(name: "i", scope: !8558, file: !8366, line: 264, type: !103)
!8558 = distinct !DILexicalBlock(scope: !8559, file: !8366, line: 264, column: 3)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !8366, line: 261, column: 32)
!8560 = distinct !DILexicalBlock(scope: !8550, file: !8366, line: 261, column: 6)
!8561 = !DILocation(line: 0, scope: !8550)
!8562 = !DILocation(line: 252, column: 22, scope: !8550)
!8563 = !DILocation(line: 258, column: 18, scope: !8550)
!8564 = !DILocation(line: 261, column: 20, scope: !8560)
!8565 = !DILocation(line: 261, column: 6, scope: !8550)
!8566 = !DILocation(line: 0, scope: !8558)
!8567 = !DILocation(line: 265, column: 4, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8569, file: !8366, line: 264, column: 59)
!8569 = distinct !DILexicalBlock(scope: !8558, file: !8366, line: 264, column: 3)
!8570 = !DILocation(line: 264, column: 55, scope: !8569)
!8571 = !DILocation(line: 264, column: 33, scope: !8569)
!8572 = !DILocation(line: 264, column: 3, scope: !8558)
!8573 = distinct !{!8573, !8572, !8574}
!8574 = !DILocation(line: 266, column: 3, scope: !8558)
!8575 = !DILocation(line: 269, column: 2, scope: !8550)
!8576 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8577, file: !8577, line: 218, type: !7369, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8578)
!8577 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8578 = !{!8579}
!8579 = !DILocalVariable(name: "rnr", arg: 1, scope: !8576, file: !8577, line: 218, type: !108)
!8580 = !DILocation(line: 0, scope: !8576)
!8581 = !DILocation(line: 220, column: 12, scope: !8576)
!8582 = !DILocation(line: 221, column: 13, scope: !8576)
!8583 = !DILocation(line: 222, column: 1, scope: !8576)
!8584 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !652, file: !652, line: 326, type: !8585, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8587)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{!103}
!8587 = !{!8588}
!8588 = !DILocalVariable(name: "r_index", scope: !8584, file: !652, line: 328, type: !108)
!8589 = !DILocation(line: 330, column: 17, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8584, file: !652, line: 330, column: 6)
!8591 = !DILocation(line: 330, column: 29, scope: !8590)
!8592 = !DILocation(line: 330, column: 6, scope: !8584)
!8593 = !DILocation(line: 347, column: 2, scope: !8584)
!8594 = !DILocation(line: 0, scope: !8584)
!8595 = !DILocation(line: 364, column: 29, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8597, file: !652, line: 364, column: 2)
!8597 = distinct !DILexicalBlock(scope: !8584, file: !652, line: 364, column: 2)
!8598 = !DILocation(line: 364, column: 2, scope: !8597)
!8599 = !DILocation(line: 365, column: 25, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8596, file: !652, line: 364, column: 66)
!8601 = !DILocation(line: 365, column: 3, scope: !8600)
!8602 = !DILocation(line: 364, column: 62, scope: !8596)
!8603 = distinct !{!8603, !8598, !8604}
!8604 = !DILocation(line: 366, column: 2, scope: !8597)
!8605 = !DILocation(line: 369, column: 23, scope: !8584)
!8606 = !DILocation(line: 369, column: 21, scope: !8584)
!8607 = !DILocation(line: 372, column: 2, scope: !8584)
!8608 = !DILocation(line: 443, column: 2, scope: !8584)
!8609 = !DILocation(line: 444, column: 1, scope: !8584)
!8610 = distinct !DISubprogram(name: "strcpy", scope: !8611, file: !8611, line: 20, type: !8612, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8616)
!8611 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8612 = !DISubroutineType(types: !8613)
!8613 = !{!277, !8614, !8615}
!8614 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !277)
!8615 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !337)
!8616 = !{!8617, !8618, !8619}
!8617 = !DILocalVariable(name: "d", arg: 1, scope: !8610, file: !8611, line: 20, type: !8614)
!8618 = !DILocalVariable(name: "s", arg: 2, scope: !8610, file: !8611, line: 20, type: !8615)
!8619 = !DILocalVariable(name: "dest", scope: !8610, file: !8611, line: 22, type: !277)
!8620 = !DILocation(line: 0, scope: !8610)
!8621 = !DILocation(line: 24, column: 9, scope: !8610)
!8622 = !DILocation(line: 24, column: 12, scope: !8610)
!8623 = !DILocation(line: 24, column: 2, scope: !8610)
!8624 = !DILocation(line: 25, column: 6, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8610, file: !8611, line: 24, column: 21)
!8626 = !DILocation(line: 26, column: 4, scope: !8625)
!8627 = !DILocation(line: 27, column: 4, scope: !8625)
!8628 = distinct !{!8628, !8623, !8629}
!8629 = !DILocation(line: 28, column: 2, scope: !8610)
!8630 = !DILocation(line: 30, column: 5, scope: !8610)
!8631 = !DILocation(line: 32, column: 2, scope: !8610)
!8632 = distinct !DISubprogram(name: "strncpy", scope: !8611, file: !8611, line: 42, type: !8633, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8635)
!8633 = !DISubroutineType(types: !8634)
!8634 = !{!277, !8614, !8615, !132}
!8635 = !{!8636, !8637, !8638, !8639}
!8636 = !DILocalVariable(name: "d", arg: 1, scope: !8632, file: !8611, line: 42, type: !8614)
!8637 = !DILocalVariable(name: "s", arg: 2, scope: !8632, file: !8611, line: 42, type: !8615)
!8638 = !DILocalVariable(name: "n", arg: 3, scope: !8632, file: !8611, line: 42, type: !132)
!8639 = !DILocalVariable(name: "dest", scope: !8632, file: !8611, line: 44, type: !277)
!8640 = !DILocation(line: 0, scope: !8632)
!8641 = !DILocation(line: 46, column: 12, scope: !8632)
!8642 = !DILocation(line: 46, column: 17, scope: !8632)
!8643 = !DILocation(line: 46, column: 20, scope: !8632)
!8644 = !DILocation(line: 46, column: 23, scope: !8632)
!8645 = !DILocation(line: 46, column: 2, scope: !8632)
!8646 = !DILocation(line: 47, column: 6, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8632, file: !8611, line: 46, column: 32)
!8648 = !DILocation(line: 48, column: 4, scope: !8647)
!8649 = !DILocation(line: 49, column: 4, scope: !8647)
!8650 = !DILocation(line: 50, column: 4, scope: !8647)
!8651 = distinct !{!8651, !8645, !8652}
!8652 = !DILocation(line: 51, column: 2, scope: !8632)
!8653 = !DILocation(line: 54, column: 6, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8632, file: !8611, line: 53, column: 16)
!8655 = !DILocation(line: 55, column: 4, scope: !8654)
!8656 = !DILocation(line: 56, column: 4, scope: !8654)
!8657 = !DILocation(line: 53, column: 11, scope: !8632)
!8658 = !DILocation(line: 53, column: 2, scope: !8632)
!8659 = distinct !{!8659, !8658, !8660}
!8660 = !DILocation(line: 57, column: 2, scope: !8632)
!8661 = !DILocation(line: 59, column: 2, scope: !8632)
!8662 = distinct !DISubprogram(name: "strchr", scope: !8611, file: !8611, line: 69, type: !8663, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8665)
!8663 = !DISubroutineType(types: !8664)
!8664 = !{!277, !337, !103}
!8665 = !{!8666, !8667, !8668}
!8666 = !DILocalVariable(name: "s", arg: 1, scope: !8662, file: !8611, line: 69, type: !337)
!8667 = !DILocalVariable(name: "c", arg: 2, scope: !8662, file: !8611, line: 69, type: !103)
!8668 = !DILocalVariable(name: "tmp", scope: !8662, file: !8611, line: 71, type: !278)
!8669 = !DILocation(line: 0, scope: !8662)
!8670 = !DILocation(line: 73, column: 2, scope: !8662)
!8671 = !DILocation(line: 73, column: 10, scope: !8662)
!8672 = !DILocation(line: 73, column: 13, scope: !8662)
!8673 = !DILocation(line: 73, column: 21, scope: !8662)
!8674 = !DILocation(line: 74, column: 4, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8662, file: !8611, line: 73, column: 38)
!8676 = distinct !{!8676, !8670, !8677}
!8677 = !DILocation(line: 75, column: 2, scope: !8662)
!8678 = !DILocation(line: 77, column: 9, scope: !8662)
!8679 = !DILocation(line: 77, column: 2, scope: !8662)
!8680 = distinct !DISubprogram(name: "strrchr", scope: !8611, file: !8611, line: 87, type: !8663, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8681)
!8681 = !{!8682, !8683, !8684}
!8682 = !DILocalVariable(name: "s", arg: 1, scope: !8680, file: !8611, line: 87, type: !337)
!8683 = !DILocalVariable(name: "c", arg: 2, scope: !8680, file: !8611, line: 87, type: !103)
!8684 = !DILocalVariable(name: "match", scope: !8680, file: !8611, line: 89, type: !277)
!8685 = !DILocation(line: 0, scope: !8680)
!8686 = !DILocation(line: 91, column: 2, scope: !8680)
!8687 = !DILocation(line: 92, column: 7, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !8611, line: 92, column: 7)
!8689 = distinct !DILexicalBlock(scope: !8680, file: !8611, line: 91, column: 5)
!8690 = !DILocation(line: 92, column: 10, scope: !8688)
!8691 = !DILocation(line: 92, column: 7, scope: !8689)
!8692 = !DILocation(line: 95, column: 13, scope: !8680)
!8693 = !DILocation(line: 95, column: 2, scope: !8689)
!8694 = distinct !{!8694, !8686, !8695}
!8695 = !DILocation(line: 95, column: 15, scope: !8680)
!8696 = !DILocation(line: 97, column: 2, scope: !8680)
!8697 = distinct !DISubprogram(name: "strlen", scope: !8611, file: !8611, line: 107, type: !8698, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8700)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!132, !337}
!8700 = !{!8701, !8702}
!8701 = !DILocalVariable(name: "s", arg: 1, scope: !8697, file: !8611, line: 107, type: !337)
!8702 = !DILocalVariable(name: "n", scope: !8697, file: !8611, line: 109, type: !132)
!8703 = !DILocation(line: 0, scope: !8697)
!8704 = !DILocation(line: 111, column: 9, scope: !8697)
!8705 = !DILocation(line: 111, column: 12, scope: !8697)
!8706 = !DILocation(line: 111, column: 2, scope: !8697)
!8707 = !DILocation(line: 112, column: 4, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8697, file: !8611, line: 111, column: 21)
!8709 = !DILocation(line: 113, column: 4, scope: !8708)
!8710 = distinct !{!8710, !8706, !8711}
!8711 = !DILocation(line: 114, column: 2, scope: !8697)
!8712 = !DILocation(line: 116, column: 2, scope: !8697)
!8713 = distinct !DISubprogram(name: "strnlen", scope: !8611, file: !8611, line: 126, type: !8714, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8716)
!8714 = !DISubroutineType(types: !8715)
!8715 = !{!132, !337, !132}
!8716 = !{!8717, !8718, !8719}
!8717 = !DILocalVariable(name: "s", arg: 1, scope: !8713, file: !8611, line: 126, type: !337)
!8718 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8713, file: !8611, line: 126, type: !132)
!8719 = !DILocalVariable(name: "n", scope: !8713, file: !8611, line: 128, type: !132)
!8720 = !DILocation(line: 0, scope: !8713)
!8721 = !DILocation(line: 130, column: 9, scope: !8713)
!8722 = !DILocation(line: 130, column: 12, scope: !8713)
!8723 = !DILocation(line: 130, column: 20, scope: !8713)
!8724 = !DILocation(line: 130, column: 2, scope: !8713)
!8725 = !DILocation(line: 131, column: 4, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8713, file: !8611, line: 130, column: 35)
!8727 = !DILocation(line: 132, column: 4, scope: !8726)
!8728 = distinct !{!8728, !8724, !8729}
!8729 = !DILocation(line: 133, column: 2, scope: !8713)
!8730 = !DILocation(line: 135, column: 2, scope: !8713)
!8731 = distinct !DISubprogram(name: "strcmp", scope: !8611, file: !8611, line: 145, type: !8732, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8734)
!8732 = !DISubroutineType(types: !8733)
!8733 = !{!103, !337, !337}
!8734 = !{!8735, !8736}
!8735 = !DILocalVariable(name: "s1", arg: 1, scope: !8731, file: !8611, line: 145, type: !337)
!8736 = !DILocalVariable(name: "s2", arg: 2, scope: !8731, file: !8611, line: 145, type: !337)
!8737 = !DILocation(line: 0, scope: !8731)
!8738 = !DILocation(line: 147, column: 10, scope: !8731)
!8739 = !DILocation(line: 147, column: 17, scope: !8731)
!8740 = !DILocation(line: 147, column: 14, scope: !8731)
!8741 = !DILocation(line: 147, column: 22, scope: !8731)
!8742 = !DILocation(line: 148, column: 5, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8731, file: !8611, line: 147, column: 40)
!8744 = !DILocation(line: 149, column: 5, scope: !8743)
!8745 = distinct !{!8745, !8746, !8747}
!8746 = !DILocation(line: 147, column: 2, scope: !8731)
!8747 = !DILocation(line: 150, column: 2, scope: !8731)
!8748 = !DILocation(line: 152, column: 9, scope: !8731)
!8749 = !DILocation(line: 152, column: 15, scope: !8731)
!8750 = !DILocation(line: 152, column: 13, scope: !8731)
!8751 = !DILocation(line: 152, column: 2, scope: !8731)
!8752 = distinct !DISubprogram(name: "strncmp", scope: !8611, file: !8611, line: 162, type: !8753, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8755)
!8753 = !DISubroutineType(types: !8754)
!8754 = !{!103, !337, !337, !132}
!8755 = !{!8756, !8757, !8758}
!8756 = !DILocalVariable(name: "s1", arg: 1, scope: !8752, file: !8611, line: 162, type: !337)
!8757 = !DILocalVariable(name: "s2", arg: 2, scope: !8752, file: !8611, line: 162, type: !337)
!8758 = !DILocalVariable(name: "n", arg: 3, scope: !8752, file: !8611, line: 162, type: !132)
!8759 = !DILocation(line: 0, scope: !8752)
!8760 = !DILocation(line: 164, column: 17, scope: !8752)
!8761 = !DILocation(line: 164, column: 21, scope: !8752)
!8762 = !DILocation(line: 164, column: 28, scope: !8752)
!8763 = !DILocation(line: 164, column: 25, scope: !8752)
!8764 = !DILocation(line: 164, column: 33, scope: !8752)
!8765 = !DILocation(line: 165, column: 5, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8752, file: !8611, line: 164, column: 51)
!8767 = !DILocation(line: 166, column: 5, scope: !8766)
!8768 = !DILocation(line: 167, column: 4, scope: !8766)
!8769 = distinct !{!8769, !8770, !8771}
!8770 = !DILocation(line: 164, column: 2, scope: !8752)
!8771 = !DILocation(line: 168, column: 2, scope: !8752)
!8772 = !DILocation(line: 170, column: 25, scope: !8752)
!8773 = !DILocation(line: 170, column: 31, scope: !8752)
!8774 = !DILocation(line: 170, column: 29, scope: !8752)
!8775 = !DILocation(line: 170, column: 9, scope: !8752)
!8776 = !DILocation(line: 170, column: 2, scope: !8752)
!8777 = distinct !DISubprogram(name: "strtok_r", scope: !8611, file: !8611, line: 180, type: !8778, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8780)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!277, !277, !337, !378}
!8780 = !{!8781, !8782, !8783, !8784, !8785}
!8781 = !DILocalVariable(name: "str", arg: 1, scope: !8777, file: !8611, line: 180, type: !277)
!8782 = !DILocalVariable(name: "sep", arg: 2, scope: !8777, file: !8611, line: 180, type: !337)
!8783 = !DILocalVariable(name: "state", arg: 3, scope: !8777, file: !8611, line: 180, type: !378)
!8784 = !DILocalVariable(name: "start", scope: !8777, file: !8611, line: 182, type: !277)
!8785 = !DILocalVariable(name: "end", scope: !8777, file: !8611, line: 182, type: !277)
!8786 = !DILocation(line: 0, scope: !8777)
!8787 = !DILocation(line: 184, column: 10, scope: !8777)
!8788 = !DILocation(line: 184, column: 22, scope: !8777)
!8789 = !DILocation(line: 187, column: 9, scope: !8777)
!8790 = !DILocation(line: 187, column: 16, scope: !8777)
!8791 = !DILocation(line: 187, column: 19, scope: !8777)
!8792 = !DILocation(line: 187, column: 2, scope: !8777)
!8793 = !DILocation(line: 188, column: 8, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8777, file: !8611, line: 187, column: 40)
!8795 = distinct !{!8795, !8792, !8796}
!8796 = !DILocation(line: 189, column: 2, scope: !8777)
!8797 = !DILocation(line: 198, column: 9, scope: !8777)
!8798 = !DILocation(line: 198, column: 18, scope: !8777)
!8799 = !DILocation(line: 198, column: 17, scope: !8777)
!8800 = !DILocation(line: 198, column: 2, scope: !8777)
!8801 = !DILocation(line: 199, column: 6, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8777, file: !8611, line: 198, column: 37)
!8803 = !DILocation(line: 198, column: 14, scope: !8777)
!8804 = distinct !{!8804, !8800, !8805}
!8805 = !DILocation(line: 200, column: 2, scope: !8777)
!8806 = !DILocation(line: 203, column: 8, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !8611, line: 202, column: 20)
!8808 = distinct !DILexicalBlock(scope: !8777, file: !8611, line: 202, column: 6)
!8809 = !DILocation(line: 204, column: 16, scope: !8807)
!8810 = !DILocation(line: 205, column: 2, scope: !8807)
!8811 = !DILocation(line: 210, column: 1, scope: !8777)
!8812 = distinct !DISubprogram(name: "strcat", scope: !8611, file: !8611, line: 212, type: !8612, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8813)
!8813 = !{!8814, !8815}
!8814 = !DILocalVariable(name: "dest", arg: 1, scope: !8812, file: !8611, line: 212, type: !8614)
!8815 = !DILocalVariable(name: "src", arg: 2, scope: !8812, file: !8611, line: 212, type: !8615)
!8816 = !DILocation(line: 0, scope: !8812)
!8817 = !DILocation(line: 214, column: 16, scope: !8812)
!8818 = !DILocation(line: 214, column: 14, scope: !8812)
!8819 = !DILocation(line: 214, column: 2, scope: !8812)
!8820 = !DILocation(line: 215, column: 2, scope: !8812)
!8821 = distinct !DISubprogram(name: "strncat", scope: !8611, file: !8611, line: 218, type: !8633, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8822)
!8822 = !{!8823, !8824, !8825, !8826, !8827}
!8823 = !DILocalVariable(name: "dest", arg: 1, scope: !8821, file: !8611, line: 218, type: !8614)
!8824 = !DILocalVariable(name: "src", arg: 2, scope: !8821, file: !8611, line: 218, type: !8615)
!8825 = !DILocalVariable(name: "n", arg: 3, scope: !8821, file: !8611, line: 219, type: !132)
!8826 = !DILocalVariable(name: "orig_dest", scope: !8821, file: !8611, line: 221, type: !277)
!8827 = !DILocalVariable(name: "len", scope: !8821, file: !8611, line: 222, type: !132)
!8828 = !DILocation(line: 0, scope: !8821)
!8829 = !DILocation(line: 222, column: 15, scope: !8821)
!8830 = !DILocation(line: 224, column: 7, scope: !8821)
!8831 = !DILocation(line: 225, column: 14, scope: !8821)
!8832 = !DILocation(line: 225, column: 19, scope: !8821)
!8833 = !DILocation(line: 225, column: 11, scope: !8821)
!8834 = !DILocation(line: 225, column: 23, scope: !8821)
!8835 = !DILocation(line: 225, column: 28, scope: !8821)
!8836 = !DILocation(line: 225, column: 2, scope: !8821)
!8837 = !DILocation(line: 226, column: 17, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8821, file: !8611, line: 225, column: 38)
!8839 = !DILocation(line: 226, column: 8, scope: !8838)
!8840 = !DILocation(line: 226, column: 11, scope: !8838)
!8841 = distinct !{!8841, !8836, !8842}
!8842 = !DILocation(line: 227, column: 2, scope: !8821)
!8843 = !DILocation(line: 228, column: 8, scope: !8821)
!8844 = !DILocation(line: 230, column: 2, scope: !8821)
!8845 = distinct !DISubprogram(name: "memcmp", scope: !8611, file: !8611, line: 239, type: !8846, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8848)
!8846 = !DISubroutineType(types: !8847)
!8847 = !{!103, !13, !13, !132}
!8848 = !{!8849, !8850, !8851, !8852, !8853}
!8849 = !DILocalVariable(name: "m1", arg: 1, scope: !8845, file: !8611, line: 239, type: !13)
!8850 = !DILocalVariable(name: "m2", arg: 2, scope: !8845, file: !8611, line: 239, type: !13)
!8851 = !DILocalVariable(name: "n", arg: 3, scope: !8845, file: !8611, line: 239, type: !132)
!8852 = !DILocalVariable(name: "c1", scope: !8845, file: !8611, line: 241, type: !337)
!8853 = !DILocalVariable(name: "c2", scope: !8845, file: !8611, line: 242, type: !337)
!8854 = !DILocation(line: 0, scope: !8845)
!8855 = !DILocation(line: 244, column: 7, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8845, file: !8611, line: 244, column: 6)
!8857 = !DILocation(line: 244, column: 6, scope: !8845)
!8858 = !DILocation(line: 248, column: 10, scope: !8845)
!8859 = !DILocation(line: 248, column: 14, scope: !8845)
!8860 = !DILocation(line: 248, column: 19, scope: !8845)
!8861 = !DILocation(line: 248, column: 2, scope: !8845)
!8862 = !DILocation(line: 248, column: 23, scope: !8845)
!8863 = !DILocation(line: 248, column: 30, scope: !8845)
!8864 = !DILocation(line: 248, column: 27, scope: !8845)
!8865 = !DILocation(line: 249, column: 5, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8845, file: !8611, line: 248, column: 36)
!8867 = !DILocation(line: 250, column: 5, scope: !8866)
!8868 = distinct !{!8868, !8861, !8869}
!8869 = !DILocation(line: 251, column: 2, scope: !8845)
!8870 = !DILocation(line: 253, column: 9, scope: !8845)
!8871 = !DILocation(line: 253, column: 15, scope: !8845)
!8872 = !DILocation(line: 253, column: 13, scope: !8845)
!8873 = !DILocation(line: 253, column: 2, scope: !8845)
!8874 = !DILocation(line: 254, column: 1, scope: !8845)
!8875 = distinct !DISubprogram(name: "memmove", scope: !8611, file: !8611, line: 263, type: !8876, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8878)
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!102, !102, !13, !132}
!8878 = !{!8879, !8880, !8881, !8882, !8883}
!8879 = !DILocalVariable(name: "d", arg: 1, scope: !8875, file: !8611, line: 263, type: !102)
!8880 = !DILocalVariable(name: "s", arg: 2, scope: !8875, file: !8611, line: 263, type: !13)
!8881 = !DILocalVariable(name: "n", arg: 3, scope: !8875, file: !8611, line: 263, type: !132)
!8882 = !DILocalVariable(name: "dest", scope: !8875, file: !8611, line: 265, type: !277)
!8883 = !DILocalVariable(name: "src", scope: !8875, file: !8611, line: 266, type: !337)
!8884 = !DILocation(line: 0, scope: !8875)
!8885 = !DILocation(line: 268, column: 21, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8875, file: !8611, line: 268, column: 6)
!8887 = !DILocation(line: 268, column: 28, scope: !8886)
!8888 = !DILocation(line: 268, column: 6, scope: !8875)
!8889 = !DILocation(line: 280, column: 12, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8886, file: !8611, line: 278, column: 9)
!8891 = !DILocation(line: 280, column: 3, scope: !8890)
!8892 = !DILocation(line: 275, column: 5, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !8611, line: 274, column: 17)
!8894 = distinct !DILexicalBlock(scope: !8886, file: !8611, line: 268, column: 33)
!8895 = !DILocation(line: 276, column: 14, scope: !8893)
!8896 = !DILocation(line: 276, column: 4, scope: !8893)
!8897 = !DILocation(line: 276, column: 12, scope: !8893)
!8898 = !DILocation(line: 274, column: 12, scope: !8894)
!8899 = !DILocation(line: 274, column: 3, scope: !8894)
!8900 = distinct !{!8900, !8899, !8901}
!8901 = !DILocation(line: 277, column: 3, scope: !8894)
!8902 = !DILocation(line: 281, column: 12, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8890, file: !8611, line: 280, column: 17)
!8904 = !DILocation(line: 281, column: 10, scope: !8903)
!8905 = !DILocation(line: 282, column: 8, scope: !8903)
!8906 = !DILocation(line: 283, column: 7, scope: !8903)
!8907 = !DILocation(line: 284, column: 5, scope: !8903)
!8908 = distinct !{!8908, !8891, !8909}
!8909 = !DILocation(line: 285, column: 3, scope: !8890)
!8910 = !DILocation(line: 288, column: 2, scope: !8875)
!8911 = distinct !DISubprogram(name: "memcpy", scope: !8611, file: !8611, line: 298, type: !8912, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8916)
!8912 = !DISubroutineType(types: !8913)
!8913 = !{!102, !8914, !8915, !132}
!8914 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8915 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8916 = !{!8917, !8918, !8919, !8920, !8921}
!8917 = !DILocalVariable(name: "d", arg: 1, scope: !8911, file: !8611, line: 298, type: !8914)
!8918 = !DILocalVariable(name: "s", arg: 2, scope: !8911, file: !8611, line: 298, type: !8915)
!8919 = !DILocalVariable(name: "n", arg: 3, scope: !8911, file: !8611, line: 298, type: !132)
!8920 = !DILocalVariable(name: "d_byte", scope: !8911, file: !8611, line: 302, type: !1071)
!8921 = !DILocalVariable(name: "s_byte", scope: !8911, file: !8611, line: 303, type: !2998)
!8922 = !DILocation(line: 0, scope: !8911)
!8923 = !DILocation(line: 337, column: 11, scope: !8911)
!8924 = !DILocation(line: 337, column: 2, scope: !8911)
!8925 = !DILocation(line: 338, column: 25, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8911, file: !8611, line: 337, column: 16)
!8927 = !DILocation(line: 338, column: 17, scope: !8926)
!8928 = !DILocation(line: 338, column: 11, scope: !8926)
!8929 = !DILocation(line: 338, column: 15, scope: !8926)
!8930 = !DILocation(line: 339, column: 4, scope: !8926)
!8931 = distinct !{!8931, !8924, !8932}
!8932 = !DILocation(line: 340, column: 2, scope: !8911)
!8933 = !DILocation(line: 342, column: 2, scope: !8911)
!8934 = distinct !DISubprogram(name: "memset", scope: !8611, file: !8611, line: 352, type: !8935, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8937)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!102, !102, !103, !132}
!8937 = !{!8938, !8939, !8940, !8941, !8942}
!8938 = !DILocalVariable(name: "buf", arg: 1, scope: !8934, file: !8611, line: 352, type: !102)
!8939 = !DILocalVariable(name: "c", arg: 2, scope: !8934, file: !8611, line: 352, type: !103)
!8940 = !DILocalVariable(name: "n", arg: 3, scope: !8934, file: !8611, line: 352, type: !132)
!8941 = !DILocalVariable(name: "d_byte", scope: !8934, file: !8611, line: 356, type: !1071)
!8942 = !DILocalVariable(name: "c_byte", scope: !8934, file: !8611, line: 357, type: !186)
!8943 = !DILocation(line: 0, scope: !8934)
!8944 = !DILocation(line: 357, column: 25, scope: !8934)
!8945 = !DILocation(line: 389, column: 11, scope: !8934)
!8946 = !DILocation(line: 389, column: 2, scope: !8934)
!8947 = !DILocation(line: 390, column: 11, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8934, file: !8611, line: 389, column: 16)
!8949 = !DILocation(line: 390, column: 15, scope: !8948)
!8950 = !DILocation(line: 391, column: 4, scope: !8948)
!8951 = distinct !{!8951, !8946, !8952}
!8952 = !DILocation(line: 392, column: 2, scope: !8934)
!8953 = !DILocation(line: 394, column: 2, scope: !8934)
!8954 = distinct !DISubprogram(name: "memchr", scope: !8611, file: !8611, line: 404, type: !8955, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8957)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!102, !13, !103, !132}
!8957 = !{!8958, !8959, !8960, !8961}
!8958 = !DILocalVariable(name: "s", arg: 1, scope: !8954, file: !8611, line: 404, type: !13)
!8959 = !DILocalVariable(name: "c", arg: 2, scope: !8954, file: !8611, line: 404, type: !103)
!8960 = !DILocalVariable(name: "n", arg: 3, scope: !8954, file: !8611, line: 404, type: !132)
!8961 = !DILocalVariable(name: "p", scope: !8962, file: !8611, line: 407, type: !2998)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !8611, line: 406, column: 14)
!8963 = distinct !DILexicalBlock(scope: !8954, file: !8611, line: 406, column: 6)
!8964 = !DILocation(line: 0, scope: !8954)
!8965 = !DILocation(line: 406, column: 8, scope: !8963)
!8966 = !DILocation(line: 406, column: 6, scope: !8954)
!8967 = !DILocation(line: 409, column: 3, scope: !8962)
!8968 = !DILocation(line: 0, scope: !8962)
!8969 = !DILocation(line: 410, column: 8, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !8611, line: 410, column: 8)
!8971 = distinct !DILexicalBlock(scope: !8962, file: !8611, line: 409, column: 6)
!8972 = !DILocation(line: 410, column: 13, scope: !8970)
!8973 = !DILocation(line: 410, column: 8, scope: !8971)
!8974 = distinct !{!8974, !8967, !8975}
!8975 = !DILocation(line: 414, column: 20, scope: !8962)
!8976 = !DILocation(line: 417, column: 2, scope: !8954)
!8977 = !DILocation(line: 418, column: 1, scope: !8954)
!8978 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !662, file: !662, line: 23, type: !4488, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !8979)
!8979 = !{!8980}
!8980 = !DILocalVariable(name: "hook", arg: 1, scope: !8978, file: !662, line: 23, type: !395)
!8981 = !DILocation(line: 0, scope: !8978)
!8982 = !DILocation(line: 25, column: 15, scope: !8978)
!8983 = !DILocation(line: 26, column: 1, scope: !8978)
!8984 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !662, file: !662, line: 14, type: !396, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !8985)
!8985 = !{!8986}
!8986 = !DILocalVariable(name: "c", arg: 1, scope: !8984, file: !662, line: 14, type: !103)
!8987 = !DILocation(line: 0, scope: !8984)
!8988 = !DILocation(line: 18, column: 2, scope: !8984)
!8989 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !662, file: !662, line: 28, type: !8990, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !8992)
!8990 = !DISubroutineType(types: !8991)
!8991 = !{!103, !103, !658}
!8992 = !{!8993, !8994}
!8993 = !DILocalVariable(name: "c", arg: 1, scope: !8989, file: !662, line: 28, type: !103)
!8994 = !DILocalVariable(name: "stream", arg: 2, scope: !8989, file: !662, line: 28, type: !658)
!8995 = !DILocation(line: 0, scope: !8989)
!8996 = !DILocation(line: 30, column: 27, scope: !8989)
!8997 = !DILocation(line: 30, column: 50, scope: !8989)
!8998 = !DILocation(line: 30, column: 9, scope: !8989)
!8999 = !DILocation(line: 30, column: 2, scope: !8989)
!9000 = distinct !DISubprogram(name: "fputc", scope: !662, file: !662, line: 41, type: !8990, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9001)
!9001 = !{!9002, !9003}
!9002 = !DILocalVariable(name: "c", arg: 1, scope: !9000, file: !662, line: 41, type: !103)
!9003 = !DILocalVariable(name: "stream", arg: 2, scope: !9000, file: !662, line: 41, type: !658)
!9004 = !DILocation(line: 0, scope: !9000)
!9005 = !DILocation(line: 43, column: 9, scope: !9000)
!9006 = !DILocation(line: 43, column: 2, scope: !9000)
!9007 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9008, file: !9008, line: 72, type: !8990, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9009)
!9008 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!9009 = !{!9010, !9011}
!9010 = !DILocalVariable(name: "c", arg: 1, scope: !9007, file: !9008, line: 72, type: !103)
!9011 = !DILocalVariable(name: "stream", arg: 2, scope: !9007, file: !9008, line: 72, type: !658)
!9012 = !DILocation(line: 0, scope: !9007)
!9013 = !DILocation(line: 81, column: 2, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9007, file: !9008, line: 81, column: 2)
!9015 = !{i64 2154128058}
!9016 = !DILocation(line: 82, column: 9, scope: !9007)
!9017 = !DILocation(line: 82, column: 2, scope: !9007)
!9018 = distinct !DISubprogram(name: "fputs", scope: !662, file: !662, line: 46, type: !9019, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9022)
!9019 = !DISubroutineType(types: !9020)
!9020 = !{!103, !8615, !9021}
!9021 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !658)
!9022 = !{!9023, !9024, !9025, !9026}
!9023 = !DILocalVariable(name: "s", arg: 1, scope: !9018, file: !662, line: 46, type: !8615)
!9024 = !DILocalVariable(name: "stream", arg: 2, scope: !9018, file: !662, line: 46, type: !9021)
!9025 = !DILocalVariable(name: "len", scope: !9018, file: !662, line: 48, type: !103)
!9026 = !DILocalVariable(name: "ret", scope: !9018, file: !662, line: 49, type: !103)
!9027 = !DILocation(line: 0, scope: !9018)
!9028 = !DILocation(line: 48, column: 12, scope: !9018)
!9029 = !DILocation(line: 51, column: 8, scope: !9018)
!9030 = !DILocation(line: 53, column: 13, scope: !9018)
!9031 = !DILocation(line: 53, column: 9, scope: !9018)
!9032 = !DILocation(line: 53, column: 2, scope: !9018)
!9033 = distinct !DISubprogram(name: "fwrite", scope: !662, file: !662, line: 99, type: !9034, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9036)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{!132, !8915, !132, !132, !9021}
!9036 = !{!9037, !9038, !9039, !9040}
!9037 = !DILocalVariable(name: "ptr", arg: 1, scope: !9033, file: !662, line: 99, type: !8915)
!9038 = !DILocalVariable(name: "size", arg: 2, scope: !9033, file: !662, line: 99, type: !132)
!9039 = !DILocalVariable(name: "nitems", arg: 3, scope: !9033, file: !662, line: 99, type: !132)
!9040 = !DILocalVariable(name: "stream", arg: 4, scope: !9033, file: !662, line: 100, type: !9021)
!9041 = !DILocation(line: 0, scope: !9033)
!9042 = !DILocation(line: 102, column: 9, scope: !9033)
!9043 = !DILocation(line: 102, column: 2, scope: !9033)
!9044 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9008, file: !9008, line: 96, type: !9034, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9045)
!9045 = !{!9046, !9047, !9048, !9049}
!9046 = !DILocalVariable(name: "ptr", arg: 1, scope: !9044, file: !9008, line: 96, type: !8915)
!9047 = !DILocalVariable(name: "size", arg: 2, scope: !9044, file: !9008, line: 96, type: !132)
!9048 = !DILocalVariable(name: "nitems", arg: 3, scope: !9044, file: !9008, line: 96, type: !132)
!9049 = !DILocalVariable(name: "stream", arg: 4, scope: !9044, file: !9008, line: 96, type: !9021)
!9050 = !DILocation(line: 0, scope: !9044)
!9051 = !DILocation(line: 107, column: 2, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9044, file: !9008, line: 107, column: 2)
!9053 = !{i64 2154128162}
!9054 = !DILocation(line: 108, column: 9, scope: !9044)
!9055 = !DILocation(line: 108, column: 2, scope: !9044)
!9056 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !662, file: !662, line: 56, type: !9034, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9057)
!9057 = !{!9058, !9059, !9060, !9061, !9062, !9063, !9064, !9065}
!9058 = !DILocalVariable(name: "ptr", arg: 1, scope: !9056, file: !662, line: 56, type: !8915)
!9059 = !DILocalVariable(name: "size", arg: 2, scope: !9056, file: !662, line: 56, type: !132)
!9060 = !DILocalVariable(name: "nitems", arg: 3, scope: !9056, file: !662, line: 57, type: !132)
!9061 = !DILocalVariable(name: "stream", arg: 4, scope: !9056, file: !662, line: 57, type: !9021)
!9062 = !DILocalVariable(name: "i", scope: !9056, file: !662, line: 59, type: !132)
!9063 = !DILocalVariable(name: "j", scope: !9056, file: !662, line: 60, type: !132)
!9064 = !DILocalVariable(name: "p", scope: !9056, file: !662, line: 61, type: !2998)
!9065 = !DILabel(scope: !9056, name: "done", file: !662, line: 82)
!9066 = !DILocation(line: 0, scope: !9056)
!9067 = !DILocation(line: 63, column: 14, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9056, file: !662, line: 63, column: 6)
!9069 = !DILocation(line: 63, column: 24, scope: !9068)
!9070 = !DILocation(line: 72, column: 3, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9056, file: !662, line: 70, column: 5)
!9072 = !DILocation(line: 0, scope: !9071)
!9073 = !DILocation(line: 73, column: 8, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !662, line: 73, column: 8)
!9075 = distinct !DILexicalBlock(scope: !9071, file: !662, line: 72, column: 6)
!9076 = !DILocation(line: 73, column: 29, scope: !9074)
!9077 = !DILocation(line: 73, column: 27, scope: !9074)
!9078 = !DILocation(line: 73, column: 21, scope: !9074)
!9079 = !DILocation(line: 73, column: 33, scope: !9074)
!9080 = !DILocation(line: 73, column: 8, scope: !9075)
!9081 = !DILocation(line: 76, column: 5, scope: !9075)
!9082 = !DILocation(line: 77, column: 14, scope: !9071)
!9083 = !DILocation(line: 77, column: 3, scope: !9075)
!9084 = distinct !{!9084, !9070, !9085}
!9085 = !DILocation(line: 77, column: 17, scope: !9071)
!9086 = !DILocation(line: 79, column: 4, scope: !9071)
!9087 = !DILocation(line: 80, column: 13, scope: !9056)
!9088 = !DILocation(line: 80, column: 2, scope: !9071)
!9089 = distinct !{!9089, !9090, !9091}
!9090 = !DILocation(line: 70, column: 2, scope: !9056)
!9091 = !DILocation(line: 80, column: 16, scope: !9056)
!9092 = !DILocation(line: 82, column: 1, scope: !9056)
!9093 = !DILocation(line: 83, column: 17, scope: !9056)
!9094 = !DILocation(line: 83, column: 2, scope: !9056)
!9095 = !DILocation(line: 84, column: 1, scope: !9056)
!9096 = distinct !DISubprogram(name: "puts", scope: !662, file: !662, line: 106, type: !9097, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9099)
!9097 = !DISubroutineType(types: !9098)
!9098 = !{!103, !337}
!9099 = !{!9100}
!9100 = !DILocalVariable(name: "s", arg: 1, scope: !9096, file: !662, line: 106, type: !337)
!9101 = !DILocation(line: 0, scope: !9096)
!9102 = !DILocation(line: 108, column: 6, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9096, file: !662, line: 108, column: 6)
!9104 = !DILocation(line: 108, column: 23, scope: !9103)
!9105 = !DILocation(line: 108, column: 6, scope: !9096)
!9106 = !DILocation(line: 112, column: 9, scope: !9096)
!9107 = !DILocation(line: 112, column: 29, scope: !9096)
!9108 = !DILocation(line: 112, column: 2, scope: !9096)
!9109 = !DILocation(line: 113, column: 1, scope: !9096)
!9110 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !694, file: !694, line: 12, type: !9111, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9117)
!9111 = !DISubroutineType(types: !9112)
!9112 = !{!9113, !109}
!9113 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9114)
!9114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9115)
!9115 = !{!9116}
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9114, file: !105, line: 66, baseType: !104, size: 64)
!9117 = !{!9118, !9119}
!9118 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9110, file: !694, line: 12, type: !109)
!9119 = !DILocalVariable(name: "now_ticks", scope: !9110, file: !694, line: 14, type: !106)
!9120 = !DILocation(line: 0, scope: !9110)
!9121 = !DILocation(line: 14, column: 22, scope: !9110)
!9122 = !DILocation(line: 16, column: 9, scope: !9110)
!9123 = !DILocation(line: 17, column: 1, scope: !9110)
!9124 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !694, file: !694, line: 103, type: !9125, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9271)
!9125 = !DISubroutineType(types: !9126)
!9126 = !{!103, !9127, !13, !9113}
!9127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9128, size: 32)
!9128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9129)
!9129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !9130)
!9130 = !{!9131, !9132, !9133, !9134, !9135, !9243}
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9129, file: !117, line: 35, baseType: !120, size: 16)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9129, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9129, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9129, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!9135 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9129, file: !117, line: 56, baseType: !9136, size: 32, offset: 128)
!9136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9137, size: 32)
!9137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !9138)
!9138 = !{!9139, !9158, !9241, !9242}
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9137, file: !137, line: 2722, baseType: !9140, size: 64)
!9140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !9141)
!9141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !9142)
!9142 = !{!9143}
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9141, file: !141, line: 232, baseType: !9144, size: 64)
!9144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !9145)
!9145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !9146)
!9146 = !{!9147, !9153}
!9147 = !DIDerivedType(tag: DW_TAG_member, scope: !9145, file: !146, line: 38, baseType: !9148, size: 32)
!9148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9145, file: !146, line: 38, size: 32, elements: !9149)
!9149 = !{!9150, !9152}
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9148, file: !146, line: 39, baseType: !9151, size: 32)
!9151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9145, size: 32)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9148, file: !146, line: 40, baseType: !9151, size: 32)
!9153 = !DIDerivedType(tag: DW_TAG_member, scope: !9145, file: !146, line: 42, baseType: !9154, size: 32, offset: 32)
!9154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9145, file: !146, line: 42, size: 32, elements: !9155)
!9155 = !{!9156, !9157}
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9154, file: !146, line: 43, baseType: !9151, size: 32)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9154, file: !146, line: 44, baseType: !9151, size: 32)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9137, file: !137, line: 2724, baseType: !9159, size: 32, offset: 64)
!9159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9160, size: 32)
!9160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !9161)
!9161 = !{!9162, !9202, !9214, !9215, !9216, !9217, !9223, !9236}
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9160, file: !163, line: 247, baseType: !9163, size: 384)
!9163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !9164)
!9164 = !{!9165, !9176, !9178, !9179, !9180, !9189, !9190, !9191}
!9165 = !DIDerivedType(tag: DW_TAG_member, scope: !9163, file: !163, line: 60, baseType: !9166, size: 64)
!9166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9163, file: !163, line: 60, size: 64, elements: !9167)
!9167 = !{!9168, !9170}
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9166, file: !163, line: 61, baseType: !9169, size: 64)
!9169 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !9145)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9166, file: !163, line: 62, baseType: !9171, size: 64)
!9171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !9172)
!9172 = !{!9173}
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9171, file: !175, line: 50, baseType: !9174, size: 64)
!9174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9175, size: 64, elements: !180)
!9175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9171, size: 32)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9163, file: !163, line: 68, baseType: !9177, size: 32, offset: 64)
!9177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9140, size: 32)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9163, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9163, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!9180 = !DIDerivedType(tag: DW_TAG_member, scope: !9163, file: !163, line: 90, baseType: !9181, size: 16, offset: 112)
!9181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9163, file: !163, line: 90, size: 16, elements: !9182)
!9182 = !{!9183, !9188}
!9183 = !DIDerivedType(tag: DW_TAG_member, scope: !9181, file: !163, line: 91, baseType: !9184, size: 16)
!9184 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9181, file: !163, line: 91, size: 16, elements: !9185)
!9185 = !{!9186, !9187}
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9184, file: !163, line: 96, baseType: !195, size: 8)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9184, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9181, file: !163, line: 100, baseType: !121, size: 16)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9163, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9163, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9163, file: !163, line: 131, baseType: !9192, size: 192, offset: 192)
!9192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !9193)
!9193 = !{!9194, !9195, !9201}
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9192, file: !141, line: 245, baseType: !9169, size: 64)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9192, file: !141, line: 246, baseType: !9196, size: 32, offset: 64)
!9196 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !9197)
!9197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9198, size: 32)
!9198 = !DISubroutineType(types: !9199)
!9199 = !{null, !9200}
!9200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9192, size: 32)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9192, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9160, file: !163, line: 250, baseType: !9203, size: 288, offset: 384)
!9203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !9204)
!9204 = !{!9205, !9206, !9207, !9208, !9209, !9210, !9211, !9212, !9213}
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9203, file: !214, line: 26, baseType: !108, size: 32)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9203, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9203, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9203, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9203, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9203, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9203, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9203, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9203, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9160, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9160, file: !163, line: 256, baseType: !9140, size: 64, offset: 704)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9160, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9160, file: !163, line: 300, baseType: !9218, size: 96, offset: 800)
!9218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !9219)
!9219 = !{!9220, !9221, !9222}
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9218, file: !163, line: 153, baseType: !22, size: 32)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9218, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9218, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9160, file: !163, line: 325, baseType: !9224, size: 32, offset: 896)
!9224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9225, size: 32)
!9225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !9226)
!9226 = !{!9227, !9233, !9234}
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9225, file: !137, line: 5074, baseType: !9228, size: 96)
!9228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !9229)
!9229 = !{!9230, !9231, !9232}
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9228, file: !240, line: 57, baseType: !243, size: 32)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9228, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9228, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9225, file: !137, line: 5075, baseType: !9140, size: 64, offset: 96)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9225, file: !137, line: 5076, baseType: !9235, offset: 160)
!9235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9160, file: !163, line: 343, baseType: !9237, size: 64, offset: 928)
!9237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !9238)
!9238 = !{!9239, !9240}
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9237, file: !214, line: 63, baseType: !108, size: 32)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9237, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9137, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9137, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9129, file: !117, line: 67, baseType: !9244, size: 32, offset: 160)
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9245, size: 32)
!9245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9246)
!9246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9247, size: 32)
!9247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9248)
!9248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !9249)
!9249 = !{!9250, !9251, !9266}
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9248, file: !117, line: 91, baseType: !131, size: 8)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9248, file: !117, line: 93, baseType: !9252, size: 32, offset: 32)
!9252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9253)
!9253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9254, size: 32)
!9254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !9255)
!9255 = !{!9256, !9257, !9258, !9259, !9260, !9261, !9262, !9263, !9264, !9265}
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9254, file: !137, line: 4206, baseType: !9140, size: 64)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9254, file: !137, line: 4208, baseType: !9235, offset: 64)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9254, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9254, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9254, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9254, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9254, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9254, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9254, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9254, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9248, file: !117, line: 96, baseType: !9267, size: 32, offset: 64)
!9267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9268)
!9268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9269, size: 32)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{null, !9127}
!9271 = !{!9272, !9273, !9274, !9275, !9276}
!9272 = !DILocalVariable(name: "chan", arg: 1, scope: !9124, file: !694, line: 103, type: !9127)
!9273 = !DILocalVariable(name: "msg", arg: 2, scope: !9124, file: !694, line: 103, type: !13)
!9274 = !DILocalVariable(name: "timeout", arg: 3, scope: !9124, file: !694, line: 103, type: !9113)
!9275 = !DILocalVariable(name: "err", scope: !9124, file: !694, line: 105, type: !103)
!9276 = !DILocalVariable(name: "end_ticks", scope: !9124, file: !694, line: 106, type: !109)
!9277 = !DILocation(line: 0, scope: !9124)
!9278 = !DILocation(line: 106, column: 23, scope: !9124)
!9279 = !DILocation(line: 112, column: 12, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9124, file: !694, line: 112, column: 6)
!9281 = !DILocation(line: 112, column: 22, scope: !9280)
!9282 = !DILocation(line: 112, column: 30, scope: !9280)
!9283 = !DILocation(line: 112, column: 61, scope: !9280)
!9284 = !DILocation(line: 112, column: 55, scope: !9280)
!9285 = !DILocation(line: 112, column: 34, scope: !9280)
!9286 = !DILocation(line: 112, column: 6, scope: !9124)
!9287 = !DILocation(line: 116, column: 27, scope: !9124)
!9288 = !DILocation(line: 116, column: 8, scope: !9124)
!9289 = !DILocation(line: 117, column: 6, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9124, file: !694, line: 117, column: 6)
!9291 = !DILocation(line: 117, column: 6, scope: !9124)
!9292 = !DILocation(line: 121, column: 15, scope: !9124)
!9293 = !DILocation(line: 121, column: 35, scope: !9124)
!9294 = !DILocation(line: 121, column: 29, scope: !9124)
!9295 = !DILocation(line: 121, column: 2, scope: !9124)
!9296 = !DILocation(line: 123, column: 8, scope: !9124)
!9297 = !DILocation(line: 125, column: 23, scope: !9124)
!9298 = !DILocation(line: 125, column: 2, scope: !9124)
!9299 = !DILocation(line: 127, column: 2, scope: !9124)
!9300 = !DILocation(line: 128, column: 1, scope: !9124)
!9301 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3594, file: !3594, line: 927, type: !9302, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9304)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!103, !9136, !9113}
!9304 = !{!9305, !9306}
!9305 = !DILocalVariable(name: "mutex", arg: 1, scope: !9301, file: !3594, line: 927, type: !9136)
!9306 = !DILocalVariable(name: "timeout", arg: 2, scope: !9301, file: !3594, line: 927, type: !9113)
!9307 = !DILocation(line: 0, scope: !9301)
!9308 = !DILocation(line: 936, column: 2, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9301, file: !3594, line: 936, column: 2)
!9310 = !{i64 2154069619}
!9311 = !DILocation(line: 937, column: 9, scope: !9301)
!9312 = !DILocation(line: 937, column: 2, scope: !9301)
!9313 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !694, file: !694, line: 66, type: !9314, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9316)
!9314 = !DISubroutineType(types: !9315)
!9315 = !{!103, !9127, !109}
!9316 = !{!9317, !9318, !9319, !9320, !9321, !9323}
!9317 = !DILocalVariable(name: "chan", arg: 1, scope: !9313, file: !694, line: 66, type: !9127)
!9318 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9313, file: !694, line: 66, type: !109)
!9319 = !DILocalVariable(name: "last_error", scope: !9313, file: !694, line: 68, type: !103)
!9320 = !DILocalVariable(name: "err", scope: !9313, file: !694, line: 68, type: !103)
!9321 = !DILocalVariable(name: "obs", scope: !9322, file: !694, line: 70, type: !9244)
!9322 = distinct !DILexicalBlock(scope: !9313, file: !694, line: 70, column: 2)
!9323 = !DILocalVariable(name: "obs", scope: !9324, file: !694, line: 81, type: !9244)
!9324 = distinct !DILexicalBlock(scope: !9313, file: !694, line: 81, column: 2)
!9325 = !DILocation(line: 0, scope: !9313)
!9326 = !DILocation(line: 70, column: 54, scope: !9322)
!9327 = !DILocation(line: 0, scope: !9322)
!9328 = !DILocation(line: 70, column: 65, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9322, file: !694, line: 70, column: 2)
!9330 = !DILocation(line: 70, column: 70, scope: !9329)
!9331 = !DILocation(line: 70, column: 2, scope: !9322)
!9332 = !DILocation(line: 81, column: 54, scope: !9324)
!9333 = !DILocation(line: 81, column: 65, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9324, file: !694, line: 81, column: 2)
!9335 = !DILocation(line: 0, scope: !9324)
!9336 = !DILocation(line: 81, column: 70, scope: !9334)
!9337 = !DILocation(line: 81, column: 2, scope: !9324)
!9338 = !DILocation(line: 71, column: 15, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !694, line: 71, column: 7)
!9340 = distinct !DILexicalBlock(scope: !9329, file: !694, line: 70, column: 86)
!9341 = !DILocation(line: 71, column: 23, scope: !9339)
!9342 = !DILocation(line: 71, column: 35, scope: !9339)
!9343 = !DILocation(line: 71, column: 44, scope: !9339)
!9344 = !DILocation(line: 71, column: 7, scope: !9340)
!9345 = !DILocation(line: 72, column: 4, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9339, file: !694, line: 71, column: 54)
!9347 = !DILocation(line: 73, column: 3, scope: !9346)
!9348 = !DILocation(line: 70, column: 79, scope: !9329)
!9349 = distinct !{!9349, !9331, !9350}
!9350 = !DILocation(line: 74, column: 2, scope: !9322)
!9351 = !DILocation(line: 100, column: 2, scope: !9313)
!9352 = !DILocation(line: 82, column: 15, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !694, line: 82, column: 7)
!9354 = distinct !DILexicalBlock(scope: !9334, file: !694, line: 81, column: 86)
!9355 = !DILocation(line: 82, column: 23, scope: !9353)
!9356 = !DILocation(line: 82, column: 35, scope: !9353)
!9357 = !DILocation(line: 82, column: 41, scope: !9353)
!9358 = !DILocation(line: 82, column: 7, scope: !9354)
!9359 = !DILocation(line: 83, column: 43, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9353, file: !694, line: 82, column: 51)
!9361 = !DILocation(line: 83, column: 10, scope: !9360)
!9362 = !DILocation(line: 86, column: 8, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9360, file: !694, line: 86, column: 8)
!9364 = !DILocation(line: 86, column: 8, scope: !9360)
!9365 = !DILocation(line: 87, column: 5, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !694, line: 87, column: 5)
!9367 = distinct !DILexicalBlock(scope: !9368, file: !694, line: 87, column: 5)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !694, line: 87, column: 5)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !694, line: 87, column: 5)
!9370 = distinct !DILexicalBlock(scope: !9363, file: !694, line: 86, column: 13)
!9371 = !DILocation(line: 90, column: 4, scope: !9370)
!9372 = !DILocation(line: 81, column: 79, scope: !9334)
!9373 = distinct !{!9373, !9337, !9374}
!9374 = !DILocation(line: 92, column: 2, scope: !9324)
!9375 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3594, file: !3594, line: 944, type: !9376, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9378)
!9376 = !DISubroutineType(types: !9377)
!9377 = !{!103, !9136}
!9378 = !{!9379}
!9379 = !DILocalVariable(name: "mutex", arg: 1, scope: !9375, file: !3594, line: 944, type: !9136)
!9380 = !DILocation(line: 0, scope: !9375)
!9381 = !DILocation(line: 952, column: 2, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9375, file: !3594, line: 952, column: 2)
!9383 = !{i64 2154069687}
!9384 = !DILocation(line: 953, column: 9, scope: !9375)
!9385 = !DILocation(line: 953, column: 2, scope: !9375)
!9386 = distinct !DISubprogram(name: "k_msgq_put", scope: !3594, file: !3594, line: 1129, type: !9387, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9389)
!9387 = !DISubroutineType(types: !9388)
!9388 = !{!103, !9253, !13, !9113}
!9389 = !{!9390, !9391, !9392}
!9390 = !DILocalVariable(name: "msgq", arg: 1, scope: !9386, file: !3594, line: 1129, type: !9253)
!9391 = !DILocalVariable(name: "data", arg: 2, scope: !9386, file: !3594, line: 1129, type: !13)
!9392 = !DILocalVariable(name: "timeout", arg: 3, scope: !9386, file: !3594, line: 1129, type: !9113)
!9393 = !DILocation(line: 0, scope: !9386)
!9394 = !DILocation(line: 1139, column: 2, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9386, file: !3594, line: 1139, column: 2)
!9396 = !{i64 2154070435}
!9397 = !DILocation(line: 1140, column: 9, scope: !9386)
!9398 = !DILocation(line: 1140, column: 2, scope: !9386)
!9399 = distinct !DISubprogram(name: "zbus_chan_read", scope: !694, file: !694, line: 130, type: !9400, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9402)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!103, !9127, !102, !9113}
!9402 = !{!9403, !9404, !9405, !9406}
!9403 = !DILocalVariable(name: "chan", arg: 1, scope: !9399, file: !694, line: 130, type: !9127)
!9404 = !DILocalVariable(name: "msg", arg: 2, scope: !9399, file: !694, line: 130, type: !102)
!9405 = !DILocalVariable(name: "timeout", arg: 3, scope: !9399, file: !694, line: 130, type: !9113)
!9406 = !DILocalVariable(name: "err", scope: !9399, file: !694, line: 132, type: !103)
!9407 = !DILocation(line: 0, scope: !9399)
!9408 = !DILocation(line: 138, column: 27, scope: !9399)
!9409 = !DILocation(line: 138, column: 8, scope: !9399)
!9410 = !DILocation(line: 139, column: 6, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9399, file: !694, line: 139, column: 6)
!9412 = !DILocation(line: 139, column: 6, scope: !9399)
!9413 = !DILocation(line: 143, column: 20, scope: !9399)
!9414 = !DILocation(line: 143, column: 35, scope: !9399)
!9415 = !DILocation(line: 143, column: 29, scope: !9399)
!9416 = !DILocation(line: 143, column: 2, scope: !9399)
!9417 = !DILocation(line: 145, column: 30, scope: !9399)
!9418 = !DILocation(line: 145, column: 9, scope: !9399)
!9419 = !DILocation(line: 145, column: 2, scope: !9399)
!9420 = !DILocation(line: 146, column: 1, scope: !9399)
!9421 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !694, file: !694, line: 148, type: !9422, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9424)
!9422 = !DISubroutineType(types: !9423)
!9423 = !{!103, !9127, !9113}
!9424 = !{!9425, !9426, !9427, !9428}
!9425 = !DILocalVariable(name: "chan", arg: 1, scope: !9421, file: !694, line: 148, type: !9127)
!9426 = !DILocalVariable(name: "timeout", arg: 2, scope: !9421, file: !694, line: 148, type: !9113)
!9427 = !DILocalVariable(name: "err", scope: !9421, file: !694, line: 150, type: !103)
!9428 = !DILocalVariable(name: "end_ticks", scope: !9421, file: !694, line: 151, type: !109)
!9429 = !DILocation(line: 0, scope: !9421)
!9430 = !DILocation(line: 151, column: 23, scope: !9421)
!9431 = !DILocation(line: 156, column: 27, scope: !9421)
!9432 = !DILocation(line: 156, column: 8, scope: !9421)
!9433 = !DILocation(line: 157, column: 6, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9421, file: !694, line: 157, column: 6)
!9435 = !DILocation(line: 157, column: 6, scope: !9421)
!9436 = !DILocation(line: 161, column: 8, scope: !9421)
!9437 = !DILocation(line: 163, column: 23, scope: !9421)
!9438 = !DILocation(line: 163, column: 2, scope: !9421)
!9439 = !DILocation(line: 165, column: 2, scope: !9421)
!9440 = !DILocation(line: 166, column: 1, scope: !9421)
!9441 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !694, file: !694, line: 168, type: !9422, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9442)
!9442 = !{!9443, !9444, !9445}
!9443 = !DILocalVariable(name: "chan", arg: 1, scope: !9441, file: !694, line: 168, type: !9127)
!9444 = !DILocalVariable(name: "timeout", arg: 2, scope: !9441, file: !694, line: 168, type: !9113)
!9445 = !DILocalVariable(name: "err", scope: !9441, file: !694, line: 173, type: !103)
!9446 = !DILocation(line: 0, scope: !9441)
!9447 = !DILocation(line: 173, column: 31, scope: !9441)
!9448 = !DILocation(line: 173, column: 12, scope: !9441)
!9449 = !DILocation(line: 180, column: 1, scope: !9441)
!9450 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !694, file: !694, line: 182, type: !9451, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9453)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{!103, !9127}
!9453 = !{!9454, !9455}
!9454 = !DILocalVariable(name: "chan", arg: 1, scope: !9450, file: !694, line: 182, type: !9127)
!9455 = !DILocalVariable(name: "err", scope: !9450, file: !694, line: 187, type: !103)
!9456 = !DILocation(line: 0, scope: !9450)
!9457 = !DILocation(line: 187, column: 33, scope: !9450)
!9458 = !DILocation(line: 187, column: 12, scope: !9450)
!9459 = !DILocation(line: 189, column: 2, scope: !9450)
!9460 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !694, file: !694, line: 192, type: !9461, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9464)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!103, !9246, !9463, !9113}
!9463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9127, size: 32)
!9464 = !{!9465, !9466, !9467}
!9465 = !DILocalVariable(name: "sub", arg: 1, scope: !9460, file: !694, line: 192, type: !9246)
!9466 = !DILocalVariable(name: "chan", arg: 2, scope: !9460, file: !694, line: 192, type: !9463)
!9467 = !DILocalVariable(name: "timeout", arg: 3, scope: !9460, file: !694, line: 193, type: !9113)
!9468 = !DILocation(line: 0, scope: !9460)
!9469 = !DILocation(line: 199, column: 11, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9460, file: !694, line: 199, column: 6)
!9471 = !DILocation(line: 199, column: 17, scope: !9470)
!9472 = !DILocation(line: 199, column: 6, scope: !9460)
!9473 = !DILocation(line: 203, column: 32, scope: !9460)
!9474 = !DILocation(line: 203, column: 9, scope: !9460)
!9475 = !DILocation(line: 203, column: 2, scope: !9460)
!9476 = !DILocation(line: 204, column: 1, scope: !9460)
!9477 = distinct !DISubprogram(name: "k_msgq_get", scope: !3594, file: !3594, line: 1147, type: !9478, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9480)
!9478 = !DISubroutineType(types: !9479)
!9479 = !{!103, !9253, !102, !9113}
!9480 = !{!9481, !9482, !9483}
!9481 = !DILocalVariable(name: "msgq", arg: 1, scope: !9477, file: !3594, line: 1147, type: !9253)
!9482 = !DILocalVariable(name: "data", arg: 2, scope: !9477, file: !3594, line: 1147, type: !102)
!9483 = !DILocalVariable(name: "timeout", arg: 3, scope: !9477, file: !3594, line: 1147, type: !9113)
!9484 = !DILocation(line: 0, scope: !9477)
!9485 = !DILocation(line: 1157, column: 2, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9477, file: !3594, line: 1157, column: 2)
!9487 = !{i64 2154070503}
!9488 = !DILocation(line: 1158, column: 9, scope: !9477)
!9489 = !DILocation(line: 1158, column: 2, scope: !9477)
!9490 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !786, file: !786, line: 368, type: !839, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9491)
!9491 = !{!9492}
!9492 = !DILocalVariable(name: "dev", arg: 1, scope: !9490, file: !786, line: 368, type: !815)
!9493 = !DILocation(line: 0, scope: !9490)
!9494 = !DILocation(line: 370, column: 2, scope: !9490)
!9495 = !DILocation(line: 371, column: 1, scope: !9490)
!9496 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !786, file: !786, line: 243, type: !9497, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9499)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{null, !103, !103, !815}
!9499 = !{!9500, !9501, !9502, !9503, !9505}
!9500 = !DILocalVariable(name: "min", arg: 1, scope: !9496, file: !786, line: 243, type: !103)
!9501 = !DILocalVariable(name: "max", arg: 2, scope: !9496, file: !786, line: 243, type: !103)
!9502 = !DILocalVariable(name: "dev", arg: 3, scope: !9496, file: !786, line: 243, type: !815)
!9503 = !DILocalVariable(name: "data", scope: !9496, file: !786, line: 245, type: !9504)
!9504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 32)
!9505 = !DILocalVariable(name: "line", scope: !9496, file: !786, line: 246, type: !103)
!9506 = !DILocation(line: 0, scope: !9496)
!9507 = !DILocation(line: 245, column: 38, scope: !9496)
!9508 = !DILocation(line: 249, column: 24, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9510, file: !786, line: 249, column: 2)
!9510 = distinct !DILexicalBlock(scope: !9496, file: !786, line: 249, column: 2)
!9511 = !DILocation(line: 249, column: 2, scope: !9510)
!9512 = !DILocation(line: 251, column: 7, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9514, file: !786, line: 251, column: 7)
!9514 = distinct !DILexicalBlock(scope: !9509, file: !786, line: 249, column: 39)
!9515 = !DILocation(line: 251, column: 7, scope: !9514)
!9516 = !DILocation(line: 253, column: 4, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9513, file: !786, line: 251, column: 36)
!9518 = !DILocation(line: 256, column: 24, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9517, file: !786, line: 256, column: 8)
!9520 = !DILocation(line: 256, column: 9, scope: !9519)
!9521 = !DILocation(line: 256, column: 8, scope: !9517)
!9522 = !DILocation(line: 260, column: 43, scope: !9517)
!9523 = !DILocation(line: 260, column: 4, scope: !9517)
!9524 = !DILocation(line: 261, column: 3, scope: !9517)
!9525 = !DILocation(line: 249, column: 35, scope: !9509)
!9526 = distinct !{!9526, !9511, !9527}
!9527 = !DILocation(line: 262, column: 2, scope: !9510)
!9528 = !DILocation(line: 263, column: 1, scope: !9496)
!9529 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !786, file: !786, line: 158, type: !396, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9530)
!9530 = !{!9531}
!9531 = !DILocalVariable(name: "line", arg: 1, scope: !9529, file: !786, line: 158, type: !103)
!9532 = !DILocation(line: 0, scope: !9529)
!9533 = !DILocation(line: 170, column: 38, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9535, file: !786, line: 160, column: 17)
!9535 = distinct !DILexicalBlock(scope: !9529, file: !786, line: 160, column: 6)
!9536 = !DILocation(line: 170, column: 10, scope: !9534)
!9537 = !DILocation(line: 176, column: 1, scope: !9529)
!9538 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !786, file: !786, line: 183, type: !9539, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9541)
!9539 = !DISubroutineType(types: !9540)
!9540 = !{null, !103}
!9541 = !{!9542}
!9542 = !DILocalVariable(name: "line", arg: 1, scope: !9538, file: !786, line: 183, type: !103)
!9543 = !DILocation(line: 0, scope: !9538)
!9544 = !DILocation(line: 195, column: 28, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !786, line: 185, column: 17)
!9546 = distinct !DILexicalBlock(scope: !9538, file: !786, line: 185, column: 6)
!9547 = !DILocation(line: 195, column: 3, scope: !9545)
!9548 = !DILocation(line: 200, column: 1, scope: !9538)
!9549 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9550, file: !9550, line: 910, type: !7369, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9551)
!9550 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9551 = !{!9552}
!9552 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9549, file: !9550, line: 910, type: !108)
!9553 = !DILocation(line: 0, scope: !9549)
!9554 = !DILocation(line: 912, column: 3, scope: !9549)
!9555 = !DILocation(line: 913, column: 1, scope: !9549)
!9556 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9550, file: !9550, line: 834, type: !8523, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9557)
!9557 = !{!9558}
!9558 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9556, file: !9550, line: 834, type: !108)
!9559 = !DILocation(line: 0, scope: !9556)
!9560 = !DILocation(line: 836, column: 11, scope: !9556)
!9561 = !DILocation(line: 836, column: 40, scope: !9556)
!9562 = !DILocation(line: 836, column: 3, scope: !9556)
!9563 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !786, file: !786, line: 304, type: !839, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9564)
!9564 = !{!9565}
!9565 = !DILocalVariable(name: "dev", arg: 1, scope: !9563, file: !786, line: 304, type: !815)
!9566 = !DILocation(line: 0, scope: !9563)
!9567 = !DILocation(line: 306, column: 2, scope: !9563)
!9568 = !DILocation(line: 307, column: 1, scope: !9563)
!9569 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !786, file: !786, line: 299, type: !839, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9570)
!9570 = !{!9571}
!9571 = !DILocalVariable(name: "dev", arg: 1, scope: !9569, file: !786, line: 299, type: !815)
!9572 = !DILocation(line: 0, scope: !9569)
!9573 = !DILocation(line: 301, column: 2, scope: !9569)
!9574 = !DILocation(line: 302, column: 1, scope: !9569)
!9575 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !786, file: !786, line: 294, type: !839, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9576)
!9576 = !{!9577}
!9577 = !DILocalVariable(name: "dev", arg: 1, scope: !9575, file: !786, line: 294, type: !815)
!9578 = !DILocation(line: 0, scope: !9575)
!9579 = !DILocation(line: 296, column: 2, scope: !9575)
!9580 = !DILocation(line: 297, column: 1, scope: !9575)
!9581 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !786, file: !786, line: 397, type: !839, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9582)
!9582 = !{!9583}
!9583 = !DILocalVariable(name: "dev", arg: 1, scope: !9581, file: !786, line: 397, type: !815)
!9584 = !DILocation(line: 0, scope: !9581)
!9585 = !DILocation(line: 399, column: 2, scope: !9581)
!9586 = !DILocation(line: 400, column: 1, scope: !9581)
!9587 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !786, file: !786, line: 392, type: !839, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9588)
!9588 = !{!9589}
!9589 = !DILocalVariable(name: "dev", arg: 1, scope: !9587, file: !786, line: 392, type: !815)
!9590 = !DILocation(line: 0, scope: !9587)
!9591 = !DILocation(line: 394, column: 2, scope: !9587)
!9592 = !DILocation(line: 395, column: 1, scope: !9587)
!9593 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !786, file: !786, line: 289, type: !839, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9594)
!9594 = !{!9595}
!9595 = !DILocalVariable(name: "dev", arg: 1, scope: !9593, file: !786, line: 289, type: !815)
!9596 = !DILocation(line: 0, scope: !9593)
!9597 = !DILocation(line: 291, column: 2, scope: !9593)
!9598 = !DILocation(line: 292, column: 1, scope: !9593)
!9599 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !786, file: !786, line: 387, type: !839, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9600)
!9600 = !{!9601}
!9601 = !DILocalVariable(name: "dev", arg: 1, scope: !9599, file: !786, line: 387, type: !815)
!9602 = !DILocation(line: 0, scope: !9599)
!9603 = !DILocation(line: 389, column: 2, scope: !9599)
!9604 = !DILocation(line: 390, column: 1, scope: !9599)
!9605 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !786, file: !786, line: 382, type: !839, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9606)
!9606 = !{!9607}
!9607 = !DILocalVariable(name: "dev", arg: 1, scope: !9605, file: !786, line: 382, type: !815)
!9608 = !DILocation(line: 0, scope: !9605)
!9609 = !DILocation(line: 384, column: 2, scope: !9605)
!9610 = !DILocation(line: 385, column: 1, scope: !9605)
!9611 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !786, file: !786, line: 373, type: !839, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9612)
!9612 = !{!9613}
!9613 = !DILocalVariable(name: "dev", arg: 1, scope: !9611, file: !786, line: 373, type: !815)
!9614 = !DILocation(line: 0, scope: !9611)
!9615 = !DILocation(line: 375, column: 2, scope: !9611)
!9616 = !DILocation(line: 376, column: 1, scope: !9611)
!9617 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !786, file: !786, line: 284, type: !839, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9618)
!9618 = !{!9619}
!9619 = !DILocalVariable(name: "dev", arg: 1, scope: !9617, file: !786, line: 284, type: !815)
!9620 = !DILocation(line: 0, scope: !9617)
!9621 = !DILocation(line: 286, column: 2, scope: !9617)
!9622 = !DILocation(line: 287, column: 1, scope: !9617)
!9623 = distinct !DISubprogram(name: "stm32_exti_init", scope: !786, file: !786, line: 416, type: !813, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9624)
!9624 = !{!9625}
!9625 = !DILocalVariable(name: "dev", arg: 1, scope: !9623, file: !786, line: 416, type: !815)
!9626 = !DILocation(line: 0, scope: !9623)
!9627 = !DILocation(line: 418, column: 2, scope: !9623)
!9628 = !DILocation(line: 420, column: 2, scope: !9623)
!9629 = !DILocation(line: 0, scope: !838)
!9630 = !DILocation(line: 493, column: 2, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !838, file: !786, line: 493, column: 2)
!9632 = !DILocation(line: 497, column: 2, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !838, file: !786, line: 497, column: 2)
!9634 = !DILocation(line: 507, column: 2, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !838, file: !786, line: 507, column: 2)
!9636 = !DILocation(line: 512, column: 2, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !838, file: !786, line: 512, column: 2)
!9638 = !DILocation(line: 516, column: 2, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !838, file: !786, line: 516, column: 2)
!9640 = !DILocation(line: 523, column: 2, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !838, file: !786, line: 523, column: 2)
!9642 = !DILocation(line: 527, column: 2, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !838, file: !786, line: 527, column: 2)
!9644 = !DILocation(line: 581, column: 2, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !838, file: !786, line: 581, column: 2)
!9646 = !DILocation(line: 586, column: 2, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !838, file: !786, line: 586, column: 2)
!9648 = !DILocation(line: 591, column: 2, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !838, file: !786, line: 591, column: 2)
!9650 = !DILocation(line: 595, column: 2, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !838, file: !786, line: 595, column: 2)
!9652 = !DILocation(line: 607, column: 1, scope: !838)
!9653 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !786, file: !786, line: 112, type: !9539, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9654)
!9654 = !{!9655, !9656}
!9655 = !DILocalVariable(name: "line", arg: 1, scope: !9653, file: !786, line: 112, type: !103)
!9656 = !DILocalVariable(name: "irqnum", scope: !9653, file: !786, line: 114, type: !103)
!9657 = !DILocation(line: 0, scope: !9653)
!9658 = !DILocation(line: 121, column: 11, scope: !9653)
!9659 = !DILocation(line: 130, column: 26, scope: !9653)
!9660 = !DILocation(line: 130, column: 2, scope: !9653)
!9661 = !DILocation(line: 134, column: 2, scope: !9653)
!9662 = !DILocation(line: 135, column: 1, scope: !9653)
!9663 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9550, file: !9550, line: 268, type: !7369, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9664)
!9664 = !{!9665}
!9665 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9663, file: !9550, line: 268, type: !108)
!9666 = !DILocation(line: 0, scope: !9663)
!9667 = !DILocation(line: 270, column: 3, scope: !9663)
!9668 = !DILocation(line: 271, column: 1, scope: !9663)
!9669 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !786, file: !786, line: 137, type: !9539, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9670)
!9670 = !{!9671}
!9671 = !DILocalVariable(name: "line", arg: 1, scope: !9669, file: !786, line: 137, type: !103)
!9672 = !DILocation(line: 0, scope: !9669)
!9673 = !DILocation(line: 141, column: 11, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9669, file: !786, line: 141, column: 6)
!9675 = !DILocation(line: 141, column: 6, scope: !9669)
!9676 = !DILocation(line: 145, column: 28, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9674, file: !786, line: 141, column: 17)
!9678 = !DILocation(line: 145, column: 3, scope: !9677)
!9679 = !DILocation(line: 147, column: 2, scope: !9677)
!9680 = !DILocation(line: 151, column: 1, scope: !9669)
!9681 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9550, file: !9550, line: 309, type: !7369, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9682)
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9681, file: !9550, line: 309, type: !108)
!9684 = !DILocation(line: 0, scope: !9681)
!9685 = !DILocation(line: 311, column: 3, scope: !9681)
!9686 = !DILocation(line: 312, column: 1, scope: !9681)
!9687 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !786, file: !786, line: 202, type: !9688, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9690)
!9688 = !DISubroutineType(types: !9689)
!9689 = !{null, !103, !103}
!9690 = !{!9691, !9692}
!9691 = !DILocalVariable(name: "line", arg: 1, scope: !9687, file: !786, line: 202, type: !103)
!9692 = !DILocalVariable(name: "trigger", arg: 2, scope: !9687, file: !786, line: 202, type: !103)
!9693 = !DILocation(line: 0, scope: !9687)
!9694 = !DILocation(line: 211, column: 2, scope: !9687)
!9695 = !DILocation(line: 213, column: 36, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9687, file: !786, line: 211, column: 19)
!9697 = !DILocation(line: 213, column: 3, scope: !9696)
!9698 = !DILocation(line: 214, column: 3, scope: !9696)
!9699 = !DILocation(line: 215, column: 3, scope: !9696)
!9700 = !DILocation(line: 217, column: 35, scope: !9696)
!9701 = !DILocation(line: 217, column: 3, scope: !9696)
!9702 = !DILocation(line: 218, column: 3, scope: !9696)
!9703 = !DILocation(line: 219, column: 3, scope: !9696)
!9704 = !DILocation(line: 221, column: 36, scope: !9696)
!9705 = !DILocation(line: 221, column: 3, scope: !9696)
!9706 = !DILocation(line: 222, column: 3, scope: !9696)
!9707 = !DILocation(line: 223, column: 3, scope: !9696)
!9708 = !DILocation(line: 225, column: 35, scope: !9696)
!9709 = !DILocation(line: 225, column: 3, scope: !9696)
!9710 = !DILocation(line: 226, column: 3, scope: !9696)
!9711 = !DILocation(line: 227, column: 3, scope: !9696)
!9712 = !DILocation(line: 232, column: 1, scope: !9687)
!9713 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9550, file: !9550, line: 573, type: !7369, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9714)
!9714 = !{!9715}
!9715 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9713, file: !9550, line: 573, type: !108)
!9716 = !DILocation(line: 0, scope: !9713)
!9717 = !DILocation(line: 575, column: 3, scope: !9713)
!9718 = !DILocation(line: 577, column: 1, scope: !9713)
!9719 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9550, file: !9550, line: 703, type: !7369, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9720)
!9720 = !{!9721}
!9721 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9719, file: !9550, line: 703, type: !108)
!9722 = !DILocation(line: 0, scope: !9719)
!9723 = !DILocation(line: 705, column: 3, scope: !9719)
!9724 = !DILocation(line: 706, column: 1, scope: !9719)
!9725 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9550, file: !9550, line: 529, type: !7369, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9726)
!9726 = !{!9727}
!9727 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9725, file: !9550, line: 529, type: !108)
!9728 = !DILocation(line: 0, scope: !9725)
!9729 = !DILocation(line: 531, column: 3, scope: !9725)
!9730 = !DILocation(line: 533, column: 1, scope: !9725)
!9731 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9550, file: !9550, line: 661, type: !7369, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9732)
!9732 = !{!9733}
!9733 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9731, file: !9550, line: 661, type: !108)
!9734 = !DILocation(line: 0, scope: !9731)
!9735 = !DILocation(line: 663, column: 3, scope: !9731)
!9736 = !DILocation(line: 664, column: 1, scope: !9731)
!9737 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !786, file: !786, line: 433, type: !9738, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9740)
!9738 = !DISubroutineType(types: !9739)
!9739 = !{!103, !103, !826, !102}
!9740 = !{!9741, !9742, !9743, !9744, !9746}
!9741 = !DILocalVariable(name: "line", arg: 1, scope: !9737, file: !786, line: 433, type: !103)
!9742 = !DILocalVariable(name: "cb", arg: 2, scope: !9737, file: !786, line: 433, type: !826)
!9743 = !DILocalVariable(name: "arg", arg: 3, scope: !9737, file: !786, line: 433, type: !102)
!9744 = !DILocalVariable(name: "dev", scope: !9737, file: !786, line: 435, type: !9745)
!9745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!9746 = !DILocalVariable(name: "data", scope: !9737, file: !786, line: 436, type: !9504)
!9747 = !DILocation(line: 0, scope: !9737)
!9748 = !DILocation(line: 438, column: 21, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9737, file: !786, line: 438, column: 6)
!9750 = !DILocation(line: 438, column: 6, scope: !9749)
!9751 = !DILocation(line: 438, column: 6, scope: !9737)
!9752 = !DILocation(line: 442, column: 20, scope: !9737)
!9753 = !DILocation(line: 443, column: 17, scope: !9737)
!9754 = !DILocation(line: 443, column: 22, scope: !9737)
!9755 = !DILocation(line: 445, column: 2, scope: !9737)
!9756 = !DILocation(line: 446, column: 1, scope: !9737)
!9757 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !786, file: !786, line: 448, type: !9539, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9758)
!9758 = !{!9759, !9760, !9761}
!9759 = !DILocalVariable(name: "line", arg: 1, scope: !9757, file: !786, line: 448, type: !103)
!9760 = !DILocalVariable(name: "dev", scope: !9757, file: !786, line: 450, type: !9745)
!9761 = !DILocalVariable(name: "data", scope: !9757, file: !786, line: 451, type: !9504)
!9762 = !DILocation(line: 0, scope: !9757)
!9763 = !DILocation(line: 453, column: 17, scope: !9757)
!9764 = !DILocation(line: 453, column: 20, scope: !9757)
!9765 = !DILocation(line: 454, column: 17, scope: !9757)
!9766 = !DILocation(line: 454, column: 22, scope: !9757)
!9767 = !DILocation(line: 455, column: 1, scope: !9757)
!9768 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !970, file: !970, line: 183, type: !1008, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9769)
!9769 = !{!9770, !9771, !9772, !9773, !9774}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9768, file: !970, line: 183, type: !999)
!9771 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9768, file: !970, line: 184, type: !1010)
!9772 = !DILocalVariable(name: "pclken", scope: !9768, file: !970, line: 186, type: !960)
!9773 = !DILocalVariable(name: "reg", scope: !9768, file: !970, line: 187, type: !1548)
!9774 = !DILocalVariable(name: "reg_val", scope: !9768, file: !970, line: 188, type: !108)
!9775 = !DILocation(line: 0, scope: !9768)
!9776 = !DILocation(line: 192, column: 6, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9768, file: !970, line: 192, column: 6)
!9778 = !DILocation(line: 192, column: 6, scope: !9768)
!9779 = !DILocation(line: 197, column: 52, scope: !9768)
!9780 = !DILocation(line: 197, column: 8, scope: !9768)
!9781 = !DILocation(line: 198, column: 12, scope: !9768)
!9782 = !DILocation(line: 199, column: 21, scope: !9768)
!9783 = !DILocation(line: 199, column: 10, scope: !9768)
!9784 = !DILocation(line: 200, column: 7, scope: !9768)
!9785 = !DILocation(line: 202, column: 2, scope: !9768)
!9786 = !DILocation(line: 203, column: 1, scope: !9768)
!9787 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !970, file: !970, line: 205, type: !1008, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9788)
!9788 = !{!9789, !9790, !9791, !9792, !9793}
!9789 = !DILocalVariable(name: "dev", arg: 1, scope: !9787, file: !970, line: 205, type: !999)
!9790 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9787, file: !970, line: 206, type: !1010)
!9791 = !DILocalVariable(name: "pclken", scope: !9787, file: !970, line: 208, type: !960)
!9792 = !DILocalVariable(name: "reg", scope: !9787, file: !970, line: 209, type: !1548)
!9793 = !DILocalVariable(name: "reg_val", scope: !9787, file: !970, line: 210, type: !108)
!9794 = !DILocation(line: 0, scope: !9787)
!9795 = !DILocation(line: 214, column: 6, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9787, file: !970, line: 214, column: 6)
!9797 = !DILocation(line: 214, column: 6, scope: !9787)
!9798 = !DILocation(line: 219, column: 52, scope: !9787)
!9799 = !DILocation(line: 219, column: 8, scope: !9787)
!9800 = !DILocation(line: 220, column: 12, scope: !9787)
!9801 = !DILocation(line: 221, column: 22, scope: !9787)
!9802 = !DILocation(line: 221, column: 13, scope: !9787)
!9803 = !DILocation(line: 221, column: 10, scope: !9787)
!9804 = !DILocation(line: 222, column: 7, scope: !9787)
!9805 = !DILocation(line: 224, column: 2, scope: !9787)
!9806 = !DILocation(line: 225, column: 1, scope: !9787)
!9807 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !970, file: !970, line: 262, type: !1024, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9808)
!9808 = !{!9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816}
!9809 = !DILocalVariable(name: "clock", arg: 1, scope: !9807, file: !970, line: 262, type: !999)
!9810 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9807, file: !970, line: 263, type: !1010)
!9811 = !DILocalVariable(name: "rate", arg: 3, scope: !9807, file: !970, line: 264, type: !966)
!9812 = !DILocalVariable(name: "pclken", scope: !9807, file: !970, line: 266, type: !960)
!9813 = !DILocalVariable(name: "ahb_clock", scope: !9807, file: !970, line: 273, type: !108)
!9814 = !DILocalVariable(name: "apb1_clock", scope: !9807, file: !970, line: 274, type: !108)
!9815 = !DILocalVariable(name: "apb2_clock", scope: !9807, file: !970, line: 276, type: !108)
!9816 = !DILocalVariable(name: "ahb3_clock", scope: !9807, file: !970, line: 286, type: !108)
!9817 = !DILocation(line: 0, scope: !9807)
!9818 = !DILocation(line: 273, column: 23, scope: !9807)
!9819 = !DILocation(line: 299, column: 18, scope: !9807)
!9820 = !DILocation(line: 299, column: 2, scope: !9807)
!9821 = !DILocation(line: 274, column: 24, scope: !9807)
!9822 = !DILocation(line: 319, column: 3, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9807, file: !970, line: 299, column: 23)
!9824 = !DILocation(line: 276, column: 24, scope: !9807)
!9825 = !DILocation(line: 323, column: 3, scope: !9823)
!9826 = !DILocation(line: 346, column: 33, scope: !9823)
!9827 = !DILocation(line: 346, column: 11, scope: !9823)
!9828 = !DILocation(line: 350, column: 3, scope: !9823)
!9829 = !DILocation(line: 374, column: 3, scope: !9823)
!9830 = !DILocation(line: 379, column: 3, scope: !9823)
!9831 = !DILocation(line: 0, scope: !9823)
!9832 = !DILocation(line: 396, column: 1, scope: !9807)
!9833 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !970, file: !970, line: 227, type: !1040, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9834)
!9834 = !{!9835, !9836, !9837, !9838, !9839, !9840, !9841, !9842}
!9835 = !DILocalVariable(name: "dev", arg: 1, scope: !9833, file: !970, line: 227, type: !999)
!9836 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9833, file: !970, line: 228, type: !1010)
!9837 = !DILocalVariable(name: "data", arg: 3, scope: !9833, file: !970, line: 229, type: !102)
!9838 = !DILocalVariable(name: "pclken", scope: !9833, file: !970, line: 233, type: !960)
!9839 = !DILocalVariable(name: "reg", scope: !9833, file: !970, line: 234, type: !1548)
!9840 = !DILocalVariable(name: "reg_val", scope: !9833, file: !970, line: 235, type: !108)
!9841 = !DILocalVariable(name: "dt_val", scope: !9833, file: !970, line: 235, type: !108)
!9842 = !DILocalVariable(name: "err", scope: !9833, file: !970, line: 236, type: !103)
!9843 = !DILocation(line: 0, scope: !9833)
!9844 = !DILocation(line: 241, column: 30, scope: !9833)
!9845 = !DILocation(line: 241, column: 8, scope: !9833)
!9846 = !DILocation(line: 242, column: 10, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9833, file: !970, line: 242, column: 6)
!9848 = !DILocation(line: 242, column: 6, scope: !9833)
!9849 = !DILocation(line: 247, column: 11, scope: !9833)
!9850 = !DILocation(line: 248, column: 6, scope: !9833)
!9851 = !DILocation(line: 247, column: 44, scope: !9833)
!9852 = !DILocation(line: 250, column: 6, scope: !9833)
!9853 = !DILocation(line: 249, column: 52, scope: !9833)
!9854 = !DILocation(line: 249, column: 8, scope: !9833)
!9855 = !DILocation(line: 251, column: 12, scope: !9833)
!9856 = !DILocation(line: 252, column: 10, scope: !9833)
!9857 = !DILocation(line: 253, column: 7, scope: !9833)
!9858 = !DILocation(line: 255, column: 2, scope: !9833)
!9859 = !DILocation(line: 260, column: 1, scope: !9833)
!9860 = distinct !DISubprogram(name: "enabled_clock", scope: !970, file: !970, line: 100, type: !9861, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9863)
!9861 = !DISubroutineType(types: !9862)
!9862 = !{!103, !108}
!9863 = !{!9864, !9865}
!9864 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9860, file: !970, line: 100, type: !108)
!9865 = !DILocalVariable(name: "r", scope: !9860, file: !970, line: 102, type: !103)
!9866 = !DILocation(line: 0, scope: !9860)
!9867 = !DILocation(line: 104, column: 2, scope: !9860)
!9868 = !DILocation(line: 180, column: 2, scope: !9860)
!9869 = !DILocation(line: 181, column: 1, scope: !9860)
!9870 = distinct !DISubprogram(name: "get_bus_clock", scope: !970, file: !970, line: 79, type: !9871, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9873)
!9871 = !DISubroutineType(types: !9872)
!9872 = !{!108, !108, !108}
!9873 = !{!9874, !9875}
!9874 = !DILocalVariable(name: "clock", arg: 1, scope: !9870, file: !970, line: 79, type: !108)
!9875 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9870, file: !970, line: 79, type: !108)
!9876 = !DILocation(line: 0, scope: !9870)
!9877 = !DILocation(line: 81, column: 15, scope: !9870)
!9878 = !DILocation(line: 81, column: 2, scope: !9870)
!9879 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !970, file: !970, line: 68, type: !9880, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9882)
!9880 = !DISubroutineType(types: !9881)
!9881 = !{!108, !108, !103, !103, !103}
!9882 = !{!9883, !9884, !9885, !9886}
!9883 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9879, file: !970, line: 68, type: !108)
!9884 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9879, file: !970, line: 69, type: !103)
!9885 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9879, file: !970, line: 70, type: !103)
!9886 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9879, file: !970, line: 71, type: !103)
!9887 = !DILocation(line: 0, scope: !9879)
!9888 = !DILocation(line: 75, column: 22, scope: !9879)
!9889 = !DILocation(line: 75, column: 34, scope: !9879)
!9890 = !DILocation(line: 75, column: 2, scope: !9879)
!9891 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !970, file: !970, line: 641, type: !997, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9892)
!9892 = !{!9893, !9894, !9895}
!9893 = !DILocalVariable(name: "dev", arg: 1, scope: !9891, file: !970, line: 641, type: !999)
!9894 = !DILocalVariable(name: "old_flash_freq", scope: !9891, file: !970, line: 664, type: !108)
!9895 = !DILocalVariable(name: "new_flash_freq", scope: !9891, file: !970, line: 665, type: !108)
!9896 = !DILocation(line: 0, scope: !9891)
!9897 = !DILocation(line: 646, column: 2, scope: !9891)
!9898 = !DILocation(line: 667, column: 19, scope: !9891)
!9899 = !DILocation(line: 674, column: 21, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9891, file: !970, line: 674, column: 6)
!9901 = !DILocation(line: 674, column: 6, scope: !9891)
!9902 = !DILocation(line: 675, column: 3, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9900, file: !970, line: 674, column: 59)
!9904 = !DILocation(line: 676, column: 2, scope: !9903)
!9905 = !DILocation(line: 680, column: 2, scope: !9891)
!9906 = !DILocation(line: 683, column: 2, scope: !9891)
!9907 = !DILocation(line: 690, column: 3, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !970, line: 689, column: 9)
!9909 = distinct !DILexicalBlock(scope: !9891, file: !970, line: 685, column: 6)
!9910 = !DILocation(line: 695, column: 2, scope: !9891)
!9911 = !DILocation(line: 696, column: 2, scope: !9891)
!9912 = !DILocation(line: 696, column: 9, scope: !9891)
!9913 = !DILocation(line: 696, column: 34, scope: !9891)
!9914 = distinct !{!9914, !9911, !9915}
!9915 = !DILocation(line: 697, column: 2, scope: !9891)
!9916 = !DILocation(line: 720, column: 21, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9891, file: !970, line: 720, column: 6)
!9918 = !DILocation(line: 720, column: 6, scope: !9891)
!9919 = !DILocation(line: 721, column: 3, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9917, file: !970, line: 720, column: 60)
!9921 = !DILocation(line: 722, column: 2, scope: !9920)
!9922 = !DILocation(line: 725, column: 18, scope: !9891)
!9923 = !DILocation(line: 728, column: 2, scope: !9891)
!9924 = !DILocation(line: 730, column: 2, scope: !9891)
!9925 = !DILocation(line: 745, column: 2, scope: !9891)
!9926 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9927, file: !9927, line: 3275, type: !3574, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!9927 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9928 = !DILocation(line: 3277, column: 21, scope: !9926)
!9929 = !DILocation(line: 3277, column: 3, scope: !9926)
!9930 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !970, file: !970, line: 507, type: !334, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!9931 = !DILocation(line: 534, column: 7, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !970, line: 534, column: 7)
!9933 = distinct !DILexicalBlock(scope: !9934, file: !970, line: 532, column: 37)
!9934 = distinct !DILexicalBlock(scope: !9930, file: !970, line: 532, column: 6)
!9935 = !DILocation(line: 534, column: 28, scope: !9932)
!9936 = !DILocation(line: 534, column: 7, scope: !9933)
!9937 = !DILocation(line: 536, column: 4, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9932, file: !970, line: 534, column: 34)
!9939 = !DILocation(line: 537, column: 4, scope: !9938)
!9940 = !DILocation(line: 537, column: 11, scope: !9938)
!9941 = !DILocation(line: 537, column: 32, scope: !9938)
!9942 = distinct !{!9942, !9939, !9943}
!9943 = !DILocation(line: 539, column: 4, scope: !9938)
!9944 = !DILocation(line: 583, column: 3, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !970, line: 577, column: 37)
!9946 = distinct !DILexicalBlock(scope: !9930, file: !970, line: 577, column: 6)
!9947 = !DILocation(line: 584, column: 3, scope: !9945)
!9948 = !DILocation(line: 584, column: 10, scope: !9945)
!9949 = !DILocation(line: 584, column: 31, scope: !9945)
!9950 = distinct !{!9950, !9947, !9951}
!9951 = !DILocation(line: 585, column: 3, scope: !9945)
!9952 = !DILocation(line: 627, column: 1, scope: !9930)
!9953 = distinct !DISubprogram(name: "set_up_plls", scope: !970, file: !970, line: 448, type: !334, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!9954 = !DILocation(line: 460, column: 6, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9953, file: !970, line: 460, column: 6)
!9956 = !DILocation(line: 460, column: 31, scope: !9955)
!9957 = !DILocation(line: 460, column: 6, scope: !9953)
!9958 = !DILocation(line: 461, column: 3, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9955, file: !970, line: 460, column: 67)
!9960 = !DILocation(line: 462, column: 3, scope: !9959)
!9961 = !DILocation(line: 463, column: 2, scope: !9959)
!9962 = !DILocation(line: 464, column: 2, scope: !9953)
!9963 = !DILocation(line: 488, column: 2, scope: !9953)
!9964 = !DILocation(line: 496, column: 2, scope: !9953)
!9965 = !DILocation(line: 499, column: 2, scope: !9953)
!9966 = !DILocation(line: 500, column: 2, scope: !9953)
!9967 = !DILocation(line: 500, column: 9, scope: !9953)
!9968 = !DILocation(line: 500, column: 30, scope: !9953)
!9969 = distinct !{!9969, !9966, !9970}
!9970 = !DILocation(line: 502, column: 2, scope: !9953)
!9971 = !DILocation(line: 505, column: 1, scope: !9953)
!9972 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9927, file: !9927, line: 3224, type: !7369, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9973)
!9973 = !{!9974}
!9974 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9972, file: !9927, line: 3224, type: !108)
!9975 = !DILocation(line: 0, scope: !9972)
!9976 = !DILocation(line: 3226, column: 3, scope: !9972)
!9977 = !DILocation(line: 3227, column: 1, scope: !9972)
!9978 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9927, file: !9927, line: 3188, type: !7369, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9979)
!9979 = !{!9980}
!9980 = !DILocalVariable(name: "Source", arg: 1, scope: !9978, file: !9927, line: 3188, type: !108)
!9981 = !DILocation(line: 0, scope: !9978)
!9982 = !DILocation(line: 3190, column: 3, scope: !9978)
!9983 = !DILocation(line: 3191, column: 1, scope: !9978)
!9984 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9927, file: !9927, line: 3204, type: !3574, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!9985 = !DILocation(line: 3206, column: 21, scope: !9984)
!9986 = !DILocation(line: 3206, column: 3, scope: !9984)
!9987 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9927, file: !9927, line: 3240, type: !7369, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9988)
!9988 = !{!9989}
!9989 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9987, file: !9927, line: 3240, type: !108)
!9990 = !DILocation(line: 0, scope: !9987)
!9991 = !DILocation(line: 3242, column: 3, scope: !9987)
!9992 = !DILocation(line: 3243, column: 1, scope: !9987)
!9993 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9927, file: !9927, line: 3256, type: !7369, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !9994)
!9994 = !{!9995}
!9995 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9993, file: !9927, line: 3256, type: !108)
!9996 = !DILocation(line: 0, scope: !9993)
!9997 = !DILocation(line: 3258, column: 3, scope: !9993)
!9998 = !DILocation(line: 3259, column: 1, scope: !9993)
!9999 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !970, file: !970, line: 409, type: !334, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!10000 = !DILocation(line: 412, column: 6, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9999, file: !970, line: 412, column: 6)
!10002 = !DILocation(line: 412, column: 27, scope: !10001)
!10003 = !DILocation(line: 412, column: 6, scope: !9999)
!10004 = !DILocation(line: 414, column: 3, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10001, file: !970, line: 412, column: 33)
!10006 = !DILocation(line: 415, column: 3, scope: !10005)
!10007 = !DILocation(line: 415, column: 10, scope: !10005)
!10008 = !DILocation(line: 415, column: 31, scope: !10005)
!10009 = distinct !{!10009, !10006, !10010}
!10010 = !DILocation(line: 417, column: 3, scope: !10005)
!10011 = !DILocation(line: 421, column: 2, scope: !9999)
!10012 = !DILocation(line: 422, column: 2, scope: !9999)
!10013 = !DILocation(line: 422, column: 9, scope: !9999)
!10014 = !DILocation(line: 422, column: 34, scope: !9999)
!10015 = distinct !{!10015, !10012, !10016}
!10016 = !DILocation(line: 423, column: 2, scope: !9999)
!10017 = !DILocation(line: 424, column: 1, scope: !9999)
!10018 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9927, file: !9927, line: 4195, type: !334, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!10019 = !DILocation(line: 4197, column: 3, scope: !10018)
!10020 = !DILocation(line: 4198, column: 1, scope: !10018)
!10021 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9927, file: !9927, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!10022 = !DILocation(line: 4186, column: 3, scope: !10021)
!10023 = !DILocation(line: 4187, column: 1, scope: !10021)
!10024 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9927, file: !9927, line: 4205, type: !3574, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!10025 = !DILocation(line: 4207, column: 11, scope: !10024)
!10026 = !DILocation(line: 4207, column: 44, scope: !10024)
!10027 = !DILocation(line: 4207, column: 3, scope: !10024)
!10028 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9927, file: !9927, line: 3007, type: !3574, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!10029 = !DILocation(line: 3009, column: 11, scope: !10028)
!10030 = !DILocation(line: 3009, column: 44, scope: !10028)
!10031 = !DILocation(line: 3009, column: 3, scope: !10028)
!10032 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9927, file: !9927, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!10033 = !DILocation(line: 2989, column: 3, scope: !10032)
!10034 = !DILocation(line: 2990, column: 1, scope: !10032)
!10035 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9927, file: !9927, line: 3143, type: !334, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!10036 = !DILocation(line: 3145, column: 3, scope: !10035)
!10037 = !DILocation(line: 3146, column: 1, scope: !10035)
!10038 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9927, file: !9927, line: 3163, type: !3574, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !251)
!10039 = !DILocation(line: 3165, column: 11, scope: !10038)
!10040 = !DILocation(line: 3165, column: 46, scope: !10038)
!10041 = !DILocation(line: 3165, column: 3, scope: !10038)
!10042 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10043, file: !10043, line: 40, type: !3574, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !251)
!10043 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10044 = !DILocation(line: 43, column: 3, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10046, file: !10043, line: 42, column: 37)
!10046 = distinct !DILexicalBlock(scope: !10042, file: !10043, line: 42, column: 6)
!10047 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10043, file: !10043, line: 56, type: !334, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !251)
!10048 = !DILocation(line: 58, column: 2, scope: !10047)
!10049 = !DILocation(line: 62, column: 1, scope: !10047)
!10050 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9927, file: !9927, line: 4304, type: !10051, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !10053)
!10051 = !DISubroutineType(types: !10052)
!10052 = !{null, !108, !108, !108, !108}
!10053 = !{!10054, !10055, !10056, !10057}
!10054 = !DILocalVariable(name: "Source", arg: 1, scope: !10050, file: !9927, line: 4304, type: !108)
!10055 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10050, file: !9927, line: 4304, type: !108)
!10056 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10050, file: !9927, line: 4304, type: !108)
!10057 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10050, file: !9927, line: 4304, type: !108)
!10058 = !DILocation(line: 0, scope: !10050)
!10059 = !DILocation(line: 4306, column: 3, scope: !10050)
!10060 = !DILocation(line: 4308, column: 3, scope: !10050)
!10061 = !DILocation(line: 4312, column: 1, scope: !10050)
!10062 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10043, file: !10043, line: 69, type: !334, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !251)
!10063 = !DILocation(line: 72, column: 2, scope: !10062)
!10064 = !DILocation(line: 73, column: 1, scope: !10062)
!10065 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10066, file: !10066, line: 1185, type: !7369, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !10067)
!10066 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10067 = !{!10068, !10069}
!10068 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10065, file: !10066, line: 1185, type: !108)
!10069 = !DILocalVariable(name: "tmpreg", scope: !10065, file: !10066, line: 1187, type: !409)
!10070 = !DILocation(line: 0, scope: !10065)
!10071 = !DILocation(line: 1187, column: 3, scope: !10065)
!10072 = !DILocation(line: 1187, column: 17, scope: !10065)
!10073 = !DILocation(line: 1188, column: 3, scope: !10065)
!10074 = !DILocation(line: 1190, column: 12, scope: !10065)
!10075 = !DILocation(line: 1190, column: 10, scope: !10065)
!10076 = !DILocation(line: 1191, column: 9, scope: !10065)
!10077 = !DILocation(line: 1192, column: 1, scope: !10065)
!10078 = distinct !DISubprogram(name: "uart_console_init", scope: !1101, file: !1101, line: 588, type: !1078, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10079)
!10079 = !{!10080}
!10080 = !DILocalVariable(name: "arg", arg: 1, scope: !10078, file: !1101, line: 588, type: !1056)
!10081 = !DILocation(line: 0, scope: !10078)
!10082 = !DILocation(line: 593, column: 7, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10078, file: !1101, line: 593, column: 6)
!10084 = !DILocation(line: 593, column: 6, scope: !10078)
!10085 = !DILocation(line: 597, column: 2, scope: !10078)
!10086 = !DILocation(line: 599, column: 2, scope: !10078)
!10087 = !DILocation(line: 600, column: 1, scope: !10078)
!10088 = distinct !DISubprogram(name: "device_is_ready", scope: !10089, file: !10089, line: 47, type: !10090, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10092)
!10089 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!10090 = !DISubroutineType(types: !10091)
!10091 = !{!131, !1056}
!10092 = !{!10093}
!10093 = !DILocalVariable(name: "dev", arg: 1, scope: !10088, file: !10089, line: 47, type: !1056)
!10094 = !DILocation(line: 0, scope: !10088)
!10095 = !DILocation(line: 55, column: 2, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10088, file: !10089, line: 55, column: 2)
!10097 = !{i64 2154267457}
!10098 = !DILocation(line: 56, column: 9, scope: !10088)
!10099 = !DILocation(line: 56, column: 2, scope: !10088)
!10100 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1101, file: !1101, line: 573, type: !334, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !251)
!10101 = !DILocation(line: 576, column: 2, scope: !10100)
!10102 = !DILocation(line: 579, column: 2, scope: !10100)
!10103 = !DILocation(line: 581, column: 1, scope: !10100)
!10104 = distinct !DISubprogram(name: "console_out", scope: !1101, file: !1101, line: 77, type: !396, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10105)
!10105 = !{!10106}
!10106 = !DILocalVariable(name: "c", arg: 1, scope: !10104, file: !1101, line: 77, type: !103)
!10107 = !DILocation(line: 0, scope: !10104)
!10108 = !DILocation(line: 89, column: 11, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10104, file: !1101, line: 89, column: 6)
!10110 = !DILocation(line: 89, column: 6, scope: !10104)
!10111 = !DILocation(line: 90, column: 3, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10109, file: !1101, line: 89, column: 17)
!10113 = !DILocation(line: 91, column: 2, scope: !10112)
!10114 = !DILocation(line: 92, column: 34, scope: !10104)
!10115 = !DILocation(line: 92, column: 2, scope: !10104)
!10116 = !DILocation(line: 94, column: 2, scope: !10104)
!10117 = distinct !DISubprogram(name: "uart_poll_out", scope: !10118, file: !10118, line: 95, type: !1074, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10119)
!10118 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/benchmark")
!10119 = !{!10120, !10121}
!10120 = !DILocalVariable(name: "dev", arg: 1, scope: !10117, file: !10118, line: 95, type: !1056)
!10121 = !DILocalVariable(name: "out_char", arg: 2, scope: !10117, file: !10118, line: 95, type: !186)
!10122 = !DILocation(line: 0, scope: !10117)
!10123 = !DILocation(line: 105, column: 2, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10117, file: !10118, line: 105, column: 2)
!10125 = !{i64 2154350848}
!10126 = !DILocation(line: 106, column: 2, scope: !10117)
!10127 = !DILocation(line: 107, column: 1, scope: !10117)
!10128 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1050, file: !1050, line: 574, type: !1074, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10129)
!10129 = !{!10130, !10131, !10132}
!10130 = !DILocalVariable(name: "dev", arg: 1, scope: !10128, file: !1050, line: 574, type: !1056)
!10131 = !DILocalVariable(name: "out_char", arg: 2, scope: !10128, file: !1050, line: 575, type: !186)
!10132 = !DILocalVariable(name: "api", scope: !10128, file: !1050, line: 577, type: !1047)
!10133 = !DILocation(line: 0, scope: !10128)
!10134 = !DILocation(line: 578, column: 40, scope: !10128)
!10135 = !DILocation(line: 580, column: 7, scope: !10128)
!10136 = !DILocation(line: 580, column: 2, scope: !10128)
!10137 = !DILocation(line: 581, column: 1, scope: !10128)
!10138 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10090, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10139)
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "dev", arg: 1, scope: !10138, file: !429, line: 730, type: !1056)
!10141 = !DILocation(line: 0, scope: !10138)
!10142 = !DILocation(line: 732, column: 9, scope: !10138)
!10143 = !DILocation(line: 732, column: 2, scope: !10138)
!10144 = distinct !DISubprogram(name: "uart_register_input", scope: !1101, file: !1101, line: 560, type: !10145, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10190)
!10145 = !DISubroutineType(types: !10146)
!10146 = !{null, !10147, !10147, !10187}
!10147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10148, size: 32)
!10148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !137, line: 2208, size: 128, elements: !10149)
!10149 = !{!10150}
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10148, file: !137, line: 2209, baseType: !10151, size: 128)
!10151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !137, line: 1709, size: 128, elements: !10152)
!10152 = !{!10153, !10166, !10168}
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10151, file: !137, line: 1710, baseType: !10154, size: 64)
!10154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10155, line: 46, baseType: !10156)
!10155 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10155, line: 41, size: 64, elements: !10157)
!10157 = !{!10158, !10165}
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10156, file: !10155, line: 42, baseType: !10159, size: 32)
!10159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10160, size: 32)
!10160 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10155, line: 39, baseType: !10161)
!10161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10155, line: 35, size: 32, elements: !10162)
!10162 = !{!10163}
!10163 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10161, file: !10155, line: 36, baseType: !10164, size: 32)
!10164 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10155, line: 32, baseType: !108)
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10156, file: !10155, line: 43, baseType: !10159, size: 32, offset: 32)
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10151, file: !137, line: 1711, baseType: !10167, offset: 64)
!10167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10151, file: !137, line: 1712, baseType: !10169, size: 64, offset: 64)
!10169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !10170)
!10170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !10171)
!10171 = !{!10172}
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10170, file: !141, line: 232, baseType: !10173, size: 64)
!10173 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !10174)
!10174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !10175)
!10175 = !{!10176, !10182}
!10176 = !DIDerivedType(tag: DW_TAG_member, scope: !10174, file: !146, line: 38, baseType: !10177, size: 32)
!10177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10174, file: !146, line: 38, size: 32, elements: !10178)
!10178 = !{!10179, !10181}
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10177, file: !146, line: 39, baseType: !10180, size: 32)
!10180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10174, size: 32)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10177, file: !146, line: 40, baseType: !10180, size: 32)
!10182 = !DIDerivedType(tag: DW_TAG_member, scope: !10174, file: !146, line: 42, baseType: !10183, size: 32, offset: 32)
!10183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10174, file: !146, line: 42, size: 32, elements: !10184)
!10184 = !{!10185, !10186}
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10183, file: !146, line: 43, baseType: !10180, size: 32)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10183, file: !146, line: 44, baseType: !10180, size: 32)
!10187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10188, size: 32)
!10188 = !DISubroutineType(types: !10189)
!10189 = !{!185, !277, !185}
!10190 = !{!10191, !10192, !10193}
!10191 = !DILocalVariable(name: "avail", arg: 1, scope: !10144, file: !1101, line: 560, type: !10147)
!10192 = !DILocalVariable(name: "lines", arg: 2, scope: !10144, file: !1101, line: 560, type: !10147)
!10193 = !DILocalVariable(name: "completion", arg: 3, scope: !10144, file: !1101, line: 561, type: !10187)
!10194 = !DILocation(line: 0, scope: !10144)
!10195 = !DILocation(line: 566, column: 1, scope: !10144)
!10196 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1279, file: !1279, line: 523, type: !1137, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10197)
!10197 = !{!10198, !10199, !10200, !10201, !10202}
!10198 = !DILocalVariable(name: "dev", arg: 1, scope: !10196, file: !1279, line: 523, type: !1139)
!10199 = !DILocalVariable(name: "pin", arg: 2, scope: !10196, file: !1279, line: 524, type: !1154)
!10200 = !DILocalVariable(name: "flags", arg: 3, scope: !10196, file: !1279, line: 524, type: !1155)
!10201 = !DILocalVariable(name: "err", scope: !10196, file: !1279, line: 526, type: !103)
!10202 = !DILocalVariable(name: "pincfg", scope: !10196, file: !1279, line: 527, type: !103)
!10203 = !DILocation(line: 0, scope: !10196)
!10204 = !DILocation(line: 527, column: 2, scope: !10196)
!10205 = !DILocation(line: 532, column: 8, scope: !10196)
!10206 = !DILocation(line: 533, column: 10, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10196, file: !1279, line: 533, column: 6)
!10208 = !DILocation(line: 533, column: 6, scope: !10196)
!10209 = !DILocation(line: 543, column: 13, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10196, file: !1279, line: 543, column: 6)
!10211 = !DILocation(line: 543, column: 28, scope: !10210)
!10212 = !DILocation(line: 543, column: 6, scope: !10196)
!10213 = !DILocation(line: 544, column: 14, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10215, file: !1279, line: 544, column: 7)
!10215 = distinct !DILexicalBlock(scope: !10210, file: !1279, line: 543, column: 34)
!10216 = !DILocation(line: 544, column: 39, scope: !10214)
!10217 = !DILocation(line: 544, column: 7, scope: !10215)
!10218 = !DILocation(line: 545, column: 38, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10214, file: !1279, line: 544, column: 45)
!10220 = !DILocation(line: 545, column: 4, scope: !10219)
!10221 = !DILocation(line: 546, column: 3, scope: !10219)
!10222 = !DILocation(line: 546, column: 21, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10214, file: !1279, line: 546, column: 14)
!10224 = !DILocation(line: 546, column: 45, scope: !10223)
!10225 = !DILocation(line: 546, column: 14, scope: !10214)
!10226 = !DILocation(line: 547, column: 40, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10223, file: !1279, line: 546, column: 51)
!10228 = !DILocation(line: 547, column: 4, scope: !10227)
!10229 = !DILocation(line: 548, column: 3, scope: !10227)
!10230 = !DILocation(line: 551, column: 32, scope: !10196)
!10231 = !DILocation(line: 551, column: 37, scope: !10196)
!10232 = !DILocation(line: 551, column: 2, scope: !10196)
!10233 = !DILocation(line: 554, column: 6, scope: !10196)
!10234 = !DILocation(line: 562, column: 1, scope: !10196)
!10235 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1279, file: !1279, line: 410, type: !10236, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10238)
!10236 = !DISubroutineType(types: !10237)
!10237 = !{!103, !1139, !966}
!10238 = !{!10239, !10240, !10241, !10243}
!10239 = !DILocalVariable(name: "dev", arg: 1, scope: !10235, file: !1279, line: 410, type: !1139)
!10240 = !DILocalVariable(name: "value", arg: 2, scope: !10235, file: !1279, line: 410, type: !966)
!10241 = !DILocalVariable(name: "cfg", scope: !10235, file: !1279, line: 412, type: !10242)
!10242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!10243 = !DILocalVariable(name: "gpio", scope: !10235, file: !1279, line: 413, type: !1212)
!10244 = !DILocation(line: 0, scope: !10235)
!10245 = !DILocation(line: 412, column: 45, scope: !10235)
!10246 = !DILocation(line: 413, column: 44, scope: !10235)
!10247 = !DILocation(line: 415, column: 11, scope: !10235)
!10248 = !DILocation(line: 415, column: 9, scope: !10235)
!10249 = !DILocation(line: 417, column: 2, scope: !10235)
!10250 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1279, file: !1279, line: 420, type: !1164, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10251)
!10251 = !{!10252, !10253, !10254, !10255, !10256, !10257}
!10252 = !DILocalVariable(name: "dev", arg: 1, scope: !10250, file: !1279, line: 420, type: !1139)
!10253 = !DILocalVariable(name: "mask", arg: 2, scope: !10250, file: !1279, line: 421, type: !1166)
!10254 = !DILocalVariable(name: "value", arg: 3, scope: !10250, file: !1279, line: 422, type: !1161)
!10255 = !DILocalVariable(name: "cfg", scope: !10250, file: !1279, line: 424, type: !10242)
!10256 = !DILocalVariable(name: "gpio", scope: !10250, file: !1279, line: 425, type: !1212)
!10257 = !DILocalVariable(name: "port_value", scope: !10250, file: !1279, line: 426, type: !108)
!10258 = !DILocation(line: 0, scope: !10250)
!10259 = !DILocation(line: 424, column: 45, scope: !10250)
!10260 = !DILocation(line: 425, column: 44, scope: !10250)
!10261 = !DILocation(line: 430, column: 15, scope: !10250)
!10262 = !DILocation(line: 431, column: 46, scope: !10250)
!10263 = !DILocation(line: 431, column: 44, scope: !10250)
!10264 = !DILocation(line: 431, column: 61, scope: !10250)
!10265 = !DILocation(line: 431, column: 53, scope: !10250)
!10266 = !DILocation(line: 431, column: 2, scope: !10250)
!10267 = !DILocation(line: 435, column: 2, scope: !10250)
!10268 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1279, file: !1279, line: 438, type: !1169, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10269)
!10269 = !{!10270, !10271, !10272, !10273}
!10270 = !DILocalVariable(name: "dev", arg: 1, scope: !10268, file: !1279, line: 438, type: !1139)
!10271 = !DILocalVariable(name: "pins", arg: 2, scope: !10268, file: !1279, line: 439, type: !1166)
!10272 = !DILocalVariable(name: "cfg", scope: !10268, file: !1279, line: 441, type: !10242)
!10273 = !DILocalVariable(name: "gpio", scope: !10268, file: !1279, line: 442, type: !1212)
!10274 = !DILocation(line: 0, scope: !10268)
!10275 = !DILocation(line: 441, column: 45, scope: !10268)
!10276 = !DILocation(line: 442, column: 44, scope: !10268)
!10277 = !DILocation(line: 448, column: 2, scope: !10268)
!10278 = !DILocation(line: 450, column: 2, scope: !10268)
!10279 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1279, file: !1279, line: 453, type: !1169, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10280)
!10280 = !{!10281, !10282, !10283, !10284}
!10281 = !DILocalVariable(name: "dev", arg: 1, scope: !10279, file: !1279, line: 453, type: !1139)
!10282 = !DILocalVariable(name: "pins", arg: 2, scope: !10279, file: !1279, line: 454, type: !1166)
!10283 = !DILocalVariable(name: "cfg", scope: !10279, file: !1279, line: 456, type: !10242)
!10284 = !DILocalVariable(name: "gpio", scope: !10279, file: !1279, line: 457, type: !1212)
!10285 = !DILocation(line: 0, scope: !10279)
!10286 = !DILocation(line: 456, column: 45, scope: !10279)
!10287 = !DILocation(line: 457, column: 44, scope: !10279)
!10288 = !DILocation(line: 467, column: 2, scope: !10279)
!10289 = !DILocation(line: 470, column: 2, scope: !10279)
!10290 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1279, file: !1279, line: 473, type: !1169, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10291)
!10291 = !{!10292, !10293, !10294, !10295}
!10292 = !DILocalVariable(name: "dev", arg: 1, scope: !10290, file: !1279, line: 473, type: !1139)
!10293 = !DILocalVariable(name: "pins", arg: 2, scope: !10290, file: !1279, line: 474, type: !1166)
!10294 = !DILocalVariable(name: "cfg", scope: !10290, file: !1279, line: 476, type: !10242)
!10295 = !DILocalVariable(name: "gpio", scope: !10290, file: !1279, line: 477, type: !1212)
!10296 = !DILocation(line: 0, scope: !10290)
!10297 = !DILocation(line: 476, column: 45, scope: !10290)
!10298 = !DILocation(line: 477, column: 44, scope: !10290)
!10299 = !DILocation(line: 484, column: 2, scope: !10290)
!10300 = !DILocation(line: 487, column: 2, scope: !10290)
!10301 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1279, file: !1279, line: 594, type: !1175, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10302)
!10302 = !{!10303, !10304, !10305, !10306, !10307, !10308, !10310, !10311, !10312}
!10303 = !DILocalVariable(name: "dev", arg: 1, scope: !10301, file: !1279, line: 594, type: !1139)
!10304 = !DILocalVariable(name: "pin", arg: 2, scope: !10301, file: !1279, line: 595, type: !1154)
!10305 = !DILocalVariable(name: "mode", arg: 3, scope: !10301, file: !1279, line: 596, type: !1113)
!10306 = !DILocalVariable(name: "trig", arg: 4, scope: !10301, file: !1279, line: 597, type: !1119)
!10307 = !DILocalVariable(name: "cfg", scope: !10301, file: !1279, line: 599, type: !10242)
!10308 = !DILocalVariable(name: "data", scope: !10301, file: !1279, line: 600, type: !10309)
!10309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!10310 = !DILocalVariable(name: "edge", scope: !10301, file: !1279, line: 601, type: !103)
!10311 = !DILocalVariable(name: "err", scope: !10301, file: !1279, line: 602, type: !103)
!10312 = !DILabel(scope: !10301, name: "exit", file: !1279, line: 643)
!10313 = !DILocation(line: 0, scope: !10301)
!10314 = !DILocation(line: 599, column: 45, scope: !10301)
!10315 = !DILocation(line: 604, column: 6, scope: !10301)
!10316 = !DILocation(line: 605, column: 34, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !1279, line: 605, column: 7)
!10318 = distinct !DILexicalBlock(scope: !10319, file: !1279, line: 604, column: 38)
!10319 = distinct !DILexicalBlock(scope: !10301, file: !1279, line: 604, column: 6)
!10320 = !DILocation(line: 605, column: 7, scope: !10317)
!10321 = !DILocation(line: 605, column: 47, scope: !10317)
!10322 = !DILocation(line: 605, column: 39, scope: !10317)
!10323 = !DILocation(line: 605, column: 7, scope: !10318)
!10324 = !DILocation(line: 606, column: 4, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10317, file: !1279, line: 605, column: 53)
!10326 = !DILocation(line: 607, column: 4, scope: !10325)
!10327 = !DILocation(line: 608, column: 4, scope: !10325)
!10328 = !DILocation(line: 609, column: 3, scope: !10325)
!10329 = !DILocation(line: 600, column: 38, scope: !10301)
!10330 = !DILocation(line: 620, column: 30, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10301, file: !1279, line: 620, column: 6)
!10332 = !DILocation(line: 620, column: 6, scope: !10331)
!10333 = !DILocation(line: 620, column: 57, scope: !10331)
!10334 = !DILocation(line: 620, column: 6, scope: !10301)
!10335 = !DILocation(line: 625, column: 29, scope: !10301)
!10336 = !DILocation(line: 625, column: 2, scope: !10301)
!10337 = !DILocation(line: 627, column: 2, scope: !10301)
!10338 = !DILocation(line: 630, column: 3, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10301, file: !1279, line: 627, column: 16)
!10340 = !DILocation(line: 633, column: 3, scope: !10339)
!10341 = !DILocation(line: 636, column: 3, scope: !10339)
!10342 = !DILocation(line: 639, column: 2, scope: !10301)
!10343 = !DILocation(line: 641, column: 2, scope: !10301)
!10344 = !DILocation(line: 643, column: 1, scope: !10301)
!10345 = !DILocation(line: 644, column: 2, scope: !10301)
!10346 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1279, file: !1279, line: 647, type: !1179, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10347)
!10347 = !{!10348, !10349, !10350, !10351}
!10348 = !DILocalVariable(name: "dev", arg: 1, scope: !10346, file: !1279, line: 647, type: !1139)
!10349 = !DILocalVariable(name: "callback", arg: 2, scope: !10346, file: !1279, line: 648, type: !1181)
!10350 = !DILocalVariable(name: "set", arg: 3, scope: !10346, file: !1279, line: 649, type: !131)
!10351 = !DILocalVariable(name: "data", scope: !10346, file: !1279, line: 651, type: !10309)
!10352 = !DILocation(line: 0, scope: !10346)
!10353 = !DILocation(line: 651, column: 38, scope: !10346)
!10354 = !DILocation(line: 653, column: 37, scope: !10346)
!10355 = !DILocation(line: 653, column: 9, scope: !10346)
!10356 = !DILocation(line: 653, column: 2, scope: !10346)
!10357 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10358, file: !10358, line: 38, type: !10359, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10362)
!10358 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10359 = !DISubroutineType(types: !10360)
!10360 = !{!103, !10361, !1181, !131}
!10361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!10362 = !{!10363, !10364, !10365}
!10363 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10357, file: !10358, line: 38, type: !10361)
!10364 = !DILocalVariable(name: "callback", arg: 2, scope: !10357, file: !10358, line: 39, type: !1181)
!10365 = !DILocalVariable(name: "set", arg: 3, scope: !10357, file: !10358, line: 40, type: !131)
!10366 = !DILocation(line: 0, scope: !10357)
!10367 = !DILocation(line: 45, column: 7, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10357, file: !10358, line: 45, column: 6)
!10369 = !DILocation(line: 45, column: 6, scope: !10357)
!10370 = !DILocation(line: 46, column: 56, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !10358, line: 46, column: 7)
!10372 = distinct !DILexicalBlock(scope: !10368, file: !10358, line: 45, column: 38)
!10373 = !DILocation(line: 46, column: 8, scope: !10371)
!10374 = !DILocation(line: 46, column: 7, scope: !10372)
!10375 = !DILocation(line: 51, column: 13, scope: !10368)
!10376 = !DILocation(line: 56, column: 43, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10378, file: !10358, line: 55, column: 11)
!10378 = distinct !DILexicalBlock(scope: !10357, file: !10358, line: 55, column: 6)
!10379 = !DILocation(line: 56, column: 3, scope: !10377)
!10380 = !DILocation(line: 57, column: 2, scope: !10377)
!10381 = !DILocation(line: 60, column: 1, scope: !10357)
!10382 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1186, file: !1186, line: 261, type: !10383, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10385)
!10383 = !DISubroutineType(types: !10384)
!10384 = !{!131, !10361}
!10385 = !{!10386}
!10386 = !DILocalVariable(name: "list", arg: 1, scope: !10382, file: !1186, line: 261, type: !10361)
!10387 = !DILocation(line: 0, scope: !10382)
!10388 = !DILocation(line: 261, column: 1, scope: !10382)
!10389 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1186, file: !1186, line: 417, type: !10390, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10392)
!10390 = !DISubroutineType(types: !10391)
!10391 = !{!131, !10361, !1352}
!10392 = !{!10393, !10394, !10395, !10396}
!10393 = !DILocalVariable(name: "list", arg: 1, scope: !10389, file: !1186, line: 417, type: !10361)
!10394 = !DILocalVariable(name: "node", arg: 2, scope: !10389, file: !1186, line: 417, type: !1352)
!10395 = !DILocalVariable(name: "prev", scope: !10389, file: !1186, line: 417, type: !1352)
!10396 = !DILocalVariable(name: "test", scope: !10389, file: !1186, line: 417, type: !1352)
!10397 = !DILocation(line: 0, scope: !10389)
!10398 = !DILocation(line: 417, column: 1, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10389, file: !1186, line: 417, column: 1)
!10400 = !DILocation(line: 417, column: 1, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10399, file: !1186, line: 417, column: 1)
!10402 = !DILocation(line: 417, column: 1, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !1186, line: 417, column: 1)
!10404 = distinct !DILexicalBlock(scope: !10401, file: !1186, line: 417, column: 1)
!10405 = !DILocation(line: 417, column: 1, scope: !10404)
!10406 = distinct !{!10406, !10398, !10398}
!10407 = !DILocation(line: 417, column: 1, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10403, file: !1186, line: 417, column: 1)
!10409 = !DILocation(line: 417, column: 1, scope: !10389)
!10410 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1186, file: !1186, line: 298, type: !10411, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10413)
!10411 = !DISubroutineType(types: !10412)
!10412 = !{null, !10361, !1352}
!10413 = !{!10414, !10415}
!10414 = !DILocalVariable(name: "list", arg: 1, scope: !10410, file: !1186, line: 298, type: !10361)
!10415 = !DILocalVariable(name: "node", arg: 2, scope: !10410, file: !1186, line: 298, type: !1352)
!10416 = !DILocation(line: 0, scope: !10410)
!10417 = !DILocation(line: 298, column: 1, scope: !10410)
!10418 = !DILocation(line: 298, column: 1, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10410, file: !1186, line: 298, column: 1)
!10420 = !DILocation(line: 298, column: 1, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10419, file: !1186, line: 298, column: 1)
!10422 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1186, file: !1186, line: 231, type: !10423, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10425)
!10423 = !DISubroutineType(types: !10424)
!10424 = !{!1352, !10361}
!10425 = !{!10426}
!10426 = !DILocalVariable(name: "list", arg: 1, scope: !10422, file: !1186, line: 231, type: !10361)
!10427 = !DILocation(line: 0, scope: !10422)
!10428 = !DILocation(line: 233, column: 15, scope: !10422)
!10429 = !DILocation(line: 233, column: 2, scope: !10422)
!10430 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1186, file: !1186, line: 209, type: !10431, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10433)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{null, !1352, !1352}
!10433 = !{!10434, !10435}
!10434 = !DILocalVariable(name: "parent", arg: 1, scope: !10430, file: !1186, line: 209, type: !1352)
!10435 = !DILocalVariable(name: "child", arg: 2, scope: !10430, file: !1186, line: 209, type: !1352)
!10436 = !DILocation(line: 0, scope: !10430)
!10437 = !DILocation(line: 211, column: 10, scope: !10430)
!10438 = !DILocation(line: 211, column: 15, scope: !10430)
!10439 = !DILocation(line: 212, column: 1, scope: !10430)
!10440 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1186, file: !1186, line: 214, type: !10411, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10441)
!10441 = !{!10442, !10443}
!10442 = !DILocalVariable(name: "list", arg: 1, scope: !10440, file: !1186, line: 214, type: !10361)
!10443 = !DILocalVariable(name: "node", arg: 2, scope: !10440, file: !1186, line: 214, type: !1352)
!10444 = !DILocation(line: 0, scope: !10440)
!10445 = !DILocation(line: 216, column: 8, scope: !10440)
!10446 = !DILocation(line: 216, column: 13, scope: !10440)
!10447 = !DILocation(line: 217, column: 1, scope: !10440)
!10448 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1186, file: !1186, line: 243, type: !10423, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10449)
!10449 = !{!10450}
!10450 = !DILocalVariable(name: "list", arg: 1, scope: !10448, file: !1186, line: 243, type: !10361)
!10451 = !DILocation(line: 0, scope: !10448)
!10452 = !DILocation(line: 245, column: 15, scope: !10448)
!10453 = !DILocation(line: 245, column: 2, scope: !10448)
!10454 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1186, file: !1186, line: 219, type: !10411, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10455)
!10455 = !{!10456, !10457}
!10456 = !DILocalVariable(name: "list", arg: 1, scope: !10454, file: !1186, line: 219, type: !10361)
!10457 = !DILocalVariable(name: "node", arg: 2, scope: !10454, file: !1186, line: 219, type: !1352)
!10458 = !DILocation(line: 0, scope: !10454)
!10459 = !DILocation(line: 221, column: 8, scope: !10454)
!10460 = !DILocation(line: 221, column: 13, scope: !10454)
!10461 = !DILocation(line: 222, column: 1, scope: !10454)
!10462 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1186, file: !1186, line: 401, type: !10463, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10465)
!10463 = !DISubroutineType(types: !10464)
!10464 = !{null, !10361, !1352, !1352}
!10465 = !{!10466, !10467, !10468}
!10466 = !DILocalVariable(name: "list", arg: 1, scope: !10462, file: !1186, line: 401, type: !10361)
!10467 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10462, file: !1186, line: 401, type: !1352)
!10468 = !DILocalVariable(name: "node", arg: 3, scope: !10462, file: !1186, line: 401, type: !1352)
!10469 = !DILocation(line: 0, scope: !10462)
!10470 = !DILocation(line: 401, column: 1, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10462, file: !1186, line: 401, column: 1)
!10472 = !DILocation(line: 0, scope: !10471)
!10473 = !DILocation(line: 401, column: 1, scope: !10462)
!10474 = !DILocation(line: 401, column: 1, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10471, file: !1186, line: 401, column: 1)
!10476 = !DILocation(line: 401, column: 1, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10475, file: !1186, line: 401, column: 1)
!10478 = !DILocation(line: 401, column: 1, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10477, file: !1186, line: 401, column: 1)
!10480 = !DILocation(line: 401, column: 1, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10471, file: !1186, line: 401, column: 1)
!10482 = !DILocation(line: 401, column: 1, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10481, file: !1186, line: 401, column: 1)
!10484 = !DILocation(line: 401, column: 1, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10483, file: !1186, line: 401, column: 1)
!10486 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1186, file: !1186, line: 285, type: !10487, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10489)
!10487 = !DISubroutineType(types: !10488)
!10488 = !{!1352, !1352}
!10489 = !{!10490}
!10490 = !DILocalVariable(name: "node", arg: 1, scope: !10486, file: !1186, line: 285, type: !1352)
!10491 = !DILocation(line: 0, scope: !10486)
!10492 = !DILocation(line: 285, column: 1, scope: !10486)
!10493 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1186, file: !1186, line: 274, type: !10487, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10494)
!10494 = !{!10495}
!10495 = !DILocalVariable(name: "node", arg: 1, scope: !10493, file: !1186, line: 274, type: !1352)
!10496 = !DILocation(line: 0, scope: !10493)
!10497 = !DILocation(line: 274, column: 1, scope: !10493)
!10498 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1186, file: !1186, line: 204, type: !10487, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10499)
!10499 = !{!10500}
!10500 = !DILocalVariable(name: "node", arg: 1, scope: !10498, file: !1186, line: 204, type: !1352)
!10501 = !DILocation(line: 0, scope: !10498)
!10502 = !DILocation(line: 206, column: 15, scope: !10498)
!10503 = !DILocation(line: 206, column: 2, scope: !10498)
!10504 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1279, file: !1279, line: 342, type: !396, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10505)
!10505 = !{!10506, !10507, !10508}
!10506 = !DILocalVariable(name: "pin", arg: 1, scope: !10504, file: !1279, line: 342, type: !103)
!10507 = !DILocalVariable(name: "line", scope: !10504, file: !1279, line: 344, type: !108)
!10508 = !DILocalVariable(name: "port", scope: !10504, file: !1279, line: 345, type: !103)
!10509 = !DILocation(line: 0, scope: !10504)
!10510 = !DILocation(line: 344, column: 18, scope: !10504)
!10511 = !{i32 983040, i32 0}
!10512 = !DILocation(line: 356, column: 9, scope: !10504)
!10513 = !DILocation(line: 370, column: 2, scope: !10504)
!10514 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1279, file: !1279, line: 37, type: !829, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10515)
!10515 = !{!10516, !10517, !10518}
!10516 = !DILocalVariable(name: "line", arg: 1, scope: !10514, file: !1279, line: 37, type: !103)
!10517 = !DILocalVariable(name: "arg", arg: 2, scope: !10514, file: !1279, line: 37, type: !102)
!10518 = !DILocalVariable(name: "data", scope: !10514, file: !1279, line: 39, type: !10309)
!10519 = !DILocation(line: 0, scope: !10514)
!10520 = !DILocation(line: 41, column: 29, scope: !10514)
!10521 = !DILocation(line: 41, column: 39, scope: !10514)
!10522 = !DILocation(line: 41, column: 44, scope: !10514)
!10523 = !DILocation(line: 41, column: 2, scope: !10514)
!10524 = !DILocation(line: 42, column: 1, scope: !10514)
!10525 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1279, file: !1279, line: 376, type: !10526, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10528)
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!103, !103, !103}
!10528 = !{!10529, !10530, !10531, !10533, !10534}
!10529 = !DILocalVariable(name: "port", arg: 1, scope: !10525, file: !1279, line: 376, type: !103)
!10530 = !DILocalVariable(name: "pin", arg: 2, scope: !10525, file: !1279, line: 376, type: !103)
!10531 = !DILocalVariable(name: "clk", scope: !10525, file: !1279, line: 386, type: !10532)
!10532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!10533 = !DILocalVariable(name: "pclken", scope: !10525, file: !1279, line: 387, type: !1395)
!10534 = !DILocalVariable(name: "ret", scope: !10525, file: !1279, line: 396, type: !103)
!10535 = !DILocation(line: 0, scope: !10525)
!10536 = !DILocation(line: 387, column: 2, scope: !10525)
!10537 = !DILocation(line: 387, column: 22, scope: !10525)
!10538 = !DILocation(line: 399, column: 8, scope: !10525)
!10539 = !DILocation(line: 400, column: 10, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10525, file: !1279, line: 400, column: 6)
!10541 = !DILocation(line: 400, column: 6, scope: !10525)
!10542 = !DILocation(line: 405, column: 2, scope: !10525)
!10543 = !DILocation(line: 407, column: 2, scope: !10525)
!10544 = !DILocation(line: 408, column: 1, scope: !10525)
!10545 = distinct !DISubprogram(name: "clock_control_on", scope: !915, file: !915, line: 123, type: !1244, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10546)
!10546 = !{!10547, !10548, !10549}
!10547 = !DILocalVariable(name: "dev", arg: 1, scope: !10545, file: !915, line: 123, type: !1139)
!10548 = !DILocalVariable(name: "sys", arg: 2, scope: !10545, file: !915, line: 124, type: !1010)
!10549 = !DILocalVariable(name: "api", scope: !10545, file: !915, line: 126, type: !1237)
!10550 = !DILocation(line: 0, scope: !10545)
!10551 = !DILocation(line: 127, column: 49, scope: !10545)
!10552 = !DILocation(line: 129, column: 14, scope: !10545)
!10553 = !DILocation(line: 129, column: 9, scope: !10545)
!10554 = !DILocation(line: 129, column: 2, scope: !10545)
!10555 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1279, file: !1279, line: 311, type: !9688, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10556)
!10556 = !{!10557, !10558, !10559}
!10557 = !DILocalVariable(name: "port", arg: 1, scope: !10555, file: !1279, line: 311, type: !103)
!10558 = !DILocalVariable(name: "pin", arg: 2, scope: !10555, file: !1279, line: 311, type: !103)
!10559 = !DILocalVariable(name: "line", scope: !10555, file: !1279, line: 313, type: !108)
!10560 = !DILocation(line: 0, scope: !10555)
!10561 = !DILocation(line: 313, column: 18, scope: !10555)
!10562 = !DILocation(line: 337, column: 2, scope: !10555)
!10563 = !DILocation(line: 340, column: 1, scope: !10555)
!10564 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1279, file: !1279, line: 295, type: !10565, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10567)
!10565 = !DISubroutineType(types: !10566)
!10566 = !{!108, !103}
!10567 = !{!10568}
!10568 = !DILocalVariable(name: "pin", arg: 1, scope: !10564, file: !1279, line: 295, type: !103)
!10569 = !DILocation(line: 0, scope: !10564)
!10570 = !DILocation(line: 307, column: 46, scope: !10564)
!10571 = !DILocation(line: 307, column: 27, scope: !10564)
!10572 = !DILocation(line: 307, column: 32, scope: !10564)
!10573 = !DILocation(line: 307, column: 14, scope: !10564)
!10574 = !DILocation(line: 307, column: 39, scope: !10564)
!10575 = !DILocation(line: 307, column: 2, scope: !10564)
!10576 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6983, file: !6983, line: 671, type: !10577, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10579)
!10577 = !DISubroutineType(types: !10578)
!10578 = !{null, !108, !108}
!10579 = !{!10580, !10581}
!10580 = !DILocalVariable(name: "Port", arg: 1, scope: !10576, file: !6983, line: 671, type: !108)
!10581 = !DILocalVariable(name: "Line", arg: 2, scope: !10576, file: !6983, line: 671, type: !108)
!10582 = !DILocation(line: 0, scope: !10576)
!10583 = !DILocation(line: 673, column: 3, scope: !10576)
!10584 = !DILocalVariable(name: "value", arg: 1, scope: !10585, file: !7280, line: 373, type: !108)
!10585 = distinct !DISubprogram(name: "__RBIT", scope: !7280, file: !7280, line: 373, type: !8523, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10586)
!10586 = !{!10584, !10587}
!10587 = !DILocalVariable(name: "result", scope: !10585, file: !7280, line: 375, type: !108)
!10588 = !DILocation(line: 0, scope: !10585, inlinedAt: !10589)
!10589 = distinct !DILocation(line: 673, column: 3, scope: !10576)
!10590 = !DILocation(line: 380, column: 4, scope: !10585, inlinedAt: !10589)
!10591 = !{i64 2833066}
!10592 = !DILocalVariable(name: "value", arg: 1, scope: !10593, file: !7280, line: 403, type: !108)
!10593 = distinct !DISubprogram(name: "__CLZ", scope: !7280, file: !7280, line: 403, type: !10594, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10596)
!10594 = !DISubroutineType(types: !10595)
!10595 = !{!185, !108}
!10596 = !{!10592}
!10597 = !DILocation(line: 0, scope: !10593, inlinedAt: !10598)
!10598 = distinct !DILocation(line: 673, column: 3, scope: !10576)
!10599 = !DILocation(line: 414, column: 7, scope: !10593, inlinedAt: !10598)
!10600 = !DILocation(line: 674, column: 1, scope: !10576)
!10601 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10358, file: !10358, line: 69, type: !10602, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10604)
!10602 = !DISubroutineType(types: !10603)
!10603 = !{null, !10361, !1139, !108}
!10604 = !{!10605, !10606, !10607, !10608, !10609}
!10605 = !DILocalVariable(name: "list", arg: 1, scope: !10601, file: !10358, line: 69, type: !10361)
!10606 = !DILocalVariable(name: "port", arg: 2, scope: !10601, file: !10358, line: 70, type: !1139)
!10607 = !DILocalVariable(name: "pins", arg: 3, scope: !10601, file: !10358, line: 71, type: !108)
!10608 = !DILocalVariable(name: "cb", scope: !10601, file: !10358, line: 73, type: !1181)
!10609 = !DILocalVariable(name: "tmp", scope: !10601, file: !10358, line: 73, type: !1181)
!10610 = !DILocation(line: 0, scope: !10601)
!10611 = !DILocation(line: 75, column: 2, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10601, file: !10358, line: 75, column: 2)
!10613 = !DILocation(line: 0, scope: !10612)
!10614 = !DILocation(line: 76, column: 11, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10616, file: !10358, line: 76, column: 7)
!10616 = distinct !DILexicalBlock(scope: !10617, file: !10358, line: 75, column: 57)
!10617 = distinct !DILexicalBlock(scope: !10612, file: !10358, line: 75, column: 2)
!10618 = !DILocation(line: 76, column: 20, scope: !10615)
!10619 = !DILocation(line: 76, column: 7, scope: !10616)
!10620 = !DILocation(line: 78, column: 8, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10615, file: !10358, line: 76, column: 28)
!10622 = !DILocation(line: 78, column: 4, scope: !10621)
!10623 = !DILocation(line: 79, column: 3, scope: !10621)
!10624 = !DILocation(line: 75, column: 2, scope: !10617)
!10625 = !DILocation(line: 81, column: 1, scope: !10601)
!10626 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6983, file: !6983, line: 710, type: !8523, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10627)
!10627 = !{!10628}
!10628 = !DILocalVariable(name: "Line", arg: 1, scope: !10626, file: !6983, line: 710, type: !108)
!10629 = !DILocation(line: 0, scope: !10626)
!10630 = !DILocation(line: 712, column: 21, scope: !10626)
!10631 = !DILocation(line: 0, scope: !10585, inlinedAt: !10632)
!10632 = distinct !DILocation(line: 712, column: 76, scope: !10626)
!10633 = !DILocation(line: 380, column: 4, scope: !10585, inlinedAt: !10632)
!10634 = !DILocation(line: 0, scope: !10593, inlinedAt: !10635)
!10635 = distinct !DILocation(line: 712, column: 76, scope: !10626)
!10636 = !DILocation(line: 414, column: 7, scope: !10593, inlinedAt: !10635)
!10637 = !DILocation(line: 712, column: 73, scope: !10626)
!10638 = !DILocation(line: 712, column: 3, scope: !10626)
!10639 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10640, file: !10640, line: 910, type: !10641, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10643)
!10640 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10641 = !DISubroutineType(types: !10642)
!10642 = !{null, !1212, !108}
!10643 = !{!10644, !10645}
!10644 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10639, file: !10640, line: 910, type: !1212)
!10645 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10639, file: !10640, line: 910, type: !108)
!10646 = !DILocation(line: 0, scope: !10639)
!10647 = !DILocation(line: 912, column: 3, scope: !10639)
!10648 = !DILocation(line: 913, column: 1, scope: !10639)
!10649 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10640, file: !10640, line: 823, type: !10650, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10652)
!10650 = !DISubroutineType(types: !10651)
!10651 = !{!108, !1212}
!10652 = !{!10653}
!10653 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10649, file: !10640, line: 823, type: !1212)
!10654 = !DILocation(line: 0, scope: !10649)
!10655 = !DILocation(line: 825, column: 21, scope: !10649)
!10656 = !DILocation(line: 825, column: 3, scope: !10649)
!10657 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10640, file: !10640, line: 812, type: !10641, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10658)
!10658 = !{!10659, !10660}
!10659 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10657, file: !10640, line: 812, type: !1212)
!10660 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10657, file: !10640, line: 812, type: !108)
!10661 = !DILocation(line: 0, scope: !10657)
!10662 = !DILocation(line: 814, column: 3, scope: !10657)
!10663 = !DILocation(line: 815, column: 1, scope: !10657)
!10664 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10640, file: !10640, line: 771, type: !10650, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10665)
!10665 = !{!10666}
!10666 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10664, file: !10640, line: 771, type: !1212)
!10667 = !DILocation(line: 0, scope: !10664)
!10668 = !DILocation(line: 773, column: 21, scope: !10664)
!10669 = !DILocation(line: 773, column: 3, scope: !10664)
!10670 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1279, file: !1279, line: 47, type: !10671, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10673)
!10671 = !DISubroutineType(types: !10672)
!10672 = !{!103, !1155, !374}
!10673 = !{!10674, !10675}
!10674 = !DILocalVariable(name: "flags", arg: 1, scope: !10670, file: !1279, line: 47, type: !1155)
!10675 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10670, file: !1279, line: 47, type: !374)
!10676 = !DILocation(line: 0, scope: !10670)
!10677 = !DILocation(line: 50, column: 13, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10670, file: !1279, line: 50, column: 6)
!10679 = !DILocation(line: 50, column: 28, scope: !10678)
!10680 = !DILocation(line: 50, column: 6, scope: !10670)
!10681 = !DILocation(line: 53, column: 11, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10678, file: !1279, line: 50, column: 34)
!10683 = !DILocation(line: 55, column: 14, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10682, file: !1279, line: 55, column: 7)
!10685 = !DILocation(line: 55, column: 35, scope: !10684)
!10686 = !DILocation(line: 55, column: 7, scope: !10682)
!10687 = !DILocation(line: 56, column: 14, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10689, file: !1279, line: 56, column: 8)
!10689 = distinct !DILexicalBlock(scope: !10684, file: !1279, line: 55, column: 41)
!10690 = !DILocation(line: 56, column: 8, scope: !10689)
!10691 = !DILocation(line: 0, scope: !10684)
!10692 = !DILocation(line: 66, column: 14, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10682, file: !1279, line: 66, column: 7)
!10694 = !DILocation(line: 66, column: 30, scope: !10693)
!10695 = !DILocation(line: 66, column: 7, scope: !10682)
!10696 = !DILocation(line: 67, column: 12, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10693, file: !1279, line: 66, column: 36)
!10698 = !DILocation(line: 68, column: 3, scope: !10697)
!10699 = !DILocation(line: 68, column: 21, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10693, file: !1279, line: 68, column: 14)
!10701 = !DILocation(line: 68, column: 39, scope: !10700)
!10702 = !DILocation(line: 68, column: 14, scope: !10693)
!10703 = !DILocation(line: 69, column: 12, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10700, file: !1279, line: 68, column: 45)
!10705 = !DILocation(line: 70, column: 3, scope: !10704)
!10706 = !DILocation(line: 72, column: 21, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10678, file: !1279, line: 72, column: 14)
!10708 = !DILocation(line: 72, column: 35, scope: !10707)
!10709 = !DILocation(line: 72, column: 14, scope: !10678)
!10710 = !DILocation(line: 77, column: 14, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10712, file: !1279, line: 77, column: 7)
!10712 = distinct !DILexicalBlock(scope: !10707, file: !1279, line: 72, column: 41)
!10713 = !DILocation(line: 77, column: 30, scope: !10711)
!10714 = !DILocation(line: 77, column: 7, scope: !10712)
!10715 = !DILocation(line: 0, scope: !10678)
!10716 = !DILocation(line: 90, column: 1, scope: !10670)
!10717 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1279, file: !1279, line: 157, type: !10718, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10720)
!10718 = !DISubroutineType(types: !10719)
!10719 = !{null, !1139, !103, !103, !103}
!10720 = !{!10721, !10722, !10723, !10724, !10725, !10726, !10727, !10728, !10729, !10730, !10731}
!10721 = !DILocalVariable(name: "dev", arg: 1, scope: !10717, file: !1279, line: 157, type: !1139)
!10722 = !DILocalVariable(name: "pin", arg: 2, scope: !10717, file: !1279, line: 157, type: !103)
!10723 = !DILocalVariable(name: "conf", arg: 3, scope: !10717, file: !1279, line: 158, type: !103)
!10724 = !DILocalVariable(name: "func", arg: 4, scope: !10717, file: !1279, line: 158, type: !103)
!10725 = !DILocalVariable(name: "cfg", scope: !10717, file: !1279, line: 160, type: !10242)
!10726 = !DILocalVariable(name: "gpio", scope: !10717, file: !1279, line: 161, type: !1212)
!10727 = !DILocalVariable(name: "pin_ll", scope: !10717, file: !1279, line: 163, type: !103)
!10728 = !DILocalVariable(name: "mode", scope: !10717, file: !1279, line: 227, type: !32)
!10729 = !DILocalVariable(name: "otype", scope: !10717, file: !1279, line: 227, type: !32)
!10730 = !DILocalVariable(name: "ospeed", scope: !10717, file: !1279, line: 227, type: !32)
!10731 = !DILocalVariable(name: "pupd", scope: !10717, file: !1279, line: 227, type: !32)
!10732 = !DILocation(line: 0, scope: !10717)
!10733 = !DILocation(line: 160, column: 45, scope: !10717)
!10734 = !DILocation(line: 161, column: 44, scope: !10717)
!10735 = !DILocation(line: 163, column: 15, scope: !10717)
!10736 = !DILocation(line: 229, column: 14, scope: !10717)
!10737 = !DILocation(line: 246, column: 47, scope: !10717)
!10738 = !DILocation(line: 246, column: 2, scope: !10717)
!10739 = !DILocation(line: 248, column: 43, scope: !10717)
!10740 = !DILocation(line: 248, column: 2, scope: !10717)
!10741 = !DILocation(line: 250, column: 40, scope: !10717)
!10742 = !DILocation(line: 250, column: 2, scope: !10717)
!10743 = !DILocation(line: 252, column: 11, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10717, file: !1279, line: 252, column: 6)
!10745 = !DILocation(line: 252, column: 6, scope: !10717)
!10746 = !DILocation(line: 253, column: 11, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10748, file: !1279, line: 253, column: 7)
!10748 = distinct !DILexicalBlock(scope: !10744, file: !1279, line: 252, column: 36)
!10749 = !DILocation(line: 253, column: 7, scope: !10748)
!10750 = !DILocation(line: 254, column: 4, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10747, file: !1279, line: 253, column: 16)
!10752 = !DILocation(line: 255, column: 3, scope: !10751)
!10753 = !DILocation(line: 256, column: 4, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10747, file: !1279, line: 255, column: 10)
!10755 = !DILocation(line: 260, column: 40, scope: !10717)
!10756 = !DILocation(line: 260, column: 2, scope: !10717)
!10757 = !DILocation(line: 265, column: 1, scope: !10717)
!10758 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1279, file: !1279, line: 137, type: !10565, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10759)
!10759 = !{!10760, !10761}
!10760 = !DILocalVariable(name: "pin", arg: 1, scope: !10758, file: !1279, line: 137, type: !103)
!10761 = !DILocalVariable(name: "pinval", scope: !10758, file: !1279, line: 139, type: !108)
!10762 = !DILocation(line: 0, scope: !10758)
!10763 = !DILocation(line: 149, column: 13, scope: !10758)
!10764 = !DILocation(line: 151, column: 2, scope: !10758)
!10765 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10640, file: !10640, line: 342, type: !10766, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10768)
!10766 = !DISubroutineType(types: !10767)
!10767 = !{null, !1212, !108, !108}
!10768 = !{!10769, !10770, !10771}
!10769 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10765, file: !10640, line: 342, type: !1212)
!10770 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10765, file: !10640, line: 342, type: !108)
!10771 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10765, file: !10640, line: 342, type: !108)
!10772 = !DILocation(line: 0, scope: !10765)
!10773 = !DILocation(line: 344, column: 3, scope: !10765)
!10774 = !DILocation(line: 345, column: 1, scope: !10765)
!10775 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10640, file: !10640, line: 413, type: !10766, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10776)
!10776 = !{!10777, !10778, !10779}
!10777 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10775, file: !10640, line: 413, type: !1212)
!10778 = !DILocalVariable(name: "Pin", arg: 2, scope: !10775, file: !10640, line: 413, type: !108)
!10779 = !DILocalVariable(name: "Speed", arg: 3, scope: !10775, file: !10640, line: 413, type: !108)
!10780 = !DILocation(line: 0, scope: !10775)
!10781 = !DILocation(line: 415, column: 3, scope: !10775)
!10782 = !DILocation(line: 0, scope: !10585, inlinedAt: !10783)
!10783 = distinct !DILocation(line: 415, column: 3, scope: !10775)
!10784 = !DILocation(line: 380, column: 4, scope: !10585, inlinedAt: !10783)
!10785 = !DILocation(line: 0, scope: !10593, inlinedAt: !10786)
!10786 = distinct !DILocation(line: 415, column: 3, scope: !10775)
!10787 = !DILocation(line: 414, column: 7, scope: !10593, inlinedAt: !10786)
!10788 = !DILocation(line: 0, scope: !10585, inlinedAt: !10789)
!10789 = distinct !DILocation(line: 415, column: 3, scope: !10775)
!10790 = !DILocation(line: 0, scope: !10593, inlinedAt: !10791)
!10791 = distinct !DILocation(line: 415, column: 3, scope: !10775)
!10792 = !DILocation(line: 417, column: 1, scope: !10775)
!10793 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10640, file: !10640, line: 484, type: !10766, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10794)
!10794 = !{!10795, !10796, !10797}
!10795 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10793, file: !10640, line: 484, type: !1212)
!10796 = !DILocalVariable(name: "Pin", arg: 2, scope: !10793, file: !10640, line: 484, type: !108)
!10797 = !DILocalVariable(name: "Pull", arg: 3, scope: !10793, file: !10640, line: 484, type: !108)
!10798 = !DILocation(line: 0, scope: !10793)
!10799 = !DILocation(line: 486, column: 3, scope: !10793)
!10800 = !DILocation(line: 0, scope: !10585, inlinedAt: !10801)
!10801 = distinct !DILocation(line: 486, column: 3, scope: !10793)
!10802 = !DILocation(line: 380, column: 4, scope: !10585, inlinedAt: !10801)
!10803 = !DILocation(line: 0, scope: !10593, inlinedAt: !10804)
!10804 = distinct !DILocation(line: 486, column: 3, scope: !10793)
!10805 = !DILocation(line: 414, column: 7, scope: !10593, inlinedAt: !10804)
!10806 = !DILocation(line: 0, scope: !10585, inlinedAt: !10807)
!10807 = distinct !DILocation(line: 486, column: 3, scope: !10793)
!10808 = !DILocation(line: 0, scope: !10593, inlinedAt: !10809)
!10809 = distinct !DILocation(line: 486, column: 3, scope: !10793)
!10810 = !DILocation(line: 487, column: 1, scope: !10793)
!10811 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10640, file: !10640, line: 556, type: !10766, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10812)
!10812 = !{!10813, !10814, !10815}
!10813 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10811, file: !10640, line: 556, type: !1212)
!10814 = !DILocalVariable(name: "Pin", arg: 2, scope: !10811, file: !10640, line: 556, type: !108)
!10815 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10811, file: !10640, line: 556, type: !108)
!10816 = !DILocation(line: 0, scope: !10811)
!10817 = !DILocation(line: 558, column: 3, scope: !10811)
!10818 = !DILocation(line: 0, scope: !10585, inlinedAt: !10819)
!10819 = distinct !DILocation(line: 558, column: 3, scope: !10811)
!10820 = !DILocation(line: 380, column: 4, scope: !10585, inlinedAt: !10819)
!10821 = !DILocation(line: 0, scope: !10593, inlinedAt: !10822)
!10822 = distinct !DILocation(line: 558, column: 3, scope: !10811)
!10823 = !DILocation(line: 414, column: 7, scope: !10593, inlinedAt: !10822)
!10824 = !DILocation(line: 0, scope: !10585, inlinedAt: !10825)
!10825 = distinct !DILocation(line: 558, column: 3, scope: !10811)
!10826 = !DILocation(line: 0, scope: !10593, inlinedAt: !10827)
!10827 = distinct !DILocation(line: 558, column: 3, scope: !10811)
!10828 = !DILocation(line: 560, column: 1, scope: !10811)
!10829 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10640, file: !10640, line: 633, type: !10766, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10830)
!10830 = !{!10831, !10832, !10833}
!10831 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10829, file: !10640, line: 633, type: !1212)
!10832 = !DILocalVariable(name: "Pin", arg: 2, scope: !10829, file: !10640, line: 633, type: !108)
!10833 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10829, file: !10640, line: 633, type: !108)
!10834 = !DILocation(line: 0, scope: !10829)
!10835 = !DILocation(line: 635, column: 3, scope: !10829)
!10836 = !DILocation(line: 0, scope: !10585, inlinedAt: !10837)
!10837 = distinct !DILocation(line: 635, column: 3, scope: !10829)
!10838 = !DILocation(line: 380, column: 4, scope: !10585, inlinedAt: !10837)
!10839 = !DILocation(line: 0, scope: !10593, inlinedAt: !10840)
!10840 = distinct !DILocation(line: 635, column: 3, scope: !10829)
!10841 = !DILocation(line: 414, column: 7, scope: !10593, inlinedAt: !10840)
!10842 = !DILocation(line: 0, scope: !10585, inlinedAt: !10843)
!10843 = distinct !DILocation(line: 635, column: 3, scope: !10829)
!10844 = !DILocation(line: 0, scope: !10593, inlinedAt: !10845)
!10845 = distinct !DILocation(line: 635, column: 3, scope: !10829)
!10846 = !DILocation(line: 637, column: 1, scope: !10829)
!10847 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10640, file: !10640, line: 273, type: !10766, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10848)
!10848 = !{!10849, !10850, !10851}
!10849 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10847, file: !10640, line: 273, type: !1212)
!10850 = !DILocalVariable(name: "Pin", arg: 2, scope: !10847, file: !10640, line: 273, type: !108)
!10851 = !DILocalVariable(name: "Mode", arg: 3, scope: !10847, file: !10640, line: 273, type: !108)
!10852 = !DILocation(line: 0, scope: !10847)
!10853 = !DILocation(line: 275, column: 3, scope: !10847)
!10854 = !DILocation(line: 0, scope: !10585, inlinedAt: !10855)
!10855 = distinct !DILocation(line: 275, column: 3, scope: !10847)
!10856 = !DILocation(line: 380, column: 4, scope: !10585, inlinedAt: !10855)
!10857 = !DILocation(line: 0, scope: !10593, inlinedAt: !10858)
!10858 = distinct !DILocation(line: 275, column: 3, scope: !10847)
!10859 = !DILocation(line: 414, column: 7, scope: !10593, inlinedAt: !10858)
!10860 = !DILocation(line: 0, scope: !10585, inlinedAt: !10861)
!10861 = distinct !DILocation(line: 275, column: 3, scope: !10847)
!10862 = !DILocation(line: 0, scope: !10593, inlinedAt: !10863)
!10863 = distinct !DILocation(line: 275, column: 3, scope: !10847)
!10864 = !DILocation(line: 276, column: 1, scope: !10847)
!10865 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1279, file: !1279, line: 698, type: !1292, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10866)
!10866 = !{!10867, !10868, !10869}
!10867 = !DILocalVariable(name: "dev", arg: 1, scope: !10865, file: !1279, line: 698, type: !1139)
!10868 = !DILocalVariable(name: "data", scope: !10865, file: !1279, line: 700, type: !10309)
!10869 = !DILocalVariable(name: "ret", scope: !10865, file: !1279, line: 701, type: !103)
!10870 = !DILocation(line: 0, scope: !10865)
!10871 = !DILocation(line: 700, column: 38, scope: !10865)
!10872 = !DILocation(line: 703, column: 8, scope: !10865)
!10873 = !DILocation(line: 703, column: 12, scope: !10865)
!10874 = !DILocation(line: 705, column: 7, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10865, file: !1279, line: 705, column: 6)
!10876 = !DILocation(line: 705, column: 6, scope: !10865)
!10877 = !DILocation(line: 722, column: 8, scope: !10865)
!10878 = !DILocation(line: 723, column: 10, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10865, file: !1279, line: 723, column: 6)
!10880 = !DILocation(line: 723, column: 6, scope: !10865)
!10881 = !DILocation(line: 731, column: 1, scope: !10865)
!10882 = distinct !DISubprogram(name: "device_is_ready", scope: !10089, file: !10089, line: 47, type: !10883, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10885)
!10883 = !DISubroutineType(types: !10884)
!10884 = !{!131, !1139}
!10885 = !{!10886}
!10886 = !DILocalVariable(name: "dev", arg: 1, scope: !10882, file: !10089, line: 47, type: !1139)
!10887 = !DILocation(line: 0, scope: !10882)
!10888 = !DILocation(line: 55, column: 2, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10882, file: !10089, line: 55, column: 2)
!10890 = !{i64 2154258664}
!10891 = !DILocation(line: 56, column: 9, scope: !10882)
!10892 = !DILocation(line: 56, column: 2, scope: !10882)
!10893 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1279, file: !1279, line: 270, type: !10894, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10896)
!10894 = !DISubroutineType(types: !10895)
!10895 = !{!103, !1139, !131}
!10896 = !{!10897, !10898, !10899, !10900, !10901}
!10897 = !DILocalVariable(name: "dev", arg: 1, scope: !10893, file: !1279, line: 270, type: !1139)
!10898 = !DILocalVariable(name: "on", arg: 2, scope: !10893, file: !1279, line: 270, type: !131)
!10899 = !DILocalVariable(name: "cfg", scope: !10893, file: !1279, line: 272, type: !10242)
!10900 = !DILocalVariable(name: "ret", scope: !10893, file: !1279, line: 273, type: !103)
!10901 = !DILocalVariable(name: "clk", scope: !10893, file: !1279, line: 278, type: !10532)
!10902 = !DILocation(line: 0, scope: !10893)
!10903 = !DILocation(line: 272, column: 45, scope: !10893)
!10904 = !DILocation(line: 282, column: 38, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10906, file: !1279, line: 280, column: 10)
!10906 = distinct !DILexicalBlock(scope: !10893, file: !1279, line: 280, column: 6)
!10907 = !DILocation(line: 282, column: 6, scope: !10905)
!10908 = !DILocation(line: 281, column: 9, scope: !10905)
!10909 = !DILocation(line: 293, column: 1, scope: !10893)
!10910 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10883, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10911)
!10911 = !{!10912}
!10912 = !DILocalVariable(name: "dev", arg: 1, scope: !10910, file: !429, line: 730, type: !1139)
!10913 = !DILocation(line: 0, scope: !10910)
!10914 = !DILocation(line: 732, column: 9, scope: !10910)
!10915 = !DILocation(line: 732, column: 2, scope: !10910)
!10916 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1279, file: !1279, line: 496, type: !10917, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !10919)
!10917 = !DISubroutineType(types: !10918)
!10918 = !{!103, !1139, !103, !103, !103}
!10919 = !{!10920, !10921, !10922, !10923, !10924, !10925}
!10920 = !DILocalVariable(name: "dev", arg: 1, scope: !10916, file: !1279, line: 496, type: !1139)
!10921 = !DILocalVariable(name: "pin", arg: 2, scope: !10916, file: !1279, line: 496, type: !103)
!10922 = !DILocalVariable(name: "conf", arg: 3, scope: !10916, file: !1279, line: 496, type: !103)
!10923 = !DILocalVariable(name: "func", arg: 4, scope: !10916, file: !1279, line: 496, type: !103)
!10924 = !DILocalVariable(name: "ret", scope: !10916, file: !1279, line: 498, type: !103)
!10925 = !DILocalVariable(name: "gpio_out", scope: !10926, file: !1279, line: 508, type: !108)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !1279, line: 507, column: 27)
!10927 = distinct !DILexicalBlock(scope: !10916, file: !1279, line: 507, column: 6)
!10928 = !DILocation(line: 0, scope: !10916)
!10929 = !DILocation(line: 505, column: 2, scope: !10916)
!10930 = !DILocation(line: 507, column: 11, scope: !10927)
!10931 = !DILocation(line: 507, column: 6, scope: !10916)
!10932 = !DILocation(line: 508, column: 28, scope: !10926)
!10933 = !DILocation(line: 0, scope: !10926)
!10934 = !DILocation(line: 510, column: 16, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10926, file: !1279, line: 510, column: 7)
!10936 = !DILocation(line: 0, scope: !10935)
!10937 = !DILocation(line: 510, column: 7, scope: !10926)
!10938 = !DILocation(line: 511, column: 4, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10935, file: !1279, line: 510, column: 32)
!10940 = !DILocation(line: 512, column: 3, scope: !10939)
!10941 = !DILocation(line: 513, column: 4, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !1279, line: 512, column: 39)
!10943 = distinct !DILexicalBlock(scope: !10935, file: !1279, line: 512, column: 14)
!10944 = !DILocation(line: 514, column: 3, scope: !10942)
!10945 = !DILocation(line: 518, column: 1, scope: !10916)
!10946 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1552, file: !1552, line: 526, type: !1455, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10947)
!10947 = !{!10948, !10949, !10950}
!10948 = !DILocalVariable(name: "dev", arg: 1, scope: !10946, file: !1552, line: 526, type: !1457)
!10949 = !DILocalVariable(name: "c", arg: 2, scope: !10946, file: !1552, line: 526, type: !1071)
!10950 = !DILocalVariable(name: "config", scope: !10946, file: !1552, line: 528, type: !10951)
!10951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!10952 = !DILocation(line: 0, scope: !10946)
!10953 = !DILocation(line: 528, column: 48, scope: !10946)
!10954 = !DILocation(line: 531, column: 40, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10946, file: !1552, line: 531, column: 6)
!10956 = !DILocation(line: 531, column: 6, scope: !10955)
!10957 = !DILocation(line: 531, column: 6, scope: !10946)
!10958 = !DILocation(line: 532, column: 34, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10955, file: !1552, line: 531, column: 48)
!10960 = !DILocation(line: 532, column: 3, scope: !10959)
!10961 = !DILocation(line: 533, column: 2, scope: !10959)
!10962 = !DILocation(line: 539, column: 42, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10946, file: !1552, line: 539, column: 6)
!10964 = !DILocation(line: 539, column: 7, scope: !10963)
!10965 = !DILocation(line: 539, column: 6, scope: !10946)
!10966 = !DILocation(line: 543, column: 52, scope: !10946)
!10967 = !DILocation(line: 543, column: 22, scope: !10946)
!10968 = !DILocation(line: 543, column: 5, scope: !10946)
!10969 = !DILocation(line: 545, column: 2, scope: !10946)
!10970 = !DILocation(line: 546, column: 1, scope: !10946)
!10971 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1552, file: !1552, line: 548, type: !1474, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10972)
!10972 = !{!10973, !10974, !10975, !10976}
!10973 = !DILocalVariable(name: "dev", arg: 1, scope: !10971, file: !1552, line: 548, type: !1457)
!10974 = !DILocalVariable(name: "c", arg: 2, scope: !10971, file: !1552, line: 549, type: !186)
!10975 = !DILocalVariable(name: "config", scope: !10971, file: !1552, line: 551, type: !10951)
!10976 = !DILocalVariable(name: "key", scope: !10971, file: !1552, line: 555, type: !32)
!10977 = !DILocation(line: 0, scope: !10971)
!10978 = !DILocation(line: 551, column: 48, scope: !10971)
!10979 = !DILocation(line: 562, column: 2, scope: !10971)
!10980 = !DILocation(line: 563, column: 41, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !1552, line: 563, column: 7)
!10982 = distinct !DILexicalBlock(scope: !10971, file: !1552, line: 562, column: 12)
!10983 = !DILocation(line: 563, column: 7, scope: !10981)
!10984 = !DILocation(line: 563, column: 7, scope: !10982)
!10985 = !DILocation(line: 55, column: 2, scope: !10986, inlinedAt: !10990)
!10986 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10987)
!10987 = !{!10988, !10989}
!10988 = !DILocalVariable(name: "key", scope: !10986, file: !6962, line: 44, type: !32)
!10989 = !DILocalVariable(name: "tmp", scope: !10986, file: !6962, line: 53, type: !32)
!10990 = distinct !DILocation(line: 564, column: 10, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10981, file: !1552, line: 563, column: 49)
!10992 = !{i64 1998611}
!10993 = !DILocation(line: 0, scope: !10986, inlinedAt: !10990)
!10994 = !DILocation(line: 565, column: 42, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10991, file: !1552, line: 565, column: 8)
!10996 = !DILocation(line: 565, column: 8, scope: !10995)
!10997 = !DILocation(line: 565, column: 8, scope: !10991)
!10998 = !DILocalVariable(name: "key", arg: 1, scope: !10999, file: !6962, line: 84, type: !32)
!10999 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11000)
!11000 = !{!10998}
!11001 = !DILocation(line: 0, scope: !10999, inlinedAt: !11002)
!11002 = distinct !DILocation(line: 568, column: 4, scope: !10991)
!11003 = !DILocation(line: 95, column: 2, scope: !10999, inlinedAt: !11002)
!11004 = !{i64 1999428}
!11005 = !DILocation(line: 569, column: 3, scope: !10991)
!11006 = distinct !{!11006, !10979, !11007}
!11007 = !DILocation(line: 570, column: 2, scope: !10971)
!11008 = !DILocation(line: 592, column: 33, scope: !10971)
!11009 = !DILocation(line: 592, column: 2, scope: !10971)
!11010 = !DILocation(line: 0, scope: !10999, inlinedAt: !11011)
!11011 = distinct !DILocation(line: 593, column: 2, scope: !10971)
!11012 = !DILocation(line: 95, column: 2, scope: !10999, inlinedAt: !11011)
!11013 = !DILocation(line: 594, column: 1, scope: !10971)
!11014 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1552, file: !1552, line: 596, type: !1478, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11015)
!11015 = !{!11016, !11017, !11018}
!11016 = !DILocalVariable(name: "dev", arg: 1, scope: !11014, file: !1552, line: 596, type: !1457)
!11017 = !DILocalVariable(name: "config", scope: !11014, file: !1552, line: 598, type: !10951)
!11018 = !DILocalVariable(name: "err", scope: !11014, file: !1552, line: 599, type: !108)
!11019 = !DILocation(line: 0, scope: !11014)
!11020 = !DILocation(line: 598, column: 48, scope: !11014)
!11021 = !DILocation(line: 606, column: 40, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11014, file: !1552, line: 606, column: 6)
!11023 = !DILocation(line: 606, column: 6, scope: !11022)
!11024 = !DILocation(line: 606, column: 6, scope: !11014)
!11025 = !DILocation(line: 610, column: 39, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11014, file: !1552, line: 610, column: 6)
!11027 = !DILocation(line: 610, column: 6, scope: !11026)
!11028 = !DILocation(line: 610, column: 6, scope: !11014)
!11029 = !DILocation(line: 614, column: 39, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11014, file: !1552, line: 614, column: 6)
!11031 = !DILocation(line: 614, column: 6, scope: !11030)
!11032 = !DILocation(line: 614, column: 6, scope: !11014)
!11033 = !DILocation(line: 619, column: 40, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11014, file: !1552, line: 619, column: 6)
!11035 = !DILocation(line: 619, column: 6, scope: !11034)
!11036 = !DILocation(line: 619, column: 6, scope: !11014)
!11037 = !DILocation(line: 623, column: 10, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11014, file: !1552, line: 623, column: 6)
!11039 = !DILocation(line: 623, column: 6, scope: !11014)
!11040 = !DILocation(line: 624, column: 34, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11038, file: !1552, line: 623, column: 24)
!11042 = !DILocation(line: 624, column: 3, scope: !11041)
!11043 = !DILocation(line: 625, column: 2, scope: !11041)
!11044 = !DILocation(line: 632, column: 10, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11014, file: !1552, line: 632, column: 6)
!11046 = !DILocation(line: 632, column: 6, scope: !11014)
!11047 = !DILocation(line: 633, column: 34, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11045, file: !1552, line: 632, column: 32)
!11049 = !DILocation(line: 633, column: 3, scope: !11048)
!11050 = !DILocation(line: 634, column: 2, scope: !11048)
!11051 = !DILocation(line: 636, column: 10, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11014, file: !1552, line: 636, column: 6)
!11053 = !DILocation(line: 636, column: 6, scope: !11014)
!11054 = !DILocation(line: 637, column: 33, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11052, file: !1552, line: 636, column: 31)
!11056 = !DILocation(line: 637, column: 3, scope: !11055)
!11057 = !DILocation(line: 638, column: 2, scope: !11055)
!11058 = !DILocation(line: 640, column: 10, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11014, file: !1552, line: 640, column: 6)
!11060 = !DILocation(line: 640, column: 6, scope: !11014)
!11061 = !DILocation(line: 641, column: 33, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11059, file: !1552, line: 640, column: 32)
!11063 = !DILocation(line: 641, column: 3, scope: !11062)
!11064 = !DILocation(line: 642, column: 2, scope: !11062)
!11065 = !DILocation(line: 646, column: 32, scope: !11014)
!11066 = !DILocation(line: 646, column: 2, scope: !11014)
!11067 = !DILocation(line: 648, column: 2, scope: !11014)
!11068 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1552, file: !1552, line: 419, type: !1482, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11069)
!11069 = !{!11070, !11071, !11072, !11073, !11075, !11076, !11077, !11078}
!11070 = !DILocalVariable(name: "dev", arg: 1, scope: !11068, file: !1552, line: 419, type: !1457)
!11071 = !DILocalVariable(name: "cfg", arg: 2, scope: !11068, file: !1552, line: 420, type: !1484)
!11072 = !DILocalVariable(name: "config", scope: !11068, file: !1552, line: 422, type: !10951)
!11073 = !DILocalVariable(name: "data", scope: !11068, file: !1552, line: 423, type: !11074)
!11074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!11075 = !DILocalVariable(name: "parity", scope: !11068, file: !1552, line: 424, type: !7546)
!11076 = !DILocalVariable(name: "stopbits", scope: !11068, file: !1552, line: 425, type: !7546)
!11077 = !DILocalVariable(name: "databits", scope: !11068, file: !1552, line: 426, type: !7546)
!11078 = !DILocalVariable(name: "flowctrl", scope: !11068, file: !1552, line: 428, type: !7546)
!11079 = !DILocation(line: 0, scope: !11068)
!11080 = !DILocation(line: 422, column: 48, scope: !11068)
!11081 = !DILocation(line: 423, column: 38, scope: !11068)
!11082 = !DILocation(line: 424, column: 56, scope: !11068)
!11083 = !DILocation(line: 424, column: 51, scope: !11068)
!11084 = !DILocation(line: 424, column: 26, scope: !11068)
!11085 = !DILocation(line: 425, column: 60, scope: !11068)
!11086 = !DILocation(line: 425, column: 55, scope: !11068)
!11087 = !DILocation(line: 425, column: 28, scope: !11068)
!11088 = !DILocation(line: 426, column: 60, scope: !11068)
!11089 = !DILocation(line: 426, column: 55, scope: !11068)
!11090 = !DILocation(line: 426, column: 28, scope: !11068)
!11091 = !DILocation(line: 428, column: 58, scope: !11068)
!11092 = !DILocation(line: 428, column: 53, scope: !11068)
!11093 = !DILocation(line: 428, column: 28, scope: !11068)
!11094 = !DILocation(line: 431, column: 44, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 431, column: 6)
!11096 = !DILocation(line: 438, column: 22, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 437, column: 6)
!11098 = !DILocation(line: 437, column: 6, scope: !11068)
!11099 = !DILocation(line: 448, column: 6, scope: !11068)
!11100 = !DILocation(line: 465, column: 47, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 465, column: 6)
!11102 = !DILocation(line: 475, column: 21, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 475, column: 6)
!11104 = !DILocation(line: 475, column: 6, scope: !11068)
!11105 = !DILocation(line: 476, column: 8, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !1552, line: 476, column: 7)
!11107 = distinct !DILexicalBlock(scope: !11103, file: !1552, line: 475, column: 49)
!11108 = !DILocation(line: 477, column: 34, scope: !11106)
!11109 = !DILocation(line: 476, column: 7, scope: !11107)
!11110 = !DILocation(line: 482, column: 27, scope: !11068)
!11111 = !DILocation(line: 482, column: 2, scope: !11068)
!11112 = !DILocation(line: 484, column: 16, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 484, column: 6)
!11114 = !DILocation(line: 484, column: 13, scope: !11113)
!11115 = !DILocation(line: 484, column: 6, scope: !11068)
!11116 = !DILocation(line: 485, column: 3, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11113, file: !1552, line: 484, column: 44)
!11118 = !DILocation(line: 486, column: 2, scope: !11117)
!11119 = !DILocation(line: 488, column: 18, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 488, column: 6)
!11121 = !DILocation(line: 488, column: 15, scope: !11120)
!11122 = !DILocation(line: 488, column: 6, scope: !11068)
!11123 = !DILocation(line: 489, column: 3, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11120, file: !1552, line: 488, column: 48)
!11125 = !DILocation(line: 490, column: 2, scope: !11124)
!11126 = !DILocation(line: 492, column: 18, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 492, column: 6)
!11128 = !DILocation(line: 492, column: 15, scope: !11127)
!11129 = !DILocation(line: 492, column: 6, scope: !11068)
!11130 = !DILocation(line: 493, column: 3, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11127, file: !1552, line: 492, column: 48)
!11132 = !DILocation(line: 494, column: 2, scope: !11131)
!11133 = !DILocation(line: 496, column: 18, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 496, column: 6)
!11135 = !DILocation(line: 496, column: 15, scope: !11134)
!11136 = !DILocation(line: 496, column: 6, scope: !11068)
!11137 = !DILocation(line: 497, column: 3, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11134, file: !1552, line: 496, column: 46)
!11139 = !DILocation(line: 498, column: 2, scope: !11138)
!11140 = !DILocation(line: 500, column: 11, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11068, file: !1552, line: 500, column: 6)
!11142 = !DILocation(line: 500, column: 29, scope: !11141)
!11143 = !DILocation(line: 500, column: 20, scope: !11141)
!11144 = !DILocation(line: 500, column: 6, scope: !11068)
!11145 = !DILocation(line: 501, column: 3, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11141, file: !1552, line: 500, column: 40)
!11147 = !DILocation(line: 502, column: 26, scope: !11146)
!11148 = !DILocation(line: 502, column: 19, scope: !11146)
!11149 = !DILocation(line: 503, column: 2, scope: !11146)
!11150 = !DILocation(line: 505, column: 26, scope: !11068)
!11151 = !DILocation(line: 505, column: 2, scope: !11068)
!11152 = !DILocation(line: 506, column: 2, scope: !11068)
!11153 = !DILocation(line: 507, column: 1, scope: !11068)
!11154 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1552, file: !1552, line: 509, type: !1495, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11155)
!11155 = !{!11156, !11157, !11158}
!11156 = !DILocalVariable(name: "dev", arg: 1, scope: !11154, file: !1552, line: 509, type: !1457)
!11157 = !DILocalVariable(name: "cfg", arg: 2, scope: !11154, file: !1552, line: 510, type: !1497)
!11158 = !DILocalVariable(name: "data", scope: !11154, file: !1552, line: 512, type: !11074)
!11159 = !DILocation(line: 0, scope: !11154)
!11160 = !DILocation(line: 512, column: 38, scope: !11154)
!11161 = !DILocation(line: 514, column: 24, scope: !11154)
!11162 = !DILocation(line: 514, column: 7, scope: !11154)
!11163 = !DILocation(line: 514, column: 16, scope: !11154)
!11164 = !DILocation(line: 515, column: 41, scope: !11154)
!11165 = !{i32 0, i32 1537}
!11166 = !DILocation(line: 515, column: 16, scope: !11154)
!11167 = !DILocation(line: 515, column: 7, scope: !11154)
!11168 = !DILocation(line: 515, column: 14, scope: !11154)
!11169 = !DILocation(line: 517, column: 3, scope: !11154)
!11170 = !{i32 0, i32 12289}
!11171 = !DILocation(line: 516, column: 19, scope: !11154)
!11172 = !DILocation(line: 516, column: 7, scope: !11154)
!11173 = !DILocation(line: 516, column: 17, scope: !11154)
!11174 = !DILocation(line: 519, column: 3, scope: !11154)
!11175 = !DILocation(line: 519, column: 33, scope: !11154)
!11176 = !DILocation(line: 518, column: 19, scope: !11154)
!11177 = !DILocation(line: 518, column: 7, scope: !11154)
!11178 = !DILocation(line: 518, column: 17, scope: !11154)
!11179 = !DILocation(line: 521, column: 3, scope: !11154)
!11180 = !{i32 0, i32 769}
!11181 = !DILocation(line: 520, column: 19, scope: !11154)
!11182 = !DILocation(line: 520, column: 7, scope: !11154)
!11183 = !DILocation(line: 520, column: 17, scope: !11154)
!11184 = !DILocation(line: 522, column: 2, scope: !11154)
!11185 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1552, file: !1552, line: 205, type: !11186, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11188)
!11186 = !DISubroutineType(types: !11187)
!11187 = !{!108, !1457}
!11188 = !{!11189, !11190}
!11189 = !DILocalVariable(name: "dev", arg: 1, scope: !11185, file: !1552, line: 205, type: !1457)
!11190 = !DILocalVariable(name: "config", scope: !11185, file: !1552, line: 207, type: !10951)
!11191 = !DILocation(line: 0, scope: !11185)
!11192 = !DILocation(line: 207, column: 48, scope: !11185)
!11193 = !DILocation(line: 209, column: 36, scope: !11185)
!11194 = !DILocation(line: 209, column: 9, scope: !11185)
!11195 = !DILocation(line: 209, column: 2, scope: !11185)
!11196 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1552, file: !1552, line: 270, type: !11197, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11199)
!11197 = !DISubroutineType(types: !11198)
!11198 = !{!1423, !108}
!11199 = !{!11200}
!11200 = !DILocalVariable(name: "parity", arg: 1, scope: !11196, file: !1552, line: 270, type: !108)
!11201 = !DILocation(line: 0, scope: !11196)
!11202 = !DILocation(line: 272, column: 2, scope: !11196)
!11203 = !DILocation(line: 281, column: 1, scope: !11196)
!11204 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1552, file: !1552, line: 220, type: !11186, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11205)
!11205 = !{!11206, !11207}
!11206 = !DILocalVariable(name: "dev", arg: 1, scope: !11204, file: !1552, line: 220, type: !1457)
!11207 = !DILocalVariable(name: "config", scope: !11204, file: !1552, line: 222, type: !10951)
!11208 = !DILocation(line: 0, scope: !11204)
!11209 = !DILocation(line: 222, column: 48, scope: !11204)
!11210 = !DILocation(line: 224, column: 44, scope: !11204)
!11211 = !DILocation(line: 224, column: 9, scope: !11204)
!11212 = !DILocation(line: 224, column: 2, scope: !11204)
!11213 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1552, file: !1552, line: 304, type: !11214, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11216)
!11214 = !DISubroutineType(types: !11215)
!11215 = !{!1437, !108}
!11216 = !{!11217}
!11217 = !DILocalVariable(name: "sb", arg: 1, scope: !11213, file: !1552, line: 304, type: !108)
!11218 = !DILocation(line: 0, scope: !11213)
!11219 = !DILocation(line: 306, column: 2, scope: !11213)
!11220 = !DILocation(line: 0, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11213, file: !1552, line: 306, column: 14)
!11222 = !DILocation(line: 323, column: 1, scope: !11213)
!11223 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1552, file: !1552, line: 235, type: !11186, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11224)
!11224 = !{!11225, !11226}
!11225 = !DILocalVariable(name: "dev", arg: 1, scope: !11223, file: !1552, line: 235, type: !1457)
!11226 = !DILocalVariable(name: "config", scope: !11223, file: !1552, line: 237, type: !10951)
!11227 = !DILocation(line: 0, scope: !11223)
!11228 = !DILocation(line: 237, column: 48, scope: !11223)
!11229 = !DILocation(line: 239, column: 39, scope: !11223)
!11230 = !DILocation(line: 239, column: 9, scope: !11223)
!11231 = !DILocation(line: 239, column: 2, scope: !11223)
!11232 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1552, file: !1552, line: 355, type: !11233, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11235)
!11233 = !DISubroutineType(types: !11234)
!11234 = !{!1430, !108, !108}
!11235 = !{!11236, !11237}
!11236 = !DILocalVariable(name: "db", arg: 1, scope: !11232, file: !1552, line: 355, type: !108)
!11237 = !DILocalVariable(name: "p", arg: 2, scope: !11232, file: !1552, line: 356, type: !108)
!11238 = !DILocation(line: 0, scope: !11232)
!11239 = !DILocation(line: 358, column: 2, scope: !11232)
!11240 = !DILocation(line: 384, column: 1, scope: !11232)
!11241 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1552, file: !1552, line: 250, type: !11186, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11242)
!11242 = !{!11243, !11244}
!11243 = !DILocalVariable(name: "dev", arg: 1, scope: !11241, file: !1552, line: 250, type: !1457)
!11244 = !DILocalVariable(name: "config", scope: !11241, file: !1552, line: 252, type: !10951)
!11245 = !DILocation(line: 0, scope: !11241)
!11246 = !DILocation(line: 252, column: 48, scope: !11241)
!11247 = !DILocation(line: 254, column: 40, scope: !11241)
!11248 = !DILocation(line: 254, column: 9, scope: !11241)
!11249 = !DILocation(line: 254, column: 2, scope: !11241)
!11250 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1552, file: !1552, line: 409, type: !11251, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11253)
!11251 = !DISubroutineType(types: !11252)
!11252 = !{!1443, !108}
!11253 = !{!11254}
!11254 = !DILocalVariable(name: "fc", arg: 1, scope: !11250, file: !1552, line: 409, type: !108)
!11255 = !DILocation(line: 0, scope: !11250)
!11256 = !DILocation(line: 411, column: 9, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11250, file: !1552, line: 411, column: 6)
!11258 = !DILocation(line: 416, column: 1, scope: !11250)
!11259 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11260, file: !11260, line: 967, type: !11261, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11263)
!11260 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11261 = !DISubroutineType(types: !11262)
!11262 = !{!108, !1498}
!11263 = !{!11264}
!11264 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11259, file: !11260, line: 967, type: !1498)
!11265 = !DILocation(line: 0, scope: !11259)
!11266 = !DILocation(line: 969, column: 21, scope: !11259)
!11267 = !DILocation(line: 969, column: 3, scope: !11259)
!11268 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11260, file: !11260, line: 601, type: !11261, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11269)
!11269 = !{!11270}
!11270 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11268, file: !11260, line: 601, type: !1498)
!11271 = !DILocation(line: 0, scope: !11268)
!11272 = !DILocation(line: 603, column: 21, scope: !11268)
!11273 = !DILocation(line: 603, column: 3, scope: !11268)
!11274 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11260, file: !11260, line: 820, type: !11261, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11275)
!11275 = !{!11276}
!11276 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11274, file: !11260, line: 820, type: !1498)
!11277 = !DILocation(line: 0, scope: !11274)
!11278 = !DILocation(line: 822, column: 21, scope: !11274)
!11279 = !DILocation(line: 822, column: 3, scope: !11274)
!11280 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11260, file: !11260, line: 547, type: !11261, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11281)
!11281 = !{!11282}
!11282 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11280, file: !11260, line: 547, type: !1498)
!11283 = !DILocation(line: 0, scope: !11280)
!11284 = !DILocation(line: 549, column: 21, scope: !11280)
!11285 = !DILocation(line: 549, column: 3, scope: !11280)
!11286 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1552, file: !1552, line: 257, type: !11287, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11289)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{!108, !1423}
!11289 = !{!11290}
!11290 = !DILocalVariable(name: "parity", arg: 1, scope: !11286, file: !1552, line: 257, type: !1423)
!11291 = !DILocation(line: 0, scope: !11286)
!11292 = !DILocation(line: 259, column: 2, scope: !11286)
!11293 = !DILocation(line: 268, column: 1, scope: !11286)
!11294 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1552, file: !1552, line: 283, type: !11295, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{!108, !1437}
!11297 = !{!11298}
!11298 = !DILocalVariable(name: "sb", arg: 1, scope: !11294, file: !1552, line: 283, type: !1437)
!11299 = !DILocation(line: 0, scope: !11294)
!11300 = !DILocation(line: 285, column: 2, scope: !11294)
!11301 = !DILocation(line: 0, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11294, file: !1552, line: 285, column: 14)
!11303 = !DILocation(line: 302, column: 1, scope: !11294)
!11304 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1552, file: !1552, line: 325, type: !11305, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11307)
!11305 = !DISubroutineType(types: !11306)
!11306 = !{!108, !1430, !1423}
!11307 = !{!11308, !11309}
!11308 = !DILocalVariable(name: "db", arg: 1, scope: !11304, file: !1552, line: 325, type: !1430)
!11309 = !DILocalVariable(name: "p", arg: 2, scope: !11304, file: !1552, line: 326, type: !1423)
!11310 = !DILocation(line: 0, scope: !11304)
!11311 = !DILocation(line: 328, column: 2, scope: !11304)
!11312 = !DILocation(line: 353, column: 1, scope: !11304)
!11313 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1552, file: !1552, line: 393, type: !11314, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11316)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!108, !1443}
!11316 = !{!11317}
!11317 = !DILocalVariable(name: "fc", arg: 1, scope: !11313, file: !1552, line: 393, type: !1443)
!11318 = !DILocation(line: 0, scope: !11313)
!11319 = !DILocation(line: 395, column: 9, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11313, file: !1552, line: 395, column: 6)
!11321 = !DILocation(line: 400, column: 1, scope: !11313)
!11322 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11260, file: !11260, line: 424, type: !11323, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11325)
!11323 = !DISubroutineType(types: !11324)
!11324 = !{null, !1498}
!11325 = !{!11326}
!11326 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11322, file: !11260, line: 424, type: !1498)
!11327 = !DILocation(line: 0, scope: !11322)
!11328 = !DILocation(line: 426, column: 3, scope: !11322)
!11329 = !DILocation(line: 427, column: 1, scope: !11322)
!11330 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1552, file: !1552, line: 197, type: !11331, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11333)
!11331 = !DISubroutineType(types: !11332)
!11332 = !{null, !1457, !108}
!11333 = !{!11334, !11335, !11336}
!11334 = !DILocalVariable(name: "dev", arg: 1, scope: !11330, file: !1552, line: 197, type: !1457)
!11335 = !DILocalVariable(name: "parity", arg: 2, scope: !11330, file: !1552, line: 198, type: !108)
!11336 = !DILocalVariable(name: "config", scope: !11330, file: !1552, line: 200, type: !10951)
!11337 = !DILocation(line: 0, scope: !11330)
!11338 = !DILocation(line: 200, column: 48, scope: !11330)
!11339 = !DILocation(line: 202, column: 29, scope: !11330)
!11340 = !DILocation(line: 202, column: 2, scope: !11330)
!11341 = !DILocation(line: 203, column: 1, scope: !11330)
!11342 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1552, file: !1552, line: 212, type: !11331, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11343)
!11343 = !{!11344, !11345, !11346}
!11344 = !DILocalVariable(name: "dev", arg: 1, scope: !11342, file: !1552, line: 212, type: !1457)
!11345 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11342, file: !1552, line: 213, type: !108)
!11346 = !DILocalVariable(name: "config", scope: !11342, file: !1552, line: 215, type: !10951)
!11347 = !DILocation(line: 0, scope: !11342)
!11348 = !DILocation(line: 215, column: 48, scope: !11342)
!11349 = !DILocation(line: 217, column: 37, scope: !11342)
!11350 = !DILocation(line: 217, column: 2, scope: !11342)
!11351 = !DILocation(line: 218, column: 1, scope: !11342)
!11352 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1552, file: !1552, line: 227, type: !11331, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11353)
!11353 = !{!11354, !11355, !11356}
!11354 = !DILocalVariable(name: "dev", arg: 1, scope: !11352, file: !1552, line: 227, type: !1457)
!11355 = !DILocalVariable(name: "databits", arg: 2, scope: !11352, file: !1552, line: 228, type: !108)
!11356 = !DILocalVariable(name: "config", scope: !11352, file: !1552, line: 230, type: !10951)
!11357 = !DILocation(line: 0, scope: !11352)
!11358 = !DILocation(line: 230, column: 48, scope: !11352)
!11359 = !DILocation(line: 232, column: 32, scope: !11352)
!11360 = !DILocation(line: 232, column: 2, scope: !11352)
!11361 = !DILocation(line: 233, column: 1, scope: !11352)
!11362 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1552, file: !1552, line: 242, type: !11331, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11363)
!11363 = !{!11364, !11365, !11366}
!11364 = !DILocalVariable(name: "dev", arg: 1, scope: !11362, file: !1552, line: 242, type: !1457)
!11365 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11362, file: !1552, line: 243, type: !108)
!11366 = !DILocalVariable(name: "config", scope: !11362, file: !1552, line: 245, type: !10951)
!11367 = !DILocation(line: 0, scope: !11362)
!11368 = !DILocation(line: 245, column: 48, scope: !11362)
!11369 = !DILocation(line: 247, column: 33, scope: !11362)
!11370 = !DILocation(line: 247, column: 2, scope: !11362)
!11371 = !DILocation(line: 248, column: 1, scope: !11362)
!11372 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1552, file: !1552, line: 107, type: !11331, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11373)
!11373 = !{!11374, !11375, !11376, !11377, !11378}
!11374 = !DILocalVariable(name: "dev", arg: 1, scope: !11372, file: !1552, line: 107, type: !1457)
!11375 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11372, file: !1552, line: 107, type: !108)
!11376 = !DILocalVariable(name: "config", scope: !11372, file: !1552, line: 109, type: !10951)
!11377 = !DILocalVariable(name: "data", scope: !11372, file: !1552, line: 110, type: !11074)
!11378 = !DILocalVariable(name: "clock_rate", scope: !11372, file: !1552, line: 112, type: !108)
!11379 = !DILocation(line: 0, scope: !11372)
!11380 = !DILocation(line: 109, column: 48, scope: !11372)
!11381 = !DILocation(line: 110, column: 38, scope: !11372)
!11382 = !DILocation(line: 112, column: 2, scope: !11372)
!11383 = !DILocation(line: 123, column: 36, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !1552, line: 123, column: 7)
!11385 = distinct !DILexicalBlock(scope: !11386, file: !1552, line: 122, column: 9)
!11386 = distinct !DILexicalBlock(scope: !11372, file: !1552, line: 115, column: 6)
!11387 = !DILocation(line: 124, column: 42, scope: !11384)
!11388 = !DILocation(line: 123, column: 7, scope: !11384)
!11389 = !DILocation(line: 125, column: 22, scope: !11384)
!11390 = !DILocation(line: 123, column: 7, scope: !11385)
!11391 = !DILocation(line: 126, column: 4, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11393, file: !1552, line: 126, column: 4)
!11393 = distinct !DILexicalBlock(scope: !11394, file: !1552, line: 126, column: 4)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !1552, line: 126, column: 4)
!11395 = distinct !DILexicalBlock(scope: !11396, file: !1552, line: 126, column: 4)
!11396 = distinct !DILexicalBlock(scope: !11384, file: !1552, line: 125, column: 27)
!11397 = !DILocation(line: 127, column: 4, scope: !11396)
!11398 = !DILocation(line: 176, column: 36, scope: !11372)
!11399 = !DILocation(line: 176, column: 3, scope: !11372)
!11400 = !DILocation(line: 179, column: 32, scope: !11372)
!11401 = !DILocation(line: 180, column: 10, scope: !11372)
!11402 = !DILocation(line: 179, column: 3, scope: !11372)
!11403 = !DILocation(line: 195, column: 1, scope: !11372)
!11404 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11260, file: !11260, line: 410, type: !11323, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11405)
!11405 = !{!11406}
!11406 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11404, file: !11260, line: 410, type: !1498)
!11407 = !DILocation(line: 0, scope: !11404)
!11408 = !DILocation(line: 412, column: 3, scope: !11404)
!11409 = !DILocation(line: 413, column: 1, scope: !11404)
!11410 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !915, file: !915, line: 216, type: !1531, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11411)
!11411 = !{!11412, !11413, !11414, !11415}
!11412 = !DILocalVariable(name: "dev", arg: 1, scope: !11410, file: !915, line: 216, type: !1457)
!11413 = !DILocalVariable(name: "sys", arg: 2, scope: !11410, file: !915, line: 217, type: !1010)
!11414 = !DILocalVariable(name: "rate", arg: 3, scope: !11410, file: !915, line: 218, type: !966)
!11415 = !DILocalVariable(name: "api", scope: !11410, file: !915, line: 220, type: !1509)
!11416 = !DILocation(line: 0, scope: !11410)
!11417 = !DILocation(line: 221, column: 49, scope: !11410)
!11418 = !DILocation(line: 223, column: 11, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11410, file: !915, line: 223, column: 6)
!11420 = !DILocation(line: 223, column: 20, scope: !11419)
!11421 = !DILocation(line: 223, column: 6, scope: !11410)
!11422 = !DILocation(line: 227, column: 9, scope: !11410)
!11423 = !DILocation(line: 227, column: 2, scope: !11410)
!11424 = !DILocation(line: 228, column: 1, scope: !11410)
!11425 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3565, file: !3565, line: 175, type: !3566, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11426)
!11426 = !{!11427}
!11427 = !DILocalVariable(name: "level", arg: 1, scope: !11425, file: !3565, line: 175, type: !103)
!11428 = !DILocation(line: 0, scope: !11425)
!11429 = !DILocation(line: 177, column: 2, scope: !11425)
!11430 = !DILocation(line: 189, column: 1, scope: !11425)
!11431 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11260, file: !11260, line: 615, type: !11432, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11434)
!11432 = !DISubroutineType(types: !11433)
!11433 = !{null, !1498, !108}
!11434 = !{!11435, !11436}
!11435 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11431, file: !11260, line: 615, type: !1498)
!11436 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11431, file: !11260, line: 615, type: !108)
!11437 = !DILocation(line: 0, scope: !11431)
!11438 = !DILocation(line: 617, column: 3, scope: !11431)
!11439 = !DILocation(line: 618, column: 1, scope: !11431)
!11440 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11260, file: !11260, line: 1020, type: !11441, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11443)
!11441 = !DISubroutineType(types: !11442)
!11442 = !{null, !1498, !108, !108, !108}
!11443 = !{!11444, !11445, !11446, !11447}
!11444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11440, file: !11260, line: 1020, type: !1498)
!11445 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11440, file: !11260, line: 1020, type: !108)
!11446 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11440, file: !11260, line: 1020, type: !108)
!11447 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11440, file: !11260, line: 1021, type: !108)
!11448 = !DILocation(line: 0, scope: !11440)
!11449 = !DILocation(line: 1029, column: 30, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !11260, line: 1028, column: 3)
!11451 = distinct !DILexicalBlock(scope: !11440, file: !11260, line: 1023, column: 7)
!11452 = !DILocation(line: 1029, column: 19, scope: !11450)
!11453 = !DILocation(line: 1029, column: 13, scope: !11450)
!11454 = !DILocation(line: 1029, column: 17, scope: !11450)
!11455 = !DILocation(line: 1031, column: 1, scope: !11440)
!11456 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11260, file: !11260, line: 949, type: !11432, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11457)
!11457 = !{!11458, !11459}
!11458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11456, file: !11260, line: 949, type: !1498)
!11459 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11456, file: !11260, line: 949, type: !108)
!11460 = !DILocation(line: 0, scope: !11456)
!11461 = !DILocation(line: 951, column: 3, scope: !11456)
!11462 = !DILocation(line: 952, column: 1, scope: !11456)
!11463 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11260, file: !11260, line: 588, type: !11432, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11464)
!11464 = !{!11465, !11466}
!11465 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11463, file: !11260, line: 588, type: !1498)
!11466 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11463, file: !11260, line: 588, type: !108)
!11467 = !DILocation(line: 0, scope: !11463)
!11468 = !DILocation(line: 590, column: 3, scope: !11463)
!11469 = !DILocation(line: 591, column: 1, scope: !11463)
!11470 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11260, file: !11260, line: 805, type: !11432, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11471)
!11471 = !{!11472, !11473}
!11472 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11470, file: !11260, line: 805, type: !1498)
!11473 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11470, file: !11260, line: 805, type: !108)
!11474 = !DILocation(line: 0, scope: !11470)
!11475 = !DILocation(line: 807, column: 3, scope: !11470)
!11476 = !DILocation(line: 808, column: 1, scope: !11470)
!11477 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11260, file: !11260, line: 532, type: !11432, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11478)
!11478 = !{!11479, !11480}
!11479 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11477, file: !11260, line: 532, type: !1498)
!11480 = !DILocalVariable(name: "Parity", arg: 2, scope: !11477, file: !11260, line: 532, type: !108)
!11481 = !DILocation(line: 0, scope: !11477)
!11482 = !DILocation(line: 534, column: 3, scope: !11477)
!11483 = !DILocation(line: 535, column: 1, scope: !11477)
!11484 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11260, file: !11260, line: 1770, type: !11261, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11485)
!11485 = !{!11486}
!11486 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11484, file: !11260, line: 1770, type: !1498)
!11487 = !DILocation(line: 0, scope: !11484)
!11488 = !DILocation(line: 1772, column: 11, scope: !11484)
!11489 = !DILocation(line: 1772, column: 46, scope: !11484)
!11490 = !DILocation(line: 1772, column: 3, scope: !11484)
!11491 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11260, file: !11260, line: 1737, type: !11261, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11492)
!11492 = !{!11493}
!11493 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11491, file: !11260, line: 1737, type: !1498)
!11494 = !DILocation(line: 0, scope: !11491)
!11495 = !DILocation(line: 1739, column: 11, scope: !11491)
!11496 = !DILocation(line: 1739, column: 3, scope: !11491)
!11497 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11260, file: !11260, line: 1748, type: !11261, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11498)
!11498 = !{!11499}
!11499 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11497, file: !11260, line: 1748, type: !1498)
!11500 = !DILocation(line: 0, scope: !11497)
!11501 = !DILocation(line: 1750, column: 11, scope: !11497)
!11502 = !DILocation(line: 1750, column: 45, scope: !11497)
!11503 = !DILocation(line: 1750, column: 3, scope: !11497)
!11504 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11260, file: !11260, line: 1827, type: !11261, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11505)
!11505 = !{!11506}
!11506 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11504, file: !11260, line: 1827, type: !1498)
!11507 = !DILocation(line: 0, scope: !11504)
!11508 = !DILocation(line: 1829, column: 11, scope: !11504)
!11509 = !DILocation(line: 1829, column: 46, scope: !11504)
!11510 = !DILocation(line: 1829, column: 3, scope: !11504)
!11511 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11260, file: !11260, line: 1992, type: !11323, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11512)
!11512 = !{!11513}
!11513 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11511, file: !11260, line: 1992, type: !1498)
!11514 = !DILocation(line: 0, scope: !11511)
!11515 = !DILocation(line: 1994, column: 3, scope: !11511)
!11516 = !DILocation(line: 1995, column: 1, scope: !11511)
!11517 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11260, file: !11260, line: 1934, type: !11323, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11518)
!11518 = !{!11519, !11520}
!11519 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11517, file: !11260, line: 1934, type: !1498)
!11520 = !DILocalVariable(name: "tmpreg", scope: !11517, file: !11260, line: 1936, type: !409)
!11521 = !DILocation(line: 0, scope: !11517)
!11522 = !DILocation(line: 1936, column: 3, scope: !11517)
!11523 = !DILocation(line: 1936, column: 17, scope: !11517)
!11524 = !DILocation(line: 1937, column: 20, scope: !11517)
!11525 = !DILocation(line: 1937, column: 10, scope: !11517)
!11526 = !DILocation(line: 1938, column: 10, scope: !11517)
!11527 = !DILocation(line: 1939, column: 20, scope: !11517)
!11528 = !DILocation(line: 1939, column: 10, scope: !11517)
!11529 = !DILocation(line: 1940, column: 10, scope: !11517)
!11530 = !DILocation(line: 1941, column: 1, scope: !11517)
!11531 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11260, file: !11260, line: 1877, type: !11323, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11532)
!11532 = !{!11533, !11534}
!11533 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11531, file: !11260, line: 1877, type: !1498)
!11534 = !DILocalVariable(name: "tmpreg", scope: !11531, file: !11260, line: 1879, type: !409)
!11535 = !DILocation(line: 0, scope: !11531)
!11536 = !DILocation(line: 1879, column: 3, scope: !11531)
!11537 = !DILocation(line: 1879, column: 17, scope: !11531)
!11538 = !DILocation(line: 1880, column: 20, scope: !11531)
!11539 = !DILocation(line: 1880, column: 10, scope: !11531)
!11540 = !DILocation(line: 1881, column: 10, scope: !11531)
!11541 = !DILocation(line: 1882, column: 20, scope: !11531)
!11542 = !DILocation(line: 1882, column: 10, scope: !11531)
!11543 = !DILocation(line: 1883, column: 10, scope: !11531)
!11544 = !DILocation(line: 1884, column: 1, scope: !11531)
!11545 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11260, file: !11260, line: 1896, type: !11323, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11546)
!11546 = !{!11547, !11548}
!11547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11545, file: !11260, line: 1896, type: !1498)
!11548 = !DILocalVariable(name: "tmpreg", scope: !11545, file: !11260, line: 1898, type: !409)
!11549 = !DILocation(line: 0, scope: !11545)
!11550 = !DILocation(line: 1898, column: 3, scope: !11545)
!11551 = !DILocation(line: 1898, column: 17, scope: !11545)
!11552 = !DILocation(line: 1899, column: 20, scope: !11545)
!11553 = !DILocation(line: 1899, column: 10, scope: !11545)
!11554 = !DILocation(line: 1900, column: 10, scope: !11545)
!11555 = !DILocation(line: 1901, column: 20, scope: !11545)
!11556 = !DILocation(line: 1901, column: 10, scope: !11545)
!11557 = !DILocation(line: 1902, column: 10, scope: !11545)
!11558 = !DILocation(line: 1903, column: 1, scope: !11545)
!11559 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11260, file: !11260, line: 1915, type: !11323, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11560)
!11560 = !{!11561, !11562}
!11561 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11559, file: !11260, line: 1915, type: !1498)
!11562 = !DILocalVariable(name: "tmpreg", scope: !11559, file: !11260, line: 1917, type: !409)
!11563 = !DILocation(line: 0, scope: !11559)
!11564 = !DILocation(line: 1917, column: 3, scope: !11559)
!11565 = !DILocation(line: 1917, column: 17, scope: !11559)
!11566 = !DILocation(line: 1918, column: 20, scope: !11559)
!11567 = !DILocation(line: 1918, column: 10, scope: !11559)
!11568 = !DILocation(line: 1919, column: 10, scope: !11559)
!11569 = !DILocation(line: 1920, column: 20, scope: !11559)
!11570 = !DILocation(line: 1920, column: 10, scope: !11559)
!11571 = !DILocation(line: 1921, column: 10, scope: !11559)
!11572 = !DILocation(line: 1922, column: 1, scope: !11559)
!11573 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11260, file: !11260, line: 1814, type: !11261, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11574)
!11574 = !{!11575}
!11575 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11573, file: !11260, line: 1814, type: !1498)
!11576 = !DILocation(line: 0, scope: !11573)
!11577 = !DILocation(line: 1816, column: 11, scope: !11573)
!11578 = !DILocation(line: 1816, column: 46, scope: !11573)
!11579 = !DILocation(line: 1816, column: 3, scope: !11573)
!11580 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11260, file: !11260, line: 2426, type: !11581, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11583)
!11581 = !DISubroutineType(types: !11582)
!11582 = !{null, !1498, !185}
!11583 = !{!11584, !11585}
!11584 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11580, file: !11260, line: 2426, type: !1498)
!11585 = !DILocalVariable(name: "Value", arg: 2, scope: !11580, file: !11260, line: 2426, type: !185)
!11586 = !DILocation(line: 0, scope: !11580)
!11587 = !DILocation(line: 2428, column: 16, scope: !11580)
!11588 = !DILocation(line: 2428, column: 11, scope: !11580)
!11589 = !DILocation(line: 2428, column: 14, scope: !11580)
!11590 = !DILocation(line: 2429, column: 1, scope: !11580)
!11591 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11260, file: !11260, line: 1792, type: !11261, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11592)
!11592 = !{!11593}
!11593 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11591, file: !11260, line: 1792, type: !1498)
!11594 = !DILocation(line: 0, scope: !11591)
!11595 = !DILocation(line: 1794, column: 11, scope: !11591)
!11596 = !DILocation(line: 1794, column: 47, scope: !11591)
!11597 = !DILocation(line: 1794, column: 3, scope: !11591)
!11598 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11260, file: !11260, line: 2403, type: !11599, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11601)
!11599 = !DISubroutineType(types: !11600)
!11600 = !{!185, !1498}
!11601 = !{!11602}
!11602 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11598, file: !11260, line: 2403, type: !1498)
!11603 = !DILocation(line: 0, scope: !11598)
!11604 = !DILocation(line: 2405, column: 20, scope: !11598)
!11605 = !DILocation(line: 2405, column: 10, scope: !11598)
!11606 = !DILocation(line: 2405, column: 3, scope: !11598)
!11607 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1552, file: !1552, line: 1583, type: !1478, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11608)
!11608 = !{!11609, !11610, !11611, !11612, !11613, !11614}
!11609 = !DILocalVariable(name: "dev", arg: 1, scope: !11607, file: !1552, line: 1583, type: !1457)
!11610 = !DILocalVariable(name: "config", scope: !11607, file: !1552, line: 1585, type: !10951)
!11611 = !DILocalVariable(name: "data", scope: !11607, file: !1552, line: 1586, type: !11074)
!11612 = !DILocalVariable(name: "ll_parity", scope: !11607, file: !1552, line: 1587, type: !108)
!11613 = !DILocalVariable(name: "ll_datawidth", scope: !11607, file: !1552, line: 1588, type: !108)
!11614 = !DILocalVariable(name: "err", scope: !11607, file: !1552, line: 1589, type: !103)
!11615 = !DILocation(line: 0, scope: !11607)
!11616 = !DILocation(line: 1585, column: 48, scope: !11607)
!11617 = !DILocation(line: 1586, column: 38, scope: !11607)
!11618 = !DILocation(line: 1591, column: 2, scope: !11607)
!11619 = !DILocation(line: 1593, column: 29, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11607, file: !1552, line: 1593, column: 6)
!11621 = !DILocation(line: 1593, column: 7, scope: !11620)
!11622 = !DILocation(line: 1593, column: 6, scope: !11607)
!11623 = !DILocation(line: 1594, column: 3, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !1552, line: 1594, column: 3)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !1552, line: 1594, column: 3)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !1552, line: 1594, column: 3)
!11627 = distinct !DILexicalBlock(scope: !11628, file: !1552, line: 1594, column: 3)
!11628 = distinct !DILexicalBlock(scope: !11620, file: !1552, line: 1593, column: 37)
!11629 = !DILocation(line: 1595, column: 3, scope: !11628)
!11630 = !DILocation(line: 1599, column: 31, scope: !11607)
!11631 = !DILocation(line: 1599, column: 71, scope: !11607)
!11632 = !DILocation(line: 1599, column: 8, scope: !11607)
!11633 = !DILocation(line: 1600, column: 10, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11607, file: !1552, line: 1600, column: 6)
!11635 = !DILocation(line: 1600, column: 6, scope: !11607)
!11636 = !DILocation(line: 1601, column: 3, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !1552, line: 1601, column: 3)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !1552, line: 1601, column: 3)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !1552, line: 1601, column: 3)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !1552, line: 1601, column: 3)
!11641 = distinct !DILexicalBlock(scope: !11634, file: !1552, line: 1600, column: 16)
!11642 = !DILocation(line: 1602, column: 3, scope: !11641)
!11643 = !DILocation(line: 1616, column: 36, scope: !11607)
!11644 = !DILocation(line: 1616, column: 8, scope: !11607)
!11645 = !DILocation(line: 1617, column: 10, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11607, file: !1552, line: 1617, column: 6)
!11647 = !DILocation(line: 1617, column: 6, scope: !11607)
!11648 = !DILocation(line: 1621, column: 27, scope: !11607)
!11649 = !DILocation(line: 1621, column: 2, scope: !11607)
!11650 = !DILocation(line: 1624, column: 40, scope: !11607)
!11651 = !DILocation(line: 1624, column: 2, scope: !11607)
!11652 = !DILocation(line: 1630, column: 14, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11607, file: !1552, line: 1630, column: 6)
!11654 = !DILocation(line: 1630, column: 6, scope: !11607)
!11655 = !DILocation(line: 1640, column: 4, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !1552, line: 1640, column: 4)
!11657 = distinct !DILexicalBlock(scope: !11658, file: !1552, line: 1640, column: 4)
!11658 = distinct !DILexicalBlock(scope: !11659, file: !1552, line: 1640, column: 4)
!11659 = distinct !DILexicalBlock(scope: !11660, file: !1552, line: 1640, column: 4)
!11660 = distinct !DILexicalBlock(scope: !11661, file: !1552, line: 1639, column: 28)
!11661 = distinct !DILexicalBlock(scope: !11662, file: !1552, line: 1639, column: 7)
!11662 = distinct !DILexicalBlock(scope: !11663, file: !1552, line: 1638, column: 9)
!11663 = distinct !DILexicalBlock(scope: !11653, file: !1552, line: 1634, column: 13)
!11664 = !DILocation(line: 0, scope: !11653)
!11665 = !DILocation(line: 1649, column: 35, scope: !11607)
!11666 = !DILocation(line: 1649, column: 2, scope: !11607)
!11667 = !DILocation(line: 1654, column: 14, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11607, file: !1552, line: 1654, column: 6)
!11669 = !DILocation(line: 1654, column: 6, scope: !11607)
!11670 = !DILocation(line: 1655, column: 3, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11668, file: !1552, line: 1654, column: 31)
!11672 = !DILocation(line: 1656, column: 2, scope: !11671)
!11673 = !DILocation(line: 1659, column: 37, scope: !11607)
!11674 = !DILocation(line: 1659, column: 2, scope: !11607)
!11675 = !DILocation(line: 1662, column: 14, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11607, file: !1552, line: 1662, column: 6)
!11677 = !DILocation(line: 1662, column: 6, scope: !11607)
!11678 = !DILocation(line: 1663, column: 37, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11676, file: !1552, line: 1662, column: 27)
!11680 = !DILocation(line: 1663, column: 3, scope: !11679)
!11681 = !DILocation(line: 1664, column: 2, scope: !11679)
!11682 = !DILocation(line: 1684, column: 26, scope: !11607)
!11683 = !DILocation(line: 1684, column: 2, scope: !11607)
!11684 = !DILocation(line: 1722, column: 2, scope: !11607)
!11685 = !DILocation(line: 1724, column: 1, scope: !11607)
!11686 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1552, file: !1552, line: 651, type: !11687, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11689)
!11687 = !DISubroutineType(types: !11688)
!11688 = !{null, !1457}
!11689 = !{!11690, !11691, !11692}
!11690 = !DILocalVariable(name: "dev", arg: 1, scope: !11686, file: !1552, line: 651, type: !1457)
!11691 = !DILocalVariable(name: "data", scope: !11686, file: !1552, line: 653, type: !11074)
!11692 = !DILocalVariable(name: "clk", scope: !11686, file: !1552, line: 654, type: !11693)
!11693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!11694 = !DILocation(line: 0, scope: !11686)
!11695 = !DILocation(line: 653, column: 38, scope: !11686)
!11696 = !DILocation(line: 656, column: 8, scope: !11686)
!11697 = !DILocation(line: 656, column: 14, scope: !11686)
!11698 = !DILocation(line: 657, column: 1, scope: !11686)
!11699 = distinct !DISubprogram(name: "device_is_ready", scope: !10089, file: !10089, line: 47, type: !11700, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11702)
!11700 = !DISubroutineType(types: !11701)
!11701 = !{!131, !1457}
!11702 = !{!11703}
!11703 = !DILocalVariable(name: "dev", arg: 1, scope: !11699, file: !10089, line: 47, type: !1457)
!11704 = !DILocation(line: 0, scope: !11699)
!11705 = !DILocation(line: 55, column: 2, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11699, file: !10089, line: 55, column: 2)
!11707 = !{i64 2154349827}
!11708 = !DILocation(line: 56, column: 9, scope: !11699)
!11709 = !DILocation(line: 56, column: 2, scope: !11699)
!11710 = distinct !DISubprogram(name: "clock_control_on", scope: !915, file: !915, line: 123, type: !1516, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11711)
!11711 = !{!11712, !11713, !11714}
!11712 = !DILocalVariable(name: "dev", arg: 1, scope: !11710, file: !915, line: 123, type: !1457)
!11713 = !DILocalVariable(name: "sys", arg: 2, scope: !11710, file: !915, line: 124, type: !1010)
!11714 = !DILocalVariable(name: "api", scope: !11710, file: !915, line: 126, type: !1509)
!11715 = !DILocation(line: 0, scope: !11710)
!11716 = !DILocation(line: 127, column: 49, scope: !11710)
!11717 = !DILocation(line: 129, column: 14, scope: !11710)
!11718 = !DILocation(line: 129, column: 9, scope: !11710)
!11719 = !DILocation(line: 129, column: 2, scope: !11710)
!11720 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1592, file: !1592, line: 342, type: !11721, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11723)
!11721 = !DISubroutineType(types: !11722)
!11722 = !{!103, !1589, !185}
!11723 = !{!11724, !11725, !11726, !11727}
!11724 = !DILocalVariable(name: "config", arg: 1, scope: !11720, file: !1592, line: 342, type: !1589)
!11725 = !DILocalVariable(name: "id", arg: 2, scope: !11720, file: !1592, line: 343, type: !185)
!11726 = !DILocalVariable(name: "ret", scope: !11720, file: !1592, line: 345, type: !103)
!11727 = !DILocalVariable(name: "state", scope: !11720, file: !1592, line: 346, type: !1595)
!11728 = !DILocation(line: 0, scope: !11720)
!11729 = !DILocation(line: 346, column: 2, scope: !11720)
!11730 = !DILocation(line: 348, column: 8, scope: !11720)
!11731 = !DILocation(line: 349, column: 10, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11720, file: !1592, line: 349, column: 6)
!11733 = !DILocation(line: 349, column: 6, scope: !11720)
!11734 = !DILocation(line: 353, column: 44, scope: !11720)
!11735 = !DILocation(line: 353, column: 9, scope: !11720)
!11736 = !DILocation(line: 353, column: 2, scope: !11720)
!11737 = !DILocation(line: 354, column: 1, scope: !11720)
!11738 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11260, file: !11260, line: 497, type: !11432, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11739)
!11739 = !{!11740, !11741, !11742}
!11740 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11738, file: !11260, line: 497, type: !1498)
!11741 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11738, file: !11260, line: 497, type: !108)
!11742 = !DILocalVariable(name: "val", scope: !11743, file: !11260, line: 499, type: !108)
!11743 = distinct !DILexicalBlock(scope: !11738, file: !11260, line: 499, column: 3)
!11744 = !DILocation(line: 0, scope: !11738)
!11745 = !DILocation(line: 499, column: 3, scope: !11743)
!11746 = !DILocalVariable(name: "addr", arg: 1, scope: !11747, file: !7280, line: 476, type: !1548)
!11747 = distinct !DISubprogram(name: "__LDREXW", scope: !7280, file: !7280, line: 476, type: !11748, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11750)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{!108, !1548}
!11750 = !{!11746, !11751}
!11751 = !DILocalVariable(name: "result", scope: !11747, file: !7280, line: 478, type: !108)
!11752 = !DILocation(line: 0, scope: !11747, inlinedAt: !11753)
!11753 = distinct !DILocation(line: 499, column: 3, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11743, file: !11260, line: 499, column: 3)
!11755 = !DILocation(line: 480, column: 4, scope: !11747, inlinedAt: !11753)
!11756 = !{i64 2860673}
!11757 = !DILocation(line: 499, column: 3, scope: !11754)
!11758 = !DILocation(line: 0, scope: !11743)
!11759 = !DILocalVariable(name: "value", arg: 1, scope: !11760, file: !7280, line: 527, type: !108)
!11760 = distinct !DISubprogram(name: "__STREXW", scope: !7280, file: !7280, line: 527, type: !11761, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11763)
!11761 = !DISubroutineType(types: !11762)
!11762 = !{!108, !108, !1548}
!11763 = !{!11759, !11764, !11765}
!11764 = !DILocalVariable(name: "addr", arg: 2, scope: !11760, file: !7280, line: 527, type: !1548)
!11765 = !DILocalVariable(name: "result", scope: !11760, file: !7280, line: 529, type: !108)
!11766 = !DILocation(line: 0, scope: !11760, inlinedAt: !11767)
!11767 = distinct !DILocation(line: 499, column: 3, scope: !11743)
!11768 = !DILocation(line: 531, column: 4, scope: !11760, inlinedAt: !11767)
!11769 = !{i64 2862109}
!11770 = distinct !{!11770, !11745, !11745}
!11771 = !DILocation(line: 500, column: 1, scope: !11738)
!11772 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11260, file: !11260, line: 850, type: !11441, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11773)
!11773 = !{!11774, !11775, !11776, !11777}
!11774 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11772, file: !11260, line: 850, type: !1498)
!11775 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11772, file: !11260, line: 850, type: !108)
!11776 = !DILocalVariable(name: "Parity", arg: 3, scope: !11772, file: !11260, line: 850, type: !108)
!11777 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11772, file: !11260, line: 851, type: !108)
!11778 = !DILocation(line: 0, scope: !11772)
!11779 = !DILocation(line: 853, column: 3, scope: !11772)
!11780 = !DILocation(line: 854, column: 3, scope: !11772)
!11781 = !DILocation(line: 855, column: 1, scope: !11772)
!11782 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11260, file: !11260, line: 1337, type: !11323, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11783)
!11783 = !{!11784}
!11784 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11782, file: !11260, line: 1337, type: !1498)
!11785 = !DILocation(line: 0, scope: !11782)
!11786 = !DILocation(line: 1339, column: 3, scope: !11782)
!11787 = !DILocation(line: 1340, column: 1, scope: !11782)
!11788 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1592, file: !1592, line: 316, type: !11789, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11791)
!11789 = !DISubroutineType(types: !11790)
!11790 = !{!103, !1589, !1595}
!11791 = !{!11792, !11793, !11794}
!11792 = !DILocalVariable(name: "config", arg: 1, scope: !11788, file: !1592, line: 317, type: !1589)
!11793 = !DILocalVariable(name: "state", arg: 2, scope: !11788, file: !1592, line: 318, type: !1595)
!11794 = !DILocalVariable(name: "reg", scope: !11788, file: !1592, line: 320, type: !22)
!11795 = !DILocation(line: 0, scope: !11788)
!11796 = !DILocation(line: 329, column: 39, scope: !11788)
!11797 = !DILocation(line: 329, column: 52, scope: !11788)
!11798 = !DILocation(line: 329, column: 9, scope: !11788)
!11799 = !DILocation(line: 329, column: 2, scope: !11788)
!11800 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !11700, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !11801)
!11801 = !{!11802}
!11802 = !DILocalVariable(name: "dev", arg: 1, scope: !11800, file: !429, line: 730, type: !1457)
!11803 = !DILocation(line: 0, scope: !11800)
!11804 = !DILocation(line: 732, column: 9, scope: !11800)
!11805 = !DILocation(line: 732, column: 2, scope: !11800)
!11806 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1713, file: !1713, line: 270, type: !1719, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11807)
!11807 = !{!11808}
!11808 = !DILocalVariable(name: "dev", arg: 1, scope: !11806, file: !1713, line: 270, type: !1721)
!11809 = !DILocation(line: 0, scope: !11806)
!11810 = !DILocation(line: 274, column: 2, scope: !11806)
!11811 = !DILocation(line: 275, column: 12, scope: !11806)
!11812 = !DILocation(line: 276, column: 15, scope: !11806)
!11813 = !DILocation(line: 277, column: 16, scope: !11806)
!11814 = !DILocation(line: 278, column: 15, scope: !11806)
!11815 = !DILocation(line: 279, column: 16, scope: !11806)
!11816 = !DILocation(line: 282, column: 2, scope: !11806)
!11817 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7314, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11818)
!11818 = !{!11819, !11820}
!11819 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11817, file: !624, line: 1814, type: !871)
!11820 = !DILocalVariable(name: "priority", arg: 2, scope: !11817, file: !624, line: 1814, type: !108)
!11821 = !DILocation(line: 0, scope: !11817)
!11822 = !DILocation(line: 1822, column: 46, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !624, line: 1821, column: 3)
!11824 = distinct !DILexicalBlock(scope: !11817, file: !624, line: 1816, column: 7)
!11825 = !DILocation(line: 1824, column: 1, scope: !11817)
!11826 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1713, file: !1713, line: 118, type: !7217, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11827)
!11827 = !{!11828, !11829}
!11828 = !DILocalVariable(name: "arg", arg: 1, scope: !11826, file: !1713, line: 118, type: !102)
!11829 = !DILocalVariable(name: "dticks", scope: !11826, file: !1713, line: 121, type: !108)
!11830 = !DILocation(line: 0, scope: !11826)
!11831 = !DILocation(line: 124, column: 2, scope: !11826)
!11832 = !DILocation(line: 129, column: 17, scope: !11826)
!11833 = !DILocation(line: 129, column: 14, scope: !11826)
!11834 = !DILocation(line: 130, column: 15, scope: !11826)
!11835 = !DILocation(line: 145, column: 27, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11837, file: !1713, line: 132, column: 16)
!11837 = distinct !DILexicalBlock(scope: !11826, file: !1713, line: 132, column: 6)
!11838 = !DILocation(line: 145, column: 25, scope: !11836)
!11839 = !DILocation(line: 145, column: 45, scope: !11836)
!11840 = !DILocation(line: 146, column: 30, scope: !11836)
!11841 = !DILocation(line: 146, column: 20, scope: !11836)
!11842 = !DILocation(line: 147, column: 3, scope: !11836)
!11843 = !DILocation(line: 151, column: 2, scope: !11826)
!11844 = !DILocation(line: 152, column: 1, scope: !11826)
!11845 = distinct !DISubprogram(name: "elapsed", scope: !1713, file: !1713, line: 85, type: !3574, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11846)
!11846 = !{!11847, !11848, !11849}
!11847 = !DILocalVariable(name: "val1", scope: !11845, file: !1713, line: 87, type: !108)
!11848 = !DILocalVariable(name: "ctrl", scope: !11845, file: !1713, line: 88, type: !108)
!11849 = !DILocalVariable(name: "val2", scope: !11845, file: !1713, line: 89, type: !108)
!11850 = !DILocation(line: 87, column: 27, scope: !11845)
!11851 = !DILocation(line: 0, scope: !11845)
!11852 = !DILocation(line: 88, column: 27, scope: !11845)
!11853 = !DILocation(line: 89, column: 27, scope: !11845)
!11854 = !DILocation(line: 105, column: 12, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11845, file: !1713, line: 105, column: 6)
!11856 = !DILocation(line: 106, column: 6, scope: !11855)
!11857 = !DILocation(line: 107, column: 16, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11855, file: !1713, line: 106, column: 24)
!11859 = !DILocation(line: 111, column: 18, scope: !11858)
!11860 = !DILocation(line: 112, column: 2, scope: !11858)
!11861 = !DILocation(line: 114, column: 20, scope: !11845)
!11862 = !DILocation(line: 114, column: 30, scope: !11845)
!11863 = !DILocation(line: 114, column: 28, scope: !11845)
!11864 = !DILocation(line: 114, column: 2, scope: !11845)
!11865 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1713, file: !1713, line: 154, type: !11866, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11868)
!11866 = !DISubroutineType(types: !11867)
!11867 = !{null, !331, !131}
!11868 = !{!11869, !11870, !11871, !11872, !11873, !11874, !11875, !11880, !11881}
!11869 = !DILocalVariable(name: "ticks", arg: 1, scope: !11865, file: !1713, line: 154, type: !331)
!11870 = !DILocalVariable(name: "idle", arg: 2, scope: !11865, file: !1713, line: 154, type: !131)
!11871 = !DILocalVariable(name: "delay", scope: !11865, file: !1713, line: 169, type: !108)
!11872 = !DILocalVariable(name: "val1", scope: !11865, file: !1713, line: 170, type: !108)
!11873 = !DILocalVariable(name: "val2", scope: !11865, file: !1713, line: 170, type: !108)
!11874 = !DILocalVariable(name: "last_load_", scope: !11865, file: !1713, line: 171, type: !108)
!11875 = !DILocalVariable(name: "key", scope: !11865, file: !1713, line: 176, type: !11876)
!11876 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !11877)
!11877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !11878)
!11878 = !{!11879}
!11879 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11877, file: !250, line: 33, baseType: !103, size: 32)
!11880 = !DILocalVariable(name: "pending", scope: !11865, file: !1713, line: 178, type: !108)
!11881 = !DILocalVariable(name: "unannounced", scope: !11865, file: !1713, line: 185, type: !108)
!11882 = !DILocation(line: 0, scope: !11865)
!11883 = !DILocation(line: 162, column: 49, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11865, file: !1713, line: 162, column: 6)
!11885 = !DILocation(line: 163, column: 17, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11884, file: !1713, line: 162, column: 78)
!11887 = !DILocation(line: 164, column: 13, scope: !11886)
!11888 = !DILocation(line: 165, column: 3, scope: !11886)
!11889 = !DILocation(line: 171, column: 24, scope: !11865)
!11890 = !DILocation(line: 173, column: 10, scope: !11865)
!11891 = !DILocation(line: 174, column: 10, scope: !11865)
!11892 = !DILocalVariable(name: "l", arg: 1, scope: !11893, file: !250, line: 136, type: !11896)
!11893 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !11894, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11897)
!11894 = !DISubroutineType(types: !11895)
!11895 = !{!11876, !11896}
!11896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!11897 = !{!11892, !11898}
!11898 = !DILocalVariable(name: "k", scope: !11893, file: !250, line: 139, type: !11876)
!11899 = !DILocation(line: 0, scope: !11893, inlinedAt: !11900)
!11900 = distinct !DILocation(line: 176, column: 25, scope: !11865)
!11901 = !DILocation(line: 55, column: 2, scope: !11902, inlinedAt: !11906)
!11902 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11903)
!11903 = !{!11904, !11905}
!11904 = !DILocalVariable(name: "key", scope: !11902, file: !6962, line: 44, type: !32)
!11905 = !DILocalVariable(name: "tmp", scope: !11902, file: !6962, line: 53, type: !32)
!11906 = distinct !DILocation(line: 145, column: 10, scope: !11893, inlinedAt: !11900)
!11907 = !{i64 1922465}
!11908 = !DILocation(line: 0, scope: !11902, inlinedAt: !11906)
!11909 = !DILocation(line: 178, column: 21, scope: !11865)
!11910 = !DILocation(line: 180, column: 18, scope: !11865)
!11911 = !DILocation(line: 182, column: 14, scope: !11865)
!11912 = !DILocation(line: 183, column: 15, scope: !11865)
!11913 = !DILocation(line: 185, column: 39, scope: !11865)
!11914 = !DILocation(line: 185, column: 37, scope: !11865)
!11915 = !DILocation(line: 187, column: 27, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11865, file: !1713, line: 187, column: 6)
!11917 = !DILocation(line: 187, column: 6, scope: !11865)
!11918 = !DILocation(line: 202, column: 27, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11916, file: !1713, line: 195, column: 9)
!11920 = !DILocation(line: 202, column: 48, scope: !11919)
!11921 = !DILocation(line: 203, column: 9, scope: !11919)
!11922 = !DILocation(line: 204, column: 11, scope: !11919)
!11923 = !DILocation(line: 205, column: 13, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11919, file: !1713, line: 205, column: 7)
!11925 = !DILocation(line: 205, column: 7, scope: !11919)
!11926 = !DILocation(line: 0, scope: !11916)
!11927 = !DILocation(line: 212, column: 18, scope: !11865)
!11928 = !DILocation(line: 214, column: 28, scope: !11865)
!11929 = !DILocation(line: 214, column: 16, scope: !11865)
!11930 = !DILocation(line: 215, column: 15, scope: !11865)
!11931 = !DILocation(line: 227, column: 11, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11865, file: !1713, line: 227, column: 6)
!11933 = !DILocation(line: 227, column: 6, scope: !11865)
!11934 = !DILocation(line: 228, column: 15, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11932, file: !1713, line: 227, column: 19)
!11936 = !DILocation(line: 228, column: 38, scope: !11935)
!11937 = !DILocation(line: 228, column: 24, scope: !11935)
!11938 = !DILocation(line: 229, column: 2, scope: !11935)
!11939 = !DILocation(line: 230, column: 24, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11932, file: !1713, line: 229, column: 9)
!11941 = !DILocation(line: 230, column: 15, scope: !11940)
!11942 = !DILocation(line: 0, scope: !11932)
!11943 = !DILocalVariable(name: "key", arg: 2, scope: !11944, file: !250, line: 190, type: !11876)
!11944 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !11945, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11947)
!11945 = !DISubroutineType(types: !11946)
!11946 = !{null, !11896, !11876}
!11947 = !{!11948, !11943}
!11948 = !DILocalVariable(name: "l", arg: 1, scope: !11944, file: !250, line: 189, type: !11896)
!11949 = !DILocation(line: 0, scope: !11944, inlinedAt: !11950)
!11950 = distinct !DILocation(line: 232, column: 2, scope: !11865)
!11951 = !DILocalVariable(name: "key", arg: 1, scope: !11952, file: !6962, line: 84, type: !32)
!11952 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11953)
!11953 = !{!11951}
!11954 = !DILocation(line: 0, scope: !11952, inlinedAt: !11955)
!11955 = distinct !DILocation(line: 215, column: 2, scope: !11944, inlinedAt: !11950)
!11956 = !DILocation(line: 95, column: 2, scope: !11952, inlinedAt: !11955)
!11957 = !{i64 1923282}
!11958 = !DILocation(line: 234, column: 1, scope: !11865)
!11959 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1713, file: !1713, line: 236, type: !3574, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11960)
!11960 = !{!11961, !11962}
!11961 = !DILocalVariable(name: "key", scope: !11959, file: !1713, line: 242, type: !11876)
!11962 = !DILocalVariable(name: "cyc", scope: !11959, file: !1713, line: 243, type: !108)
!11963 = !DILocation(line: 0, scope: !11893, inlinedAt: !11964)
!11964 = distinct !DILocation(line: 242, column: 25, scope: !11959)
!11965 = !DILocation(line: 55, column: 2, scope: !11902, inlinedAt: !11966)
!11966 = distinct !DILocation(line: 145, column: 10, scope: !11893, inlinedAt: !11964)
!11967 = !DILocation(line: 0, scope: !11902, inlinedAt: !11966)
!11968 = !DILocation(line: 0, scope: !11959)
!11969 = !DILocation(line: 243, column: 17, scope: !11959)
!11970 = !DILocation(line: 243, column: 29, scope: !11959)
!11971 = !DILocation(line: 243, column: 27, scope: !11959)
!11972 = !DILocation(line: 243, column: 43, scope: !11959)
!11973 = !DILocation(line: 243, column: 41, scope: !11959)
!11974 = !DILocation(line: 0, scope: !11944, inlinedAt: !11975)
!11975 = distinct !DILocation(line: 245, column: 2, scope: !11959)
!11976 = !DILocation(line: 0, scope: !11952, inlinedAt: !11977)
!11977 = distinct !DILocation(line: 215, column: 2, scope: !11944, inlinedAt: !11975)
!11978 = !DILocation(line: 95, column: 2, scope: !11952, inlinedAt: !11977)
!11979 = !DILocation(line: 246, column: 13, scope: !11959)
!11980 = !DILocation(line: 246, column: 2, scope: !11959)
!11981 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1713, file: !1713, line: 249, type: !3574, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !11982)
!11982 = !{!11983, !11984}
!11983 = !DILocalVariable(name: "key", scope: !11981, file: !1713, line: 251, type: !11876)
!11984 = !DILocalVariable(name: "ret", scope: !11981, file: !1713, line: 252, type: !108)
!11985 = !DILocation(line: 0, scope: !11893, inlinedAt: !11986)
!11986 = distinct !DILocation(line: 251, column: 25, scope: !11981)
!11987 = !DILocation(line: 55, column: 2, scope: !11902, inlinedAt: !11988)
!11988 = distinct !DILocation(line: 145, column: 10, scope: !11893, inlinedAt: !11986)
!11989 = !DILocation(line: 0, scope: !11902, inlinedAt: !11988)
!11990 = !DILocation(line: 0, scope: !11981)
!11991 = !DILocation(line: 252, column: 17, scope: !11981)
!11992 = !DILocation(line: 252, column: 29, scope: !11981)
!11993 = !DILocation(line: 252, column: 27, scope: !11981)
!11994 = !DILocation(line: 0, scope: !11944, inlinedAt: !11995)
!11995 = distinct !DILocation(line: 254, column: 2, scope: !11981)
!11996 = !DILocation(line: 0, scope: !11952, inlinedAt: !11997)
!11997 = distinct !DILocation(line: 215, column: 2, scope: !11944, inlinedAt: !11995)
!11998 = !DILocation(line: 95, column: 2, scope: !11952, inlinedAt: !11997)
!11999 = !DILocation(line: 255, column: 2, scope: !11981)
!12000 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1713, file: !1713, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !251)
!12001 = !DILocation(line: 260, column: 6, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !12000, file: !1713, line: 260, column: 6)
!12003 = !DILocation(line: 260, column: 16, scope: !12002)
!12004 = !DILocation(line: 260, column: 6, scope: !12000)
!12005 = !DILocation(line: 261, column: 17, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12002, file: !1713, line: 260, column: 34)
!12007 = !DILocation(line: 262, column: 2, scope: !12006)
!12008 = !DILocation(line: 263, column: 1, scope: !12000)
!12009 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1713, file: !1713, line: 265, type: !334, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1637, retainedNodes: !251)
!12010 = !DILocation(line: 267, column: 16, scope: !12009)
!12011 = !DILocation(line: 268, column: 1, scope: !12009)
!12012 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12013, file: !12013, line: 9, type: !12014, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12037)
!12013 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12014 = !DISubroutineType(types: !12015)
!12015 = !{!103, !12016, !185, !12036}
!12016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12017, size: 32)
!12017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12018)
!12018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1592, line: 60, size: 64, elements: !12019)
!12019 = !{!12020, !12035}
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12018, file: !1592, line: 69, baseType: !12021, size: 32)
!12021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12022, size: 32)
!12022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12023)
!12023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1592, line: 50, size: 64, elements: !12024)
!12024 = !{!12025, !12033, !12034}
!12025 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12023, file: !1592, line: 52, baseType: !12026, size: 32)
!12026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12027, size: 32)
!12027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12028)
!12028 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1603, line: 37, baseType: !12029)
!12029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1603, line: 32, size: 64, elements: !12030)
!12030 = !{!12031, !12032}
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12029, file: !1603, line: 34, baseType: !108, size: 32)
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12029, file: !1603, line: 36, baseType: !108, size: 32, offset: 32)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12023, file: !1592, line: 54, baseType: !185, size: 8, offset: 32)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12023, file: !1592, line: 56, baseType: !185, size: 8, offset: 40)
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12018, file: !1592, line: 71, baseType: !185, size: 8, offset: 32)
!12036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12021, size: 32)
!12037 = !{!12038, !12039, !12040}
!12038 = !DILocalVariable(name: "config", arg: 1, scope: !12012, file: !12013, line: 9, type: !12016)
!12039 = !DILocalVariable(name: "id", arg: 2, scope: !12012, file: !12013, line: 9, type: !185)
!12040 = !DILocalVariable(name: "state", arg: 3, scope: !12012, file: !12013, line: 10, type: !12036)
!12041 = !DILocation(line: 0, scope: !12012)
!12042 = !DILocation(line: 12, column: 20, scope: !12012)
!12043 = !DILocation(line: 13, column: 27, scope: !12012)
!12044 = !DILocation(line: 13, column: 42, scope: !12012)
!12045 = !DILocation(line: 13, column: 19, scope: !12012)
!12046 = !DILocation(line: 13, column: 16, scope: !12012)
!12047 = !DILocation(line: 13, column: 2, scope: !12012)
!12048 = distinct !{!12048, !12047, !12049}
!12049 = !DILocation(line: 19, column: 2, scope: !12012)
!12050 = !DILocation(line: 14, column: 23, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12052, file: !12013, line: 14, column: 7)
!12052 = distinct !DILexicalBlock(scope: !12012, file: !12013, line: 13, column: 54)
!12053 = !DILocation(line: 14, column: 10, scope: !12051)
!12054 = !DILocation(line: 18, column: 11, scope: !12052)
!12055 = !DILocation(line: 14, column: 7, scope: !12052)
!12056 = !DILocation(line: 22, column: 1, scope: !12012)
!12057 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1830, file: !1830, line: 193, type: !12058, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !12067)
!12058 = !DISubroutineType(types: !12059)
!12059 = !{!103, !12060, !185, !22}
!12060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12061, size: 32)
!12061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12062)
!12062 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1603, line: 37, baseType: !12063)
!12063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1603, line: 32, size: 64, elements: !12064)
!12064 = !{!12065, !12066}
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12063, file: !1603, line: 34, baseType: !108, size: 32)
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12063, file: !1603, line: 36, baseType: !108, size: 32, offset: 32)
!12067 = !{!12068, !12069, !12070, !12071, !12072, !12073, !12074, !12075, !12077}
!12068 = !DILocalVariable(name: "pins", arg: 1, scope: !12057, file: !1830, line: 193, type: !12060)
!12069 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12057, file: !1830, line: 193, type: !185)
!12070 = !DILocalVariable(name: "reg", arg: 3, scope: !12057, file: !1830, line: 194, type: !22)
!12071 = !DILocalVariable(name: "pin", scope: !12057, file: !1830, line: 196, type: !108)
!12072 = !DILocalVariable(name: "mux", scope: !12057, file: !1830, line: 196, type: !108)
!12073 = !DILocalVariable(name: "pin_cgf", scope: !12057, file: !1830, line: 197, type: !108)
!12074 = !DILocalVariable(name: "ret", scope: !12057, file: !1830, line: 198, type: !103)
!12075 = !DILocalVariable(name: "i", scope: !12076, file: !1830, line: 209, type: !185)
!12076 = distinct !DILexicalBlock(scope: !12057, file: !1830, line: 209, column: 2)
!12077 = !DILocalVariable(name: "gpio_out", scope: !12078, file: !1830, line: 239, type: !108)
!12078 = distinct !DILexicalBlock(scope: !12079, file: !1830, line: 238, column: 55)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !1830, line: 238, column: 14)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !1830, line: 236, column: 14)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !1830, line: 234, column: 7)
!12082 = distinct !DILexicalBlock(scope: !12083, file: !1830, line: 209, column: 41)
!12083 = distinct !DILexicalBlock(scope: !12076, file: !1830, line: 209, column: 2)
!12084 = !DILocation(line: 0, scope: !12057)
!12085 = !DILocation(line: 0, scope: !12076)
!12086 = !DILocation(line: 209, column: 25, scope: !12083)
!12087 = !DILocation(line: 209, column: 2, scope: !12076)
!12088 = distinct !{!12088, !12087, !12089}
!12089 = !DILocation(line: 259, column: 2, scope: !12076)
!12090 = !DILocation(line: 210, column: 17, scope: !12082)
!12091 = !DILocation(line: 234, column: 7, scope: !12081)
!12092 = !DILocation(line: 234, column: 33, scope: !12081)
!12093 = !DILocation(line: 234, column: 7, scope: !12082)
!12094 = !DILocation(line: 235, column: 22, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12081, file: !1830, line: 234, column: 49)
!12096 = !DILocation(line: 235, column: 29, scope: !12095)
!12097 = !DILocation(line: 236, column: 3, scope: !12095)
!12098 = !DILocation(line: 236, column: 14, scope: !12081)
!12099 = !DILocation(line: 239, column: 32, scope: !12078)
!12100 = !DILocation(line: 0, scope: !12078)
!12101 = !DILocation(line: 241, column: 8, scope: !12078)
!12102 = !DILocation(line: 246, column: 3, scope: !12078)
!12103 = !DILocation(line: 252, column: 9, scope: !12082)
!12104 = !DILocation(line: 255, column: 9, scope: !12082)
!12105 = !DILocation(line: 256, column: 11, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12082, file: !1830, line: 256, column: 7)
!12107 = !DILocation(line: 209, column: 37, scope: !12083)
!12108 = !DILocation(line: 256, column: 7, scope: !12082)
!12109 = !DILocation(line: 262, column: 1, scope: !12057)
!12110 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1830, file: !1830, line: 176, type: !12111, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !12113)
!12111 = !DISubroutineType(types: !12112)
!12112 = !{!103, !108, !108, !108}
!12113 = !{!12114, !12115, !12116, !12117}
!12114 = !DILocalVariable(name: "pin", arg: 1, scope: !12110, file: !1830, line: 176, type: !108)
!12115 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12110, file: !1830, line: 176, type: !108)
!12116 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12110, file: !1830, line: 176, type: !108)
!12117 = !DILocalVariable(name: "port_device", scope: !12110, file: !1830, line: 178, type: !1760)
!12118 = !DILocation(line: 0, scope: !12110)
!12119 = !DILocation(line: 180, column: 22, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12110, file: !1830, line: 180, column: 6)
!12121 = !DILocation(line: 180, column: 6, scope: !12110)
!12122 = !DILocation(line: 180, column: 6, scope: !12120)
!12123 = !DILocation(line: 184, column: 16, scope: !12110)
!12124 = !DILocation(line: 186, column: 19, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12110, file: !1830, line: 186, column: 6)
!12126 = !DILocation(line: 186, column: 28, scope: !12125)
!12127 = !DILocation(line: 186, column: 33, scope: !12125)
!12128 = !DILocation(line: 186, column: 6, scope: !12110)
!12129 = !DILocation(line: 190, column: 43, scope: !12110)
!12130 = !DILocation(line: 190, column: 9, scope: !12110)
!12131 = !DILocation(line: 190, column: 2, scope: !12110)
!12132 = !DILocation(line: 191, column: 1, scope: !12110)
!12133 = distinct !DISubprogram(name: "device_is_ready", scope: !10089, file: !10089, line: 47, type: !12134, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !12136)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{!131, !1760}
!12136 = !{!12137}
!12137 = !DILocalVariable(name: "dev", arg: 1, scope: !12133, file: !10089, line: 47, type: !1760)
!12138 = !DILocation(line: 0, scope: !12133)
!12139 = !DILocation(line: 55, column: 2, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12133, file: !10089, line: 55, column: 2)
!12141 = !{i64 2149156474}
!12142 = !DILocation(line: 56, column: 9, scope: !12133)
!12143 = !DILocation(line: 56, column: 2, scope: !12133)
!12144 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !12134, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !12145)
!12145 = !{!12146}
!12146 = !DILocalVariable(name: "dev", arg: 1, scope: !12144, file: !429, line: 730, type: !1760)
!12147 = !DILocation(line: 0, scope: !12144)
!12148 = !DILocation(line: 732, column: 9, scope: !12144)
!12149 = !DILocation(line: 732, column: 2, scope: !12144)
!12150 = distinct !DISubprogram(name: "SystemInit", scope: !1880, file: !1880, line: 167, type: !334, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !251)
!12151 = !DILocation(line: 182, column: 1, scope: !12150)
!12152 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1880, file: !1880, line: 220, type: !334, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12153)
!12153 = !{!12154, !12155, !12156, !12157, !12158}
!12154 = !DILocalVariable(name: "tmp", scope: !12152, file: !1880, line: 222, type: !108)
!12155 = !DILocalVariable(name: "pllvco", scope: !12152, file: !1880, line: 222, type: !108)
!12156 = !DILocalVariable(name: "pllp", scope: !12152, file: !1880, line: 222, type: !108)
!12157 = !DILocalVariable(name: "pllsource", scope: !12152, file: !1880, line: 222, type: !108)
!12158 = !DILocalVariable(name: "pllm", scope: !12152, file: !1880, line: 222, type: !108)
!12159 = !DILocation(line: 0, scope: !12152)
!12160 = !DILocation(line: 225, column: 14, scope: !12152)
!12161 = !DILocation(line: 225, column: 19, scope: !12152)
!12162 = !DILocation(line: 227, column: 3, scope: !12152)
!12163 = !DILocation(line: 234, column: 7, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12152, file: !1880, line: 228, column: 3)
!12165 = !DILocation(line: 240, column: 25, scope: !12164)
!12166 = !DILocation(line: 241, column: 19, scope: !12164)
!12167 = !DILocation(line: 241, column: 27, scope: !12164)
!12168 = !DILocation(line: 243, column: 21, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12164, file: !1880, line: 243, column: 11)
!12170 = !DILocation(line: 0, scope: !12169)
!12171 = !DILocation(line: 254, column: 22, scope: !12164)
!12172 = !DILocation(line: 254, column: 62, scope: !12164)
!12173 = !DILocation(line: 255, column: 31, scope: !12164)
!12174 = !DILocation(line: 256, column: 7, scope: !12164)
!12175 = !DILocation(line: 0, scope: !12164)
!12176 = !DILocation(line: 263, column: 30, scope: !12152)
!12177 = !DILocation(line: 263, column: 52, scope: !12152)
!12178 = !DILocation(line: 263, column: 9, scope: !12152)
!12179 = !DILocation(line: 265, column: 19, scope: !12152)
!12180 = !DILocation(line: 266, column: 1, scope: !12152)
!12181 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12182, file: !12182, line: 200, type: !12183, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !251)
!12182 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12183 = !DISubroutineType(types: !12184)
!12184 = !{!12185}
!12185 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3045, line: 44, baseType: !3044)
!12186 = !DILocation(line: 202, column: 3, scope: !12181)
!12187 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12182, file: !12182, line: 219, type: !12188, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12212)
!12188 = !DISubroutineType(types: !12189)
!12189 = !{!12185, !12190}
!12190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12191, size: 32)
!12191 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12192, line: 70, baseType: !12193)
!12192 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12192, line: 49, size: 384, elements: !12194)
!12194 = !{!12195, !12196, !12197, !12198, !12199, !12200, !12201}
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12193, file: !12192, line: 51, baseType: !108, size: 32)
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12193, file: !12192, line: 54, baseType: !108, size: 32, offset: 32)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12193, file: !12192, line: 57, baseType: !108, size: 32, offset: 64)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12193, file: !12192, line: 60, baseType: !108, size: 32, offset: 96)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12193, file: !12192, line: 63, baseType: !108, size: 32, offset: 128)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12193, file: !12192, line: 66, baseType: !108, size: 32, offset: 160)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12193, file: !12192, line: 69, baseType: !12202, size: 192, offset: 192)
!12202 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12203, line: 73, baseType: !12204)
!12203 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12203, line: 45, size: 192, elements: !12205)
!12205 = !{!12206, !12207, !12208, !12209, !12210, !12211}
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12204, file: !12203, line: 47, baseType: !108, size: 32)
!12207 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12204, file: !12203, line: 50, baseType: !108, size: 32, offset: 32)
!12208 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12204, file: !12203, line: 53, baseType: !108, size: 32, offset: 64)
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12204, file: !12203, line: 56, baseType: !108, size: 32, offset: 96)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12204, file: !12203, line: 60, baseType: !108, size: 32, offset: 128)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12204, file: !12203, line: 63, baseType: !108, size: 32, offset: 160)
!12212 = !{!12213, !12214, !12215, !12216, !12220}
!12213 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12187, file: !12182, line: 219, type: !12190)
!12214 = !DILocalVariable(name: "tickstart", scope: !12187, file: !12182, line: 221, type: !108)
!12215 = !DILocalVariable(name: "pll_config", scope: !12187, file: !12182, line: 221, type: !108)
!12216 = !DILocalVariable(name: "pwrclkchanged", scope: !12217, file: !12182, line: 391, type: !12219)
!12217 = distinct !DILexicalBlock(scope: !12218, file: !12182, line: 390, column: 3)
!12218 = distinct !DILexicalBlock(scope: !12187, file: !12182, line: 389, column: 6)
!12219 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !910, line: 188, baseType: !3051)
!12220 = !DILocalVariable(name: "tmpreg", scope: !12221, file: !12182, line: 400, type: !409)
!12221 = distinct !DILexicalBlock(scope: !12222, file: !12182, line: 400, column: 7)
!12222 = distinct !DILexicalBlock(scope: !12223, file: !12182, line: 399, column: 5)
!12223 = distinct !DILexicalBlock(scope: !12217, file: !12182, line: 398, column: 8)
!12224 = !DILocation(line: 0, scope: !12187)
!12225 = !DILocation(line: 224, column: 24, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12187, file: !12182, line: 224, column: 6)
!12227 = !DILocation(line: 224, column: 6, scope: !12187)
!12228 = !DILocation(line: 232, column: 27, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12187, file: !12182, line: 232, column: 6)
!12230 = !DILocation(line: 232, column: 43, scope: !12229)
!12231 = !DILocation(line: 232, column: 69, scope: !12229)
!12232 = !DILocation(line: 232, column: 6, scope: !12187)
!12233 = !DILocation(line: 237, column: 9, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12235, file: !12182, line: 237, column: 8)
!12235 = distinct !DILexicalBlock(scope: !12229, file: !12182, line: 233, column: 3)
!12236 = !DILocation(line: 237, column: 39, scope: !12234)
!12237 = !DILocation(line: 237, column: 60, scope: !12234)
!12238 = !DILocation(line: 238, column: 9, scope: !12234)
!12239 = !DILocation(line: 238, column: 39, scope: !12234)
!12240 = !DILocation(line: 238, column: 60, scope: !12234)
!12241 = !DILocation(line: 238, column: 70, scope: !12234)
!12242 = !DILocation(line: 238, column: 78, scope: !12234)
!12243 = !DILocation(line: 238, column: 100, scope: !12234)
!12244 = !DILocation(line: 237, column: 8, scope: !12235)
!12245 = !DILocation(line: 240, column: 11, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !12182, line: 240, column: 10)
!12247 = distinct !DILexicalBlock(scope: !12234, file: !12182, line: 239, column: 5)
!12248 = !DILocation(line: 240, column: 57, scope: !12246)
!12249 = !DILocation(line: 240, column: 80, scope: !12246)
!12250 = !DILocation(line: 240, column: 89, scope: !12246)
!12251 = !DILocation(line: 240, column: 10, scope: !12247)
!12252 = !DILocation(line: 248, column: 7, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12254, file: !12182, line: 248, column: 7)
!12254 = distinct !DILexicalBlock(scope: !12255, file: !12182, line: 248, column: 7)
!12255 = distinct !DILexicalBlock(scope: !12234, file: !12182, line: 246, column: 5)
!12256 = !DILocation(line: 248, column: 7, scope: !12254)
!12257 = !DILocation(line: 248, column: 7, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12253, file: !12182, line: 248, column: 7)
!12259 = !DILocation(line: 248, column: 7, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12261, file: !12182, line: 248, column: 7)
!12261 = distinct !DILexicalBlock(scope: !12253, file: !12182, line: 248, column: 7)
!12262 = !DILocation(line: 248, column: 7, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12261, file: !12182, line: 248, column: 7)
!12264 = !DILocation(line: 0, scope: !12253)
!12265 = !DILocation(line: 251, column: 30, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12255, file: !12182, line: 251, column: 10)
!12267 = !DILocation(line: 251, column: 40, scope: !12266)
!12268 = !DILocation(line: 0, scope: !12266)
!12269 = !DILocation(line: 251, column: 10, scope: !12255)
!12270 = !DILocation(line: 257, column: 15, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12266, file: !12182, line: 252, column: 7)
!12272 = !DILocation(line: 257, column: 51, scope: !12271)
!12273 = !DILocation(line: 257, column: 9, scope: !12271)
!12274 = !DILocation(line: 259, column: 15, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !12182, line: 259, column: 14)
!12276 = distinct !DILexicalBlock(scope: !12271, file: !12182, line: 258, column: 9)
!12277 = !DILocation(line: 259, column: 29, scope: !12275)
!12278 = !DILocation(line: 259, column: 43, scope: !12275)
!12279 = !DILocation(line: 259, column: 14, scope: !12276)
!12280 = distinct !{!12280, !12273, !12281}
!12281 = !DILocation(line: 263, column: 9, scope: !12271)
!12282 = !DILocation(line: 271, column: 15, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12266, file: !12182, line: 266, column: 7)
!12284 = !DILocation(line: 271, column: 9, scope: !12283)
!12285 = !DILocation(line: 273, column: 15, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12287, file: !12182, line: 273, column: 14)
!12287 = distinct !DILexicalBlock(scope: !12283, file: !12182, line: 272, column: 9)
!12288 = !DILocation(line: 273, column: 29, scope: !12286)
!12289 = !DILocation(line: 273, column: 43, scope: !12286)
!12290 = !DILocation(line: 273, column: 14, scope: !12287)
!12291 = distinct !{!12291, !12284, !12292}
!12292 = !DILocation(line: 277, column: 9, scope: !12283)
!12293 = !DILocation(line: 282, column: 27, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12187, file: !12182, line: 282, column: 6)
!12295 = !DILocation(line: 282, column: 43, scope: !12294)
!12296 = !DILocation(line: 282, column: 69, scope: !12294)
!12297 = !DILocation(line: 282, column: 6, scope: !12187)
!12298 = !DILocation(line: 289, column: 9, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !12182, line: 289, column: 8)
!12300 = distinct !DILexicalBlock(scope: !12294, file: !12182, line: 283, column: 3)
!12301 = !DILocation(line: 289, column: 39, scope: !12299)
!12302 = !DILocation(line: 289, column: 60, scope: !12299)
!12303 = !DILocation(line: 290, column: 9, scope: !12299)
!12304 = !DILocation(line: 290, column: 39, scope: !12299)
!12305 = !DILocation(line: 290, column: 60, scope: !12299)
!12306 = !DILocation(line: 290, column: 70, scope: !12299)
!12307 = !DILocation(line: 290, column: 78, scope: !12299)
!12308 = !DILocation(line: 290, column: 100, scope: !12299)
!12309 = !DILocation(line: 289, column: 8, scope: !12300)
!12310 = !DILocation(line: 293, column: 11, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !12182, line: 293, column: 10)
!12312 = distinct !DILexicalBlock(scope: !12299, file: !12182, line: 291, column: 5)
!12313 = !DILocation(line: 293, column: 57, scope: !12311)
!12314 = !DILocation(line: 293, column: 80, scope: !12311)
!12315 = !DILocation(line: 293, column: 89, scope: !12311)
!12316 = !DILocation(line: 293, column: 10, scope: !12312)
!12317 = !DILocation(line: 307, column: 30, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12319, file: !12182, line: 307, column: 10)
!12319 = distinct !DILexicalBlock(scope: !12299, file: !12182, line: 305, column: 5)
!12320 = !DILocation(line: 307, column: 39, scope: !12318)
!12321 = !DILocation(line: 307, column: 10, scope: !12319)
!12322 = !DILocation(line: 310, column: 9, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12318, file: !12182, line: 308, column: 7)
!12324 = !DILocation(line: 313, column: 21, scope: !12323)
!12325 = !DILocation(line: 316, column: 9, scope: !12323)
!12326 = !DILocation(line: 316, column: 15, scope: !12323)
!12327 = !DILocation(line: 316, column: 51, scope: !12323)
!12328 = !DILocation(line: 318, column: 15, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !12182, line: 318, column: 14)
!12330 = distinct !DILexicalBlock(scope: !12323, file: !12182, line: 317, column: 9)
!12331 = !DILocation(line: 318, column: 29, scope: !12329)
!12332 = !DILocation(line: 318, column: 43, scope: !12329)
!12333 = !DILocation(line: 318, column: 14, scope: !12330)
!12334 = distinct !{!12334, !12325, !12335}
!12335 = !DILocation(line: 322, column: 9, scope: !12323)
!12336 = !DILocation(line: 330, column: 9, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12318, file: !12182, line: 328, column: 7)
!12338 = !DILocation(line: 333, column: 21, scope: !12337)
!12339 = !DILocation(line: 336, column: 9, scope: !12337)
!12340 = !DILocation(line: 336, column: 15, scope: !12337)
!12341 = !DILocation(line: 338, column: 15, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12343, file: !12182, line: 338, column: 14)
!12343 = distinct !DILexicalBlock(scope: !12337, file: !12182, line: 337, column: 9)
!12344 = !DILocation(line: 338, column: 29, scope: !12342)
!12345 = !DILocation(line: 338, column: 43, scope: !12342)
!12346 = !DILocation(line: 338, column: 14, scope: !12343)
!12347 = distinct !{!12347, !12339, !12348}
!12348 = !DILocation(line: 342, column: 9, scope: !12337)
!12349 = !DILocation(line: 0, scope: !12299)
!12350 = !DILocation(line: 347, column: 27, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12187, file: !12182, line: 347, column: 6)
!12352 = !DILocation(line: 347, column: 43, scope: !12351)
!12353 = !DILocation(line: 347, column: 69, scope: !12351)
!12354 = !DILocation(line: 347, column: 6, scope: !12187)
!12355 = !DILocation(line: 353, column: 28, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12357, file: !12182, line: 353, column: 8)
!12357 = distinct !DILexicalBlock(scope: !12351, file: !12182, line: 348, column: 3)
!12358 = !DILocation(line: 353, column: 37, scope: !12356)
!12359 = !DILocation(line: 353, column: 8, scope: !12357)
!12360 = !DILocation(line: 356, column: 7, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12356, file: !12182, line: 354, column: 5)
!12362 = !DILocation(line: 359, column: 19, scope: !12361)
!12363 = !DILocation(line: 362, column: 7, scope: !12361)
!12364 = !DILocation(line: 362, column: 13, scope: !12361)
!12365 = !DILocation(line: 362, column: 49, scope: !12361)
!12366 = !DILocation(line: 364, column: 13, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12368, file: !12182, line: 364, column: 12)
!12368 = distinct !DILexicalBlock(scope: !12361, file: !12182, line: 363, column: 7)
!12369 = !DILocation(line: 364, column: 27, scope: !12367)
!12370 = !DILocation(line: 364, column: 41, scope: !12367)
!12371 = !DILocation(line: 364, column: 12, scope: !12368)
!12372 = distinct !{!12372, !12363, !12373}
!12373 = !DILocation(line: 368, column: 7, scope: !12361)
!12374 = !DILocation(line: 373, column: 7, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12356, file: !12182, line: 371, column: 5)
!12376 = !DILocation(line: 376, column: 19, scope: !12375)
!12377 = !DILocation(line: 379, column: 7, scope: !12375)
!12378 = !DILocation(line: 379, column: 13, scope: !12375)
!12379 = !DILocation(line: 381, column: 13, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12381, file: !12182, line: 381, column: 12)
!12381 = distinct !DILexicalBlock(scope: !12375, file: !12182, line: 380, column: 7)
!12382 = !DILocation(line: 381, column: 27, scope: !12380)
!12383 = !DILocation(line: 381, column: 41, scope: !12380)
!12384 = !DILocation(line: 381, column: 12, scope: !12381)
!12385 = distinct !{!12385, !12377, !12386}
!12386 = !DILocation(line: 385, column: 7, scope: !12375)
!12387 = !DILocation(line: 389, column: 27, scope: !12218)
!12388 = !DILocation(line: 389, column: 43, scope: !12218)
!12389 = !DILocation(line: 389, column: 69, scope: !12218)
!12390 = !DILocation(line: 389, column: 6, scope: !12187)
!12391 = !DILocation(line: 0, scope: !12217)
!12392 = !DILocation(line: 398, column: 8, scope: !12223)
!12393 = !DILocation(line: 398, column: 8, scope: !12217)
!12394 = !DILocation(line: 400, column: 7, scope: !12221)
!12395 = !DILocation(line: 400, column: 7, scope: !12222)
!12396 = !DILocation(line: 402, column: 5, scope: !12222)
!12397 = !DILocation(line: 404, column: 8, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12217, file: !12182, line: 404, column: 8)
!12399 = !DILocation(line: 404, column: 8, scope: !12217)
!12400 = !DILocation(line: 407, column: 7, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12398, file: !12182, line: 405, column: 5)
!12402 = !DILocation(line: 410, column: 19, scope: !12401)
!12403 = !DILocation(line: 412, column: 7, scope: !12401)
!12404 = !DILocation(line: 412, column: 13, scope: !12401)
!12405 = !DILocation(line: 414, column: 13, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !12182, line: 414, column: 12)
!12407 = distinct !DILexicalBlock(scope: !12401, file: !12182, line: 413, column: 7)
!12408 = !DILocation(line: 414, column: 27, scope: !12406)
!12409 = !DILocation(line: 414, column: 40, scope: !12406)
!12410 = !DILocation(line: 414, column: 12, scope: !12407)
!12411 = distinct !{!12411, !12403, !12412}
!12412 = !DILocation(line: 418, column: 7, scope: !12401)
!12413 = !DILocation(line: 422, column: 5, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !12182, line: 422, column: 5)
!12415 = distinct !DILexicalBlock(scope: !12217, file: !12182, line: 422, column: 5)
!12416 = !DILocation(line: 422, column: 5, scope: !12415)
!12417 = !DILocation(line: 422, column: 5, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12414, file: !12182, line: 422, column: 5)
!12419 = !DILocation(line: 422, column: 5, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12421, file: !12182, line: 422, column: 5)
!12421 = distinct !DILexicalBlock(scope: !12414, file: !12182, line: 422, column: 5)
!12422 = !DILocation(line: 422, column: 5, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12421, file: !12182, line: 422, column: 5)
!12424 = !DILocation(line: 0, scope: !12414)
!12425 = !DILocation(line: 424, column: 28, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12217, file: !12182, line: 424, column: 8)
!12427 = !DILocation(line: 424, column: 38, scope: !12426)
!12428 = !DILocation(line: 0, scope: !12426)
!12429 = !DILocation(line: 424, column: 8, scope: !12217)
!12430 = !DILocation(line: 430, column: 13, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12426, file: !12182, line: 425, column: 5)
!12432 = !DILocation(line: 430, column: 49, scope: !12431)
!12433 = !DILocation(line: 430, column: 7, scope: !12431)
!12434 = !DILocation(line: 432, column: 13, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !12182, line: 432, column: 12)
!12436 = distinct !DILexicalBlock(scope: !12431, file: !12182, line: 431, column: 7)
!12437 = !DILocation(line: 432, column: 27, scope: !12435)
!12438 = !DILocation(line: 432, column: 41, scope: !12435)
!12439 = !DILocation(line: 432, column: 12, scope: !12436)
!12440 = distinct !{!12440, !12433, !12441}
!12441 = !DILocation(line: 436, column: 7, scope: !12431)
!12442 = !DILocation(line: 444, column: 13, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12426, file: !12182, line: 439, column: 5)
!12444 = !DILocation(line: 444, column: 7, scope: !12443)
!12445 = !DILocation(line: 446, column: 13, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12447, file: !12182, line: 446, column: 12)
!12447 = distinct !DILexicalBlock(scope: !12443, file: !12182, line: 445, column: 7)
!12448 = !DILocation(line: 446, column: 27, scope: !12446)
!12449 = !DILocation(line: 446, column: 41, scope: !12446)
!12450 = !DILocation(line: 446, column: 12, scope: !12447)
!12451 = distinct !{!12451, !12444, !12452}
!12452 = !DILocation(line: 450, column: 7, scope: !12443)
!12453 = !DILocation(line: 454, column: 8, scope: !12217)
!12454 = !DILocation(line: 456, column: 7, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12456, file: !12182, line: 455, column: 5)
!12456 = distinct !DILexicalBlock(scope: !12217, file: !12182, line: 454, column: 8)
!12457 = !DILocation(line: 457, column: 5, scope: !12455)
!12458 = !DILocation(line: 462, column: 31, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12187, file: !12182, line: 462, column: 7)
!12460 = !DILocation(line: 462, column: 41, scope: !12459)
!12461 = !DILocation(line: 462, column: 7, scope: !12187)
!12462 = !DILocation(line: 465, column: 8, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12464, file: !12182, line: 465, column: 8)
!12464 = distinct !DILexicalBlock(scope: !12459, file: !12182, line: 463, column: 3)
!12465 = !DILocation(line: 465, column: 38, scope: !12463)
!12466 = !DILocation(line: 465, column: 8, scope: !12464)
!12467 = !DILocation(line: 467, column: 44, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12469, file: !12182, line: 467, column: 10)
!12469 = distinct !DILexicalBlock(scope: !12463, file: !12182, line: 466, column: 5)
!12470 = !DILocation(line: 0, scope: !12468)
!12471 = !DILocation(line: 467, column: 10, scope: !12469)
!12472 = !DILocation(line: 483, column: 15, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12468, file: !12182, line: 468, column: 7)
!12474 = !DILocation(line: 483, column: 9, scope: !12473)
!12475 = !DILocation(line: 485, column: 15, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12477, file: !12182, line: 485, column: 14)
!12477 = distinct !DILexicalBlock(scope: !12473, file: !12182, line: 484, column: 9)
!12478 = !DILocation(line: 485, column: 29, scope: !12476)
!12479 = !DILocation(line: 485, column: 43, scope: !12476)
!12480 = !DILocation(line: 485, column: 14, scope: !12477)
!12481 = distinct !{!12481, !12474, !12482}
!12482 = !DILocation(line: 489, column: 9, scope: !12473)
!12483 = !DILocation(line: 492, column: 9, scope: !12473)
!12484 = !DILocation(line: 498, column: 9, scope: !12473)
!12485 = !DILocation(line: 501, column: 21, scope: !12473)
!12486 = !DILocation(line: 504, column: 9, scope: !12473)
!12487 = !DILocation(line: 504, column: 15, scope: !12473)
!12488 = !DILocation(line: 504, column: 51, scope: !12473)
!12489 = !DILocation(line: 506, column: 15, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12491, file: !12182, line: 506, column: 14)
!12491 = distinct !DILexicalBlock(scope: !12473, file: !12182, line: 505, column: 9)
!12492 = !DILocation(line: 506, column: 29, scope: !12490)
!12493 = !DILocation(line: 506, column: 43, scope: !12490)
!12494 = !DILocation(line: 506, column: 14, scope: !12491)
!12495 = distinct !{!12495, !12486, !12496}
!12496 = !DILocation(line: 510, column: 9, scope: !12473)
!12497 = !DILocation(line: 521, column: 15, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12468, file: !12182, line: 513, column: 7)
!12499 = !DILocation(line: 521, column: 9, scope: !12498)
!12500 = !DILocation(line: 523, column: 15, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !12182, line: 523, column: 14)
!12502 = distinct !DILexicalBlock(scope: !12498, file: !12182, line: 522, column: 9)
!12503 = !DILocation(line: 523, column: 29, scope: !12501)
!12504 = !DILocation(line: 523, column: 43, scope: !12501)
!12505 = !DILocation(line: 523, column: 14, scope: !12502)
!12506 = distinct !{!12506, !12499, !12507}
!12507 = !DILocation(line: 527, column: 9, scope: !12498)
!12508 = !DILocation(line: 533, column: 44, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12510, file: !12182, line: 533, column: 10)
!12510 = distinct !DILexicalBlock(scope: !12463, file: !12182, line: 531, column: 5)
!12511 = !DILocation(line: 533, column: 10, scope: !12510)
!12512 = !DILocation(line: 540, column: 27, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12509, file: !12182, line: 538, column: 7)
!12514 = !DILocation(line: 551, column: 14, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12513, file: !12182, line: 550, column: 13)
!12516 = !DILocation(line: 551, column: 81, scope: !12515)
!12517 = !DILocation(line: 551, column: 55, scope: !12515)
!12518 = !DILocation(line: 551, column: 92, scope: !12515)
!12519 = !DILocation(line: 552, column: 14, scope: !12515)
!12520 = !DILocation(line: 552, column: 80, scope: !12515)
!12521 = !DILocation(line: 552, column: 53, scope: !12515)
!12522 = !DILocation(line: 552, column: 111, scope: !12515)
!12523 = !DILocation(line: 553, column: 14, scope: !12515)
!12524 = !DILocation(line: 553, column: 80, scope: !12515)
!12525 = !DILocation(line: 553, column: 86, scope: !12515)
!12526 = !DILocation(line: 553, column: 53, scope: !12515)
!12527 = !DILocation(line: 553, column: 111, scope: !12515)
!12528 = !DILocation(line: 554, column: 14, scope: !12515)
!12529 = !DILocation(line: 554, column: 82, scope: !12515)
!12530 = !DILocation(line: 554, column: 101, scope: !12515)
!12531 = !DILocation(line: 554, column: 53, scope: !12515)
!12532 = !DILocation(line: 554, column: 126, scope: !12515)
!12533 = !DILocation(line: 555, column: 14, scope: !12515)
!12534 = !DILocation(line: 555, column: 80, scope: !12515)
!12535 = !DILocation(line: 555, column: 85, scope: !12515)
!12536 = !DILocation(line: 555, column: 53, scope: !12515)
!12537 = !DILocation(line: 550, column: 13, scope: !12513)
!12538 = !DILocation(line: 563, column: 3, scope: !12187)
!12539 = !DILocation(line: 564, column: 1, scope: !12187)
!12540 = !DISubprogram(name: "HAL_GetTick", scope: !12541, file: !12541, line: 234, type: !3574, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12541 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12542 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12182, file: !12182, line: 591, type: !12543, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12554)
!12543 = !DISubroutineType(types: !12544)
!12544 = !{!12185, !12545, !108}
!12545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12546, size: 32)
!12546 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12192, line: 92, baseType: !12547)
!12547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12192, line: 75, size: 160, elements: !12548)
!12548 = !{!12549, !12550, !12551, !12552, !12553}
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12547, file: !12192, line: 77, baseType: !108, size: 32)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12547, file: !12192, line: 80, baseType: !108, size: 32, offset: 32)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12547, file: !12192, line: 83, baseType: !108, size: 32, offset: 64)
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12547, file: !12192, line: 86, baseType: !108, size: 32, offset: 96)
!12553 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12547, file: !12192, line: 89, baseType: !108, size: 32, offset: 128)
!12554 = !{!12555, !12556, !12557}
!12555 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12542, file: !12182, line: 591, type: !12545)
!12556 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12542, file: !12182, line: 591, type: !108)
!12557 = !DILocalVariable(name: "tickstart", scope: !12542, file: !12182, line: 593, type: !108)
!12558 = !DILocation(line: 0, scope: !12542)
!12559 = !DILocation(line: 596, column: 24, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12542, file: !12182, line: 596, column: 6)
!12561 = !DILocation(line: 596, column: 6, scope: !12542)
!12562 = !DILocation(line: 610, column: 17, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12542, file: !12182, line: 610, column: 6)
!12564 = !DILocation(line: 610, column: 15, scope: !12563)
!12565 = !DILocation(line: 610, column: 6, scope: !12542)
!12566 = !DILocation(line: 613, column: 5, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12563, file: !12182, line: 611, column: 3)
!12568 = !DILocation(line: 617, column: 8, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12567, file: !12182, line: 617, column: 8)
!12570 = !DILocation(line: 617, column: 34, scope: !12569)
!12571 = !DILocation(line: 617, column: 8, scope: !12567)
!12572 = !DILocation(line: 624, column: 27, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12542, file: !12182, line: 624, column: 6)
!12574 = !DILocation(line: 624, column: 38, scope: !12573)
!12575 = !DILocation(line: 624, column: 60, scope: !12573)
!12576 = !DILocation(line: 624, column: 6, scope: !12542)
!12577 = !DILocation(line: 628, column: 40, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12579, file: !12182, line: 628, column: 8)
!12579 = distinct !DILexicalBlock(scope: !12573, file: !12182, line: 625, column: 3)
!12580 = !DILocation(line: 628, column: 63, scope: !12578)
!12581 = !DILocation(line: 628, column: 8, scope: !12579)
!12582 = !DILocation(line: 630, column: 7, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12578, file: !12182, line: 629, column: 5)
!12584 = !DILocation(line: 633, column: 29, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12579, file: !12182, line: 633, column: 8)
!12586 = !DILocation(line: 631, column: 5, scope: !12583)
!12587 = !DILocation(line: 633, column: 40, scope: !12585)
!12588 = !DILocation(line: 633, column: 63, scope: !12585)
!12589 = !DILocation(line: 633, column: 8, scope: !12579)
!12590 = !DILocation(line: 635, column: 7, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12585, file: !12182, line: 634, column: 5)
!12592 = !DILocation(line: 636, column: 5, scope: !12591)
!12593 = !DILocation(line: 639, column: 5, scope: !12579)
!12594 = !DILocation(line: 643, column: 27, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12542, file: !12182, line: 643, column: 6)
!12596 = !DILocation(line: 640, column: 3, scope: !12579)
!12597 = !DILocation(line: 643, column: 38, scope: !12595)
!12598 = !DILocation(line: 643, column: 62, scope: !12595)
!12599 = !DILocation(line: 643, column: 6, scope: !12542)
!12600 = !DILocation(line: 648, column: 27, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12602, file: !12182, line: 648, column: 8)
!12602 = distinct !DILexicalBlock(scope: !12595, file: !12182, line: 644, column: 3)
!12603 = !DILocation(line: 648, column: 8, scope: !12602)
!12604 = !DILocation(line: 651, column: 10, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !12182, line: 651, column: 10)
!12606 = distinct !DILexicalBlock(scope: !12601, file: !12182, line: 649, column: 5)
!12607 = !DILocation(line: 651, column: 46, scope: !12605)
!12608 = !DILocation(line: 651, column: 10, scope: !12606)
!12609 = !DILocation(line: 661, column: 10, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12611, file: !12182, line: 661, column: 10)
!12611 = distinct !DILexicalBlock(scope: !12612, file: !12182, line: 659, column: 5)
!12612 = distinct !DILexicalBlock(scope: !12601, file: !12182, line: 657, column: 13)
!12613 = !DILocation(line: 661, column: 46, scope: !12610)
!12614 = !DILocation(line: 661, column: 10, scope: !12611)
!12615 = !DILocation(line: 670, column: 10, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12617, file: !12182, line: 670, column: 10)
!12617 = distinct !DILexicalBlock(scope: !12612, file: !12182, line: 668, column: 5)
!12618 = !DILocation(line: 670, column: 46, scope: !12616)
!12619 = !DILocation(line: 670, column: 10, scope: !12617)
!12620 = !DILocation(line: 676, column: 5, scope: !12602)
!12621 = !DILocation(line: 679, column: 17, scope: !12602)
!12622 = !DILocation(line: 681, column: 5, scope: !12602)
!12623 = !DILocation(line: 681, column: 12, scope: !12602)
!12624 = !DILocation(line: 681, column: 65, scope: !12602)
!12625 = !DILocation(line: 681, column: 78, scope: !12602)
!12626 = !DILocation(line: 681, column: 42, scope: !12602)
!12627 = !DILocation(line: 683, column: 12, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !12182, line: 683, column: 11)
!12629 = distinct !DILexicalBlock(scope: !12602, file: !12182, line: 682, column: 5)
!12630 = !DILocation(line: 683, column: 26, scope: !12628)
!12631 = !DILocation(line: 683, column: 39, scope: !12628)
!12632 = !DILocation(line: 683, column: 11, scope: !12629)
!12633 = distinct !{!12633, !12622, !12634}
!12634 = !DILocation(line: 687, column: 5, scope: !12602)
!12635 = !DILocation(line: 691, column: 17, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12542, file: !12182, line: 691, column: 6)
!12637 = !DILocation(line: 691, column: 15, scope: !12636)
!12638 = !DILocation(line: 691, column: 6, scope: !12542)
!12639 = !DILocation(line: 694, column: 5, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12636, file: !12182, line: 692, column: 3)
!12641 = !DILocation(line: 698, column: 8, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12640, file: !12182, line: 698, column: 8)
!12643 = !DILocation(line: 698, column: 34, scope: !12642)
!12644 = !DILocation(line: 698, column: 8, scope: !12640)
!12645 = !DILocation(line: 705, column: 27, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12542, file: !12182, line: 705, column: 6)
!12647 = !DILocation(line: 705, column: 38, scope: !12646)
!12648 = !DILocation(line: 705, column: 61, scope: !12646)
!12649 = !DILocation(line: 705, column: 6, scope: !12542)
!12650 = !DILocation(line: 708, column: 5, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12646, file: !12182, line: 706, column: 3)
!12652 = !DILocation(line: 712, column: 27, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12542, file: !12182, line: 712, column: 6)
!12654 = !DILocation(line: 709, column: 3, scope: !12651)
!12655 = !DILocation(line: 712, column: 38, scope: !12653)
!12656 = !DILocation(line: 712, column: 61, scope: !12653)
!12657 = !DILocation(line: 712, column: 6, scope: !12542)
!12658 = !DILocation(line: 715, column: 5, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12653, file: !12182, line: 713, column: 3)
!12660 = !DILocation(line: 716, column: 3, scope: !12659)
!12661 = !DILocation(line: 719, column: 21, scope: !12542)
!12662 = !DILocation(line: 719, column: 70, scope: !12542)
!12663 = !DILocation(line: 719, column: 91, scope: !12542)
!12664 = !DILocation(line: 719, column: 50, scope: !12542)
!12665 = !DILocation(line: 719, column: 47, scope: !12542)
!12666 = !DILocation(line: 719, column: 19, scope: !12542)
!12667 = !DILocation(line: 722, column: 17, scope: !12542)
!12668 = !DILocation(line: 722, column: 3, scope: !12542)
!12669 = !DILocation(line: 724, column: 3, scope: !12542)
!12670 = !DILocation(line: 725, column: 1, scope: !12542)
!12671 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12182, file: !12182, line: 885, type: !3574, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12672)
!12672 = !{!12673, !12674, !12675, !12676}
!12673 = !DILocalVariable(name: "pllm", scope: !12671, file: !12182, line: 887, type: !108)
!12674 = !DILocalVariable(name: "pllvco", scope: !12671, file: !12182, line: 887, type: !108)
!12675 = !DILocalVariable(name: "pllp", scope: !12671, file: !12182, line: 887, type: !108)
!12676 = !DILocalVariable(name: "sysclockfreq", scope: !12671, file: !12182, line: 888, type: !108)
!12677 = !DILocation(line: 0, scope: !12671)
!12678 = !DILocation(line: 891, column: 16, scope: !12671)
!12679 = !DILocation(line: 891, column: 21, scope: !12671)
!12680 = !DILocation(line: 891, column: 3, scope: !12671)
!12681 = !DILocation(line: 901, column: 7, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12182, line: 899, column: 5)
!12683 = distinct !DILexicalBlock(scope: !12671, file: !12182, line: 892, column: 3)
!12684 = !DILocation(line: 907, column: 19, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12683, file: !12182, line: 904, column: 5)
!12686 = !DILocation(line: 907, column: 27, scope: !12685)
!12687 = !DILocation(line: 908, column: 10, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12685, file: !12182, line: 908, column: 10)
!12689 = !DILocation(line: 908, column: 40, scope: !12688)
!12690 = !DILocation(line: 0, scope: !12688)
!12691 = !DILocation(line: 908, column: 10, scope: !12685)
!12692 = !DILocation(line: 911, column: 53, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12688, file: !12182, line: 909, column: 7)
!12694 = !DILocation(line: 911, column: 130, scope: !12693)
!12695 = !DILocation(line: 912, column: 7, scope: !12693)
!12696 = !DILocation(line: 916, column: 56, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12688, file: !12182, line: 914, column: 7)
!12698 = !DILocation(line: 916, column: 53, scope: !12697)
!12699 = !DILocation(line: 916, column: 132, scope: !12697)
!12700 = !DILocation(line: 916, column: 130, scope: !12697)
!12701 = !DILocation(line: 916, column: 18, scope: !12697)
!12702 = !DILocation(line: 918, column: 23, scope: !12685)
!12703 = !DILocation(line: 918, column: 82, scope: !12685)
!12704 = !DILocation(line: 920, column: 28, scope: !12685)
!12705 = !DILocation(line: 921, column: 7, scope: !12685)
!12706 = !DILocation(line: 0, scope: !12683)
!12707 = !DILocation(line: 929, column: 3, scope: !12671)
!12708 = !DISubprogram(name: "HAL_InitTick", scope: !12541, file: !12541, line: 223, type: !12709, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12709 = !DISubroutineType(types: !12710)
!12710 = !{!12185, !108}
!12711 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12182, file: !12182, line: 775, type: !12712, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12714)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{null, !108, !108, !108}
!12714 = !{!12715, !12716, !12717, !12718, !12728, !12732}
!12715 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12711, file: !12182, line: 775, type: !108)
!12716 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12711, file: !12182, line: 775, type: !108)
!12717 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12711, file: !12182, line: 775, type: !108)
!12718 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12711, file: !12182, line: 777, type: !12719)
!12719 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12720, line: 62, baseType: !12721)
!12720 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12720, line: 46, size: 160, elements: !12722)
!12722 = !{!12723, !12724, !12725, !12726, !12727}
!12723 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12721, file: !12720, line: 48, baseType: !108, size: 32)
!12724 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12721, file: !12720, line: 51, baseType: !108, size: 32, offset: 32)
!12725 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12721, file: !12720, line: 54, baseType: !108, size: 32, offset: 64)
!12726 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12721, file: !12720, line: 57, baseType: !108, size: 32, offset: 96)
!12727 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12721, file: !12720, line: 60, baseType: !108, size: 32, offset: 128)
!12728 = !DILocalVariable(name: "tmpreg", scope: !12729, file: !12182, line: 787, type: !409)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !12182, line: 787, column: 5)
!12730 = distinct !DILexicalBlock(scope: !12731, file: !12182, line: 783, column: 3)
!12731 = distinct !DILexicalBlock(scope: !12711, file: !12182, line: 782, column: 6)
!12732 = !DILocalVariable(name: "tmpreg", scope: !12733, file: !12182, line: 811, type: !409)
!12733 = distinct !DILexicalBlock(scope: !12734, file: !12182, line: 811, column: 5)
!12734 = distinct !DILexicalBlock(scope: !12731, file: !12182, line: 807, column: 3)
!12735 = !DILocation(line: 0, scope: !12711)
!12736 = !DILocation(line: 777, column: 3, scope: !12711)
!12737 = !DILocation(line: 777, column: 20, scope: !12711)
!12738 = !DILocation(line: 782, column: 15, scope: !12731)
!12739 = !DILocation(line: 782, column: 6, scope: !12711)
!12740 = !DILocation(line: 787, column: 5, scope: !12729)
!12741 = !DILocation(line: 787, column: 5, scope: !12730)
!12742 = !DILocation(line: 790, column: 21, scope: !12730)
!12743 = !DILocation(line: 790, column: 25, scope: !12730)
!12744 = !DILocation(line: 791, column: 21, scope: !12730)
!12745 = !DILocation(line: 791, column: 26, scope: !12730)
!12746 = !DILocation(line: 792, column: 21, scope: !12730)
!12747 = !DILocation(line: 792, column: 27, scope: !12730)
!12748 = !DILocation(line: 793, column: 21, scope: !12730)
!12749 = !DILocation(line: 793, column: 26, scope: !12730)
!12750 = !DILocation(line: 794, column: 21, scope: !12730)
!12751 = !DILocation(line: 794, column: 31, scope: !12730)
!12752 = !DILocation(line: 795, column: 5, scope: !12730)
!12753 = !DILocation(line: 798, column: 5, scope: !12730)
!12754 = !DILocation(line: 804, column: 3, scope: !12730)
!12755 = !DILocation(line: 811, column: 5, scope: !12733)
!12756 = !DILocation(line: 811, column: 5, scope: !12734)
!12757 = !DILocation(line: 814, column: 21, scope: !12734)
!12758 = !DILocation(line: 814, column: 25, scope: !12734)
!12759 = !DILocation(line: 815, column: 21, scope: !12734)
!12760 = !DILocation(line: 815, column: 26, scope: !12734)
!12761 = !DILocation(line: 816, column: 21, scope: !12734)
!12762 = !DILocation(line: 816, column: 27, scope: !12734)
!12763 = !DILocation(line: 817, column: 21, scope: !12734)
!12764 = !DILocation(line: 817, column: 26, scope: !12734)
!12765 = !DILocation(line: 818, column: 21, scope: !12734)
!12766 = !DILocation(line: 818, column: 31, scope: !12734)
!12767 = !DILocation(line: 819, column: 5, scope: !12734)
!12768 = !DILocation(line: 822, column: 5, scope: !12734)
!12769 = !DILocation(line: 0, scope: !12731)
!12770 = !DILocation(line: 830, column: 1, scope: !12711)
!12771 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12720, file: !12720, line: 224, type: !12772, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12772 = !DISubroutineType(types: !12773)
!12773 = !{null, !3114, !12774}
!12774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12719, size: 32)
!12775 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12182, file: !12182, line: 841, type: !334, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !251)
!12776 = !DILocation(line: 843, column: 38, scope: !12775)
!12777 = !DILocation(line: 844, column: 1, scope: !12775)
!12778 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12182, file: !12182, line: 850, type: !334, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !251)
!12779 = !DILocation(line: 852, column: 38, scope: !12778)
!12780 = !DILocation(line: 853, column: 1, scope: !12778)
!12781 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12182, file: !12182, line: 941, type: !3574, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !251)
!12782 = !DILocation(line: 943, column: 10, scope: !12781)
!12783 = !DILocation(line: 943, column: 3, scope: !12781)
!12784 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12182, file: !12182, line: 952, type: !3574, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !251)
!12785 = !DILocation(line: 955, column: 11, scope: !12784)
!12786 = !DILocation(line: 955, column: 56, scope: !12784)
!12787 = !DILocation(line: 955, column: 78, scope: !12784)
!12788 = !DILocation(line: 955, column: 36, scope: !12784)
!12789 = !DILocation(line: 955, column: 33, scope: !12784)
!12790 = !DILocation(line: 955, column: 3, scope: !12784)
!12791 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12182, file: !12182, line: 964, type: !3574, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !251)
!12792 = !DILocation(line: 967, column: 11, scope: !12791)
!12793 = !DILocation(line: 967, column: 55, scope: !12791)
!12794 = !DILocation(line: 967, column: 77, scope: !12791)
!12795 = !DILocation(line: 967, column: 35, scope: !12791)
!12796 = !DILocation(line: 967, column: 32, scope: !12791)
!12797 = !DILocation(line: 967, column: 3, scope: !12791)
!12798 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12182, file: !12182, line: 977, type: !12799, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12801)
!12799 = !DISubroutineType(types: !12800)
!12800 = !{null, !12190}
!12801 = !{!12802}
!12802 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12798, file: !12182, line: 977, type: !12190)
!12803 = !DILocation(line: 0, scope: !12798)
!12804 = !DILocation(line: 980, column: 22, scope: !12798)
!12805 = !DILocation(line: 980, column: 37, scope: !12798)
!12806 = !DILocation(line: 983, column: 12, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12798, file: !12182, line: 983, column: 6)
!12808 = !DILocation(line: 983, column: 15, scope: !12807)
!12809 = !DILocation(line: 983, column: 31, scope: !12807)
!12810 = !DILocation(line: 983, column: 6, scope: !12798)
!12811 = !DILocation(line: 985, column: 24, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12807, file: !12182, line: 984, column: 3)
!12813 = !DILocation(line: 985, column: 33, scope: !12812)
!12814 = !DILocation(line: 986, column: 3, scope: !12812)
!12815 = !DILocation(line: 987, column: 17, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12807, file: !12182, line: 987, column: 11)
!12817 = !DILocation(line: 987, column: 20, scope: !12816)
!12818 = !DILocation(line: 987, column: 35, scope: !12816)
!12819 = !DILocation(line: 0, scope: !12816)
!12820 = !DILocation(line: 987, column: 11, scope: !12807)
!12821 = !DILocation(line: 989, column: 33, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12816, file: !12182, line: 988, column: 3)
!12823 = !DILocation(line: 990, column: 3, scope: !12822)
!12824 = !DILocation(line: 993, column: 33, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12816, file: !12182, line: 992, column: 3)
!12826 = !DILocation(line: 997, column: 12, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12798, file: !12182, line: 997, column: 6)
!12828 = !DILocation(line: 997, column: 15, scope: !12827)
!12829 = !DILocation(line: 1003, column: 24, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12827, file: !12182, line: 1002, column: 3)
!12831 = !DILocation(line: 1003, column: 33, scope: !12830)
!12832 = !DILocation(line: 1006, column: 61, scope: !12798)
!12833 = !DILocation(line: 1006, column: 81, scope: !12798)
!12834 = !DILocation(line: 1006, column: 22, scope: !12798)
!12835 = !DILocation(line: 1006, column: 42, scope: !12798)
!12836 = !DILocation(line: 1009, column: 12, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12798, file: !12182, line: 1009, column: 6)
!12838 = !DILocation(line: 1009, column: 17, scope: !12837)
!12839 = !DILocation(line: 1009, column: 35, scope: !12837)
!12840 = !DILocation(line: 1009, column: 6, scope: !12798)
!12841 = !DILocation(line: 1011, column: 24, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12837, file: !12182, line: 1010, column: 3)
!12843 = !DILocation(line: 1011, column: 33, scope: !12842)
!12844 = !DILocation(line: 1012, column: 3, scope: !12842)
!12845 = !DILocation(line: 1013, column: 17, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12837, file: !12182, line: 1013, column: 11)
!12847 = !DILocation(line: 1013, column: 22, scope: !12846)
!12848 = !DILocation(line: 1013, column: 39, scope: !12846)
!12849 = !DILocation(line: 0, scope: !12846)
!12850 = !DILocation(line: 1013, column: 11, scope: !12837)
!12851 = !DILocation(line: 1015, column: 33, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12846, file: !12182, line: 1014, column: 3)
!12853 = !DILocation(line: 1016, column: 3, scope: !12852)
!12854 = !DILocation(line: 1019, column: 33, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12846, file: !12182, line: 1018, column: 3)
!12856 = !DILocation(line: 1023, column: 12, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12798, file: !12182, line: 1023, column: 6)
!12858 = !DILocation(line: 1023, column: 16, scope: !12857)
!12859 = !DILocation(line: 1029, column: 24, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12857, file: !12182, line: 1028, column: 3)
!12861 = !DILocation(line: 1029, column: 33, scope: !12860)
!12862 = !DILocation(line: 1033, column: 12, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12798, file: !12182, line: 1033, column: 6)
!12864 = !DILocation(line: 1033, column: 15, scope: !12863)
!12865 = !DILocation(line: 1033, column: 30, scope: !12863)
!12866 = !DILocation(line: 1033, column: 6, scope: !12798)
!12867 = !DILocation(line: 1039, column: 28, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12863, file: !12182, line: 1038, column: 3)
!12869 = !DILocation(line: 1039, column: 37, scope: !12868)
!12870 = !DILocation(line: 1041, column: 54, scope: !12798)
!12871 = !DILocation(line: 1041, column: 62, scope: !12798)
!12872 = !DILocation(line: 1041, column: 26, scope: !12798)
!12873 = !DILocation(line: 1041, column: 36, scope: !12798)
!12874 = !DILocation(line: 1042, column: 49, scope: !12798)
!12875 = !DILocation(line: 1042, column: 57, scope: !12798)
!12876 = !DILocation(line: 1042, column: 26, scope: !12798)
!12877 = !DILocation(line: 1042, column: 31, scope: !12798)
!12878 = !DILocation(line: 1043, column: 50, scope: !12798)
!12879 = !DILocation(line: 1043, column: 78, scope: !12798)
!12880 = !DILocation(line: 1043, column: 26, scope: !12798)
!12881 = !DILocation(line: 1043, column: 31, scope: !12798)
!12882 = !DILocation(line: 1044, column: 52, scope: !12798)
!12883 = !DILocation(line: 1044, column: 102, scope: !12798)
!12884 = !DILocation(line: 1044, column: 109, scope: !12798)
!12885 = !DILocation(line: 1044, column: 26, scope: !12798)
!12886 = !DILocation(line: 1044, column: 31, scope: !12798)
!12887 = !DILocation(line: 1045, column: 50, scope: !12798)
!12888 = !DILocation(line: 1045, column: 78, scope: !12798)
!12889 = !DILocation(line: 1045, column: 26, scope: !12798)
!12890 = !DILocation(line: 1045, column: 31, scope: !12798)
!12891 = !DILocation(line: 1046, column: 1, scope: !12798)
!12892 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12182, file: !12182, line: 1056, type: !12893, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12895)
!12893 = !DISubroutineType(types: !12894)
!12894 = !{null, !12545, !966}
!12895 = !{!12896, !12897}
!12896 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12892, file: !12182, line: 1056, type: !12545)
!12897 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12892, file: !12182, line: 1056, type: !966)
!12898 = !DILocation(line: 0, scope: !12892)
!12899 = !DILocation(line: 1059, column: 22, scope: !12892)
!12900 = !DILocation(line: 1059, column: 32, scope: !12892)
!12901 = !DILocation(line: 1062, column: 53, scope: !12892)
!12902 = !DILocation(line: 1062, column: 58, scope: !12892)
!12903 = !DILocation(line: 1062, column: 22, scope: !12892)
!12904 = !DILocation(line: 1062, column: 35, scope: !12892)
!12905 = !DILocation(line: 1065, column: 54, scope: !12892)
!12906 = !DILocation(line: 1065, column: 59, scope: !12892)
!12907 = !DILocation(line: 1065, column: 22, scope: !12892)
!12908 = !DILocation(line: 1065, column: 36, scope: !12892)
!12909 = !DILocation(line: 1068, column: 55, scope: !12892)
!12910 = !DILocation(line: 1068, column: 60, scope: !12892)
!12911 = !DILocation(line: 1068, column: 22, scope: !12892)
!12912 = !DILocation(line: 1068, column: 37, scope: !12892)
!12913 = !DILocation(line: 1071, column: 56, scope: !12892)
!12914 = !DILocation(line: 1071, column: 79, scope: !12892)
!12915 = !DILocation(line: 1071, column: 22, scope: !12892)
!12916 = !DILocation(line: 1071, column: 37, scope: !12892)
!12917 = !DILocation(line: 1074, column: 34, scope: !12892)
!12918 = !DILocation(line: 1074, column: 38, scope: !12892)
!12919 = !DILocation(line: 1074, column: 14, scope: !12892)
!12920 = !DILocation(line: 1075, column: 1, scope: !12892)
!12921 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12182, file: !12182, line: 1082, type: !334, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !251)
!12922 = !DILocation(line: 1085, column: 6, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12921, file: !12182, line: 1085, column: 6)
!12924 = !DILocation(line: 1085, column: 6, scope: !12921)
!12925 = !DILocation(line: 1088, column: 5, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12923, file: !12182, line: 1086, column: 3)
!12927 = !DILocation(line: 1091, column: 5, scope: !12926)
!12928 = !DILocation(line: 1092, column: 3, scope: !12926)
!12929 = !DILocation(line: 1093, column: 1, scope: !12921)
!12930 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12182, file: !12182, line: 1099, type: !334, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !251)
!12931 = !DILocation(line: 1104, column: 1, scope: !12930)
!12932 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12933, file: !12933, line: 257, type: !7369, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12934)
!12933 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12934 = !{!12935}
!12935 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12932, file: !12933, line: 257, type: !108)
!12936 = !DILocation(line: 0, scope: !12932)
!12937 = !DILocation(line: 260, column: 3, scope: !12932)
!12938 = !DILocation(line: 261, column: 1, scope: !12932)
!12939 = distinct !DISubprogram(name: "LL_InitTick", scope: !12940, file: !12940, line: 260, type: !10577, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12941)
!12940 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12941 = !{!12942, !12943}
!12942 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12939, file: !12940, line: 260, type: !108)
!12943 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12939, file: !12940, line: 260, type: !108)
!12944 = !DILocation(line: 0, scope: !12939)
!12945 = !DILocation(line: 263, column: 46, scope: !12939)
!12946 = !DILocation(line: 263, column: 55, scope: !12939)
!12947 = !DILocation(line: 263, column: 18, scope: !12939)
!12948 = !DILocation(line: 264, column: 18, scope: !12939)
!12949 = !DILocation(line: 265, column: 18, scope: !12939)
!12950 = !DILocation(line: 267, column: 1, scope: !12939)
!12951 = distinct !DISubprogram(name: "LL_mDelay", scope: !12933, file: !12933, line: 273, type: !7369, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12952)
!12952 = !{!12953, !12954}
!12953 = !DILocalVariable(name: "Delay", arg: 1, scope: !12951, file: !12933, line: 273, type: !108)
!12954 = !DILocalVariable(name: "tmp", scope: !12951, file: !12933, line: 275, type: !409)
!12955 = !DILocation(line: 0, scope: !12951)
!12956 = !DILocation(line: 275, column: 3, scope: !12951)
!12957 = !DILocation(line: 275, column: 18, scope: !12951)
!12958 = !DILocation(line: 275, column: 33, scope: !12951)
!12959 = !DILocation(line: 277, column: 10, scope: !12951)
!12960 = !DILocation(line: 280, column: 12, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12951, file: !12933, line: 280, column: 6)
!12962 = !DILocation(line: 285, column: 3, scope: !12951)
!12963 = !DILocation(line: 287, column: 18, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !12933, line: 287, column: 8)
!12965 = distinct !DILexicalBlock(scope: !12951, file: !12933, line: 286, column: 3)
!12966 = !DILocation(line: 292, column: 1, scope: !12951)
!12967 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12933, file: !12933, line: 323, type: !7369, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12968)
!12968 = !{!12969}
!12969 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12967, file: !12933, line: 323, type: !108)
!12970 = !DILocation(line: 0, scope: !12967)
!12971 = !DILocation(line: 326, column: 19, scope: !12967)
!12972 = !DILocation(line: 327, column: 1, scope: !12967)
!12973 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12933, file: !12933, line: 338, type: !12974, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12977)
!12974 = !DISubroutineType(types: !12975)
!12975 = !{!12976, !108}
!12976 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !910, line: 201, baseType: !909)
!12977 = !{!12978, !12979, !12980, !12981, !12982}
!12978 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12973, file: !12933, line: 338, type: !108)
!12979 = !DILocalVariable(name: "timeout", scope: !12973, file: !12933, line: 340, type: !108)
!12980 = !DILocalVariable(name: "getlatency", scope: !12973, file: !12933, line: 341, type: !108)
!12981 = !DILocalVariable(name: "latency", scope: !12973, file: !12933, line: 342, type: !108)
!12982 = !DILocalVariable(name: "status", scope: !12973, file: !12933, line: 343, type: !12976)
!12983 = !DILocation(line: 0, scope: !12973)
!12984 = !DILocation(line: 347, column: 21, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12973, file: !12933, line: 347, column: 6)
!12986 = !DILocation(line: 347, column: 6, scope: !12973)
!12987 = !DILocation(line: 353, column: 8, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12989, file: !12933, line: 353, column: 8)
!12989 = distinct !DILexicalBlock(scope: !12985, file: !12933, line: 352, column: 3)
!12990 = !DILocation(line: 353, column: 40, scope: !12988)
!12991 = !DILocation(line: 353, column: 8, scope: !12989)
!12992 = !DILocation(line: 374, column: 55, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12994, file: !12933, line: 374, column: 10)
!12994 = distinct !DILexicalBlock(scope: !12988, file: !12933, line: 354, column: 5)
!12995 = !DILocation(line: 368, column: 26, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12994, file: !12933, line: 368, column: 10)
!12997 = !DILocation(line: 368, column: 55, scope: !12996)
!12998 = !DILocation(line: 380, column: 57, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !13000, file: !12933, line: 380, column: 12)
!13000 = distinct !DILexicalBlock(scope: !12993, file: !12933, line: 379, column: 7)
!13001 = !DILocation(line: 387, column: 8, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12989, file: !12933, line: 387, column: 8)
!13003 = !DILocation(line: 387, column: 40, scope: !13002)
!13004 = !DILocation(line: 387, column: 8, scope: !12989)
!13005 = !DILocation(line: 407, column: 26, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !13007, file: !12933, line: 407, column: 10)
!13007 = distinct !DILexicalBlock(scope: !13002, file: !12933, line: 388, column: 5)
!13008 = !DILocation(line: 407, column: 55, scope: !13006)
!13009 = !DILocation(line: 413, column: 28, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !13011, file: !12933, line: 413, column: 12)
!13011 = distinct !DILexicalBlock(scope: !13006, file: !12933, line: 412, column: 7)
!13012 = !DILocation(line: 413, column: 57, scope: !13010)
!13013 = !DILocation(line: 0, scope: !12989)
!13014 = !DILocation(line: 420, column: 8, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !12989, file: !12933, line: 420, column: 8)
!13016 = !DILocation(line: 420, column: 40, scope: !13015)
!13017 = !DILocation(line: 420, column: 8, scope: !12989)
!13018 = !DILocation(line: 429, column: 26, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13020, file: !12933, line: 429, column: 10)
!13020 = distinct !DILexicalBlock(scope: !13015, file: !12933, line: 421, column: 5)
!13021 = !DILocation(line: 429, column: 55, scope: !13019)
!13022 = !DILocation(line: 435, column: 28, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13024, file: !12933, line: 435, column: 12)
!13024 = distinct !DILexicalBlock(scope: !13019, file: !12933, line: 434, column: 7)
!13025 = !DILocation(line: 435, column: 57, scope: !13023)
!13026 = !DILocation(line: 444, column: 5, scope: !12989)
!13027 = !DILocation(line: 448, column: 5, scope: !12989)
!13028 = !DILocation(line: 451, column: 18, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !12989, file: !12933, line: 449, column: 5)
!13030 = !DILocation(line: 452, column: 12, scope: !13029)
!13031 = !DILocation(line: 453, column: 26, scope: !12989)
!13032 = !DILocation(line: 453, column: 38, scope: !12989)
!13033 = !DILocation(line: 453, column: 5, scope: !13029)
!13034 = distinct !{!13034, !13027, !13035}
!13035 = !DILocation(line: 453, column: 54, scope: !12989)
!13036 = !DILocation(line: 0, scope: !12985)
!13037 = !DILocation(line: 464, column: 3, scope: !12973)
!13038 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13039, file: !13039, line: 519, type: !3574, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13039 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13040 = !DILocation(line: 521, column: 21, scope: !13038)
!13041 = !DILocation(line: 521, column: 3, scope: !13038)
!13042 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6983, file: !6983, line: 1543, type: !7369, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13043)
!13043 = !{!13044}
!13044 = !DILocalVariable(name: "Latency", arg: 1, scope: !13042, file: !6983, line: 1543, type: !108)
!13045 = !DILocation(line: 0, scope: !13042)
!13046 = !DILocation(line: 1545, column: 3, scope: !13042)
!13047 = !DILocation(line: 1546, column: 1, scope: !13042)
!13048 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6983, file: !6983, line: 1569, type: !3574, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13049 = !DILocation(line: 1571, column: 21, scope: !13048)
!13050 = !DILocation(line: 1571, column: 3, scope: !13048)
!13051 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12933, file: !12933, line: 483, type: !13052, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13068)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!12976, !13054, !13061}
!13054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13055, size: 32)
!13055 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12940, line: 114, baseType: !13056)
!13056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12940, line: 94, size: 96, elements: !13057)
!13057 = !{!13058, !13059, !13060}
!13058 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13056, file: !12940, line: 96, baseType: !108, size: 32)
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13056, file: !12940, line: 102, baseType: !108, size: 32, offset: 32)
!13060 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13056, file: !12940, line: 109, baseType: !108, size: 32, offset: 64)
!13061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13062, size: 32)
!13062 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12940, line: 139, baseType: !13063)
!13063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12940, line: 119, size: 96, elements: !13064)
!13064 = !{!13065, !13066, !13067}
!13065 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13063, file: !12940, line: 121, baseType: !108, size: 32)
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13063, file: !12940, line: 127, baseType: !108, size: 32, offset: 32)
!13067 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13063, file: !12940, line: 133, baseType: !108, size: 32, offset: 64)
!13068 = !{!13069, !13070, !13071, !13072}
!13069 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13051, file: !12933, line: 483, type: !13054)
!13070 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13051, file: !12933, line: 484, type: !13061)
!13071 = !DILocalVariable(name: "status", scope: !13051, file: !12933, line: 486, type: !12976)
!13072 = !DILocalVariable(name: "pllfreq", scope: !13051, file: !12933, line: 487, type: !108)
!13073 = !DILocation(line: 0, scope: !13051)
!13074 = !DILocation(line: 490, column: 6, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13051, file: !12933, line: 490, column: 6)
!13076 = !DILocation(line: 490, column: 25, scope: !13075)
!13077 = !DILocation(line: 490, column: 6, scope: !13051)
!13078 = !DILocation(line: 493, column: 15, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13075, file: !12933, line: 491, column: 3)
!13080 = !DILocation(line: 496, column: 8, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13079, file: !12933, line: 496, column: 8)
!13082 = !DILocation(line: 496, column: 29, scope: !13081)
!13083 = !DILocation(line: 496, column: 8, scope: !13079)
!13084 = !DILocation(line: 498, column: 7, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13081, file: !12933, line: 497, column: 5)
!13086 = !DILocation(line: 499, column: 7, scope: !13085)
!13087 = !DILocation(line: 499, column: 14, scope: !13085)
!13088 = !DILocation(line: 499, column: 35, scope: !13085)
!13089 = distinct !{!13089, !13086, !13090}
!13090 = !DILocation(line: 502, column: 7, scope: !13085)
!13091 = !DILocation(line: 506, column: 76, scope: !13079)
!13092 = !DILocation(line: 506, column: 103, scope: !13079)
!13093 = !DILocation(line: 507, column: 54, scope: !13079)
!13094 = !DILocation(line: 506, column: 5, scope: !13079)
!13095 = !DILocation(line: 510, column: 14, scope: !13079)
!13096 = !DILocation(line: 511, column: 3, scope: !13079)
!13097 = !DILocation(line: 0, scope: !13075)
!13098 = !DILocation(line: 518, column: 3, scope: !13051)
!13099 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12933, file: !12933, line: 642, type: !13100, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13102)
!13100 = !DISubroutineType(types: !13101)
!13101 = !{!12976}
!13102 = !{!13103}
!13103 = !DILocalVariable(name: "status", scope: !13099, file: !12933, line: 644, type: !12976)
!13104 = !DILocation(line: 0, scope: !13099)
!13105 = !DILocation(line: 647, column: 6, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13099, file: !12933, line: 647, column: 6)
!13107 = !DILocation(line: 647, column: 27, scope: !13106)
!13108 = !DILocation(line: 663, column: 6, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13099, file: !12933, line: 663, column: 6)
!13110 = !DILocation(line: 663, column: 30, scope: !13109)
!13111 = !DILocation(line: 663, column: 6, scope: !13099)
!13112 = !DILocation(line: 669, column: 3, scope: !13099)
!13113 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12933, file: !12933, line: 611, type: !13114, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13116)
!13114 = !DISubroutineType(types: !13115)
!13115 = !{!108, !108, !13054}
!13116 = !{!13117, !13118, !13119}
!13117 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13113, file: !12933, line: 611, type: !108)
!13118 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13113, file: !12933, line: 611, type: !13054)
!13119 = !DILocalVariable(name: "pllfreq", scope: !13113, file: !12933, line: 613, type: !108)
!13120 = !DILocation(line: 0, scope: !13113)
!13121 = !DILocation(line: 622, column: 56, scope: !13113)
!13122 = !DILocation(line: 622, column: 61, scope: !13113)
!13123 = !DILocation(line: 622, column: 32, scope: !13113)
!13124 = !DILocation(line: 626, column: 45, scope: !13113)
!13125 = !DILocation(line: 626, column: 50, scope: !13113)
!13126 = !DILocation(line: 626, column: 21, scope: !13113)
!13127 = !DILocation(line: 630, column: 47, scope: !13113)
!13128 = !DILocation(line: 630, column: 82, scope: !13113)
!13129 = !DILocation(line: 630, column: 21, scope: !13113)
!13130 = !DILocation(line: 633, column: 3, scope: !13113)
!13131 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9927, file: !9927, line: 3007, type: !3574, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13132 = !DILocation(line: 3009, column: 11, scope: !13131)
!13133 = !DILocation(line: 3009, column: 44, scope: !13131)
!13134 = !DILocation(line: 3009, column: 3, scope: !13131)
!13135 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9927, file: !9927, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13136 = !DILocation(line: 2989, column: 3, scope: !13135)
!13137 = !DILocation(line: 2990, column: 1, scope: !13135)
!13138 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9927, file: !9927, line: 4304, type: !10051, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13139)
!13139 = !{!13140, !13141, !13142, !13143}
!13140 = !DILocalVariable(name: "Source", arg: 1, scope: !13138, file: !9927, line: 4304, type: !108)
!13141 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13138, file: !9927, line: 4304, type: !108)
!13142 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13138, file: !9927, line: 4304, type: !108)
!13143 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13138, file: !9927, line: 4304, type: !108)
!13144 = !DILocation(line: 0, scope: !13138)
!13145 = !DILocation(line: 4306, column: 3, scope: !13138)
!13146 = !DILocation(line: 4308, column: 3, scope: !13138)
!13147 = !DILocation(line: 4312, column: 1, scope: !13138)
!13148 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12933, file: !12933, line: 681, type: !13149, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13151)
!13149 = !DISubroutineType(types: !13150)
!13150 = !{!12976, !108, !13061}
!13151 = !{!13152, !13153, !13154, !13155}
!13152 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13148, file: !12933, line: 681, type: !108)
!13153 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13148, file: !12933, line: 681, type: !13061)
!13154 = !DILocalVariable(name: "status", scope: !13148, file: !12933, line: 683, type: !12976)
!13155 = !DILocalVariable(name: "hclk_frequency", scope: !13148, file: !12933, line: 684, type: !108)
!13156 = !DILocation(line: 0, scope: !13148)
!13157 = !DILocation(line: 691, column: 20, scope: !13148)
!13158 = !DILocation(line: 694, column: 6, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13148, file: !12933, line: 694, column: 6)
!13160 = !DILocation(line: 694, column: 22, scope: !13159)
!13161 = !DILocation(line: 694, column: 6, scope: !13148)
!13162 = !DILocation(line: 697, column: 14, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13159, file: !12933, line: 695, column: 3)
!13164 = !DILocation(line: 701, column: 13, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13148, file: !12933, line: 701, column: 6)
!13166 = !DILocation(line: 701, column: 6, scope: !13148)
!13167 = !DILocation(line: 704, column: 5, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13165, file: !12933, line: 702, column: 3)
!13169 = !DILocation(line: 705, column: 5, scope: !13168)
!13170 = !DILocation(line: 705, column: 12, scope: !13168)
!13171 = !DILocation(line: 705, column: 33, scope: !13168)
!13172 = distinct !{!13172, !13169, !13173}
!13173 = !DILocation(line: 708, column: 5, scope: !13168)
!13174 = !DILocation(line: 711, column: 49, scope: !13168)
!13175 = !DILocation(line: 711, column: 5, scope: !13168)
!13176 = !DILocation(line: 712, column: 5, scope: !13168)
!13177 = !DILocation(line: 713, column: 5, scope: !13168)
!13178 = !DILocation(line: 713, column: 12, scope: !13168)
!13179 = !DILocation(line: 713, column: 37, scope: !13168)
!13180 = distinct !{!13180, !13177, !13181}
!13181 = !DILocation(line: 716, column: 5, scope: !13168)
!13182 = !DILocation(line: 719, column: 50, scope: !13168)
!13183 = !DILocation(line: 719, column: 5, scope: !13168)
!13184 = !DILocation(line: 720, column: 50, scope: !13168)
!13185 = !DILocation(line: 720, column: 5, scope: !13168)
!13186 = !DILocation(line: 721, column: 3, scope: !13168)
!13187 = !DILocation(line: 724, column: 6, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13148, file: !12933, line: 724, column: 6)
!13189 = !DILocation(line: 724, column: 22, scope: !13188)
!13190 = !DILocation(line: 724, column: 6, scope: !13148)
!13191 = !DILocation(line: 727, column: 14, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13188, file: !12933, line: 725, column: 3)
!13193 = !DILocation(line: 728, column: 3, scope: !13192)
!13194 = !DILocation(line: 731, column: 13, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13148, file: !12933, line: 731, column: 6)
!13196 = !DILocation(line: 731, column: 6, scope: !13148)
!13197 = !DILocation(line: 733, column: 5, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13195, file: !12933, line: 732, column: 3)
!13199 = !DILocation(line: 734, column: 3, scope: !13198)
!13200 = !DILocation(line: 736, column: 3, scope: !13148)
!13201 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9927, file: !9927, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13202 = !DILocation(line: 4186, column: 3, scope: !13201)
!13203 = !DILocation(line: 4187, column: 1, scope: !13201)
!13204 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9927, file: !9927, line: 4205, type: !3574, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13205 = !DILocation(line: 4207, column: 11, scope: !13204)
!13206 = !DILocation(line: 4207, column: 44, scope: !13204)
!13207 = !DILocation(line: 4207, column: 3, scope: !13204)
!13208 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9927, file: !9927, line: 3224, type: !7369, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13209)
!13209 = !{!13210}
!13210 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13208, file: !9927, line: 3224, type: !108)
!13211 = !DILocation(line: 0, scope: !13208)
!13212 = !DILocation(line: 3226, column: 3, scope: !13208)
!13213 = !DILocation(line: 3227, column: 1, scope: !13208)
!13214 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9927, file: !9927, line: 3188, type: !7369, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13215)
!13215 = !{!13216}
!13216 = !DILocalVariable(name: "Source", arg: 1, scope: !13214, file: !9927, line: 3188, type: !108)
!13217 = !DILocation(line: 0, scope: !13214)
!13218 = !DILocation(line: 3190, column: 3, scope: !13214)
!13219 = !DILocation(line: 3191, column: 1, scope: !13214)
!13220 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9927, file: !9927, line: 3204, type: !3574, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13221 = !DILocation(line: 3206, column: 21, scope: !13220)
!13222 = !DILocation(line: 3206, column: 3, scope: !13220)
!13223 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9927, file: !9927, line: 3240, type: !7369, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13224)
!13224 = !{!13225}
!13225 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13223, file: !9927, line: 3240, type: !108)
!13226 = !DILocation(line: 0, scope: !13223)
!13227 = !DILocation(line: 3242, column: 3, scope: !13223)
!13228 = !DILocation(line: 3243, column: 1, scope: !13223)
!13229 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9927, file: !9927, line: 3256, type: !7369, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13230)
!13230 = !{!13231}
!13231 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13229, file: !9927, line: 3256, type: !108)
!13232 = !DILocation(line: 0, scope: !13229)
!13233 = !DILocation(line: 3258, column: 3, scope: !13229)
!13234 = !DILocation(line: 3259, column: 1, scope: !13229)
!13235 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9927, file: !9927, line: 5153, type: !3574, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13236 = !DILocation(line: 5155, column: 11, scope: !13235)
!13237 = !DILocation(line: 5155, column: 47, scope: !13235)
!13238 = !DILocation(line: 5155, column: 3, scope: !13235)
!13239 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12933, file: !12933, line: 540, type: !13240, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13242)
!13240 = !DISubroutineType(types: !13241)
!13241 = !{!12976, !108, !108, !13054, !13061}
!13242 = !{!13243, !13244, !13245, !13246, !13247, !13248}
!13243 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13239, file: !12933, line: 540, type: !108)
!13244 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13239, file: !12933, line: 540, type: !108)
!13245 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13239, file: !12933, line: 541, type: !13054)
!13246 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13239, file: !12933, line: 541, type: !13061)
!13247 = !DILocalVariable(name: "status", scope: !13239, file: !12933, line: 543, type: !12976)
!13248 = !DILocalVariable(name: "pllfreq", scope: !13239, file: !12933, line: 544, type: !108)
!13249 = !DILocation(line: 0, scope: !13239)
!13250 = !DILocation(line: 551, column: 6, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13239, file: !12933, line: 551, column: 6)
!13252 = !DILocation(line: 551, column: 25, scope: !13251)
!13253 = !DILocation(line: 551, column: 6, scope: !13239)
!13254 = !DILocation(line: 554, column: 15, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13251, file: !12933, line: 552, column: 3)
!13256 = !DILocation(line: 557, column: 8, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13255, file: !12933, line: 557, column: 8)
!13258 = !DILocation(line: 557, column: 29, scope: !13257)
!13259 = !DILocation(line: 557, column: 8, scope: !13255)
!13260 = !DILocation(line: 560, column: 20, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !12933, line: 560, column: 10)
!13262 = distinct !DILexicalBlock(scope: !13257, file: !12933, line: 558, column: 5)
!13263 = !DILocation(line: 560, column: 10, scope: !13262)
!13264 = !DILocation(line: 562, column: 9, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13261, file: !12933, line: 561, column: 7)
!13266 = !DILocation(line: 563, column: 7, scope: !13265)
!13267 = !DILocation(line: 566, column: 9, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13261, file: !12933, line: 565, column: 7)
!13269 = !DILocation(line: 570, column: 7, scope: !13262)
!13270 = !DILocation(line: 571, column: 7, scope: !13262)
!13271 = !DILocation(line: 571, column: 14, scope: !13262)
!13272 = !DILocation(line: 571, column: 35, scope: !13262)
!13273 = distinct !{!13273, !13270, !13274}
!13274 = !DILocation(line: 574, column: 7, scope: !13262)
!13275 = !DILocation(line: 578, column: 76, scope: !13255)
!13276 = !DILocation(line: 578, column: 103, scope: !13255)
!13277 = !DILocation(line: 579, column: 54, scope: !13255)
!13278 = !DILocation(line: 578, column: 5, scope: !13255)
!13279 = !DILocation(line: 582, column: 14, scope: !13255)
!13280 = !DILocation(line: 583, column: 3, scope: !13255)
!13281 = !DILocation(line: 0, scope: !13251)
!13282 = !DILocation(line: 590, column: 3, scope: !13239)
!13283 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9927, file: !9927, line: 2969, type: !3574, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13284 = !DILocation(line: 2971, column: 11, scope: !13283)
!13285 = !DILocation(line: 2971, column: 44, scope: !13283)
!13286 = !DILocation(line: 2971, column: 3, scope: !13283)
!13287 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9927, file: !9927, line: 2929, type: !334, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13288 = !DILocation(line: 2931, column: 3, scope: !13287)
!13289 = !DILocation(line: 2932, column: 1, scope: !13287)
!13290 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9927, file: !9927, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13291 = !DILocation(line: 2941, column: 3, scope: !13290)
!13292 = !DILocation(line: 2942, column: 1, scope: !13290)
!13293 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9927, file: !9927, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !251)
!13294 = !DILocation(line: 2951, column: 3, scope: !13293)
!13295 = !DILocation(line: 2952, column: 1, scope: !13293)
!13296 = distinct !DISubprogram(name: "z_device_state_init", scope: !13297, file: !13297, line: 23, type: !334, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13298)
!13297 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13298 = !{!13299}
!13299 = !DILocalVariable(name: "dev", scope: !13296, file: !13297, line: 25, type: !13300)
!13300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13301, size: 32)
!13301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13302)
!13302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !13303)
!13303 = !{!13304, !13305, !13306, !13307, !13313, !13314}
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13302, file: !429, line: 380, baseType: !337, size: 32)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13302, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13302, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13302, file: !429, line: 386, baseType: !13308, size: 32, offset: 96)
!13308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13309, size: 32)
!13309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !13310)
!13310 = !{!13311, !13312}
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13309, file: !429, line: 359, baseType: !185, size: 8)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13309, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13302, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13302, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!13315 = !DILocation(line: 0, scope: !13296)
!13316 = !DILocation(line: 31, column: 1, scope: !13296)
!13317 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13297, file: !13297, line: 33, type: !13318, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13320)
!13318 = !DISubroutineType(types: !13319)
!13319 = !{!13300, !337}
!13320 = !{!13321, !13322}
!13321 = !DILocalVariable(name: "name", arg: 1, scope: !13317, file: !13297, line: 33, type: !337)
!13322 = !DILocalVariable(name: "dev", scope: !13317, file: !13297, line: 35, type: !13300)
!13323 = !DILocation(line: 0, scope: !13317)
!13324 = !DILocation(line: 40, column: 12, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13317, file: !13297, line: 40, column: 6)
!13326 = !DILocation(line: 40, column: 21, scope: !13325)
!13327 = !DILocation(line: 40, column: 25, scope: !13325)
!13328 = !DILocation(line: 40, column: 33, scope: !13325)
!13329 = !DILocation(line: 40, column: 6, scope: !13317)
!13330 = !DILocation(line: 55, column: 2, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13317, file: !13297, line: 55, column: 2)
!13332 = !DILocation(line: 50, column: 7, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13334, file: !13297, line: 50, column: 7)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !13297, line: 49, column: 57)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !13297, line: 49, column: 2)
!13336 = distinct !DILexicalBlock(scope: !13317, file: !13297, line: 49, column: 2)
!13337 = !DILocation(line: 50, column: 30, scope: !13333)
!13338 = !DILocation(line: 50, column: 39, scope: !13333)
!13339 = !DILocation(line: 50, column: 44, scope: !13333)
!13340 = !DILocation(line: 50, column: 7, scope: !13334)
!13341 = !DILocation(line: 49, column: 53, scope: !13335)
!13342 = !DILocation(line: 49, column: 33, scope: !13335)
!13343 = !DILocation(line: 49, column: 2, scope: !13336)
!13344 = distinct !{!13344, !13343, !13345}
!13345 = !DILocation(line: 53, column: 2, scope: !13336)
!13346 = !DILocation(line: 56, column: 7, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13348, file: !13297, line: 56, column: 7)
!13348 = distinct !DILexicalBlock(scope: !13349, file: !13297, line: 55, column: 57)
!13349 = distinct !DILexicalBlock(scope: !13331, file: !13297, line: 55, column: 2)
!13350 = !DILocation(line: 56, column: 30, scope: !13347)
!13351 = !DILocation(line: 56, column: 52, scope: !13347)
!13352 = !DILocation(line: 56, column: 34, scope: !13347)
!13353 = !DILocation(line: 56, column: 58, scope: !13347)
!13354 = !DILocation(line: 56, column: 7, scope: !13348)
!13355 = !DILocation(line: 55, column: 53, scope: !13349)
!13356 = !DILocation(line: 55, column: 33, scope: !13349)
!13357 = distinct !{!13357, !13330, !13358}
!13358 = !DILocation(line: 59, column: 2, scope: !13331)
!13359 = !DILocation(line: 62, column: 1, scope: !13317)
!13360 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13297, file: !13297, line: 93, type: !13361, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13363)
!13361 = !DISubroutineType(types: !13362)
!13362 = !{!131, !13300}
!13363 = !{!13364}
!13364 = !DILocalVariable(name: "dev", arg: 1, scope: !13360, file: !13297, line: 93, type: !13300)
!13365 = !DILocation(line: 0, scope: !13360)
!13366 = !DILocation(line: 99, column: 10, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13360, file: !13297, line: 99, column: 6)
!13368 = !DILocation(line: 99, column: 6, scope: !13360)
!13369 = !DILocation(line: 103, column: 14, scope: !13360)
!13370 = !DILocation(line: 103, column: 21, scope: !13360)
!13371 = !DILocation(line: 103, column: 33, scope: !13360)
!13372 = !DILocation(line: 103, column: 49, scope: !13360)
!13373 = !DILocation(line: 103, column: 58, scope: !13360)
!13374 = !DILocation(line: 104, column: 1, scope: !13360)
!13375 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13297, file: !13297, line: 87, type: !13376, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13379)
!13376 = !DISubroutineType(types: !13377)
!13377 = !{!132, !13378}
!13378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13300, size: 32)
!13379 = !{!13380}
!13380 = !DILocalVariable(name: "devices", arg: 1, scope: !13375, file: !13297, line: 87, type: !13378)
!13381 = !DILocation(line: 0, scope: !13375)
!13382 = !DILocation(line: 89, column: 11, scope: !13375)
!13383 = !DILocation(line: 90, column: 2, scope: !13375)
!13384 = distinct !DISubprogram(name: "device_required_foreach", scope: !13297, file: !13297, line: 125, type: !13385, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13391)
!13385 = !DISubroutineType(types: !13386)
!13386 = !{!103, !13300, !13387, !102}
!13387 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !429, line: 471, baseType: !13388)
!13388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13389, size: 32)
!13389 = !DISubroutineType(types: !13390)
!13390 = !{!103, !13300, !102}
!13391 = !{!13392, !13393, !13394, !13395, !13396}
!13392 = !DILocalVariable(name: "dev", arg: 1, scope: !13384, file: !13297, line: 125, type: !13300)
!13393 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13384, file: !13297, line: 126, type: !13387)
!13394 = !DILocalVariable(name: "context", arg: 3, scope: !13384, file: !13297, line: 127, type: !102)
!13395 = !DILocalVariable(name: "handle_count", scope: !13384, file: !13297, line: 129, type: !132)
!13396 = !DILocalVariable(name: "handles", scope: !13384, file: !13297, line: 130, type: !442)
!13397 = !DILocation(line: 0, scope: !13384)
!13398 = !DILocation(line: 129, column: 2, scope: !13384)
!13399 = !DILocation(line: 129, column: 9, scope: !13384)
!13400 = !DILocation(line: 130, column: 35, scope: !13384)
!13401 = !DILocation(line: 132, column: 33, scope: !13384)
!13402 = !DILocation(line: 132, column: 9, scope: !13384)
!13403 = !DILocation(line: 133, column: 1, scope: !13384)
!13404 = !DILocation(line: 132, column: 2, scope: !13384)
!13405 = distinct !DISubprogram(name: "device_required_handles_get", scope: !429, file: !429, line: 493, type: !13406, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13408)
!13406 = !DISubroutineType(types: !13407)
!13407 = !{!442, !13300, !2685}
!13408 = !{!13409, !13410, !13411, !13412}
!13409 = !DILocalVariable(name: "dev", arg: 1, scope: !13405, file: !429, line: 493, type: !13300)
!13410 = !DILocalVariable(name: "count", arg: 2, scope: !13405, file: !429, line: 493, type: !2685)
!13411 = !DILocalVariable(name: "rv", scope: !13405, file: !429, line: 495, type: !442)
!13412 = !DILocalVariable(name: "i", scope: !13413, file: !429, line: 498, type: !132)
!13413 = distinct !DILexicalBlock(scope: !13414, file: !429, line: 497, column: 18)
!13414 = distinct !DILexicalBlock(scope: !13405, file: !429, line: 497, column: 6)
!13415 = !DILocation(line: 0, scope: !13405)
!13416 = !DILocation(line: 495, column: 35, scope: !13405)
!13417 = !DILocation(line: 497, column: 9, scope: !13414)
!13418 = !DILocation(line: 497, column: 6, scope: !13405)
!13419 = !DILocation(line: 0, scope: !13413)
!13420 = !DILocation(line: 500, column: 11, scope: !13413)
!13421 = !DILocation(line: 500, column: 40, scope: !13413)
!13422 = !DILocation(line: 502, column: 4, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13413, file: !429, line: 501, column: 40)
!13424 = distinct !{!13424, !13425, !13426}
!13425 = !DILocation(line: 500, column: 3, scope: !13413)
!13426 = !DILocation(line: 503, column: 3, scope: !13413)
!13427 = !DILocation(line: 504, column: 10, scope: !13413)
!13428 = !DILocation(line: 505, column: 2, scope: !13413)
!13429 = !DILocation(line: 507, column: 2, scope: !13405)
!13430 = distinct !DISubprogram(name: "device_visitor", scope: !13297, file: !13297, line: 106, type: !13431, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13433)
!13431 = !DISubroutineType(types: !13432)
!13432 = !{!103, !442, !132, !13387, !102}
!13433 = !{!13434, !13435, !13436, !13437, !13438, !13440, !13443, !13444}
!13434 = !DILocalVariable(name: "handles", arg: 1, scope: !13430, file: !13297, line: 106, type: !442)
!13435 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13430, file: !13297, line: 107, type: !132)
!13436 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13430, file: !13297, line: 108, type: !13387)
!13437 = !DILocalVariable(name: "context", arg: 4, scope: !13430, file: !13297, line: 109, type: !102)
!13438 = !DILocalVariable(name: "i", scope: !13439, file: !13297, line: 112, type: !132)
!13439 = distinct !DILexicalBlock(scope: !13430, file: !13297, line: 112, column: 2)
!13440 = !DILocalVariable(name: "dh", scope: !13441, file: !13297, line: 113, type: !444)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !13297, line: 112, column: 44)
!13442 = distinct !DILexicalBlock(scope: !13439, file: !13297, line: 112, column: 2)
!13443 = !DILocalVariable(name: "rdev", scope: !13441, file: !13297, line: 114, type: !13300)
!13444 = !DILocalVariable(name: "rc", scope: !13441, file: !13297, line: 115, type: !103)
!13445 = !DILocation(line: 0, scope: !13430)
!13446 = !DILocation(line: 0, scope: !13439)
!13447 = !DILocation(line: 112, column: 23, scope: !13442)
!13448 = !DILocation(line: 112, column: 2, scope: !13439)
!13449 = distinct !{!13449, !13448, !13450}
!13450 = !DILocation(line: 120, column: 2, scope: !13439)
!13451 = !DILocation(line: 113, column: 24, scope: !13441)
!13452 = !DILocation(line: 0, scope: !13441)
!13453 = !DILocation(line: 114, column: 31, scope: !13441)
!13454 = !DILocation(line: 115, column: 12, scope: !13441)
!13455 = !DILocation(line: 117, column: 10, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13441, file: !13297, line: 117, column: 7)
!13457 = !DILocation(line: 112, column: 39, scope: !13442)
!13458 = !DILocation(line: 123, column: 1, scope: !13430)
!13459 = distinct !DISubprogram(name: "device_from_handle", scope: !429, file: !429, line: 439, type: !13460, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13462)
!13460 = !DISubroutineType(types: !13461)
!13461 = !{!13300, !444}
!13462 = !{!13463, !13464, !13465}
!13463 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13459, file: !429, line: 439, type: !444)
!13464 = !DILocalVariable(name: "dev", scope: !13459, file: !429, line: 443, type: !13300)
!13465 = !DILocalVariable(name: "numdev", scope: !13459, file: !429, line: 444, type: !132)
!13466 = !DILocation(line: 0, scope: !13459)
!13467 = !DILocation(line: 446, column: 7, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13459, file: !429, line: 446, column: 6)
!13469 = !DILocation(line: 446, column: 18, scope: !13468)
!13470 = !DILocation(line: 446, column: 23, scope: !13468)
!13471 = !DILocation(line: 450, column: 2, scope: !13459)
!13472 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13297, file: !13297, line: 135, type: !13385, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13473)
!13473 = !{!13474, !13475, !13476, !13477, !13478}
!13474 = !DILocalVariable(name: "dev", arg: 1, scope: !13472, file: !13297, line: 135, type: !13300)
!13475 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13472, file: !13297, line: 136, type: !13387)
!13476 = !DILocalVariable(name: "context", arg: 3, scope: !13472, file: !13297, line: 137, type: !102)
!13477 = !DILocalVariable(name: "handle_count", scope: !13472, file: !13297, line: 139, type: !132)
!13478 = !DILocalVariable(name: "handles", scope: !13472, file: !13297, line: 140, type: !442)
!13479 = !DILocation(line: 0, scope: !13472)
!13480 = !DILocation(line: 139, column: 2, scope: !13472)
!13481 = !DILocation(line: 139, column: 9, scope: !13472)
!13482 = !DILocation(line: 140, column: 35, scope: !13472)
!13483 = !DILocation(line: 142, column: 33, scope: !13472)
!13484 = !DILocation(line: 142, column: 9, scope: !13472)
!13485 = !DILocation(line: 143, column: 1, scope: !13472)
!13486 = !DILocation(line: 142, column: 2, scope: !13472)
!13487 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !429, file: !429, line: 573, type: !13406, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13488)
!13488 = !{!13489, !13490, !13491, !13492, !13493}
!13489 = !DILocalVariable(name: "dev", arg: 1, scope: !13487, file: !429, line: 573, type: !13300)
!13490 = !DILocalVariable(name: "count", arg: 2, scope: !13487, file: !429, line: 573, type: !2685)
!13491 = !DILocalVariable(name: "rv", scope: !13487, file: !429, line: 575, type: !442)
!13492 = !DILocalVariable(name: "region", scope: !13487, file: !429, line: 576, type: !132)
!13493 = !DILocalVariable(name: "i", scope: !13487, file: !429, line: 577, type: !132)
!13494 = !DILocation(line: 0, scope: !13487)
!13495 = !DILocation(line: 575, column: 35, scope: !13487)
!13496 = !DILocation(line: 579, column: 9, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13487, file: !429, line: 579, column: 6)
!13498 = !DILocation(line: 579, column: 6, scope: !13487)
!13499 = !DILocation(line: 582, column: 8, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13501, file: !429, line: 582, column: 8)
!13501 = distinct !DILexicalBlock(scope: !13502, file: !429, line: 581, column: 23)
!13502 = distinct !DILexicalBlock(scope: !13497, file: !429, line: 579, column: 18)
!13503 = !DILocation(line: 582, column: 12, scope: !13500)
!13504 = !DILocation(line: 585, column: 6, scope: !13501)
!13505 = !DILocation(line: 0, scope: !13502)
!13506 = !DILocation(line: 581, column: 17, scope: !13502)
!13507 = !DILocation(line: 581, column: 3, scope: !13502)
!13508 = !DILocation(line: 588, column: 10, scope: !13502)
!13509 = !DILocation(line: 588, column: 16, scope: !13502)
!13510 = !DILocation(line: 589, column: 4, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13502, file: !429, line: 588, column: 39)
!13512 = !DILocation(line: 588, column: 3, scope: !13502)
!13513 = distinct !{!13513, !13512, !13514}
!13514 = !DILocation(line: 590, column: 3, scope: !13502)
!13515 = !DILocation(line: 591, column: 10, scope: !13502)
!13516 = !DILocation(line: 592, column: 2, scope: !13502)
!13517 = !DILocation(line: 575, column: 25, scope: !13487)
!13518 = !DILocation(line: 594, column: 2, scope: !13487)
!13519 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1893, file: !1893, line: 49, type: !13520, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1890, retainedNodes: !251)
!13520 = !DISubroutineType(types: !13521)
!13521 = !{!374}
!13522 = !DILocation(line: 51, column: 10, scope: !13519)
!13523 = !DILocation(line: 51, column: 20, scope: !13519)
!13524 = !DILocation(line: 51, column: 2, scope: !13519)
!13525 = distinct !DISubprogram(name: "coredump", scope: !3199, file: !3199, line: 209, type: !13526, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13672)
!13526 = !DISubroutineType(types: !13527)
!13527 = !{null, !32, !13528, !13572}
!13528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13529, size: 32)
!13529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13530)
!13530 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2813, line: 141, baseType: !13531)
!13531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2813, line: 97, size: 256, elements: !13532)
!13532 = !{!13533}
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13531, file: !2813, line: 107, baseType: !13534, size: 256)
!13534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2813, line: 98, size: 256, elements: !13535)
!13535 = !{!13536, !13541, !13546, !13551, !13556, !13561, !13566, !13571}
!13536 = !DIDerivedType(tag: DW_TAG_member, scope: !13534, file: !2813, line: 99, baseType: !13537, size: 32)
!13537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13534, file: !2813, line: 99, size: 32, elements: !13538)
!13538 = !{!13539, !13540}
!13539 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13537, file: !2813, line: 99, baseType: !108, size: 32)
!13540 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13537, file: !2813, line: 99, baseType: !108, size: 32)
!13541 = !DIDerivedType(tag: DW_TAG_member, scope: !13534, file: !2813, line: 100, baseType: !13542, size: 32, offset: 32)
!13542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13534, file: !2813, line: 100, size: 32, elements: !13543)
!13543 = !{!13544, !13545}
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13542, file: !2813, line: 100, baseType: !108, size: 32)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13542, file: !2813, line: 100, baseType: !108, size: 32)
!13546 = !DIDerivedType(tag: DW_TAG_member, scope: !13534, file: !2813, line: 101, baseType: !13547, size: 32, offset: 64)
!13547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13534, file: !2813, line: 101, size: 32, elements: !13548)
!13548 = !{!13549, !13550}
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13547, file: !2813, line: 101, baseType: !108, size: 32)
!13550 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13547, file: !2813, line: 101, baseType: !108, size: 32)
!13551 = !DIDerivedType(tag: DW_TAG_member, scope: !13534, file: !2813, line: 102, baseType: !13552, size: 32, offset: 96)
!13552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13534, file: !2813, line: 102, size: 32, elements: !13553)
!13553 = !{!13554, !13555}
!13554 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13552, file: !2813, line: 102, baseType: !108, size: 32)
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13552, file: !2813, line: 102, baseType: !108, size: 32)
!13556 = !DIDerivedType(tag: DW_TAG_member, scope: !13534, file: !2813, line: 103, baseType: !13557, size: 32, offset: 128)
!13557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13534, file: !2813, line: 103, size: 32, elements: !13558)
!13558 = !{!13559, !13560}
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13557, file: !2813, line: 103, baseType: !108, size: 32)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13557, file: !2813, line: 103, baseType: !108, size: 32)
!13561 = !DIDerivedType(tag: DW_TAG_member, scope: !13534, file: !2813, line: 104, baseType: !13562, size: 32, offset: 160)
!13562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13534, file: !2813, line: 104, size: 32, elements: !13563)
!13563 = !{!13564, !13565}
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13562, file: !2813, line: 104, baseType: !108, size: 32)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13562, file: !2813, line: 104, baseType: !108, size: 32)
!13566 = !DIDerivedType(tag: DW_TAG_member, scope: !13534, file: !2813, line: 105, baseType: !13567, size: 32, offset: 192)
!13567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13534, file: !2813, line: 105, size: 32, elements: !13568)
!13568 = !{!13569, !13570}
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13567, file: !2813, line: 105, baseType: !108, size: 32)
!13570 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13567, file: !2813, line: 105, baseType: !108, size: 32)
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13534, file: !2813, line: 106, baseType: !108, size: 32, offset: 224)
!13572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13573, size: 32)
!13573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !13574)
!13574 = !{!13575, !13633, !13645, !13646, !13647, !13648, !13654, !13667}
!13575 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13573, file: !163, line: 247, baseType: !13576, size: 384)
!13576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !13577)
!13577 = !{!13578, !13602, !13609, !13610, !13611, !13620, !13621, !13622}
!13578 = !DIDerivedType(tag: DW_TAG_member, scope: !13576, file: !163, line: 60, baseType: !13579, size: 64)
!13579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13576, file: !163, line: 60, size: 64, elements: !13580)
!13580 = !{!13581, !13596}
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13579, file: !163, line: 61, baseType: !13582, size: 64)
!13582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !13583)
!13583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !13584)
!13584 = !{!13585, !13591}
!13585 = !DIDerivedType(tag: DW_TAG_member, scope: !13583, file: !146, line: 38, baseType: !13586, size: 32)
!13586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13583, file: !146, line: 38, size: 32, elements: !13587)
!13587 = !{!13588, !13590}
!13588 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13586, file: !146, line: 39, baseType: !13589, size: 32)
!13589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13583, size: 32)
!13590 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13586, file: !146, line: 40, baseType: !13589, size: 32)
!13591 = !DIDerivedType(tag: DW_TAG_member, scope: !13583, file: !146, line: 42, baseType: !13592, size: 32, offset: 32)
!13592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13583, file: !146, line: 42, size: 32, elements: !13593)
!13593 = !{!13594, !13595}
!13594 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13592, file: !146, line: 43, baseType: !13589, size: 32)
!13595 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13592, file: !146, line: 44, baseType: !13589, size: 32)
!13596 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13579, file: !163, line: 62, baseType: !13597, size: 64)
!13597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !13598)
!13598 = !{!13599}
!13599 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13597, file: !175, line: 50, baseType: !13600, size: 64)
!13600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13601, size: 64, elements: !180)
!13601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13597, size: 32)
!13602 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13576, file: !163, line: 68, baseType: !13603, size: 32, offset: 64)
!13603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13604, size: 32)
!13604 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !13605)
!13605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !13606)
!13606 = !{!13607}
!13607 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13605, file: !141, line: 232, baseType: !13608, size: 64)
!13608 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !13583)
!13609 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13576, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13576, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!13611 = !DIDerivedType(tag: DW_TAG_member, scope: !13576, file: !163, line: 90, baseType: !13612, size: 16, offset: 112)
!13612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13576, file: !163, line: 90, size: 16, elements: !13613)
!13613 = !{!13614, !13619}
!13614 = !DIDerivedType(tag: DW_TAG_member, scope: !13612, file: !163, line: 91, baseType: !13615, size: 16)
!13615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13612, file: !163, line: 91, size: 16, elements: !13616)
!13616 = !{!13617, !13618}
!13617 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13615, file: !163, line: 96, baseType: !195, size: 8)
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13615, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13612, file: !163, line: 100, baseType: !121, size: 16)
!13620 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13576, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!13621 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13576, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13576, file: !163, line: 131, baseType: !13623, size: 192, offset: 192)
!13623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !13624)
!13624 = !{!13625, !13626, !13632}
!13625 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13623, file: !141, line: 245, baseType: !13582, size: 64)
!13626 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13623, file: !141, line: 246, baseType: !13627, size: 32, offset: 64)
!13627 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !13628)
!13628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13629, size: 32)
!13629 = !DISubroutineType(types: !13630)
!13630 = !{null, !13631}
!13631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13623, size: 32)
!13632 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13623, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!13633 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13573, file: !163, line: 250, baseType: !13634, size: 288, offset: 384)
!13634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !13635)
!13635 = !{!13636, !13637, !13638, !13639, !13640, !13641, !13642, !13643, !13644}
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13634, file: !214, line: 26, baseType: !108, size: 32)
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13634, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13634, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13634, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13634, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13634, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13634, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13634, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13634, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!13645 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13573, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13573, file: !163, line: 256, baseType: !13604, size: 64, offset: 704)
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13573, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13573, file: !163, line: 300, baseType: !13649, size: 96, offset: 800)
!13649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !13650)
!13650 = !{!13651, !13652, !13653}
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13649, file: !163, line: 153, baseType: !22, size: 32)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13649, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13649, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13573, file: !163, line: 325, baseType: !13655, size: 32, offset: 896)
!13655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13656, size: 32)
!13656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !13657)
!13657 = !{!13658, !13664, !13665}
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13656, file: !137, line: 5074, baseType: !13659, size: 96)
!13659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !13660)
!13660 = !{!13661, !13662, !13663}
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13659, file: !240, line: 57, baseType: !243, size: 32)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13659, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13659, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13656, file: !137, line: 5075, baseType: !13604, size: 64, offset: 96)
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13656, file: !137, line: 5076, baseType: !13666, offset: 160)
!13666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13573, file: !163, line: 343, baseType: !13668, size: 64, offset: 928)
!13668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !13669)
!13669 = !{!13670, !13671}
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13668, file: !214, line: 63, baseType: !108, size: 32)
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13668, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!13672 = !{!13673, !13674, !13675}
!13673 = !DILocalVariable(name: "reason", arg: 1, scope: !13525, file: !3199, line: 209, type: !32)
!13674 = !DILocalVariable(name: "esf", arg: 2, scope: !13525, file: !3199, line: 209, type: !13528)
!13675 = !DILocalVariable(name: "thread", arg: 3, scope: !13525, file: !3199, line: 210, type: !13572)
!13676 = !DILocation(line: 0, scope: !13525)
!13677 = !DILocation(line: 212, column: 1, scope: !13525)
!13678 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3199, file: !3199, line: 214, type: !13679, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13681)
!13679 = !DISubroutineType(types: !13680)
!13680 = !{null, !22, !22}
!13681 = !{!13682, !13683}
!13682 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13678, file: !3199, line: 214, type: !22)
!13683 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13678, file: !3199, line: 214, type: !22)
!13684 = !DILocation(line: 0, scope: !13678)
!13685 = !DILocation(line: 216, column: 1, scope: !13678)
!13686 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3199, file: !3199, line: 218, type: !13687, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13689)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{null, !379, !132}
!13689 = !{!13690, !13691}
!13690 = !DILocalVariable(name: "buf", arg: 1, scope: !13686, file: !3199, line: 218, type: !379)
!13691 = !DILocalVariable(name: "buflen", arg: 2, scope: !13686, file: !3199, line: 218, type: !132)
!13692 = !DILocation(line: 0, scope: !13686)
!13693 = !DILocation(line: 220, column: 1, scope: !13686)
!13694 = distinct !DISubprogram(name: "coredump_query", scope: !3199, file: !3199, line: 222, type: !13695, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13697)
!13695 = !DISubroutineType(types: !13696)
!13696 = !{!103, !3198, !102}
!13697 = !{!13698, !13699}
!13698 = !DILocalVariable(name: "query_id", arg: 1, scope: !13694, file: !3199, line: 222, type: !3198)
!13699 = !DILocalVariable(name: "arg", arg: 2, scope: !13694, file: !3199, line: 222, type: !102)
!13700 = !DILocation(line: 0, scope: !13694)
!13701 = !DILocation(line: 224, column: 2, scope: !13694)
!13702 = distinct !DISubprogram(name: "coredump_cmd", scope: !3199, file: !3199, line: 227, type: !13703, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13705)
!13703 = !DISubroutineType(types: !13704)
!13704 = !{!103, !3205, !102}
!13705 = !{!13706, !13707}
!13706 = !DILocalVariable(name: "query_id", arg: 1, scope: !13702, file: !3199, line: 227, type: !3205)
!13707 = !DILocalVariable(name: "arg", arg: 2, scope: !13702, file: !3199, line: 227, type: !102)
!13708 = !DILocation(line: 0, scope: !13702)
!13709 = !DILocation(line: 229, column: 2, scope: !13702)
!13710 = distinct !DISubprogram(name: "arch_system_halt", scope: !13711, file: !13711, line: 23, type: !6973, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13712)
!13711 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13712 = !{!13713}
!13713 = !DILocalVariable(name: "reason", arg: 1, scope: !13710, file: !13711, line: 23, type: !32)
!13714 = !DILocation(line: 0, scope: !13710)
!13715 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !13720)
!13716 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13717)
!13717 = !{!13718, !13719}
!13718 = !DILocalVariable(name: "key", scope: !13716, file: !6962, line: 44, type: !32)
!13719 = !DILocalVariable(name: "tmp", scope: !13716, file: !6962, line: 53, type: !32)
!13720 = distinct !DILocation(line: 31, column: 8, scope: !13710)
!13721 = !{i64 1951171}
!13722 = !DILocation(line: 0, scope: !13716, inlinedAt: !13720)
!13723 = !DILocation(line: 32, column: 2, scope: !13710)
!13724 = !DILocation(line: 32, column: 2, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13726, file: !13711, line: 32, column: 2)
!13726 = distinct !DILexicalBlock(scope: !13710, file: !13711, line: 32, column: 2)
!13727 = distinct !{!13727, !13728, !13729}
!13728 = !DILocation(line: 32, column: 2, scope: !13726)
!13729 = !DILocation(line: 34, column: 2, scope: !13726)
!13730 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13711, file: !13711, line: 39, type: !13731, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13733)
!13731 = !DISubroutineType(types: !13732)
!13732 = !{null, !32, !13528}
!13733 = !{!13734, !13735}
!13734 = !DILocalVariable(name: "reason", arg: 1, scope: !13730, file: !13711, line: 39, type: !32)
!13735 = !DILocalVariable(name: "esf", arg: 2, scope: !13730, file: !13711, line: 40, type: !13528)
!13736 = !DILocation(line: 0, scope: !13730)
!13737 = !DILocation(line: 45, column: 2, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13739, file: !13711, line: 45, column: 2)
!13739 = distinct !DILexicalBlock(scope: !13740, file: !13711, line: 45, column: 2)
!13740 = distinct !DILexicalBlock(scope: !13741, file: !13711, line: 45, column: 2)
!13741 = distinct !DILexicalBlock(scope: !13730, file: !13711, line: 45, column: 2)
!13742 = !DILocation(line: 46, column: 2, scope: !13730)
!13743 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13711, file: !13711, line: 81, type: !6973, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13744)
!13744 = !{!13745}
!13745 = !DILocalVariable(name: "reason", arg: 1, scope: !13743, file: !13711, line: 81, type: !32)
!13746 = !DILocation(line: 0, scope: !13743)
!13747 = !DILocation(line: 83, column: 2, scope: !13743)
!13748 = distinct !DISubprogram(name: "z_fatal_error", scope: !13711, file: !13711, line: 96, type: !13731, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13749)
!13749 = !{!13750, !13751, !13752, !13753}
!13750 = !DILocalVariable(name: "reason", arg: 1, scope: !13748, file: !13711, line: 96, type: !32)
!13751 = !DILocalVariable(name: "esf", arg: 2, scope: !13748, file: !13711, line: 96, type: !13528)
!13752 = !DILocalVariable(name: "key", scope: !13748, file: !13711, line: 102, type: !32)
!13753 = !DILocalVariable(name: "thread", scope: !13748, file: !13711, line: 103, type: !13572)
!13754 = !DILocation(line: 0, scope: !13748)
!13755 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !13756)
!13756 = distinct !DILocation(line: 102, column: 21, scope: !13748)
!13757 = !DILocation(line: 0, scope: !13716, inlinedAt: !13756)
!13758 = !DILocation(line: 104, column: 4, scope: !13748)
!13759 = !DILocation(line: 109, column: 2, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13761, file: !13711, line: 109, column: 2)
!13761 = distinct !DILexicalBlock(scope: !13762, file: !13711, line: 109, column: 2)
!13762 = distinct !DILexicalBlock(scope: !13763, file: !13711, line: 109, column: 2)
!13763 = distinct !DILexicalBlock(scope: !13748, file: !13711, line: 109, column: 2)
!13764 = !DILocation(line: 119, column: 11, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13748, file: !13711, line: 119, column: 6)
!13766 = !DILocation(line: 119, column: 20, scope: !13765)
!13767 = !DILocalVariable(name: "esf", arg: 1, scope: !13768, file: !8296, line: 71, type: !13528)
!13768 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8296, file: !8296, line: 71, type: !13769, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13771)
!13769 = !DISubroutineType(types: !13770)
!13770 = !{!131, !13528}
!13771 = !{!13767}
!13772 = !DILocation(line: 0, scope: !13768, inlinedAt: !13773)
!13773 = distinct !DILocation(line: 119, column: 23, scope: !13765)
!13774 = !DILocation(line: 73, column: 21, scope: !13768, inlinedAt: !13773)
!13775 = !DILocation(line: 73, column: 26, scope: !13768, inlinedAt: !13773)
!13776 = !DILocation(line: 73, column: 9, scope: !13768, inlinedAt: !13773)
!13777 = !DILocation(line: 119, column: 6, scope: !13748)
!13778 = !DILocation(line: 120, column: 3, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13780, file: !13711, line: 120, column: 3)
!13780 = distinct !DILexicalBlock(scope: !13781, file: !13711, line: 120, column: 3)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !13711, line: 120, column: 3)
!13782 = distinct !DILexicalBlock(scope: !13783, file: !13711, line: 120, column: 3)
!13783 = distinct !DILexicalBlock(scope: !13765, file: !13711, line: 119, column: 57)
!13784 = !DILocation(line: 121, column: 2, scope: !13783)
!13785 = !DILocation(line: 124, column: 2, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13787, file: !13711, line: 124, column: 2)
!13787 = distinct !DILexicalBlock(scope: !13788, file: !13711, line: 124, column: 2)
!13788 = distinct !DILexicalBlock(scope: !13789, file: !13711, line: 124, column: 2)
!13789 = distinct !DILexicalBlock(scope: !13748, file: !13711, line: 124, column: 2)
!13790 = !DILocation(line: 131, column: 2, scope: !13748)
!13791 = !DILocation(line: 0, scope: !13768, inlinedAt: !13792)
!13792 = distinct !DILocation(line: 151, column: 24, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13794, file: !13711, line: 151, column: 7)
!13794 = distinct !DILexicalBlock(scope: !13795, file: !13711, line: 146, column: 32)
!13795 = distinct !DILexicalBlock(scope: !13748, file: !13711, line: 146, column: 6)
!13796 = !DILocation(line: 151, column: 7, scope: !13794)
!13797 = !DILocation(line: 151, column: 21, scope: !13793)
!13798 = !DILocalVariable(name: "key", arg: 1, scope: !13799, file: !6962, line: 84, type: !32)
!13799 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13800)
!13800 = !{!13798}
!13801 = !DILocation(line: 0, scope: !13799, inlinedAt: !13802)
!13802 = distinct !DILocation(line: 186, column: 2, scope: !13748)
!13803 = !DILocation(line: 95, column: 2, scope: !13799, inlinedAt: !13802)
!13804 = !{i64 1951988}
!13805 = !DILocation(line: 189, column: 3, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !13711, line: 188, column: 41)
!13807 = distinct !DILexicalBlock(scope: !13748, file: !13711, line: 188, column: 6)
!13808 = !DILocation(line: 191, column: 1, scope: !13748)
!13809 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !13810, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !251)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!13812}
!13812 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !13572)
!13813 = !DILocation(line: 535, column: 9, scope: !13809)
!13814 = !DILocation(line: 535, column: 2, scope: !13809)
!13815 = distinct !DISubprogram(name: "reason_to_str", scope: !13711, file: !13711, line: 62, type: !13816, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13818)
!13816 = !DISubroutineType(types: !13817)
!13817 = !{!337, !32}
!13818 = !{!13819}
!13819 = !DILocalVariable(name: "reason", arg: 1, scope: !13815, file: !13711, line: 62, type: !32)
!13820 = !DILocation(line: 0, scope: !13815)
!13821 = !DILocation(line: 64, column: 2, scope: !13815)
!13822 = !DILocation(line: 0, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13815, file: !13711, line: 64, column: 18)
!13824 = !DILocation(line: 78, column: 1, scope: !13815)
!13825 = distinct !DISubprogram(name: "thread_name_get", scope: !13711, file: !13711, line: 51, type: !13826, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13828)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{!337, !13572}
!13828 = !{!13829, !13830}
!13829 = !DILocalVariable(name: "thread", arg: 1, scope: !13825, file: !13711, line: 51, type: !13572)
!13830 = !DILocalVariable(name: "thread_name", scope: !13825, file: !13711, line: 53, type: !337)
!13831 = !DILocation(line: 0, scope: !13825)
!13832 = !DILocation(line: 53, column: 36, scope: !13825)
!13833 = !DILocation(line: 53, column: 28, scope: !13825)
!13834 = !DILocation(line: 53, column: 47, scope: !13825)
!13835 = !DILocation(line: 55, column: 19, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13825, file: !13711, line: 55, column: 6)
!13837 = !DILocation(line: 55, column: 28, scope: !13836)
!13838 = !DILocation(line: 55, column: 32, scope: !13836)
!13839 = !DILocation(line: 55, column: 47, scope: !13836)
!13840 = !DILocation(line: 55, column: 6, scope: !13825)
!13841 = !DILocation(line: 57, column: 2, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13836, file: !13711, line: 55, column: 57)
!13843 = !DILocation(line: 59, column: 2, scope: !13825)
!13844 = distinct !DISubprogram(name: "k_thread_abort", scope: !3594, file: !3594, line: 188, type: !13845, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13847)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{null, !13812}
!13847 = !{!13848}
!13848 = !DILocalVariable(name: "thread", arg: 1, scope: !13844, file: !3594, line: 188, type: !13812)
!13849 = !DILocation(line: 0, scope: !13844)
!13850 = !DILocation(line: 197, column: 2, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13844, file: !3594, line: 197, column: 2)
!13852 = !{i64 2154066214}
!13853 = !DILocation(line: 198, column: 2, scope: !13844)
!13854 = !DILocation(line: 199, column: 1, scope: !13844)
!13855 = distinct !DISubprogram(name: "z_current_get", scope: !3594, file: !3594, line: 173, type: !13810, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !251)
!13856 = !DILocation(line: 180, column: 2, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13855, file: !3594, line: 180, column: 2)
!13858 = !{i64 2154066146}
!13859 = !DILocation(line: 181, column: 9, scope: !13855)
!13860 = !DILocation(line: 181, column: 2, scope: !13855)
!13861 = distinct !DISubprogram(name: "z_early_memset", scope: !1901, file: !1901, line: 108, type: !13862, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13864)
!13862 = !DISubroutineType(types: !13863)
!13863 = !{null, !102, !103, !132}
!13864 = !{!13865, !13866, !13867}
!13865 = !DILocalVariable(name: "dst", arg: 1, scope: !13861, file: !1901, line: 108, type: !102)
!13866 = !DILocalVariable(name: "c", arg: 2, scope: !13861, file: !1901, line: 108, type: !103)
!13867 = !DILocalVariable(name: "n", arg: 3, scope: !13861, file: !1901, line: 108, type: !132)
!13868 = !DILocation(line: 0, scope: !13861)
!13869 = !DILocation(line: 110, column: 9, scope: !13861)
!13870 = !DILocation(line: 111, column: 1, scope: !13861)
!13871 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1901, file: !1901, line: 121, type: !13872, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13874)
!13872 = !DISubroutineType(types: !13873)
!13873 = !{null, !102, !13, !132}
!13874 = !{!13875, !13876, !13877}
!13875 = !DILocalVariable(name: "dst", arg: 1, scope: !13871, file: !1901, line: 121, type: !102)
!13876 = !DILocalVariable(name: "src", arg: 2, scope: !13871, file: !1901, line: 121, type: !13)
!13877 = !DILocalVariable(name: "n", arg: 3, scope: !13871, file: !1901, line: 121, type: !132)
!13878 = !DILocation(line: 0, scope: !13871)
!13879 = !DILocation(line: 123, column: 9, scope: !13871)
!13880 = !DILocation(line: 124, column: 1, scope: !13871)
!13881 = distinct !DISubprogram(name: "z_bss_zero", scope: !1901, file: !1901, line: 132, type: !334, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !251)
!13882 = !DILocation(line: 143, column: 2, scope: !13881)
!13883 = !DILocation(line: 168, column: 1, scope: !13881)
!13884 = distinct !DISubprogram(name: "z_init_cpu", scope: !1901, file: !1901, line: 372, type: !9539, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13885)
!13885 = !{!13886}
!13886 = !DILocalVariable(name: "id", arg: 1, scope: !13884, file: !1901, line: 372, type: !103)
!13887 = !DILocation(line: 0, scope: !13884)
!13888 = !DILocation(line: 374, column: 2, scope: !13884)
!13889 = !DILocation(line: 375, column: 34, scope: !13884)
!13890 = !DILocation(line: 375, column: 19, scope: !13884)
!13891 = !DILocation(line: 375, column: 31, scope: !13884)
!13892 = !DILocation(line: 376, column: 24, scope: !13884)
!13893 = !DILocation(line: 376, column: 19, scope: !13884)
!13894 = !DILocation(line: 376, column: 22, scope: !13884)
!13895 = !DILocation(line: 378, column: 26, scope: !13884)
!13896 = !DILocation(line: 378, column: 4, scope: !13884)
!13897 = !DILocation(line: 378, column: 50, scope: !13884)
!13898 = !DILocation(line: 377, column: 19, scope: !13884)
!13899 = !DILocation(line: 377, column: 29, scope: !13884)
!13900 = !DILocation(line: 384, column: 1, scope: !13884)
!13901 = distinct !DISubprogram(name: "init_idle_thread", scope: !1901, file: !1901, line: 343, type: !9539, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13902)
!13902 = !{!13903, !13904, !13905, !13908}
!13903 = !DILocalVariable(name: "i", arg: 1, scope: !13901, file: !1901, line: 343, type: !103)
!13904 = !DILocalVariable(name: "thread", scope: !13901, file: !1901, line: 345, type: !1993)
!13905 = !DILocalVariable(name: "stack", scope: !13901, file: !1901, line: 346, type: !13906)
!13906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13907, size: 32)
!13907 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !2107)
!13908 = !DILocalVariable(name: "tname", scope: !13901, file: !1901, line: 358, type: !277)
!13909 = !DILocation(line: 0, scope: !13901)
!13910 = !DILocation(line: 345, column: 29, scope: !13901)
!13911 = !DILocation(line: 346, column: 28, scope: !13901)
!13912 = !DILocation(line: 362, column: 37, scope: !13901)
!13913 = !DILocation(line: 362, column: 36, scope: !13901)
!13914 = !DILocation(line: 361, column: 2, scope: !13901)
!13915 = !DILocation(line: 365, column: 2, scope: !13901)
!13916 = !DILocation(line: 370, column: 1, scope: !13901)
!13917 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !13918, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13920)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{!277, !13906}
!13920 = !{!13921}
!13921 = !DILocalVariable(name: "sym", arg: 1, scope: !13917, file: !316, line: 331, type: !13906)
!13922 = !DILocation(line: 0, scope: !13917)
!13923 = !DILocation(line: 333, column: 21, scope: !13917)
!13924 = !DILocation(line: 333, column: 2, scope: !13917)
!13925 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13926, file: !13926, line: 155, type: !13927, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13929)
!13926 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13927 = !DISubroutineType(types: !13928)
!13928 = !{null, !1993}
!13929 = !{!13930}
!13930 = !DILocalVariable(name: "thread", arg: 1, scope: !13925, file: !13926, line: 155, type: !1993)
!13931 = !DILocation(line: 0, scope: !13925)
!13932 = !DILocation(line: 157, column: 15, scope: !13925)
!13933 = !DILocation(line: 157, column: 28, scope: !13925)
!13934 = !DILocation(line: 158, column: 1, scope: !13925)
!13935 = distinct !DISubprogram(name: "z_cstart", scope: !1901, file: !1901, line: 501, type: !334, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13936)
!13936 = !{!13937}
!13937 = !DILocalVariable(name: "dummy_thread", scope: !13935, file: !1901, line: 518, type: !1994)
!13938 = !DILocation(line: 507, column: 2, scope: !13935)
!13939 = !DILocation(line: 43, column: 14, scope: !13940, inlinedAt: !13944)
!13940 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13941, file: !13941, line: 40, type: !334, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13942)
!13941 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13942 = !{!13943}
!13943 = !DILocalVariable(name: "msp", scope: !13940, file: !13941, line: 42, type: !108)
!13944 = distinct !DILocation(line: 44, column: 2, scope: !13945, inlinedAt: !13947)
!13945 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13946, file: !13946, line: 42, type: !334, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !251)
!13946 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13947 = distinct !DILocation(line: 510, column: 2, scope: !13935)
!13948 = !DILocation(line: 43, column: 3, scope: !13940, inlinedAt: !13944)
!13949 = !DILocation(line: 43, column: 60, scope: !13940, inlinedAt: !13944)
!13950 = !DILocation(line: 0, scope: !13940, inlinedAt: !13944)
!13951 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13952, file: !7280, line: 1153, type: !108)
!13952 = distinct !DISubprogram(name: "__set_MSP", scope: !7280, file: !7280, line: 1153, type: !7369, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13953)
!13953 = !{!13951}
!13954 = !DILocation(line: 0, scope: !13952, inlinedAt: !13955)
!13955 = distinct !DILocation(line: 46, column: 2, scope: !13940, inlinedAt: !13944)
!13956 = !DILocation(line: 1155, column: 3, scope: !13952, inlinedAt: !13955)
!13957 = !{i64 2848415}
!13958 = !DILocation(line: 62, column: 11, scope: !13940, inlinedAt: !13944)
!13959 = !DILocation(line: 102, column: 2, scope: !13960, inlinedAt: !13961)
!13960 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8296, file: !8296, line: 97, type: !334, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !251)
!13961 = distinct !DILocation(line: 45, column: 2, scope: !13945, inlinedAt: !13947)
!13962 = !DILocation(line: 108, column: 2, scope: !13960, inlinedAt: !13961)
!13963 = !DILocation(line: 112, column: 2, scope: !13960, inlinedAt: !13961)
!13964 = !DILocation(line: 113, column: 2, scope: !13960, inlinedAt: !13961)
!13965 = !DILocation(line: 114, column: 2, scope: !13960, inlinedAt: !13961)
!13966 = !DILocation(line: 116, column: 2, scope: !13960, inlinedAt: !13961)
!13967 = !DILocation(line: 123, column: 13, scope: !13960, inlinedAt: !13961)
!13968 = !DILocation(line: 46, column: 2, scope: !13945, inlinedAt: !13947)
!13969 = !DILocation(line: 47, column: 2, scope: !13945, inlinedAt: !13947)
!13970 = !DILocation(line: 174, column: 12, scope: !13971, inlinedAt: !13972)
!13971 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8296, file: !8296, line: 169, type: !334, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !251)
!13972 = distinct !DILocation(line: 48, column: 2, scope: !13945, inlinedAt: !13947)
!13973 = !DILocation(line: 179, column: 12, scope: !13971, inlinedAt: !13972)
!13974 = !DILocation(line: 50, column: 2, scope: !13945, inlinedAt: !13947)
!13975 = !DILocation(line: 57, column: 2, scope: !13945, inlinedAt: !13947)
!13976 = !DILocation(line: 518, column: 2, scope: !13935)
!13977 = !DILocation(line: 518, column: 18, scope: !13935)
!13978 = !DILocation(line: 520, column: 2, scope: !13935)
!13979 = !DILocation(line: 523, column: 2, scope: !13935)
!13980 = !DILocation(line: 526, column: 2, scope: !13935)
!13981 = !DILocation(line: 527, column: 2, scope: !13935)
!13982 = !DILocation(line: 543, column: 24, scope: !13935)
!13983 = !DILocation(line: 543, column: 2, scope: !13935)
!13984 = !DILocation(line: 0, scope: !2129)
!13985 = !DILocation(line: 246, column: 15, scope: !2147)
!13986 = !DILocation(line: 246, column: 36, scope: !2146)
!13987 = !DILocation(line: 246, column: 2, scope: !2147)
!13988 = !DILocation(line: 247, column: 37, scope: !2145)
!13989 = !DILocation(line: 0, scope: !2145)
!13990 = !DILocation(line: 248, column: 19, scope: !2145)
!13991 = !DILocation(line: 248, column: 12, scope: !2145)
!13992 = !DILocation(line: 250, column: 11, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !2145, file: !1901, line: 250, column: 7)
!13994 = !DILocation(line: 250, column: 7, scope: !2145)
!13995 = !DILocation(line: 254, column: 11, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13997, file: !1901, line: 254, column: 8)
!13997 = distinct !DILexicalBlock(scope: !13993, file: !1901, line: 250, column: 20)
!13998 = !DILocation(line: 254, column: 8, scope: !13997)
!13999 = !DILocation(line: 255, column: 9, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13996, file: !1901, line: 254, column: 17)
!14001 = !DILocation(line: 258, column: 9, scope: !14000)
!14002 = !DILocation(line: 261, column: 28, scope: !14000)
!14003 = !DILocation(line: 261, column: 10, scope: !14000)
!14004 = !DILocation(line: 261, column: 17, scope: !14000)
!14005 = !DILocation(line: 261, column: 26, scope: !14000)
!14006 = !DILocation(line: 262, column: 4, scope: !14000)
!14007 = !DILocation(line: 263, column: 9, scope: !13997)
!14008 = !DILocation(line: 263, column: 16, scope: !13997)
!14009 = !DILocation(line: 263, column: 28, scope: !13997)
!14010 = !DILocation(line: 264, column: 3, scope: !13997)
!14011 = !DILocation(line: 246, column: 60, scope: !2146)
!14012 = distinct !{!14012, !13987, !14013}
!14013 = !DILocation(line: 265, column: 2, scope: !2147)
!14014 = !DILocation(line: 266, column: 1, scope: !2129)
!14015 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7314, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !14016)
!14016 = !{!14017, !14018}
!14017 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14015, file: !624, line: 1814, type: !871)
!14018 = !DILocalVariable(name: "priority", arg: 2, scope: !14015, file: !624, line: 1814, type: !108)
!14019 = !DILocation(line: 0, scope: !14015)
!14020 = !DILocation(line: 1822, column: 48, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14022, file: !624, line: 1821, column: 3)
!14022 = distinct !DILexicalBlock(scope: !14015, file: !624, line: 1816, column: 7)
!14023 = !DILocation(line: 1822, column: 32, scope: !14021)
!14024 = !DILocation(line: 1822, column: 40, scope: !14021)
!14025 = !DILocation(line: 1822, column: 5, scope: !14021)
!14026 = !DILocation(line: 1822, column: 46, scope: !14021)
!14027 = !DILocation(line: 1824, column: 1, scope: !14015)
!14028 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13946, file: !13946, line: 32, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14029 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14030, file: !14030, line: 215, type: !13927, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !14031)
!14030 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14031 = !{!14032}
!14032 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14029, file: !14030, line: 215, type: !1993)
!14033 = !DILocation(line: 0, scope: !14029)
!14034 = !DILocation(line: 217, column: 21, scope: !14029)
!14035 = !DILocation(line: 217, column: 34, scope: !14029)
!14036 = !DILocation(line: 221, column: 21, scope: !14029)
!14037 = !DILocation(line: 221, column: 34, scope: !14029)
!14038 = !DILocation(line: 223, column: 27, scope: !14029)
!14039 = !DILocation(line: 223, column: 33, scope: !14029)
!14040 = !DILocation(line: 224, column: 27, scope: !14029)
!14041 = !DILocation(line: 224, column: 32, scope: !14029)
!14042 = !DILocation(line: 230, column: 2, scope: !14029)
!14043 = !DILocation(line: 239, column: 24, scope: !14029)
!14044 = !DILocation(line: 240, column: 1, scope: !14029)
!14045 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1901, file: !1901, line: 399, type: !14046, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !14048)
!14046 = !DISubroutineType(types: !14047)
!14047 = !{!277}
!14048 = !{!14049}
!14049 = !DILocalVariable(name: "stack_ptr", scope: !14045, file: !1901, line: 401, type: !277)
!14050 = !DILocation(line: 404, column: 2, scope: !14045)
!14051 = !DILocation(line: 416, column: 24, scope: !14045)
!14052 = !DILocation(line: 418, column: 14, scope: !14045)
!14053 = !DILocation(line: 0, scope: !14045)
!14054 = !DILocation(line: 423, column: 2, scope: !14045)
!14055 = !DILocation(line: 424, column: 2, scope: !14045)
!14056 = !DILocation(line: 426, column: 2, scope: !14045)
!14057 = !DILocation(line: 428, column: 2, scope: !14045)
!14058 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1901, file: !1901, line: 432, type: !14059, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !14061)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{null, !277}
!14061 = !{!14062}
!14062 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14058, file: !1901, line: 432, type: !277)
!14063 = !DILocation(line: 0, scope: !14058)
!14064 = !DILocation(line: 435, column: 2, scope: !14058)
!14065 = !DILocation(line: 445, column: 2, scope: !14058)
!14066 = distinct !DISubprogram(name: "bg_thread_main", scope: !1901, file: !1901, line: 277, type: !323, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !14067)
!14067 = !{!14068, !14069, !14070}
!14068 = !DILocalVariable(name: "unused1", arg: 1, scope: !14066, file: !1901, line: 277, type: !102)
!14069 = !DILocalVariable(name: "unused2", arg: 2, scope: !14066, file: !1901, line: 277, type: !102)
!14070 = !DILocalVariable(name: "unused3", arg: 3, scope: !14066, file: !1901, line: 277, type: !102)
!14071 = !DILocation(line: 0, scope: !14066)
!14072 = !DILocation(line: 291, column: 20, scope: !14066)
!14073 = !DILocation(line: 293, column: 2, scope: !14066)
!14074 = !DILocation(line: 297, column: 2, scope: !14066)
!14075 = !DILocation(line: 305, column: 2, scope: !14066)
!14076 = !DILocation(line: 307, column: 2, scope: !14066)
!14077 = !DILocation(line: 330, column: 8, scope: !14066)
!14078 = !DILocation(line: 333, column: 34, scope: !14066)
!14079 = !DILocation(line: 339, column: 1, scope: !14066)
!14080 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2160, file: !2160, line: 45, type: !14081, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14089)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{null, !14083, !102}
!14083 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !137, line: 103, baseType: !14084)
!14084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14085, size: 32)
!14085 = !DISubroutineType(types: !14086)
!14086 = !{null, !14087, !102}
!14087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14088, size: 32)
!14088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2165)
!14089 = !{!14090, !14091}
!14090 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14080, file: !2160, line: 45, type: !14083)
!14091 = !DILocalVariable(name: "user_data", arg: 2, scope: !14080, file: !2160, line: 45, type: !102)
!14092 = !DILocation(line: 0, scope: !14080)
!14093 = !DILocation(line: 71, column: 1, scope: !14080)
!14094 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2160, file: !2160, line: 73, type: !14081, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14095)
!14095 = !{!14096, !14097}
!14096 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14094, file: !2160, line: 73, type: !14083)
!14097 = !DILocalVariable(name: "user_data", arg: 2, scope: !14094, file: !2160, line: 73, type: !102)
!14098 = !DILocation(line: 0, scope: !14094)
!14099 = !DILocation(line: 95, column: 1, scope: !14094)
!14100 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2160, file: !2160, line: 97, type: !8297, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !251)
!14101 = !DILocation(line: 1031, column: 3, scope: !14102, inlinedAt: !14105)
!14102 = distinct !DISubprogram(name: "__get_IPSR", scope: !7280, file: !7280, line: 1027, type: !3574, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14103)
!14103 = !{!14104}
!14104 = !DILocalVariable(name: "result", scope: !14102, file: !7280, line: 1029, type: !108)
!14105 = distinct !DILocation(line: 48, column: 10, scope: !14106, inlinedAt: !14107)
!14106 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !251)
!14107 = distinct !DILocation(line: 99, column: 9, scope: !14100)
!14108 = !{i64 2854066}
!14109 = !DILocation(line: 0, scope: !14102, inlinedAt: !14105)
!14110 = !DILocation(line: 48, column: 9, scope: !14106, inlinedAt: !14107)
!14111 = !DILocation(line: 99, column: 2, scope: !14100)
!14112 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2160, file: !2160, line: 106, type: !334, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !251)
!14113 = !DILocation(line: 108, column: 2, scope: !14112)
!14114 = !DILocation(line: 108, column: 17, scope: !14112)
!14115 = !DILocation(line: 108, column: 30, scope: !14112)
!14116 = !DILocation(line: 109, column: 1, scope: !14112)
!14117 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2160, file: !2160, line: 116, type: !334, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !251)
!14118 = !DILocation(line: 118, column: 2, scope: !14117)
!14119 = !DILocation(line: 118, column: 17, scope: !14117)
!14120 = !DILocation(line: 118, column: 30, scope: !14117)
!14121 = !DILocation(line: 119, column: 1, scope: !14117)
!14122 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2160, file: !2160, line: 126, type: !8297, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !251)
!14123 = !DILocation(line: 128, column: 10, scope: !14122)
!14124 = !DILocation(line: 128, column: 25, scope: !14122)
!14125 = !DILocation(line: 128, column: 38, scope: !14122)
!14126 = !DILocation(line: 128, column: 53, scope: !14122)
!14127 = !DILocation(line: 128, column: 2, scope: !14122)
!14128 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2160, file: !2160, line: 187, type: !14129, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14131)
!14129 = !DISubroutineType(types: !14130)
!14130 = !{!103, !2164, !337}
!14131 = !{!14132, !14133}
!14132 = !DILocalVariable(name: "thread", arg: 1, scope: !14128, file: !2160, line: 187, type: !2164)
!14133 = !DILocalVariable(name: "value", arg: 2, scope: !14128, file: !2160, line: 187, type: !337)
!14134 = !DILocation(line: 0, scope: !14128)
!14135 = !DILocation(line: 206, column: 2, scope: !14128)
!14136 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2160, file: !2160, line: 238, type: !14137, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14139)
!14137 = !DISubroutineType(types: !14138)
!14138 = !{!337, !2164}
!14139 = !{!14140}
!14140 = !DILocalVariable(name: "thread", arg: 1, scope: !14136, file: !2160, line: 238, type: !2164)
!14141 = !DILocation(line: 0, scope: !14136)
!14142 = !DILocation(line: 244, column: 2, scope: !14136)
!14143 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2160, file: !2160, line: 248, type: !14144, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14146)
!14144 = !DISubroutineType(types: !14145)
!14145 = !{!103, !2163, !277, !132}
!14146 = !{!14147, !14148, !14149}
!14147 = !DILocalVariable(name: "thread", arg: 1, scope: !14143, file: !2160, line: 248, type: !2163)
!14148 = !DILocalVariable(name: "buf", arg: 2, scope: !14143, file: !2160, line: 248, type: !277)
!14149 = !DILocalVariable(name: "size", arg: 3, scope: !14143, file: !2160, line: 248, type: !132)
!14150 = !DILocation(line: 0, scope: !14143)
!14151 = !DILocation(line: 257, column: 2, scope: !14143)
!14152 = !DILocation(line: 0, scope: !2159)
!14153 = !DILocation(line: 281, column: 11, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !2159, file: !2160, line: 281, column: 6)
!14155 = !DILocation(line: 281, column: 20, scope: !14154)
!14156 = !DILocation(line: 275, column: 45, scope: !2159)
!14157 = !DILocation(line: 285, column: 10, scope: !2159)
!14158 = !DILocation(line: 0, scope: !2280)
!14159 = !DILocation(line: 293, column: 39, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !2280, file: !2160, line: 293, column: 2)
!14161 = !DILocation(line: 293, column: 2, scope: !2280)
!14162 = !DILocation(line: 273, column: 14, scope: !2159)
!14163 = !DILocation(line: 309, column: 2, scope: !2159)
!14164 = !DILocation(line: 309, column: 11, scope: !2159)
!14165 = !DILocation(line: 311, column: 2, scope: !2159)
!14166 = !DILocation(line: 293, column: 26, scope: !14160)
!14167 = !DILocation(line: 294, column: 9, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14160, file: !2160, line: 293, column: 54)
!14169 = !DILocation(line: 295, column: 21, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14168, file: !2160, line: 295, column: 7)
!14171 = !DILocation(line: 295, column: 28, scope: !14170)
!14172 = !DILocation(line: 295, column: 7, scope: !14168)
!14173 = !DILocation(line: 299, column: 25, scope: !14168)
!14174 = !DILocation(line: 299, column: 41, scope: !14168)
!14175 = !DILocation(line: 300, column: 7, scope: !14168)
!14176 = !DILocation(line: 300, column: 26, scope: !14168)
!14177 = !DILocation(line: 299, column: 10, scope: !14168)
!14178 = !DILocation(line: 299, column: 7, scope: !14168)
!14179 = !DILocation(line: 302, column: 16, scope: !14168)
!14180 = !DILocation(line: 304, column: 20, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14168, file: !2160, line: 304, column: 7)
!14182 = !DILocation(line: 304, column: 7, scope: !14168)
!14183 = !DILocation(line: 305, column: 26, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14181, file: !2160, line: 304, column: 26)
!14185 = !DILocation(line: 305, column: 42, scope: !14184)
!14186 = !DILocation(line: 305, column: 11, scope: !14184)
!14187 = !DILocation(line: 305, column: 8, scope: !14184)
!14188 = !DILocation(line: 306, column: 3, scope: !14184)
!14189 = !DILocation(line: 293, column: 50, scope: !14160)
!14190 = !DILocation(line: 312, column: 1, scope: !2159)
!14191 = distinct !DISubprogram(name: "copy_bytes", scope: !2160, file: !2160, line: 261, type: !14192, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14194)
!14192 = !DISubroutineType(types: !14193)
!14193 = !{!132, !277, !132, !337, !132}
!14194 = !{!14195, !14196, !14197, !14198, !14199}
!14195 = !DILocalVariable(name: "dest", arg: 1, scope: !14191, file: !2160, line: 261, type: !277)
!14196 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14191, file: !2160, line: 261, type: !132)
!14197 = !DILocalVariable(name: "src", arg: 3, scope: !14191, file: !2160, line: 261, type: !337)
!14198 = !DILocalVariable(name: "src_size", arg: 4, scope: !14191, file: !2160, line: 261, type: !132)
!14199 = !DILocalVariable(name: "bytes_to_copy", scope: !14191, file: !2160, line: 263, type: !132)
!14200 = !DILocation(line: 0, scope: !14191)
!14201 = !DILocation(line: 265, column: 18, scope: !14191)
!14202 = !DILocation(line: 266, column: 2, scope: !14191)
!14203 = !DILocation(line: 268, column: 2, scope: !14191)
!14204 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2160, file: !2160, line: 383, type: !14205, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14207)
!14205 = !DISubroutineType(types: !14206)
!14206 = !{null, !2164}
!14207 = !{!14208}
!14208 = !DILocalVariable(name: "thread", arg: 1, scope: !14204, file: !2160, line: 383, type: !2164)
!14209 = !DILocation(line: 0, scope: !14204)
!14210 = !DILocation(line: 387, column: 2, scope: !14204)
!14211 = !DILocation(line: 388, column: 1, scope: !14204)
!14212 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2160, file: !2160, line: 528, type: !14213, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14220)
!14213 = !DISubroutineType(types: !14214)
!14214 = !{!277, !2164, !14215, !132, !321, !102, !102, !102, !103, !108, !337}
!14215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14216, size: 32)
!14216 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !14217)
!14217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !14218)
!14218 = !{!14219}
!14219 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14217, file: !316, line: 48, baseType: !278, size: 8)
!14220 = !{!14221, !14222, !14223, !14224, !14225, !14226, !14227, !14228, !14229, !14230, !14231}
!14221 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14212, file: !2160, line: 528, type: !2164)
!14222 = !DILocalVariable(name: "stack", arg: 2, scope: !14212, file: !2160, line: 529, type: !14215)
!14223 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14212, file: !2160, line: 529, type: !132)
!14224 = !DILocalVariable(name: "entry", arg: 4, scope: !14212, file: !2160, line: 530, type: !321)
!14225 = !DILocalVariable(name: "p1", arg: 5, scope: !14212, file: !2160, line: 531, type: !102)
!14226 = !DILocalVariable(name: "p2", arg: 6, scope: !14212, file: !2160, line: 531, type: !102)
!14227 = !DILocalVariable(name: "p3", arg: 7, scope: !14212, file: !2160, line: 531, type: !102)
!14228 = !DILocalVariable(name: "prio", arg: 8, scope: !14212, file: !2160, line: 532, type: !103)
!14229 = !DILocalVariable(name: "options", arg: 9, scope: !14212, file: !2160, line: 532, type: !108)
!14230 = !DILocalVariable(name: "name", arg: 10, scope: !14212, file: !2160, line: 532, type: !337)
!14231 = !DILocalVariable(name: "stack_ptr", scope: !14212, file: !2160, line: 534, type: !277)
!14232 = !DILocation(line: 0, scope: !14212)
!14233 = !DILocation(line: 550, column: 28, scope: !14212)
!14234 = !DILocation(line: 550, column: 2, scope: !14212)
!14235 = !DILocation(line: 553, column: 34, scope: !14212)
!14236 = !DILocation(line: 553, column: 2, scope: !14212)
!14237 = !DILocation(line: 554, column: 14, scope: !14212)
!14238 = !DILocation(line: 564, column: 2, scope: !14212)
!14239 = !DILocation(line: 567, column: 14, scope: !14212)
!14240 = !DILocation(line: 567, column: 24, scope: !14212)
!14241 = !DILocation(line: 612, column: 7, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14212, file: !2160, line: 612, column: 6)
!14243 = !DILocation(line: 612, column: 6, scope: !14212)
!14244 = !DILocation(line: 627, column: 40, scope: !14212)
!14245 = !DILocation(line: 637, column: 2, scope: !14212)
!14246 = !DILocation(line: 613, column: 15, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14242, file: !2160, line: 612, column: 17)
!14248 = !DILocation(line: 613, column: 29, scope: !14247)
!14249 = !DILocation(line: 638, column: 1, scope: !14212)
!14250 = distinct !DISubprogram(name: "z_waitq_init", scope: !14251, file: !14251, line: 47, type: !14252, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14254)
!14251 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14252 = !DISubroutineType(types: !14253)
!14253 = !{null, !2195}
!14254 = !{!14255}
!14255 = !DILocalVariable(name: "w", arg: 1, scope: !14250, file: !14251, line: 47, type: !2195)
!14256 = !DILocation(line: 0, scope: !14250)
!14257 = !DILocation(line: 49, column: 21, scope: !14250)
!14258 = !DILocation(line: 49, column: 2, scope: !14250)
!14259 = !DILocation(line: 50, column: 1, scope: !14250)
!14260 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2160, file: !2160, line: 791, type: !14261, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14264)
!14261 = !DISubroutineType(types: !14262)
!14262 = !{null, !14263, !103, !108, !32}
!14263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!14264 = !{!14265, !14266, !14267, !14268}
!14265 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14260, file: !2160, line: 791, type: !14263)
!14266 = !DILocalVariable(name: "priority", arg: 2, scope: !14260, file: !2160, line: 791, type: !103)
!14267 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14260, file: !2160, line: 792, type: !108)
!14268 = !DILocalVariable(name: "options", arg: 4, scope: !14260, file: !2160, line: 792, type: !32)
!14269 = !DILocation(line: 0, scope: !14260)
!14270 = !DILocation(line: 795, column: 15, scope: !14260)
!14271 = !DILocation(line: 795, column: 25, scope: !14260)
!14272 = !DILocation(line: 796, column: 30, scope: !14260)
!14273 = !DILocation(line: 796, column: 15, scope: !14260)
!14274 = !DILocation(line: 796, column: 28, scope: !14260)
!14275 = !DILocation(line: 797, column: 30, scope: !14260)
!14276 = !DILocation(line: 797, column: 15, scope: !14260)
!14277 = !DILocation(line: 797, column: 28, scope: !14260)
!14278 = !DILocation(line: 799, column: 22, scope: !14260)
!14279 = !DILocation(line: 799, column: 15, scope: !14260)
!14280 = !DILocation(line: 799, column: 20, scope: !14260)
!14281 = !DILocation(line: 801, column: 15, scope: !14260)
!14282 = !DILocation(line: 801, column: 28, scope: !14260)
!14283 = !DILocation(line: 814, column: 2, scope: !14260)
!14284 = !DILocation(line: 815, column: 1, scope: !14260)
!14285 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2160, file: !2160, line: 449, type: !14286, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14288)
!14286 = !DISubroutineType(types: !14287)
!14287 = !{!277, !2164, !14215, !132}
!14288 = !{!14289, !14290, !14291, !14292, !14293, !14294, !14295, !14296}
!14289 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14285, file: !2160, line: 449, type: !2164)
!14290 = !DILocalVariable(name: "stack", arg: 2, scope: !14285, file: !2160, line: 450, type: !14215)
!14291 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14285, file: !2160, line: 450, type: !132)
!14292 = !DILocalVariable(name: "stack_obj_size", scope: !14285, file: !2160, line: 452, type: !132)
!14293 = !DILocalVariable(name: "stack_buf_size", scope: !14285, file: !2160, line: 452, type: !132)
!14294 = !DILocalVariable(name: "stack_ptr", scope: !14285, file: !2160, line: 453, type: !277)
!14295 = !DILocalVariable(name: "stack_buf_start", scope: !14285, file: !2160, line: 453, type: !277)
!14296 = !DILocalVariable(name: "delta", scope: !14285, file: !2160, line: 454, type: !132)
!14297 = !DILocation(line: 0, scope: !14285)
!14298 = !DILocation(line: 465, column: 20, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14285, file: !2160, line: 463, column: 2)
!14300 = !DILocation(line: 466, column: 21, scope: !14299)
!14301 = !DILocation(line: 473, column: 28, scope: !14285)
!14302 = !DILocation(line: 514, column: 33, scope: !14285)
!14303 = !DILocation(line: 514, column: 25, scope: !14285)
!14304 = !DILocation(line: 514, column: 31, scope: !14285)
!14305 = !DILocation(line: 515, column: 25, scope: !14285)
!14306 = !DILocation(line: 515, column: 30, scope: !14285)
!14307 = !DILocation(line: 516, column: 25, scope: !14285)
!14308 = !DILocation(line: 516, column: 31, scope: !14285)
!14309 = !DILocation(line: 520, column: 2, scope: !14285)
!14310 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !14311, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14313)
!14311 = !DISubroutineType(types: !14312)
!14312 = !{!277, !14215}
!14313 = !{!14314}
!14314 = !DILocalVariable(name: "sym", arg: 1, scope: !14310, file: !316, line: 331, type: !14215)
!14315 = !DILocation(line: 0, scope: !14310)
!14316 = !DILocation(line: 333, column: 21, scope: !14310)
!14317 = !DILocation(line: 333, column: 2, scope: !14310)
!14318 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14319, file: !14319, line: 40, type: !14320, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14322)
!14319 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14320 = !DISubroutineType(types: !14321)
!14321 = !{null, !14263}
!14322 = !{!14323}
!14323 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14318, file: !14319, line: 40, type: !14263)
!14324 = !DILocation(line: 0, scope: !14318)
!14325 = !DILocation(line: 42, column: 31, scope: !14318)
!14326 = !DILocation(line: 42, column: 2, scope: !14318)
!14327 = !DILocation(line: 43, column: 1, scope: !14318)
!14328 = distinct !DISubprogram(name: "z_init_timeout", scope: !14319, file: !14319, line: 25, type: !2221, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14329)
!14329 = !{!14330}
!14330 = !DILocalVariable(name: "to", arg: 1, scope: !14328, file: !14319, line: 25, type: !2223)
!14331 = !DILocation(line: 0, scope: !14328)
!14332 = !DILocation(line: 27, column: 22, scope: !14328)
!14333 = !DILocation(line: 27, column: 2, scope: !14328)
!14334 = !DILocation(line: 28, column: 1, scope: !14328)
!14335 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !14336, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14338)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{null, !2267}
!14338 = !{!14339}
!14339 = !DILocalVariable(name: "node", arg: 1, scope: !14335, file: !146, line: 211, type: !2267)
!14340 = !DILocation(line: 0, scope: !14335)
!14341 = !DILocation(line: 213, column: 8, scope: !14335)
!14342 = !DILocation(line: 213, column: 13, scope: !14335)
!14343 = !DILocation(line: 214, column: 8, scope: !14335)
!14344 = !DILocation(line: 214, column: 13, scope: !14335)
!14345 = !DILocation(line: 215, column: 1, scope: !14335)
!14346 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14347, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14350)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{null, !14349}
!14349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 32)
!14350 = !{!14351}
!14351 = !DILocalVariable(name: "list", arg: 1, scope: !14346, file: !146, line: 197, type: !14349)
!14352 = !DILocation(line: 0, scope: !14346)
!14353 = !DILocation(line: 199, column: 8, scope: !14346)
!14354 = !DILocation(line: 199, column: 13, scope: !14346)
!14355 = !DILocation(line: 200, column: 8, scope: !14346)
!14356 = !DILocation(line: 200, column: 13, scope: !14346)
!14357 = !DILocation(line: 201, column: 1, scope: !14346)
!14358 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2160, file: !2160, line: 641, type: !14359, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14365)
!14359 = !DISubroutineType(types: !14360)
!14360 = !{!2163, !2164, !14215, !132, !321, !102, !102, !102, !103, !108, !14361}
!14361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14362)
!14362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14363)
!14363 = !{!14364}
!14364 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14362, file: !105, line: 66, baseType: !104, size: 64)
!14365 = !{!14366, !14367, !14368, !14369, !14370, !14371, !14372, !14373, !14374, !14375}
!14366 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14358, file: !2160, line: 641, type: !2164)
!14367 = !DILocalVariable(name: "stack", arg: 2, scope: !14358, file: !2160, line: 642, type: !14215)
!14368 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14358, file: !2160, line: 643, type: !132)
!14369 = !DILocalVariable(name: "entry", arg: 4, scope: !14358, file: !2160, line: 643, type: !321)
!14370 = !DILocalVariable(name: "p1", arg: 5, scope: !14358, file: !2160, line: 644, type: !102)
!14371 = !DILocalVariable(name: "p2", arg: 6, scope: !14358, file: !2160, line: 644, type: !102)
!14372 = !DILocalVariable(name: "p3", arg: 7, scope: !14358, file: !2160, line: 644, type: !102)
!14373 = !DILocalVariable(name: "prio", arg: 8, scope: !14358, file: !2160, line: 645, type: !103)
!14374 = !DILocalVariable(name: "options", arg: 9, scope: !14358, file: !2160, line: 645, type: !108)
!14375 = !DILocalVariable(name: "delay", arg: 10, scope: !14358, file: !2160, line: 645, type: !14361)
!14376 = !DILocation(line: 0, scope: !14358)
!14377 = !DILocation(line: 649, column: 2, scope: !14358)
!14378 = !DILocation(line: 652, column: 7, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14358, file: !2160, line: 652, column: 6)
!14380 = !DILocation(line: 652, column: 6, scope: !14358)
!14381 = !DILocation(line: 653, column: 3, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14379, file: !2160, line: 652, column: 39)
!14383 = !DILocation(line: 654, column: 2, scope: !14382)
!14384 = !DILocation(line: 656, column: 2, scope: !14358)
!14385 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2160, file: !2160, line: 401, type: !14386, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14388)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{null, !2164, !14361}
!14388 = !{!14389, !14390}
!14389 = !DILocalVariable(name: "thread", arg: 1, scope: !14385, file: !2160, line: 401, type: !2164)
!14390 = !DILocalVariable(name: "delay", arg: 2, scope: !14385, file: !2160, line: 401, type: !14361)
!14391 = !DILocation(line: 0, scope: !14385)
!14392 = !DILocation(line: 404, column: 6, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14385, file: !2160, line: 404, column: 6)
!14394 = !DILocation(line: 404, column: 6, scope: !14385)
!14395 = !DILocation(line: 405, column: 3, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14393, file: !2160, line: 404, column: 38)
!14397 = !DILocation(line: 406, column: 2, scope: !14396)
!14398 = !DILocation(line: 407, column: 3, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14393, file: !2160, line: 406, column: 9)
!14400 = !DILocation(line: 413, column: 1, scope: !14385)
!14401 = distinct !DISubprogram(name: "k_thread_start", scope: !3594, file: !3594, line: 205, type: !14402, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14404)
!14402 = !DISubroutineType(types: !14403)
!14403 = !{null, !2163}
!14404 = !{!14405}
!14405 = !DILocalVariable(name: "thread", arg: 1, scope: !14401, file: !3594, line: 205, type: !2163)
!14406 = !DILocation(line: 0, scope: !14401)
!14407 = !DILocation(line: 214, column: 2, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14401, file: !3594, line: 214, column: 2)
!14409 = !{i64 2154091438}
!14410 = !DILocation(line: 215, column: 2, scope: !14401)
!14411 = !DILocation(line: 216, column: 1, scope: !14401)
!14412 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14319, file: !14319, line: 47, type: !14386, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14413)
!14413 = !{!14414, !14415}
!14414 = !DILocalVariable(name: "thread", arg: 1, scope: !14412, file: !14319, line: 47, type: !2164)
!14415 = !DILocalVariable(name: "ticks", arg: 2, scope: !14412, file: !14319, line: 47, type: !14361)
!14416 = !DILocation(line: 0, scope: !14412)
!14417 = !DILocation(line: 49, column: 30, scope: !14412)
!14418 = !DILocation(line: 49, column: 2, scope: !14412)
!14419 = !DILocation(line: 50, column: 1, scope: !14412)
!14420 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2160, file: !2160, line: 748, type: !334, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14421)
!14421 = !{!14422, !14439}
!14422 = !DILocalVariable(name: "thread_data", scope: !14423, file: !2160, line: 750, type: !14424)
!14423 = distinct !DILexicalBlock(scope: !14420, file: !2160, line: 750, column: 2)
!14424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14425, size: 32)
!14425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !14426)
!14426 = !{!14427, !14428, !14429, !14430, !14431, !14432, !14433, !14434, !14435, !14436, !14437, !14438}
!14427 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14425, file: !137, line: 621, baseType: !2164, size: 32)
!14428 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14425, file: !137, line: 622, baseType: !14215, size: 32, offset: 32)
!14429 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14425, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!14430 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14425, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!14431 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14425, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!14432 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14425, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!14433 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14425, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!14434 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14425, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!14435 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14425, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!14436 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14425, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!14437 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14425, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!14438 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14425, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!14439 = !DILocalVariable(name: "thread_data", scope: !14440, file: !2160, line: 781, type: !14424)
!14440 = distinct !DILexicalBlock(scope: !14420, file: !2160, line: 781, column: 2)
!14441 = !DILocation(line: 0, scope: !14423)
!14442 = !DILocation(line: 750, column: 2, scope: !14423)
!14443 = !DILocation(line: 780, column: 2, scope: !14420)
!14444 = !DILocation(line: 0, scope: !14440)
!14445 = !DILocation(line: 781, column: 2, scope: !14440)
!14446 = !DILocation(line: 752, column: 17, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14448, file: !2160, line: 750, column: 38)
!14448 = distinct !DILexicalBlock(scope: !14423, file: !2160, line: 750, column: 2)
!14449 = !DILocation(line: 753, column: 17, scope: !14447)
!14450 = !DILocation(line: 754, column: 17, scope: !14447)
!14451 = !DILocation(line: 755, column: 17, scope: !14447)
!14452 = !DILocation(line: 756, column: 17, scope: !14447)
!14453 = !DILocation(line: 757, column: 17, scope: !14447)
!14454 = !DILocation(line: 758, column: 17, scope: !14447)
!14455 = !DILocation(line: 759, column: 17, scope: !14447)
!14456 = !DILocation(line: 760, column: 17, scope: !14447)
!14457 = !DILocation(line: 751, column: 3, scope: !14447)
!14458 = !DILocation(line: 763, column: 16, scope: !14447)
!14459 = !DILocation(line: 763, column: 29, scope: !14447)
!14460 = !DILocation(line: 763, column: 39, scope: !14447)
!14461 = !DILocation(line: 750, column: 2, scope: !14448)
!14462 = !DILocation(line: 750, column: 2, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14448, file: !2160, line: 750, column: 2)
!14464 = distinct !{!14464, !14442, !14465}
!14465 = !DILocation(line: 764, column: 2, scope: !14423)
!14466 = !DILocation(line: 787, column: 2, scope: !14420)
!14467 = !DILocation(line: 788, column: 1, scope: !14420)
!14468 = !DILocation(line: 782, column: 20, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14470, file: !2160, line: 782, column: 7)
!14470 = distinct !DILexicalBlock(scope: !14471, file: !2160, line: 781, column: 38)
!14471 = distinct !DILexicalBlock(scope: !14440, file: !2160, line: 781, column: 2)
!14472 = !DILocation(line: 782, column: 31, scope: !14469)
!14473 = !DILocation(line: 782, column: 7, scope: !14470)
!14474 = !DILocation(line: 783, column: 37, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14469, file: !2160, line: 782, column: 51)
!14476 = !DILocation(line: 784, column: 10, scope: !14475)
!14477 = !DILocation(line: 783, column: 4, scope: !14475)
!14478 = !DILocation(line: 785, column: 3, scope: !14475)
!14479 = !DILocation(line: 781, column: 2, scope: !14471)
!14480 = !DILocation(line: 781, column: 2, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14471, file: !2160, line: 781, column: 2)
!14482 = distinct !{!14482, !14445, !14483}
!14483 = !DILocation(line: 786, column: 2, scope: !14440)
!14484 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3580, file: !3580, line: 403, type: !3581, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14485)
!14485 = !{!14486}
!14486 = !DILocalVariable(name: "t", arg: 1, scope: !14484, file: !3580, line: 403, type: !109)
!14487 = !DILocation(line: 0, scope: !14484)
!14488 = !DILocalVariable(name: "t", arg: 1, scope: !14489, file: !3580, line: 102, type: !109)
!14489 = distinct !DISubprogram(name: "z_tmcvt", scope: !3580, file: !3580, line: 102, type: !3606, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14490)
!14490 = !{!14488, !14491, !14492, !14493, !14494, !14495, !14496, !14497, !14498, !14499, !14500}
!14491 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14489, file: !3580, line: 102, type: !108)
!14492 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14489, file: !3580, line: 103, type: !108)
!14493 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14489, file: !3580, line: 103, type: !131)
!14494 = !DILocalVariable(name: "result32", arg: 5, scope: !14489, file: !3580, line: 104, type: !131)
!14495 = !DILocalVariable(name: "round_up", arg: 6, scope: !14489, file: !3580, line: 104, type: !131)
!14496 = !DILocalVariable(name: "round_off", arg: 7, scope: !14489, file: !3580, line: 105, type: !131)
!14497 = !DILocalVariable(name: "mul_ratio", scope: !14489, file: !3580, line: 107, type: !131)
!14498 = !DILocalVariable(name: "div_ratio", scope: !14489, file: !3580, line: 109, type: !131)
!14499 = !DILocalVariable(name: "off", scope: !14489, file: !3580, line: 116, type: !109)
!14500 = !DILocalVariable(name: "rdivisor", scope: !14501, file: !3580, line: 119, type: !108)
!14501 = distinct !DILexicalBlock(scope: !14502, file: !3580, line: 118, column: 18)
!14502 = distinct !DILexicalBlock(scope: !14489, file: !3580, line: 118, column: 6)
!14503 = !DILocation(line: 0, scope: !14489, inlinedAt: !14504)
!14504 = distinct !DILocation(line: 406, column: 9, scope: !14484)
!14505 = !DILocation(line: 145, column: 13, scope: !14506, inlinedAt: !14504)
!14506 = distinct !DILexicalBlock(scope: !14507, file: !3580, line: 144, column: 10)
!14507 = distinct !DILexicalBlock(scope: !14508, file: !3580, line: 142, column: 7)
!14508 = distinct !DILexicalBlock(scope: !14509, file: !3580, line: 141, column: 24)
!14509 = distinct !DILexicalBlock(scope: !14510, file: !3580, line: 141, column: 13)
!14510 = distinct !DILexicalBlock(scope: !14489, file: !3580, line: 134, column: 6)
!14511 = !DILocation(line: 406, column: 2, scope: !14484)
!14512 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2160, file: !2160, line: 817, type: !4660, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14513)
!14513 = !{!14514, !14515, !14516, !14517}
!14514 = !DILocalVariable(name: "entry", arg: 1, scope: !14512, file: !2160, line: 817, type: !321)
!14515 = !DILocalVariable(name: "p1", arg: 2, scope: !14512, file: !2160, line: 818, type: !102)
!14516 = !DILocalVariable(name: "p2", arg: 3, scope: !14512, file: !2160, line: 818, type: !102)
!14517 = !DILocalVariable(name: "p3", arg: 4, scope: !14512, file: !2160, line: 818, type: !102)
!14518 = !DILocation(line: 0, scope: !14512)
!14519 = !DILocation(line: 822, column: 2, scope: !14512)
!14520 = !DILocation(line: 822, column: 17, scope: !14512)
!14521 = !DILocation(line: 822, column: 30, scope: !14512)
!14522 = !DILocation(line: 823, column: 2, scope: !14512)
!14523 = !DILocation(line: 845, column: 2, scope: !14512)
!14524 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2160, file: !2160, line: 888, type: !14525, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14527)
!14525 = !DISubroutineType(types: !14526)
!14526 = !{!103, !2164}
!14527 = !{!14528}
!14528 = !DILocalVariable(name: "thread", arg: 1, scope: !14524, file: !2160, line: 888, type: !2164)
!14529 = !DILocation(line: 0, scope: !14524)
!14530 = !DILocation(line: 893, column: 2, scope: !14524)
!14531 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2160, file: !2160, line: 897, type: !14532, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14534)
!14532 = !DISubroutineType(types: !14533)
!14533 = !{!103, !2164, !32}
!14534 = !{!14535, !14536}
!14535 = !DILocalVariable(name: "thread", arg: 1, scope: !14531, file: !2160, line: 897, type: !2164)
!14536 = !DILocalVariable(name: "options", arg: 2, scope: !14531, file: !2160, line: 897, type: !32)
!14537 = !DILocation(line: 0, scope: !14531)
!14538 = !DILocation(line: 902, column: 2, scope: !14531)
!14539 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2160, file: !2160, line: 1072, type: !14540, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14545)
!14540 = !DISubroutineType(types: !14541)
!14541 = !{!103, !2163, !14542}
!14542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14543, size: 32)
!14543 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !163, line: 234, baseType: !14544)
!14544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !163, line: 192, elements: !251)
!14545 = !{!14546, !14547}
!14546 = !DILocalVariable(name: "thread", arg: 1, scope: !14539, file: !2160, line: 1072, type: !2163)
!14547 = !DILocalVariable(name: "stats", arg: 2, scope: !14539, file: !2160, line: 1073, type: !14542)
!14548 = !DILocation(line: 0, scope: !14539)
!14549 = !DILocation(line: 1075, column: 14, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14539, file: !2160, line: 1075, column: 6)
!14551 = !DILocation(line: 1075, column: 23, scope: !14550)
!14552 = !DILocation(line: 1086, column: 1, scope: !14539)
!14553 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2160, file: !2160, line: 1088, type: !14554, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14556)
!14554 = !DISubroutineType(types: !14555)
!14555 = !{!103, !14542}
!14556 = !{!14557}
!14557 = !DILocalVariable(name: "stats", arg: 1, scope: !14553, file: !2160, line: 1088, type: !14542)
!14558 = !DILocation(line: 0, scope: !14553)
!14559 = !DILocation(line: 1094, column: 12, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14553, file: !2160, line: 1094, column: 6)
!14561 = !DILocation(line: 1120, column: 1, scope: !14553)
!14562 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14563, file: !14563, line: 20, type: !334, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !251)
!14563 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14564 = !DILocation(line: 30, column: 2, scope: !14562)
!14565 = !DILocation(line: 31, column: 1, scope: !14562)
!14566 = distinct !DISubprogram(name: "idle", scope: !14563, file: !14563, line: 33, type: !323, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !14567)
!14567 = !{!14568, !14569, !14570}
!14568 = !DILocalVariable(name: "unused1", arg: 1, scope: !14566, file: !14563, line: 33, type: !102)
!14569 = !DILocalVariable(name: "unused2", arg: 2, scope: !14566, file: !14563, line: 33, type: !102)
!14570 = !DILocalVariable(name: "unused3", arg: 3, scope: !14566, file: !14563, line: 33, type: !102)
!14571 = !DILocation(line: 0, scope: !14566)
!14572 = !DILocation(line: 41, column: 2, scope: !14566)
!14573 = !DILocation(line: 55, column: 2, scope: !14574, inlinedAt: !14578)
!14574 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !14575)
!14575 = !{!14576, !14577}
!14576 = !DILocalVariable(name: "key", scope: !14574, file: !6962, line: 44, type: !32)
!14577 = !DILocalVariable(name: "tmp", scope: !14574, file: !6962, line: 53, type: !32)
!14578 = distinct !DILocation(line: 62, column: 10, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14566, file: !14563, line: 41, column: 15)
!14580 = !{i64 1949513}
!14581 = !DILocation(line: 0, scope: !14574, inlinedAt: !14578)
!14582 = !DILocation(line: 86, column: 3, scope: !14579)
!14583 = distinct !{!14583, !14572, !14584}
!14584 = !DILocation(line: 105, column: 2, scope: !14566)
!14585 = distinct !DISubprogram(name: "k_cpu_idle", scope: !137, file: !137, line: 5627, type: !334, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !251)
!14586 = !DILocation(line: 5629, column: 2, scope: !14585)
!14587 = !DILocation(line: 5630, column: 1, scope: !14585)
!14588 = !DISubprogram(name: "arch_cpu_idle", scope: !314, file: !314, line: 167, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14589 = distinct !DISubprogram(name: "k_msgq_init", scope: !14590, file: !14590, line: 35, type: !14591, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14606)
!14590 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14591 = !DISubroutineType(types: !14592)
!14592 = !{null, !14593, !277, !132, !108}
!14593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14594, size: 32)
!14594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !14595)
!14595 = !{!14596, !14597, !14598, !14599, !14600, !14601, !14602, !14603, !14604, !14605}
!14596 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14594, file: !137, line: 4206, baseType: !3251, size: 64)
!14597 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14594, file: !137, line: 4208, baseType: !3313, offset: 64)
!14598 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14594, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!14599 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14594, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!14600 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14594, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!14601 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14594, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!14602 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14594, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!14603 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14594, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!14604 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14594, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!14605 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14594, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!14606 = !{!14607, !14608, !14609, !14610}
!14607 = !DILocalVariable(name: "msgq", arg: 1, scope: !14589, file: !14590, line: 35, type: !14593)
!14608 = !DILocalVariable(name: "buffer", arg: 2, scope: !14589, file: !14590, line: 35, type: !277)
!14609 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14589, file: !14590, line: 35, type: !132)
!14610 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14589, file: !14590, line: 36, type: !108)
!14611 = !DILocation(line: 0, scope: !14589)
!14612 = !DILocation(line: 38, column: 8, scope: !14589)
!14613 = !DILocation(line: 38, column: 17, scope: !14589)
!14614 = !DILocation(line: 39, column: 8, scope: !14589)
!14615 = !DILocation(line: 39, column: 17, scope: !14589)
!14616 = !DILocation(line: 40, column: 8, scope: !14589)
!14617 = !DILocation(line: 40, column: 21, scope: !14589)
!14618 = !DILocation(line: 41, column: 40, scope: !14589)
!14619 = !DILocation(line: 41, column: 28, scope: !14589)
!14620 = !DILocation(line: 41, column: 8, scope: !14589)
!14621 = !DILocation(line: 41, column: 19, scope: !14589)
!14622 = !DILocation(line: 42, column: 8, scope: !14589)
!14623 = !DILocation(line: 42, column: 17, scope: !14589)
!14624 = !DILocation(line: 43, column: 8, scope: !14589)
!14625 = !DILocation(line: 43, column: 18, scope: !14589)
!14626 = !DILocation(line: 44, column: 8, scope: !14589)
!14627 = !DILocation(line: 44, column: 18, scope: !14589)
!14628 = !DILocation(line: 45, column: 8, scope: !14589)
!14629 = !DILocation(line: 45, column: 14, scope: !14589)
!14630 = !DILocation(line: 46, column: 22, scope: !14589)
!14631 = !DILocation(line: 46, column: 2, scope: !14589)
!14632 = !DILocation(line: 55, column: 1, scope: !14589)
!14633 = distinct !DISubprogram(name: "z_waitq_init", scope: !14251, file: !14251, line: 47, type: !14634, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14636)
!14634 = !DISubroutineType(types: !14635)
!14635 = !{null, !3250}
!14636 = !{!14637}
!14637 = !DILocalVariable(name: "w", arg: 1, scope: !14633, file: !14251, line: 47, type: !3250)
!14638 = !DILocation(line: 0, scope: !14633)
!14639 = !DILocation(line: 49, column: 21, scope: !14633)
!14640 = !DILocation(line: 49, column: 2, scope: !14633)
!14641 = !DILocation(line: 50, column: 1, scope: !14633)
!14642 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14643, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14646)
!14643 = !DISubroutineType(types: !14644)
!14644 = !{null, !14645}
!14645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3255, size: 32)
!14646 = !{!14647}
!14647 = !DILocalVariable(name: "list", arg: 1, scope: !14642, file: !146, line: 197, type: !14645)
!14648 = !DILocation(line: 0, scope: !14642)
!14649 = !DILocation(line: 199, column: 8, scope: !14642)
!14650 = !DILocation(line: 199, column: 13, scope: !14642)
!14651 = !DILocation(line: 200, column: 8, scope: !14642)
!14652 = !DILocation(line: 200, column: 13, scope: !14642)
!14653 = !DILocation(line: 201, column: 1, scope: !14642)
!14654 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14590, file: !14590, line: 57, type: !14655, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14657)
!14655 = !DISubroutineType(types: !14656)
!14656 = !{!103, !14593, !132, !108}
!14657 = !{!14658, !14659, !14660, !14661, !14662, !14663}
!14658 = !DILocalVariable(name: "msgq", arg: 1, scope: !14654, file: !14590, line: 57, type: !14593)
!14659 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14654, file: !14590, line: 57, type: !132)
!14660 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14654, file: !14590, line: 58, type: !108)
!14661 = !DILocalVariable(name: "buffer", scope: !14654, file: !14590, line: 60, type: !102)
!14662 = !DILocalVariable(name: "ret", scope: !14654, file: !14590, line: 61, type: !103)
!14663 = !DILocalVariable(name: "total_size", scope: !14654, file: !14590, line: 62, type: !132)
!14664 = !DILocation(line: 0, scope: !14654)
!14665 = !DILocation(line: 62, column: 2, scope: !14654)
!14666 = !DILocation(line: 66, column: 6, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14654, file: !14590, line: 66, column: 6)
!14668 = !DILocation(line: 66, column: 6, scope: !14654)
!14669 = !DILocation(line: 69, column: 28, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14667, file: !14590, line: 68, column: 9)
!14671 = !DILocation(line: 69, column: 12, scope: !14670)
!14672 = !DILocation(line: 70, column: 14, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14670, file: !14590, line: 70, column: 7)
!14674 = !DILocation(line: 70, column: 7, scope: !14670)
!14675 = !DILocation(line: 71, column: 4, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14673, file: !14590, line: 70, column: 23)
!14677 = !DILocation(line: 72, column: 10, scope: !14676)
!14678 = !DILocation(line: 72, column: 16, scope: !14676)
!14679 = !DILocation(line: 74, column: 3, scope: !14676)
!14680 = !DILocation(line: 0, scope: !14667)
!14681 = !DILocation(line: 82, column: 1, scope: !14654)
!14682 = !DILocation(line: 81, column: 2, scope: !14654)
!14683 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14684, file: !14684, line: 105, type: !14685, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14687)
!14684 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14685 = !DISubroutineType(types: !14686)
!14686 = !{!131, !132, !132, !2685}
!14687 = !{!14688, !14689, !14690}
!14688 = !DILocalVariable(name: "a", arg: 1, scope: !14683, file: !14684, line: 105, type: !132)
!14689 = !DILocalVariable(name: "b", arg: 2, scope: !14683, file: !14684, line: 105, type: !132)
!14690 = !DILocalVariable(name: "result", arg: 3, scope: !14683, file: !14684, line: 105, type: !2685)
!14691 = !DILocation(line: 0, scope: !14683)
!14692 = !DILocation(line: 107, column: 9, scope: !14683)
!14693 = !DILocation(line: 107, column: 2, scope: !14683)
!14694 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14695, file: !14695, line: 102, type: !14696, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14697)
!14695 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14696 = !DISubroutineType(types: !3194)
!14697 = !{!14698}
!14698 = !DILocalVariable(name: "size", arg: 1, scope: !14694, file: !14695, line: 102, type: !132)
!14699 = !DILocation(line: 0, scope: !14694)
!14700 = !DILocation(line: 104, column: 9, scope: !14694)
!14701 = !DILocation(line: 104, column: 2, scope: !14694)
!14702 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14590, file: !14590, line: 95, type: !14703, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14705)
!14703 = !DISubroutineType(types: !14704)
!14704 = !{!103, !14593}
!14705 = !{!14706}
!14706 = !DILocalVariable(name: "msgq", arg: 1, scope: !14702, file: !14590, line: 95, type: !14593)
!14707 = !DILocation(line: 0, scope: !14702)
!14708 = !DILocation(line: 99, column: 2, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14702, file: !14590, line: 99, column: 2)
!14710 = !DILocation(line: 99, column: 2, scope: !14702)
!14711 = !DILocation(line: 105, column: 13, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14702, file: !14590, line: 105, column: 6)
!14713 = !DILocation(line: 105, column: 19, scope: !14712)
!14714 = !DILocation(line: 105, column: 40, scope: !14712)
!14715 = !DILocation(line: 105, column: 6, scope: !14702)
!14716 = !DILocation(line: 106, column: 16, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14712, file: !14590, line: 105, column: 47)
!14718 = !DILocation(line: 106, column: 3, scope: !14717)
!14719 = !DILocation(line: 107, column: 15, scope: !14717)
!14720 = !DILocation(line: 108, column: 2, scope: !14717)
!14721 = !DILocation(line: 113, column: 1, scope: !14702)
!14722 = distinct !DISubprogram(name: "z_waitq_head", scope: !14251, file: !14251, line: 52, type: !14723, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14725)
!14723 = !DISubroutineType(types: !14724)
!14724 = !{!3233, !3250}
!14725 = !{!14726}
!14726 = !DILocalVariable(name: "w", arg: 1, scope: !14722, file: !14251, line: 52, type: !3250)
!14727 = !DILocation(line: 0, scope: !14722)
!14728 = !DILocation(line: 54, column: 52, scope: !14722)
!14729 = !DILocation(line: 54, column: 28, scope: !14722)
!14730 = !DILocation(line: 54, column: 9, scope: !14722)
!14731 = !DILocation(line: 54, column: 2, scope: !14722)
!14732 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !14733, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14735)
!14733 = !DISubroutineType(types: !14734)
!14734 = !{!3218, !14645}
!14735 = !{!14736}
!14736 = !DILocalVariable(name: "list", arg: 1, scope: !14732, file: !146, line: 294, type: !14645)
!14737 = !DILocation(line: 0, scope: !14732)
!14738 = !DILocation(line: 296, column: 9, scope: !14732)
!14739 = !DILocation(line: 296, column: 49, scope: !14732)
!14740 = !DILocation(line: 296, column: 2, scope: !14732)
!14741 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !14742, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14744)
!14742 = !DISubroutineType(types: !14743)
!14743 = !{!131, !14645}
!14744 = !{!14745}
!14745 = !DILocalVariable(name: "list", arg: 1, scope: !14741, file: !146, line: 266, type: !14645)
!14746 = !DILocation(line: 0, scope: !14741)
!14747 = !DILocation(line: 268, column: 15, scope: !14741)
!14748 = !DILocation(line: 268, column: 20, scope: !14741)
!14749 = !DILocation(line: 268, column: 2, scope: !14741)
!14750 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14590, file: !14590, line: 116, type: !14751, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14757)
!14751 = !DISubroutineType(types: !14752)
!14752 = !{!103, !14593, !13, !14753}
!14753 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14754)
!14754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14755)
!14755 = !{!14756}
!14756 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14754, file: !105, line: 66, baseType: !104, size: 64)
!14757 = !{!14758, !14759, !14760, !14761, !14762, !14767}
!14758 = !DILocalVariable(name: "msgq", arg: 1, scope: !14750, file: !14590, line: 116, type: !14593)
!14759 = !DILocalVariable(name: "data", arg: 2, scope: !14750, file: !14590, line: 116, type: !13)
!14760 = !DILocalVariable(name: "timeout", arg: 3, scope: !14750, file: !14590, line: 116, type: !14753)
!14761 = !DILocalVariable(name: "pending_thread", scope: !14750, file: !14590, line: 120, type: !3233)
!14762 = !DILocalVariable(name: "key", scope: !14750, file: !14590, line: 121, type: !14763)
!14763 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !14764)
!14764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !14765)
!14765 = !{!14766}
!14766 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14764, file: !250, line: 33, baseType: !103, size: 32)
!14767 = !DILocalVariable(name: "result", scope: !14750, file: !14590, line: 122, type: !103)
!14768 = !DILocation(line: 0, scope: !14750)
!14769 = !DILocation(line: 124, column: 27, scope: !14750)
!14770 = !DILocalVariable(name: "l", arg: 1, scope: !14771, file: !250, line: 136, type: !14774)
!14771 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !14772, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14775)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{!14763, !14774}
!14774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 32)
!14775 = !{!14770, !14776}
!14776 = !DILocalVariable(name: "k", scope: !14771, file: !250, line: 139, type: !14763)
!14777 = !DILocation(line: 0, scope: !14771, inlinedAt: !14778)
!14778 = distinct !DILocation(line: 124, column: 8, scope: !14750)
!14779 = !DILocation(line: 55, column: 2, scope: !14780, inlinedAt: !14784)
!14780 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14781)
!14781 = !{!14782, !14783}
!14782 = !DILocalVariable(name: "key", scope: !14780, file: !6962, line: 44, type: !32)
!14783 = !DILocalVariable(name: "tmp", scope: !14780, file: !6962, line: 53, type: !32)
!14784 = distinct !DILocation(line: 145, column: 10, scope: !14771, inlinedAt: !14778)
!14785 = !{i64 1955650}
!14786 = !DILocation(line: 0, scope: !14780, inlinedAt: !14784)
!14787 = !DILocation(line: 128, column: 12, scope: !14788)
!14788 = distinct !DILexicalBlock(scope: !14750, file: !14590, line: 128, column: 6)
!14789 = !DILocation(line: 128, column: 30, scope: !14788)
!14790 = !DILocation(line: 128, column: 22, scope: !14788)
!14791 = !DILocation(line: 128, column: 6, scope: !14750)
!14792 = !DILocation(line: 130, column: 49, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14788, file: !14590, line: 128, column: 40)
!14794 = !DILocation(line: 130, column: 20, scope: !14793)
!14795 = !DILocation(line: 131, column: 22, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14793, file: !14590, line: 131, column: 7)
!14797 = !DILocation(line: 131, column: 7, scope: !14793)
!14798 = !DILocation(line: 135, column: 38, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14796, file: !14590, line: 131, column: 31)
!14800 = !DILocation(line: 136, column: 17, scope: !14799)
!14801 = !DILocation(line: 135, column: 10, scope: !14799)
!14802 = !DILocalVariable(name: "thread", arg: 1, scope: !14803, file: !13946, line: 65, type: !3233)
!14803 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13946, file: !13946, line: 65, type: !14804, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14806)
!14804 = !DISubroutineType(types: !14805)
!14805 = !{null, !3233, !32}
!14806 = !{!14802, !14807}
!14807 = !DILocalVariable(name: "value", arg: 2, scope: !14803, file: !13946, line: 65, type: !32)
!14808 = !DILocation(line: 0, scope: !14803, inlinedAt: !14809)
!14809 = distinct !DILocation(line: 138, column: 4, scope: !14799)
!14810 = !DILocation(line: 67, column: 15, scope: !14803, inlinedAt: !14809)
!14811 = !DILocation(line: 67, column: 33, scope: !14803, inlinedAt: !14809)
!14812 = !DILocation(line: 139, column: 4, scope: !14799)
!14813 = !DILocation(line: 140, column: 4, scope: !14799)
!14814 = !DILocation(line: 141, column: 4, scope: !14799)
!14815 = !DILocation(line: 144, column: 23, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14796, file: !14590, line: 142, column: 10)
!14817 = !DILocation(line: 144, column: 46, scope: !14816)
!14818 = !DILocation(line: 144, column: 10, scope: !14816)
!14819 = !DILocation(line: 145, column: 29, scope: !14816)
!14820 = !DILocation(line: 145, column: 20, scope: !14816)
!14821 = !DILocation(line: 146, column: 33, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14816, file: !14590, line: 146, column: 8)
!14823 = !DILocation(line: 146, column: 24, scope: !14822)
!14824 = !DILocation(line: 146, column: 8, scope: !14816)
!14825 = !DILocation(line: 147, column: 29, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14822, file: !14590, line: 146, column: 45)
!14827 = !DILocation(line: 147, column: 21, scope: !14826)
!14828 = !DILocation(line: 148, column: 4, scope: !14826)
!14829 = !DILocation(line: 149, column: 19, scope: !14816)
!14830 = !DILocation(line: 155, column: 2, scope: !14793)
!14831 = !DILocation(line: 155, column: 13, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14788, file: !14590, line: 155, column: 13)
!14833 = !DILocation(line: 155, column: 13, scope: !14788)
!14834 = !DILocation(line: 162, column: 3, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14832, file: !14590, line: 158, column: 9)
!14836 = !DILocation(line: 162, column: 18, scope: !14835)
!14837 = !DILocation(line: 162, column: 28, scope: !14835)
!14838 = !DILocation(line: 164, column: 49, scope: !14835)
!14839 = !DILocation(line: 164, column: 12, scope: !14835)
!14840 = !DILocation(line: 166, column: 3, scope: !14835)
!14841 = !DILocation(line: 0, scope: !14788)
!14842 = !DILocalVariable(name: "key", arg: 2, scope: !14843, file: !250, line: 190, type: !14763)
!14843 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !14844, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14846)
!14844 = !DISubroutineType(types: !14845)
!14845 = !{null, !14774, !14763}
!14846 = !{!14847, !14842}
!14847 = !DILocalVariable(name: "l", arg: 1, scope: !14843, file: !250, line: 189, type: !14774)
!14848 = !DILocation(line: 0, scope: !14843, inlinedAt: !14849)
!14849 = distinct !DILocation(line: 171, column: 2, scope: !14750)
!14850 = !DILocalVariable(name: "key", arg: 1, scope: !14851, file: !6962, line: 84, type: !32)
!14851 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14852)
!14852 = !{!14850}
!14853 = !DILocation(line: 0, scope: !14851, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 215, column: 2, scope: !14843, inlinedAt: !14849)
!14855 = !DILocation(line: 95, column: 2, scope: !14851, inlinedAt: !14854)
!14856 = !{i64 1956467}
!14857 = !DILocation(line: 173, column: 2, scope: !14750)
!14858 = !DILocation(line: 174, column: 1, scope: !14750)
!14859 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14590, file: !14590, line: 188, type: !14860, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14868)
!14860 = !DISubroutineType(types: !14861)
!14861 = !{null, !14593, !14862}
!14862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14863, size: 32)
!14863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !137, line: 4259, size: 96, elements: !14864)
!14864 = !{!14865, !14866, !14867}
!14865 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14863, file: !137, line: 4261, baseType: !132, size: 32)
!14866 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14863, file: !137, line: 4263, baseType: !108, size: 32, offset: 32)
!14867 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14863, file: !137, line: 4265, baseType: !108, size: 32, offset: 64)
!14868 = !{!14869, !14870}
!14869 = !DILocalVariable(name: "msgq", arg: 1, scope: !14859, file: !14590, line: 188, type: !14593)
!14870 = !DILocalVariable(name: "attrs", arg: 2, scope: !14859, file: !14590, line: 188, type: !14862)
!14871 = !DILocation(line: 0, scope: !14859)
!14872 = !DILocation(line: 190, column: 26, scope: !14859)
!14873 = !DILocation(line: 190, column: 9, scope: !14859)
!14874 = !DILocation(line: 190, column: 18, scope: !14859)
!14875 = !DILocation(line: 191, column: 26, scope: !14859)
!14876 = !DILocation(line: 191, column: 9, scope: !14859)
!14877 = !DILocation(line: 191, column: 18, scope: !14859)
!14878 = !DILocation(line: 192, column: 27, scope: !14859)
!14879 = !DILocation(line: 192, column: 9, scope: !14859)
!14880 = !DILocation(line: 192, column: 19, scope: !14859)
!14881 = !DILocation(line: 193, column: 1, scope: !14859)
!14882 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14590, file: !14590, line: 206, type: !14883, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14885)
!14883 = !DISubroutineType(types: !14884)
!14884 = !{!103, !14593, !102, !14753}
!14885 = !{!14886, !14887, !14888, !14889, !14890, !14891}
!14886 = !DILocalVariable(name: "msgq", arg: 1, scope: !14882, file: !14590, line: 206, type: !14593)
!14887 = !DILocalVariable(name: "data", arg: 2, scope: !14882, file: !14590, line: 206, type: !102)
!14888 = !DILocalVariable(name: "timeout", arg: 3, scope: !14882, file: !14590, line: 206, type: !14753)
!14889 = !DILocalVariable(name: "key", scope: !14882, file: !14590, line: 210, type: !14763)
!14890 = !DILocalVariable(name: "pending_thread", scope: !14882, file: !14590, line: 211, type: !3233)
!14891 = !DILocalVariable(name: "result", scope: !14882, file: !14590, line: 212, type: !103)
!14892 = !DILocation(line: 0, scope: !14882)
!14893 = !DILocation(line: 214, column: 27, scope: !14882)
!14894 = !DILocation(line: 0, scope: !14771, inlinedAt: !14895)
!14895 = distinct !DILocation(line: 214, column: 8, scope: !14882)
!14896 = !DILocation(line: 55, column: 2, scope: !14780, inlinedAt: !14897)
!14897 = distinct !DILocation(line: 145, column: 10, scope: !14771, inlinedAt: !14895)
!14898 = !DILocation(line: 0, scope: !14780, inlinedAt: !14897)
!14899 = !DILocation(line: 218, column: 12, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14882, file: !14590, line: 218, column: 6)
!14901 = !DILocation(line: 218, column: 22, scope: !14900)
!14902 = !DILocation(line: 218, column: 6, scope: !14882)
!14903 = !DILocation(line: 220, column: 28, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14900, file: !14590, line: 218, column: 28)
!14905 = !DILocation(line: 220, column: 44, scope: !14904)
!14906 = !DILocation(line: 220, column: 9, scope: !14904)
!14907 = !DILocation(line: 221, column: 27, scope: !14904)
!14908 = !DILocation(line: 221, column: 18, scope: !14904)
!14909 = !DILocation(line: 222, column: 31, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14904, file: !14590, line: 222, column: 7)
!14911 = !DILocation(line: 222, column: 22, scope: !14910)
!14912 = !DILocation(line: 222, column: 7, scope: !14904)
!14913 = !DILocation(line: 223, column: 27, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14910, file: !14590, line: 222, column: 43)
!14915 = !DILocation(line: 223, column: 19, scope: !14914)
!14916 = !DILocation(line: 224, column: 3, scope: !14914)
!14917 = !DILocation(line: 225, column: 18, scope: !14904)
!14918 = !DILocation(line: 228, column: 49, scope: !14904)
!14919 = !DILocation(line: 228, column: 20, scope: !14904)
!14920 = !DILocation(line: 229, column: 22, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14904, file: !14590, line: 229, column: 7)
!14922 = !DILocation(line: 229, column: 7, scope: !14904)
!14923 = !DILocation(line: 233, column: 23, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14921, file: !14590, line: 229, column: 31)
!14925 = !DILocation(line: 233, column: 55, scope: !14924)
!14926 = !DILocation(line: 234, column: 17, scope: !14924)
!14927 = !DILocation(line: 233, column: 10, scope: !14924)
!14928 = !DILocation(line: 235, column: 29, scope: !14924)
!14929 = !DILocation(line: 235, column: 20, scope: !14924)
!14930 = !DILocation(line: 236, column: 33, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14924, file: !14590, line: 236, column: 8)
!14932 = !DILocation(line: 236, column: 24, scope: !14931)
!14933 = !DILocation(line: 236, column: 8, scope: !14924)
!14934 = !DILocation(line: 237, column: 29, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14931, file: !14590, line: 236, column: 45)
!14936 = !DILocation(line: 237, column: 21, scope: !14935)
!14937 = !DILocation(line: 238, column: 4, scope: !14935)
!14938 = !DILocation(line: 239, column: 19, scope: !14924)
!14939 = !DILocation(line: 0, scope: !14803, inlinedAt: !14940)
!14940 = distinct !DILocation(line: 242, column: 4, scope: !14924)
!14941 = !DILocation(line: 67, column: 15, scope: !14803, inlinedAt: !14940)
!14942 = !DILocation(line: 67, column: 33, scope: !14803, inlinedAt: !14940)
!14943 = !DILocation(line: 243, column: 4, scope: !14924)
!14944 = !DILocation(line: 244, column: 4, scope: !14924)
!14945 = !DILocation(line: 248, column: 4, scope: !14924)
!14946 = !DILocation(line: 251, column: 13, scope: !14947)
!14947 = distinct !DILexicalBlock(scope: !14900, file: !14590, line: 251, column: 13)
!14948 = !DILocation(line: 251, column: 13, scope: !14900)
!14949 = !DILocation(line: 258, column: 3, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14947, file: !14590, line: 254, column: 9)
!14951 = !DILocation(line: 258, column: 18, scope: !14950)
!14952 = !DILocation(line: 258, column: 28, scope: !14950)
!14953 = !DILocation(line: 260, column: 49, scope: !14950)
!14954 = !DILocation(line: 260, column: 12, scope: !14950)
!14955 = !DILocation(line: 262, column: 3, scope: !14950)
!14956 = !DILocation(line: 0, scope: !14900)
!14957 = !DILocation(line: 0, scope: !14843, inlinedAt: !14958)
!14958 = distinct !DILocation(line: 267, column: 2, scope: !14882)
!14959 = !DILocation(line: 0, scope: !14851, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 215, column: 2, scope: !14843, inlinedAt: !14958)
!14961 = !DILocation(line: 95, column: 2, scope: !14851, inlinedAt: !14960)
!14962 = !DILocation(line: 269, column: 2, scope: !14882)
!14963 = !DILocation(line: 270, column: 1, scope: !14882)
!14964 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14590, file: !14590, line: 284, type: !14965, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14967)
!14965 = !DISubroutineType(types: !14966)
!14966 = !{!103, !14593, !102}
!14967 = !{!14968, !14969, !14970, !14971}
!14968 = !DILocalVariable(name: "msgq", arg: 1, scope: !14964, file: !14590, line: 284, type: !14593)
!14969 = !DILocalVariable(name: "data", arg: 2, scope: !14964, file: !14590, line: 284, type: !102)
!14970 = !DILocalVariable(name: "key", scope: !14964, file: !14590, line: 286, type: !14763)
!14971 = !DILocalVariable(name: "result", scope: !14964, file: !14590, line: 287, type: !103)
!14972 = !DILocation(line: 0, scope: !14964)
!14973 = !DILocation(line: 0, scope: !14771, inlinedAt: !14974)
!14974 = distinct !DILocation(line: 289, column: 8, scope: !14964)
!14975 = !DILocation(line: 55, column: 2, scope: !14780, inlinedAt: !14976)
!14976 = distinct !DILocation(line: 145, column: 10, scope: !14771, inlinedAt: !14974)
!14977 = !DILocation(line: 0, scope: !14780, inlinedAt: !14976)
!14978 = !DILocation(line: 291, column: 12, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14964, file: !14590, line: 291, column: 6)
!14980 = !DILocation(line: 291, column: 22, scope: !14979)
!14981 = !DILocation(line: 291, column: 6, scope: !14964)
!14982 = !DILocation(line: 293, column: 28, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14979, file: !14590, line: 291, column: 28)
!14984 = !DILocation(line: 293, column: 44, scope: !14983)
!14985 = !DILocation(line: 293, column: 9, scope: !14983)
!14986 = !DILocation(line: 295, column: 2, scope: !14983)
!14987 = !DILocation(line: 0, scope: !14979)
!14988 = !DILocation(line: 0, scope: !14843, inlinedAt: !14989)
!14989 = distinct !DILocation(line: 302, column: 2, scope: !14964)
!14990 = !DILocation(line: 0, scope: !14851, inlinedAt: !14991)
!14991 = distinct !DILocation(line: 215, column: 2, scope: !14843, inlinedAt: !14989)
!14992 = !DILocation(line: 95, column: 2, scope: !14851, inlinedAt: !14991)
!14993 = !DILocation(line: 304, column: 2, scope: !14964)
!14994 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14590, file: !14590, line: 318, type: !14995, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !14997)
!14995 = !DISubroutineType(types: !14996)
!14996 = !{null, !14593}
!14997 = !{!14998, !14999, !15000}
!14998 = !DILocalVariable(name: "msgq", arg: 1, scope: !14994, file: !14590, line: 318, type: !14593)
!14999 = !DILocalVariable(name: "key", scope: !14994, file: !14590, line: 320, type: !14763)
!15000 = !DILocalVariable(name: "pending_thread", scope: !14994, file: !14590, line: 321, type: !3233)
!15001 = !DILocation(line: 0, scope: !14994)
!15002 = !DILocation(line: 0, scope: !14771, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 323, column: 8, scope: !14994)
!15004 = !DILocation(line: 55, column: 2, scope: !14780, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 145, column: 10, scope: !14771, inlinedAt: !15003)
!15006 = !DILocation(line: 0, scope: !14780, inlinedAt: !15005)
!15007 = !DILocation(line: 328, column: 27, scope: !14994)
!15008 = !DILocation(line: 328, column: 65, scope: !14994)
!15009 = !DILocation(line: 328, column: 2, scope: !14994)
!15010 = !DILocation(line: 0, scope: !14803, inlinedAt: !15011)
!15011 = distinct !DILocation(line: 329, column: 3, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !14994, file: !14590, line: 328, column: 74)
!15013 = !DILocation(line: 67, column: 15, scope: !14803, inlinedAt: !15011)
!15014 = !DILocation(line: 67, column: 33, scope: !14803, inlinedAt: !15011)
!15015 = !DILocation(line: 330, column: 3, scope: !15012)
!15016 = distinct !{!15016, !15009, !15017}
!15017 = !DILocation(line: 331, column: 2, scope: !14994)
!15018 = !DILocation(line: 323, column: 27, scope: !14994)
!15019 = !DILocation(line: 333, column: 8, scope: !14994)
!15020 = !DILocation(line: 333, column: 18, scope: !14994)
!15021 = !DILocation(line: 334, column: 25, scope: !14994)
!15022 = !DILocation(line: 334, column: 8, scope: !14994)
!15023 = !DILocation(line: 334, column: 17, scope: !14994)
!15024 = !DILocation(line: 336, column: 2, scope: !14994)
!15025 = !DILocation(line: 337, column: 1, scope: !14994)
!15026 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2389, file: !2389, line: 49, type: !15027, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15036)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{!103, !15029}
!15029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15030, size: 32)
!15030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !15031)
!15031 = !{!15032, !15033, !15034, !15035}
!15032 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15030, file: !137, line: 2722, baseType: !2320, size: 64)
!15033 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15030, file: !137, line: 2724, baseType: !2302, size: 32, offset: 64)
!15034 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15030, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!15035 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15030, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!15036 = !{!15037}
!15037 = !DILocalVariable(name: "mutex", arg: 1, scope: !15026, file: !2389, line: 49, type: !15029)
!15038 = !DILocation(line: 0, scope: !15026)
!15039 = !DILocation(line: 51, column: 9, scope: !15026)
!15040 = !DILocation(line: 51, column: 15, scope: !15026)
!15041 = !DILocation(line: 52, column: 9, scope: !15026)
!15042 = !DILocation(line: 52, column: 20, scope: !15026)
!15043 = !DILocation(line: 54, column: 23, scope: !15026)
!15044 = !DILocation(line: 54, column: 2, scope: !15026)
!15045 = !DILocation(line: 60, column: 2, scope: !15026)
!15046 = distinct !DISubprogram(name: "z_waitq_init", scope: !14251, file: !14251, line: 47, type: !15047, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15049)
!15047 = !DISubroutineType(types: !15048)
!15048 = !{null, !2319}
!15049 = !{!15050}
!15050 = !DILocalVariable(name: "w", arg: 1, scope: !15046, file: !14251, line: 47, type: !2319)
!15051 = !DILocation(line: 0, scope: !15046)
!15052 = !DILocation(line: 49, column: 21, scope: !15046)
!15053 = !DILocation(line: 49, column: 2, scope: !15046)
!15054 = !DILocation(line: 50, column: 1, scope: !15046)
!15055 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !15056, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15059)
!15056 = !DISubroutineType(types: !15057)
!15057 = !{null, !15058}
!15058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!15059 = !{!15060}
!15060 = !DILocalVariable(name: "list", arg: 1, scope: !15055, file: !146, line: 197, type: !15058)
!15061 = !DILocation(line: 0, scope: !15055)
!15062 = !DILocation(line: 199, column: 8, scope: !15055)
!15063 = !DILocation(line: 199, column: 13, scope: !15055)
!15064 = !DILocation(line: 200, column: 8, scope: !15055)
!15065 = !DILocation(line: 200, column: 13, scope: !15055)
!15066 = !DILocation(line: 201, column: 1, scope: !15055)
!15067 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2389, file: !2389, line: 95, type: !15068, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15074)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{!103, !15029, !15070}
!15070 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15071)
!15071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15072)
!15072 = !{!15073}
!15073 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15071, file: !105, line: 66, baseType: !104, size: 64)
!15074 = !{!15075, !15076, !15077, !15078, !15083, !15084, !15085}
!15075 = !DILocalVariable(name: "mutex", arg: 1, scope: !15067, file: !2389, line: 95, type: !15029)
!15076 = !DILocalVariable(name: "timeout", arg: 2, scope: !15067, file: !2389, line: 95, type: !15070)
!15077 = !DILocalVariable(name: "new_prio", scope: !15067, file: !2389, line: 97, type: !103)
!15078 = !DILocalVariable(name: "key", scope: !15067, file: !2389, line: 98, type: !15079)
!15079 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15080)
!15080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15081)
!15081 = !{!15082}
!15082 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15080, file: !250, line: 33, baseType: !103, size: 32)
!15083 = !DILocalVariable(name: "resched", scope: !15067, file: !2389, line: 99, type: !131)
!15084 = !DILocalVariable(name: "got_mutex", scope: !15067, file: !2389, line: 146, type: !103)
!15085 = !DILocalVariable(name: "waiter", scope: !15086, file: !2389, line: 169, type: !2302)
!15086 = distinct !DILexicalBlock(scope: !15087, file: !2389, line: 168, column: 36)
!15087 = distinct !DILexicalBlock(scope: !15067, file: !2389, line: 168, column: 6)
!15088 = !DILocation(line: 0, scope: !15067)
!15089 = !DILocalVariable(name: "l", arg: 1, scope: !15090, file: !250, line: 136, type: !15093)
!15090 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15091, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15094)
!15091 = !DISubroutineType(types: !15092)
!15092 = !{!15079, !15093}
!15093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!15094 = !{!15089, !15095}
!15095 = !DILocalVariable(name: "k", scope: !15090, file: !250, line: 139, type: !15079)
!15096 = !DILocation(line: 0, scope: !15090, inlinedAt: !15097)
!15097 = distinct !DILocation(line: 105, column: 8, scope: !15067)
!15098 = !DILocation(line: 55, column: 2, scope: !15099, inlinedAt: !15103)
!15099 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15100)
!15100 = !{!15101, !15102}
!15101 = !DILocalVariable(name: "key", scope: !15099, file: !6962, line: 44, type: !32)
!15102 = !DILocalVariable(name: "tmp", scope: !15099, file: !6962, line: 53, type: !32)
!15103 = distinct !DILocation(line: 145, column: 10, scope: !15090, inlinedAt: !15097)
!15104 = !{i64 1953921}
!15105 = !DILocation(line: 0, scope: !15099, inlinedAt: !15103)
!15106 = !DILocation(line: 107, column: 6, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !15067, file: !2389, line: 107, column: 6)
!15108 = !DILocation(line: 107, column: 6, scope: !15067)
!15109 = !{!"branch_weights", i32 2000, i32 1}
!15110 = !DILocation(line: 110, column: 6, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15107, file: !2389, line: 107, column: 71)
!15112 = !DILocation(line: 110, column: 21, scope: !15111)
!15113 = !DILocation(line: 109, column: 28, scope: !15111)
!15114 = !DILocation(line: 111, column: 13, scope: !15111)
!15115 = !DILocation(line: 114, column: 18, scope: !15111)
!15116 = !DILocation(line: 109, column: 10, scope: !15111)
!15117 = !DILocation(line: 109, column: 26, scope: !15111)
!15118 = !DILocation(line: 113, column: 20, scope: !15111)
!15119 = !DILocation(line: 114, column: 10, scope: !15111)
!15120 = !DILocation(line: 114, column: 16, scope: !15111)
!15121 = !DILocalVariable(name: "key", arg: 2, scope: !15122, file: !250, line: 190, type: !15079)
!15122 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15123, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15125)
!15123 = !DISubroutineType(types: !15124)
!15124 = !{null, !15093, !15079}
!15125 = !{!15126, !15121}
!15126 = !DILocalVariable(name: "l", arg: 1, scope: !15122, file: !250, line: 189, type: !15093)
!15127 = !DILocation(line: 0, scope: !15122, inlinedAt: !15128)
!15128 = distinct !DILocation(line: 120, column: 3, scope: !15111)
!15129 = !DILocalVariable(name: "key", arg: 1, scope: !15130, file: !6962, line: 84, type: !32)
!15130 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15131)
!15131 = !{!15129}
!15132 = !DILocation(line: 0, scope: !15130, inlinedAt: !15133)
!15133 = distinct !DILocation(line: 215, column: 2, scope: !15122, inlinedAt: !15128)
!15134 = !DILocation(line: 95, column: 2, scope: !15130, inlinedAt: !15133)
!15135 = !{i64 1954738}
!15136 = !DILocation(line: 124, column: 3, scope: !15111)
!15137 = !DILocation(line: 127, column: 6, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15067, file: !2389, line: 127, column: 6)
!15139 = !DILocation(line: 127, column: 6, scope: !15067)
!15140 = !{!"branch_weights", i32 1, i32 2000}
!15141 = !DILocation(line: 0, scope: !15122, inlinedAt: !15142)
!15142 = distinct !DILocation(line: 128, column: 3, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15138, file: !2389, line: 127, column: 50)
!15144 = !DILocation(line: 0, scope: !15130, inlinedAt: !15145)
!15145 = distinct !DILocation(line: 215, column: 2, scope: !15122, inlinedAt: !15142)
!15146 = !DILocation(line: 95, column: 2, scope: !15130, inlinedAt: !15145)
!15147 = !DILocation(line: 132, column: 3, scope: !15143)
!15148 = !DILocation(line: 137, column: 53, scope: !15067)
!15149 = !DILocation(line: 137, column: 38, scope: !15067)
!15150 = !DILocation(line: 138, column: 29, scope: !15067)
!15151 = !DILocation(line: 138, column: 10, scope: !15067)
!15152 = !DILocation(line: 137, column: 13, scope: !15067)
!15153 = !DILocation(line: 142, column: 6, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15067, file: !2389, line: 142, column: 6)
!15155 = !DILocation(line: 142, column: 6, scope: !15067)
!15156 = !DILocation(line: 143, column: 13, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15154, file: !2389, line: 142, column: 59)
!15158 = !DILocation(line: 144, column: 2, scope: !15157)
!15159 = !DILocation(line: 146, column: 50, scope: !15067)
!15160 = !DILocation(line: 146, column: 18, scope: !15067)
!15161 = !DILocation(line: 153, column: 16, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15067, file: !2389, line: 153, column: 6)
!15163 = !DILocation(line: 153, column: 6, scope: !15067)
!15164 = !DILocation(line: 0, scope: !15090, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 162, column: 8, scope: !15067)
!15166 = !DILocation(line: 55, column: 2, scope: !15099, inlinedAt: !15167)
!15167 = distinct !DILocation(line: 145, column: 10, scope: !15090, inlinedAt: !15165)
!15168 = !DILocation(line: 0, scope: !15099, inlinedAt: !15167)
!15169 = !DILocation(line: 168, column: 6, scope: !15087)
!15170 = !DILocation(line: 168, column: 6, scope: !15067)
!15171 = !DILocation(line: 169, column: 29, scope: !15086)
!15172 = !DILocation(line: 0, scope: !15086)
!15173 = !DILocation(line: 171, column: 22, scope: !15086)
!15174 = !DILocation(line: 171, column: 14, scope: !15086)
!15175 = !DILocation(line: 172, column: 42, scope: !15086)
!15176 = !DILocation(line: 172, column: 29, scope: !15086)
!15177 = !DILocation(line: 172, column: 55, scope: !15086)
!15178 = !DILocation(line: 172, column: 4, scope: !15086)
!15179 = !DILocation(line: 173, column: 11, scope: !15086)
!15180 = !DILocation(line: 177, column: 13, scope: !15086)
!15181 = !DILocation(line: 177, column: 48, scope: !15086)
!15182 = !DILocation(line: 180, column: 6, scope: !15067)
!15183 = !DILocation(line: 181, column: 3, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15185, file: !2389, line: 180, column: 15)
!15185 = distinct !DILexicalBlock(scope: !15067, file: !2389, line: 180, column: 6)
!15186 = !DILocation(line: 182, column: 2, scope: !15184)
!15187 = !DILocation(line: 0, scope: !15122, inlinedAt: !15188)
!15188 = distinct !DILocation(line: 183, column: 3, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15185, file: !2389, line: 182, column: 9)
!15190 = !DILocation(line: 0, scope: !15130, inlinedAt: !15191)
!15191 = distinct !DILocation(line: 215, column: 2, scope: !15122, inlinedAt: !15188)
!15192 = !DILocation(line: 95, column: 2, scope: !15130, inlinedAt: !15191)
!15193 = !DILocation(line: 189, column: 1, scope: !15067)
!15194 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2389, file: !2389, line: 72, type: !15195, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15197)
!15195 = !DISubroutineType(types: !15196)
!15196 = !{!331, !331, !331}
!15197 = !{!15198, !15199, !15200}
!15198 = !DILocalVariable(name: "target", arg: 1, scope: !15194, file: !2389, line: 72, type: !331)
!15199 = !DILocalVariable(name: "limit", arg: 2, scope: !15194, file: !2389, line: 72, type: !331)
!15200 = !DILocalVariable(name: "new_prio", scope: !15194, file: !2389, line: 74, type: !103)
!15201 = !DILocation(line: 0, scope: !15194)
!15202 = !DILocation(line: 74, column: 17, scope: !15194)
!15203 = !DILocation(line: 76, column: 13, scope: !15194)
!15204 = !DILocation(line: 78, column: 2, scope: !15194)
!15205 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13926, file: !13926, line: 211, type: !15206, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15208)
!15206 = !DISubroutineType(types: !15207)
!15207 = !{!131, !103, !103}
!15208 = !{!15209, !15210}
!15209 = !DILocalVariable(name: "prio", arg: 1, scope: !15205, file: !13926, line: 211, type: !103)
!15210 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15205, file: !13926, line: 211, type: !103)
!15211 = !DILocation(line: 0, scope: !15205)
!15212 = !DILocation(line: 213, column: 9, scope: !15205)
!15213 = !DILocation(line: 213, column: 2, scope: !15205)
!15214 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2389, file: !2389, line: 81, type: !15215, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15217)
!15215 = !DISubroutineType(types: !15216)
!15216 = !{!131, !15029, !331}
!15217 = !{!15218, !15219}
!15218 = !DILocalVariable(name: "mutex", arg: 1, scope: !15214, file: !2389, line: 81, type: !15029)
!15219 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15214, file: !2389, line: 81, type: !331)
!15220 = !DILocation(line: 0, scope: !15214)
!15221 = !DILocation(line: 83, column: 13, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15214, file: !2389, line: 83, column: 6)
!15223 = !DILocation(line: 83, column: 25, scope: !15222)
!15224 = !DILocation(line: 83, column: 6, scope: !15222)
!15225 = !DILocation(line: 83, column: 30, scope: !15222)
!15226 = !DILocation(line: 83, column: 6, scope: !15214)
!15227 = !DILocation(line: 90, column: 10, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15222, file: !2389, line: 83, column: 43)
!15229 = !DILocation(line: 90, column: 3, scope: !15228)
!15230 = !DILocation(line: 93, column: 1, scope: !15214)
!15231 = distinct !DISubprogram(name: "z_waitq_head", scope: !14251, file: !14251, line: 52, type: !15232, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15234)
!15232 = !DISubroutineType(types: !15233)
!15233 = !{!2302, !2319}
!15234 = !{!15235}
!15235 = !DILocalVariable(name: "w", arg: 1, scope: !15231, file: !14251, line: 52, type: !2319)
!15236 = !DILocation(line: 0, scope: !15231)
!15237 = !DILocation(line: 54, column: 52, scope: !15231)
!15238 = !DILocation(line: 54, column: 28, scope: !15231)
!15239 = !DILocation(line: 54, column: 9, scope: !15231)
!15240 = !DILocation(line: 54, column: 2, scope: !15231)
!15241 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15242, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15244)
!15242 = !DISubroutineType(types: !15243)
!15243 = !{!2287, !15058}
!15244 = !{!15245}
!15245 = !DILocalVariable(name: "list", arg: 1, scope: !15241, file: !146, line: 294, type: !15058)
!15246 = !DILocation(line: 0, scope: !15241)
!15247 = !DILocation(line: 296, column: 9, scope: !15241)
!15248 = !DILocation(line: 296, column: 49, scope: !15241)
!15249 = !DILocation(line: 296, column: 2, scope: !15241)
!15250 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15251, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15253)
!15251 = !DISubroutineType(types: !15252)
!15252 = !{!131, !15058}
!15253 = !{!15254}
!15254 = !DILocalVariable(name: "list", arg: 1, scope: !15250, file: !146, line: 266, type: !15058)
!15255 = !DILocation(line: 0, scope: !15250)
!15256 = !DILocation(line: 268, column: 15, scope: !15250)
!15257 = !DILocation(line: 268, column: 20, scope: !15250)
!15258 = !DILocation(line: 268, column: 2, scope: !15250)
!15259 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13926, file: !13926, line: 206, type: !15206, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15260)
!15260 = !{!15261, !15262}
!15261 = !DILocalVariable(name: "prio1", arg: 1, scope: !15259, file: !13926, line: 206, type: !103)
!15262 = !DILocalVariable(name: "prio2", arg: 2, scope: !15259, file: !13926, line: 206, type: !103)
!15263 = !DILocation(line: 0, scope: !15259)
!15264 = !DILocation(line: 208, column: 15, scope: !15259)
!15265 = !DILocation(line: 208, column: 2, scope: !15259)
!15266 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !13926, file: !13926, line: 186, type: !396, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15267)
!15267 = !{!15268}
!15268 = !DILocalVariable(name: "prio", arg: 1, scope: !15266, file: !13926, line: 186, type: !103)
!15269 = !DILocation(line: 0, scope: !15266)
!15270 = !DILocation(line: 188, column: 9, scope: !15266)
!15271 = !DILocation(line: 188, column: 2, scope: !15266)
!15272 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !13926, file: !13926, line: 181, type: !15273, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15275)
!15273 = !DISubroutineType(types: !15274)
!15274 = !{!131, !103}
!15275 = !{!15276}
!15276 = !DILocalVariable(name: "prio", arg: 1, scope: !15272, file: !13926, line: 181, type: !103)
!15277 = !DILocation(line: 0, scope: !15272)
!15278 = !DILocation(line: 183, column: 14, scope: !15272)
!15279 = !DILocation(line: 183, column: 2, scope: !15272)
!15280 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2389, file: !2389, line: 201, type: !15027, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15281)
!15281 = !{!15282, !15283, !15284, !15285}
!15282 = !DILocalVariable(name: "mutex", arg: 1, scope: !15280, file: !2389, line: 201, type: !15029)
!15283 = !DILocalVariable(name: "new_owner", scope: !15280, file: !2389, line: 203, type: !2302)
!15284 = !DILocalVariable(name: "key", scope: !15280, file: !2389, line: 242, type: !15079)
!15285 = !DILabel(scope: !15280, name: "k_mutex_unlock_return", file: !2389, line: 270)
!15286 = !DILocation(line: 0, scope: !15280)
!15287 = !DILocation(line: 209, column: 2, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15280, file: !2389, line: 209, column: 2)
!15289 = !DILocation(line: 209, column: 2, scope: !15280)
!15290 = !DILocation(line: 217, column: 2, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15280, file: !2389, line: 217, column: 2)
!15292 = !DILocation(line: 217, column: 2, scope: !15280)
!15293 = !DILocation(line: 237, column: 13, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15280, file: !2389, line: 237, column: 6)
!15295 = !DILocation(line: 237, column: 24, scope: !15294)
!15296 = !DILocation(line: 237, column: 6, scope: !15280)
!15297 = !DILocation(line: 238, column: 20, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15294, file: !2389, line: 237, column: 30)
!15299 = !DILocation(line: 239, column: 3, scope: !15298)
!15300 = !DILocation(line: 0, scope: !15090, inlinedAt: !15301)
!15301 = distinct !DILocation(line: 242, column: 25, scope: !15280)
!15302 = !DILocation(line: 55, column: 2, scope: !15099, inlinedAt: !15303)
!15303 = distinct !DILocation(line: 145, column: 10, scope: !15090, inlinedAt: !15301)
!15304 = !DILocation(line: 0, scope: !15099, inlinedAt: !15303)
!15305 = !DILocation(line: 244, column: 34, scope: !15280)
!15306 = !DILocation(line: 244, column: 2, scope: !15280)
!15307 = !DILocation(line: 247, column: 44, scope: !15280)
!15308 = !DILocation(line: 247, column: 14, scope: !15280)
!15309 = !DILocation(line: 249, column: 15, scope: !15280)
!15310 = !DILocation(line: 254, column: 16, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15280, file: !2389, line: 254, column: 6)
!15312 = !DILocation(line: 254, column: 6, scope: !15280)
!15313 = !DILocation(line: 260, column: 44, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15311, file: !2389, line: 254, column: 25)
!15315 = !DILocation(line: 260, column: 28, scope: !15314)
!15316 = !DILocation(line: 260, column: 26, scope: !15314)
!15317 = !DILocalVariable(name: "thread", arg: 1, scope: !15318, file: !13946, line: 65, type: !2302)
!15318 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13946, file: !13946, line: 65, type: !15319, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !15321)
!15319 = !DISubroutineType(types: !15320)
!15320 = !{null, !2302, !32}
!15321 = !{!15317, !15322}
!15322 = !DILocalVariable(name: "value", arg: 2, scope: !15318, file: !13946, line: 65, type: !32)
!15323 = !DILocation(line: 0, scope: !15318, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 261, column: 3, scope: !15314)
!15325 = !DILocation(line: 67, column: 15, scope: !15318, inlinedAt: !15324)
!15326 = !DILocation(line: 67, column: 33, scope: !15318, inlinedAt: !15324)
!15327 = !DILocation(line: 262, column: 3, scope: !15314)
!15328 = !DILocation(line: 263, column: 3, scope: !15314)
!15329 = !DILocation(line: 264, column: 2, scope: !15314)
!15330 = !DILocation(line: 265, column: 21, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15311, file: !2389, line: 264, column: 9)
!15332 = !DILocation(line: 0, scope: !15122, inlinedAt: !15333)
!15333 = distinct !DILocation(line: 266, column: 3, scope: !15331)
!15334 = !DILocation(line: 0, scope: !15130, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 215, column: 2, scope: !15122, inlinedAt: !15333)
!15336 = !DILocation(line: 95, column: 2, scope: !15130, inlinedAt: !15335)
!15337 = !DILocation(line: 274, column: 1, scope: !15280)
!15338 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2500, file: !2500, line: 93, type: !15339, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15341)
!15339 = !DISubroutineType(types: !15340)
!15340 = !{!331, !2395, !2395}
!15341 = !{!15342, !15343, !15344, !15345}
!15342 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15338, file: !2500, line: 93, type: !2395)
!15343 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15338, file: !2500, line: 94, type: !2395)
!15344 = !DILocalVariable(name: "b1", scope: !15338, file: !2500, line: 97, type: !331)
!15345 = !DILocalVariable(name: "b2", scope: !15338, file: !2500, line: 98, type: !331)
!15346 = !DILocation(line: 0, scope: !15338)
!15347 = !DILocation(line: 97, column: 30, scope: !15338)
!15348 = !DILocation(line: 98, column: 30, scope: !15338)
!15349 = !DILocation(line: 100, column: 9, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15338, file: !2500, line: 100, column: 6)
!15351 = !DILocation(line: 100, column: 6, scope: !15338)
!15352 = !DILocation(line: 125, column: 1, scope: !15338)
!15353 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2500, file: !2500, line: 428, type: !15354, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15356)
!15354 = !DISubroutineType(types: !15355)
!15355 = !{null, !2395}
!15356 = !{!15357}
!15357 = !DILocalVariable(name: "curr", arg: 1, scope: !15353, file: !2500, line: 428, type: !2395)
!15358 = !DILocation(line: 0, scope: !15353)
!15359 = !DILocation(line: 434, column: 6, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15353, file: !2500, line: 434, column: 6)
!15361 = !DILocation(line: 434, column: 23, scope: !15360)
!15362 = !DILocation(line: 434, column: 6, scope: !15353)
!15363 = !DILocation(line: 435, column: 50, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15360, file: !2500, line: 434, column: 29)
!15365 = !DILocation(line: 435, column: 48, scope: !15364)
!15366 = !DILocation(line: 435, column: 29, scope: !15364)
!15367 = !DILocation(line: 436, column: 24, scope: !15364)
!15368 = !DILocation(line: 436, column: 3, scope: !15364)
!15369 = !DILocation(line: 437, column: 2, scope: !15364)
!15370 = !DILocation(line: 438, column: 1, scope: !15353)
!15371 = distinct !DISubprogram(name: "slice_time", scope: !2500, file: !2500, line: 407, type: !15372, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15374)
!15372 = !DISubroutineType(types: !15373)
!15373 = !{!103, !2395}
!15374 = !{!15375, !15376}
!15375 = !DILocalVariable(name: "curr", arg: 1, scope: !15371, file: !2500, line: 407, type: !2395)
!15376 = !DILocalVariable(name: "ret", scope: !15371, file: !2500, line: 409, type: !103)
!15377 = !DILocation(line: 0, scope: !15371)
!15378 = !DILocation(line: 409, column: 12, scope: !15371)
!15379 = !DILocation(line: 416, column: 2, scope: !15371)
!15380 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2500, file: !2500, line: 440, type: !15381, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15383)
!15381 = !DISubroutineType(types: !15382)
!15382 = !{null, !331, !103}
!15383 = !{!15384, !15385, !15386, !15392}
!15384 = !DILocalVariable(name: "slice", arg: 1, scope: !15380, file: !2500, line: 440, type: !331)
!15385 = !DILocalVariable(name: "prio", arg: 2, scope: !15380, file: !2500, line: 440, type: !103)
!15386 = !DILocalVariable(name: "__i", scope: !15387, file: !2500, line: 442, type: !15388)
!15387 = distinct !DILexicalBlock(scope: !15380, file: !2500, line: 442, column: 2)
!15388 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15389)
!15389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15390)
!15390 = !{!15391}
!15391 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15389, file: !250, line: 33, baseType: !103, size: 32)
!15392 = !DILocalVariable(name: "__key", scope: !15387, file: !2500, line: 442, type: !15388)
!15393 = !DILocation(line: 0, scope: !15380)
!15394 = !DILocation(line: 0, scope: !15387)
!15395 = !DILocalVariable(name: "l", arg: 1, scope: !15396, file: !250, line: 136, type: !15399)
!15396 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15397, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15400)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{!15388, !15399}
!15399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!15400 = !{!15395, !15401}
!15401 = !DILocalVariable(name: "k", scope: !15396, file: !250, line: 139, type: !15388)
!15402 = !DILocation(line: 0, scope: !15396, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 442, column: 2, scope: !15387)
!15404 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !15409)
!15405 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15406)
!15406 = !{!15407, !15408}
!15407 = !DILocalVariable(name: "key", scope: !15405, file: !6962, line: 44, type: !32)
!15408 = !DILocalVariable(name: "tmp", scope: !15405, file: !6962, line: 53, type: !32)
!15409 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !15403)
!15410 = !{i64 1993484}
!15411 = !DILocation(line: 0, scope: !15405, inlinedAt: !15409)
!15412 = !DILocation(line: 443, column: 29, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15414, file: !2500, line: 442, column: 26)
!15414 = distinct !DILexicalBlock(scope: !15387, file: !2500, line: 442, column: 2)
!15415 = !DILocation(line: 444, column: 17, scope: !15413)
!15416 = !DILocation(line: 445, column: 51, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15413, file: !2500, line: 445, column: 7)
!15418 = !DILocation(line: 445, column: 7, scope: !15413)
!15419 = !DILocation(line: 0, scope: !15413)
!15420 = !DILocation(line: 451, column: 18, scope: !15413)
!15421 = !DILocation(line: 452, column: 3, scope: !15413)
!15422 = !DILocalVariable(name: "key", arg: 2, scope: !15423, file: !250, line: 190, type: !15388)
!15423 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15424, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15426)
!15424 = !DISubroutineType(types: !15425)
!15425 = !{null, !15399, !15388}
!15426 = !{!15427, !15422}
!15427 = !DILocalVariable(name: "l", arg: 1, scope: !15423, file: !250, line: 189, type: !15399)
!15428 = !DILocation(line: 0, scope: !15423, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 442, column: 2, scope: !15414)
!15430 = !DILocalVariable(name: "key", arg: 1, scope: !15431, file: !6962, line: 84, type: !32)
!15431 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15432)
!15432 = !{!15430}
!15433 = !DILocation(line: 0, scope: !15431, inlinedAt: !15434)
!15434 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !15429)
!15435 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !15434)
!15436 = !{i64 1994301}
!15437 = !DILocation(line: 454, column: 1, scope: !15380)
!15438 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3580, file: !3580, line: 389, type: !8523, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15439)
!15439 = !{!15440}
!15440 = !DILocalVariable(name: "t", arg: 1, scope: !15438, file: !3580, line: 389, type: !108)
!15441 = !DILocation(line: 0, scope: !15438)
!15442 = !DILocalVariable(name: "t", arg: 1, scope: !15443, file: !3580, line: 102, type: !109)
!15443 = distinct !DISubprogram(name: "z_tmcvt", scope: !3580, file: !3580, line: 102, type: !3606, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15444)
!15444 = !{!15442, !15445, !15446, !15447, !15448, !15449, !15450, !15451, !15452, !15453, !15454}
!15445 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15443, file: !3580, line: 102, type: !108)
!15446 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15443, file: !3580, line: 103, type: !108)
!15447 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15443, file: !3580, line: 103, type: !131)
!15448 = !DILocalVariable(name: "result32", arg: 5, scope: !15443, file: !3580, line: 104, type: !131)
!15449 = !DILocalVariable(name: "round_up", arg: 6, scope: !15443, file: !3580, line: 104, type: !131)
!15450 = !DILocalVariable(name: "round_off", arg: 7, scope: !15443, file: !3580, line: 105, type: !131)
!15451 = !DILocalVariable(name: "mul_ratio", scope: !15443, file: !3580, line: 107, type: !131)
!15452 = !DILocalVariable(name: "div_ratio", scope: !15443, file: !3580, line: 109, type: !131)
!15453 = !DILocalVariable(name: "off", scope: !15443, file: !3580, line: 116, type: !109)
!15454 = !DILocalVariable(name: "rdivisor", scope: !15455, file: !3580, line: 119, type: !108)
!15455 = distinct !DILexicalBlock(scope: !15456, file: !3580, line: 118, column: 18)
!15456 = distinct !DILexicalBlock(scope: !15443, file: !3580, line: 118, column: 6)
!15457 = !DILocation(line: 0, scope: !15443, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 392, column: 9, scope: !15438)
!15459 = !DILocation(line: 143, column: 25, scope: !15460, inlinedAt: !15458)
!15460 = distinct !DILexicalBlock(scope: !15461, file: !3580, line: 142, column: 17)
!15461 = distinct !DILexicalBlock(scope: !15462, file: !3580, line: 142, column: 7)
!15462 = distinct !DILexicalBlock(scope: !15463, file: !3580, line: 141, column: 24)
!15463 = distinct !DILexicalBlock(scope: !15464, file: !3580, line: 141, column: 13)
!15464 = distinct !DILexicalBlock(scope: !15443, file: !3580, line: 134, column: 6)
!15465 = !DILocation(line: 392, column: 2, scope: !15438)
!15466 = distinct !DISubprogram(name: "z_time_slice", scope: !2500, file: !2500, line: 502, type: !9539, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15467)
!15467 = !{!15468, !15469}
!15468 = !DILocalVariable(name: "ticks", arg: 1, scope: !15466, file: !2500, line: 502, type: !103)
!15469 = !DILocalVariable(name: "key", scope: !15466, file: !2500, line: 511, type: !15388)
!15470 = !DILocation(line: 0, scope: !15466)
!15471 = !DILocation(line: 0, scope: !15396, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 511, column: 25, scope: !15466)
!15473 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !15472)
!15475 = !DILocation(line: 0, scope: !15405, inlinedAt: !15474)
!15476 = !DILocation(line: 514, column: 6, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15466, file: !2500, line: 514, column: 6)
!15478 = !DILocation(line: 514, column: 25, scope: !15477)
!15479 = !DILocation(line: 514, column: 22, scope: !15477)
!15480 = !DILocation(line: 514, column: 6, scope: !15466)
!15481 = !DILocation(line: 515, column: 3, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15477, file: !2500, line: 514, column: 35)
!15483 = !DILocation(line: 0, scope: !15423, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 516, column: 3, scope: !15482)
!15485 = !DILocation(line: 0, scope: !15431, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !15484)
!15487 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !15486)
!15488 = !DILocation(line: 517, column: 3, scope: !15482)
!15489 = !DILocation(line: 519, column: 18, scope: !15466)
!15490 = !DILocation(line: 522, column: 6, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15466, file: !2500, line: 522, column: 6)
!15492 = !DILocation(line: 522, column: 27, scope: !15491)
!15493 = !DILocation(line: 522, column: 30, scope: !15491)
!15494 = !DILocation(line: 522, column: 6, scope: !15466)
!15495 = !DILocation(line: 523, column: 30, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15497, file: !2500, line: 523, column: 7)
!15497 = distinct !DILexicalBlock(scope: !15491, file: !2500, line: 522, column: 51)
!15498 = !DILocation(line: 523, column: 13, scope: !15496)
!15499 = !DILocation(line: 523, column: 7, scope: !15497)
!15500 = !DILocation(line: 530, column: 10, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15496, file: !2500, line: 523, column: 43)
!15502 = !DILocation(line: 531, column: 3, scope: !15501)
!15503 = !DILocation(line: 532, column: 30, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15496, file: !2500, line: 531, column: 10)
!15505 = !DILocation(line: 535, column: 29, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !15491, file: !2500, line: 534, column: 9)
!15507 = !DILocation(line: 0, scope: !15423, inlinedAt: !15508)
!15508 = distinct !DILocation(line: 537, column: 2, scope: !15466)
!15509 = !DILocation(line: 0, scope: !15431, inlinedAt: !15510)
!15510 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !15508)
!15511 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !15510)
!15512 = !DILocation(line: 538, column: 1, scope: !15466)
!15513 = distinct !DISubprogram(name: "sliceable", scope: !2500, file: !2500, line: 468, type: !15514, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15516)
!15514 = !DISubroutineType(types: !15515)
!15515 = !{!131, !2395}
!15516 = !{!15517, !15518}
!15517 = !DILocalVariable(name: "thread", arg: 1, scope: !15513, file: !2500, line: 468, type: !2395)
!15518 = !DILocalVariable(name: "ret", scope: !15513, file: !2500, line: 470, type: !131)
!15519 = !DILocation(line: 0, scope: !15513)
!15520 = !DILocation(line: 470, column: 13, scope: !15513)
!15521 = !DILocation(line: 471, column: 3, scope: !15513)
!15522 = !DILocation(line: 471, column: 7, scope: !15513)
!15523 = !DILocation(line: 472, column: 3, scope: !15513)
!15524 = !DILocation(line: 472, column: 37, scope: !15513)
!15525 = !DILocation(line: 472, column: 24, scope: !15513)
!15526 = !DILocation(line: 472, column: 43, scope: !15513)
!15527 = !DILocation(line: 472, column: 7, scope: !15513)
!15528 = !DILocation(line: 473, column: 3, scope: !15513)
!15529 = !DILocation(line: 473, column: 7, scope: !15513)
!15530 = !DILocation(line: 473, column: 6, scope: !15513)
!15531 = !DILocation(line: 479, column: 2, scope: !15513)
!15532 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2500, file: !2500, line: 482, type: !15533, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15535)
!15533 = !DISubroutineType(types: !15534)
!15534 = !{!15388, !15388}
!15535 = !{!15536, !15537}
!15536 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15532, file: !2500, line: 482, type: !15388)
!15537 = !DILocalVariable(name: "curr", scope: !15532, file: !2500, line: 484, type: !2395)
!15538 = !DILocation(line: 0, scope: !15532)
!15539 = !DILocation(line: 484, column: 26, scope: !15532)
!15540 = !DILocation(line: 493, column: 7, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15532, file: !2500, line: 493, column: 6)
!15542 = !DILocation(line: 493, column: 6, scope: !15532)
!15543 = !DILocation(line: 494, column: 3, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15541, file: !2500, line: 493, column: 49)
!15545 = !DILocation(line: 495, column: 2, scope: !15544)
!15546 = !DILocation(line: 496, column: 2, scope: !15532)
!15547 = !DILocation(line: 499, column: 1, scope: !15532)
!15548 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13926, file: !13926, line: 106, type: !15514, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15549)
!15549 = !{!15550, !15551}
!15550 = !DILocalVariable(name: "thread", arg: 1, scope: !15548, file: !13926, line: 106, type: !2395)
!15551 = !DILocalVariable(name: "state", scope: !15548, file: !13926, line: 108, type: !185)
!15552 = !DILocation(line: 0, scope: !15548)
!15553 = !DILocation(line: 108, column: 31, scope: !15548)
!15554 = !DILocation(line: 110, column: 16, scope: !15548)
!15555 = !DILocation(line: 111, column: 41, scope: !15548)
!15556 = !DILocation(line: 110, column: 2, scope: !15548)
!15557 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2500, file: !2500, line: 393, type: !15354, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15558)
!15558 = !{!15559}
!15559 = !DILocalVariable(name: "thread", arg: 1, scope: !15557, file: !2500, line: 393, type: !2395)
!15560 = !DILocation(line: 0, scope: !15557)
!15561 = !DILocation(line: 395, column: 6, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15557, file: !2500, line: 395, column: 6)
!15563 = !DILocation(line: 395, column: 6, scope: !15557)
!15564 = !DILocalVariable(name: "thread", arg: 1, scope: !15565, file: !2500, line: 264, type: !2395)
!15565 = distinct !DISubprogram(name: "dequeue_thread", scope: !2500, file: !2500, line: 264, type: !15354, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15566)
!15566 = !{!15564}
!15567 = !DILocation(line: 0, scope: !15565, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 396, column: 3, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15562, file: !2500, line: 395, column: 34)
!15570 = !DILocation(line: 266, column: 15, scope: !15565, inlinedAt: !15568)
!15571 = !DILocation(line: 266, column: 28, scope: !15565, inlinedAt: !15568)
!15572 = !DILocalVariable(name: "thread", arg: 1, scope: !15573, file: !2500, line: 232, type: !2395)
!15573 = distinct !DISubprogram(name: "runq_remove", scope: !2500, file: !2500, line: 232, type: !15354, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15574)
!15574 = !{!15572}
!15575 = !DILocation(line: 0, scope: !15573, inlinedAt: !15576)
!15576 = distinct !DILocation(line: 268, column: 3, scope: !15577, inlinedAt: !15568)
!15577 = distinct !DILexicalBlock(scope: !15578, file: !2500, line: 267, column: 35)
!15578 = distinct !DILexicalBlock(scope: !15565, file: !2500, line: 267, column: 6)
!15579 = !DILocation(line: 234, column: 2, scope: !15573, inlinedAt: !15576)
!15580 = !DILocation(line: 397, column: 2, scope: !15569)
!15581 = !DILocalVariable(name: "thread", arg: 1, scope: !15582, file: !2500, line: 250, type: !2395)
!15582 = distinct !DISubprogram(name: "queue_thread", scope: !2500, file: !2500, line: 250, type: !15354, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15583)
!15583 = !{!15581}
!15584 = !DILocation(line: 0, scope: !15582, inlinedAt: !15585)
!15585 = distinct !DILocation(line: 398, column: 2, scope: !15557)
!15586 = !DILocation(line: 252, column: 15, scope: !15582, inlinedAt: !15585)
!15587 = !DILocation(line: 252, column: 28, scope: !15582, inlinedAt: !15585)
!15588 = !DILocalVariable(name: "thread", arg: 1, scope: !15589, file: !2500, line: 227, type: !2395)
!15589 = distinct !DISubprogram(name: "runq_add", scope: !2500, file: !2500, line: 227, type: !15354, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15590)
!15590 = !{!15588}
!15591 = !DILocation(line: 0, scope: !15589, inlinedAt: !15592)
!15592 = distinct !DILocation(line: 254, column: 3, scope: !15593, inlinedAt: !15585)
!15593 = distinct !DILexicalBlock(scope: !15594, file: !2500, line: 253, column: 35)
!15594 = distinct !DILexicalBlock(scope: !15582, file: !2500, line: 253, column: 6)
!15595 = !DILocalVariable(name: "pq", arg: 1, scope: !15596, file: !2500, line: 181, type: !15599)
!15596 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2500, file: !2500, line: 181, type: !15597, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15600)
!15597 = !DISubroutineType(types: !15598)
!15598 = !{null, !15599, !2395}
!15599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 32)
!15600 = !{!15595, !15601, !15602}
!15601 = !DILocalVariable(name: "thread", arg: 2, scope: !15596, file: !2500, line: 182, type: !2395)
!15602 = !DILocalVariable(name: "t", scope: !15596, file: !2500, line: 184, type: !2395)
!15603 = !DILocation(line: 0, scope: !15596, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 229, column: 2, scope: !15589, inlinedAt: !15592)
!15605 = !DILocation(line: 188, column: 2, scope: !15606, inlinedAt: !15604)
!15606 = distinct !DILexicalBlock(scope: !15596, file: !2500, line: 188, column: 2)
!15607 = !DILocation(line: 188, column: 2, scope: !15608, inlinedAt: !15604)
!15608 = distinct !DILexicalBlock(scope: !15606, file: !2500, line: 188, column: 2)
!15609 = !DILocation(line: 0, scope: !15606, inlinedAt: !15604)
!15610 = !DILocation(line: 189, column: 7, scope: !15611, inlinedAt: !15604)
!15611 = distinct !DILexicalBlock(scope: !15612, file: !2500, line: 189, column: 7)
!15612 = distinct !DILexicalBlock(scope: !15608, file: !2500, line: 188, column: 56)
!15613 = !DILocation(line: 189, column: 35, scope: !15611, inlinedAt: !15604)
!15614 = !DILocation(line: 189, column: 7, scope: !15612, inlinedAt: !15604)
!15615 = !DILocation(line: 191, column: 21, scope: !15616, inlinedAt: !15604)
!15616 = distinct !DILexicalBlock(scope: !15611, file: !2500, line: 189, column: 40)
!15617 = !DILocation(line: 190, column: 4, scope: !15616, inlinedAt: !15604)
!15618 = !DILocation(line: 192, column: 4, scope: !15616, inlinedAt: !15604)
!15619 = distinct !{!15619, !15605, !15620}
!15620 = !DILocation(line: 194, column: 2, scope: !15606, inlinedAt: !15604)
!15621 = !DILocation(line: 196, column: 37, scope: !15596, inlinedAt: !15604)
!15622 = !DILocation(line: 196, column: 2, scope: !15596, inlinedAt: !15604)
!15623 = !DILocation(line: 197, column: 1, scope: !15596, inlinedAt: !15604)
!15624 = !DILocation(line: 399, column: 25, scope: !15557)
!15625 = !DILocation(line: 399, column: 22, scope: !15557)
!15626 = !DILocation(line: 399, column: 2, scope: !15557)
!15627 = !DILocation(line: 400, column: 1, scope: !15557)
!15628 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13926, file: !13926, line: 136, type: !15514, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15629)
!15629 = !{!15630}
!15630 = !DILocalVariable(name: "thread", arg: 1, scope: !15628, file: !13926, line: 136, type: !2395)
!15631 = !DILocation(line: 0, scope: !15628)
!15632 = !DILocation(line: 138, column: 9, scope: !15628)
!15633 = !DILocation(line: 138, column: 2, scope: !15628)
!15634 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2500, file: !2500, line: 1137, type: !15597, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15635)
!15635 = !{!15636, !15637}
!15636 = !DILocalVariable(name: "pq", arg: 1, scope: !15634, file: !2500, line: 1137, type: !15599)
!15637 = !DILocalVariable(name: "thread", arg: 2, scope: !15634, file: !2500, line: 1137, type: !2395)
!15638 = !DILocation(line: 0, scope: !15634)
!15639 = !DILocation(line: 1141, column: 33, scope: !15634)
!15640 = !DILocation(line: 1141, column: 2, scope: !15634)
!15641 = !DILocation(line: 1142, column: 1, scope: !15634)
!15642 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15643, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15645)
!15643 = !DISubroutineType(types: !15644)
!15644 = !{!2496, !15599}
!15645 = !{!15646}
!15646 = !DILocalVariable(name: "list", arg: 1, scope: !15642, file: !146, line: 294, type: !15599)
!15647 = !DILocation(line: 0, scope: !15642)
!15648 = !DILocation(line: 296, column: 9, scope: !15642)
!15649 = !DILocation(line: 296, column: 49, scope: !15642)
!15650 = !DILocation(line: 296, column: 2, scope: !15642)
!15651 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !15652, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15654)
!15652 = !DISubroutineType(types: !15653)
!15653 = !{null, !2496, !2496}
!15654 = !{!15655, !15656, !15657}
!15655 = !DILocalVariable(name: "successor", arg: 1, scope: !15651, file: !146, line: 443, type: !2496)
!15656 = !DILocalVariable(name: "node", arg: 2, scope: !15651, file: !146, line: 443, type: !2496)
!15657 = !DILocalVariable(name: "prev", scope: !15651, file: !146, line: 445, type: !15658)
!15658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2496)
!15659 = !DILocation(line: 0, scope: !15651)
!15660 = !DILocation(line: 445, column: 39, scope: !15651)
!15661 = !DILocation(line: 447, column: 8, scope: !15651)
!15662 = !DILocation(line: 447, column: 13, scope: !15651)
!15663 = !DILocation(line: 448, column: 8, scope: !15651)
!15664 = !DILocation(line: 448, column: 13, scope: !15651)
!15665 = !DILocation(line: 449, column: 8, scope: !15651)
!15666 = !DILocation(line: 449, column: 13, scope: !15651)
!15667 = !DILocation(line: 450, column: 18, scope: !15651)
!15668 = !DILocation(line: 451, column: 1, scope: !15651)
!15669 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !15670, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15672)
!15670 = !DISubroutineType(types: !15671)
!15671 = !{!2496, !15599, !2496}
!15672 = !{!15673, !15674}
!15673 = !DILocalVariable(name: "list", arg: 1, scope: !15669, file: !146, line: 341, type: !15599)
!15674 = !DILocalVariable(name: "node", arg: 2, scope: !15669, file: !146, line: 342, type: !2496)
!15675 = !DILocation(line: 0, scope: !15669)
!15676 = !DILocation(line: 344, column: 15, scope: !15669)
!15677 = !DILocation(line: 344, column: 9, scope: !15669)
!15678 = !DILocation(line: 344, column: 26, scope: !15669)
!15679 = !DILocation(line: 344, column: 2, scope: !15669)
!15680 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !15681, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15683)
!15681 = !DISubroutineType(types: !15682)
!15682 = !{null, !15599, !2496}
!15683 = !{!15684, !15685, !15686}
!15684 = !DILocalVariable(name: "list", arg: 1, scope: !15680, file: !146, line: 404, type: !15599)
!15685 = !DILocalVariable(name: "node", arg: 2, scope: !15680, file: !146, line: 404, type: !2496)
!15686 = !DILocalVariable(name: "tail", scope: !15680, file: !146, line: 406, type: !15658)
!15687 = !DILocation(line: 0, scope: !15680)
!15688 = !DILocation(line: 406, column: 34, scope: !15680)
!15689 = !DILocation(line: 408, column: 8, scope: !15680)
!15690 = !DILocation(line: 408, column: 13, scope: !15680)
!15691 = !DILocation(line: 409, column: 8, scope: !15680)
!15692 = !DILocation(line: 409, column: 13, scope: !15680)
!15693 = !DILocation(line: 411, column: 8, scope: !15680)
!15694 = !DILocation(line: 411, column: 13, scope: !15680)
!15695 = !DILocation(line: 412, column: 13, scope: !15680)
!15696 = !DILocation(line: 413, column: 1, scope: !15680)
!15697 = distinct !DISubprogram(name: "update_cache", scope: !2500, file: !2500, line: 559, type: !9539, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15698)
!15698 = !{!15699, !15700}
!15699 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15697, file: !2500, line: 559, type: !103)
!15700 = !DILocalVariable(name: "thread", scope: !15697, file: !2500, line: 562, type: !2395)
!15701 = !DILocation(line: 0, scope: !15697)
!15702 = !DILocation(line: 239, column: 9, scope: !15703, inlinedAt: !15706)
!15703 = distinct !DISubprogram(name: "runq_best", scope: !2500, file: !2500, line: 237, type: !15704, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!15704 = !DISubroutineType(types: !15705)
!15705 = !{!2395}
!15706 = distinct !DILocation(line: 314, column: 28, scope: !15707, inlinedAt: !15710)
!15707 = distinct !DISubprogram(name: "next_up", scope: !2500, file: !2500, line: 312, type: !15704, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15708)
!15708 = !{!15709}
!15709 = !DILocalVariable(name: "thread", scope: !15707, file: !2500, line: 314, type: !2395)
!15710 = distinct !DILocation(line: 562, column: 28, scope: !15697)
!15711 = !DILocation(line: 0, scope: !15707, inlinedAt: !15710)
!15712 = !DILocation(line: 340, column: 17, scope: !15707, inlinedAt: !15710)
!15713 = !DILocation(line: 340, column: 9, scope: !15707, inlinedAt: !15710)
!15714 = !DILocalVariable(name: "thread", arg: 1, scope: !15715, file: !2500, line: 127, type: !2395)
!15715 = distinct !DISubprogram(name: "should_preempt", scope: !2500, file: !2500, line: 127, type: !15716, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15718)
!15716 = !DISubroutineType(types: !15717)
!15717 = !{!131, !2395, !103}
!15718 = !{!15714, !15719}
!15719 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15715, file: !2500, line: 128, type: !103)
!15720 = !DILocation(line: 0, scope: !15715, inlinedAt: !15721)
!15721 = distinct !DILocation(line: 564, column: 6, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15697, file: !2500, line: 564, column: 6)
!15723 = !DILocation(line: 133, column: 17, scope: !15724, inlinedAt: !15721)
!15724 = distinct !DILexicalBlock(scope: !15715, file: !2500, line: 133, column: 6)
!15725 = !DILocation(line: 0, scope: !15722)
!15726 = !DILocation(line: 133, column: 6, scope: !15715, inlinedAt: !15721)
!15727 = !DILocation(line: 140, column: 6, scope: !15728, inlinedAt: !15721)
!15728 = distinct !DILexicalBlock(scope: !15715, file: !2500, line: 140, column: 6)
!15729 = !DILocation(line: 140, column: 6, scope: !15715, inlinedAt: !15721)
!15730 = !DILocation(line: 150, column: 9, scope: !15731, inlinedAt: !15721)
!15731 = distinct !DILexicalBlock(scope: !15715, file: !2500, line: 149, column: 6)
!15732 = !DILocation(line: 149, column: 6, scope: !15715, inlinedAt: !15721)
!15733 = !DILocation(line: 157, column: 6, scope: !15734, inlinedAt: !15721)
!15734 = distinct !DILexicalBlock(scope: !15715, file: !2500, line: 157, column: 6)
!15735 = !DILocation(line: 564, column: 6, scope: !15697)
!15736 = !DILocation(line: 566, column: 14, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15738, file: !2500, line: 566, column: 7)
!15738 = distinct !DILexicalBlock(scope: !15722, file: !2500, line: 564, column: 42)
!15739 = !DILocation(line: 566, column: 7, scope: !15738)
!15740 = !DILocation(line: 567, column: 4, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15737, file: !2500, line: 566, column: 27)
!15742 = !DILocation(line: 568, column: 3, scope: !15741)
!15743 = !DILocation(line: 585, column: 1, scope: !15697)
!15744 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2500, file: !2500, line: 1144, type: !15745, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15747)
!15745 = !DISubroutineType(types: !15746)
!15746 = !{!2395, !15599}
!15747 = !{!15748, !15749, !15750}
!15748 = !DILocalVariable(name: "pq", arg: 1, scope: !15744, file: !2500, line: 1144, type: !15599)
!15749 = !DILocalVariable(name: "thread", scope: !15744, file: !2500, line: 1146, type: !2395)
!15750 = !DILocalVariable(name: "n", scope: !15744, file: !2500, line: 1147, type: !2496)
!15751 = !DILocation(line: 0, scope: !15744)
!15752 = !DILocation(line: 1147, column: 19, scope: !15744)
!15753 = !DILocation(line: 1152, column: 2, scope: !15744)
!15754 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13926, file: !13926, line: 115, type: !15514, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15755)
!15755 = !{!15756}
!15756 = !DILocalVariable(name: "thread", arg: 1, scope: !15754, file: !13926, line: 115, type: !2395)
!15757 = !DILocation(line: 0, scope: !15754)
!15758 = !DILocation(line: 117, column: 46, scope: !15754)
!15759 = !DILocation(line: 117, column: 10, scope: !15754)
!15760 = !DILocation(line: 117, column: 9, scope: !15754)
!15761 = !DILocation(line: 117, column: 2, scope: !15754)
!15762 = distinct !DISubprogram(name: "is_preempt", scope: !2500, file: !2500, line: 62, type: !15372, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15763)
!15763 = !{!15764}
!15764 = !DILocalVariable(name: "thread", arg: 1, scope: !15762, file: !2500, line: 62, type: !2395)
!15765 = !DILocation(line: 0, scope: !15762)
!15766 = !DILocation(line: 65, column: 22, scope: !15762)
!15767 = !DILocation(line: 65, column: 30, scope: !15762)
!15768 = !DILocation(line: 65, column: 2, scope: !15762)
!15769 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14319, file: !14319, line: 35, type: !15770, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15774)
!15770 = !DISubroutineType(types: !15771)
!15771 = !{!131, !15772}
!15772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15773, size: 32)
!15773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2446)
!15774 = !{!15775}
!15775 = !DILocalVariable(name: "to", arg: 1, scope: !15769, file: !14319, line: 35, type: !15772)
!15776 = !DILocation(line: 0, scope: !15769)
!15777 = !DILocation(line: 37, column: 35, scope: !15769)
!15778 = !DILocation(line: 37, column: 10, scope: !15769)
!15779 = !DILocation(line: 37, column: 9, scope: !15769)
!15780 = !DILocation(line: 37, column: 2, scope: !15769)
!15781 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !15782, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15786)
!15782 = !DISubroutineType(types: !15783)
!15783 = !{!131, !15784}
!15784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15785, size: 32)
!15785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2405)
!15786 = !{!15787}
!15787 = !DILocalVariable(name: "node", arg: 1, scope: !15781, file: !146, line: 225, type: !15784)
!15788 = !DILocation(line: 0, scope: !15781)
!15789 = !DILocation(line: 227, column: 15, scope: !15781)
!15790 = !DILocation(line: 227, column: 20, scope: !15781)
!15791 = !DILocation(line: 227, column: 2, scope: !15781)
!15792 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !15670, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15793)
!15793 = !{!15794, !15795}
!15794 = !DILocalVariable(name: "list", arg: 1, scope: !15792, file: !146, line: 325, type: !15599)
!15795 = !DILocalVariable(name: "node", arg: 2, scope: !15792, file: !146, line: 326, type: !2496)
!15796 = !DILocation(line: 0, scope: !15792)
!15797 = !DILocation(line: 328, column: 24, scope: !15792)
!15798 = !DILocation(line: 328, column: 15, scope: !15792)
!15799 = !DILocation(line: 328, column: 9, scope: !15792)
!15800 = !DILocation(line: 328, column: 45, scope: !15792)
!15801 = !DILocation(line: 328, column: 2, scope: !15792)
!15802 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15803, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15805)
!15803 = !DISubroutineType(types: !15804)
!15804 = !{!131, !15599}
!15805 = !{!15806}
!15806 = !DILocalVariable(name: "list", arg: 1, scope: !15802, file: !146, line: 266, type: !15599)
!15807 = !DILocation(line: 0, scope: !15802)
!15808 = !DILocation(line: 268, column: 15, scope: !15802)
!15809 = !DILocation(line: 268, column: 20, scope: !15802)
!15810 = !DILocation(line: 268, column: 2, scope: !15802)
!15811 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !15812, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15814)
!15812 = !DISubroutineType(types: !15813)
!15813 = !{null, !2496}
!15814 = !{!15815, !15816, !15817}
!15815 = !DILocalVariable(name: "node", arg: 1, scope: !15811, file: !146, line: 496, type: !2496)
!15816 = !DILocalVariable(name: "prev", scope: !15811, file: !146, line: 498, type: !15658)
!15817 = !DILocalVariable(name: "next", scope: !15811, file: !146, line: 499, type: !15658)
!15818 = !DILocation(line: 0, scope: !15811)
!15819 = !DILocation(line: 498, column: 34, scope: !15811)
!15820 = !DILocation(line: 499, column: 34, scope: !15811)
!15821 = !DILocation(line: 501, column: 8, scope: !15811)
!15822 = !DILocation(line: 501, column: 13, scope: !15811)
!15823 = !DILocation(line: 502, column: 8, scope: !15811)
!15824 = !DILocation(line: 502, column: 13, scope: !15811)
!15825 = !DILocation(line: 503, column: 2, scope: !15811)
!15826 = !DILocation(line: 504, column: 1, scope: !15811)
!15827 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !15812, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15828)
!15828 = !{!15829}
!15829 = !DILocalVariable(name: "node", arg: 1, scope: !15827, file: !146, line: 211, type: !2496)
!15830 = !DILocation(line: 0, scope: !15827)
!15831 = !DILocation(line: 213, column: 8, scope: !15827)
!15832 = !DILocation(line: 213, column: 13, scope: !15827)
!15833 = !DILocation(line: 214, column: 8, scope: !15827)
!15834 = !DILocation(line: 214, column: 13, scope: !15827)
!15835 = !DILocation(line: 215, column: 1, scope: !15827)
!15836 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13926, file: !13926, line: 131, type: !15837, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15839)
!15837 = !DISubroutineType(types: !15838)
!15838 = !{!131, !2395, !108}
!15839 = !{!15840, !15841}
!15840 = !DILocalVariable(name: "thread", arg: 1, scope: !15836, file: !13926, line: 131, type: !2395)
!15841 = !DILocalVariable(name: "state", arg: 2, scope: !15836, file: !13926, line: 131, type: !108)
!15842 = !DILocation(line: 0, scope: !15836)
!15843 = !DILocation(line: 133, column: 23, scope: !15836)
!15844 = !DILocation(line: 133, column: 45, scope: !15836)
!15845 = !DILocation(line: 133, column: 2, scope: !15836)
!15846 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13926, file: !13926, line: 211, type: !15206, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15847)
!15847 = !{!15848, !15849}
!15848 = !DILocalVariable(name: "prio", arg: 1, scope: !15846, file: !13926, line: 211, type: !103)
!15849 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15846, file: !13926, line: 211, type: !103)
!15850 = !DILocation(line: 0, scope: !15846)
!15851 = !DILocation(line: 213, column: 9, scope: !15846)
!15852 = !DILocation(line: 213, column: 2, scope: !15846)
!15853 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13926, file: !13926, line: 83, type: !15514, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15854)
!15854 = !{!15855}
!15855 = !DILocalVariable(name: "thread", arg: 1, scope: !15853, file: !13926, line: 83, type: !2395)
!15856 = !DILocation(line: 0, scope: !15853)
!15857 = !DILocation(line: 89, column: 16, scope: !15853)
!15858 = !DILocation(line: 89, column: 2, scope: !15853)
!15859 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13926, file: !13926, line: 206, type: !15206, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15860)
!15860 = !{!15861, !15862}
!15861 = !DILocalVariable(name: "prio1", arg: 1, scope: !15859, file: !13926, line: 206, type: !103)
!15862 = !DILocalVariable(name: "prio2", arg: 2, scope: !15859, file: !13926, line: 206, type: !103)
!15863 = !DILocation(line: 0, scope: !15859)
!15864 = !DILocation(line: 208, column: 15, scope: !15859)
!15865 = !DILocation(line: 208, column: 2, scope: !15859)
!15866 = distinct !DISubprogram(name: "z_ready_thread", scope: !2500, file: !2500, line: 635, type: !15354, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15867)
!15867 = !{!15868, !15869, !15871}
!15868 = !DILocalVariable(name: "thread", arg: 1, scope: !15866, file: !2500, line: 635, type: !2395)
!15869 = !DILocalVariable(name: "__i", scope: !15870, file: !2500, line: 637, type: !15388)
!15870 = distinct !DILexicalBlock(scope: !15866, file: !2500, line: 637, column: 2)
!15871 = !DILocalVariable(name: "__key", scope: !15870, file: !2500, line: 637, type: !15388)
!15872 = !DILocation(line: 0, scope: !15866)
!15873 = !DILocation(line: 0, scope: !15870)
!15874 = !DILocation(line: 0, scope: !15396, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 637, column: 2, scope: !15870)
!15876 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !15875)
!15878 = !DILocation(line: 0, scope: !15405, inlinedAt: !15877)
!15879 = !DILocation(line: 639, column: 4, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15881, file: !2500, line: 638, column: 41)
!15881 = distinct !DILexicalBlock(scope: !15882, file: !2500, line: 638, column: 7)
!15882 = distinct !DILexicalBlock(scope: !15883, file: !2500, line: 637, column: 26)
!15883 = distinct !DILexicalBlock(scope: !15870, file: !2500, line: 637, column: 2)
!15884 = !DILocation(line: 0, scope: !15423, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 637, column: 2, scope: !15883)
!15886 = !DILocation(line: 0, scope: !15431, inlinedAt: !15887)
!15887 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !15885)
!15888 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !15887)
!15889 = !DILocation(line: 642, column: 1, scope: !15866)
!15890 = distinct !DISubprogram(name: "ready_thread", scope: !2500, file: !2500, line: 617, type: !15354, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15891)
!15891 = !{!15892}
!15892 = !DILocalVariable(name: "thread", arg: 1, scope: !15890, file: !2500, line: 617, type: !2395)
!15893 = !DILocation(line: 0, scope: !15890)
!15894 = !DILocation(line: 626, column: 7, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15890, file: !2500, line: 626, column: 6)
!15896 = !DILocation(line: 626, column: 34, scope: !15895)
!15897 = !DILocation(line: 626, column: 37, scope: !15895)
!15898 = !DILocation(line: 626, column: 6, scope: !15890)
!15899 = !DILocation(line: 0, scope: !15582, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 629, column: 3, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15895, file: !2500, line: 626, column: 64)
!15902 = !DILocation(line: 252, column: 15, scope: !15582, inlinedAt: !15900)
!15903 = !DILocation(line: 252, column: 28, scope: !15582, inlinedAt: !15900)
!15904 = !DILocation(line: 0, scope: !15589, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 254, column: 3, scope: !15593, inlinedAt: !15900)
!15906 = !DILocation(line: 0, scope: !15596, inlinedAt: !15907)
!15907 = distinct !DILocation(line: 229, column: 2, scope: !15589, inlinedAt: !15905)
!15908 = !DILocation(line: 188, column: 2, scope: !15606, inlinedAt: !15907)
!15909 = !DILocation(line: 188, column: 2, scope: !15608, inlinedAt: !15907)
!15910 = !DILocation(line: 0, scope: !15606, inlinedAt: !15907)
!15911 = !DILocation(line: 189, column: 7, scope: !15611, inlinedAt: !15907)
!15912 = !DILocation(line: 189, column: 35, scope: !15611, inlinedAt: !15907)
!15913 = !DILocation(line: 189, column: 7, scope: !15612, inlinedAt: !15907)
!15914 = !DILocation(line: 191, column: 21, scope: !15616, inlinedAt: !15907)
!15915 = !DILocation(line: 190, column: 4, scope: !15616, inlinedAt: !15907)
!15916 = !DILocation(line: 192, column: 4, scope: !15616, inlinedAt: !15907)
!15917 = distinct !{!15917, !15908, !15918}
!15918 = !DILocation(line: 194, column: 2, scope: !15606, inlinedAt: !15907)
!15919 = !DILocation(line: 196, column: 37, scope: !15596, inlinedAt: !15907)
!15920 = !DILocation(line: 196, column: 2, scope: !15596, inlinedAt: !15907)
!15921 = !DILocation(line: 197, column: 1, scope: !15596, inlinedAt: !15907)
!15922 = !DILocation(line: 630, column: 3, scope: !15901)
!15923 = !DILocation(line: 632, column: 2, scope: !15901)
!15924 = !DILocation(line: 633, column: 1, scope: !15890)
!15925 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13926, file: !13926, line: 120, type: !15514, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15926)
!15926 = !{!15927}
!15927 = !DILocalVariable(name: "thread", arg: 1, scope: !15925, file: !13926, line: 120, type: !2395)
!15928 = !DILocation(line: 0, scope: !15925)
!15929 = !DILocation(line: 122, column: 12, scope: !15925)
!15930 = !DILocation(line: 122, column: 62, scope: !15925)
!15931 = !DILocation(line: 123, column: 4, scope: !15925)
!15932 = !DILocation(line: 122, column: 2, scope: !15925)
!15933 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2500, file: !2500, line: 644, type: !15354, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15934)
!15934 = !{!15935, !15936, !15938}
!15935 = !DILocalVariable(name: "thread", arg: 1, scope: !15933, file: !2500, line: 644, type: !2395)
!15936 = !DILocalVariable(name: "__i", scope: !15937, file: !2500, line: 646, type: !15388)
!15937 = distinct !DILexicalBlock(scope: !15933, file: !2500, line: 646, column: 2)
!15938 = !DILocalVariable(name: "__key", scope: !15937, file: !2500, line: 646, type: !15388)
!15939 = !DILocation(line: 0, scope: !15933)
!15940 = !DILocation(line: 0, scope: !15937)
!15941 = !DILocation(line: 0, scope: !15396, inlinedAt: !15942)
!15942 = distinct !DILocation(line: 646, column: 2, scope: !15937)
!15943 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !15942)
!15945 = !DILocation(line: 0, scope: !15405, inlinedAt: !15944)
!15946 = !DILocation(line: 647, column: 3, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15948, file: !2500, line: 646, column: 26)
!15948 = distinct !DILexicalBlock(scope: !15937, file: !2500, line: 646, column: 2)
!15949 = !DILocation(line: 0, scope: !15423, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 646, column: 2, scope: !15948)
!15951 = !DILocation(line: 0, scope: !15431, inlinedAt: !15952)
!15952 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !15950)
!15953 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !15952)
!15954 = !DILocation(line: 649, column: 1, scope: !15933)
!15955 = distinct !DISubprogram(name: "z_sched_start", scope: !2500, file: !2500, line: 651, type: !15354, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15956)
!15956 = !{!15957, !15958}
!15957 = !DILocalVariable(name: "thread", arg: 1, scope: !15955, file: !2500, line: 651, type: !2395)
!15958 = !DILocalVariable(name: "key", scope: !15955, file: !2500, line: 653, type: !15388)
!15959 = !DILocation(line: 0, scope: !15955)
!15960 = !DILocation(line: 0, scope: !15396, inlinedAt: !15961)
!15961 = distinct !DILocation(line: 653, column: 25, scope: !15955)
!15962 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !15961)
!15964 = !DILocation(line: 0, scope: !15405, inlinedAt: !15963)
!15965 = !DILocation(line: 655, column: 6, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15955, file: !2500, line: 655, column: 6)
!15967 = !DILocation(line: 655, column: 6, scope: !15955)
!15968 = !DILocation(line: 0, scope: !15423, inlinedAt: !15969)
!15969 = distinct !DILocation(line: 656, column: 3, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15966, file: !2500, line: 655, column: 36)
!15971 = !DILocation(line: 0, scope: !15431, inlinedAt: !15972)
!15972 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !15969)
!15973 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !15972)
!15974 = !DILocation(line: 657, column: 3, scope: !15970)
!15975 = !DILocation(line: 660, column: 2, scope: !15955)
!15976 = !DILocation(line: 661, column: 2, scope: !15955)
!15977 = !DILocation(line: 662, column: 2, scope: !15955)
!15978 = !DILocation(line: 663, column: 1, scope: !15955)
!15979 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13926, file: !13926, line: 126, type: !15514, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15980)
!15980 = !{!15981}
!15981 = !DILocalVariable(name: "thread", arg: 1, scope: !15979, file: !13926, line: 126, type: !2395)
!15982 = !DILocation(line: 0, scope: !15979)
!15983 = !DILocation(line: 128, column: 23, scope: !15979)
!15984 = !DILocation(line: 128, column: 36, scope: !15979)
!15985 = !DILocation(line: 128, column: 56, scope: !15979)
!15986 = !DILocation(line: 128, column: 2, scope: !15979)
!15987 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13926, file: !13926, line: 155, type: !15354, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15988)
!15988 = !{!15989}
!15989 = !DILocalVariable(name: "thread", arg: 1, scope: !15987, file: !13926, line: 155, type: !2395)
!15990 = !DILocation(line: 0, scope: !15987)
!15991 = !DILocation(line: 157, column: 15, scope: !15987)
!15992 = !DILocation(line: 157, column: 28, scope: !15987)
!15993 = !DILocation(line: 158, column: 1, scope: !15987)
!15994 = distinct !DISubprogram(name: "z_reschedule", scope: !2500, file: !2500, line: 967, type: !15424, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !15995)
!15995 = !{!15996, !15997}
!15996 = !DILocalVariable(name: "lock", arg: 1, scope: !15994, file: !2500, line: 967, type: !15399)
!15997 = !DILocalVariable(name: "key", arg: 2, scope: !15994, file: !2500, line: 967, type: !15388)
!15998 = !DILocation(line: 0, scope: !15994)
!15999 = !DILocation(line: 969, column: 6, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15994, file: !2500, line: 969, column: 6)
!16001 = !DILocation(line: 969, column: 23, scope: !16000)
!16002 = !DILocation(line: 969, column: 26, scope: !16000)
!16003 = !DILocation(line: 969, column: 6, scope: !15994)
!16004 = !DILocalVariable(name: "key", arg: 2, scope: !16005, file: !14030, line: 193, type: !15388)
!16005 = distinct !DISubprogram(name: "z_swap", scope: !14030, file: !14030, line: 193, type: !16006, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16008)
!16006 = !DISubroutineType(types: !16007)
!16007 = !{!103, !15399, !15388}
!16008 = !{!16009, !16004}
!16009 = !DILocalVariable(name: "lock", arg: 1, scope: !16005, file: !14030, line: 193, type: !15399)
!16010 = !DILocation(line: 0, scope: !16005, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 970, column: 3, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16000, file: !2500, line: 969, column: 39)
!16013 = !DILocation(line: 196, column: 9, scope: !16005, inlinedAt: !16011)
!16014 = !DILocation(line: 971, column: 2, scope: !16012)
!16015 = !DILocation(line: 0, scope: !15423, inlinedAt: !16016)
!16016 = distinct !DILocation(line: 972, column: 3, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16000, file: !2500, line: 971, column: 9)
!16018 = !DILocation(line: 0, scope: !15431, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16016)
!16020 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16019)
!16021 = !DILocation(line: 975, column: 1, scope: !15994)
!16022 = distinct !DISubprogram(name: "resched", scope: !2500, file: !2500, line: 940, type: !16023, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16025)
!16023 = !DISubroutineType(types: !16024)
!16024 = !{!131, !108}
!16025 = !{!16026}
!16026 = !DILocalVariable(name: "key", arg: 1, scope: !16022, file: !2500, line: 940, type: !108)
!16027 = !DILocation(line: 0, scope: !16022)
!16028 = !DILocalVariable(name: "key", arg: 1, scope: !16029, file: !6962, line: 112, type: !32)
!16029 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6962, file: !6962, line: 112, type: !16030, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16032)
!16030 = !DISubroutineType(types: !16031)
!16031 = !{!131, !32}
!16032 = !{!16028}
!16033 = !DILocation(line: 0, scope: !16029, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 946, column: 9, scope: !16022)
!16035 = !DILocation(line: 115, column: 13, scope: !16029, inlinedAt: !16034)
!16036 = !DILocation(line: 946, column: 32, scope: !16022)
!16037 = !DILocation(line: 1031, column: 3, scope: !16038, inlinedAt: !16041)
!16038 = distinct !DISubprogram(name: "__get_IPSR", scope: !7280, file: !7280, line: 1027, type: !3574, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16039)
!16039 = !{!16040}
!16040 = !DILocalVariable(name: "result", scope: !16038, file: !7280, line: 1029, type: !108)
!16041 = distinct !DILocation(line: 48, column: 10, scope: !16042, inlinedAt: !16043)
!16042 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!16043 = distinct !DILocation(line: 946, column: 36, scope: !16022)
!16044 = !{i64 2871223}
!16045 = !DILocation(line: 0, scope: !16038, inlinedAt: !16041)
!16046 = !DILocation(line: 48, column: 9, scope: !16042, inlinedAt: !16043)
!16047 = !DILocation(line: 946, column: 2, scope: !16022)
!16048 = distinct !DISubprogram(name: "need_swap", scope: !2500, file: !2500, line: 953, type: !8297, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16049)
!16049 = !{!16050}
!16050 = !DILocalVariable(name: "new_thread", scope: !16048, file: !2500, line: 959, type: !2395)
!16051 = !DILocation(line: 962, column: 31, scope: !16048)
!16052 = !DILocation(line: 0, scope: !16048)
!16053 = !DILocation(line: 963, column: 23, scope: !16048)
!16054 = !DILocation(line: 963, column: 20, scope: !16048)
!16055 = !DILocation(line: 963, column: 2, scope: !16048)
!16056 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14030, file: !14030, line: 181, type: !7290, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16057)
!16057 = !{!16058, !16059}
!16058 = !DILocalVariable(name: "key", arg: 1, scope: !16056, file: !14030, line: 181, type: !32)
!16059 = !DILocalVariable(name: "ret", scope: !16056, file: !14030, line: 183, type: !103)
!16060 = !DILocation(line: 0, scope: !16056)
!16061 = !DILocation(line: 185, column: 8, scope: !16056)
!16062 = !DILocation(line: 186, column: 2, scope: !16056)
!16063 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2500, file: !2500, line: 665, type: !15354, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16064)
!16064 = !{!16065, !16066, !16068}
!16065 = !DILocalVariable(name: "thread", arg: 1, scope: !16063, file: !2500, line: 665, type: !2395)
!16066 = !DILocalVariable(name: "__i", scope: !16067, file: !2500, line: 671, type: !15388)
!16067 = distinct !DILexicalBlock(scope: !16063, file: !2500, line: 671, column: 2)
!16068 = !DILocalVariable(name: "__key", scope: !16067, file: !2500, line: 671, type: !15388)
!16069 = !DILocation(line: 0, scope: !16063)
!16070 = !DILocation(line: 669, column: 8, scope: !16063)
!16071 = !DILocation(line: 0, scope: !16067)
!16072 = !DILocation(line: 0, scope: !15396, inlinedAt: !16073)
!16073 = distinct !DILocation(line: 671, column: 2, scope: !16067)
!16074 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16075)
!16075 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16073)
!16076 = !DILocation(line: 0, scope: !15405, inlinedAt: !16075)
!16077 = !DILocation(line: 672, column: 7, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16079, file: !2500, line: 672, column: 7)
!16079 = distinct !DILexicalBlock(scope: !16080, file: !2500, line: 671, column: 26)
!16080 = distinct !DILexicalBlock(scope: !16067, file: !2500, line: 671, column: 2)
!16081 = !DILocation(line: 672, column: 7, scope: !16079)
!16082 = !DILocation(line: 0, scope: !15565, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 673, column: 4, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !16078, file: !2500, line: 672, column: 35)
!16085 = !DILocation(line: 266, column: 15, scope: !15565, inlinedAt: !16083)
!16086 = !DILocation(line: 266, column: 28, scope: !15565, inlinedAt: !16083)
!16087 = !DILocation(line: 0, scope: !15573, inlinedAt: !16088)
!16088 = distinct !DILocation(line: 268, column: 3, scope: !15577, inlinedAt: !16083)
!16089 = !DILocation(line: 234, column: 2, scope: !15573, inlinedAt: !16088)
!16090 = !DILocation(line: 674, column: 3, scope: !16084)
!16091 = !DILocation(line: 675, column: 3, scope: !16079)
!16092 = !DILocation(line: 676, column: 26, scope: !16079)
!16093 = !DILocation(line: 676, column: 23, scope: !16079)
!16094 = !DILocation(line: 676, column: 3, scope: !16079)
!16095 = !DILocation(line: 0, scope: !15423, inlinedAt: !16096)
!16096 = distinct !DILocation(line: 671, column: 2, scope: !16080)
!16097 = !DILocation(line: 0, scope: !15431, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16096)
!16099 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16098)
!16100 = !DILocation(line: 679, column: 16, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !16063, file: !2500, line: 679, column: 6)
!16102 = !DILocation(line: 679, column: 13, scope: !16101)
!16103 = !DILocation(line: 679, column: 6, scope: !16063)
!16104 = !DILocation(line: 680, column: 3, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16101, file: !2500, line: 679, column: 26)
!16106 = !DILocation(line: 681, column: 2, scope: !16105)
!16107 = !DILocation(line: 684, column: 1, scope: !16063)
!16108 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14319, file: !14319, line: 52, type: !15372, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16109)
!16109 = !{!16110}
!16110 = !DILocalVariable(name: "thread", arg: 1, scope: !16108, file: !14319, line: 52, type: !2395)
!16111 = !DILocation(line: 0, scope: !16108)
!16112 = !DILocation(line: 54, column: 39, scope: !16108)
!16113 = !DILocation(line: 54, column: 9, scope: !16108)
!16114 = !DILocation(line: 54, column: 2, scope: !16108)
!16115 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13926, file: !13926, line: 141, type: !15354, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16116)
!16116 = !{!16117}
!16117 = !DILocalVariable(name: "thread", arg: 1, scope: !16115, file: !13926, line: 141, type: !2395)
!16118 = !DILocation(line: 0, scope: !16115)
!16119 = !DILocation(line: 143, column: 15, scope: !16115)
!16120 = !DILocation(line: 143, column: 28, scope: !16115)
!16121 = !DILocation(line: 146, column: 1, scope: !16115)
!16122 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13926, file: !13926, line: 73, type: !334, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!16123 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 75, column: 30, scope: !16122)
!16125 = !DILocation(line: 0, scope: !15405, inlinedAt: !16124)
!16126 = !DILocation(line: 75, column: 9, scope: !16122)
!16127 = !DILocation(line: 76, column: 1, scope: !16122)
!16128 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2500, file: !2500, line: 977, type: !7369, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16129)
!16129 = !{!16130}
!16130 = !DILocalVariable(name: "key", arg: 1, scope: !16128, file: !2500, line: 977, type: !108)
!16131 = !DILocation(line: 0, scope: !16128)
!16132 = !DILocation(line: 979, column: 6, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16128, file: !2500, line: 979, column: 6)
!16134 = !DILocation(line: 979, column: 6, scope: !16128)
!16135 = !DILocation(line: 980, column: 3, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16133, file: !2500, line: 979, column: 20)
!16137 = !DILocation(line: 981, column: 2, scope: !16136)
!16138 = !DILocation(line: 0, scope: !15431, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 982, column: 3, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16133, file: !2500, line: 981, column: 9)
!16141 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16139)
!16142 = !DILocation(line: 985, column: 1, scope: !16128)
!16143 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2500, file: !2500, line: 695, type: !15354, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16144)
!16144 = !{!16145, !16146}
!16145 = !DILocalVariable(name: "thread", arg: 1, scope: !16143, file: !2500, line: 695, type: !2395)
!16146 = !DILocalVariable(name: "key", scope: !16143, file: !2500, line: 699, type: !15388)
!16147 = !DILocation(line: 0, scope: !16143)
!16148 = !DILocation(line: 0, scope: !15396, inlinedAt: !16149)
!16149 = distinct !DILocation(line: 699, column: 25, scope: !16143)
!16150 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16151)
!16151 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16149)
!16152 = !DILocation(line: 0, scope: !15405, inlinedAt: !16151)
!16153 = !DILocation(line: 702, column: 7, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16143, file: !2500, line: 702, column: 6)
!16155 = !DILocation(line: 702, column: 6, scope: !16143)
!16156 = !DILocation(line: 0, scope: !15423, inlinedAt: !16157)
!16157 = distinct !DILocation(line: 703, column: 3, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16154, file: !2500, line: 702, column: 38)
!16159 = !DILocation(line: 0, scope: !15431, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16157)
!16161 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16160)
!16162 = !DILocation(line: 704, column: 3, scope: !16158)
!16163 = !DILocation(line: 707, column: 2, scope: !16143)
!16164 = !DILocation(line: 708, column: 2, scope: !16143)
!16165 = !DILocation(line: 710, column: 2, scope: !16143)
!16166 = !DILocation(line: 713, column: 1, scope: !16143)
!16167 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13926, file: !13926, line: 96, type: !15514, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16168)
!16168 = !{!16169}
!16169 = !DILocalVariable(name: "thread", arg: 1, scope: !16167, file: !13926, line: 96, type: !2395)
!16170 = !DILocation(line: 0, scope: !16167)
!16171 = !DILocation(line: 98, column: 23, scope: !16167)
!16172 = !DILocation(line: 98, column: 36, scope: !16167)
!16173 = !DILocation(line: 98, column: 57, scope: !16167)
!16174 = !DILocation(line: 98, column: 2, scope: !16167)
!16175 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13926, file: !13926, line: 148, type: !15354, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16176)
!16176 = !{!16177}
!16177 = !DILocalVariable(name: "thread", arg: 1, scope: !16175, file: !13926, line: 148, type: !2395)
!16178 = !DILocation(line: 0, scope: !16175)
!16179 = !DILocation(line: 150, column: 15, scope: !16175)
!16180 = !DILocation(line: 150, column: 28, scope: !16175)
!16181 = !DILocation(line: 153, column: 1, scope: !16175)
!16182 = distinct !DISubprogram(name: "z_pend_thread", scope: !2500, file: !2500, line: 770, type: !16183, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16189)
!16183 = !DISubroutineType(types: !16184)
!16184 = !{null, !2395, !2426, !16185}
!16185 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16186)
!16186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16187)
!16187 = !{!16188}
!16188 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16186, file: !105, line: 66, baseType: !104, size: 64)
!16189 = !{!16190, !16191, !16192, !16193, !16195}
!16190 = !DILocalVariable(name: "thread", arg: 1, scope: !16182, file: !2500, line: 770, type: !2395)
!16191 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16182, file: !2500, line: 770, type: !2426)
!16192 = !DILocalVariable(name: "timeout", arg: 3, scope: !16182, file: !2500, line: 771, type: !16185)
!16193 = !DILocalVariable(name: "__i", scope: !16194, file: !2500, line: 774, type: !15388)
!16194 = distinct !DILexicalBlock(scope: !16182, file: !2500, line: 774, column: 2)
!16195 = !DILocalVariable(name: "__key", scope: !16194, file: !2500, line: 774, type: !15388)
!16196 = !DILocation(line: 0, scope: !16182)
!16197 = !DILocation(line: 0, scope: !16194)
!16198 = !DILocation(line: 0, scope: !15396, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 774, column: 2, scope: !16194)
!16200 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16201)
!16201 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16199)
!16202 = !DILocation(line: 0, scope: !15405, inlinedAt: !16201)
!16203 = !DILocation(line: 775, column: 3, scope: !16204)
!16204 = distinct !DILexicalBlock(scope: !16205, file: !2500, line: 774, column: 26)
!16205 = distinct !DILexicalBlock(scope: !16194, file: !2500, line: 774, column: 2)
!16206 = !DILocation(line: 0, scope: !15423, inlinedAt: !16207)
!16207 = distinct !DILocation(line: 774, column: 2, scope: !16205)
!16208 = !DILocation(line: 0, scope: !15431, inlinedAt: !16209)
!16209 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16207)
!16210 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16209)
!16211 = !DILocation(line: 777, column: 1, scope: !16182)
!16212 = distinct !DISubprogram(name: "pend_locked", scope: !2500, file: !2500, line: 760, type: !16183, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16213)
!16213 = !{!16214, !16215, !16216}
!16214 = !DILocalVariable(name: "thread", arg: 1, scope: !16212, file: !2500, line: 760, type: !2395)
!16215 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16212, file: !2500, line: 760, type: !2426)
!16216 = !DILocalVariable(name: "timeout", arg: 3, scope: !16212, file: !2500, line: 761, type: !16185)
!16217 = !DILocation(line: 0, scope: !16212)
!16218 = !DILocation(line: 766, column: 2, scope: !16212)
!16219 = !DILocation(line: 767, column: 2, scope: !16212)
!16220 = !DILocation(line: 768, column: 1, scope: !16212)
!16221 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2500, file: !2500, line: 740, type: !16222, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16224)
!16222 = !DISubroutineType(types: !16223)
!16223 = !{null, !2395, !2426}
!16224 = !{!16225, !16226}
!16225 = !DILocalVariable(name: "thread", arg: 1, scope: !16221, file: !2500, line: 740, type: !2395)
!16226 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16221, file: !2500, line: 740, type: !2426)
!16227 = !DILocation(line: 0, scope: !16221)
!16228 = !DILocation(line: 742, column: 2, scope: !16221)
!16229 = !DILocation(line: 743, column: 2, scope: !16221)
!16230 = !DILocation(line: 747, column: 13, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16221, file: !2500, line: 747, column: 6)
!16232 = !DILocation(line: 747, column: 6, scope: !16221)
!16233 = !DILocation(line: 748, column: 16, scope: !16234)
!16234 = distinct !DILexicalBlock(scope: !16231, file: !2500, line: 747, column: 22)
!16235 = !DILocation(line: 748, column: 26, scope: !16234)
!16236 = !DILocation(line: 749, column: 28, scope: !16234)
!16237 = !DILocation(line: 0, scope: !15596, inlinedAt: !16238)
!16238 = distinct !DILocation(line: 749, column: 3, scope: !16234)
!16239 = !DILocation(line: 188, column: 2, scope: !15606, inlinedAt: !16238)
!16240 = !DILocation(line: 188, column: 2, scope: !15608, inlinedAt: !16238)
!16241 = !DILocation(line: 0, scope: !15606, inlinedAt: !16238)
!16242 = !DILocation(line: 189, column: 7, scope: !15611, inlinedAt: !16238)
!16243 = !DILocation(line: 189, column: 35, scope: !15611, inlinedAt: !16238)
!16244 = !DILocation(line: 189, column: 7, scope: !15612, inlinedAt: !16238)
!16245 = !DILocation(line: 191, column: 21, scope: !15616, inlinedAt: !16238)
!16246 = !DILocation(line: 190, column: 4, scope: !15616, inlinedAt: !16238)
!16247 = !DILocation(line: 192, column: 4, scope: !15616, inlinedAt: !16238)
!16248 = distinct !{!16248, !16239, !16249}
!16249 = !DILocation(line: 194, column: 2, scope: !15606, inlinedAt: !16238)
!16250 = !DILocation(line: 196, column: 37, scope: !15596, inlinedAt: !16238)
!16251 = !DILocation(line: 196, column: 2, scope: !15596, inlinedAt: !16238)
!16252 = !DILocation(line: 197, column: 1, scope: !15596, inlinedAt: !16238)
!16253 = !DILocation(line: 751, column: 1, scope: !16221)
!16254 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2500, file: !2500, line: 753, type: !16255, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16257)
!16255 = !DISubroutineType(types: !16256)
!16256 = !{null, !2395, !16185}
!16257 = !{!16258, !16259}
!16258 = !DILocalVariable(name: "thread", arg: 1, scope: !16254, file: !2500, line: 753, type: !2395)
!16259 = !DILocalVariable(name: "timeout", arg: 2, scope: !16254, file: !2500, line: 753, type: !16185)
!16260 = !DILocation(line: 0, scope: !16254)
!16261 = !DILocation(line: 755, column: 7, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16254, file: !2500, line: 755, column: 6)
!16263 = !DILocation(line: 755, column: 6, scope: !16254)
!16264 = !DILocation(line: 756, column: 3, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16262, file: !2500, line: 755, column: 41)
!16266 = !DILocation(line: 757, column: 2, scope: !16265)
!16267 = !DILocation(line: 758, column: 1, scope: !16254)
!16268 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14319, file: !14319, line: 47, type: !16255, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16269)
!16269 = !{!16270, !16271}
!16270 = !DILocalVariable(name: "thread", arg: 1, scope: !16268, file: !14319, line: 47, type: !2395)
!16271 = !DILocalVariable(name: "ticks", arg: 2, scope: !16268, file: !14319, line: 47, type: !16185)
!16272 = !DILocation(line: 0, scope: !16268)
!16273 = !DILocation(line: 49, column: 30, scope: !16268)
!16274 = !DILocation(line: 49, column: 2, scope: !16268)
!16275 = !DILocation(line: 50, column: 1, scope: !16268)
!16276 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2500, file: !2500, line: 795, type: !2452, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16277)
!16277 = !{!16278, !16279, !16280, !16282, !16283}
!16278 = !DILocalVariable(name: "timeout", arg: 1, scope: !16276, file: !2500, line: 795, type: !2454)
!16279 = !DILocalVariable(name: "thread", scope: !16276, file: !2500, line: 797, type: !2395)
!16280 = !DILocalVariable(name: "__i", scope: !16281, file: !2500, line: 800, type: !15388)
!16281 = distinct !DILexicalBlock(scope: !16276, file: !2500, line: 800, column: 2)
!16282 = !DILocalVariable(name: "__key", scope: !16281, file: !2500, line: 800, type: !15388)
!16283 = !DILocalVariable(name: "killed", scope: !16284, file: !2500, line: 801, type: !131)
!16284 = distinct !DILexicalBlock(scope: !16285, file: !2500, line: 800, column: 26)
!16285 = distinct !DILexicalBlock(scope: !16281, file: !2500, line: 800, column: 2)
!16286 = !DILocation(line: 0, scope: !16276)
!16287 = !DILocation(line: 797, column: 28, scope: !16276)
!16288 = !DILocation(line: 0, scope: !16281)
!16289 = !DILocation(line: 0, scope: !15396, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 800, column: 2, scope: !16281)
!16291 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16292)
!16292 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16290)
!16293 = !DILocation(line: 0, scope: !15405, inlinedAt: !16292)
!16294 = !DILocation(line: 801, column: 27, scope: !16284)
!16295 = !DILocation(line: 801, column: 32, scope: !16284)
!16296 = !DILocation(line: 801, column: 61, scope: !16284)
!16297 = !DILocation(line: 0, scope: !16284)
!16298 = !DILocation(line: 804, column: 7, scope: !16284)
!16299 = !DILocation(line: 805, column: 21, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16301, file: !2500, line: 805, column: 8)
!16301 = distinct !DILexicalBlock(scope: !16302, file: !2500, line: 804, column: 16)
!16302 = distinct !DILexicalBlock(scope: !16284, file: !2500, line: 804, column: 7)
!16303 = !DILocation(line: 805, column: 31, scope: !16300)
!16304 = !DILocation(line: 805, column: 8, scope: !16301)
!16305 = !DILocation(line: 806, column: 5, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16300, file: !2500, line: 805, column: 40)
!16307 = !DILocation(line: 807, column: 4, scope: !16306)
!16308 = !DILocation(line: 808, column: 4, scope: !16301)
!16309 = !DILocation(line: 809, column: 4, scope: !16301)
!16310 = !DILocation(line: 810, column: 4, scope: !16301)
!16311 = !DILocation(line: 811, column: 3, scope: !16301)
!16312 = !DILocation(line: 0, scope: !15423, inlinedAt: !16313)
!16313 = distinct !DILocation(line: 800, column: 2, scope: !16285)
!16314 = !DILocation(line: 0, scope: !15431, inlinedAt: !16315)
!16315 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16313)
!16316 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16315)
!16317 = !DILocation(line: 813, column: 1, scope: !16276)
!16318 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2500, file: !2500, line: 779, type: !15354, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16319)
!16319 = !{!16320}
!16320 = !DILocalVariable(name: "thread", arg: 1, scope: !16318, file: !2500, line: 779, type: !2395)
!16321 = !DILocation(line: 0, scope: !16318)
!16322 = !DILocation(line: 781, column: 2, scope: !16318)
!16323 = !DILocation(line: 782, column: 2, scope: !16318)
!16324 = !DILocation(line: 783, column: 15, scope: !16318)
!16325 = !DILocation(line: 783, column: 25, scope: !16318)
!16326 = !DILocation(line: 784, column: 1, scope: !16318)
!16327 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13926, file: !13926, line: 165, type: !15354, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16328)
!16328 = !{!16329}
!16329 = !DILocalVariable(name: "thread", arg: 1, scope: !16327, file: !13926, line: 165, type: !2395)
!16330 = !DILocation(line: 0, scope: !16327)
!16331 = !DILocation(line: 167, column: 15, scope: !16327)
!16332 = !DILocation(line: 167, column: 28, scope: !16327)
!16333 = !DILocation(line: 168, column: 1, scope: !16327)
!16334 = distinct !DISubprogram(name: "unready_thread", scope: !2500, file: !2500, line: 731, type: !15354, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16335)
!16335 = !{!16336}
!16336 = !DILocalVariable(name: "thread", arg: 1, scope: !16334, file: !2500, line: 731, type: !2395)
!16337 = !DILocation(line: 0, scope: !16334)
!16338 = !DILocation(line: 733, column: 6, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16334, file: !2500, line: 733, column: 6)
!16340 = !DILocation(line: 733, column: 6, scope: !16334)
!16341 = !DILocation(line: 0, scope: !15565, inlinedAt: !16342)
!16342 = distinct !DILocation(line: 734, column: 3, scope: !16343)
!16343 = distinct !DILexicalBlock(scope: !16339, file: !2500, line: 733, column: 34)
!16344 = !DILocation(line: 266, column: 15, scope: !15565, inlinedAt: !16342)
!16345 = !DILocation(line: 266, column: 28, scope: !15565, inlinedAt: !16342)
!16346 = !DILocation(line: 0, scope: !15573, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 268, column: 3, scope: !15577, inlinedAt: !16342)
!16348 = !DILocation(line: 234, column: 2, scope: !15573, inlinedAt: !16347)
!16349 = !DILocation(line: 735, column: 2, scope: !16343)
!16350 = !DILocation(line: 736, column: 25, scope: !16334)
!16351 = !DILocation(line: 736, column: 22, scope: !16334)
!16352 = !DILocation(line: 736, column: 2, scope: !16334)
!16353 = !DILocation(line: 737, column: 1, scope: !16334)
!16354 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13926, file: !13926, line: 160, type: !15354, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16355)
!16355 = !{!16356}
!16356 = !DILocalVariable(name: "thread", arg: 1, scope: !16354, file: !13926, line: 160, type: !2395)
!16357 = !DILocation(line: 0, scope: !16354)
!16358 = !DILocation(line: 162, column: 15, scope: !16354)
!16359 = !DILocation(line: 162, column: 28, scope: !16354)
!16360 = !DILocation(line: 163, column: 1, scope: !16354)
!16361 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2500, file: !2500, line: 786, type: !15354, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16362)
!16362 = !{!16363, !16364, !16366}
!16363 = !DILocalVariable(name: "thread", arg: 1, scope: !16361, file: !2500, line: 786, type: !2395)
!16364 = !DILocalVariable(name: "__i", scope: !16365, file: !2500, line: 788, type: !15388)
!16365 = distinct !DILexicalBlock(scope: !16361, file: !2500, line: 788, column: 2)
!16366 = !DILocalVariable(name: "__key", scope: !16365, file: !2500, line: 788, type: !15388)
!16367 = !DILocation(line: 0, scope: !16361)
!16368 = !DILocation(line: 0, scope: !16365)
!16369 = !DILocation(line: 0, scope: !15396, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 788, column: 2, scope: !16365)
!16371 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16372)
!16372 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16370)
!16373 = !DILocation(line: 0, scope: !15405, inlinedAt: !16372)
!16374 = !DILocation(line: 789, column: 3, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16376, file: !2500, line: 788, column: 26)
!16376 = distinct !DILexicalBlock(scope: !16365, file: !2500, line: 788, column: 2)
!16377 = !DILocation(line: 0, scope: !15423, inlinedAt: !16378)
!16378 = distinct !DILocation(line: 788, column: 2, scope: !16376)
!16379 = !DILocation(line: 0, scope: !15431, inlinedAt: !16380)
!16380 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16378)
!16381 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16380)
!16382 = !DILocation(line: 791, column: 1, scope: !16361)
!16383 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2500, file: !2500, line: 816, type: !16384, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16386)
!16384 = !DISubroutineType(types: !16385)
!16385 = !{!103, !108, !2426, !16185}
!16386 = !{!16387, !16388, !16389, !16390, !16391, !16393}
!16387 = !DILocalVariable(name: "key", arg: 1, scope: !16383, file: !2500, line: 816, type: !108)
!16388 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16383, file: !2500, line: 816, type: !2426)
!16389 = !DILocalVariable(name: "timeout", arg: 3, scope: !16383, file: !2500, line: 816, type: !16185)
!16390 = !DILocalVariable(name: "ret", scope: !16383, file: !2500, line: 828, type: !103)
!16391 = !DILocalVariable(name: "__i", scope: !16392, file: !2500, line: 829, type: !15388)
!16392 = distinct !DILexicalBlock(scope: !16383, file: !2500, line: 829, column: 2)
!16393 = !DILocalVariable(name: "__key", scope: !16392, file: !2500, line: 829, type: !15388)
!16394 = !DILocation(line: 0, scope: !16383)
!16395 = !DILocation(line: 823, column: 14, scope: !16383)
!16396 = !DILocation(line: 823, column: 2, scope: !16383)
!16397 = !DILocation(line: 826, column: 20, scope: !16383)
!16398 = !DILocation(line: 826, column: 18, scope: !16383)
!16399 = !DILocation(line: 828, column: 12, scope: !16383)
!16400 = !DILocation(line: 0, scope: !16392)
!16401 = !DILocation(line: 0, scope: !15396, inlinedAt: !16402)
!16402 = distinct !DILocation(line: 829, column: 2, scope: !16392)
!16403 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16404)
!16404 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16402)
!16405 = !DILocation(line: 0, scope: !15405, inlinedAt: !16404)
!16406 = !DILocation(line: 830, column: 7, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16408, file: !2500, line: 830, column: 7)
!16408 = distinct !DILexicalBlock(scope: !16409, file: !2500, line: 829, column: 26)
!16409 = distinct !DILexicalBlock(scope: !16392, file: !2500, line: 829, column: 2)
!16410 = !DILocation(line: 830, column: 26, scope: !16407)
!16411 = !DILocation(line: 830, column: 23, scope: !16407)
!16412 = !DILocation(line: 830, column: 7, scope: !16408)
!16413 = !DILocation(line: 831, column: 20, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16407, file: !2500, line: 830, column: 36)
!16415 = !DILocation(line: 832, column: 3, scope: !16414)
!16416 = !DILocation(line: 0, scope: !15423, inlinedAt: !16417)
!16417 = distinct !DILocation(line: 829, column: 2, scope: !16409)
!16418 = !DILocation(line: 0, scope: !15431, inlinedAt: !16419)
!16419 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16417)
!16420 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16419)
!16421 = !DILocation(line: 834, column: 2, scope: !16383)
!16422 = distinct !DISubprogram(name: "z_pend_curr", scope: !2500, file: !2500, line: 840, type: !16423, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16425)
!16423 = !DISubroutineType(types: !16424)
!16424 = !{!103, !15399, !15388, !2426, !16185}
!16425 = !{!16426, !16427, !16428, !16429}
!16426 = !DILocalVariable(name: "lock", arg: 1, scope: !16422, file: !2500, line: 840, type: !15399)
!16427 = !DILocalVariable(name: "key", arg: 2, scope: !16422, file: !2500, line: 840, type: !15388)
!16428 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16422, file: !2500, line: 841, type: !2426)
!16429 = !DILocalVariable(name: "timeout", arg: 4, scope: !16422, file: !2500, line: 841, type: !16185)
!16430 = !DILocation(line: 0, scope: !16422)
!16431 = !DILocation(line: 844, column: 20, scope: !16422)
!16432 = !DILocation(line: 844, column: 18, scope: !16422)
!16433 = !DILocation(line: 0, scope: !15396, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 856, column: 9, scope: !16422)
!16435 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16436)
!16436 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16434)
!16437 = !DILocation(line: 0, scope: !15405, inlinedAt: !16436)
!16438 = !DILocation(line: 857, column: 14, scope: !16422)
!16439 = !DILocation(line: 857, column: 2, scope: !16422)
!16440 = !DILocation(line: 0, scope: !16005, inlinedAt: !16441)
!16441 = distinct !DILocation(line: 859, column: 9, scope: !16422)
!16442 = !DILocation(line: 196, column: 9, scope: !16005, inlinedAt: !16441)
!16443 = !DILocation(line: 859, column: 2, scope: !16422)
!16444 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2500, file: !2500, line: 862, type: !16445, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16447)
!16445 = !DISubroutineType(types: !16446)
!16446 = !{!2395, !2426}
!16447 = !{!16448, !16449, !16450, !16452}
!16448 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16444, file: !2500, line: 862, type: !2426)
!16449 = !DILocalVariable(name: "thread", scope: !16444, file: !2500, line: 864, type: !2395)
!16450 = !DILocalVariable(name: "__i", scope: !16451, file: !2500, line: 866, type: !15388)
!16451 = distinct !DILexicalBlock(scope: !16444, file: !2500, line: 866, column: 2)
!16452 = !DILocalVariable(name: "__key", scope: !16451, file: !2500, line: 866, type: !15388)
!16453 = !DILocation(line: 0, scope: !16444)
!16454 = !DILocation(line: 0, scope: !16451)
!16455 = !DILocation(line: 0, scope: !15396, inlinedAt: !16456)
!16456 = distinct !DILocation(line: 866, column: 2, scope: !16451)
!16457 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16456)
!16459 = !DILocation(line: 0, scope: !15405, inlinedAt: !16458)
!16460 = !DILocation(line: 867, column: 12, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16462, file: !2500, line: 866, column: 26)
!16462 = distinct !DILexicalBlock(scope: !16451, file: !2500, line: 866, column: 2)
!16463 = !DILocation(line: 869, column: 14, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16461, file: !2500, line: 869, column: 7)
!16465 = !DILocation(line: 869, column: 7, scope: !16461)
!16466 = !DILocation(line: 870, column: 4, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !16464, file: !2500, line: 869, column: 23)
!16468 = !DILocation(line: 871, column: 3, scope: !16467)
!16469 = !DILocation(line: 0, scope: !15423, inlinedAt: !16470)
!16470 = distinct !DILocation(line: 866, column: 2, scope: !16462)
!16471 = !DILocation(line: 0, scope: !15431, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16470)
!16473 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16472)
!16474 = !DILocation(line: 874, column: 2, scope: !16444)
!16475 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2500, file: !2500, line: 877, type: !16445, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16476)
!16476 = !{!16477, !16478, !16479, !16481}
!16477 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16475, file: !2500, line: 877, type: !2426)
!16478 = !DILocalVariable(name: "thread", scope: !16475, file: !2500, line: 879, type: !2395)
!16479 = !DILocalVariable(name: "__i", scope: !16480, file: !2500, line: 881, type: !15388)
!16480 = distinct !DILexicalBlock(scope: !16475, file: !2500, line: 881, column: 2)
!16481 = !DILocalVariable(name: "__key", scope: !16480, file: !2500, line: 881, type: !15388)
!16482 = !DILocation(line: 0, scope: !16475)
!16483 = !DILocation(line: 0, scope: !16480)
!16484 = !DILocation(line: 0, scope: !15396, inlinedAt: !16485)
!16485 = distinct !DILocation(line: 881, column: 2, scope: !16480)
!16486 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16485)
!16488 = !DILocation(line: 0, scope: !15405, inlinedAt: !16487)
!16489 = !DILocation(line: 882, column: 12, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16491, file: !2500, line: 881, column: 26)
!16491 = distinct !DILexicalBlock(scope: !16480, file: !2500, line: 881, column: 2)
!16492 = !DILocation(line: 884, column: 14, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16490, file: !2500, line: 884, column: 7)
!16494 = !DILocation(line: 884, column: 7, scope: !16490)
!16495 = !DILocation(line: 885, column: 4, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16493, file: !2500, line: 884, column: 23)
!16497 = !DILocation(line: 886, column: 10, scope: !16496)
!16498 = !DILocation(line: 887, column: 3, scope: !16496)
!16499 = !DILocation(line: 0, scope: !15423, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 881, column: 2, scope: !16491)
!16501 = !DILocation(line: 0, scope: !15431, inlinedAt: !16502)
!16502 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16500)
!16503 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16502)
!16504 = !DILocation(line: 890, column: 2, scope: !16475)
!16505 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2500, file: !2500, line: 893, type: !15354, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16506)
!16506 = !{!16507}
!16507 = !DILocalVariable(name: "thread", arg: 1, scope: !16505, file: !2500, line: 893, type: !2395)
!16508 = !DILocation(line: 0, scope: !16505)
!16509 = !DILocation(line: 0, scope: !16361, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 895, column: 2, scope: !16505)
!16511 = !DILocation(line: 0, scope: !16365, inlinedAt: !16510)
!16512 = !DILocation(line: 0, scope: !15396, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 788, column: 2, scope: !16365, inlinedAt: !16510)
!16514 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16513)
!16516 = !DILocation(line: 0, scope: !15405, inlinedAt: !16515)
!16517 = !DILocation(line: 789, column: 3, scope: !16375, inlinedAt: !16510)
!16518 = !DILocation(line: 0, scope: !15423, inlinedAt: !16519)
!16519 = distinct !DILocation(line: 788, column: 2, scope: !16376, inlinedAt: !16510)
!16520 = !DILocation(line: 0, scope: !15431, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16519)
!16522 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16521)
!16523 = !DILocation(line: 896, column: 8, scope: !16505)
!16524 = !DILocation(line: 897, column: 1, scope: !16505)
!16525 = distinct !DISubprogram(name: "z_set_prio", scope: !2500, file: !2500, line: 902, type: !15716, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16526)
!16526 = !{!16527, !16528, !16529, !16530, !16532}
!16527 = !DILocalVariable(name: "thread", arg: 1, scope: !16525, file: !2500, line: 902, type: !2395)
!16528 = !DILocalVariable(name: "prio", arg: 2, scope: !16525, file: !2500, line: 902, type: !103)
!16529 = !DILocalVariable(name: "need_sched", scope: !16525, file: !2500, line: 904, type: !131)
!16530 = !DILocalVariable(name: "__i", scope: !16531, file: !2500, line: 906, type: !15388)
!16531 = distinct !DILexicalBlock(scope: !16525, file: !2500, line: 906, column: 2)
!16532 = !DILocalVariable(name: "__key", scope: !16531, file: !2500, line: 906, type: !15388)
!16533 = !DILocation(line: 0, scope: !16525)
!16534 = !DILocation(line: 0, scope: !16531)
!16535 = !DILocation(line: 0, scope: !15396, inlinedAt: !16536)
!16536 = distinct !DILocation(line: 906, column: 2, scope: !16531)
!16537 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16536)
!16539 = !DILocation(line: 0, scope: !15405, inlinedAt: !16538)
!16540 = !DILocation(line: 907, column: 16, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16542, file: !2500, line: 906, column: 26)
!16542 = distinct !DILexicalBlock(scope: !16531, file: !2500, line: 906, column: 2)
!16543 = !DILocation(line: 909, column: 7, scope: !16541)
!16544 = !DILocation(line: 0, scope: !15565, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 912, column: 5, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16547, file: !2500, line: 911, column: 63)
!16547 = distinct !DILexicalBlock(scope: !16548, file: !2500, line: 911, column: 8)
!16548 = distinct !DILexicalBlock(scope: !16549, file: !2500, line: 909, column: 19)
!16549 = distinct !DILexicalBlock(scope: !16541, file: !2500, line: 909, column: 7)
!16550 = !DILocation(line: 266, column: 28, scope: !15565, inlinedAt: !16545)
!16551 = !DILocation(line: 0, scope: !15573, inlinedAt: !16552)
!16552 = distinct !DILocation(line: 268, column: 3, scope: !15577, inlinedAt: !16545)
!16553 = !DILocation(line: 234, column: 2, scope: !15573, inlinedAt: !16552)
!16554 = !DILocation(line: 913, column: 23, scope: !16546)
!16555 = !DILocation(line: 0, scope: !15582, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 914, column: 5, scope: !16546)
!16557 = !DILocation(line: 252, column: 28, scope: !15582, inlinedAt: !16556)
!16558 = !DILocation(line: 0, scope: !15589, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 254, column: 3, scope: !15593, inlinedAt: !16556)
!16560 = !DILocation(line: 0, scope: !15596, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 229, column: 2, scope: !15589, inlinedAt: !16559)
!16562 = !DILocation(line: 188, column: 2, scope: !15606, inlinedAt: !16561)
!16563 = !DILocation(line: 188, column: 2, scope: !15608, inlinedAt: !16561)
!16564 = !DILocation(line: 0, scope: !15606, inlinedAt: !16561)
!16565 = !DILocation(line: 189, column: 7, scope: !15611, inlinedAt: !16561)
!16566 = !DILocation(line: 189, column: 35, scope: !15611, inlinedAt: !16561)
!16567 = !DILocation(line: 189, column: 7, scope: !15612, inlinedAt: !16561)
!16568 = !DILocation(line: 190, column: 4, scope: !15616, inlinedAt: !16561)
!16569 = !DILocation(line: 192, column: 4, scope: !15616, inlinedAt: !16561)
!16570 = distinct !{!16570, !16562, !16571}
!16571 = !DILocation(line: 194, column: 2, scope: !15606, inlinedAt: !16561)
!16572 = !DILocation(line: 196, column: 2, scope: !15596, inlinedAt: !16561)
!16573 = !DILocation(line: 197, column: 1, scope: !15596, inlinedAt: !16561)
!16574 = !DILocation(line: 918, column: 4, scope: !16548)
!16575 = !DILocation(line: 919, column: 3, scope: !16548)
!16576 = !DILocation(line: 920, column: 22, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16549, file: !2500, line: 919, column: 10)
!16578 = !DILocation(line: 0, scope: !15423, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 906, column: 2, scope: !16542)
!16580 = !DILocation(line: 0, scope: !15431, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16579)
!16582 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16581)
!16583 = !DILocation(line: 926, column: 2, scope: !16525)
!16584 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2500, file: !2500, line: 929, type: !16585, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16587)
!16585 = !DISubroutineType(types: !16586)
!16586 = !{null, !2395, !103}
!16587 = !{!16588, !16589, !16590}
!16588 = !DILocalVariable(name: "thread", arg: 1, scope: !16584, file: !2500, line: 929, type: !2395)
!16589 = !DILocalVariable(name: "prio", arg: 2, scope: !16584, file: !2500, line: 929, type: !103)
!16590 = !DILocalVariable(name: "need_sched", scope: !16584, file: !2500, line: 931, type: !131)
!16591 = !DILocation(line: 0, scope: !16584)
!16592 = !DILocation(line: 931, column: 20, scope: !16584)
!16593 = !DILocation(line: 935, column: 17, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16584, file: !2500, line: 935, column: 6)
!16595 = !DILocation(line: 935, column: 20, scope: !16594)
!16596 = !DILocation(line: 935, column: 35, scope: !16594)
!16597 = !DILocation(line: 935, column: 48, scope: !16594)
!16598 = !DILocation(line: 935, column: 6, scope: !16584)
!16599 = !DILocation(line: 936, column: 3, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16594, file: !2500, line: 935, column: 55)
!16601 = !DILocation(line: 937, column: 2, scope: !16600)
!16602 = !DILocation(line: 938, column: 1, scope: !16584)
!16603 = distinct !DISubprogram(name: "k_sched_lock", scope: !2500, file: !2500, line: 987, type: !334, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16604)
!16604 = !{!16605, !16607}
!16605 = !DILocalVariable(name: "__i", scope: !16606, file: !2500, line: 989, type: !15388)
!16606 = distinct !DILexicalBlock(scope: !16603, file: !2500, line: 989, column: 2)
!16607 = !DILocalVariable(name: "__key", scope: !16606, file: !2500, line: 989, type: !15388)
!16608 = !DILocation(line: 0, scope: !16606)
!16609 = !DILocation(line: 0, scope: !15396, inlinedAt: !16610)
!16610 = distinct !DILocation(line: 989, column: 2, scope: !16606)
!16611 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16612)
!16612 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16610)
!16613 = !DILocation(line: 0, scope: !15405, inlinedAt: !16612)
!16614 = !DILocation(line: 992, column: 3, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16616, file: !2500, line: 989, column: 26)
!16616 = distinct !DILexicalBlock(scope: !16606, file: !2500, line: 989, column: 2)
!16617 = !DILocation(line: 0, scope: !15423, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 989, column: 2, scope: !16616)
!16619 = !DILocation(line: 0, scope: !15431, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16618)
!16621 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16620)
!16622 = !DILocation(line: 994, column: 1, scope: !16603)
!16623 = distinct !DISubprogram(name: "z_sched_lock", scope: !13926, file: !13926, line: 251, type: !334, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!16624 = !DILocation(line: 256, column: 4, scope: !16623)
!16625 = !DILocation(line: 256, column: 19, scope: !16623)
!16626 = !DILocation(line: 256, column: 2, scope: !16623)
!16627 = !DILocation(line: 258, column: 2, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16623, file: !13926, line: 258, column: 2)
!16629 = !{i64 2154190614}
!16630 = !DILocation(line: 259, column: 1, scope: !16623)
!16631 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2500, file: !2500, line: 996, type: !334, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16632)
!16632 = !{!16633, !16635}
!16633 = !DILocalVariable(name: "__i", scope: !16634, file: !2500, line: 998, type: !15388)
!16634 = distinct !DILexicalBlock(scope: !16631, file: !2500, line: 998, column: 2)
!16635 = !DILocalVariable(name: "__key", scope: !16634, file: !2500, line: 998, type: !15388)
!16636 = !DILocation(line: 0, scope: !16634)
!16637 = !DILocation(line: 0, scope: !15396, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 998, column: 2, scope: !16634)
!16639 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16638)
!16641 = !DILocation(line: 0, scope: !15405, inlinedAt: !16640)
!16642 = !DILocation(line: 1002, column: 5, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16644, file: !2500, line: 998, column: 26)
!16644 = distinct !DILexicalBlock(scope: !16634, file: !2500, line: 998, column: 2)
!16645 = !DILocation(line: 1002, column: 20, scope: !16643)
!16646 = !DILocation(line: 1002, column: 3, scope: !16643)
!16647 = !DILocation(line: 1003, column: 3, scope: !16643)
!16648 = !DILocation(line: 0, scope: !15423, inlinedAt: !16649)
!16649 = distinct !DILocation(line: 998, column: 2, scope: !16644)
!16650 = !DILocation(line: 0, scope: !15431, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !16649)
!16652 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !16651)
!16653 = !DILocation(line: 1011, column: 2, scope: !16631)
!16654 = !DILocation(line: 1012, column: 1, scope: !16631)
!16655 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2500, file: !2500, line: 1014, type: !15704, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!16656 = !DILocation(line: 1028, column: 25, scope: !16655)
!16657 = !DILocation(line: 1028, column: 2, scope: !16655)
!16658 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2500, file: !2500, line: 1155, type: !16659, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16661)
!16659 = !DISubroutineType(types: !16660)
!16660 = !{!131, !2424, !2424}
!16661 = !{!16662, !16663, !16664, !16665, !16666}
!16662 = !DILocalVariable(name: "a", arg: 1, scope: !16658, file: !2500, line: 1155, type: !2424)
!16663 = !DILocalVariable(name: "b", arg: 2, scope: !16658, file: !2500, line: 1155, type: !2424)
!16664 = !DILocalVariable(name: "thread_a", scope: !16658, file: !2500, line: 1157, type: !2395)
!16665 = !DILocalVariable(name: "thread_b", scope: !16658, file: !2500, line: 1157, type: !2395)
!16666 = !DILocalVariable(name: "cmp", scope: !16658, file: !2500, line: 1158, type: !331)
!16667 = !DILocation(line: 0, scope: !16658)
!16668 = !DILocation(line: 1160, column: 13, scope: !16658)
!16669 = !DILocation(line: 1161, column: 13, scope: !16658)
!16670 = !DILocation(line: 1163, column: 8, scope: !16658)
!16671 = !DILocation(line: 1165, column: 10, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !16658, file: !2500, line: 1165, column: 6)
!16673 = !DILocation(line: 1165, column: 6, scope: !16658)
!16674 = !DILocation(line: 1167, column: 17, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16672, file: !2500, line: 1167, column: 13)
!16676 = !DILocation(line: 1167, column: 13, scope: !16672)
!16677 = !DILocation(line: 1170, column: 25, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16675, file: !2500, line: 1169, column: 9)
!16679 = !DILocation(line: 1170, column: 52, scope: !16678)
!16680 = !DILocation(line: 1170, column: 35, scope: !16678)
!16681 = !DILocation(line: 1170, column: 3, scope: !16678)
!16682 = !DILocation(line: 0, scope: !16672)
!16683 = !DILocation(line: 1173, column: 1, scope: !16658)
!16684 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2500, file: !2500, line: 1175, type: !16685, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16700)
!16685 = !DISubroutineType(types: !16686)
!16686 = !{null, !16687, !2395}
!16687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16688, size: 32)
!16688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16689, line: 37, size: 128, elements: !16690)
!16689 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16690 = !{!16691, !16699}
!16691 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16688, file: !16689, line: 38, baseType: !16692, size: 96)
!16692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !175, line: 83, size: 96, elements: !16693)
!16693 = !{!16694, !16695, !16698}
!16694 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16692, file: !175, line: 84, baseType: !2424, size: 32)
!16695 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16692, file: !175, line: 85, baseType: !16696, size: 32, offset: 32)
!16696 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !175, line: 81, baseType: !16697)
!16697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16659, size: 32)
!16698 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16692, file: !175, line: 86, baseType: !103, size: 32, offset: 64)
!16699 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16688, file: !16689, line: 39, baseType: !103, size: 32, offset: 96)
!16700 = !{!16701, !16702, !16703, !16704, !16713}
!16701 = !DILocalVariable(name: "pq", arg: 1, scope: !16684, file: !2500, line: 1175, type: !16687)
!16702 = !DILocalVariable(name: "thread", arg: 2, scope: !16684, file: !2500, line: 1175, type: !2395)
!16703 = !DILocalVariable(name: "t", scope: !16684, file: !2500, line: 1177, type: !2395)
!16704 = !DILocalVariable(name: "__f", scope: !16705, file: !2500, line: 1190, type: !16708)
!16705 = distinct !DILexicalBlock(scope: !16706, file: !2500, line: 1190, column: 3)
!16706 = distinct !DILexicalBlock(scope: !16707, file: !2500, line: 1189, column: 27)
!16707 = distinct !DILexicalBlock(scope: !16684, file: !2500, line: 1189, column: 6)
!16708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !175, line: 155, size: 96, elements: !16709)
!16709 = !{!16710, !16711, !16712}
!16710 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16708, file: !175, line: 156, baseType: !2495, size: 32)
!16711 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16708, file: !175, line: 157, baseType: !379, size: 32, offset: 32)
!16712 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16708, file: !175, line: 158, baseType: !331, size: 32, offset: 64)
!16713 = !DILocalVariable(name: "n", scope: !16714, file: !2500, line: 1190, type: !2424)
!16714 = distinct !DILexicalBlock(scope: !16715, file: !2500, line: 1190, column: 3)
!16715 = distinct !DILexicalBlock(scope: !16705, file: !2500, line: 1190, column: 3)
!16716 = !DILocation(line: 0, scope: !16684)
!16717 = !DILocation(line: 1181, column: 31, scope: !16684)
!16718 = !DILocation(line: 1181, column: 45, scope: !16684)
!16719 = !DILocation(line: 1181, column: 15, scope: !16684)
!16720 = !DILocation(line: 1181, column: 25, scope: !16684)
!16721 = !DILocation(line: 1189, column: 11, scope: !16707)
!16722 = !DILocation(line: 1189, column: 7, scope: !16707)
!16723 = !DILocation(line: 1189, column: 6, scope: !16684)
!16724 = !DILocation(line: 1190, column: 3, scope: !16705)
!16725 = !DILocation(line: 1190, column: 3, scope: !16714)
!16726 = !DILocation(line: 0, scope: !16714)
!16727 = !DILocation(line: 1190, column: 3, scope: !16715)
!16728 = !DILocation(line: 1193, column: 2, scope: !16706)
!16729 = !DILocation(line: 1191, column: 42, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16715, file: !2500, line: 1190, column: 54)
!16731 = !DILocation(line: 1191, column: 12, scope: !16730)
!16732 = !DILocation(line: 1191, column: 22, scope: !16730)
!16733 = distinct !{!16733, !16724, !16734}
!16734 = !DILocation(line: 1192, column: 3, scope: !16705)
!16735 = !DILocation(line: 1195, column: 17, scope: !16684)
!16736 = !DILocation(line: 1195, column: 37, scope: !16684)
!16737 = !DILocation(line: 1195, column: 2, scope: !16684)
!16738 = !DILocation(line: 1196, column: 1, scope: !16684)
!16739 = !DISubprogram(name: "z_rb_foreach_next", scope: !175, file: !175, line: 176, type: !16740, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16740 = !DISubroutineType(types: !16741)
!16741 = !{!2424, !16742, !16743}
!16742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16692, size: 32)
!16743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16708, size: 32)
!16744 = !DISubprogram(name: "rb_insert", scope: !175, file: !175, line: 105, type: !16745, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16745 = !DISubroutineType(types: !16746)
!16746 = !{null, !16742, !2424}
!16747 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2500, file: !2500, line: 1198, type: !16685, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16748)
!16748 = !{!16749, !16750}
!16749 = !DILocalVariable(name: "pq", arg: 1, scope: !16747, file: !2500, line: 1198, type: !16687)
!16750 = !DILocalVariable(name: "thread", arg: 2, scope: !16747, file: !2500, line: 1198, type: !2395)
!16751 = !DILocation(line: 0, scope: !16747)
!16752 = !DILocation(line: 1202, column: 17, scope: !16747)
!16753 = !DILocation(line: 1202, column: 37, scope: !16747)
!16754 = !DILocation(line: 1202, column: 2, scope: !16747)
!16755 = !DILocation(line: 1204, column: 16, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16747, file: !2500, line: 1204, column: 6)
!16757 = !DILocation(line: 1204, column: 7, scope: !16756)
!16758 = !DILocation(line: 1204, column: 6, scope: !16747)
!16759 = !DILocation(line: 1205, column: 7, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16756, file: !2500, line: 1204, column: 22)
!16761 = !DILocation(line: 1205, column: 22, scope: !16760)
!16762 = !DILocation(line: 1206, column: 2, scope: !16760)
!16763 = !DILocation(line: 1207, column: 1, scope: !16747)
!16764 = !DISubprogram(name: "rb_remove", scope: !175, file: !175, line: 110, type: !16745, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16765 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2500, file: !2500, line: 1209, type: !16766, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16768)
!16766 = !DISubroutineType(types: !16767)
!16767 = !{!2395, !16687}
!16768 = !{!16769, !16770, !16771}
!16769 = !DILocalVariable(name: "pq", arg: 1, scope: !16765, file: !2500, line: 1209, type: !16687)
!16770 = !DILocalVariable(name: "thread", scope: !16765, file: !2500, line: 1211, type: !2395)
!16771 = !DILocalVariable(name: "n", scope: !16765, file: !2500, line: 1212, type: !2424)
!16772 = !DILocation(line: 0, scope: !16765)
!16773 = !DILocation(line: 1212, column: 37, scope: !16765)
!16774 = !DILocation(line: 1212, column: 21, scope: !16765)
!16775 = !DILocation(line: 1217, column: 2, scope: !16765)
!16776 = distinct !DISubprogram(name: "rb_get_min", scope: !175, file: !175, line: 115, type: !16777, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16779)
!16777 = !DISubroutineType(types: !16778)
!16778 = !{!2424, !16742}
!16779 = !{!16780}
!16780 = !DILocalVariable(name: "tree", arg: 1, scope: !16776, file: !175, line: 115, type: !16742)
!16781 = !DILocation(line: 0, scope: !16776)
!16782 = !DILocation(line: 117, column: 9, scope: !16776)
!16783 = !DILocation(line: 117, column: 2, scope: !16776)
!16784 = !DISubprogram(name: "z_rb_get_minmax", scope: !175, file: !175, line: 100, type: !16785, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16785 = !DISubroutineType(types: !16786)
!16786 = !{!2424, !16742, !185}
!16787 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2500, file: !2500, line: 1246, type: !16788, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16798)
!16788 = !DISubroutineType(types: !16789)
!16789 = !{!2395, !16790}
!16790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16791, size: 32)
!16791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16689, line: 53, size: 2080, elements: !16792)
!16792 = !{!16793, !16797}
!16793 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16791, file: !16689, line: 54, baseType: !16794, size: 2048)
!16794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2431, size: 2048, elements: !16795)
!16795 = !{!16796}
!16796 = !DISubrange(count: 32)
!16797 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16791, file: !16689, line: 55, baseType: !32, size: 32, offset: 2048)
!16798 = !{!16799, !16800, !16801, !16802}
!16799 = !DILocalVariable(name: "pq", arg: 1, scope: !16787, file: !2500, line: 1246, type: !16790)
!16800 = !DILocalVariable(name: "thread", scope: !16787, file: !2500, line: 1252, type: !2395)
!16801 = !DILocalVariable(name: "l", scope: !16787, file: !2500, line: 1253, type: !15599)
!16802 = !DILocalVariable(name: "n", scope: !16787, file: !2500, line: 1254, type: !2496)
!16803 = !DILocation(line: 0, scope: !16787)
!16804 = !DILocation(line: 1248, column: 11, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16787, file: !2500, line: 1248, column: 6)
!16806 = !DILocation(line: 1248, column: 7, scope: !16805)
!16807 = !DILocation(line: 1248, column: 6, scope: !16787)
!16808 = !DILocation(line: 1253, column: 31, scope: !16787)
!16809 = !DILocation(line: 1253, column: 20, scope: !16787)
!16810 = !DILocation(line: 1254, column: 19, scope: !16787)
!16811 = !DILocation(line: 1260, column: 1, scope: !16787)
!16812 = distinct !DISubprogram(name: "z_unpend_all", scope: !2500, file: !2500, line: 1262, type: !16813, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16815)
!16813 = !DISubroutineType(types: !16814)
!16814 = !{!103, !2426}
!16815 = !{!16816, !16817, !16818}
!16816 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16812, file: !2500, line: 1262, type: !2426)
!16817 = !DILocalVariable(name: "need_sched", scope: !16812, file: !2500, line: 1264, type: !103)
!16818 = !DILocalVariable(name: "thread", scope: !16812, file: !2500, line: 1265, type: !2395)
!16819 = !DILocation(line: 0, scope: !16812)
!16820 = !DILocation(line: 1267, column: 19, scope: !16812)
!16821 = !DILocation(line: 1267, column: 41, scope: !16812)
!16822 = !DILocation(line: 1267, column: 2, scope: !16812)
!16823 = !DILocation(line: 1268, column: 3, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16812, file: !2500, line: 1267, column: 50)
!16825 = !DILocation(line: 1269, column: 3, scope: !16824)
!16826 = distinct !{!16826, !16822, !16827}
!16827 = !DILocation(line: 1271, column: 2, scope: !16812)
!16828 = !DILocation(line: 1273, column: 2, scope: !16812)
!16829 = distinct !DISubprogram(name: "z_waitq_head", scope: !14251, file: !14251, line: 52, type: !16445, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16830)
!16830 = !{!16831}
!16831 = !DILocalVariable(name: "w", arg: 1, scope: !16829, file: !14251, line: 52, type: !2426)
!16832 = !DILocation(line: 0, scope: !16829)
!16833 = !DILocation(line: 54, column: 52, scope: !16829)
!16834 = !DILocation(line: 54, column: 28, scope: !16829)
!16835 = !DILocation(line: 54, column: 9, scope: !16829)
!16836 = !DILocation(line: 54, column: 2, scope: !16829)
!16837 = distinct !DISubprogram(name: "init_ready_q", scope: !2500, file: !2500, line: 1276, type: !16838, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16845)
!16838 = !DISubroutineType(types: !16839)
!16839 = !{null, !16840}
!16840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16841, size: 32)
!16841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !16842)
!16842 = !{!16843, !16844}
!16843 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16841, file: !141, line: 86, baseType: !2395, size: 32)
!16844 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16841, file: !141, line: 90, baseType: !2431, size: 64, offset: 32)
!16845 = !{!16846}
!16846 = !DILocalVariable(name: "rq", arg: 1, scope: !16837, file: !2500, line: 1276, type: !16840)
!16847 = !DILocation(line: 0, scope: !16837)
!16848 = !DILocation(line: 1289, column: 22, scope: !16837)
!16849 = !DILocation(line: 1289, column: 2, scope: !16837)
!16850 = !DILocation(line: 1291, column: 1, scope: !16837)
!16851 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !16852, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16854)
!16852 = !DISubroutineType(types: !16853)
!16853 = !{null, !15599}
!16854 = !{!16855}
!16855 = !DILocalVariable(name: "list", arg: 1, scope: !16851, file: !146, line: 197, type: !15599)
!16856 = !DILocation(line: 0, scope: !16851)
!16857 = !DILocation(line: 199, column: 8, scope: !16851)
!16858 = !DILocation(line: 199, column: 13, scope: !16851)
!16859 = !DILocation(line: 200, column: 8, scope: !16851)
!16860 = !DILocation(line: 200, column: 13, scope: !16851)
!16861 = !DILocation(line: 201, column: 1, scope: !16851)
!16862 = distinct !DISubprogram(name: "z_sched_init", scope: !2500, file: !2500, line: 1293, type: !334, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!16863 = !DILocation(line: 1302, column: 2, scope: !16862)
!16864 = !DILocation(line: 1306, column: 2, scope: !16862)
!16865 = !DILocation(line: 1309, column: 1, scope: !16862)
!16866 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2500, file: !2500, line: 1311, type: !16867, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16870)
!16867 = !DISubroutineType(types: !16868)
!16868 = !{!103, !16869}
!16869 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2395)
!16870 = !{!16871}
!16871 = !DILocalVariable(name: "thread", arg: 1, scope: !16866, file: !2500, line: 1311, type: !16869)
!16872 = !DILocation(line: 0, scope: !16866)
!16873 = !DILocation(line: 1313, column: 22, scope: !16866)
!16874 = !DILocation(line: 1313, column: 9, scope: !16866)
!16875 = !DILocation(line: 1313, column: 2, scope: !16866)
!16876 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2500, file: !2500, line: 1325, type: !16877, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16879)
!16877 = !DISubroutineType(types: !16878)
!16878 = !{null, !16869, !103}
!16879 = !{!16880, !16881, !16882}
!16880 = !DILocalVariable(name: "thread", arg: 1, scope: !16876, file: !2500, line: 1325, type: !16869)
!16881 = !DILocalVariable(name: "prio", arg: 2, scope: !16876, file: !2500, line: 1325, type: !103)
!16882 = !DILocalVariable(name: "th", scope: !16876, file: !2500, line: 1334, type: !2395)
!16883 = !DILocation(line: 0, scope: !16876)
!16884 = !DILocation(line: 1336, column: 2, scope: !16876)
!16885 = !DILocation(line: 1337, column: 1, scope: !16876)
!16886 = distinct !DISubprogram(name: "k_can_yield", scope: !2500, file: !2500, line: 1384, type: !8297, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!16887 = !DILocation(line: 1386, column: 11, scope: !16886)
!16888 = !DILocation(line: 1386, column: 29, scope: !16886)
!16889 = !DILocation(line: 1386, column: 32, scope: !16886)
!16890 = !DILocation(line: 1386, column: 46, scope: !16886)
!16891 = !DILocation(line: 1387, column: 28, scope: !16886)
!16892 = !DILocation(line: 1387, column: 4, scope: !16886)
!16893 = !DILocation(line: 1386, column: 2, scope: !16886)
!16894 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !137, file: !137, line: 989, type: !8297, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!16895 = !DILocation(line: 993, column: 10, scope: !16894)
!16896 = !DILocation(line: 993, column: 2, scope: !16894)
!16897 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2500, file: !2500, line: 1390, type: !334, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16898)
!16898 = !{!16899}
!16899 = !DILocalVariable(name: "key", scope: !16897, file: !2500, line: 1396, type: !15388)
!16900 = !DILocation(line: 0, scope: !15396, inlinedAt: !16901)
!16901 = distinct !DILocation(line: 1396, column: 25, scope: !16897)
!16902 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !16903)
!16903 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16901)
!16904 = !DILocation(line: 0, scope: !15405, inlinedAt: !16903)
!16905 = !DILocation(line: 0, scope: !16897)
!16906 = !DILocation(line: 1400, column: 18, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !16908, file: !2500, line: 1399, column: 36)
!16908 = distinct !DILexicalBlock(scope: !16897, file: !2500, line: 1398, column: 6)
!16909 = !DILocation(line: 0, scope: !15565, inlinedAt: !16910)
!16910 = distinct !DILocation(line: 1400, column: 3, scope: !16907)
!16911 = !DILocation(line: 266, column: 15, scope: !15565, inlinedAt: !16910)
!16912 = !DILocation(line: 266, column: 28, scope: !15565, inlinedAt: !16910)
!16913 = !DILocation(line: 0, scope: !15573, inlinedAt: !16914)
!16914 = distinct !DILocation(line: 268, column: 3, scope: !15577, inlinedAt: !16910)
!16915 = !DILocation(line: 234, column: 2, scope: !15573, inlinedAt: !16914)
!16916 = !DILocation(line: 1402, column: 15, scope: !16897)
!16917 = !DILocation(line: 0, scope: !15582, inlinedAt: !16918)
!16918 = distinct !DILocation(line: 1402, column: 2, scope: !16897)
!16919 = !DILocation(line: 252, column: 15, scope: !15582, inlinedAt: !16918)
!16920 = !DILocation(line: 252, column: 28, scope: !15582, inlinedAt: !16918)
!16921 = !DILocation(line: 0, scope: !15589, inlinedAt: !16922)
!16922 = distinct !DILocation(line: 254, column: 3, scope: !15593, inlinedAt: !16918)
!16923 = !DILocation(line: 0, scope: !15596, inlinedAt: !16924)
!16924 = distinct !DILocation(line: 229, column: 2, scope: !15589, inlinedAt: !16922)
!16925 = !DILocation(line: 188, column: 2, scope: !15606, inlinedAt: !16924)
!16926 = !DILocation(line: 188, column: 2, scope: !15608, inlinedAt: !16924)
!16927 = !DILocation(line: 0, scope: !15606, inlinedAt: !16924)
!16928 = !DILocation(line: 189, column: 7, scope: !15611, inlinedAt: !16924)
!16929 = !DILocation(line: 189, column: 35, scope: !15611, inlinedAt: !16924)
!16930 = !DILocation(line: 189, column: 7, scope: !15612, inlinedAt: !16924)
!16931 = !DILocation(line: 191, column: 21, scope: !15616, inlinedAt: !16924)
!16932 = !DILocation(line: 190, column: 4, scope: !15616, inlinedAt: !16924)
!16933 = !DILocation(line: 192, column: 4, scope: !15616, inlinedAt: !16924)
!16934 = distinct !{!16934, !16925, !16935}
!16935 = !DILocation(line: 194, column: 2, scope: !15606, inlinedAt: !16924)
!16936 = !DILocation(line: 196, column: 37, scope: !15596, inlinedAt: !16924)
!16937 = !DILocation(line: 196, column: 2, scope: !15596, inlinedAt: !16924)
!16938 = !DILocation(line: 197, column: 1, scope: !15596, inlinedAt: !16924)
!16939 = !DILocation(line: 1403, column: 2, scope: !16897)
!16940 = !DILocation(line: 0, scope: !16005, inlinedAt: !16941)
!16941 = distinct !DILocation(line: 1404, column: 2, scope: !16897)
!16942 = !DILocation(line: 196, column: 9, scope: !16005, inlinedAt: !16941)
!16943 = !DILocation(line: 1405, column: 1, scope: !16897)
!16944 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2500, file: !2500, line: 1459, type: !16945, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16947)
!16945 = !DISubroutineType(types: !16946)
!16946 = !{!331, !16185}
!16947 = !{!16948, !16949, !16950}
!16948 = !DILocalVariable(name: "timeout", arg: 1, scope: !16944, file: !2500, line: 1459, type: !16185)
!16949 = !DILocalVariable(name: "ticks", scope: !16944, file: !2500, line: 1461, type: !104)
!16950 = !DILocalVariable(name: "ret", scope: !16944, file: !2500, line: 1480, type: !331)
!16951 = !DILocation(line: 0, scope: !16944)
!16952 = !DILocation(line: 1468, column: 6, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16944, file: !2500, line: 1468, column: 6)
!16954 = !DILocation(line: 1468, column: 6, scope: !16944)
!16955 = !DILocation(line: 1469, column: 20, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16953, file: !2500, line: 1468, column: 40)
!16957 = !DILocation(line: 1469, column: 3, scope: !16956)
!16958 = !DILocation(line: 1473, column: 3, scope: !16956)
!16959 = !DILocation(line: 1478, column: 10, scope: !16944)
!16960 = !DILocation(line: 1480, column: 16, scope: !16944)
!16961 = !DILocation(line: 1485, column: 1, scope: !16944)
!16962 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3594, file: !3594, line: 310, type: !16963, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16965)
!16963 = !DISubroutineType(types: !16964)
!16964 = !{null, !16869}
!16965 = !{!16966}
!16966 = !DILocalVariable(name: "thread", arg: 1, scope: !16962, file: !3594, line: 310, type: !16869)
!16967 = !DILocation(line: 0, scope: !16962)
!16968 = !DILocation(line: 319, column: 2, scope: !16969)
!16969 = distinct !DILexicalBlock(scope: !16962, file: !3594, line: 319, column: 2)
!16970 = !{i64 2154109003}
!16971 = !DILocation(line: 320, column: 2, scope: !16962)
!16972 = !DILocation(line: 321, column: 1, scope: !16962)
!16973 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2500, file: !2500, line: 1415, type: !16974, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16976)
!16974 = !DISubroutineType(types: !16975)
!16975 = !{!331, !104}
!16976 = !{!16977, !16978, !16979, !16980}
!16977 = !DILocalVariable(name: "ticks", arg: 1, scope: !16973, file: !2500, line: 1415, type: !104)
!16978 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16973, file: !2500, line: 1418, type: !108)
!16979 = !DILocalVariable(name: "timeout", scope: !16973, file: !2500, line: 1430, type: !16185)
!16980 = !DILocalVariable(name: "key", scope: !16973, file: !2500, line: 1437, type: !15388)
!16981 = !DILocation(line: 0, scope: !16973)
!16982 = !DILocation(line: 1425, column: 12, scope: !16983)
!16983 = distinct !DILexicalBlock(scope: !16973, file: !2500, line: 1425, column: 6)
!16984 = !DILocation(line: 1425, column: 6, scope: !16973)
!16985 = !DILocation(line: 1426, column: 3, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16983, file: !2500, line: 1425, column: 18)
!16987 = !DILocation(line: 1427, column: 3, scope: !16986)
!16988 = !DILocation(line: 1431, column: 24, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16973, file: !2500, line: 1431, column: 6)
!16990 = !DILocation(line: 1431, column: 6, scope: !16973)
!16991 = !DILocation(line: 1432, column: 35, scope: !16992)
!16992 = distinct !DILexicalBlock(scope: !16989, file: !2500, line: 1431, column: 30)
!16993 = !DILocation(line: 1432, column: 27, scope: !16992)
!16994 = !DILocation(line: 1433, column: 2, scope: !16992)
!16995 = !DILocation(line: 1434, column: 27, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16989, file: !2500, line: 1433, column: 9)
!16997 = !DILocation(line: 0, scope: !16989)
!16998 = !DILocation(line: 0, scope: !15396, inlinedAt: !16999)
!16999 = distinct !DILocation(line: 1437, column: 25, scope: !16973)
!17000 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !17001)
!17001 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !16999)
!17002 = !DILocation(line: 0, scope: !15405, inlinedAt: !17001)
!17003 = !DILocation(line: 1440, column: 20, scope: !16973)
!17004 = !DILocation(line: 1440, column: 18, scope: !16973)
!17005 = !DILocation(line: 1442, column: 2, scope: !16973)
!17006 = !DILocation(line: 1443, column: 23, scope: !16973)
!17007 = !DILocation(line: 1443, column: 2, scope: !16973)
!17008 = !DILocation(line: 1444, column: 29, scope: !16973)
!17009 = !DILocation(line: 1444, column: 2, scope: !16973)
!17010 = !DILocation(line: 0, scope: !16005, inlinedAt: !17011)
!17011 = distinct !DILocation(line: 1446, column: 8, scope: !16973)
!17012 = !DILocation(line: 196, column: 9, scope: !16005, inlinedAt: !17011)
!17013 = !DILocation(line: 1450, column: 10, scope: !16973)
!17014 = !DILocation(line: 1450, column: 45, scope: !16973)
!17015 = !DILocation(line: 1450, column: 43, scope: !16973)
!17016 = !DILocation(line: 1451, column: 6, scope: !16973)
!17017 = !DILocation(line: 1457, column: 1, scope: !16973)
!17018 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3580, file: !3580, line: 1103, type: !3581, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17019)
!17019 = !{!17020}
!17020 = !DILocalVariable(name: "t", arg: 1, scope: !17018, file: !3580, line: 1103, type: !109)
!17021 = !DILocation(line: 0, scope: !17018)
!17022 = !DILocation(line: 0, scope: !15443, inlinedAt: !17023)
!17023 = distinct !DILocation(line: 1106, column: 9, scope: !17018)
!17024 = !DILocation(line: 139, column: 13, scope: !17025, inlinedAt: !17023)
!17025 = distinct !DILexicalBlock(scope: !17026, file: !3580, line: 138, column: 10)
!17026 = distinct !DILexicalBlock(scope: !17027, file: !3580, line: 136, column: 7)
!17027 = distinct !DILexicalBlock(scope: !15464, file: !3580, line: 134, column: 17)
!17028 = !DILocation(line: 1106, column: 2, scope: !17018)
!17029 = distinct !DISubprogram(name: "k_yield", scope: !3594, file: !3594, line: 140, type: !334, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!17030 = !DILocation(line: 148, column: 2, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !17029, file: !3594, line: 148, column: 2)
!17032 = !{i64 2154108323}
!17033 = !DILocation(line: 149, column: 2, scope: !17029)
!17034 = !DILocation(line: 150, column: 1, scope: !17029)
!17035 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2500, file: !2500, line: 1495, type: !17036, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17038)
!17036 = !DISubroutineType(types: !17037)
!17037 = !{!331, !103}
!17038 = !{!17039, !17040}
!17039 = !DILocalVariable(name: "us", arg: 1, scope: !17035, file: !2500, line: 1495, type: !103)
!17040 = !DILocalVariable(name: "ticks", scope: !17035, file: !2500, line: 1497, type: !331)
!17041 = !DILocation(line: 0, scope: !17035)
!17042 = !DILocation(line: 1501, column: 31, scope: !17035)
!17043 = !DILocation(line: 1501, column: 10, scope: !17035)
!17044 = !DILocation(line: 1502, column: 23, scope: !17035)
!17045 = !DILocation(line: 1502, column: 10, scope: !17035)
!17046 = !DILocation(line: 1506, column: 31, scope: !17035)
!17047 = !DILocation(line: 1506, column: 9, scope: !17035)
!17048 = !DILocation(line: 1506, column: 2, scope: !17035)
!17049 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3580, file: !3580, line: 571, type: !3581, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17050)
!17050 = !{!17051}
!17051 = !DILocalVariable(name: "t", arg: 1, scope: !17049, file: !3580, line: 571, type: !109)
!17052 = !DILocation(line: 0, scope: !17049)
!17053 = !DILocation(line: 0, scope: !15443, inlinedAt: !17054)
!17054 = distinct !DILocation(line: 574, column: 9, scope: !17049)
!17055 = !DILocation(line: 135, column: 5, scope: !17027, inlinedAt: !17054)
!17056 = !DILocation(line: 139, column: 13, scope: !17025, inlinedAt: !17054)
!17057 = !DILocation(line: 574, column: 2, scope: !17049)
!17058 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3580, file: !3580, line: 1187, type: !3581, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17059)
!17059 = !{!17060}
!17060 = !DILocalVariable(name: "t", arg: 1, scope: !17058, file: !3580, line: 1187, type: !109)
!17061 = !DILocation(line: 0, scope: !17058)
!17062 = !DILocation(line: 0, scope: !15443, inlinedAt: !17063)
!17063 = distinct !DILocation(line: 1190, column: 9, scope: !17058)
!17064 = !DILocation(line: 145, column: 13, scope: !17065, inlinedAt: !17063)
!17065 = distinct !DILexicalBlock(scope: !15461, file: !3580, line: 144, column: 10)
!17066 = !DILocation(line: 1190, column: 2, scope: !17058)
!17067 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2500, file: !2500, line: 1517, type: !16963, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17068)
!17068 = !{!17069}
!17069 = !DILocalVariable(name: "thread", arg: 1, scope: !17067, file: !2500, line: 1517, type: !16869)
!17070 = !DILocation(line: 0, scope: !17067)
!17071 = !DILocation(line: 1521, column: 6, scope: !17072)
!17072 = distinct !DILexicalBlock(scope: !17067, file: !2500, line: 1521, column: 6)
!17073 = !DILocation(line: 1521, column: 6, scope: !17067)
!17074 = !DILocation(line: 1525, column: 6, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17067, file: !2500, line: 1525, column: 6)
!17076 = !DILocation(line: 1525, column: 37, scope: !17075)
!17077 = !DILocation(line: 1525, column: 6, scope: !17067)
!17078 = !DILocation(line: 1527, column: 20, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17080, file: !2500, line: 1527, column: 7)
!17080 = distinct !DILexicalBlock(scope: !17075, file: !2500, line: 1525, column: 42)
!17081 = !DILocation(line: 1527, column: 33, scope: !17079)
!17082 = !DILocation(line: 1527, column: 7, scope: !17080)
!17083 = !DILocation(line: 1532, column: 2, scope: !17067)
!17084 = !DILocation(line: 1533, column: 2, scope: !17067)
!17085 = !DILocation(line: 1031, column: 3, scope: !16038, inlinedAt: !17086)
!17086 = distinct !DILocation(line: 48, column: 10, scope: !16042, inlinedAt: !17087)
!17087 = distinct !DILocation(line: 1537, column: 7, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17067, file: !2500, line: 1537, column: 6)
!17089 = !DILocation(line: 0, scope: !16038, inlinedAt: !17086)
!17090 = !DILocation(line: 48, column: 9, scope: !16042, inlinedAt: !17087)
!17091 = !DILocation(line: 1537, column: 6, scope: !17067)
!17092 = !DILocation(line: 1538, column: 3, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17088, file: !2500, line: 1537, column: 25)
!17094 = !DILocation(line: 1539, column: 2, scope: !17093)
!17095 = !DILocation(line: 1540, column: 1, scope: !17067)
!17096 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13926, file: !13926, line: 101, type: !15514, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17097)
!17097 = !{!17098}
!17098 = !DILocalVariable(name: "thread", arg: 1, scope: !17096, file: !13926, line: 101, type: !2395)
!17099 = !DILocation(line: 0, scope: !17096)
!17100 = !DILocation(line: 103, column: 23, scope: !17096)
!17101 = !DILocation(line: 103, column: 36, scope: !17096)
!17102 = !DILocation(line: 103, column: 55, scope: !17096)
!17103 = !DILocation(line: 103, column: 2, scope: !17096)
!17104 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2500, file: !2500, line: 1567, type: !17105, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17107)
!17105 = !DISubroutineType(types: !17106)
!17106 = !{!16869}
!17107 = !{!17108}
!17108 = !DILocalVariable(name: "ret", scope: !17104, file: !2500, line: 1577, type: !16869)
!17109 = !DILocation(line: 1577, column: 30, scope: !17104)
!17110 = !DILocation(line: 0, scope: !17104)
!17111 = !DILocation(line: 1582, column: 2, scope: !17104)
!17112 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2500, file: !2500, line: 1593, type: !8585, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !251)
!17113 = !DILocation(line: 1031, column: 3, scope: !16038, inlinedAt: !17114)
!17114 = distinct !DILocation(line: 48, column: 10, scope: !16042, inlinedAt: !17115)
!17115 = distinct !DILocation(line: 1595, column: 10, scope: !17112)
!17116 = !DILocation(line: 0, scope: !16038, inlinedAt: !17114)
!17117 = !DILocation(line: 48, column: 9, scope: !16042, inlinedAt: !17115)
!17118 = !DILocation(line: 1595, column: 27, scope: !17112)
!17119 = !DILocation(line: 1595, column: 41, scope: !17112)
!17120 = !DILocation(line: 1595, column: 30, scope: !17112)
!17121 = !DILocation(line: 1595, column: 2, scope: !17112)
!17122 = distinct !DISubprogram(name: "z_thread_abort", scope: !2500, file: !2500, line: 1725, type: !15354, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17123)
!17123 = !{!17124, !17125}
!17124 = !DILocalVariable(name: "thread", arg: 1, scope: !17122, file: !2500, line: 1725, type: !2395)
!17125 = !DILocalVariable(name: "key", scope: !17122, file: !2500, line: 1727, type: !15388)
!17126 = !DILocation(line: 0, scope: !17122)
!17127 = !DILocation(line: 0, scope: !15396, inlinedAt: !17128)
!17128 = distinct !DILocation(line: 1727, column: 25, scope: !17122)
!17129 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !17130)
!17130 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !17128)
!17131 = !DILocation(line: 0, scope: !15405, inlinedAt: !17130)
!17132 = !DILocation(line: 1729, column: 20, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17122, file: !2500, line: 1729, column: 6)
!17134 = !DILocation(line: 1729, column: 33, scope: !17133)
!17135 = !DILocation(line: 1729, column: 48, scope: !17133)
!17136 = !DILocation(line: 1729, column: 6, scope: !17122)
!17137 = !DILocation(line: 0, scope: !15423, inlinedAt: !17138)
!17138 = distinct !DILocation(line: 1730, column: 3, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17133, file: !2500, line: 1729, column: 54)
!17140 = !DILocation(line: 0, scope: !15431, inlinedAt: !17141)
!17141 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !17138)
!17142 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !17141)
!17143 = !DILocation(line: 1732, column: 3, scope: !17144)
!17144 = distinct !DILexicalBlock(scope: !17139, file: !2500, line: 1732, column: 3)
!17145 = !{i64 2154844319, i64 2154844335, i64 2154844361, i64 2154844389, i64 2154844409}
!17146 = !DILocation(line: 1733, column: 3, scope: !17139)
!17147 = !DILocation(line: 1736, column: 20, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17122, file: !2500, line: 1736, column: 6)
!17149 = !DILocation(line: 1736, column: 33, scope: !17148)
!17150 = !DILocation(line: 1736, column: 49, scope: !17148)
!17151 = !DILocation(line: 1736, column: 6, scope: !17122)
!17152 = !DILocation(line: 0, scope: !15423, inlinedAt: !17153)
!17153 = distinct !DILocation(line: 1737, column: 3, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17148, file: !2500, line: 1736, column: 56)
!17155 = !DILocation(line: 0, scope: !15431, inlinedAt: !17156)
!17156 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !17153)
!17157 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !17156)
!17158 = !DILocation(line: 1738, column: 3, scope: !17154)
!17159 = !DILocation(line: 1775, column: 2, scope: !17122)
!17160 = !DILocation(line: 1776, column: 16, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !17122, file: !2500, line: 1776, column: 6)
!17162 = !DILocation(line: 1776, column: 13, scope: !17161)
!17163 = !DILocation(line: 1776, column: 25, scope: !17161)
!17164 = !DILocation(line: 1031, column: 3, scope: !16038, inlinedAt: !17165)
!17165 = distinct !DILocation(line: 48, column: 10, scope: !16042, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 1776, column: 29, scope: !17161)
!17167 = !DILocation(line: 0, scope: !16038, inlinedAt: !17165)
!17168 = !DILocation(line: 48, column: 9, scope: !16042, inlinedAt: !17166)
!17169 = !DILocation(line: 1776, column: 6, scope: !17122)
!17170 = !DILocation(line: 0, scope: !16005, inlinedAt: !17171)
!17171 = distinct !DILocation(line: 1777, column: 3, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17161, file: !2500, line: 1776, column: 47)
!17173 = !DILocation(line: 196, column: 9, scope: !16005, inlinedAt: !17171)
!17174 = !DILocation(line: 1779, column: 2, scope: !17172)
!17175 = !DILocation(line: 0, scope: !15423, inlinedAt: !17176)
!17176 = distinct !DILocation(line: 1780, column: 2, scope: !17122)
!17177 = !DILocation(line: 0, scope: !15431, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !17176)
!17179 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !17178)
!17180 = !DILocation(line: 1781, column: 1, scope: !17122)
!17181 = distinct !DISubprogram(name: "end_thread", scope: !2500, file: !2500, line: 1690, type: !15354, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17182)
!17182 = !{!17183}
!17183 = !DILocalVariable(name: "thread", arg: 1, scope: !17181, file: !2500, line: 1690, type: !2395)
!17184 = !DILocation(line: 0, scope: !17181)
!17185 = !DILocation(line: 1695, column: 20, scope: !17186)
!17186 = distinct !DILexicalBlock(scope: !17181, file: !2500, line: 1695, column: 6)
!17187 = !DILocation(line: 1695, column: 33, scope: !17186)
!17188 = !DILocation(line: 1695, column: 49, scope: !17186)
!17189 = !DILocation(line: 1695, column: 6, scope: !17181)
!17190 = !DILocation(line: 1697, column: 29, scope: !17191)
!17191 = distinct !DILexicalBlock(scope: !17186, file: !2500, line: 1695, column: 56)
!17192 = !DILocation(line: 1698, column: 7, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17191, file: !2500, line: 1698, column: 7)
!17194 = !DILocation(line: 1698, column: 7, scope: !17191)
!17195 = !DILocation(line: 0, scope: !15565, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 1699, column: 4, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17193, file: !2500, line: 1698, column: 35)
!17198 = !DILocation(line: 266, column: 28, scope: !15565, inlinedAt: !17196)
!17199 = !DILocation(line: 0, scope: !15573, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 268, column: 3, scope: !15577, inlinedAt: !17196)
!17201 = !DILocation(line: 234, column: 2, scope: !15573, inlinedAt: !17200)
!17202 = !DILocation(line: 1700, column: 3, scope: !17197)
!17203 = !DILocation(line: 1701, column: 20, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17191, file: !2500, line: 1701, column: 7)
!17205 = !DILocation(line: 1701, column: 30, scope: !17204)
!17206 = !DILocation(line: 1701, column: 7, scope: !17191)
!17207 = !DILocation(line: 1702, column: 4, scope: !17208)
!17208 = distinct !DILexicalBlock(scope: !17204, file: !2500, line: 1701, column: 39)
!17209 = !DILocation(line: 1703, column: 3, scope: !17208)
!17210 = !DILocation(line: 1704, column: 9, scope: !17191)
!17211 = !DILocation(line: 1705, column: 23, scope: !17191)
!17212 = !DILocation(line: 1705, column: 3, scope: !17191)
!17213 = !DILocation(line: 1706, column: 3, scope: !17191)
!17214 = !DILocation(line: 1722, column: 2, scope: !17191)
!17215 = !DILocation(line: 1723, column: 1, scope: !17181)
!17216 = distinct !DISubprogram(name: "unpend_all", scope: !2500, file: !2500, line: 1674, type: !17217, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17219)
!17217 = !DISubroutineType(types: !17218)
!17218 = !{null, !2426}
!17219 = !{!17220, !17221}
!17220 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17216, file: !2500, line: 1674, type: !2426)
!17221 = !DILocalVariable(name: "thread", scope: !17216, file: !2500, line: 1676, type: !2395)
!17222 = !DILocation(line: 0, scope: !17216)
!17223 = !DILocation(line: 1678, column: 19, scope: !17216)
!17224 = !DILocation(line: 1678, column: 41, scope: !17216)
!17225 = !DILocation(line: 1678, column: 2, scope: !17216)
!17226 = !DILocation(line: 1679, column: 3, scope: !17227)
!17227 = distinct !DILexicalBlock(scope: !17216, file: !2500, line: 1678, column: 50)
!17228 = !DILocation(line: 1680, column: 9, scope: !17227)
!17229 = !DILocalVariable(name: "thread", arg: 1, scope: !17230, file: !13946, line: 65, type: !2395)
!17230 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13946, file: !13946, line: 65, type: !17231, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17233)
!17231 = !DISubroutineType(types: !17232)
!17232 = !{null, !2395, !32}
!17233 = !{!17229, !17234}
!17234 = !DILocalVariable(name: "value", arg: 2, scope: !17230, file: !13946, line: 65, type: !32)
!17235 = !DILocation(line: 0, scope: !17230, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 1681, column: 3, scope: !17227)
!17237 = !DILocation(line: 67, column: 15, scope: !17230, inlinedAt: !17236)
!17238 = !DILocation(line: 67, column: 33, scope: !17230, inlinedAt: !17236)
!17239 = !DILocation(line: 1682, column: 3, scope: !17227)
!17240 = distinct !{!17240, !17225, !17241}
!17241 = !DILocation(line: 1683, column: 2, scope: !17216)
!17242 = !DILocation(line: 1684, column: 1, scope: !17216)
!17243 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2500, file: !2500, line: 1794, type: !17244, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17246)
!17244 = !DISubroutineType(types: !17245)
!17245 = !{!103, !2395, !16185}
!17246 = !{!17247, !17248, !17249, !17250}
!17247 = !DILocalVariable(name: "thread", arg: 1, scope: !17243, file: !2500, line: 1794, type: !2395)
!17248 = !DILocalVariable(name: "timeout", arg: 2, scope: !17243, file: !2500, line: 1794, type: !16185)
!17249 = !DILocalVariable(name: "key", scope: !17243, file: !2500, line: 1796, type: !15388)
!17250 = !DILocalVariable(name: "ret", scope: !17243, file: !2500, line: 1797, type: !103)
!17251 = !DILocation(line: 0, scope: !17243)
!17252 = !DILocation(line: 0, scope: !15396, inlinedAt: !17253)
!17253 = distinct !DILocation(line: 1796, column: 25, scope: !17243)
!17254 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !17253)
!17256 = !DILocation(line: 0, scope: !15405, inlinedAt: !17255)
!17257 = !DILocation(line: 1801, column: 20, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17243, file: !2500, line: 1801, column: 6)
!17259 = !DILocation(line: 1801, column: 33, scope: !17258)
!17260 = !DILocation(line: 1801, column: 49, scope: !17258)
!17261 = !DILocation(line: 1801, column: 6, scope: !17243)
!17262 = !DILocation(line: 1803, column: 13, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !17258, file: !2500, line: 1803, column: 13)
!17264 = !DILocation(line: 1803, column: 13, scope: !17258)
!17265 = !DILocation(line: 1805, column: 24, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17263, file: !2500, line: 1805, column: 13)
!17267 = !DILocation(line: 1805, column: 21, scope: !17266)
!17268 = !DILocation(line: 1805, column: 34, scope: !17266)
!17269 = !DILocation(line: 1806, column: 20, scope: !17266)
!17270 = !DILocation(line: 1806, column: 44, scope: !17266)
!17271 = !DILocation(line: 1806, column: 30, scope: !17266)
!17272 = !DILocation(line: 1805, column: 13, scope: !17263)
!17273 = !DILocation(line: 1810, column: 42, scope: !17274)
!17274 = distinct !DILexicalBlock(scope: !17266, file: !2500, line: 1808, column: 9)
!17275 = !DILocation(line: 1810, column: 3, scope: !17274)
!17276 = !DILocation(line: 1811, column: 22, scope: !17274)
!17277 = !DILocation(line: 1811, column: 3, scope: !17274)
!17278 = !DILocation(line: 0, scope: !16005, inlinedAt: !17279)
!17279 = distinct !DILocation(line: 1814, column: 9, scope: !17274)
!17280 = !DILocation(line: 196, column: 9, scope: !16005, inlinedAt: !17279)
!17281 = !DILocation(line: 1817, column: 3, scope: !17274)
!17282 = !DILocation(line: 0, scope: !17258)
!17283 = !DILocation(line: 0, scope: !15423, inlinedAt: !17284)
!17284 = distinct !DILocation(line: 1822, column: 2, scope: !17243)
!17285 = !DILocation(line: 0, scope: !15431, inlinedAt: !17286)
!17286 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !17284)
!17287 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !17286)
!17288 = !DILocation(line: 1823, column: 2, scope: !17243)
!17289 = !DILocation(line: 1824, column: 1, scope: !17243)
!17290 = distinct !DISubprogram(name: "z_sched_wake", scope: !2500, file: !2500, line: 1882, type: !17291, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17293)
!17291 = !DISubroutineType(types: !17292)
!17292 = !{!131, !2426, !103, !102}
!17293 = !{!17294, !17295, !17296, !17297, !17298, !17299, !17301}
!17294 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17290, file: !2500, line: 1882, type: !2426)
!17295 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17290, file: !2500, line: 1882, type: !103)
!17296 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17290, file: !2500, line: 1882, type: !102)
!17297 = !DILocalVariable(name: "thread", scope: !17290, file: !2500, line: 1884, type: !2395)
!17298 = !DILocalVariable(name: "ret", scope: !17290, file: !2500, line: 1885, type: !131)
!17299 = !DILocalVariable(name: "__i", scope: !17300, file: !2500, line: 1887, type: !15388)
!17300 = distinct !DILexicalBlock(scope: !17290, file: !2500, line: 1887, column: 2)
!17301 = !DILocalVariable(name: "__key", scope: !17300, file: !2500, line: 1887, type: !15388)
!17302 = !DILocation(line: 0, scope: !17290)
!17303 = !DILocation(line: 0, scope: !17300)
!17304 = !DILocation(line: 0, scope: !15396, inlinedAt: !17305)
!17305 = distinct !DILocation(line: 1887, column: 2, scope: !17300)
!17306 = !DILocation(line: 55, column: 2, scope: !15405, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 145, column: 10, scope: !15396, inlinedAt: !17305)
!17308 = !DILocation(line: 0, scope: !15405, inlinedAt: !17307)
!17309 = !DILocation(line: 1888, column: 12, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17311, file: !2500, line: 1887, column: 26)
!17311 = distinct !DILexicalBlock(scope: !17300, file: !2500, line: 1887, column: 2)
!17312 = !DILocation(line: 1890, column: 14, scope: !17313)
!17313 = distinct !DILexicalBlock(scope: !17310, file: !2500, line: 1890, column: 7)
!17314 = !DILocation(line: 1890, column: 7, scope: !17310)
!17315 = !DILocalVariable(name: "thread", arg: 1, scope: !17316, file: !14695, line: 134, type: !2395)
!17316 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14695, file: !14695, line: 134, type: !17317, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17319)
!17317 = !DISubroutineType(types: !17318)
!17318 = !{null, !2395, !32, !102}
!17319 = !{!17315, !17320, !17321}
!17320 = !DILocalVariable(name: "value", arg: 2, scope: !17316, file: !14695, line: 135, type: !32)
!17321 = !DILocalVariable(name: "data", arg: 3, scope: !17316, file: !14695, line: 136, type: !102)
!17322 = !DILocation(line: 0, scope: !17316, inlinedAt: !17323)
!17323 = distinct !DILocation(line: 1891, column: 4, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17313, file: !2500, line: 1890, column: 23)
!17325 = !DILocation(line: 0, scope: !17230, inlinedAt: !17326)
!17326 = distinct !DILocation(line: 138, column: 2, scope: !17316, inlinedAt: !17323)
!17327 = !DILocation(line: 67, column: 15, scope: !17230, inlinedAt: !17326)
!17328 = !DILocation(line: 67, column: 33, scope: !17230, inlinedAt: !17326)
!17329 = !DILocation(line: 139, column: 15, scope: !17316, inlinedAt: !17323)
!17330 = !DILocation(line: 139, column: 25, scope: !17316, inlinedAt: !17323)
!17331 = !DILocation(line: 1894, column: 4, scope: !17324)
!17332 = !DILocation(line: 1895, column: 10, scope: !17324)
!17333 = !DILocation(line: 1896, column: 4, scope: !17324)
!17334 = !DILocation(line: 1898, column: 3, scope: !17324)
!17335 = !DILocation(line: 0, scope: !15423, inlinedAt: !17336)
!17336 = distinct !DILocation(line: 1887, column: 2, scope: !17311)
!17337 = !DILocation(line: 0, scope: !15431, inlinedAt: !17338)
!17338 = distinct !DILocation(line: 215, column: 2, scope: !15423, inlinedAt: !17336)
!17339 = !DILocation(line: 95, column: 2, scope: !15431, inlinedAt: !17338)
!17340 = !DILocation(line: 1901, column: 2, scope: !17290)
!17341 = distinct !DISubprogram(name: "z_sched_wait", scope: !2500, file: !2500, line: 1904, type: !17342, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !17345)
!17342 = !DISubroutineType(types: !17343)
!17343 = !{!103, !15399, !15388, !2426, !16185, !17344}
!17344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!17345 = !{!17346, !17347, !17348, !17349, !17350, !17351}
!17346 = !DILocalVariable(name: "lock", arg: 1, scope: !17341, file: !2500, line: 1904, type: !15399)
!17347 = !DILocalVariable(name: "key", arg: 2, scope: !17341, file: !2500, line: 1904, type: !15388)
!17348 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17341, file: !2500, line: 1905, type: !2426)
!17349 = !DILocalVariable(name: "timeout", arg: 4, scope: !17341, file: !2500, line: 1905, type: !16185)
!17350 = !DILocalVariable(name: "data", arg: 5, scope: !17341, file: !2500, line: 1905, type: !17344)
!17351 = !DILocalVariable(name: "ret", scope: !17341, file: !2500, line: 1907, type: !103)
!17352 = !DILocation(line: 0, scope: !17341)
!17353 = !DILocation(line: 1907, column: 12, scope: !17341)
!17354 = !DILocation(line: 1909, column: 11, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17341, file: !2500, line: 1909, column: 6)
!17356 = !DILocation(line: 1909, column: 6, scope: !17341)
!17357 = !DILocation(line: 1910, column: 11, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17355, file: !2500, line: 1909, column: 20)
!17359 = !DILocation(line: 1910, column: 26, scope: !17358)
!17360 = !DILocation(line: 1910, column: 9, scope: !17358)
!17361 = !DILocation(line: 1911, column: 2, scope: !17358)
!17362 = !DILocation(line: 1912, column: 2, scope: !17341)
!17363 = distinct !DISubprogram(name: "z_data_copy", scope: !17364, file: !17364, line: 22, type: !334, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3319, retainedNodes: !251)
!17364 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17365 = !DILocation(line: 24, column: 2, scope: !17363)
!17366 = !DILocation(line: 27, column: 2, scope: !17363)
!17367 = !DILocation(line: 71, column: 1, scope: !17363)
!17368 = distinct !DISubprogram(name: "z_add_timeout", scope: !2537, file: !2537, line: 88, type: !17369, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17375)
!17369 = !DISubroutineType(types: !17370)
!17370 = !{null, !2510, !2529, !17371}
!17371 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17372)
!17372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17373)
!17373 = !{!17374}
!17374 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17372, file: !105, line: 66, baseType: !104, size: 64)
!17375 = !{!17376, !17377, !17378, !17379, !17385, !17386, !17389, !17392}
!17376 = !DILocalVariable(name: "to", arg: 1, scope: !17368, file: !2537, line: 88, type: !2510)
!17377 = !DILocalVariable(name: "fn", arg: 2, scope: !17368, file: !2537, line: 88, type: !2529)
!17378 = !DILocalVariable(name: "timeout", arg: 3, scope: !17368, file: !2537, line: 89, type: !17371)
!17379 = !DILocalVariable(name: "__i", scope: !17380, file: !2537, line: 102, type: !17381)
!17380 = distinct !DILexicalBlock(scope: !17368, file: !2537, line: 102, column: 2)
!17381 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !17382)
!17382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !17383)
!17383 = !{!17384}
!17384 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17382, file: !250, line: 33, baseType: !103, size: 32)
!17385 = !DILocalVariable(name: "__key", scope: !17380, file: !2537, line: 102, type: !17381)
!17386 = !DILocalVariable(name: "t", scope: !17387, file: !2537, line: 103, type: !2510)
!17387 = distinct !DILexicalBlock(scope: !17388, file: !2537, line: 102, column: 24)
!17388 = distinct !DILexicalBlock(scope: !17380, file: !2537, line: 102, column: 2)
!17389 = !DILocalVariable(name: "ticks", scope: !17390, file: !2537, line: 107, type: !104)
!17390 = distinct !DILexicalBlock(scope: !17391, file: !2537, line: 106, column: 39)
!17391 = distinct !DILexicalBlock(scope: !17387, file: !2537, line: 105, column: 7)
!17392 = !DILocalVariable(name: "next_time", scope: !17393, file: !2537, line: 137, type: !331)
!17393 = distinct !DILexicalBlock(scope: !17394, file: !2537, line: 127, column: 22)
!17394 = distinct !DILexicalBlock(scope: !17387, file: !2537, line: 127, column: 7)
!17395 = !DILocation(line: 0, scope: !17368)
!17396 = !DILocation(line: 91, column: 6, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17368, file: !2537, line: 91, column: 6)
!17398 = !DILocation(line: 91, column: 6, scope: !17368)
!17399 = !DILocation(line: 100, column: 6, scope: !17368)
!17400 = !DILocation(line: 100, column: 9, scope: !17368)
!17401 = !DILocation(line: 0, scope: !17380)
!17402 = !DILocalVariable(name: "l", arg: 1, scope: !17403, file: !250, line: 136, type: !17406)
!17403 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !17404, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17407)
!17404 = !DISubroutineType(types: !17405)
!17405 = !{!17381, !17406}
!17406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!17407 = !{!17402, !17408}
!17408 = !DILocalVariable(name: "k", scope: !17403, file: !250, line: 139, type: !17381)
!17409 = !DILocation(line: 0, scope: !17403, inlinedAt: !17410)
!17410 = distinct !DILocation(line: 102, column: 2, scope: !17380)
!17411 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17416)
!17412 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17413)
!17413 = !{!17414, !17415}
!17414 = !DILocalVariable(name: "key", scope: !17412, file: !6962, line: 44, type: !32)
!17415 = !DILocalVariable(name: "tmp", scope: !17412, file: !6962, line: 53, type: !32)
!17416 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17410)
!17417 = !{i64 1955026}
!17418 = !DILocation(line: 0, scope: !17412, inlinedAt: !17416)
!17419 = !DILocation(line: 106, column: 33, scope: !17391)
!17420 = !DILocation(line: 105, column: 7, scope: !17387)
!17421 = !DILocation(line: 107, column: 50, scope: !17390)
!17422 = !DILocation(line: 107, column: 48, scope: !17390)
!17423 = !DILocation(line: 0, scope: !17390)
!17424 = !DILocation(line: 109, column: 17, scope: !17390)
!17425 = !DILocation(line: 110, column: 3, scope: !17390)
!17426 = !DILocation(line: 111, column: 31, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17391, file: !2537, line: 110, column: 10)
!17428 = !DILocation(line: 111, column: 37, scope: !17427)
!17429 = !DILocation(line: 111, column: 35, scope: !17427)
!17430 = !DILocation(line: 0, scope: !17391)
!17431 = !DILocation(line: 109, column: 8, scope: !17390)
!17432 = !DILocation(line: 109, column: 15, scope: !17390)
!17433 = !DILocation(line: 114, column: 12, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17387, file: !2537, line: 114, column: 3)
!17435 = !DILocation(line: 0, scope: !17387)
!17436 = !DILocation(line: 114, column: 3, scope: !17434)
!17437 = !DILocation(line: 115, column: 24, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17439, file: !2537, line: 115, column: 8)
!17439 = distinct !DILexicalBlock(scope: !17440, file: !2537, line: 114, column: 45)
!17440 = distinct !DILexicalBlock(scope: !17434, file: !2537, line: 114, column: 3)
!17441 = !DILocation(line: 115, column: 11, scope: !17438)
!17442 = !DILocation(line: 115, column: 18, scope: !17438)
!17443 = !DILocation(line: 115, column: 8, scope: !17439)
!17444 = !DILocation(line: 116, column: 15, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17438, file: !2537, line: 115, column: 32)
!17446 = !DILocation(line: 117, column: 26, scope: !17445)
!17447 = !DILocation(line: 117, column: 37, scope: !17445)
!17448 = !DILocation(line: 117, column: 5, scope: !17445)
!17449 = !DILocation(line: 123, column: 7, scope: !17387)
!17450 = !DILocation(line: 120, column: 15, scope: !17439)
!17451 = !DILocation(line: 114, column: 36, scope: !17440)
!17452 = distinct !{!17452, !17436, !17453}
!17453 = !DILocation(line: 121, column: 3, scope: !17434)
!17454 = !DILocation(line: 124, column: 41, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17456, file: !2537, line: 123, column: 18)
!17456 = distinct !DILexicalBlock(scope: !17387, file: !2537, line: 123, column: 7)
!17457 = !DILocation(line: 124, column: 4, scope: !17455)
!17458 = !DILocation(line: 125, column: 3, scope: !17455)
!17459 = !DILocation(line: 127, column: 13, scope: !17394)
!17460 = !DILocation(line: 127, column: 10, scope: !17394)
!17461 = !DILocation(line: 127, column: 7, scope: !17387)
!17462 = !DILocation(line: 137, column: 24, scope: !17393)
!17463 = !DILocation(line: 0, scope: !17393)
!17464 = !DILocation(line: 139, column: 18, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17393, file: !2537, line: 139, column: 8)
!17466 = !DILocation(line: 139, column: 23, scope: !17465)
!17467 = !DILocation(line: 141, column: 5, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17465, file: !2537, line: 140, column: 48)
!17469 = !DILocation(line: 142, column: 4, scope: !17468)
!17470 = !DILocalVariable(name: "key", arg: 2, scope: !17471, file: !250, line: 190, type: !17381)
!17471 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !17472, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17474)
!17472 = !DISubroutineType(types: !17473)
!17473 = !{null, !17406, !17381}
!17474 = !{!17475, !17470}
!17475 = !DILocalVariable(name: "l", arg: 1, scope: !17471, file: !250, line: 189, type: !17406)
!17476 = !DILocation(line: 0, scope: !17471, inlinedAt: !17477)
!17477 = distinct !DILocation(line: 102, column: 2, scope: !17388)
!17478 = !DILocalVariable(name: "key", arg: 1, scope: !17479, file: !6962, line: 84, type: !32)
!17479 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17480)
!17480 = !{!17478}
!17481 = !DILocation(line: 0, scope: !17479, inlinedAt: !17482)
!17482 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17477)
!17483 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17482)
!17484 = !{i64 1955843}
!17485 = !DILocation(line: 148, column: 1, scope: !17368)
!17486 = distinct !DISubprogram(name: "elapsed", scope: !2537, file: !2537, line: 62, type: !17487, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !251)
!17487 = !DISubroutineType(types: !17488)
!17488 = !{!331}
!17489 = !DILocation(line: 64, column: 9, scope: !17486)
!17490 = !DILocation(line: 64, column: 28, scope: !17486)
!17491 = !DILocation(line: 64, column: 35, scope: !17486)
!17492 = !DILocation(line: 64, column: 2, scope: !17486)
!17493 = distinct !DISubprogram(name: "first", scope: !2537, file: !2537, line: 39, type: !17494, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17496)
!17494 = !DISubroutineType(types: !17495)
!17495 = !{!2510}
!17496 = !{!17497}
!17497 = !DILocalVariable(name: "t", scope: !17493, file: !2537, line: 41, type: !17498)
!17498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!17499 = !DILocation(line: 41, column: 19, scope: !17493)
!17500 = !DILocation(line: 0, scope: !17493)
!17501 = !DILocation(line: 43, column: 9, scope: !17493)
!17502 = !DILocation(line: 43, column: 2, scope: !17493)
!17503 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !17504, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17506)
!17504 = !DISubroutineType(types: !17505)
!17505 = !{null, !17498, !17498}
!17506 = !{!17507, !17508, !17509}
!17507 = !DILocalVariable(name: "successor", arg: 1, scope: !17503, file: !146, line: 443, type: !17498)
!17508 = !DILocalVariable(name: "node", arg: 2, scope: !17503, file: !146, line: 443, type: !17498)
!17509 = !DILocalVariable(name: "prev", scope: !17503, file: !146, line: 445, type: !17510)
!17510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17498)
!17511 = !DILocation(line: 0, scope: !17503)
!17512 = !DILocation(line: 445, column: 39, scope: !17503)
!17513 = !DILocation(line: 447, column: 8, scope: !17503)
!17514 = !DILocation(line: 447, column: 13, scope: !17503)
!17515 = !DILocation(line: 448, column: 8, scope: !17503)
!17516 = !DILocation(line: 448, column: 13, scope: !17503)
!17517 = !DILocation(line: 449, column: 8, scope: !17503)
!17518 = !DILocation(line: 449, column: 13, scope: !17503)
!17519 = !DILocation(line: 450, column: 18, scope: !17503)
!17520 = !DILocation(line: 451, column: 1, scope: !17503)
!17521 = distinct !DISubprogram(name: "next", scope: !2537, file: !2537, line: 46, type: !17522, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17524)
!17522 = !DISubroutineType(types: !17523)
!17523 = !{!2510, !2510}
!17524 = !{!17525, !17526}
!17525 = !DILocalVariable(name: "t", arg: 1, scope: !17521, file: !2537, line: 46, type: !2510)
!17526 = !DILocalVariable(name: "n", scope: !17521, file: !2537, line: 48, type: !17498)
!17527 = !DILocation(line: 0, scope: !17521)
!17528 = !DILocation(line: 48, column: 58, scope: !17521)
!17529 = !DILocation(line: 48, column: 19, scope: !17521)
!17530 = !DILocation(line: 50, column: 9, scope: !17521)
!17531 = !DILocation(line: 50, column: 2, scope: !17521)
!17532 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !17533, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17536)
!17533 = !DISubroutineType(types: !17534)
!17534 = !{null, !17535, !17498}
!17535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 32)
!17536 = !{!17537, !17538, !17539}
!17537 = !DILocalVariable(name: "list", arg: 1, scope: !17532, file: !146, line: 404, type: !17535)
!17538 = !DILocalVariable(name: "node", arg: 2, scope: !17532, file: !146, line: 404, type: !17498)
!17539 = !DILocalVariable(name: "tail", scope: !17532, file: !146, line: 406, type: !17510)
!17540 = !DILocation(line: 0, scope: !17532)
!17541 = !DILocation(line: 406, column: 34, scope: !17532)
!17542 = !DILocation(line: 408, column: 8, scope: !17532)
!17543 = !DILocation(line: 408, column: 13, scope: !17532)
!17544 = !DILocation(line: 409, column: 8, scope: !17532)
!17545 = !DILocation(line: 409, column: 13, scope: !17532)
!17546 = !DILocation(line: 411, column: 8, scope: !17532)
!17547 = !DILocation(line: 411, column: 13, scope: !17532)
!17548 = !DILocation(line: 412, column: 13, scope: !17532)
!17549 = !DILocation(line: 413, column: 1, scope: !17532)
!17550 = distinct !DISubprogram(name: "next_timeout", scope: !2537, file: !2537, line: 67, type: !17487, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17551)
!17551 = !{!17552, !17553, !17554}
!17552 = !DILocalVariable(name: "to", scope: !17550, file: !2537, line: 69, type: !2510)
!17553 = !DILocalVariable(name: "ticks_elapsed", scope: !17550, file: !2537, line: 70, type: !331)
!17554 = !DILocalVariable(name: "ret", scope: !17550, file: !2537, line: 71, type: !331)
!17555 = !DILocation(line: 69, column: 24, scope: !17550)
!17556 = !DILocation(line: 0, scope: !17550)
!17557 = !DILocation(line: 70, column: 26, scope: !17550)
!17558 = !DILocation(line: 73, column: 10, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17550, file: !2537, line: 73, column: 6)
!17560 = !DILocation(line: 73, column: 19, scope: !17559)
!17561 = !DILocation(line: 74, column: 21, scope: !17559)
!17562 = !DILocation(line: 74, column: 30, scope: !17559)
!17563 = !DILocation(line: 74, column: 28, scope: !17559)
!17564 = !DILocation(line: 74, column: 45, scope: !17559)
!17565 = !DILocation(line: 73, column: 6, scope: !17550)
!17566 = !DILocation(line: 77, column: 9, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17559, file: !2537, line: 76, column: 9)
!17568 = !DILocation(line: 0, scope: !17559)
!17569 = !DILocation(line: 81, column: 20, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17550, file: !2537, line: 81, column: 6)
!17571 = !DILocation(line: 81, column: 6, scope: !17570)
!17572 = !DILocation(line: 81, column: 32, scope: !17570)
!17573 = !DILocation(line: 85, column: 2, scope: !17550)
!17574 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !17575, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17577)
!17575 = !DISubroutineType(types: !17576)
!17576 = !{!17498, !17535, !17498}
!17577 = !{!17578, !17579}
!17578 = !DILocalVariable(name: "list", arg: 1, scope: !17574, file: !146, line: 341, type: !17535)
!17579 = !DILocalVariable(name: "node", arg: 2, scope: !17574, file: !146, line: 342, type: !17498)
!17580 = !DILocation(line: 0, scope: !17574)
!17581 = !DILocation(line: 344, column: 15, scope: !17574)
!17582 = !DILocation(line: 344, column: 9, scope: !17574)
!17583 = !DILocation(line: 344, column: 26, scope: !17574)
!17584 = !DILocation(line: 344, column: 2, scope: !17574)
!17585 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !17575, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17586)
!17586 = !{!17587, !17588}
!17587 = !DILocalVariable(name: "list", arg: 1, scope: !17585, file: !146, line: 325, type: !17535)
!17588 = !DILocalVariable(name: "node", arg: 2, scope: !17585, file: !146, line: 326, type: !17498)
!17589 = !DILocation(line: 0, scope: !17585)
!17590 = !DILocation(line: 328, column: 24, scope: !17585)
!17591 = !DILocation(line: 328, column: 15, scope: !17585)
!17592 = !DILocation(line: 328, column: 9, scope: !17585)
!17593 = !DILocation(line: 328, column: 45, scope: !17585)
!17594 = !DILocation(line: 328, column: 2, scope: !17585)
!17595 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !17596, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17598)
!17596 = !DISubroutineType(types: !17597)
!17597 = !{!17498, !17535}
!17598 = !{!17599}
!17599 = !DILocalVariable(name: "list", arg: 1, scope: !17595, file: !146, line: 294, type: !17535)
!17600 = !DILocation(line: 0, scope: !17595)
!17601 = !DILocation(line: 296, column: 9, scope: !17595)
!17602 = !DILocation(line: 296, column: 2, scope: !17595)
!17603 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !17604, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17606)
!17604 = !DISubroutineType(types: !17605)
!17605 = !{!131, !17535}
!17606 = !{!17607}
!17607 = !DILocalVariable(name: "list", arg: 1, scope: !17603, file: !146, line: 266, type: !17535)
!17608 = !DILocation(line: 0, scope: !17603)
!17609 = !DILocation(line: 268, column: 15, scope: !17603)
!17610 = !DILocation(line: 268, column: 20, scope: !17603)
!17611 = !DILocation(line: 268, column: 2, scope: !17603)
!17612 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2537, file: !2537, line: 150, type: !17613, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17615)
!17613 = !DISubroutineType(types: !17614)
!17614 = !{!103, !2510}
!17615 = !{!17616, !17617, !17618, !17620}
!17616 = !DILocalVariable(name: "to", arg: 1, scope: !17612, file: !2537, line: 150, type: !2510)
!17617 = !DILocalVariable(name: "ret", scope: !17612, file: !2537, line: 152, type: !103)
!17618 = !DILocalVariable(name: "__i", scope: !17619, file: !2537, line: 154, type: !17381)
!17619 = distinct !DILexicalBlock(scope: !17612, file: !2537, line: 154, column: 2)
!17620 = !DILocalVariable(name: "__key", scope: !17619, file: !2537, line: 154, type: !17381)
!17621 = !DILocation(line: 0, scope: !17612)
!17622 = !DILocation(line: 0, scope: !17619)
!17623 = !DILocation(line: 0, scope: !17403, inlinedAt: !17624)
!17624 = distinct !DILocation(line: 154, column: 2, scope: !17619)
!17625 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17626)
!17626 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17624)
!17627 = !DILocation(line: 0, scope: !17412, inlinedAt: !17626)
!17628 = !DILocation(line: 155, column: 7, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17630, file: !2537, line: 155, column: 7)
!17630 = distinct !DILexicalBlock(scope: !17631, file: !2537, line: 154, column: 24)
!17631 = distinct !DILexicalBlock(scope: !17619, file: !2537, line: 154, column: 2)
!17632 = !DILocation(line: 155, column: 7, scope: !17630)
!17633 = !DILocation(line: 156, column: 4, scope: !17634)
!17634 = distinct !DILexicalBlock(scope: !17629, file: !2537, line: 155, column: 39)
!17635 = !DILocation(line: 158, column: 3, scope: !17634)
!17636 = !DILocation(line: 0, scope: !17471, inlinedAt: !17637)
!17637 = distinct !DILocation(line: 154, column: 2, scope: !17631)
!17638 = !DILocation(line: 0, scope: !17479, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17637)
!17640 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17639)
!17641 = !DILocation(line: 161, column: 2, scope: !17612)
!17642 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !17643, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17647)
!17643 = !DISubroutineType(types: !17644)
!17644 = !{!131, !17645}
!17645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17646, size: 32)
!17646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2514)
!17647 = !{!17648}
!17648 = !DILocalVariable(name: "node", arg: 1, scope: !17642, file: !146, line: 225, type: !17645)
!17649 = !DILocation(line: 0, scope: !17642)
!17650 = !DILocation(line: 227, column: 15, scope: !17642)
!17651 = !DILocation(line: 227, column: 20, scope: !17642)
!17652 = !DILocation(line: 227, column: 2, scope: !17642)
!17653 = distinct !DISubprogram(name: "remove_timeout", scope: !2537, file: !2537, line: 53, type: !2531, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17654)
!17654 = !{!17655}
!17655 = !DILocalVariable(name: "t", arg: 1, scope: !17653, file: !2537, line: 53, type: !2510)
!17656 = !DILocation(line: 0, scope: !17653)
!17657 = !DILocation(line: 55, column: 6, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17653, file: !2537, line: 55, column: 6)
!17659 = !DILocation(line: 55, column: 14, scope: !17658)
!17660 = !DILocation(line: 55, column: 6, scope: !17653)
!17661 = !DILocation(line: 56, column: 25, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17658, file: !2537, line: 55, column: 23)
!17663 = !DILocation(line: 56, column: 12, scope: !17662)
!17664 = !DILocation(line: 56, column: 19, scope: !17662)
!17665 = !DILocation(line: 57, column: 2, scope: !17662)
!17666 = !DILocation(line: 59, column: 23, scope: !17653)
!17667 = !DILocation(line: 59, column: 2, scope: !17653)
!17668 = !DILocation(line: 60, column: 1, scope: !17653)
!17669 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !17670, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17672)
!17670 = !DISubroutineType(types: !17671)
!17671 = !{null, !17498}
!17672 = !{!17673, !17674, !17675}
!17673 = !DILocalVariable(name: "node", arg: 1, scope: !17669, file: !146, line: 496, type: !17498)
!17674 = !DILocalVariable(name: "prev", scope: !17669, file: !146, line: 498, type: !17510)
!17675 = !DILocalVariable(name: "next", scope: !17669, file: !146, line: 499, type: !17510)
!17676 = !DILocation(line: 0, scope: !17669)
!17677 = !DILocation(line: 498, column: 34, scope: !17669)
!17678 = !DILocation(line: 499, column: 34, scope: !17669)
!17679 = !DILocation(line: 501, column: 8, scope: !17669)
!17680 = !DILocation(line: 501, column: 13, scope: !17669)
!17681 = !DILocation(line: 502, column: 8, scope: !17669)
!17682 = !DILocation(line: 502, column: 13, scope: !17669)
!17683 = !DILocation(line: 503, column: 2, scope: !17669)
!17684 = !DILocation(line: 504, column: 1, scope: !17669)
!17685 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !17670, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17686)
!17686 = !{!17687}
!17687 = !DILocalVariable(name: "node", arg: 1, scope: !17685, file: !146, line: 211, type: !17498)
!17688 = !DILocation(line: 0, scope: !17685)
!17689 = !DILocation(line: 213, column: 8, scope: !17685)
!17690 = !DILocation(line: 213, column: 13, scope: !17685)
!17691 = !DILocation(line: 214, column: 8, scope: !17685)
!17692 = !DILocation(line: 214, column: 13, scope: !17685)
!17693 = !DILocation(line: 215, column: 1, scope: !17685)
!17694 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2537, file: !2537, line: 183, type: !17695, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17699)
!17695 = !DISubroutineType(types: !17696)
!17696 = !{!104, !17697}
!17697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17698, size: 32)
!17698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2511)
!17699 = !{!17700, !17701, !17702, !17704}
!17700 = !DILocalVariable(name: "timeout", arg: 1, scope: !17694, file: !2537, line: 183, type: !17697)
!17701 = !DILocalVariable(name: "ticks", scope: !17694, file: !2537, line: 185, type: !104)
!17702 = !DILocalVariable(name: "__i", scope: !17703, file: !2537, line: 187, type: !17381)
!17703 = distinct !DILexicalBlock(scope: !17694, file: !2537, line: 187, column: 2)
!17704 = !DILocalVariable(name: "__key", scope: !17703, file: !2537, line: 187, type: !17381)
!17705 = !DILocation(line: 0, scope: !17694)
!17706 = !DILocation(line: 0, scope: !17703)
!17707 = !DILocation(line: 0, scope: !17403, inlinedAt: !17708)
!17708 = distinct !DILocation(line: 187, column: 2, scope: !17703)
!17709 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17710)
!17710 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17708)
!17711 = !DILocation(line: 0, scope: !17412, inlinedAt: !17710)
!17712 = !DILocation(line: 188, column: 11, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !17714, file: !2537, line: 187, column: 24)
!17714 = distinct !DILexicalBlock(scope: !17703, file: !2537, line: 187, column: 2)
!17715 = !DILocation(line: 0, scope: !17471, inlinedAt: !17716)
!17716 = distinct !DILocation(line: 187, column: 2, scope: !17714)
!17717 = !DILocation(line: 0, scope: !17479, inlinedAt: !17718)
!17718 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17716)
!17719 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17718)
!17720 = !DILocation(line: 191, column: 2, scope: !17694)
!17721 = distinct !DISubprogram(name: "timeout_rem", scope: !2537, file: !2537, line: 165, type: !17695, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17722)
!17722 = !{!17723, !17724, !17725}
!17723 = !DILocalVariable(name: "timeout", arg: 1, scope: !17721, file: !2537, line: 165, type: !17697)
!17724 = !DILocalVariable(name: "ticks", scope: !17721, file: !2537, line: 167, type: !104)
!17725 = !DILocalVariable(name: "t", scope: !17726, file: !2537, line: 173, type: !2510)
!17726 = distinct !DILexicalBlock(scope: !17721, file: !2537, line: 173, column: 2)
!17727 = !DILocation(line: 0, scope: !17721)
!17728 = !DILocation(line: 169, column: 6, scope: !17729)
!17729 = distinct !DILexicalBlock(scope: !17721, file: !2537, line: 169, column: 6)
!17730 = !DILocation(line: 169, column: 6, scope: !17721)
!17731 = !DILocation(line: 173, column: 28, scope: !17726)
!17732 = !DILocation(line: 0, scope: !17726)
!17733 = !DILocation(line: 173, column: 39, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17726, file: !2537, line: 173, column: 2)
!17735 = !DILocation(line: 173, column: 2, scope: !17726)
!17736 = !DILocation(line: 174, column: 15, scope: !17737)
!17737 = distinct !DILexicalBlock(scope: !17734, file: !2537, line: 173, column: 61)
!17738 = !DILocation(line: 174, column: 9, scope: !17737)
!17739 = !DILocation(line: 175, column: 15, scope: !17740)
!17740 = distinct !DILexicalBlock(scope: !17737, file: !2537, line: 175, column: 7)
!17741 = !DILocation(line: 175, column: 7, scope: !17737)
!17742 = !DILocation(line: 173, column: 52, scope: !17734)
!17743 = distinct !{!17743, !17735, !17744}
!17744 = !DILocation(line: 178, column: 2, scope: !17726)
!17745 = !DILocation(line: 180, column: 17, scope: !17721)
!17746 = !DILocation(line: 180, column: 15, scope: !17721)
!17747 = !DILocation(line: 180, column: 2, scope: !17721)
!17748 = !DILocation(line: 181, column: 1, scope: !17721)
!17749 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14319, file: !14319, line: 35, type: !17750, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17752)
!17750 = !DISubroutineType(types: !17751)
!17751 = !{!131, !17697}
!17752 = !{!17753}
!17753 = !DILocalVariable(name: "to", arg: 1, scope: !17749, file: !14319, line: 35, type: !17697)
!17754 = !DILocation(line: 0, scope: !17749)
!17755 = !DILocation(line: 37, column: 35, scope: !17749)
!17756 = !DILocation(line: 37, column: 10, scope: !17749)
!17757 = !DILocation(line: 37, column: 9, scope: !17749)
!17758 = !DILocation(line: 37, column: 2, scope: !17749)
!17759 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2537, file: !2537, line: 194, type: !17695, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17760)
!17760 = !{!17761, !17762, !17763, !17765}
!17761 = !DILocalVariable(name: "timeout", arg: 1, scope: !17759, file: !2537, line: 194, type: !17697)
!17762 = !DILocalVariable(name: "ticks", scope: !17759, file: !2537, line: 196, type: !104)
!17763 = !DILocalVariable(name: "__i", scope: !17764, file: !2537, line: 198, type: !17381)
!17764 = distinct !DILexicalBlock(scope: !17759, file: !2537, line: 198, column: 2)
!17765 = !DILocalVariable(name: "__key", scope: !17764, file: !2537, line: 198, type: !17381)
!17766 = !DILocation(line: 0, scope: !17759)
!17767 = !DILocation(line: 0, scope: !17764)
!17768 = !DILocation(line: 0, scope: !17403, inlinedAt: !17769)
!17769 = distinct !DILocation(line: 198, column: 2, scope: !17764)
!17770 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17771)
!17771 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17769)
!17772 = !DILocation(line: 0, scope: !17412, inlinedAt: !17771)
!17773 = !DILocation(line: 199, column: 11, scope: !17774)
!17774 = distinct !DILexicalBlock(scope: !17775, file: !2537, line: 198, column: 24)
!17775 = distinct !DILexicalBlock(scope: !17764, file: !2537, line: 198, column: 2)
!17776 = !DILocation(line: 199, column: 23, scope: !17774)
!17777 = !DILocation(line: 0, scope: !17471, inlinedAt: !17778)
!17778 = distinct !DILocation(line: 198, column: 2, scope: !17775)
!17779 = !DILocation(line: 0, scope: !17479, inlinedAt: !17780)
!17780 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17778)
!17781 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17780)
!17782 = !DILocation(line: 199, column: 21, scope: !17774)
!17783 = !DILocation(line: 202, column: 2, scope: !17759)
!17784 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2537, file: !2537, line: 205, type: !17487, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17785)
!17785 = !{!17786, !17787, !17789}
!17786 = !DILocalVariable(name: "ret", scope: !17784, file: !2537, line: 207, type: !331)
!17787 = !DILocalVariable(name: "__i", scope: !17788, file: !2537, line: 209, type: !17381)
!17788 = distinct !DILexicalBlock(scope: !17784, file: !2537, line: 209, column: 2)
!17789 = !DILocalVariable(name: "__key", scope: !17788, file: !2537, line: 209, type: !17381)
!17790 = !DILocation(line: 0, scope: !17784)
!17791 = !DILocation(line: 0, scope: !17788)
!17792 = !DILocation(line: 0, scope: !17403, inlinedAt: !17793)
!17793 = distinct !DILocation(line: 209, column: 2, scope: !17788)
!17794 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17795)
!17795 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17793)
!17796 = !DILocation(line: 0, scope: !17412, inlinedAt: !17795)
!17797 = !DILocation(line: 210, column: 9, scope: !17798)
!17798 = distinct !DILexicalBlock(scope: !17799, file: !2537, line: 209, column: 24)
!17799 = distinct !DILexicalBlock(scope: !17788, file: !2537, line: 209, column: 2)
!17800 = !DILocation(line: 0, scope: !17471, inlinedAt: !17801)
!17801 = distinct !DILocation(line: 209, column: 2, scope: !17799)
!17802 = !DILocation(line: 0, scope: !17479, inlinedAt: !17803)
!17803 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17801)
!17804 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17803)
!17805 = !DILocation(line: 212, column: 2, scope: !17784)
!17806 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2537, file: !2537, line: 215, type: !11866, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17807)
!17807 = !{!17808, !17809, !17810, !17812, !17813, !17816, !17817}
!17808 = !DILocalVariable(name: "ticks", arg: 1, scope: !17806, file: !2537, line: 215, type: !331)
!17809 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17806, file: !2537, line: 215, type: !131)
!17810 = !DILocalVariable(name: "__i", scope: !17811, file: !2537, line: 217, type: !17381)
!17811 = distinct !DILexicalBlock(scope: !17806, file: !2537, line: 217, column: 2)
!17812 = !DILocalVariable(name: "__key", scope: !17811, file: !2537, line: 217, type: !17381)
!17813 = !DILocalVariable(name: "next_to", scope: !17814, file: !2537, line: 218, type: !103)
!17814 = distinct !DILexicalBlock(scope: !17815, file: !2537, line: 217, column: 24)
!17815 = distinct !DILexicalBlock(scope: !17811, file: !2537, line: 217, column: 2)
!17816 = !DILocalVariable(name: "sooner", scope: !17814, file: !2537, line: 219, type: !131)
!17817 = !DILocalVariable(name: "imminent", scope: !17814, file: !2537, line: 221, type: !131)
!17818 = !DILocation(line: 0, scope: !17806)
!17819 = !DILocation(line: 0, scope: !17811)
!17820 = !DILocation(line: 0, scope: !17403, inlinedAt: !17821)
!17821 = distinct !DILocation(line: 217, column: 2, scope: !17811)
!17822 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17823)
!17823 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17821)
!17824 = !DILocation(line: 0, scope: !17412, inlinedAt: !17823)
!17825 = !DILocation(line: 218, column: 17, scope: !17814)
!17826 = !DILocation(line: 0, scope: !17814)
!17827 = !DILocation(line: 221, column: 27, scope: !17814)
!17828 = !DILocation(line: 233, column: 17, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17814, file: !2537, line: 233, column: 7)
!17830 = !DILocation(line: 234, column: 26, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17829, file: !2537, line: 233, column: 56)
!17832 = !DILocation(line: 234, column: 4, scope: !17831)
!17833 = !DILocation(line: 235, column: 3, scope: !17831)
!17834 = !DILocation(line: 0, scope: !17471, inlinedAt: !17835)
!17835 = distinct !DILocation(line: 217, column: 2, scope: !17815)
!17836 = !DILocation(line: 0, scope: !17479, inlinedAt: !17837)
!17837 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17835)
!17838 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17837)
!17839 = !DILocation(line: 237, column: 1, scope: !17806)
!17840 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2537, file: !2537, line: 239, type: !17841, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17843)
!17841 = !DISubroutineType(types: !17842)
!17842 = !{null, !331}
!17843 = !{!17844, !17845, !17846, !17848}
!17844 = !DILocalVariable(name: "ticks", arg: 1, scope: !17840, file: !2537, line: 239, type: !331)
!17845 = !DILocalVariable(name: "key", scope: !17840, file: !2537, line: 245, type: !17381)
!17846 = !DILocalVariable(name: "t", scope: !17847, file: !2537, line: 262, type: !2510)
!17847 = distinct !DILexicalBlock(scope: !17840, file: !2537, line: 261, column: 67)
!17848 = !DILocalVariable(name: "dt", scope: !17847, file: !2537, line: 263, type: !103)
!17849 = !DILocation(line: 0, scope: !17840)
!17850 = !DILocation(line: 242, column: 2, scope: !17840)
!17851 = !DILocation(line: 0, scope: !17403, inlinedAt: !17852)
!17852 = distinct !DILocation(line: 245, column: 25, scope: !17840)
!17853 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17854)
!17854 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17852)
!17855 = !DILocation(line: 0, scope: !17412, inlinedAt: !17854)
!17856 = !DILocation(line: 261, column: 9, scope: !17840)
!17857 = !DILocation(line: 261, column: 17, scope: !17840)
!17858 = !DILocation(line: 261, column: 25, scope: !17840)
!17859 = !DILocation(line: 261, column: 37, scope: !17840)
!17860 = !DILocation(line: 261, column: 47, scope: !17840)
!17861 = !DILocation(line: 261, column: 44, scope: !17840)
!17862 = !DILocation(line: 261, column: 2, scope: !17840)
!17863 = !DILocation(line: 0, scope: !17847)
!17864 = !DILocation(line: 263, column: 12, scope: !17847)
!17865 = !DILocation(line: 265, column: 16, scope: !17847)
!17866 = !DILocation(line: 265, column: 13, scope: !17847)
!17867 = !DILocation(line: 266, column: 13, scope: !17847)
!17868 = !DILocation(line: 267, column: 3, scope: !17847)
!17869 = !DILocation(line: 0, scope: !17471, inlinedAt: !17870)
!17870 = distinct !DILocation(line: 269, column: 3, scope: !17847)
!17871 = !DILocation(line: 0, scope: !17479, inlinedAt: !17872)
!17872 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17870)
!17873 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17872)
!17874 = !DILocation(line: 270, column: 6, scope: !17847)
!17875 = !DILocation(line: 270, column: 3, scope: !17847)
!17876 = !DILocation(line: 0, scope: !17403, inlinedAt: !17877)
!17877 = distinct !DILocation(line: 271, column: 9, scope: !17847)
!17878 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17879)
!17879 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17877)
!17880 = !DILocation(line: 0, scope: !17412, inlinedAt: !17879)
!17881 = !DILocation(line: 272, column: 22, scope: !17847)
!17882 = distinct !{!17882, !17862, !17883}
!17883 = !DILocation(line: 273, column: 2, scope: !17840)
!17884 = !DILocation(line: 276, column: 19, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17886, file: !2537, line: 275, column: 23)
!17886 = distinct !DILexicalBlock(scope: !17840, file: !2537, line: 275, column: 6)
!17887 = !DILocation(line: 277, column: 2, scope: !17885)
!17888 = !DILocation(line: 279, column: 15, scope: !17840)
!17889 = !DILocation(line: 279, column: 12, scope: !17840)
!17890 = !DILocation(line: 280, column: 21, scope: !17840)
!17891 = !DILocation(line: 282, column: 24, scope: !17840)
!17892 = !DILocation(line: 282, column: 2, scope: !17840)
!17893 = !DILocation(line: 0, scope: !17471, inlinedAt: !17894)
!17894 = distinct !DILocation(line: 284, column: 2, scope: !17840)
!17895 = !DILocation(line: 0, scope: !17479, inlinedAt: !17896)
!17896 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17894)
!17897 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17896)
!17898 = !DILocation(line: 285, column: 1, scope: !17840)
!17899 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2537, file: !2537, line: 287, type: !3588, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17900)
!17900 = !{!17901, !17902, !17904}
!17901 = !DILocalVariable(name: "t", scope: !17899, file: !2537, line: 289, type: !109)
!17902 = !DILocalVariable(name: "__i", scope: !17903, file: !2537, line: 291, type: !17381)
!17903 = distinct !DILexicalBlock(scope: !17899, file: !2537, line: 291, column: 2)
!17904 = !DILocalVariable(name: "__key", scope: !17903, file: !2537, line: 291, type: !17381)
!17905 = !DILocation(line: 0, scope: !17899)
!17906 = !DILocation(line: 0, scope: !17903)
!17907 = !DILocation(line: 0, scope: !17403, inlinedAt: !17908)
!17908 = distinct !DILocation(line: 291, column: 2, scope: !17903)
!17909 = !DILocation(line: 55, column: 2, scope: !17412, inlinedAt: !17910)
!17910 = distinct !DILocation(line: 145, column: 10, scope: !17403, inlinedAt: !17908)
!17911 = !DILocation(line: 0, scope: !17412, inlinedAt: !17910)
!17912 = !DILocation(line: 292, column: 7, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17914, file: !2537, line: 291, column: 24)
!17914 = distinct !DILexicalBlock(scope: !17903, file: !2537, line: 291, column: 2)
!17915 = !DILocation(line: 292, column: 19, scope: !17913)
!17916 = !DILocation(line: 0, scope: !17471, inlinedAt: !17917)
!17917 = distinct !DILocation(line: 291, column: 2, scope: !17914)
!17918 = !DILocation(line: 0, scope: !17479, inlinedAt: !17919)
!17919 = distinct !DILocation(line: 215, column: 2, scope: !17471, inlinedAt: !17917)
!17920 = !DILocation(line: 95, column: 2, scope: !17479, inlinedAt: !17919)
!17921 = !DILocation(line: 292, column: 17, scope: !17913)
!17922 = !DILocation(line: 294, column: 2, scope: !17899)
!17923 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2537, file: !2537, line: 297, type: !3574, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !251)
!17924 = !DILocation(line: 300, column: 19, scope: !17923)
!17925 = !DILocation(line: 300, column: 9, scope: !17923)
!17926 = !DILocation(line: 300, column: 2, scope: !17923)
!17927 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2537, file: !2537, line: 306, type: !3588, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !251)
!17928 = !DILocation(line: 308, column: 9, scope: !17927)
!17929 = !DILocation(line: 308, column: 2, scope: !17927)
!17930 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2537, file: !2537, line: 319, type: !7369, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17931)
!17931 = !{!17932, !17933, !17934, !17935}
!17932 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17930, file: !2537, line: 319, type: !108)
!17933 = !DILocalVariable(name: "start_cycles", scope: !17930, file: !2537, line: 328, type: !108)
!17934 = !DILocalVariable(name: "cycles_to_wait", scope: !17930, file: !2537, line: 331, type: !108)
!17935 = !DILocalVariable(name: "current_cycles", scope: !17936, file: !2537, line: 338, type: !108)
!17936 = distinct !DILexicalBlock(scope: !17937, file: !2537, line: 337, column: 11)
!17937 = distinct !DILexicalBlock(scope: !17938, file: !2537, line: 337, column: 2)
!17938 = distinct !DILexicalBlock(scope: !17930, file: !2537, line: 337, column: 2)
!17939 = !DILocation(line: 0, scope: !17930)
!17940 = !DILocation(line: 322, column: 19, scope: !17941)
!17941 = distinct !DILexicalBlock(scope: !17930, file: !2537, line: 322, column: 6)
!17942 = !DILocation(line: 322, column: 6, scope: !17930)
!17943 = !DILocation(line: 328, column: 26, scope: !17930)
!17944 = !DILocation(line: 333, column: 43, scope: !17930)
!17945 = !DILocation(line: 337, column: 2, scope: !17930)
!17946 = !DILocation(line: 338, column: 29, scope: !17936)
!17947 = !DILocation(line: 0, scope: !17936)
!17948 = !DILocation(line: 341, column: 23, scope: !17949)
!17949 = distinct !DILexicalBlock(scope: !17936, file: !2537, line: 341, column: 7)
!17950 = !DILocation(line: 341, column: 39, scope: !17949)
!17951 = !DILocation(line: 349, column: 1, scope: !17930)
!17952 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !137, file: !137, line: 1675, type: !3574, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !251)
!17953 = !DILocation(line: 1677, column: 9, scope: !17952)
!17954 = !DILocation(line: 1677, column: 2, scope: !17952)
!17955 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17956, file: !17956, line: 24, type: !3574, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !251)
!17956 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17957 = !DILocation(line: 26, column: 9, scope: !17955)
!17958 = !DILocation(line: 26, column: 2, scope: !17955)
!17959 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2537, file: !2537, line: 364, type: !17960, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !17962)
!17960 = !DISubroutineType(types: !17961)
!17961 = !{!109, !17371}
!17962 = !{!17963, !17964}
!17963 = !DILocalVariable(name: "timeout", arg: 1, scope: !17959, file: !2537, line: 364, type: !17371)
!17964 = !DILocalVariable(name: "dt", scope: !17959, file: !2537, line: 366, type: !104)
!17965 = !DILocation(line: 0, scope: !17959)
!17966 = !DILocation(line: 368, column: 6, scope: !17959)
!17967 = !DILocation(line: 371, column: 10, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17969, file: !2537, line: 370, column: 47)
!17969 = distinct !DILexicalBlock(scope: !17970, file: !2537, line: 370, column: 13)
!17970 = distinct !DILexicalBlock(scope: !17959, file: !2537, line: 368, column: 6)
!17971 = !DILocation(line: 371, column: 3, scope: !17968)
!17972 = !DILocation(line: 376, column: 58, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17974, file: !2537, line: 376, column: 7)
!17974 = distinct !DILexicalBlock(scope: !17969, file: !2537, line: 372, column: 9)
!17975 = !DILocation(line: 376, column: 7, scope: !17974)
!17976 = !DILocation(line: 376, column: 43, scope: !17973)
!17977 = !DILocation(line: 377, column: 4, scope: !17978)
!17978 = distinct !DILexicalBlock(scope: !17973, file: !2537, line: 376, column: 64)
!17979 = !DILocation(line: 379, column: 10, scope: !17974)
!17980 = !DILocation(line: 379, column: 33, scope: !17974)
!17981 = !DILocation(line: 379, column: 31, scope: !17974)
!17982 = !DILocation(line: 379, column: 3, scope: !17974)
!17983 = !DILocation(line: 0, scope: !17970)
!17984 = !DILocation(line: 381, column: 1, scope: !17959)
!17985 = distinct !DISubprogram(name: "k_free", scope: !2551, file: !2551, line: 43, type: !7217, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17986)
!17986 = !{!17987, !17988}
!17987 = !DILocalVariable(name: "ptr", arg: 1, scope: !17985, file: !2551, line: 43, type: !102)
!17988 = !DILocalVariable(name: "heap_ref", scope: !17985, file: !2551, line: 45, type: !17989)
!17989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17990, size: 32)
!17990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!17991 = !DILocation(line: 0, scope: !17985)
!17992 = !DILocation(line: 47, column: 10, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17985, file: !2551, line: 47, column: 6)
!17994 = !DILocation(line: 47, column: 6, scope: !17985)
!17995 = !DILocation(line: 49, column: 9, scope: !17996)
!17996 = distinct !DILexicalBlock(scope: !17993, file: !2551, line: 47, column: 19)
!17997 = !DILocation(line: 53, column: 15, scope: !17996)
!17998 = !DILocation(line: 53, column: 3, scope: !17996)
!17999 = !DILocation(line: 56, column: 2, scope: !17996)
!18000 = !DILocation(line: 57, column: 1, scope: !17985)
!18001 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2551, file: !2551, line: 64, type: !18002, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18004)
!18002 = !DISubroutineType(types: !18003)
!18003 = !{!102, !132, !132}
!18004 = !{!18005, !18006, !18007}
!18005 = !DILocalVariable(name: "align", arg: 1, scope: !18001, file: !2551, line: 64, type: !132)
!18006 = !DILocalVariable(name: "size", arg: 2, scope: !18001, file: !2551, line: 64, type: !132)
!18007 = !DILocalVariable(name: "ret", scope: !18001, file: !2551, line: 75, type: !102)
!18008 = !DILocation(line: 0, scope: !18001)
!18009 = !DILocation(line: 75, column: 14, scope: !18001)
!18010 = !DILocation(line: 79, column: 2, scope: !18001)
!18011 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2551, file: !2551, line: 12, type: !18012, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18014)
!18012 = !DISubroutineType(types: !18013)
!18013 = !{!102, !17990, !132, !132}
!18014 = !{!18015, !18016, !18017, !18018, !18019, !18020}
!18015 = !DILocalVariable(name: "heap", arg: 1, scope: !18011, file: !2551, line: 12, type: !17990)
!18016 = !DILocalVariable(name: "align", arg: 2, scope: !18011, file: !2551, line: 12, type: !132)
!18017 = !DILocalVariable(name: "size", arg: 3, scope: !18011, file: !2551, line: 12, type: !132)
!18018 = !DILocalVariable(name: "mem", scope: !18011, file: !2551, line: 14, type: !102)
!18019 = !DILocalVariable(name: "heap_ref", scope: !18011, file: !2551, line: 15, type: !17989)
!18020 = !DILocalVariable(name: "__align", scope: !18011, file: !2551, line: 16, type: !132)
!18021 = !DILocation(line: 0, scope: !18011)
!18022 = !DILocation(line: 24, column: 6, scope: !18023)
!18023 = distinct !DILexicalBlock(scope: !18011, file: !2551, line: 24, column: 6)
!18024 = !DILocation(line: 24, column: 6, scope: !18011)
!18025 = !DILocation(line: 27, column: 18, scope: !18011)
!18026 = !DILocation(line: 29, column: 44, scope: !18011)
!18027 = !DILocation(line: 29, column: 8, scope: !18011)
!18028 = !DILocation(line: 30, column: 10, scope: !18029)
!18029 = distinct !DILexicalBlock(scope: !18011, file: !2551, line: 30, column: 6)
!18030 = !DILocation(line: 30, column: 6, scope: !18011)
!18031 = !DILocation(line: 34, column: 13, scope: !18011)
!18032 = !DILocation(line: 35, column: 12, scope: !18011)
!18033 = !DILocation(line: 36, column: 8, scope: !18011)
!18034 = !DILocation(line: 40, column: 2, scope: !18011)
!18035 = !DILocation(line: 41, column: 1, scope: !18011)
!18036 = distinct !DISubprogram(name: "size_add_overflow", scope: !14684, file: !14684, line: 47, type: !14685, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18037)
!18037 = !{!18038, !18039, !18040}
!18038 = !DILocalVariable(name: "a", arg: 1, scope: !18036, file: !14684, line: 47, type: !132)
!18039 = !DILocalVariable(name: "b", arg: 2, scope: !18036, file: !14684, line: 47, type: !132)
!18040 = !DILocalVariable(name: "result", arg: 3, scope: !18036, file: !14684, line: 47, type: !2685)
!18041 = !DILocation(line: 0, scope: !18036)
!18042 = !DILocation(line: 49, column: 9, scope: !18036)
!18043 = !DILocation(line: 49, column: 2, scope: !18036)
!18044 = distinct !DISubprogram(name: "k_malloc", scope: !2551, file: !2551, line: 82, type: !14696, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18045)
!18045 = !{!18046, !18047}
!18046 = !DILocalVariable(name: "size", arg: 1, scope: !18044, file: !2551, line: 82, type: !132)
!18047 = !DILocalVariable(name: "ret", scope: !18044, file: !2551, line: 86, type: !102)
!18048 = !DILocation(line: 0, scope: !18044)
!18049 = !DILocation(line: 86, column: 14, scope: !18044)
!18050 = !DILocation(line: 90, column: 2, scope: !18044)
!18051 = distinct !DISubprogram(name: "k_calloc", scope: !2551, file: !2551, line: 93, type: !18002, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18052)
!18052 = !{!18053, !18054, !18055, !18056}
!18053 = !DILocalVariable(name: "nmemb", arg: 1, scope: !18051, file: !2551, line: 93, type: !132)
!18054 = !DILocalVariable(name: "size", arg: 2, scope: !18051, file: !2551, line: 93, type: !132)
!18055 = !DILocalVariable(name: "ret", scope: !18051, file: !2551, line: 95, type: !102)
!18056 = !DILocalVariable(name: "bounds", scope: !18051, file: !2551, line: 96, type: !132)
!18057 = !DILocation(line: 0, scope: !18051)
!18058 = !DILocation(line: 96, column: 2, scope: !18051)
!18059 = !DILocation(line: 100, column: 6, scope: !18060)
!18060 = distinct !DILexicalBlock(scope: !18051, file: !2551, line: 100, column: 6)
!18061 = !DILocation(line: 100, column: 6, scope: !18051)
!18062 = !DILocation(line: 106, column: 17, scope: !18051)
!18063 = !DILocation(line: 106, column: 8, scope: !18051)
!18064 = !DILocation(line: 107, column: 10, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18051, file: !2551, line: 107, column: 6)
!18066 = !DILocation(line: 107, column: 6, scope: !18051)
!18067 = !DILocation(line: 108, column: 9, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !18065, file: !2551, line: 107, column: 19)
!18069 = !DILocation(line: 109, column: 2, scope: !18068)
!18070 = !DILocation(line: 114, column: 1, scope: !18051)
!18071 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14684, file: !14684, line: 105, type: !14685, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18072)
!18072 = !{!18073, !18074, !18075}
!18073 = !DILocalVariable(name: "a", arg: 1, scope: !18071, file: !14684, line: 105, type: !132)
!18074 = !DILocalVariable(name: "b", arg: 2, scope: !18071, file: !14684, line: 105, type: !132)
!18075 = !DILocalVariable(name: "result", arg: 3, scope: !18071, file: !14684, line: 105, type: !2685)
!18076 = !DILocation(line: 0, scope: !18071)
!18077 = !DILocation(line: 107, column: 9, scope: !18071)
!18078 = !DILocation(line: 107, column: 2, scope: !18071)
!18079 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2551, file: !2551, line: 116, type: !18080, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18152)
!18080 = !DISubroutineType(types: !18081)
!18081 = !{null, !18082}
!18082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18083, size: 32)
!18083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !18084)
!18084 = !{!18085, !18125, !18137, !18138, !18139, !18140, !18146, !18147}
!18085 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !18083, file: !163, line: 247, baseType: !18086, size: 384)
!18086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !18087)
!18087 = !{!18088, !18099, !18101, !18102, !18103, !18112, !18113, !18114}
!18088 = !DIDerivedType(tag: DW_TAG_member, scope: !18086, file: !163, line: 60, baseType: !18089, size: 64)
!18089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18086, file: !163, line: 60, size: 64, elements: !18090)
!18090 = !{!18091, !18093}
!18091 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !18089, file: !163, line: 61, baseType: !18092, size: 64)
!18092 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2566)
!18093 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !18089, file: !163, line: 62, baseType: !18094, size: 64)
!18094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !18095)
!18095 = !{!18096}
!18096 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !18094, file: !175, line: 50, baseType: !18097, size: 64)
!18097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18098, size: 64, elements: !180)
!18098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18094, size: 32)
!18099 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !18086, file: !163, line: 68, baseType: !18100, size: 32, offset: 64)
!18100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!18101 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !18086, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!18102 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !18086, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!18103 = !DIDerivedType(tag: DW_TAG_member, scope: !18086, file: !163, line: 90, baseType: !18104, size: 16, offset: 112)
!18104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18086, file: !163, line: 90, size: 16, elements: !18105)
!18105 = !{!18106, !18111}
!18106 = !DIDerivedType(tag: DW_TAG_member, scope: !18104, file: !163, line: 91, baseType: !18107, size: 16)
!18107 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18104, file: !163, line: 91, size: 16, elements: !18108)
!18108 = !{!18109, !18110}
!18109 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18107, file: !163, line: 96, baseType: !195, size: 8)
!18110 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !18107, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!18111 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !18104, file: !163, line: 100, baseType: !121, size: 16)
!18112 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !18086, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!18113 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !18086, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!18114 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !18086, file: !163, line: 131, baseType: !18115, size: 192, offset: 192)
!18115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !18116)
!18116 = !{!18117, !18118, !18124}
!18117 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !18115, file: !141, line: 245, baseType: !18092, size: 64)
!18118 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !18115, file: !141, line: 246, baseType: !18119, size: 32, offset: 64)
!18119 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !18120)
!18120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18121, size: 32)
!18121 = !DISubroutineType(types: !18122)
!18122 = !{null, !18123}
!18123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18115, size: 32)
!18124 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !18115, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!18125 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !18083, file: !163, line: 250, baseType: !18126, size: 288, offset: 384)
!18126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !18127)
!18127 = !{!18128, !18129, !18130, !18131, !18132, !18133, !18134, !18135, !18136}
!18128 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !18126, file: !214, line: 26, baseType: !108, size: 32)
!18129 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !18126, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!18130 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !18126, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!18131 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !18126, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!18132 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !18126, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!18133 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !18126, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!18134 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !18126, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!18135 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !18126, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!18136 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !18126, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!18137 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !18083, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!18138 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !18083, file: !163, line: 256, baseType: !2561, size: 64, offset: 704)
!18139 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !18083, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!18140 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !18083, file: !163, line: 300, baseType: !18141, size: 96, offset: 800)
!18141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !18142)
!18142 = !{!18143, !18144, !18145}
!18143 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !18141, file: !163, line: 153, baseType: !22, size: 32)
!18144 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !18141, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!18145 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !18141, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!18146 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !18083, file: !163, line: 325, baseType: !17990, size: 32, offset: 896)
!18147 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !18083, file: !163, line: 343, baseType: !18148, size: 64, offset: 928)
!18148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !18149)
!18149 = !{!18150, !18151}
!18150 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !18148, file: !214, line: 63, baseType: !108, size: 32)
!18151 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !18148, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!18152 = !{!18153}
!18153 = !DILocalVariable(name: "thread", arg: 1, scope: !18079, file: !2551, line: 116, type: !18082)
!18154 = !DILocation(line: 0, scope: !18079)
!18155 = !DILocation(line: 118, column: 10, scope: !18079)
!18156 = !DILocation(line: 118, column: 24, scope: !18079)
!18157 = !DILocation(line: 119, column: 1, scope: !18079)
!18158 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2551, file: !2551, line: 124, type: !18002, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18159)
!18159 = !{!18160, !18161, !18162, !18163}
!18160 = !DILocalVariable(name: "align", arg: 1, scope: !18158, file: !2551, line: 124, type: !132)
!18161 = !DILocalVariable(name: "size", arg: 2, scope: !18158, file: !2551, line: 124, type: !132)
!18162 = !DILocalVariable(name: "ret", scope: !18158, file: !2551, line: 126, type: !102)
!18163 = !DILocalVariable(name: "heap", scope: !18158, file: !2551, line: 127, type: !17990)
!18164 = !DILocation(line: 0, scope: !18158)
!18165 = !DILocation(line: 129, column: 6, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !18158, file: !2551, line: 129, column: 6)
!18167 = !DILocation(line: 129, column: 6, scope: !18158)
!18168 = !DILocation(line: 132, column: 10, scope: !18169)
!18169 = distinct !DILexicalBlock(scope: !18166, file: !2551, line: 131, column: 9)
!18170 = !DILocation(line: 132, column: 20, scope: !18169)
!18171 = !DILocation(line: 135, column: 11, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18158, file: !2551, line: 135, column: 6)
!18173 = !DILocation(line: 135, column: 6, scope: !18158)
!18174 = !DILocation(line: 136, column: 9, scope: !18175)
!18175 = distinct !DILexicalBlock(scope: !18172, file: !2551, line: 135, column: 20)
!18176 = !DILocation(line: 137, column: 2, scope: !18175)
!18177 = !DILocation(line: 0, scope: !18172)
!18178 = !DILocation(line: 141, column: 2, scope: !18158)
!18179 = distinct !DISubprogram(name: "main", scope: !18180, file: !18180, line: 27, type: !334, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3322, retainedNodes: !251)
!18180 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18181 = !DILocation(line: 38, column: 2, scope: !18182, inlinedAt: !18183)
!18182 = distinct !DISubprogram(name: "arch_nop", scope: !17956, file: !17956, line: 36, type: !334, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3322, retainedNodes: !251)
!18183 = distinct !DILocation(line: 31, column: 2, scope: !18179)
!18184 = !{i64 1950937}
!18185 = !DILocation(line: 36, column: 1, scope: !18179)
!18186 = distinct !DISubprogram(name: "boot_banner", scope: !18187, file: !18187, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3324, retainedNodes: !251)
!18187 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18188 = !DILocation(line: 34, column: 2, scope: !18186)
!18189 = !DILocation(line: 36, column: 1, scope: !18186)
!18190 = distinct !DISubprogram(name: "statics_init", scope: !2605, file: !2605, line: 21, type: !2611, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18191)
!18191 = !{!18192, !18193}
!18192 = !DILocalVariable(name: "unused", arg: 1, scope: !18190, file: !2605, line: 21, type: !2613)
!18193 = !DILocalVariable(name: "h", scope: !18194, file: !2605, line: 24, type: !18195)
!18194 = distinct !DILexicalBlock(scope: !18190, file: !2605, line: 24, column: 2)
!18195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18196, size: 32)
!18196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !18197)
!18197 = !{!18198, !18204, !18210}
!18198 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18196, file: !137, line: 5074, baseType: !18199, size: 96)
!18199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !18200)
!18200 = !{!18201, !18202, !18203}
!18201 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18199, file: !240, line: 57, baseType: !243, size: 32)
!18202 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18199, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!18203 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18199, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!18204 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18196, file: !137, line: 5075, baseType: !18205, size: 64, offset: 96)
!18205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !18206)
!18206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !18207)
!18207 = !{!18208}
!18208 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18206, file: !141, line: 232, baseType: !18209, size: 64)
!18209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2591)
!18210 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18196, file: !137, line: 5076, baseType: !18211, offset: 160)
!18211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!18212 = !DILocation(line: 0, scope: !18190)
!18213 = !DILocation(line: 0, scope: !18194)
!18214 = !DILocation(line: 24, column: 2, scope: !18194)
!18215 = !DILocation(line: 52, column: 2, scope: !18190)
!18216 = !DILocation(line: 49, column: 27, scope: !18217)
!18217 = distinct !DILexicalBlock(scope: !18218, file: !2605, line: 48, column: 3)
!18218 = distinct !DILexicalBlock(scope: !18219, file: !2605, line: 24, column: 36)
!18219 = distinct !DILexicalBlock(scope: !18194, file: !2605, line: 24, column: 2)
!18220 = !DILocation(line: 49, column: 45, scope: !18217)
!18221 = !DILocation(line: 49, column: 4, scope: !18217)
!18222 = !DILocation(line: 24, column: 2, scope: !18219)
!18223 = !DILocation(line: 24, column: 2, scope: !18224)
!18224 = distinct !DILexicalBlock(scope: !18219, file: !2605, line: 24, column: 2)
!18225 = distinct !{!18225, !18214, !18226}
!18226 = !DILocation(line: 51, column: 2, scope: !18194)
!18227 = distinct !DISubprogram(name: "k_heap_init", scope: !2605, file: !2605, line: 13, type: !18228, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18230)
!18228 = !DISubroutineType(types: !18229)
!18229 = !{null, !18195, !102, !132}
!18230 = !{!18231, !18232, !18233}
!18231 = !DILocalVariable(name: "h", arg: 1, scope: !18227, file: !2605, line: 13, type: !18195)
!18232 = !DILocalVariable(name: "mem", arg: 2, scope: !18227, file: !2605, line: 13, type: !102)
!18233 = !DILocalVariable(name: "bytes", arg: 3, scope: !18227, file: !2605, line: 13, type: !132)
!18234 = !DILocation(line: 0, scope: !18227)
!18235 = !DILocation(line: 15, column: 19, scope: !18227)
!18236 = !DILocation(line: 15, column: 2, scope: !18227)
!18237 = !DILocation(line: 16, column: 20, scope: !18227)
!18238 = !DILocation(line: 16, column: 2, scope: !18227)
!18239 = !DILocation(line: 19, column: 1, scope: !18227)
!18240 = distinct !DISubprogram(name: "z_waitq_init", scope: !14251, file: !14251, line: 47, type: !18241, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18244)
!18241 = !DISubroutineType(types: !18242)
!18242 = !{null, !18243}
!18243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18205, size: 32)
!18244 = !{!18245}
!18245 = !DILocalVariable(name: "w", arg: 1, scope: !18240, file: !14251, line: 47, type: !18243)
!18246 = !DILocation(line: 0, scope: !18240)
!18247 = !DILocation(line: 49, column: 21, scope: !18240)
!18248 = !DILocation(line: 49, column: 2, scope: !18240)
!18249 = !DILocation(line: 50, column: 1, scope: !18240)
!18250 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !18251, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18254)
!18251 = !DISubroutineType(types: !18252)
!18252 = !{null, !18253}
!18253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18209, size: 32)
!18254 = !{!18255}
!18255 = !DILocalVariable(name: "list", arg: 1, scope: !18250, file: !146, line: 197, type: !18253)
!18256 = !DILocation(line: 0, scope: !18250)
!18257 = !DILocation(line: 199, column: 8, scope: !18250)
!18258 = !DILocation(line: 199, column: 13, scope: !18250)
!18259 = !DILocation(line: 200, column: 8, scope: !18250)
!18260 = !DILocation(line: 200, column: 13, scope: !18250)
!18261 = !DILocation(line: 201, column: 1, scope: !18250)
!18262 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2605, file: !2605, line: 64, type: !18263, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18269)
!18263 = !DISubroutineType(types: !18264)
!18264 = !{!102, !18195, !132, !132, !18265}
!18265 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18266)
!18266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18267)
!18267 = !{!18268}
!18268 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18266, file: !105, line: 66, baseType: !104, size: 64)
!18269 = !{!18270, !18271, !18272, !18273, !18274, !18275, !18276, !18277, !18282}
!18270 = !DILocalVariable(name: "h", arg: 1, scope: !18262, file: !2605, line: 64, type: !18195)
!18271 = !DILocalVariable(name: "align", arg: 2, scope: !18262, file: !2605, line: 64, type: !132)
!18272 = !DILocalVariable(name: "bytes", arg: 3, scope: !18262, file: !2605, line: 64, type: !132)
!18273 = !DILocalVariable(name: "timeout", arg: 4, scope: !18262, file: !2605, line: 65, type: !18265)
!18274 = !DILocalVariable(name: "now", scope: !18262, file: !2605, line: 67, type: !106)
!18275 = !DILocalVariable(name: "end", scope: !18262, file: !2605, line: 67, type: !106)
!18276 = !DILocalVariable(name: "ret", scope: !18262, file: !2605, line: 68, type: !102)
!18277 = !DILocalVariable(name: "key", scope: !18262, file: !2605, line: 72, type: !18278)
!18278 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !18279)
!18279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !18280)
!18280 = !{!18281}
!18281 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18279, file: !250, line: 33, baseType: !103, size: 32)
!18282 = !DILocalVariable(name: "blocked_alloc", scope: !18262, file: !2605, line: 78, type: !131)
!18283 = !DILocation(line: 0, scope: !18262)
!18284 = !DILocation(line: 67, column: 21, scope: !18262)
!18285 = !DILocation(line: 70, column: 8, scope: !18262)
!18286 = !DILocation(line: 72, column: 41, scope: !18262)
!18287 = !DILocalVariable(name: "l", arg: 1, scope: !18288, file: !250, line: 136, type: !18291)
!18288 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !18289, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18292)
!18289 = !DISubroutineType(types: !18290)
!18290 = !{!18278, !18291}
!18291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18211, size: 32)
!18292 = !{!18287, !18293}
!18293 = !DILocalVariable(name: "k", scope: !18288, file: !250, line: 139, type: !18278)
!18294 = !DILocation(line: 0, scope: !18288, inlinedAt: !18295)
!18295 = distinct !DILocation(line: 72, column: 25, scope: !18262)
!18296 = !DILocation(line: 55, column: 2, scope: !18297, inlinedAt: !18301)
!18297 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6962, file: !6962, line: 42, type: !6963, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18298)
!18298 = !{!18299, !18300}
!18299 = !DILocalVariable(name: "key", scope: !18297, file: !6962, line: 44, type: !32)
!18300 = !DILocalVariable(name: "tmp", scope: !18297, file: !6962, line: 53, type: !32)
!18301 = distinct !DILocation(line: 145, column: 10, scope: !18288, inlinedAt: !18295)
!18302 = !{i64 1950080}
!18303 = !DILocation(line: 0, scope: !18297, inlinedAt: !18301)
!18304 = !DILocation(line: 81, column: 9, scope: !18305)
!18305 = distinct !DILexicalBlock(scope: !18262, file: !2605, line: 80, column: 22)
!18306 = !DILocation(line: 83, column: 9, scope: !18305)
!18307 = !DILocation(line: 85, column: 12, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18305, file: !2605, line: 84, column: 7)
!18309 = !DILocation(line: 85, column: 21, scope: !18308)
!18310 = !DILocation(line: 85, column: 30, scope: !18308)
!18311 = !DILocation(line: 85, column: 37, scope: !18308)
!18312 = !DILocation(line: 84, column: 7, scope: !18305)
!18313 = !DILocation(line: 99, column: 10, scope: !18305)
!18314 = !DILocation(line: 0, scope: !18288, inlinedAt: !18315)
!18315 = distinct !DILocation(line: 101, column: 9, scope: !18305)
!18316 = !DILocation(line: 55, column: 2, scope: !18297, inlinedAt: !18317)
!18317 = distinct !DILocation(line: 145, column: 10, scope: !18288, inlinedAt: !18315)
!18318 = !DILocation(line: 0, scope: !18297, inlinedAt: !18317)
!18319 = distinct !{!18319, !18320, !18321}
!18320 = !DILocation(line: 80, column: 2, scope: !18262)
!18321 = !DILocation(line: 102, column: 2, scope: !18262)
!18322 = !DILocalVariable(name: "key", arg: 2, scope: !18323, file: !250, line: 190, type: !18278)
!18323 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !18324, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18326)
!18324 = !DISubroutineType(types: !18325)
!18325 = !{null, !18291, !18278}
!18326 = !{!18327, !18322}
!18327 = !DILocalVariable(name: "l", arg: 1, scope: !18323, file: !250, line: 189, type: !18291)
!18328 = !DILocation(line: 0, scope: !18323, inlinedAt: !18329)
!18329 = distinct !DILocation(line: 106, column: 2, scope: !18262)
!18330 = !DILocalVariable(name: "key", arg: 1, scope: !18331, file: !6962, line: 84, type: !32)
!18331 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6962, file: !6962, line: 84, type: !6973, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18332)
!18332 = !{!18330}
!18333 = !DILocation(line: 0, scope: !18331, inlinedAt: !18334)
!18334 = distinct !DILocation(line: 215, column: 2, scope: !18323, inlinedAt: !18329)
!18335 = !DILocation(line: 95, column: 2, scope: !18331, inlinedAt: !18334)
!18336 = !{i64 1950897}
!18337 = !DILocation(line: 107, column: 2, scope: !18262)
!18338 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2605, file: !2605, line: 110, type: !18339, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18341)
!18339 = !DISubroutineType(types: !18340)
!18340 = !{!102, !18195, !132, !18265}
!18341 = !{!18342, !18343, !18344, !18345}
!18342 = !DILocalVariable(name: "h", arg: 1, scope: !18338, file: !2605, line: 110, type: !18195)
!18343 = !DILocalVariable(name: "bytes", arg: 2, scope: !18338, file: !2605, line: 110, type: !132)
!18344 = !DILocalVariable(name: "timeout", arg: 3, scope: !18338, file: !2605, line: 110, type: !18265)
!18345 = !DILocalVariable(name: "ret", scope: !18338, file: !2605, line: 114, type: !102)
!18346 = !DILocation(line: 0, scope: !18338)
!18347 = !DILocation(line: 114, column: 14, scope: !18338)
!18348 = !DILocation(line: 118, column: 2, scope: !18338)
!18349 = distinct !DISubprogram(name: "k_heap_free", scope: !2605, file: !2605, line: 121, type: !18350, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !18352)
!18350 = !DISubroutineType(types: !18351)
!18351 = !{null, !18195, !102}
!18352 = !{!18353, !18354, !18355}
!18353 = !DILocalVariable(name: "h", arg: 1, scope: !18349, file: !2605, line: 121, type: !18195)
!18354 = !DILocalVariable(name: "mem", arg: 2, scope: !18349, file: !2605, line: 121, type: !102)
!18355 = !DILocalVariable(name: "key", scope: !18349, file: !2605, line: 123, type: !18278)
!18356 = !DILocation(line: 0, scope: !18349)
!18357 = !DILocation(line: 0, scope: !18288, inlinedAt: !18358)
!18358 = distinct !DILocation(line: 123, column: 25, scope: !18349)
!18359 = !DILocation(line: 55, column: 2, scope: !18297, inlinedAt: !18360)
!18360 = distinct !DILocation(line: 145, column: 10, scope: !18288, inlinedAt: !18358)
!18361 = !DILocation(line: 0, scope: !18297, inlinedAt: !18360)
!18362 = !DILocation(line: 125, column: 20, scope: !18349)
!18363 = !DILocation(line: 125, column: 2, scope: !18349)
!18364 = !DILocation(line: 128, column: 60, scope: !18365)
!18365 = distinct !DILexicalBlock(scope: !18349, file: !2605, line: 128, column: 6)
!18366 = !DILocation(line: 128, column: 43, scope: !18365)
!18367 = !DILocation(line: 128, column: 68, scope: !18365)
!18368 = !DILocation(line: 128, column: 6, scope: !18349)
!18369 = !DILocation(line: 123, column: 41, scope: !18349)
!18370 = !DILocation(line: 129, column: 3, scope: !18371)
!18371 = distinct !DILexicalBlock(scope: !18365, file: !2605, line: 128, column: 74)
!18372 = !DILocation(line: 130, column: 2, scope: !18371)
!18373 = !DILocation(line: 0, scope: !18323, inlinedAt: !18374)
!18374 = distinct !DILocation(line: 131, column: 3, scope: !18375)
!18375 = distinct !DILexicalBlock(scope: !18365, file: !2605, line: 130, column: 9)
!18376 = !DILocation(line: 0, scope: !18331, inlinedAt: !18377)
!18377 = distinct !DILocation(line: 215, column: 2, scope: !18323, inlinedAt: !18374)
!18378 = !DILocation(line: 95, column: 2, scope: !18331, inlinedAt: !18377)
!18379 = !DILocation(line: 133, column: 1, scope: !18349)
