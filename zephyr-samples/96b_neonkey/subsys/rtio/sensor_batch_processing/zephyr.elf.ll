; ModuleID = 'build/96b_neonkey/sensor_batch_processing/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.rtio_executor_api = type { i32 (%struct.rtio*)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)* }
%struct.rtio = type { %struct.rtio_executor*, i32, %struct.rtio_sq*, %struct.rtio_cq* }
%struct.rtio_executor = type { %struct.rtio_executor_api* }
%struct.rtio_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_sqe] }
%struct.rtio_spsc = type { i32, i32, i32, i32, i32 }
%struct.rtio_sqe = type { i8, i8, i16, %struct.rtio_iodev*, i8*, %union.anon.3 }
%struct.rtio_iodev = type { %struct.rtio_iodev_api*, %struct.rtio_iodev_sq*, i8* }
%struct.rtio_iodev_api = type { void (%struct.rtio_sqe*, %struct.rtio*)* }
%struct.rtio_iodev_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_iodev_sqe] }
%struct.rtio_iodev_sqe = type { %struct.rtio_sqe*, %struct.rtio* }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i8* }
%struct.rtio_cq = type { %struct.rtio_spsc, [0 x %struct.anon.4] }
%struct.rtio_simple_executor = type { %struct.rtio_executor }
%struct.rtio_spsc__sq_ez_io = type { %struct.rtio_spsc, [8 x %struct.rtio_sqe] }
%struct.rtio_spsc__cq_ez_io = type { %struct.rtio_spsc, [8 x %struct.anon.4] }
%struct.rtio_spsc_vnd_sensor_iodev_sq_0 = type { %struct.rtio_spsc, [8 x %struct.rtio_iodev_sqe] }
%struct.vnd_sensor_config = type { i32, i32 }
%struct.device_state = type { i8, i8 }
%struct.vnd_sensor_data = type { %struct.rtio_iodev, %struct.k_timer, %struct.device*, %struct.k_msgq, i32 }
%struct.k_timer = type { %struct._timeout, %struct._wait_q_t, void (%struct.k_timer*)*, void (%struct.k_timer*)*, %struct.k_timeout_t, i32, i8* }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._wait_q_t = type { %struct._dnode }
%struct.k_timeout_t = type { i64 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon }
%union.anon = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon, i32*, i32, %struct.vnd_sensor_config }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.vnd_sensor_config*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.vnd_sensor_config*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.vnd_sensor_config }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %struct.k_timeout_t, %struct.conversion }
%struct.conversion = type { [3 x i8], i8, %union.anon, %union.anon }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, i32 }
%struct.rtio_concurrent_executor = type { %struct.rtio_executor, %struct.k_spinlock, i16, i16, i16, %struct.rtio_sqe*, %struct.rtio_sqe*, i8*, %struct.rtio_sqe** }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %union.anon*, %union.anon* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231617 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231597 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231587 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231687 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231677 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231667 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231657 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231647 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231637 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231627 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231607 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [48 x i8*] [i8* bitcast (%struct.rtio* @ez_io to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.device* @__device_dts_ord_13 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_13 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_vnd_sensor to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_simple to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_concurrent to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@z_rtio_simple_api = internal constant %struct.rtio_executor_api { i32 (%struct.rtio*)* @rtio_simple_submit, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_ok, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_err }, align 4, !dbg !235
@simple_exec = dso_local global %struct.rtio_simple_executor { %struct.rtio_executor { %struct.rtio_executor_api* @z_rtio_simple_api } }, align 4, !dbg !117
@_sq_ez_io = internal global %struct.rtio_spsc__sq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_sqe] zeroinitializer }, align 4, !dbg !237
@_cq_ez_io = internal global %struct.rtio_spsc__cq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.anon.4] zeroinitializer }, align 4, !dbg !245
@ez_io = dso_local global %struct.rtio { %struct.rtio_executor* getelementptr inbounds (%struct.rtio_simple_executor, %struct.rtio_simple_executor* @simple_exec, i32 0, i32 0), i32 0, %struct.rtio_sq* bitcast (%struct.rtio_spsc__sq_ez_io* @_sq_ez_io to %struct.rtio_sq*), %struct.rtio_cq* bitcast (%struct.rtio_spsc__cq_ez_io* @_cq_ez_io to %struct.rtio_cq*) }, section "._rtio.static.ez_io", align 4, !dbg !227
@bufs = internal global [8 x [16 x i8]] zeroinitializer, align 1, !dbg !229
@.str.1 = private unnamed_addr constant [33 x i8] c"%c: Submitting %d read requests\0A\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"%c: No completion events available\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"%c: Consumed completion event %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"%c: Operation failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"%c: Start processing %d samples\0A\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Sample data:\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"%c: Finished processing %d samples\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"vnd_sensor\00", align 1
@log_const_vnd_sensor = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8 4 }, section ".log_const_vnd_sensor", align 4, !dbg !258
@vnd_sensor_iodev_sq_0 = dso_local global %struct.rtio_spsc_vnd_sensor_iodev_sq_0 { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_iodev_sqe] zeroinitializer }, align 4, !dbg !451
@__devicehdl_dts_ord_13 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !494
@.str.1.12 = private unnamed_addr constant [9 x i8] c"sensor@0\00", align 1
@vnd_sensor_config_0 = internal constant %struct.vnd_sensor_config { i32 100, i32 16 }, align 4, !dbg !478
@__devstate_dts_ord_13 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !476
@vnd_sensor_data_0 = internal global %struct.vnd_sensor_data { %struct.rtio_iodev { %struct.rtio_iodev_api* @vnd_sensor_iodev_api, %struct.rtio_iodev_sq* bitcast (%struct.rtio_spsc_vnd_sensor_iodev_sq_0* @vnd_sensor_iodev_sq_0 to %struct.rtio_iodev_sq*), i8* null }, %struct.k_timer zeroinitializer, %struct.device* null, %struct.k_msgq zeroinitializer, i32 0 }, align 8, !dbg !485
@__device_dts_ord_13 = dso_local constant %struct.device { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.12, i32 0, i32 0), i8* bitcast (%struct.vnd_sensor_config* @vnd_sensor_config_0 to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_13, i8* bitcast (%struct.vnd_sensor_data* @vnd_sensor_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_13, i32 0, i32 0) }, section ".z_device_POST_KERNEL50_", align 4, !dbg !463
@__init___device_dts_ord_13 = internal constant %struct.init_entry { i32 (%struct.device*)* @vnd_sensor_init, %struct.device* @__device_dts_ord_13 }, section ".z_init_POST_KERNEL50_", align 4, !dbg !465
@vnd_sensor_iodev_api = internal constant %struct.rtio_iodev_api { void (%struct.rtio_sqe*, %struct.rtio*)* @vnd_sensor_iodev_submit }, align 4, !dbg !487
@.str.2.16 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not put a msg\0A\00", align 1
@.str.3.19 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not get a msg\0A\00", align 1
@.str.4.20 = private unnamed_addr constant [20 x i8] c"%c: %s: Invalid op\0A\00", align 1
@.str.5.21 = private unnamed_addr constant [32 x i8] c"%c: %s: buf_len = %d, buf = %p\0A\00", align 1
@.str.6.22 = private unnamed_addr constant [29 x i8] c"%c: %s: Buffer is too small\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !528
@.str.1.25 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !549
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !559
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !602
@.str.36 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.38 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.39 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.37 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.41 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.45 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.46 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.60 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.55 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.56 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.57 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.59 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.53 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.50 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.49 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !631
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon { i32 101384192 } }], align 4, !dbg !772
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !637
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !781
@.str.72 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !817
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), %union.anon { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.85, i32 0, i32 0), %union.anon { i32 285933600 } }], align 4, !dbg !827
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !832
@.str.84 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.85 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"rtio_executor_simple\00", align 1
@log_const_rtio_executor_simple = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_simple", align 4, !dbg !852
@.str.96 = private unnamed_addr constant [25 x i8] c"rtio_executor_concurrent\00", align 1
@log_const_rtio_executor_concurrent = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_concurrent", align 4, !dbg !863
@.str.1.98 = private unnamed_addr constant [12 x i8] c"%c: submit\0A\00", align 1
@.str.2.100 = private unnamed_addr constant [26 x i8] c"%c: head SQE in chain %p\0A\00", align 1
@.str.3.101 = private unnamed_addr constant [24 x i8] c"%c: setting up task %d\0A\00", align 1
@.str.4.102 = private unnamed_addr constant [22 x i8] c"%c: submitted sqe %p\0A\00", align 1
@.str.5.103 = private unnamed_addr constant [26 x i8] c"%c: tail SQE in chain %p\0A\00", align 1
@.str.6.104 = private unnamed_addr constant [32 x i8] c"%c: resuming suspended task %d\0A\00", align 1
@.str.7.107 = private unnamed_addr constant [29 x i8] c"%c: sweeping oldest task %d\0A\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !980
@__devicehdl_dts_ord_42 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !505
@.str.110 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1111
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1094
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1067
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1083
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1113
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1126
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1128
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1130
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1132
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1134
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1136
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1138
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1140
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1142
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1144
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !499
@.str.112 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1149
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1246
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1235
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1287
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !524
@.str.121 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.vnd_sensor_config { i32 48, i32 1 } }, align 4, !dbg !1353
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1629
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1599
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1585
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1530
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !522
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.vnd_sensor_config { i32 48, i32 2 } }, align 4, !dbg !1631
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1603
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1601
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1547
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !520
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.vnd_sensor_config { i32 48, i32 4 } }, align 4, !dbg !1644
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1607
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1605
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1553
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !518
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.vnd_sensor_config { i32 48, i32 8 } }, align 4, !dbg !1646
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1611
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1609
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1559
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !516
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.vnd_sensor_config { i32 48, i32 16 } }, align 4, !dbg !1648
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1615
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1613
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1565
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !514
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct.vnd_sensor_config { i32 48, i32 32 } }, align 4, !dbg !1650
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1619
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1617
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1571
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !512
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct.vnd_sensor_config { i32 48, i32 64 } }, align 4, !dbg !1652
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1623
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1621
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1577
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !510
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct.vnd_sensor_config { i32 48, i32 128 } }, align 4, !dbg !1654
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1627
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1625
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1583
@.str.132 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1656
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !526
@.str.1.135 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1810
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1865
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1808
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1867
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.135, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1799
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1801
@pclken_0 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 68, i32 16 }], align 4, !dbg !1854
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1857
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1859
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 295, i32 512 }, %struct.vnd_sensor_config { i32 327, i32 0 }], align 4, !dbg !1862
@.str.2.137 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.140 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.142 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.143 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1219
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1878
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1985
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1987
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1983
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1954
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1989
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1528
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1545
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1551
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1557
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1563
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1569
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1575
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1581
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2079
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2121
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2124
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2130
@.str.175 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.179 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.180 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.181 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.185 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.186 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.187 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.188 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.189 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.184 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.183 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.185, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.186, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.187, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.188, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.189, i32 0, i32 0)], align 4
@.str.191 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2137
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2360
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2346
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2355
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2367
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2372
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.200 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.206, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.207, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.208, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.204, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.211, i32 0, i32 0)], align 4, !dbg !2402
@.str.205 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.206 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.207 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.208 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.209 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.210 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.204 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.211 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2514
@.str.8.203 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2527
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2635
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2638
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2640
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2365
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2357
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2642
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2678
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2224
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2676
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2681
@.str.284 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3387 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3391, !srcloc !3392
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3393, !srcloc !3394
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3395, !srcloc !3396
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3397, !srcloc !3398
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3403, !srcloc !3404
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3405, !srcloc !3406
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3407, !srcloc !3408
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3409, !srcloc !3410
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3411, !srcloc !3412
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3413, !srcloc !3414
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3445, !srcloc !3448
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3453, !srcloc !3454
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3455, !srcloc !3456
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3457, !srcloc !3458
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3459, !srcloc !3460
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3461, !srcloc !3462
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3463, !srcloc !3464
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3465, !srcloc !3466
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3467, !srcloc !3468
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3469, !srcloc !3470
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3471, !srcloc !3472
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3473, !srcloc !3474
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3475, !srcloc !3476
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3477, !srcloc !3478
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3479, !srcloc !3480
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3481, !srcloc !3482
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3483, !srcloc !3484
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3485, !srcloc !3486
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3487, !srcloc !3488
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3489, !srcloc !3490
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3491, !srcloc !3492
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3493, !srcloc !3494
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3495, !srcloc !3496
  ret void, !dbg !3497
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3500 {
  %1 = alloca [4 x i8*], align 4
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_13, metadata !3502, metadata !DIExpression()), !dbg !3554
  %2 = load %struct.rtio_iodev*, %struct.rtio_iodev** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_13, i32 0, i32 4) to %struct.rtio_iodev**), align 4, !dbg !3555
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %2, metadata !3519, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata i32 0, metadata !3521, metadata !DIExpression()), !dbg !3556
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3557
  br label %8, !dbg !3558

4:                                                ; preds = %46
  %5 = bitcast [4 x i8*]* %1 to i8*
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #24, !dbg !3554
  %7 = zext i8 %6 to i32
  br label %50, !dbg !3559

8:                                                ; preds = %0, %46
  %9 = phi %struct.rtio_sq* [ %3, %0 ], [ %47, %46 ], !dbg !3557
  %10 = phi i32 [ 0, %0 ], [ %48, %46 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !3521, metadata !DIExpression()), !dbg !3556
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !3557
  %12 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %11) #24, !dbg !3557
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3557
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 0, !dbg !3557
  %15 = load i32, i32* %14, align 4, !dbg !3557
  %16 = add i32 %15, %12, !dbg !3557
  call void @llvm.dbg.value(metadata i32 %16, metadata !3527, metadata !DIExpression()), !dbg !3560
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !3557
  %18 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %17) #24, !dbg !3557
  %19 = sub i32 %16, %18, !dbg !3557
  %20 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3557
  %21 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 4, !dbg !3557
  %22 = load i32, i32* %21, align 4, !dbg !3557
  %23 = add i32 %22, 1, !dbg !3557
  %24 = icmp ult i32 %19, %23, !dbg !3557
  call void @llvm.dbg.value(metadata i1 %24, metadata !3529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3560
  br i1 %24, label %25, label %34, !dbg !3557

25:                                               ; preds = %8
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 0, !dbg !3561
  %27 = load i32, i32* %26, align 4, !dbg !3561
  %28 = add i32 %27, 1, !dbg !3561
  store i32 %28, i32* %26, align 4, !dbg !3561
  %29 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3557
  %30 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 0, i32 4, !dbg !3557
  %31 = load i32, i32* %30, align 4, !dbg !3557
  %32 = and i32 %31, %16, !dbg !3557
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 1, i32 %32, !dbg !3557
  br label %34, !dbg !3557

34:                                               ; preds = %8, %25
  %35 = phi %struct.rtio_sqe* [ %33, %25 ], [ null, %8 ], !dbg !3557
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !3523, metadata !DIExpression()), !dbg !3564
  %36 = getelementptr inbounds [8 x [16 x i8]], [8 x [16 x i8]]* @bufs, i32 0, i32 %10, i32 0, !dbg !3565
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %35, %struct.rtio_iodev* noundef %2, i8* noundef nonnull %36, i8* noundef nonnull %36) #24, !dbg !3566
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3567
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 0, !dbg !3567
  %39 = load i32, i32* %38, align 4, !dbg !3567
  %40 = icmp eq i32 %39, 0, !dbg !3567
  br i1 %40, label %46, label %41, !dbg !3570

41:                                               ; preds = %34
  %42 = add i32 %39, -1, !dbg !3571
  store i32 %42, i32* %38, align 4, !dbg !3571
  %43 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3571
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %43, i32 0, i32 0, i32 2, !dbg !3571
  tail call fastcc void @atomic_add(i32* noundef nonnull %44, i32 noundef 1) #24, !dbg !3571
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3557
  br label %46, !dbg !3571

46:                                               ; preds = %41, %34
  %47 = phi %struct.rtio_sq* [ %45, %41 ], [ %37, %34 ]
  %48 = add nuw nsw i32 %10, 1, !dbg !3573
  call void @llvm.dbg.value(metadata i32 %48, metadata !3521, metadata !DIExpression()), !dbg !3556
  %49 = icmp eq i32 %48, 8, !dbg !3574
  br i1 %49, label %4, label %8, !dbg !3558, !llvm.loop !3575

50:                                               ; preds = %4, %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3530, metadata !DIExpression()), !dbg !3577
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3578
  call void @llvm.dbg.declare(metadata [4 x i8*]* %1, metadata !3532, metadata !DIExpression()), !dbg !3579
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3580
  tail call fastcc void @rtio_submit() #24, !dbg !3585
  call void @llvm.dbg.value(metadata i32 0, metadata !3530, metadata !DIExpression()), !dbg !3577
  br label %51, !dbg !3586

51:                                               ; preds = %50, %97
  %52 = phi i32 [ 0, %50 ], [ %98, %97 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !3530, metadata !DIExpression()), !dbg !3577
  %53 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3587
  %54 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %53, i32 0, i32 0, i32 3, !dbg !3587
  %55 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %54) #24, !dbg !3587
  %56 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3587
  %57 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 1, !dbg !3587
  %58 = load i32, i32* %57, align 4, !dbg !3587
  %59 = add i32 %58, %55, !dbg !3587
  call void @llvm.dbg.value(metadata i32 %59, metadata !3537, metadata !DIExpression()), !dbg !3588
  %60 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 2, !dbg !3587
  %61 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %60) #24, !dbg !3587
  %62 = icmp eq i32 %59, %61, !dbg !3587
  call void @llvm.dbg.value(metadata i1 %62, metadata !3539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3588
  br i1 %62, label %63, label %66, !dbg !3587

63:                                               ; preds = %51
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3589
  %64 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3590
  %65 = zext i8 %64 to i32, !dbg !3590
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i32 0, i32 0), i32 noundef %65) #25, !dbg !3590
  tail call fastcc void @k_msleep(i32 noundef 100) #24, !dbg !3597
  br label %97, !dbg !3598, !llvm.loop !3599

66:                                               ; preds = %51
  %67 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3601
  %68 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %67, i32 0, i32 0, i32 1, !dbg !3601
  %69 = load i32, i32* %68, align 4, !dbg !3601
  %70 = add i32 %69, 1, !dbg !3601
  store i32 %70, i32* %68, align 4, !dbg !3601
  %71 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3587
  %72 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 0, i32 4, !dbg !3587
  %73 = load i32, i32* %72, align 4, !dbg !3587
  %74 = and i32 %73, %59, !dbg !3587
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3589
  %75 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3604
  %76 = zext i8 %75 to i32, !dbg !3604
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 noundef %76, i32 noundef %52) #25, !dbg !3604
  %77 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 0, !dbg !3609
  %78 = load i32, i32* %77, align 4, !dbg !3609
  %79 = icmp slt i32 %78, 0, !dbg !3611
  br i1 %79, label %80, label %83, !dbg !3612

80:                                               ; preds = %66
  %81 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #24, !dbg !3613
  %82 = zext i8 %81 to i32, !dbg !3613
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i32 noundef %82) #25, !dbg !3613
  br label %83, !dbg !3619

83:                                               ; preds = %80, %66
  %84 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 1, !dbg !3620
  %85 = load i8*, i8** %84, align 4, !dbg !3620
  %86 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %52, !dbg !3621
  store i8* %85, i8** %86, align 4, !dbg !3622
  %87 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3623
  %88 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %87, i32 0, i32 0, i32 1, !dbg !3623
  %89 = load i32, i32* %88, align 4, !dbg !3623
  %90 = icmp eq i32 %89, 0, !dbg !3623
  br i1 %90, label %95, label %91, !dbg !3626

91:                                               ; preds = %83
  %92 = add i32 %89, -1, !dbg !3627
  store i32 %92, i32* %88, align 4, !dbg !3627
  %93 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3627
  %94 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %93, i32 0, i32 0, i32 3, !dbg !3627
  tail call fastcc void @atomic_add(i32* noundef nonnull %94, i32 noundef 1) #24, !dbg !3627
  br label %95, !dbg !3627

95:                                               ; preds = %91, %83
  %96 = add nsw i32 %52, 1, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %96, metadata !3530, metadata !DIExpression()), !dbg !3577
  br label %97, !dbg !3600

97:                                               ; preds = %95, %63
  %98 = phi i32 [ %52, %63 ], [ %96, %95 ], !dbg !3577
  call void @llvm.dbg.value(metadata i32 %98, metadata !3530, metadata !DIExpression()), !dbg !3577
  %99 = icmp slt i32 %98, 4, !dbg !3630
  br i1 %99, label %51, label %100, !dbg !3586

100:                                              ; preds = %97
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3631
  call void @llvm.dbg.value(metadata i32 0, metadata !3530, metadata !DIExpression()), !dbg !3577
  %101 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3554
  %102 = zext i8 %101 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !3530, metadata !DIExpression()), !dbg !3577
  br label %103, !dbg !3636

103:                                              ; preds = %100, %103
  %104 = phi i32 [ 0, %100 ], [ %107, %103 ]
  call void @llvm.dbg.value(metadata i32 %104, metadata !3530, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), metadata !3540, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i1 false, metadata !3545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3637
  call void @llvm.dbg.value(metadata i32 0, metadata !3546, metadata !DIExpression()), !dbg !3637
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 noundef %102, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0)) #25, !dbg !3638
  %105 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %104, !dbg !3642
  %106 = load i8*, i8** %105, align 4, !dbg !3642
  tail call void @z_log_minimal_hexdump_print(i32 noundef 4, i8* noundef %106, i32 noundef 16) #25, !dbg !3642
  %107 = add nuw nsw i32 %104, 1, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %107, metadata !3530, metadata !DIExpression()), !dbg !3577
  %108 = icmp eq i32 %107, 4, !dbg !3644
  br i1 %108, label %109, label %103, !dbg !3636, !llvm.loop !3645

109:                                              ; preds = %103
  tail call fastcc void @k_msleep(i32 noundef 300) #24, !dbg !3647
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3648
  call void @llvm.dbg.value(metadata i32 0, metadata !3530, metadata !DIExpression()), !dbg !3577
  %110 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3653
  br label %111, !dbg !3654

111:                                              ; preds = %109, %150
  %112 = phi %struct.rtio_sq* [ %110, %109 ], [ %151, %150 ], !dbg !3653
  %113 = phi i32 [ 0, %109 ], [ %152, %150 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !3530, metadata !DIExpression()), !dbg !3577
  %114 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %112, i32 0, i32 0, i32 2, !dbg !3653
  %115 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %114) #24, !dbg !3653
  %116 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3653
  %117 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 0, !dbg !3653
  %118 = load i32, i32* %117, align 4, !dbg !3653
  %119 = add i32 %118, %115, !dbg !3653
  call void @llvm.dbg.value(metadata i32 %119, metadata !3551, metadata !DIExpression()), !dbg !3655
  %120 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 3, !dbg !3653
  %121 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %120) #24, !dbg !3653
  %122 = sub i32 %119, %121, !dbg !3653
  %123 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3653
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 4, !dbg !3653
  %125 = load i32, i32* %124, align 4, !dbg !3653
  %126 = add i32 %125, 1, !dbg !3653
  %127 = icmp ult i32 %122, %126, !dbg !3653
  call void @llvm.dbg.value(metadata i1 %127, metadata !3553, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3655
  br i1 %127, label %128, label %137, !dbg !3653

128:                                              ; preds = %111
  %129 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 0, !dbg !3656
  %130 = load i32, i32* %129, align 4, !dbg !3656
  %131 = add i32 %130, 1, !dbg !3656
  store i32 %131, i32* %129, align 4, !dbg !3656
  %132 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3653
  %133 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 0, i32 4, !dbg !3653
  %134 = load i32, i32* %133, align 4, !dbg !3653
  %135 = and i32 %134, %119, !dbg !3653
  %136 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 1, i32 %135, !dbg !3653
  br label %137, !dbg !3653

137:                                              ; preds = %111, %128
  %138 = phi %struct.rtio_sqe* [ %136, %128 ], [ null, %111 ], !dbg !3653
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %138, metadata !3547, metadata !DIExpression()), !dbg !3659
  %139 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %113, !dbg !3660
  %140 = load i8*, i8** %139, align 4, !dbg !3660
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %138, %struct.rtio_iodev* noundef %2, i8* noundef %140, i8* noundef %140) #24, !dbg !3661
  %141 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3662
  %142 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %141, i32 0, i32 0, i32 0, !dbg !3662
  %143 = load i32, i32* %142, align 4, !dbg !3662
  %144 = icmp eq i32 %143, 0, !dbg !3662
  br i1 %144, label %150, label %145, !dbg !3665

145:                                              ; preds = %137
  %146 = add i32 %143, -1, !dbg !3666
  store i32 %146, i32* %142, align 4, !dbg !3666
  %147 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3666
  %148 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %147, i32 0, i32 0, i32 2, !dbg !3666
  tail call fastcc void @atomic_add(i32* noundef nonnull %148, i32 noundef 1) #24, !dbg !3666
  %149 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3653
  br label %150, !dbg !3666

150:                                              ; preds = %145, %137
  %151 = phi %struct.rtio_sq* [ %149, %145 ], [ %141, %137 ]
  %152 = add nuw nsw i32 %113, 1, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %152, metadata !3530, metadata !DIExpression()), !dbg !3577
  %153 = icmp eq i32 %152, 4, !dbg !3669
  br i1 %153, label %154, label %111, !dbg !3654, !llvm.loop !3670

154:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3672
  br label %50, !dbg !3559, !llvm.loop !3673
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !3674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3679, metadata !DIExpression()), !dbg !3680
  %2 = add i32 %0, -1, !dbg !3681
  %3 = icmp ult i32 %2, 4, !dbg !3681
  %4 = shl i32 %2, 3, !dbg !3681
  %5 = lshr i32 1145657157, %4, !dbg !3681
  %6 = trunc i32 %5 to i8, !dbg !3681
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3681
  ret i8 %7, !dbg !3682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3683 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3691, metadata !DIExpression()), !dbg !3692
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3693
  ret i32 %2, !dbg !3694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* nocapture noundef writeonly %0, %struct.rtio_iodev* noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #6 !dbg !3695 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3699, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %1, metadata !3700, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata i8 -1, metadata !3701, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata i8* %2, metadata !3702, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata i32 16, metadata !3703, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata i8* %3, metadata !3704, metadata !DIExpression()), !dbg !3705
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 0, !dbg !3706
  store i8 1, i8* %5, align 4, !dbg !3707
  %6 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 1, !dbg !3708
  store i8 -1, i8* %6, align 1, !dbg !3709
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3710
  store %struct.rtio_iodev* %1, %struct.rtio_iodev** %7, align 4, !dbg !3711
  %8 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 0, !dbg !3712
  store i32 16, i32* %8, align 4, !dbg !3713
  %9 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 1, !dbg !3714
  store i8* %2, i8** %9, align 4, !dbg !3715
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 4, !dbg !3716
  store i8* %3, i8** %10, align 4, !dbg !3717
  ret void, !dbg !3718
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3719 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3724, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i32 %1, metadata !3725, metadata !DIExpression()), !dbg !3726
  %3 = atomicrmw add i32* %0, i32 %1 seq_cst, align 4, !dbg !3727
  ret void, !dbg !3728
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_submit() unnamed_addr #1 !dbg !3729 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3734, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32 4, metadata !3735, metadata !DIExpression()), !dbg !3736
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3737, !srcloc !3739
  tail call fastcc void @z_impl_rtio_submit() #24, !dbg !3740
  ret void, !dbg !3741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3746, metadata !DIExpression()), !dbg !3747
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3748
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3749
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3749
  ret void, !dbg !3750
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3751 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3756, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata i64 %0, metadata !3758, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i32 1000, metadata !3763, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i32 10000, metadata !3764, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i8 1, metadata !3765, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i8 0, metadata !3766, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i8 1, metadata !3767, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i8 0, metadata !3768, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i8 1, metadata !3769, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i8 0, metadata !3770, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i64 0, metadata !3771, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i64 0, metadata !3771, metadata !DIExpression()), !dbg !3775
  %2 = mul i64 %0, 10, !dbg !3777
  ret i64 %2, !dbg !3783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3784 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3793, metadata !DIExpression()), !dbg !3794
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3795, !srcloc !3797
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3798
  ret void, !dbg !3799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_rtio_submit() unnamed_addr #1 !dbg !3800 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3802, metadata !DIExpression()), !dbg !3809
  call void @llvm.dbg.value(metadata i32 4, metadata !3803, metadata !DIExpression()), !dbg !3809
  %1 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3810
  %2 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %1, i32 0, i32 0, i32 0, !dbg !3810
  %3 = load i32, i32* %2, align 4, !dbg !3810
  %4 = icmp eq i32 %3, 0, !dbg !3810
  br i1 %4, label %8, label %5, !dbg !3811

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 %3, metadata !3805, metadata !DIExpression()), !dbg !3812
  store i32 0, i32* %2, align 4, !dbg !3813
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3813
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !3813
  tail call fastcc void @atomic_add(i32* noundef nonnull %7, i32 noundef %3) #24, !dbg !3813
  br label %8, !dbg !3813

8:                                                ; preds = %5, %0
  %9 = load %struct.rtio_executor*, %struct.rtio_executor** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 0), align 4, !dbg !3814
  %10 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %9, i32 0, i32 0, !dbg !3815
  %11 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %10, align 4, !dbg !3815
  %12 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %11, i32 0, i32 0, !dbg !3816
  %13 = load i32 (%struct.rtio*)*, i32 (%struct.rtio*)** %12, align 4, !dbg !3816
  %14 = tail call i32 %13(%struct.rtio* noundef nonnull @ez_io) #25, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %14, metadata !3804, metadata !DIExpression()), !dbg !3809
  %15 = icmp eq i32 %14, 0, !dbg !3818
  br i1 %15, label %16, label %38, !dbg !3820

16:                                               ; preds = %8
  %17 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3821
  %18 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 2, !dbg !3821
  %19 = load i32, i32* %18, align 4, !dbg !3821
  %20 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 3, !dbg !3821
  %21 = load i32, i32* %20, align 4, !dbg !3821
  %22 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 1, !dbg !3821
  %23 = load i32, i32* %22, align 4, !dbg !3821
  %24 = add i32 %21, %23, !dbg !3821
  %25 = sub i32 %19, %24, !dbg !3821
  %26 = icmp ult i32 %25, 4, !dbg !3823
  br i1 %26, label %27, label %38, !dbg !3824

27:                                               ; preds = %16, %27
  tail call fastcc void @k_yield() #24, !dbg !3825
  %28 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3821
  %29 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 2, !dbg !3821
  %30 = load i32, i32* %29, align 4, !dbg !3821
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 3, !dbg !3821
  %32 = load i32, i32* %31, align 4, !dbg !3821
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 1, !dbg !3821
  %34 = load i32, i32* %33, align 4, !dbg !3821
  %35 = add i32 %32, %34, !dbg !3821
  %36 = sub i32 %30, %35, !dbg !3821
  %37 = icmp ult i32 %36, 4, !dbg !3823
  br i1 %37, label %27, label %38, !dbg !3824, !llvm.loop !3827

38:                                               ; preds = %27, %16, %8
  ret void, !dbg !3829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !3830 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3831, !srcloc !3833
  tail call void @z_impl_k_yield() #25, !dbg !3834
  ret void, !dbg !3835
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #1 !dbg !3836 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3838, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !3839, metadata !DIExpression()), !dbg !3847
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3848
  %4 = bitcast %struct.rtio_iodev** %3 to %struct.vnd_sensor_data**, !dbg !3848
  %5 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %4, align 4, !dbg !3848
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %5, metadata !3840, metadata !DIExpression()), !dbg !3847
  %6 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 2, !dbg !3849
  %7 = load %struct.device*, %struct.device** %6, align 8, !dbg !3849
  call void @llvm.dbg.value(metadata %struct.device* %7, metadata !3841, metadata !DIExpression()), !dbg !3847
  %8 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 0, i32 1, !dbg !3850
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3850
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !3850
  %11 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %10) #24, !dbg !3850
  %12 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3850
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 0, !dbg !3850
  %14 = load i32, i32* %13, align 4, !dbg !3850
  %15 = add i32 %14, %11, !dbg !3850
  call void @llvm.dbg.value(metadata i32 %15, metadata !3844, metadata !DIExpression()), !dbg !3851
  %16 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 3, !dbg !3850
  %17 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %16) #24, !dbg !3850
  %18 = sub i32 %15, %17, !dbg !3850
  %19 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3850
  %20 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 4, !dbg !3850
  %21 = load i32, i32* %20, align 4, !dbg !3850
  %22 = add i32 %21, 1, !dbg !3850
  %23 = icmp ult i32 %18, %22, !dbg !3850
  call void @llvm.dbg.value(metadata i1 %23, metadata !3846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3851
  br i1 %23, label %24, label %42, !dbg !3850

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 0, !dbg !3852
  %26 = load i32, i32* %25, align 4, !dbg !3852
  %27 = add i32 %26, 1, !dbg !3852
  store i32 %27, i32* %25, align 4, !dbg !3852
  %28 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3850
  %29 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 0, i32 4, !dbg !3850
  %30 = load i32, i32* %29, align 4, !dbg !3850
  %31 = and i32 %30, %15, !dbg !3850
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3847
  %32 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 0, !dbg !3855
  store %struct.rtio_sqe* %0, %struct.rtio_sqe** %32, align 4, !dbg !3858
  %33 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 1, !dbg !3859
  store %struct.rtio* %1, %struct.rtio** %33, align 4, !dbg !3860
  %34 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3861
  %35 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %34, i32 0, i32 0, i32 0, !dbg !3861
  %36 = load i32, i32* %35, align 4, !dbg !3861
  %37 = icmp eq i32 %36, 0, !dbg !3861
  br i1 %37, label %47, label %38, !dbg !3864

38:                                               ; preds = %24
  %39 = add i32 %36, -1, !dbg !3865
  store i32 %39, i32* %35, align 4, !dbg !3865
  %40 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3865
  %41 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %40, i32 0, i32 0, i32 2, !dbg !3865
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %41) #24, !dbg !3865
  br label %47, !dbg !3865

42:                                               ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3847
  %43 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !3867
  %44 = zext i8 %43 to i32, !dbg !3867
  %45 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !3867
  %46 = load i8*, i8** %45, align 4, !dbg !3867
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef %44, i8* noundef %46) #25, !dbg !3867
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %1, %struct.rtio_sqe* noundef nonnull %0, i32 noundef -11) #24, !dbg !3873
  br label %47

47:                                               ; preds = %24, %38, %42
  ret void, !dbg !3874
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.13(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3875 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3877, metadata !DIExpression()), !dbg !3878
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3879
  ret i32 %2, !dbg !3880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.14(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3881 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3883, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.value(metadata i32 1, metadata !3884, metadata !DIExpression()), !dbg !3885
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !3886
  ret void, !dbg !3887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef %0) unnamed_addr #4 !dbg !3888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3890, metadata !DIExpression()), !dbg !3891
  %2 = add i32 %0, -1, !dbg !3892
  %3 = icmp ult i32 %2, 4, !dbg !3892
  %4 = shl i32 %2, 3, !dbg !3892
  %5 = lshr i32 1145657157, %4, !dbg !3892
  %6 = trunc i32 %5 to i8, !dbg !3892
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3892
  ret i8 %7, !dbg !3893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3894 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !3896, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !3897, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.value(metadata i32 %2, metadata !3898, metadata !DIExpression()), !dbg !3899
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !3900
  %5 = load %struct.rtio_executor*, %struct.rtio_executor** %4, align 4, !dbg !3900
  %6 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %5, i32 0, i32 0, !dbg !3901
  %7 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %6, align 4, !dbg !3901
  %8 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %7, i32 0, i32 2, !dbg !3902
  %9 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %8, align 4, !dbg !3902
  tail call void %9(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) #25, !dbg !3903
  ret void, !dbg !3904
}

; Function Attrs: noinline nounwind optsize
define internal i32 @vnd_sensor_init(%struct.device* noundef %0) #1 !dbg !3905 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3907, metadata !DIExpression()), !dbg !3912
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3913
  %3 = bitcast i8** %2 to %struct.vnd_sensor_config**, !dbg !3913
  %4 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %3, align 4, !dbg !3913
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %4, metadata !3908, metadata !DIExpression()), !dbg !3912
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3914
  %6 = bitcast i8** %5 to %struct.vnd_sensor_data**, !dbg !3914
  %7 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %6, align 4, !dbg !3914
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %7, metadata !3910, metadata !DIExpression()), !dbg !3912
  %8 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %4, i32 0, i32 0, !dbg !3915
  %9 = load i32, i32* %8, align 4, !dbg !3915
  call void @llvm.dbg.value(metadata i32 %9, metadata !3911, metadata !DIExpression()), !dbg !3912
  %10 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 2, !dbg !3916
  store %struct.device* %0, %struct.device** %10, align 8, !dbg !3917
  %11 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 1, !dbg !3918
  tail call void @k_timer_init(%struct.k_timer* noundef nonnull %11, void (%struct.k_timer*)* noundef nonnull @vnd_sensor_timer_expiry, void (%struct.k_timer*)* noundef null) #25, !dbg !3919
  %12 = zext i32 %9 to i64, !dbg !3920
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %12) #24, !dbg !3920
  %14 = insertvalue [1 x i64] poison, i64 %13, 0, !dbg !3921
  tail call fastcc void @k_timer_start(%struct.k_timer* noundef nonnull %11, [1 x i64] %14, [1 x i64] %14) #24, !dbg !3921
  ret i32 0, !dbg !3922
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_timer_expiry(%struct.k_timer* nocapture noundef readonly %0) #1 !dbg !3923 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3925, metadata !DIExpression()), !dbg !3927
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 -1, i32 4, !dbg !3928
  call void @llvm.dbg.value(metadata %struct.k_timeout_t* %2, metadata !3926, metadata !DIExpression()), !dbg !3927
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 9, !dbg !3929
  %4 = bitcast %struct.k_timeout_t* %3 to %struct.device**, !dbg !3929
  %5 = load %struct.device*, %struct.device** %4, align 8, !dbg !3929
  tail call fastcc void @vnd_sensor_handle_int(%struct.device* noundef %5) #24, !dbg !3930
  ret void, !dbg !3931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %0) unnamed_addr #4 !dbg !3932 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3934, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata i64 %0, metadata !3936, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i32 1000, metadata !3939, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i32 10000, metadata !3940, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8 1, metadata !3941, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8 0, metadata !3942, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8 1, metadata !3943, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8 0, metadata !3944, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8 1, metadata !3945, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8 0, metadata !3946, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i64 0, metadata !3947, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i64 0, metadata !3947, metadata !DIExpression()), !dbg !3951
  %2 = mul i64 %0, 10, !dbg !3953
  ret i64 %2, !dbg !3959
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) unnamed_addr #1 !dbg !3960 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3965, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i64 undef, metadata !3966, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3964, metadata !DIExpression()), !dbg !3967
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3968, !srcloc !3970
  tail call void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) #25, !dbg !3971
  ret void, !dbg !3972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_handle_int(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3973 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3977, metadata !DIExpression()), !dbg !3983
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3984
  %3 = bitcast i8** %2 to %struct.vnd_sensor_data**, !dbg !3984
  %4 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %3, align 4, !dbg !3984
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %4, metadata !3978, metadata !DIExpression()), !dbg !3983
  %5 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %4, i32 0, i32 0, i32 1, !dbg !3985
  %6 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3985
  %7 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %6, i32 0, i32 0, i32 3, !dbg !3985
  %8 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %7) #24, !dbg !3985
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3985
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 1, !dbg !3985
  %11 = load i32, i32* %10, align 4, !dbg !3985
  %12 = add i32 %11, %8, !dbg !3985
  call void @llvm.dbg.value(metadata i32 %12, metadata !3980, metadata !DIExpression()), !dbg !3986
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !3985
  %14 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %13) #24, !dbg !3985
  %15 = icmp eq i32 %12, %14, !dbg !3985
  call void @llvm.dbg.value(metadata i1 %15, metadata !3982, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3986
  br i1 %15, label %37, label %16, !dbg !3985

16:                                               ; preds = %1
  %17 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3987
  %18 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %17, i32 0, i32 0, i32 1, !dbg !3987
  %19 = load i32, i32* %18, align 4, !dbg !3987
  %20 = add i32 %19, 1, !dbg !3987
  store i32 %20, i32* %18, align 4, !dbg !3987
  %21 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3985
  %22 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 0, i32 4, !dbg !3985
  %23 = load i32, i32* %22, align 4, !dbg !3985
  %24 = and i32 %23, %12, !dbg !3985
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !3979, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3983
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 0, !dbg !3990
  %26 = load %struct.rtio_sqe*, %struct.rtio_sqe** %25, align 4, !dbg !3990
  %27 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 1, !dbg !3993
  %28 = load %struct.rtio*, %struct.rtio** %27, align 4, !dbg !3993
  tail call fastcc void @vnd_sensor_iodev_execute(%struct.device* noundef nonnull %0, %struct.rtio_sqe* noundef %26, %struct.rtio* noundef %28) #24, !dbg !3994
  %29 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3995
  %30 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %29, i32 0, i32 0, i32 1, !dbg !3995
  %31 = load i32, i32* %30, align 4, !dbg !3995
  %32 = icmp eq i32 %31, 0, !dbg !3995
  br i1 %32, label %42, label %33, !dbg !3998

33:                                               ; preds = %16
  %34 = add i32 %31, -1, !dbg !3999
  store i32 %34, i32* %30, align 4, !dbg !3999
  %35 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !3999
  %36 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %35, i32 0, i32 0, i32 3, !dbg !3999
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %36) #24, !dbg !3999
  br label %42, !dbg !3999

37:                                               ; preds = %1
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !3979, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3983
  %38 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4001
  %39 = zext i8 %38 to i32, !dbg !4001
  %40 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4001
  %41 = load i8*, i8** %40, align 4, !dbg !4001
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.19, i32 0, i32 0), i32 noundef %39, i8* noundef %41) #25, !dbg !4001
  br label %42

42:                                               ; preds = %16, %33, %37
  ret void, !dbg !4007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_iodev_execute(%struct.device* nocapture noundef readonly %0, %struct.rtio_sqe* noundef %1, %struct.rtio* noundef %2) unnamed_addr #1 !dbg !4008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4012, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4013, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata %struct.rtio* %2, metadata !4014, metadata !DIExpression()), !dbg !4016
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 0, !dbg !4017
  %5 = load i8, i8* %4, align 4, !dbg !4017
  %6 = icmp eq i8 %5, 1, !dbg !4019
  br i1 %6, label %12, label %7, !dbg !4020

7:                                                ; preds = %3
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4021
  %9 = zext i8 %8 to i32, !dbg !4021
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4021
  %11 = load i8*, i8** %10, align 4, !dbg !4021
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.20, i32 0, i32 0), i32 noundef %9, i8* noundef %11) #25, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %17, metadata !4015, metadata !DIExpression()), !dbg !4016
  br label %19, !dbg !4027

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 1, !dbg !4028
  %14 = load i8*, i8** %13, align 4, !dbg !4028
  %15 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 0, !dbg !4030
  %16 = load i32, i32* %15, align 4, !dbg !4030
  %17 = tail call fastcc i32 @vnd_sensor_iodev_read(%struct.device* noundef %0, i8* noundef %14, i32 noundef %16) #24, !dbg !4031
  call void @llvm.dbg.value(metadata i32 %17, metadata !4015, metadata !DIExpression()), !dbg !4016
  %18 = icmp slt i32 %17, 0, !dbg !4032
  br i1 %18, label %19, label %21, !dbg !4027

19:                                               ; preds = %7, %12
  %20 = phi i32 [ -22, %7 ], [ %17, %12 ]
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1, i32 noundef %20) #24, !dbg !4034
  br label %22, !dbg !4036

21:                                               ; preds = %12
  tail call fastcc void @rtio_sqe_ok(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1) #24, !dbg !4037
  br label %22

22:                                               ; preds = %21, %19
  ret void, !dbg !4039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @vnd_sensor_iodev_read(%struct.device* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !4040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4044, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i8* %1, metadata !4045, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i32 %2, metadata !4046, metadata !DIExpression()), !dbg !4053
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4054
  %5 = bitcast i8** %4 to %struct.vnd_sensor_config**, !dbg !4054
  %6 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %5, align 4, !dbg !4054
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %6, metadata !4047, metadata !DIExpression()), !dbg !4053
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4055
  %8 = bitcast i8** %7 to %struct.vnd_sensor_data**, !dbg !4055
  %9 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %8, align 4, !dbg !4055
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %9, metadata !4048, metadata !DIExpression()), !dbg !4053
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 4) #24, !dbg !4056
  %11 = zext i8 %10 to i32, !dbg !4056
  %12 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4056
  %13 = load i8*, i8** %12, align 4, !dbg !4056
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.21, i32 0, i32 0), i32 noundef %11, i8* noundef %13, i32 noundef %2, i8* noundef %1) #25, !dbg !4056
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4061, !srcloc !4070
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %15, metadata !4067, metadata !DIExpression()) #23, !dbg !4071
  call void @llvm.dbg.value(metadata i32 undef, metadata !4068, metadata !DIExpression()) #23, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %15, metadata !4050, metadata !DIExpression()), !dbg !4053
  %16 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %9, i32 0, i32 4, !dbg !4072
  %17 = load i32, i32* %16, align 4, !dbg !4073
  %18 = add i32 %17, 1, !dbg !4073
  store i32 %18, i32* %16, align 4, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %17, metadata !4049, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i32 %15, metadata !4074, metadata !DIExpression()) #23, !dbg !4079
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !4081, !srcloc !4082
  %19 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %6, i32 0, i32 1, !dbg !4083
  %20 = load i32, i32* %19, align 4, !dbg !4083
  %21 = icmp ugt i32 %20, %2, !dbg !4085
  br i1 %21, label %26, label %22, !dbg !4086

22:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !4051, metadata !DIExpression()), !dbg !4087
  %23 = icmp ult i32 %20, %2, !dbg !4088
  %24 = select i1 %23, i32 %20, i32 %2, !dbg !4088
  %25 = icmp eq i32 %24, 0, !dbg !4090
  br i1 %25, label %42, label %30, !dbg !4091

26:                                               ; preds = %3
  %27 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4092
  %28 = zext i8 %27 to i32, !dbg !4092
  %29 = load i8*, i8** %12, align 4, !dbg !4092
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.22, i32 0, i32 0), i32 noundef %28, i8* noundef %29) #25, !dbg !4092
  br label %42, !dbg !4098

30:                                               ; preds = %22, %30
  %31 = phi i32 [ %38, %30 ], [ %20, %22 ]
  %32 = phi i32 [ %37, %30 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !4051, metadata !DIExpression()), !dbg !4087
  %33 = mul i32 %31, %17, !dbg !4099
  %34 = add i32 %33, %32, !dbg !4101
  %35 = trunc i32 %34 to i8, !dbg !4102
  %36 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !4103
  store i8 %35, i8* %36, align 1, !dbg !4104
  %37 = add nuw nsw i32 %32, 1, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %37, metadata !4051, metadata !DIExpression()), !dbg !4087
  %38 = load i32, i32* %19, align 4, !dbg !4088
  %39 = icmp ult i32 %38, %2, !dbg !4088
  %40 = select i1 %39, i32 %38, i32 %2, !dbg !4088
  %41 = icmp ult i32 %37, %40, !dbg !4090
  br i1 %41, label %30, label %42, !dbg !4091, !llvm.loop !4106

42:                                               ; preds = %30, %22, %26
  %43 = phi i32 [ -12, %26 ], [ 0, %22 ], [ 0, %30 ], !dbg !4053
  ret i32 %43, !dbg !4108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1) unnamed_addr #1 !dbg !4109 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !4111, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4112, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 0, metadata !4113, metadata !DIExpression()), !dbg !4114
  %3 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !4115
  %4 = load %struct.rtio_executor*, %struct.rtio_executor** %3, align 4, !dbg !4115
  %5 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %4, i32 0, i32 0, !dbg !4116
  %6 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %5, align 4, !dbg !4116
  %7 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %6, i32 0, i32 1, !dbg !4117
  %8 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %7, align 4, !dbg !4117
  tail call void %8(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef 0) #25, !dbg !4118
  ret void, !dbg !4119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4120 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %0, metadata !4131, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %1, metadata !4132, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %2, metadata !4133, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %3, metadata !4134, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %0, metadata !4136, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %0, metadata !4137, metadata !DIExpression()), !dbg !4198
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4199
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4199
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4140, metadata !DIExpression()), !dbg !4200
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4201
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4201
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4142, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata i32 0, metadata !4143, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 0, metadata !4144, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 0, metadata !4145, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 -1, metadata !4146, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 0, metadata !4149, metadata !DIExpression()), !dbg !4198
  %12 = and i32 %2, 4, !dbg !4203
  %13 = icmp eq i32 %12, 0, !dbg !4204
  call void @llvm.dbg.value(metadata i1 %13, metadata !4150, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4198
  %14 = lshr i32 %2, 3, !dbg !4205
  %15 = and i32 %14, 7, !dbg !4205
  %16 = add nuw nsw i32 %15, 1, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %16, metadata !4151, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 0, metadata !4152, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %0, metadata !4153, metadata !DIExpression()), !dbg !4198
  %17 = ptrtoint i8* %0 to i32, !dbg !4207
  %18 = and i32 %17, 3, !dbg !4209
  %19 = icmp eq i32 %18, 0, !dbg !4209
  br i1 %19, label %20, label %316, !dbg !4210

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4211
  call void @llvm.dbg.value(metadata i8* %21, metadata !4137, metadata !DIExpression()), !dbg !4198
  %22 = icmp eq i8* %0, null, !dbg !4212
  %23 = and i32 %1, 7, !dbg !4214
  %24 = sub nuw nsw i32 8, %23, !dbg !4214
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4214
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4214
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %27, metadata !4132, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %26, metadata !4137, metadata !DIExpression()), !dbg !4198
  br i1 %22, label %33, label %28, !dbg !4215

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4217
  %30 = sub i32 4, %17, !dbg !4217
  %31 = add i32 %30, %29, !dbg !4218
  %32 = icmp ugt i32 %31, %27, !dbg !4219
  br i1 %32, label %316, label %33, !dbg !4220

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4221
  call void @llvm.dbg.value(metadata i8* %34, metadata !4134, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %3, metadata !4148, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 4, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 4, metadata !4138, metadata !DIExpression()), !dbg !4198
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4222

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %42, metadata !4134, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %43, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %44, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %45, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %72, metadata !4146, metadata !DIExpression()), !dbg !4198
  br i1 %46, label %73, label %47, !dbg !4223

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4224
  %49 = zext i1 %48 to i32, !dbg !4228
  %50 = add nsw i32 %72, %49, !dbg !4228
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4228
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4228
  call void @llvm.dbg.value(metadata i32 %52, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %51, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4149, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %50, metadata !4146, metadata !DIExpression()), !dbg !4198
  br label %53, !dbg !4229

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %40, metadata !4134, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %58, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %57, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %56, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4149, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %54, metadata !4146, metadata !DIExpression()), !dbg !4198
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %60, metadata !4134, metadata !DIExpression()), !dbg !4198
  %61 = load i8, i8* %60, align 1, !dbg !4232
  %62 = icmp eq i8 %61, 0, !dbg !4233
  br i1 %62, label %223, label %63, !dbg !4234, !llvm.loop !4235

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4223

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4238

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4149, metadata !DIExpression()), !dbg !4198
  %75 = add nsw i32 %72, -1, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %75, metadata !4146, metadata !DIExpression()), !dbg !4198
  br label %53, !dbg !4240

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4241

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 4, metadata !4138, metadata !DIExpression()), !dbg !4198
  br label %53, !dbg !4242

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 4, metadata !4138, metadata !DIExpression()), !dbg !4198
  br label %53, !dbg !4243

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4244
  %81 = icmp eq i8 %80, 108, !dbg !4246
  br i1 %81, label %82, label %109, !dbg !4247

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4248
  %84 = load i8, i8* %83, align 1, !dbg !4248
  %85 = icmp eq i8 %84, 108, !dbg !4251
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4252
  %89 = add i32 %88, 7, !dbg !4252
  %90 = and i32 %89, -8, !dbg !4252
  %91 = inttoptr i32 %90 to i8*, !dbg !4252
  %92 = inttoptr i32 %90 to double*, !dbg !4252
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4252
  %94 = load double, double* %92, align 8, !dbg !4252
  call void @llvm.dbg.value(metadata i8* %93, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 8, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 8, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata double %94, metadata !4166, metadata !DIExpression()), !dbg !4254
  %95 = ptrtoint i8* %43 to i32, !dbg !4255
  %96 = add i32 %95, 7, !dbg !4255
  %97 = and i32 %96, -8, !dbg !4255
  %98 = inttoptr i32 %97 to i8*, !dbg !4256
  call void @llvm.dbg.value(metadata i8* %98, metadata !4137, metadata !DIExpression()), !dbg !4198
  br i1 %22, label %104, label %99, !dbg !4257

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4258
  %101 = icmp ugt i32 %100, %194, !dbg !4262
  br i1 %101, label %316, label %102, !dbg !4263

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4264
  store double %94, double* %103, align 8, !dbg !4264
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4267
  call void @llvm.dbg.value(metadata i8* %105, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4149, metadata !DIExpression()), !dbg !4198
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4149, metadata !DIExpression()), !dbg !4198
  br label %53, !dbg !4268

107:                                              ; preds = %73, %73
  br label %109, !dbg !4269

108:                                              ; preds = %73
  br label %109, !dbg !4269

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4198
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4198
  call void @llvm.dbg.value(metadata i32 %113, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %112, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4152, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4149, metadata !DIExpression()), !dbg !4198
  %114 = ptrtoint i8* %43 to i32, !dbg !4269
  %115 = add i32 %114, -1, !dbg !4269
  %116 = add i32 %115, %112, !dbg !4269
  %117 = sub i32 0, %112, !dbg !4269
  %118 = and i32 %116, %117, !dbg !4269
  %119 = inttoptr i32 %118 to i8*, !dbg !4270
  call void @llvm.dbg.value(metadata i8* %119, metadata !4137, metadata !DIExpression()), !dbg !4198
  br i1 %22, label %124, label %120, !dbg !4271

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4273
  %122 = add i32 %121, %118, !dbg !4274
  %123 = icmp ugt i32 %122, %194, !dbg !4275
  br i1 %123, label %316, label %124, !dbg !4276

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4277

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4270
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4278
  call void @llvm.dbg.value(metadata i8* %127, metadata !4135, metadata !DIExpression()), !dbg !4198
  %128 = bitcast i8* %41 to i8**, !dbg !4278
  %129 = load i8*, i8** %128, align 4, !dbg !4278
  call void @llvm.dbg.value(metadata i8* %129, metadata !4148, metadata !DIExpression()), !dbg !4198
  br label %130, !dbg !4279

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4280
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4281
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4198
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4282
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4198
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4283
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4198
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4198
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4198
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4198
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4284
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %142, metadata !4132, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %141, metadata !4134, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %140, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %139, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %138, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %137, metadata !4143, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %136, metadata !4151, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %135, metadata !4144, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4149, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %133, metadata !4148, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %132, metadata !4146, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %131, metadata !4145, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.label(metadata !4197), !dbg !4286
  br i1 %22, label %146, label %144, !dbg !4287

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4288
  store i8* %133, i8** %145, align 4, !dbg !4291
  br label %146, !dbg !4292

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %147, metadata !4151, metadata !DIExpression()), !dbg !4198
  %148 = icmp sgt i32 %136, 0, !dbg !4294
  br i1 %148, label %152, label %149, !dbg !4295

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !4296
  %151 = zext i1 %150 to i32, !dbg !4296
  br label %152, !dbg !4295

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4295
  %154 = icmp eq i32 %153, 0, !dbg !4295
  call void @llvm.dbg.value(metadata i1 %154, metadata !4175, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4297
  call void @llvm.dbg.value(metadata i1 %36, metadata !4178, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4297
  %155 = or i1 %36, %154, !dbg !4298
  br i1 %155, label %156, label %190, !dbg !4298

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4299
  %158 = sub i32 %157, %17, !dbg !4299
  %159 = lshr i32 %158, 2, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %159, metadata !4179, metadata !DIExpression()), !dbg !4301
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4302
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4302
  br i1 %163, label %316, label %164, !dbg !4302

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4304

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4305
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4308
  store i8 %166, i8* %167, align 1, !dbg !4309
  %168 = trunc i32 %132 to i8, !dbg !4310
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4311
  store i8 %168, i8* %169, align 1, !dbg !4312
  br i1 %154, label %173, label %170, !dbg !4313

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4314
  store i8 %171, i8* %167, align 1, !dbg !4314
  %172 = add i32 %131, 1, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %172, metadata !4145, metadata !DIExpression()), !dbg !4198
  br label %185, !dbg !4318

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %174, metadata !4144, metadata !DIExpression()), !dbg !4198
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4321

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %177, metadata !4132, metadata !DIExpression()), !dbg !4198
  br label %185, !dbg !4325

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4326

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %180, metadata !4132, metadata !DIExpression()), !dbg !4198
  br label %185, !dbg !4330

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !4331
  %183 = add i32 %142, 2, !dbg !4333
  %184 = add i32 %183, %182, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %184, metadata !4132, metadata !DIExpression()), !dbg !4198
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4198
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4198
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4198
  call void @llvm.dbg.value(metadata i32 %188, metadata !4132, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %187, metadata !4144, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %186, metadata !4145, metadata !DIExpression()), !dbg !4198
  %189 = add nuw nsw i32 %137, 1, !dbg !4335
  call void @llvm.dbg.value(metadata i32 undef, metadata !4132, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 undef, metadata !4143, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 undef, metadata !4144, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 undef, metadata !4145, metadata !DIExpression()), !dbg !4198
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4280
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4282
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4283
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4284
  call void @llvm.dbg.value(metadata i32 %194, metadata !4132, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %193, metadata !4143, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %192, metadata !4144, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %191, metadata !4145, metadata !DIExpression()), !dbg !4198
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4336
  call void @llvm.dbg.value(metadata i8* %195, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %143, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %141, metadata !4134, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %139, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %138, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4152, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4149, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %132, metadata !4146, metadata !DIExpression()), !dbg !4198
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %196, metadata !4134, metadata !DIExpression()), !dbg !4198
  %197 = load i8, i8* %196, align 1, !dbg !4232
  %198 = icmp eq i8 %197, 0, !dbg !4233
  br i1 %198, label %223, label %63, !dbg !4234

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4337

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4338
  call void @llvm.dbg.value(metadata i8* %201, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 undef, metadata !4182, metadata !DIExpression()), !dbg !4339
  br i1 %22, label %216, label %202, !dbg !4340

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4338
  %204 = load i32, i32* %203, align 4, !dbg !4338
  call void @llvm.dbg.value(metadata i32 %204, metadata !4182, metadata !DIExpression()), !dbg !4339
  %205 = inttoptr i32 %118 to i32*, !dbg !4341
  store i32 %204, i32* %205, align 4, !dbg !4344
  br label %216, !dbg !4345

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4346
  %208 = add i32 %207, 7, !dbg !4346
  %209 = and i32 %208, -8, !dbg !4346
  %210 = inttoptr i32 %209 to i8*, !dbg !4346
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4346
  call void @llvm.dbg.value(metadata i8* %211, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i64 undef, metadata !4188, metadata !DIExpression()), !dbg !4347
  br i1 %22, label %216, label %212, !dbg !4348

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4346
  %214 = load i64, i64* %213, align 8, !dbg !4346
  call void @llvm.dbg.value(metadata i64 %214, metadata !4188, metadata !DIExpression()), !dbg !4347
  %215 = inttoptr i32 %118 to i64*, !dbg !4349
  store i64 %214, i64* %215, align 8, !dbg !4354
  br label %216, !dbg !4355

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4356
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4356
  call void @llvm.dbg.value(metadata i8* %218, metadata !4135, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %40, metadata !4134, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %219, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %113, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %112, metadata !4139, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4152, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8 poison, metadata !4149, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %72, metadata !4146, metadata !DIExpression()), !dbg !4198
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %220, metadata !4134, metadata !DIExpression()), !dbg !4198
  %221 = load i8, i8* %220, align 1, !dbg !4232
  %222 = icmp eq i8 %221, 0, !dbg !4233
  br i1 %222, label %223, label %38, !dbg !4234

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4357
  %225 = ptrtoint i8* %224 to i32, !dbg !4358
  %226 = sub i32 %225, %17, !dbg !4358
  %227 = lshr i32 %226, 2, !dbg !4360
  %228 = icmp ugt i32 %226, 1023, !dbg !4361
  br i1 %228, label %316, label %229, !dbg !4362

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4363

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4364
  %232 = add i32 %231, %226, !dbg !4367
  br label %316, !dbg !4368

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4369
  store i8 %234, i8* %0, align 1, !dbg !4370
  %235 = trunc i32 %192 to i8, !dbg !4371
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4373
  store i8 %236, i8* %238, align 1, !dbg !4375
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4376
  store i8 %237, i8* %239, align 1, !dbg !4377
  %240 = trunc i32 %191 to i8, !dbg !4378
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4379
  store i8 %240, i8* %241, align 1, !dbg !4380
  %242 = icmp eq i32 %191, 0, !dbg !4381
  %243 = xor i1 %242, true, !dbg !4382
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4382
  call void @llvm.dbg.value(metadata i8* %224, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 0, metadata !4147, metadata !DIExpression()), !dbg !4198
  br i1 %245, label %246, label %265, !dbg !4382

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4383

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %250, metadata !4147, metadata !DIExpression()), !dbg !4198
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4384
  %252 = load i8, i8* %251, align 1, !dbg !4384
  %253 = icmp sgt i8 %252, -1, !dbg !4386
  br i1 %253, label %261, label %254, !dbg !4387

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4191, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4388
  %255 = ptrtoint i8* %249 to i32, !dbg !4389
  %256 = add i32 %247, %255, !dbg !4391
  %257 = icmp ugt i32 %256, %194, !dbg !4392
  br i1 %257, label %316, label %258, !dbg !4393

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4394
  call void @llvm.dbg.value(metadata i8 %259, metadata !4191, metadata !DIExpression()), !dbg !4388
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4395
  call void @llvm.dbg.value(metadata i8* %260, metadata !4137, metadata !DIExpression()), !dbg !4198
  store i8 %259, i8* %249, align 1, !dbg !4396
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4336
  call void @llvm.dbg.value(metadata i8* %262, metadata !4137, metadata !DIExpression()), !dbg !4198
  %263 = add nuw i32 %250, 1, !dbg !4397
  call void @llvm.dbg.value(metadata i32 %263, metadata !4147, metadata !DIExpression()), !dbg !4198
  %264 = icmp eq i32 %263, %193, !dbg !4398
  br i1 %264, label %265, label %248, !dbg !4383, !llvm.loop !4399

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4336
  call void @llvm.dbg.value(metadata i8* %266, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 0, metadata !4147, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %133, metadata !4148, metadata !DIExpression()), !dbg !4198
  %267 = icmp eq i32 %193, 0, !dbg !4401
  br i1 %267, label %312, label %268, !dbg !4404

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4404

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %272, metadata !4148, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %273, metadata !4147, metadata !DIExpression()), !dbg !4198
  br i1 %242, label %278, label %274, !dbg !4405

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4408
  %276 = load i8, i8* %275, align 1, !dbg !4408
  %277 = icmp sgt i8 %276, -1, !dbg !4409
  br i1 %277, label %278, label %307, !dbg !4410

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4411

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4138, metadata !DIExpression()), !dbg !4198
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4412
  %281 = load i8, i8* %280, align 1, !dbg !4412
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4415
  call void @llvm.dbg.value(metadata i8* %282, metadata !4137, metadata !DIExpression()), !dbg !4198
  store i8 %281, i8* %271, align 1, !dbg !4416
  br label %293, !dbg !4417

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4418
  %285 = load i8, i8* %284, align 1, !dbg !4418
  %286 = zext i8 %285 to i32, !dbg !4418
  %287 = shl nuw nsw i32 %286, 2, !dbg !4420
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4421
  %289 = bitcast i8* %288 to i8**, !dbg !4422
  %290 = load i8*, i8** %289, align 4, !dbg !4422
  call void @llvm.dbg.value(metadata i8* %290, metadata !4148, metadata !DIExpression()), !dbg !4198
  store i8* null, i8** %289, align 4, !dbg !4423
  %291 = tail call i32 @strlen(i8* noundef %290) #25, !dbg !4424
  %292 = add i32 %291, 1, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %292, metadata !4138, metadata !DIExpression()), !dbg !4198
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4198
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4426
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4198
  call void @llvm.dbg.value(metadata i8* %296, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %295, metadata !4138, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %294, metadata !4148, metadata !DIExpression()), !dbg !4198
  %297 = ptrtoint i8* %296 to i32, !dbg !4427
  %298 = add i32 %269, %295, !dbg !4429
  %299 = add i32 %298, %297, !dbg !4430
  %300 = icmp ugt i32 %299, %194, !dbg !4431
  br i1 %300, label %316, label %301, !dbg !4432

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4433
  %303 = load i8, i8* %302, align 1, !dbg !4433
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4434
  call void @llvm.dbg.value(metadata i8* %304, metadata !4137, metadata !DIExpression()), !dbg !4198
  store i8 %303, i8* %296, align 1, !dbg !4435
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #25, !dbg !4436
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4437
  call void @llvm.dbg.value(metadata i8* %306, metadata !4137, metadata !DIExpression()), !dbg !4198
  br label %307, !dbg !4438

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4439
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4198
  call void @llvm.dbg.value(metadata i8* %309, metadata !4137, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %308, metadata !4148, metadata !DIExpression()), !dbg !4198
  %310 = add nuw i32 %273, 1, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %310, metadata !4147, metadata !DIExpression()), !dbg !4198
  %311 = icmp eq i32 %310, %193, !dbg !4401
  br i1 %311, label %312, label %270, !dbg !4404, !llvm.loop !4441

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4336
  %314 = ptrtoint i8* %313 to i32, !dbg !4443
  %315 = sub i32 %314, %17, !dbg !4443
  br label %316, !dbg !4444

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4198
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4445
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4445
  ret i32 %317, !dbg !4445
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4450, metadata !DIExpression()), !dbg !4451
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !4452
  ret i1 %2, !dbg !4453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4454 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4459, metadata !DIExpression()), !dbg !4460
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4461
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4462
  %4 = and i1 %2, %3, !dbg !4462
  ret i1 %4, !dbg !4463
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4464 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4468, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 %1, metadata !4469, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 %2, metadata !4470, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i8* %3, metadata !4471, metadata !DIExpression()), !dbg !4474
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4475
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4475
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4472, metadata !DIExpression()), !dbg !4476
  call void @llvm.va_start(i8* nonnull %6), !dbg !4477
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4478
  %8 = load i32, i32* %7, align 4, !dbg !4478
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4478
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !4478
  call void @llvm.dbg.value(metadata i32 %10, metadata !4473, metadata !DIExpression()), !dbg !4474
  call void @llvm.va_end(i8* nonnull %6), !dbg !4479
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4480
  ret i32 %10, !dbg !4481
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4482 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4494, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4495, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i8* %2, metadata !4496, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i8* %3, metadata !4497, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i8* %3, metadata !4498, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i8* %3, metadata !4499, metadata !DIExpression()), !dbg !4513
  %5 = icmp eq i8* %3, null, !dbg !4514
  br i1 %5, label %45, label %6, !dbg !4516

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4508, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4513
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4517
  %8 = load i8, i8* %7, align 1, !dbg !4517
  %9 = zext i8 %8 to i32, !dbg !4518
  call void @llvm.dbg.value(metadata i32 %9, metadata !4509, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i8 undef, metadata !4510, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4513
  call void @llvm.dbg.value(metadata i8 undef, metadata !4511, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4513
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  call void @llvm.dbg.value(metadata i32 0, metadata !4507, metadata !DIExpression()), !dbg !4513
  %10 = icmp eq i8 %8, 0, !dbg !4519
  br i1 %10, label %39, label %11, !dbg !4522

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4523
  call void @llvm.dbg.value(metadata i8 %12, metadata !4508, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4513
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %13 = zext i8 %12 to i32, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %13, metadata !4508, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4513
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %14 = shl nuw nsw i32 %13, 2, !dbg !4525
  call void @llvm.dbg.value(metadata i32 %14, metadata !4508, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4526
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4527
  %17 = load i8, i8* %16, align 1, !dbg !4527
  call void @llvm.dbg.value(metadata i8 %17, metadata !4510, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4513
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %18 = zext i8 %17 to i32, !dbg !4528
  call void @llvm.dbg.value(metadata i32 %18, metadata !4510, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4529
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4530
  %21 = load i8, i8* %20, align 1, !dbg !4530
  call void @llvm.dbg.value(metadata i8 %21, metadata !4511, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4513
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %22 = zext i8 %21 to i32, !dbg !4531
  call void @llvm.dbg.value(metadata i32 %22, metadata !4511, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %23 = shl nuw nsw i32 %22, 1, !dbg !4532
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4513
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4533
  call void @llvm.dbg.value(metadata i8* %24, metadata !4505, metadata !DIExpression()), !dbg !4513
  br label %25, !dbg !4522

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4505, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i32 %27, metadata !4507, metadata !DIExpression()), !dbg !4513
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4534
  call void @llvm.dbg.value(metadata i8* %28, metadata !4505, metadata !DIExpression()), !dbg !4513
  %29 = load i8, i8* %26, align 1, !dbg !4536
  %30 = zext i8 %29 to i32, !dbg !4536
  call void @llvm.dbg.value(metadata i32 %30, metadata !4512, metadata !DIExpression()), !dbg !4513
  %31 = shl nuw nsw i32 %30, 2, !dbg !4537
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4538
  %33 = bitcast i8* %32 to i8**, !dbg !4539
  call void @llvm.dbg.value(metadata i8** %33, metadata !4506, metadata !DIExpression()), !dbg !4513
  store i8* %28, i8** %33, align 4, !dbg !4540
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !4541
  %35 = add i32 %34, 1, !dbg !4542
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4543
  call void @llvm.dbg.value(metadata i8* %36, metadata !4505, metadata !DIExpression()), !dbg !4513
  %37 = add nuw nsw i32 %27, 1, !dbg !4544
  call void @llvm.dbg.value(metadata i32 %37, metadata !4507, metadata !DIExpression()), !dbg !4513
  %38 = icmp eq i32 %37, %9, !dbg !4519
  br i1 %38, label %39, label %25, !dbg !4522, !llvm.loop !4545

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4547
  call void @llvm.dbg.value(metadata i8* %40, metadata !4498, metadata !DIExpression()), !dbg !4513
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4548
  %42 = bitcast i8* %41 to i8**, !dbg !4548
  %43 = load i8*, i8** %42, align 1, !dbg !4548
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !4549
  br label %45, !dbg !4550

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4513
  ret i32 %46, !dbg !4551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4552 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4556, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4557, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %2, metadata !4558, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %3, metadata !4559, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %4, metadata !4560, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %4, metadata !4561, metadata !DIExpression()), !dbg !4566
  %6 = ptrtoint i8* %4 to i32, !dbg !4567
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4567
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !4567
  ret i32 %8, !dbg !4568
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !4569 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4573, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %1, metadata !4574, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 0, metadata !4576, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 0, metadata !4577, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4576, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %0, metadata !4573, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4578
  %3 = load i8, i8* %0, align 1, !dbg !4579
  call void @llvm.dbg.value(metadata i8 %3, metadata !4575, metadata !DIExpression()), !dbg !4578
  %4 = icmp eq i8 %3, 0, !dbg !4580
  br i1 %4, label %29, label %5, !dbg !4581

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4582
  call void @llvm.dbg.value(metadata i32 %8, metadata !4577, metadata !DIExpression()), !dbg !4578
  br i1 %9, label %11, label %22, !dbg !4583

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4585
  br i1 %12, label %13, label %17, !dbg !4589

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4590
  br i1 %14, label %29, label %15, !dbg !4593

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4594
  br i1 %16, label %29, label %22, !dbg !4596

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4597
  %19 = xor i1 %18, true, !dbg !4599
  %20 = zext i1 %18 to i32, !dbg !4599
  %21 = add nsw i32 %8, %20, !dbg !4599
  br label %22, !dbg !4599

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4578
  call void @llvm.dbg.value(metadata i32 %24, metadata !4577, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4576, metadata !DIExpression()), !dbg !4578
  %25 = icmp eq i8 %6, 37, !dbg !4600
  %26 = xor i1 %25, %23, !dbg !4602
  call void @llvm.dbg.value(metadata i8* %10, metadata !4573, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %10, metadata !4573, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4578
  %27 = load i8, i8* %10, align 1, !dbg !4579
  call void @llvm.dbg.value(metadata i8 %27, metadata !4575, metadata !DIExpression()), !dbg !4578
  %28 = icmp eq i8 %27, 0, !dbg !4580
  br i1 %28, label %29, label %5, !dbg !4581, !llvm.loop !4603

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4578
  ret i1 %30, !dbg !4605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4606 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4610, metadata !DIExpression()), !dbg !4611
  %2 = add i8 %0, -64, !dbg !4612
  %3 = icmp ult i8 %2, 59, !dbg !4612
  ret i1 %3, !dbg !4613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4614 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4622, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %1, metadata !4623, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4624, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %3, metadata !4625, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %4, metadata !4626, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i16* %5, metadata !4627, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %6, metadata !4628, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %0, metadata !4629, metadata !DIExpression()), !dbg !4691
  %11 = bitcast i8* %0 to i32*, !dbg !4692
  call void @llvm.dbg.value(metadata i32* %11, metadata !4630, metadata !DIExpression()), !dbg !4691
  %12 = and i32 %4, 8, !dbg !4693
  %13 = icmp eq i32 %12, 0, !dbg !4694
  call void @llvm.dbg.value(metadata i1 %13, metadata !4634, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %0, metadata !4637, metadata !DIExpression()), !dbg !4691
  %14 = icmp eq i32 %1, 0, !dbg !4695
  br i1 %14, label %15, label %17, !dbg !4696

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #24, !dbg !4697
  br label %17, !dbg !4696

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4696
  call void @llvm.dbg.value(metadata i32 %18, metadata !4623, metadata !DIExpression()), !dbg !4691
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4698
  %20 = load i8, i8* %19, align 1, !dbg !4698
  %21 = zext i8 %20 to i32, !dbg !4699
  call void @llvm.dbg.value(metadata i32 %21, metadata !4632, metadata !DIExpression()), !dbg !4691
  %22 = icmp ne i8 %20, 0, !dbg !4700
  %23 = and i32 %4, 1, !dbg !4701
  %24 = icmp ne i32 %23, 0, !dbg !4701
  %25 = and i1 %24, %22, !dbg !4701
  call void @llvm.dbg.value(metadata i1 %25, metadata !4636, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4691
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4702
  %27 = load i8, i8* %26, align 1, !dbg !4702
  %28 = zext i8 %27 to i32, !dbg !4703
  call void @llvm.dbg.value(metadata i32 %28, metadata !4633, metadata !DIExpression()), !dbg !4691
  %29 = icmp ne i8 %27, 0, !dbg !4704
  %30 = and i32 %4, 2, !dbg !4705
  %31 = icmp ne i32 %30, 0, !dbg !4705
  %32 = and i1 %31, %29, !dbg !4705
  call void @llvm.dbg.value(metadata i1 %32, metadata !4635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4691
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4706
  br i1 %33, label %38, label %34, !dbg !4706

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4708
  br i1 %35, label %267, label %36, !dbg !4711

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #25, !dbg !4712
  br label %267, !dbg !4714

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4715
  %40 = zext i8 %39 to i32, !dbg !4716
  %41 = shl nuw nsw i32 %40, 2, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %41, metadata !4631, metadata !DIExpression()), !dbg !4691
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4718
  %43 = bitcast i8* %42 to i8**, !dbg !4719
  %44 = load i8*, i8** %43, align 4, !dbg !4719
  call void @llvm.dbg.value(metadata i8* %44, metadata !4640, metadata !DIExpression()), !dbg !4691
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4720
  call void @llvm.dbg.value(metadata i8* %45, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 0, metadata !4642, metadata !DIExpression()), !dbg !4691
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4721
  br i1 %46, label %47, label %132, !dbg !4722

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4639, metadata !DIExpression()), !dbg !4691
  br i1 %25, label %48, label %73, !dbg !4723

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %45, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 0, metadata !4642, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 0, metadata !4643, metadata !DIExpression()), !dbg !4724
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4725

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %52, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %53, metadata !4642, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %54, metadata !4643, metadata !DIExpression()), !dbg !4724
  %55 = load i8, i8* %52, align 1, !dbg !4726
  %56 = zext i8 %55 to i32, !dbg !4727
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4727
  %58 = bitcast i32* %57 to i8**, !dbg !4728
  %59 = load i8*, i8** %58, align 4, !dbg !4728
  call void @llvm.dbg.value(metadata i8* %59, metadata !4649, metadata !DIExpression()), !dbg !4729
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #24, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %60, metadata !4652, metadata !DIExpression()), !dbg !4729
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4731
  br i1 %62, label %63, label %67, !dbg !4731

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4733
  %65 = add nuw i32 %53, 1, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %65, metadata !4642, metadata !DIExpression()), !dbg !4691
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4736
  store i16 %64, i16* %66, align 2, !dbg !4737
  br label %67, !dbg !4738

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4691
  call void @llvm.dbg.value(metadata i32 %68, metadata !4642, metadata !DIExpression()), !dbg !4691
  %69 = add nsw i32 %60, %51, !dbg !4739
  call void @llvm.dbg.value(metadata i32 %69, metadata !4639, metadata !DIExpression()), !dbg !4691
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4740
  call void @llvm.dbg.value(metadata i8* %70, metadata !4641, metadata !DIExpression()), !dbg !4691
  %71 = add nuw nsw i32 %54, 1, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %71, metadata !4643, metadata !DIExpression()), !dbg !4724
  %72 = icmp eq i32 %71, %21, !dbg !4742
  br i1 %72, label %79, label %50, !dbg !4725, !llvm.loop !4743

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4745
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4745
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4745
  br label %79, !dbg !4745

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4748
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4691
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4749
  call void @llvm.dbg.value(metadata i1 undef, metadata !4653, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4750
  call void @llvm.dbg.value(metadata i32 0, metadata !4654, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.value(metadata i32 %82, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %81, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %80, metadata !4642, metadata !DIExpression()), !dbg !4691
  %83 = icmp eq i8 %27, 0, !dbg !4752
  br i1 %83, label %267, label %84, !dbg !4753

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4754
  %86 = icmp eq i32 %85, 0, !dbg !4755
  call void @llvm.dbg.value(metadata i1 %86, metadata !4653, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4750
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4753

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %93, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %94, metadata !4642, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %95, metadata !4654, metadata !DIExpression()), !dbg !4751
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4756
  call void @llvm.dbg.value(metadata i8* %96, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 undef, metadata !4656, metadata !DIExpression()), !dbg !4757
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %97, metadata !4641, metadata !DIExpression()), !dbg !4691
  %98 = load i8, i8* %96, align 1, !dbg !4759
  call void @llvm.dbg.value(metadata i8 %98, metadata !4659, metadata !DIExpression()), !dbg !4757
  %99 = zext i8 %98 to i32, !dbg !4760
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4760
  %101 = bitcast i32* %100 to i8**, !dbg !4761
  %102 = load i8*, i8** %101, align 4, !dbg !4761
  call void @llvm.dbg.value(metadata i8* %102, metadata !4660, metadata !DIExpression()), !dbg !4757
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #24, !dbg !4762
  call void @llvm.dbg.value(metadata i1 %103, metadata !4661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4757
  br i1 %13, label %110, label %104, !dbg !4763

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4765
  call void @llvm.dbg.value(metadata i8 %105, metadata !4656, metadata !DIExpression()), !dbg !4757
  %106 = zext i8 %105 to i32, !dbg !4766
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #24, !dbg !4767
  br i1 %107, label %108, label %110, !dbg !4768

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.25, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #25, !dbg !4769
  %109 = add nsw i32 %92, -2, !dbg !4775
  call void @llvm.dbg.value(metadata i32 %109, metadata !4639, metadata !DIExpression()), !dbg !4691
  br label %127, !dbg !4776

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4777

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4778

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %113, metadata !4639, metadata !DIExpression()), !dbg !4691
  br label %127, !dbg !4783

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4784

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4687), !dbg !4785
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #24, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %116, metadata !4662, metadata !DIExpression()), !dbg !4757
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4787
  br i1 %118, label %119, label %123, !dbg !4787

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4789
  %121 = add nuw i32 %94, 1, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %121, metadata !4642, metadata !DIExpression()), !dbg !4691
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4792
  store i16 %120, i16* %122, align 2, !dbg !4793
  br label %123, !dbg !4794

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4691
  call void @llvm.dbg.value(metadata i32 %124, metadata !4642, metadata !DIExpression()), !dbg !4691
  %125 = add i32 %92, -1, !dbg !4795
  %126 = add i32 %125, %116, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %126, metadata !4639, metadata !DIExpression()), !dbg !4691
  br label %127, !dbg !4797

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4691
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4757
  call void @llvm.dbg.value(metadata i32 %129, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %128, metadata !4642, metadata !DIExpression()), !dbg !4691
  %130 = add nuw nsw i32 %95, 1, !dbg !4798
  call void @llvm.dbg.value(metadata i8* %97, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %130, metadata !4654, metadata !DIExpression()), !dbg !4751
  %131 = icmp eq i32 %130, %28, !dbg !4752
  br i1 %131, label %267, label %91, !dbg !4753, !llvm.loop !4799

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4664, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4665, metadata !DIExpression()), !dbg !4802
  br i1 %25, label %133, label %135, !dbg !4803

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4666, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 0, metadata !4667, metadata !DIExpression()), !dbg !4691
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4804
  call void @llvm.dbg.value(metadata i8* %134, metadata !4668, metadata !DIExpression()), !dbg !4691
  br label %140, !dbg !4807

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4808
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4808

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4668, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 undef, metadata !4667, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 0, metadata !4666, metadata !DIExpression()), !dbg !4691
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #25, !dbg !4810
  br label %145, !dbg !4813

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4814
  call void @llvm.dbg.value(metadata i8* %148, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 0, metadata !4670, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.value(metadata i8 %146, metadata !4667, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 %147, metadata !4666, metadata !DIExpression()), !dbg !4691
  %149 = icmp eq i8 %27, 0, !dbg !4816
  br i1 %149, label %150, label %152, !dbg !4817

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4818
  br label %157, !dbg !4817

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4817

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4818
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4819
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4820
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4691
  call void @llvm.dbg.value(metadata i8 undef, metadata !4663, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4691
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4821
  %163 = load i8, i8* %162, align 1, !dbg !4821
  %164 = zext i8 %159 to i32, !dbg !4822
  %165 = add i8 %163, %159, !dbg !4823
  call void @llvm.dbg.value(metadata i8 %165, metadata !4663, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4691
  %166 = icmp eq i32 %30, 0, !dbg !4824
  %167 = lshr i8 %160, 1, !dbg !4825
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4825
  call void @llvm.dbg.value(metadata i8 %168, metadata !4663, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4691
  %169 = icmp eq i32 %23, 0, !dbg !4826
  %170 = icmp eq i32 %158, 0, !dbg !4818
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4818
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4818
  call void @llvm.dbg.value(metadata i8 %172, metadata !4663, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4691
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4678, metadata !DIExpression()), !dbg !4827
  %173 = load i32, i32* %11, align 1, !dbg !4828
  store i8 %165, i8* %162, align 1, !dbg !4829
  store i8 %172, i8* %19, align 1, !dbg !4829
  store i8 %168, i8* %26, align 1, !dbg !4829
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #25, !dbg !4830
  call void @llvm.dbg.value(metadata i32 %174, metadata !4669, metadata !DIExpression()), !dbg !4691
  %175 = icmp slt i32 %174, 0, !dbg !4831
  br i1 %175, label %267, label %220, !dbg !4833

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %178, metadata !4670, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.value(metadata i8 %179, metadata !4667, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 %180, metadata !4666, metadata !DIExpression()), !dbg !4691
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %181, metadata !4641, metadata !DIExpression()), !dbg !4691
  %182 = load i8, i8* %177, align 1, !dbg !4835
  call void @llvm.dbg.value(metadata i8 %182, metadata !4672, metadata !DIExpression()), !dbg !4836
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %183, metadata !4641, metadata !DIExpression()), !dbg !4691
  %184 = load i8, i8* %181, align 1, !dbg !4838
  call void @llvm.dbg.value(metadata i8 %184, metadata !4675, metadata !DIExpression()), !dbg !4836
  %185 = zext i8 %184 to i32, !dbg !4839
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4839
  %187 = bitcast i32* %186 to i8**, !dbg !4840
  %188 = load i8*, i8** %187, align 4, !dbg !4840
  call void @llvm.dbg.value(metadata i8* %188, metadata !4676, metadata !DIExpression()), !dbg !4836
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #24, !dbg !4841
  call void @llvm.dbg.value(metadata i1 %189, metadata !4677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4836
  br i1 %13, label %193, label %190, !dbg !4842

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4844
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #24, !dbg !4845
  br i1 %192, label %215, label %193, !dbg !4846

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4847

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4848

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4851
  call void @llvm.dbg.value(metadata i8 %196, metadata !4666, metadata !DIExpression()), !dbg !4691
  br label %208, !dbg !4854

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4855

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4856
  call void @llvm.dbg.value(metadata i8 %199, metadata !4667, metadata !DIExpression()), !dbg !4691
  br label %208, !dbg !4859

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4860

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4862
  call void @llvm.dbg.value(metadata i8 %202, metadata !4666, metadata !DIExpression()), !dbg !4691
  br label %208, !dbg !4865

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4866
  call void @llvm.dbg.value(metadata i8 %204, metadata !4667, metadata !DIExpression()), !dbg !4691
  %205 = zext i8 %179 to i32, !dbg !4868
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4868
  store i8 %182, i8* %206, align 1, !dbg !4869
  %207 = add i8 %179, 2, !dbg !4870
  call void @llvm.dbg.value(metadata i8 %207, metadata !4667, metadata !DIExpression()), !dbg !4691
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4871
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4871
  store i8 %184, i8* %214, align 1, !dbg !4871
  br label %215, !dbg !4872

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4691
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4820
  call void @llvm.dbg.value(metadata i8 %217, metadata !4667, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 %216, metadata !4666, metadata !DIExpression()), !dbg !4691
  %218 = add nuw nsw i32 %178, 1, !dbg !4872
  call void @llvm.dbg.value(metadata i8* %183, metadata !4641, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %218, metadata !4670, metadata !DIExpression()), !dbg !4815
  %219 = icmp eq i32 %218, %28, !dbg !4816
  br i1 %219, label %157, label %176, !dbg !4817, !llvm.loop !4873

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %174, metadata !4639, metadata !DIExpression()), !dbg !4691
  store i32 %173, i32* %11, align 1, !dbg !4875
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4876
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #25, !dbg !4877
  call void @llvm.dbg.value(metadata i32 %223, metadata !4669, metadata !DIExpression()), !dbg !4691
  %224 = icmp slt i32 %223, 0, !dbg !4878
  br i1 %224, label %267, label %225, !dbg !4880

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4639, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4691
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4881
  %228 = add nuw nsw i32 %41, %21, !dbg !4881
  %229 = sub i32 %227, %228, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %229, metadata !4679, metadata !DIExpression()), !dbg !4691
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #25, !dbg !4882
  call void @llvm.dbg.value(metadata i32 %230, metadata !4669, metadata !DIExpression()), !dbg !4691
  %231 = icmp slt i32 %230, 0, !dbg !4883
  br i1 %231, label %267, label %232, !dbg !4885

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %233, metadata !4639, metadata !DIExpression()), !dbg !4691
  %234 = add nuw nsw i32 %233, %230, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %234, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 0, metadata !4680, metadata !DIExpression()), !dbg !4888
  %235 = icmp eq i8 %159, 0, !dbg !4889
  br i1 %235, label %264, label %236, !dbg !4890

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4890

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4680, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i32 %240, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4891
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4892
  %242 = load i8, i8* %241, align 1, !dbg !4892
  call void @llvm.dbg.value(metadata i8 %242, metadata !4682, metadata !DIExpression()), !dbg !4893
  store i8 %242, i8* %10, align 1, !dbg !4894
  %243 = zext i8 %242 to i32, !dbg !4895
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4895
  %245 = bitcast i32* %244 to i8**, !dbg !4896
  %246 = load i8*, i8** %245, align 4, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %246, metadata !4685, metadata !DIExpression()), !dbg !4893
  br i1 %237, label %250, label %247, !dbg !4897

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4898
  %249 = load i16, i16* %248, align 2, !dbg !4898
  br label %250, !dbg !4897

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4897
  call void @llvm.dbg.value(metadata i32 undef, metadata !4686, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4893
  call void @llvm.dbg.value(metadata i8* %10, metadata !4682, metadata !DIExpression(DW_OP_deref)), !dbg !4893
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %252, metadata !4669, metadata !DIExpression()), !dbg !4691
  %253 = icmp slt i32 %252, 0, !dbg !4900
  br i1 %253, label %257, label %254, !dbg !4902

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4686, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4639, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4691
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #24, !dbg !4903
  call void @llvm.dbg.value(metadata i32 %255, metadata !4669, metadata !DIExpression()), !dbg !4691
  %256 = icmp slt i32 %255, 0, !dbg !4904
  br i1 %256, label %257, label %259, !dbg !4906

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4907
  call void @llvm.dbg.value(metadata i32 undef, metadata !4639, metadata !DIExpression()), !dbg !4691
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %260, metadata !4639, metadata !DIExpression()), !dbg !4691
  %261 = add nsw i32 %260, %255, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %261, metadata !4639, metadata !DIExpression()), !dbg !4691
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4907
  %262 = add nuw nsw i32 %239, 1, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %262, metadata !4680, metadata !DIExpression()), !dbg !4888
  %263 = icmp eq i32 %262, %164, !dbg !4889
  br i1 %263, label %264, label %238, !dbg !4890, !llvm.loop !4911

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4887
  call void @llvm.dbg.value(metadata i32 %265, metadata !4639, metadata !DIExpression()), !dbg !4691
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4913
  br label %267, !dbg !4914

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4691
  ret i32 %268, !dbg !4915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4920, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i8* %0, metadata !4921, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i8* %0, metadata !4922, metadata !DIExpression()), !dbg !4928
  %2 = load i8, i8* %0, align 1, !dbg !4929
  %3 = zext i8 %2 to i32, !dbg !4929
  %4 = shl nuw nsw i32 %3, 2, !dbg !4930
  call void @llvm.dbg.value(metadata i32 %4, metadata !4923, metadata !DIExpression()), !dbg !4928
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4931
  %6 = load i8, i8* %5, align 1, !dbg !4931
  %7 = zext i8 %6 to i32, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %7, metadata !4924, metadata !DIExpression()), !dbg !4928
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4932
  %9 = load i8, i8* %8, align 1, !dbg !4932
  %10 = zext i8 %9 to i32, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %10, metadata !4925, metadata !DIExpression()), !dbg !4928
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4933
  call void @llvm.dbg.value(metadata i8* %11, metadata !4921, metadata !DIExpression()), !dbg !4928
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4934
  call void @llvm.dbg.value(metadata i8* %12, metadata !4921, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i32 0, metadata !4926, metadata !DIExpression()), !dbg !4935
  %13 = icmp eq i8 %6, 0, !dbg !4936
  br i1 %13, label %14, label %19, !dbg !4938

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4928
  %16 = ptrtoint i8* %15 to i32, !dbg !4939
  %17 = ptrtoint i8* %0 to i32, !dbg !4939
  %18 = sub i32 %16, %17, !dbg !4939
  ret i32 %18, !dbg !4940

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4926, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %21, metadata !4921, metadata !DIExpression()), !dbg !4928
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4941
  call void @llvm.dbg.value(metadata i8* %22, metadata !4921, metadata !DIExpression()), !dbg !4928
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #25, !dbg !4943
  %24 = add i32 %23, 1, !dbg !4944
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %25, metadata !4921, metadata !DIExpression()), !dbg !4928
  %26 = add nuw nsw i32 %20, 1, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %26, metadata !4926, metadata !DIExpression()), !dbg !4935
  %27 = icmp eq i32 %26, %7, !dbg !4936
  br i1 %27, label %14, label %19, !dbg !4938, !llvm.loop !4947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4949 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4953, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i8* %1, metadata !4954, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i8* %2, metadata !4955, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i16 %3, metadata !4956, metadata !DIExpression()), !dbg !4957
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4958
  br i1 %5, label %6, label %9, !dbg !4960

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4961
  %8 = add i32 %7, 1, !dbg !4963
  br label %20, !dbg !4964

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4965
  br i1 %10, label %13, label %11, !dbg !4966

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4966
  br label %16, !dbg !4966

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4967
  %15 = add i32 %14, 1, !dbg !4968
  br label %16, !dbg !4966

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4966
  %18 = and i32 %17, 65535, !dbg !4969
  call void @llvm.dbg.value(metadata i32 %17, metadata !4956, metadata !DIExpression()), !dbg !4957
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4970
  br label %20, !dbg !4971

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4957
  ret i32 %21, !dbg !4972
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4975, metadata !DIExpression()), !dbg !4976
  ret i32 0, !dbg !4977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !4978 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4982, metadata !DIExpression()), !dbg !4983
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4984
  ret void, !dbg !4985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4986 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4989
  ret i8* %1, !dbg !4990
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4991 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5002, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i8* %0, metadata !5001, metadata !DIExpression()), !dbg !5013
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !5014
  ret void, !dbg !5016
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5021, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i8* %1, metadata !5022, metadata !DIExpression()), !dbg !5023
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5024
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !5024
  ret i32 %4, !dbg !5025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5026 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5033, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5030, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8* %2, metadata !5032, metadata !DIExpression()), !dbg !5034
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !5035
  ret void, !dbg !5036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5037 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5041, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata i32 %1, metadata !5042, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata i32 0, metadata !5043, metadata !DIExpression()), !dbg !5044
  %3 = icmp eq i32 %1, 0, !dbg !5045
  br i1 %3, label %13, label %4, !dbg !5048

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5043, metadata !DIExpression()), !dbg !5044
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5049
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5051
  %8 = load i8, i8* %7, align 1, !dbg !5051
  %9 = zext i8 %8 to i32, !dbg !5051
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !5049
  %11 = add nuw i32 %5, 1, !dbg !5052
  call void @llvm.dbg.value(metadata i32 %11, metadata !5043, metadata !DIExpression()), !dbg !5044
  %12 = icmp eq i32 %11, %1, !dbg !5045
  br i1 %12, label %13, label %4, !dbg !5048, !llvm.loop !5053

13:                                               ; preds = %4, %2
  ret void, !dbg !5055
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5056 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5060, metadata !DIExpression()), !dbg !5062
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5063
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5063
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5061, metadata !DIExpression()), !dbg !5064
  call void @llvm.va_start(i8* nonnull %3), !dbg !5065
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5066
  %5 = load i32, i32* %4, align 4, !dbg !5066
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5066
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5066
  call void @llvm.va_end(i8* nonnull %3), !dbg !5067
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5068
  ret void, !dbg !5068
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5069 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5073, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.value(metadata i32 %1, metadata !5074, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.value(metadata i8* %2, metadata !5075, metadata !DIExpression()), !dbg !5078
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5079
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5079
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5076, metadata !DIExpression()), !dbg !5080
  call void @llvm.va_start(i8* nonnull %5), !dbg !5081
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5082
  %7 = load i32, i32* %6, align 4, !dbg !5082
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5082
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %9, metadata !5077, metadata !DIExpression()), !dbg !5078
  call void @llvm.va_end(i8* nonnull %5), !dbg !5083
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5084
  ret i32 %9, !dbg !5085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5086 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5093, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i8* %0, metadata !5090, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i32 %1, metadata !5091, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i8* %2, metadata !5092, metadata !DIExpression()), !dbg !5100
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5101
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5101
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5094, metadata !DIExpression()), !dbg !5102
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5103
  store i8* %0, i8** %7, align 4, !dbg !5103
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5103
  store i32 %1, i32* %8, align 4, !dbg !5103
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5103
  store i32 0, i32* %9, align 4, !dbg !5103
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !5104
  %10 = load i32, i32* %9, align 4, !dbg !5105
  %11 = load i32, i32* %8, align 4, !dbg !5107
  %12 = icmp slt i32 %10, %11, !dbg !5108
  br i1 %12, label %13, label %15, !dbg !5109

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5110
  store i8 0, i8* %14, align 1, !dbg !5112
  br label %15, !dbg !5113

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5114
  ret i32 %10, !dbg !5115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5121, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5122, metadata !DIExpression()), !dbg !5123
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5124
  %4 = load i8*, i8** %3, align 4, !dbg !5124
  %5 = icmp eq i8* %4, null, !dbg !5126
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5127
  br i1 %5, label %12, label %8, !dbg !5128

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5129
  %10 = load i32, i32* %9, align 4, !dbg !5129
  %11 = icmp slt i32 %7, %10, !dbg !5130
  br i1 %11, label %15, label %12, !dbg !5131

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5132
  %14 = add nsw i32 %7, 1, !dbg !5134
  store i32 %14, i32* %13, align 4, !dbg !5134
  br label %25, !dbg !5135

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5136
  %17 = icmp eq i32 %7, %16, !dbg !5138
  br i1 %17, label %18, label %21, !dbg !5139

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5140
  store i32 %19, i32* %6, align 4, !dbg !5140
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5142
  store i8 0, i8* %20, align 1, !dbg !5143
  br label %25, !dbg !5144

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5145
  %23 = add nsw i32 %7, 1, !dbg !5147
  store i32 %23, i32* %6, align 4, !dbg !5147
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5148
  store i8 %22, i8* %24, align 1, !dbg !5149
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5150
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5151 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5161, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i8* %1, metadata !5162, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i8* %2, metadata !5163, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i8* %3, metadata !5164, metadata !DIExpression()), !dbg !5165
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !5166
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5167
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !5168
  unreachable, !dbg !5169
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5170 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5274
  ret %struct.k_thread* %1, !dbg !5275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5280, metadata !DIExpression()), !dbg !5281
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5282, !srcloc !5284
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5285
  ret void, !dbg !5286
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5287 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5288, !srcloc !5290
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !5291
  ret %struct.k_thread* %1, !dbg !5292
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5293 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5306, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5303, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i8* %1, metadata !5304, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i8* %2, metadata !5305, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %4, metadata !5307, metadata !DIExpression()), !dbg !5432
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5433
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5433
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5308, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i32 0, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i1 undef, metadata !5314, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5432
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5435

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5435

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5436
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5306, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i8* %30, metadata !5305, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %29, metadata !5312, metadata !DIExpression()), !dbg !5432
  %31 = load i8, i8* %30, align 1, !dbg !5437
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5435

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5437
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5438
  call void @llvm.dbg.value(metadata i8* %34, metadata !5305, metadata !DIExpression()), !dbg !5432
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5438
  call void @llvm.dbg.value(metadata i32 %35, metadata !5316, metadata !DIExpression()), !dbg !5439
  %36 = icmp slt i32 %35, 0, !dbg !5440
  %37 = add i32 %29, 1, !dbg !5438
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %36, label %365, label %28, !llvm.loop !5442

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5444
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5321, metadata !DIExpression()), !dbg !5445
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5445
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5364, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5367, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8* %30, metadata !5370, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i32 -1, metadata !5371, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i32 -1, metadata !5372, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8* null, metadata !5373, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8* %14, metadata !5374, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8 0, metadata !5375, metadata !DIExpression()), !dbg !5446
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !5447
  call void @llvm.dbg.value(metadata i8* %39, metadata !5305, metadata !DIExpression()), !dbg !5432
  %40 = load i24, i24* %15, align 8, !dbg !5448
  %41 = and i24 %40, 256, !dbg !5448
  %42 = icmp eq i24 %41, 0, !dbg !5448
  br i1 %42, label %51, label %43, !dbg !5450

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5451
  call void @llvm.dbg.value(metadata i8* %44, metadata !5306, metadata !DIExpression()), !dbg !5432
  %45 = bitcast i8* %27 to i32*, !dbg !5451
  %46 = load i32, i32* %45, align 4, !dbg !5451
  call void @llvm.dbg.value(metadata i32 %46, metadata !5371, metadata !DIExpression()), !dbg !5446
  %47 = icmp slt i32 %46, 0, !dbg !5453
  br i1 %47, label %48, label %56, !dbg !5455

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5456
  store i24 %49, i24* %15, align 8, !dbg !5456
  %50 = sub nsw i32 0, %46, !dbg !5458
  call void @llvm.dbg.value(metadata i32 %50, metadata !5371, metadata !DIExpression()), !dbg !5446
  br label %56, !dbg !5459

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5460
  %53 = icmp eq i24 %52, 0, !dbg !5460
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5462
  br label %56, !dbg !5462

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5463
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5446
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5306, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %58, metadata !5371, metadata !DIExpression()), !dbg !5446
  %60 = and i24 %57, 1024, !dbg !5463
  %61 = icmp eq i24 %60, 0, !dbg !5463
  br i1 %61, label %69, label %62, !dbg !5464

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5465
  call void @llvm.dbg.value(metadata i8* %63, metadata !5306, metadata !DIExpression()), !dbg !5432
  %64 = bitcast i8* %59 to i32*, !dbg !5465
  %65 = load i32, i32* %64, align 4, !dbg !5465
  call void @llvm.dbg.value(metadata i32 %65, metadata !5376, metadata !DIExpression()), !dbg !5466
  %66 = icmp slt i32 %65, 0, !dbg !5467
  br i1 %66, label %67, label %74, !dbg !5469

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5470
  store i24 %68, i24* %15, align 8, !dbg !5470
  br label %74, !dbg !5472

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5473
  %71 = icmp eq i24 %70, 0, !dbg !5473
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5475
  br label %74, !dbg !5475

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5476
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5446
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5446
  call void @llvm.dbg.value(metadata i8* %77, metadata !5306, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %76, metadata !5372, metadata !DIExpression()), !dbg !5446
  store i32 0, i32* %16, align 4, !dbg !5477
  store i32 0, i32* %17, align 8, !dbg !5478
  %78 = lshr i24 %75, 16, !dbg !5476
  call void @llvm.dbg.value(metadata i24 %78, metadata !5379, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5446
  %79 = lshr i24 %75, 11, !dbg !5479
  %80 = and i24 %79, 15, !dbg !5479
  %81 = zext i24 %80 to i32, !dbg !5479
  call void @llvm.dbg.value(metadata i32 %81, metadata !5380, metadata !DIExpression()), !dbg !5446
  %82 = trunc i24 %78 to i3, !dbg !5480
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5480

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5481

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5484
  call void @llvm.dbg.value(metadata i8* %85, metadata !5306, metadata !DIExpression()), !dbg !5432
  %86 = bitcast i8* %77 to i32*, !dbg !5484
  %87 = load i32, i32* %86, align 4, !dbg !5484
  %88 = sext i32 %87 to i64, !dbg !5484
  store i64 %88, i64* %20, align 8, !dbg !5486
  br label %115, !dbg !5487

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5488
  call void @llvm.dbg.value(metadata i8* %90, metadata !5306, metadata !DIExpression()), !dbg !5432
  %91 = bitcast i8* %77 to i32*, !dbg !5488
  %92 = load i32, i32* %91, align 4, !dbg !5488
  %93 = sext i32 %92 to i64, !dbg !5488
  store i64 %93, i64* %20, align 8, !dbg !5491
  br label %115, !dbg !5492

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5493
  %96 = add i32 %95, 7, !dbg !5493
  %97 = and i32 %96, -8, !dbg !5493
  %98 = inttoptr i32 %97 to i8*, !dbg !5493
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5493
  call void @llvm.dbg.value(metadata i8* %99, metadata !5306, metadata !DIExpression()), !dbg !5432
  %100 = inttoptr i32 %97 to i64*, !dbg !5493
  %101 = load i64, i64* %100, align 8, !dbg !5493
  store i64 %101, i64* %20, align 8, !dbg !5494
  br label %115, !dbg !5495

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5496
  %104 = add i32 %103, 7, !dbg !5496
  %105 = and i32 %104, -8, !dbg !5496
  %106 = inttoptr i32 %105 to i8*, !dbg !5496
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5496
  call void @llvm.dbg.value(metadata i8* %107, metadata !5306, metadata !DIExpression()), !dbg !5432
  %108 = inttoptr i32 %105 to i64*, !dbg !5496
  %109 = load i64, i64* %108, align 8, !dbg !5496
  store i64 %109, i64* %20, align 8, !dbg !5497
  br label %115, !dbg !5498

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5499
  call void @llvm.dbg.value(metadata i8* %111, metadata !5306, metadata !DIExpression()), !dbg !5432
  %112 = bitcast i8* %77 to i32*, !dbg !5499
  %113 = load i32, i32* %112, align 4, !dbg !5499
  %114 = sext i32 %113 to i64, !dbg !5500
  store i64 %114, i64* %20, align 8, !dbg !5501
  br label %115, !dbg !5502

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5503
  call void @llvm.dbg.value(metadata i8* %117, metadata !5306, metadata !DIExpression()), !dbg !5432
  %118 = trunc i24 %79 to i4, !dbg !5504
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5504

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5505
  %121 = ashr exact i64 %120, 56, !dbg !5505
  store i64 %121, i64* %20, align 8, !dbg !5508
  br label %177, !dbg !5509

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5510
  %124 = ashr exact i64 %123, 48, !dbg !5510
  store i64 %124, i64* %20, align 8, !dbg !5513
  br label %177, !dbg !5514

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5515

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5518
  call void @llvm.dbg.value(metadata i8* %127, metadata !5306, metadata !DIExpression()), !dbg !5432
  %128 = bitcast i8* %77 to i32*, !dbg !5518
  %129 = load i32, i32* %128, align 4, !dbg !5518
  %130 = zext i32 %129 to i64, !dbg !5518
  store i64 %130, i64* %20, align 8, !dbg !5520
  br label %157, !dbg !5521

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5522
  call void @llvm.dbg.value(metadata i8* %132, metadata !5306, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i8* %132, metadata !5306, metadata !DIExpression()), !dbg !5432
  %133 = bitcast i8* %77 to i32*, !dbg !5522
  %134 = load i32, i32* %133, align 4, !dbg !5522
  %135 = zext i32 %134 to i64, !dbg !5522
  store i64 %135, i64* %20, align 8, !dbg !5522
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5524
  %138 = add i32 %137, 7, !dbg !5524
  %139 = and i32 %138, -8, !dbg !5524
  %140 = inttoptr i32 %139 to i8*, !dbg !5524
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5524
  call void @llvm.dbg.value(metadata i8* %141, metadata !5306, metadata !DIExpression()), !dbg !5432
  %142 = inttoptr i32 %139 to i64*, !dbg !5524
  %143 = load i64, i64* %142, align 8, !dbg !5524
  store i64 %143, i64* %20, align 8, !dbg !5525
  br label %157, !dbg !5526

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5527
  %146 = add i32 %145, 7, !dbg !5527
  %147 = and i32 %146, -8, !dbg !5527
  %148 = inttoptr i32 %147 to i8*, !dbg !5527
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5527
  call void @llvm.dbg.value(metadata i8* %149, metadata !5306, metadata !DIExpression()), !dbg !5432
  %150 = inttoptr i32 %147 to i64*, !dbg !5527
  %151 = load i64, i64* %150, align 8, !dbg !5527
  store i64 %151, i64* %20, align 8, !dbg !5528
  br label %157, !dbg !5529

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5530
  call void @llvm.dbg.value(metadata i8* %153, metadata !5306, metadata !DIExpression()), !dbg !5432
  %154 = bitcast i8* %77 to i32*, !dbg !5530
  %155 = load i32, i32* %154, align 4, !dbg !5530
  %156 = zext i32 %155 to i64, !dbg !5531
  store i64 %156, i64* %20, align 8, !dbg !5532
  br label %157, !dbg !5533

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5534
  call void @llvm.dbg.value(metadata i8* %159, metadata !5306, metadata !DIExpression()), !dbg !5432
  %160 = trunc i24 %79 to i4, !dbg !5535
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5535

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5536
  store i64 %162, i64* %20, align 8, !dbg !5539
  br label %177, !dbg !5540

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5541
  store i64 %164, i64* %20, align 8, !dbg !5544
  br label %177, !dbg !5545

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5546
  %167 = add i32 %166, 7, !dbg !5546
  %168 = and i32 %167, -8, !dbg !5546
  %169 = inttoptr i32 %168 to i8*, !dbg !5546
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5546
  call void @llvm.dbg.value(metadata i8* %170, metadata !5306, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i8* %170, metadata !5306, metadata !DIExpression()), !dbg !5432
  %171 = inttoptr i32 %168 to double*, !dbg !5546
  %172 = load double, double* %171, align 8, !dbg !5546
  store double %172, double* %19, align 8, !dbg !5546
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5550
  call void @llvm.dbg.value(metadata i8* %174, metadata !5306, metadata !DIExpression()), !dbg !5432
  %175 = bitcast i8* %77 to i8**, !dbg !5550
  %176 = load i8*, i8** %175, align 4, !dbg !5550
  store i8* %176, i8** %18, align 8, !dbg !5553
  br label %177, !dbg !5554

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5446
  call void @llvm.dbg.value(metadata i8* %178, metadata !5306, metadata !DIExpression()), !dbg !5432
  %179 = and i24 %75, 3, !dbg !5555
  %180 = icmp eq i24 %179, 0, !dbg !5555
  br i1 %180, label %185, label %181, !dbg !5555

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !5556
  call void @llvm.dbg.value(metadata i32 %182, metadata !5381, metadata !DIExpression()), !dbg !5557
  %183 = icmp slt i32 %182, 0, !dbg !5558
  %184 = add i32 %182, %29, !dbg !5556
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5560
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5561

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5562
  call void @llvm.dbg.value(metadata i32 %188, metadata !5385, metadata !DIExpression()), !dbg !5563
  %189 = icmp slt i32 %188, 0, !dbg !5564
  %190 = add i32 %29, 1, !dbg !5562
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5566
  call void @llvm.dbg.value(metadata i8* %192, metadata !5373, metadata !DIExpression()), !dbg !5446
  %193 = icmp sgt i32 %76, -1, !dbg !5567
  br i1 %193, label %194, label %196, !dbg !5569

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5570
  call void @llvm.dbg.value(metadata i32 %195, metadata !5388, metadata !DIExpression()), !dbg !5572
  br label %241, !dbg !5573

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5574
  call void @llvm.dbg.value(metadata i32 %197, metadata !5388, metadata !DIExpression()), !dbg !5572
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5373, metadata !DIExpression()), !dbg !5446
  %199 = load i64, i64* %20, align 8, !dbg !5576
  %200 = trunc i64 %199 to i8, !dbg !5577
  store i8 %200, i8* %10, align 1, !dbg !5578
  call void @llvm.dbg.value(metadata i8* %23, metadata !5374, metadata !DIExpression()), !dbg !5446
  br label %245, !dbg !5579

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5580
  %203 = icmp eq i24 %202, 0, !dbg !5580
  %204 = trunc i24 %75 to i8, !dbg !5582
  %205 = shl i8 %204, 1, !dbg !5582
  %206 = and i8 %205, 32, !dbg !5582
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5582
  call void @llvm.dbg.value(metadata i8 %207, metadata !5375, metadata !DIExpression()), !dbg !5446
  %208 = load i64, i64* %20, align 8, !dbg !5583
  call void @llvm.dbg.value(metadata i64 %208, metadata !5313, metadata !DIExpression()), !dbg !5432
  %209 = icmp slt i64 %208, 0, !dbg !5584
  br i1 %209, label %210, label %212, !dbg !5586

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5375, metadata !DIExpression()), !dbg !5446
  %211 = sub nsw i64 0, %208, !dbg !5587
  store i64 %211, i64* %20, align 8, !dbg !5589
  br label %212, !dbg !5590

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5446
  call void @llvm.dbg.value(metadata i8 %213, metadata !5375, metadata !DIExpression()), !dbg !5446
  %214 = load i64, i64* %20, align 8, !dbg !5591
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %215, metadata !5373, metadata !DIExpression()), !dbg !5446
  br label %216, !dbg !5593

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5594
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5595
  call void @llvm.dbg.value(metadata i8* %218, metadata !5373, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8 %217, metadata !5375, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.label(metadata !5431), !dbg !5596
  %219 = icmp sgt i32 %76, -1, !dbg !5597
  br i1 %219, label %222, label %220, !dbg !5598

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5599
  br label %245, !dbg !5598

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5601
  %224 = sub i32 %22, %223, !dbg !5601
  call void @llvm.dbg.value(metadata i32 %224, metadata !5390, metadata !DIExpression()), !dbg !5602
  %225 = load i24, i24* %15, align 8, !dbg !5603
  %226 = and i24 %225, -65, !dbg !5603
  store i24 %226, i24* %15, align 8, !dbg !5603
  %227 = icmp ugt i32 %76, %224, !dbg !5604
  br i1 %227, label %228, label %245, !dbg !5606

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5607
  store i32 %229, i32* %16, align 4, !dbg !5609
  br label %245, !dbg !5610

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5611
  %232 = icmp eq i8* %231, null, !dbg !5613
  br i1 %232, label %245, label %233, !dbg !5614

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5615
  %235 = zext i32 %234 to i64, !dbg !5615
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5617
  call void @llvm.dbg.value(metadata i8* %236, metadata !5373, metadata !DIExpression()), !dbg !5446
  %237 = load i24, i24* %15, align 8, !dbg !5618
  %238 = or i24 %237, 1048576, !dbg !5618
  store i24 %238, i24* %15, align 8, !dbg !5618
  store i8 120, i8* %21, align 1, !dbg !5619
  br label %216, !dbg !5620

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5621
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5624
  br label %363, !dbg !5625

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5626
  call void @llvm.dbg.value(metadata i32 %242, metadata !5388, metadata !DIExpression()), !dbg !5572
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5627
  call void @llvm.dbg.value(metadata i32 -1, metadata !5372, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i32 %29, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i8* %192, metadata !5373, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8* %243, metadata !5374, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8 0, metadata !5375, metadata !DIExpression()), !dbg !5446
  %244 = icmp eq i8* %192, null, !dbg !5628
  br i1 %244, label %363, label %245, !dbg !5630, !llvm.loop !5442

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5599
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5446
  call void @llvm.dbg.value(metadata i32 0, metadata !5394, metadata !DIExpression()), !dbg !5446
  %250 = zext i8 %249 to i32, !dbg !5631
  %251 = icmp eq i8 %249, 0, !dbg !5633
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  call void @llvm.dbg.value(metadata i32 undef, metadata !5393, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  call void @llvm.dbg.value(metadata i32 undef, metadata !5393, metadata !DIExpression()), !dbg !5446
  %252 = icmp sgt i32 %58, 0, !dbg !5634
  br i1 %252, label %253, label %302, !dbg !5635

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5599
  %255 = icmp eq i24 %254, 0, !dbg !5599
  %256 = ptrtoint i8* %248 to i32, !dbg !5636
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  %257 = ptrtoint i8* %247 to i32, !dbg !5636
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  %258 = xor i1 %251, true, !dbg !5637
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  %259 = sext i1 %258 to i32, !dbg !5637
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  %260 = lshr i24 %246, 19, !dbg !5638
  %261 = and i24 %260, 1, !dbg !5638
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5638
  %263 = zext i24 %262 to i32, !dbg !5638
  %264 = add i32 %257, %259, !dbg !5638
  %265 = add i32 %256, %263, !dbg !5638
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  %266 = and i24 %246, 4194304, !dbg !5639
  %267 = icmp eq i24 %266, 0, !dbg !5639
  %268 = load i32, i32* %16, align 4, !dbg !5641
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5446
  call void @llvm.dbg.value(metadata i32 undef, metadata !5393, metadata !DIExpression()), !dbg !5446
  %269 = load i32, i32* %17, align 8, !dbg !5642
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5642
  call void @llvm.dbg.value(metadata i32 undef, metadata !5393, metadata !DIExpression()), !dbg !5446
  %271 = add i32 %264, %58, !dbg !5642
  %272 = add i32 %265, %268, !dbg !5642
  %273 = add i32 %272, %270, !dbg !5643
  %274 = sub i32 %271, %273, !dbg !5643
  call void @llvm.dbg.value(metadata i32 %274, metadata !5371, metadata !DIExpression()), !dbg !5446
  %275 = and i24 %246, 4, !dbg !5644
  %276 = icmp eq i24 %275, 0, !dbg !5644
  br i1 %276, label %277, label %302, !dbg !5645

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5395, metadata !DIExpression()), !dbg !5646
  %278 = and i24 %246, 64, !dbg !5647
  %279 = icmp eq i24 %278, 0, !dbg !5647
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5648
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5648
  %282 = select i1 %279, i32 32, i32 48, !dbg !5648
  br i1 %280, label %287, label %283, !dbg !5648

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5649
  call void @llvm.dbg.value(metadata i32 %284, metadata !5400, metadata !DIExpression()), !dbg !5650
  %285 = icmp slt i32 %284, 0, !dbg !5651
  %286 = add i32 %29, 1, !dbg !5649
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5446
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %290, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i8 undef, metadata !5395, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.value(metadata i8 %288, metadata !5375, metadata !DIExpression()), !dbg !5446
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5653
  %292 = add i32 %291, -1, !dbg !5653
  br label %293, !dbg !5653

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5654
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %295, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %294, metadata !5371, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i32 %294, metadata !5371, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5446
  %296 = icmp sgt i32 %294, 0, !dbg !5655
  br i1 %296, label %297, label %302, !dbg !5653

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5656
  call void @llvm.dbg.value(metadata i32 %298, metadata !5371, metadata !DIExpression()), !dbg !5446
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5657
  call void @llvm.dbg.value(metadata i32 %299, metadata !5406, metadata !DIExpression()), !dbg !5658
  %300 = icmp slt i32 %299, 0, !dbg !5659
  %301 = add i32 %295, 1, !dbg !5657
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %300, label %361, label %293, !llvm.loop !5661

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5446
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5446
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %305, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %304, metadata !5371, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i8 %303, metadata !5375, metadata !DIExpression()), !dbg !5446
  %306 = icmp eq i8 %303, 0, !dbg !5663
  br i1 %306, label %312, label %307, !dbg !5664

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5665
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %309, metadata !5409, metadata !DIExpression()), !dbg !5667
  %310 = icmp slt i32 %309, 0, !dbg !5668
  %311 = add i32 %305, 1, !dbg !5666
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %313, metadata !5312, metadata !DIExpression()), !dbg !5432
  %314 = lshr i24 %246, 20, !dbg !5670
  %315 = lshr i24 %246, 19, !dbg !5671
  %316 = or i24 %314, %315, !dbg !5672
  %317 = and i24 %316, 1, !dbg !5672
  %318 = icmp eq i24 %317, 0, !dbg !5672
  br i1 %318, label %323, label %319, !dbg !5673

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5674
  call void @llvm.dbg.value(metadata i32 %320, metadata !5413, metadata !DIExpression()), !dbg !5675
  %321 = icmp slt i32 %320, 0, !dbg !5676
  %322 = add i32 %313, 1, !dbg !5674
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %324, metadata !5312, metadata !DIExpression()), !dbg !5432
  %325 = and i24 %246, 1048576, !dbg !5678
  %326 = icmp eq i24 %325, 0, !dbg !5678
  br i1 %326, label %333, label %327, !dbg !5679

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5680
  %329 = zext i8 %328 to i32, !dbg !5680
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5680
  call void @llvm.dbg.value(metadata i32 %330, metadata !5419, metadata !DIExpression()), !dbg !5681
  %331 = icmp slt i32 %330, 0, !dbg !5682
  %332 = add i32 %324, 1, !dbg !5680
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %334, metadata !5312, metadata !DIExpression()), !dbg !5432
  %335 = load i32, i32* %16, align 4, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %335, metadata !5394, metadata !DIExpression()), !dbg !5446
  br label %336, !dbg !5685

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5686
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %338, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %337, metadata !5394, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5446
  %339 = icmp sgt i32 %337, 0, !dbg !5687
  br i1 %339, label %340, label %345, !dbg !5685

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5688
  call void @llvm.dbg.value(metadata i32 %341, metadata !5394, metadata !DIExpression()), !dbg !5446
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5689
  call void @llvm.dbg.value(metadata i32 %342, metadata !5423, metadata !DIExpression()), !dbg !5690
  %343 = icmp slt i32 %342, 0, !dbg !5691
  %344 = add i32 %338, 1, !dbg !5689
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %343, label %361, label %336, !llvm.loop !5693

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5695
  call void @llvm.dbg.value(metadata i32 %346, metadata !5426, metadata !DIExpression()), !dbg !5696
  %347 = icmp slt i32 %346, 0, !dbg !5697
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5695
  call void @llvm.dbg.value(metadata i32 %349, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %304, metadata !5371, metadata !DIExpression()), !dbg !5446
  %350 = icmp sgt i32 %304, 0, !dbg !5699
  br i1 %350, label %351, label %363, !dbg !5700

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5700
  %353 = add i32 %352, %338, !dbg !5700
  br label %354, !dbg !5700

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %355, metadata !5371, metadata !DIExpression()), !dbg !5446
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5701
  call void @llvm.dbg.value(metadata i32 %356, metadata !5428, metadata !DIExpression()), !dbg !5702
  %357 = icmp slt i32 %356, 0, !dbg !5703
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5705
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %359, metadata !5371, metadata !DIExpression()), !dbg !5446
  %360 = icmp sgt i32 %355, 1, !dbg !5699
  br i1 %360, label %354, label %363, !dbg !5700, !llvm.loop !5706

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5443
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %364, metadata !5312, metadata !DIExpression()), !dbg !5432
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5443
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5432
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5708
  ret i32 %366, !dbg !5708
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5709 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5713, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %1, metadata !5714, metadata !DIExpression()), !dbg !5715
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5716
  store i24 0, i24* %3, align 4, !dbg !5716
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5716
  store i8 0, i8* %4, align 1, !dbg !5716
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5716
  store i32 0, i32* %5, align 4, !dbg !5716
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5716
  store i32 0, i32* %6, align 4, !dbg !5716
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5717
  call void @llvm.dbg.value(metadata i8* %7, metadata !5714, metadata !DIExpression()), !dbg !5715
  %8 = load i8, i8* %7, align 1, !dbg !5718
  %9 = icmp eq i8 %8, 37, !dbg !5720
  br i1 %9, label %10, label %12, !dbg !5721

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5722
  call void @llvm.dbg.value(metadata i8* %11, metadata !5714, metadata !DIExpression()), !dbg !5715
  store i8 37, i8* %4, align 1, !dbg !5724
  br label %18, !dbg !5725

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5726
  call void @llvm.dbg.value(metadata i8* %13, metadata !5714, metadata !DIExpression()), !dbg !5715
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5727
  call void @llvm.dbg.value(metadata i8* %14, metadata !5714, metadata !DIExpression()), !dbg !5715
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5728
  call void @llvm.dbg.value(metadata i8* %15, metadata !5714, metadata !DIExpression()), !dbg !5715
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5729
  call void @llvm.dbg.value(metadata i8* %16, metadata !5714, metadata !DIExpression()), !dbg !5715
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5730
  call void @llvm.dbg.value(metadata i8* %17, metadata !5714, metadata !DIExpression()), !dbg !5715
  br label %18, !dbg !5731

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5715
  ret i8* %19, !dbg !5732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5733 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5737, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i8* %1, metadata !5738, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i8* %2, metadata !5739, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i8* %3, metadata !5740, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i32 0, metadata !5741, metadata !DIExpression()), !dbg !5744
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5745

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5746
  call void @llvm.dbg.value(metadata i32 %9, metadata !5741, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i8* %8, metadata !5739, metadata !DIExpression()), !dbg !5744
  %10 = icmp ult i8* %8, %3, !dbg !5747
  br i1 %10, label %11, label %13, !dbg !5748

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5749
  br label %17, !dbg !5748

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5750

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5751
  %16 = icmp eq i8 %15, 0, !dbg !5750
  br i1 %16, label %24, label %17, !dbg !5745

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5749
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5752
  call void @llvm.dbg.value(metadata i8* %19, metadata !5739, metadata !DIExpression()), !dbg !5744
  %20 = zext i8 %18 to i32, !dbg !5753
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5754
  call void @llvm.dbg.value(metadata i32 %21, metadata !5742, metadata !DIExpression()), !dbg !5755
  %22 = icmp slt i32 %21, 0, !dbg !5756
  %23 = add i32 %9, 1, !dbg !5758
  call void @llvm.dbg.value(metadata i32 undef, metadata !5741, metadata !DIExpression()), !dbg !5744
  br i1 %22, label %24, label %7, !llvm.loop !5759

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5744
  ret i32 %25, !dbg !5761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5762 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5766, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5767, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.value(metadata i8* %2, metadata !5768, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.value(metadata i8* %3, metadata !5769, metadata !DIExpression()), !dbg !5776
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5777
  %6 = load i8, i8* %5, align 1, !dbg !5777
  %7 = zext i8 %6 to i32, !dbg !5778
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5779
  %9 = icmp eq i32 %8, 0, !dbg !5779
  call void @llvm.dbg.value(metadata i1 %9, metadata !5770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5776
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %10, metadata !5771, metadata !DIExpression()), !dbg !5776
  %11 = ptrtoint i8* %3 to i32, !dbg !5781
  %12 = ptrtoint i8* %2 to i32, !dbg !5781
  %13 = sub i32 %11, %12, !dbg !5781
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5782
  call void @llvm.dbg.value(metadata i8* %14, metadata !5773, metadata !DIExpression()), !dbg !5776
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5783

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5776
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5766, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.value(metadata i8* %18, metadata !5773, metadata !DIExpression()), !dbg !5776
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5784
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5785
  call void @llvm.dbg.value(metadata i32 %25, metadata !5774, metadata !DIExpression()), !dbg !5786
  %26 = icmp ult i32 %25, 10, !dbg !5787
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5788
  %28 = add i32 %27, %25, !dbg !5786
  %29 = trunc i32 %28 to i8, !dbg !5788
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5789
  call void @llvm.dbg.value(metadata i8* %30, metadata !5773, metadata !DIExpression()), !dbg !5776
  store i8 %29, i8* %30, align 1, !dbg !5790
  call void @llvm.dbg.value(metadata i64 %22, metadata !5766, metadata !DIExpression()), !dbg !5776
  %31 = icmp uge i64 %19, %15, !dbg !5791
  %32 = icmp ugt i8* %30, %2, !dbg !5792
  %33 = and i1 %31, %32, !dbg !5792
  br i1 %33, label %17, label %34, !dbg !5793, !llvm.loop !5794

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5796
  %36 = load i24, i24* %35, align 4, !dbg !5796
  %37 = and i24 %36, 32, !dbg !5796
  %38 = icmp eq i24 %37, 0, !dbg !5796
  br i1 %38, label %44, label %39, !dbg !5798

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5799

40:                                               ; preds = %39
  br label %41, !dbg !5801

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5805
  store i24 %43, i24* %35, align 4, !dbg !5805
  br label %44, !dbg !5806

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5807 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5813, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i8* %1, metadata !5814, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %2, metadata !5815, metadata !DIExpression()), !dbg !5816
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5817
  %5 = load i24, i24* %4, align 4, !dbg !5817
  %6 = lshr i24 %5, 11, !dbg !5817
  %7 = and i24 %6, 15, !dbg !5817
  %8 = zext i24 %7 to i32, !dbg !5817
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5818

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5819
  store i32 %2, i32* %10, align 4, !dbg !5821
  br label %28, !dbg !5822

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5823
  store i8 %12, i8* %1, align 1, !dbg !5824
  br label %28, !dbg !5825

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5826
  %15 = bitcast i8* %1 to i16*, !dbg !5827
  store i16 %14, i16* %15, align 2, !dbg !5828
  br label %28, !dbg !5829

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5830
  store i32 %2, i32* %17, align 4, !dbg !5831
  br label %28, !dbg !5832

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5833
  %20 = bitcast i8* %1 to i64*, !dbg !5834
  store i64 %19, i64* %20, align 8, !dbg !5835
  br label %28, !dbg !5836

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5837
  %23 = bitcast i8* %1 to i64*, !dbg !5838
  store i64 %22, i64* %23, align 8, !dbg !5839
  br label %28, !dbg !5840

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5841
  store i32 %2, i32* %25, align 4, !dbg !5842
  br label %28, !dbg !5843

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5844
  store i32 %2, i32* %27, align 4, !dbg !5845
  br label %28, !dbg !5846

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5847
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5851, metadata !DIExpression()), !dbg !5852
  %2 = add i32 %0, -65, !dbg !5853
  %3 = icmp ult i32 %2, 26, !dbg !5854
  %4 = zext i1 %3 to i32, !dbg !5854
  ret i32 %4, !dbg !5855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5856 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5860, metadata !DIExpression()), !dbg !5861
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5862

2:                                                ; preds = %1
  br label %4, !dbg !5863

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5865

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5866
  ret i32 %5, !dbg !5867
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5868 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5870, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %1, metadata !5871, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8 1, metadata !5872, metadata !DIExpression()), !dbg !5873
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5874

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %5, metadata !5871, metadata !DIExpression()), !dbg !5873
  %6 = load i8, i8* %5, align 1, !dbg !5875
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5877

7:                                                ; preds = %4
  br label %11, !dbg !5878

8:                                                ; preds = %4
  br label %11, !dbg !5880

9:                                                ; preds = %4
  br label %11, !dbg !5881

10:                                               ; preds = %4
  br label %11, !dbg !5882

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5883
  %14 = or i24 %13, %12, !dbg !5883
  store i24 %14, i24* %3, align 4, !dbg !5883
  call void @llvm.dbg.value(metadata i8 poison, metadata !5872, metadata !DIExpression()), !dbg !5873
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5871, metadata !DIExpression()), !dbg !5873
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %15, metadata !5871, metadata !DIExpression()), !dbg !5873
  %17 = load i24, i24* %3, align 4, !dbg !5884
  %18 = and i24 %17, 68, !dbg !5886
  %19 = icmp eq i24 %18, 68, !dbg !5886
  br i1 %19, label %20, label %22, !dbg !5886

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5887
  store i24 %21, i24* %3, align 4, !dbg !5887
  br label %22, !dbg !5889

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5890
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5891 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5893, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8* %1, metadata !5894, metadata !DIExpression()), !dbg !5897
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5898
  %5 = load i24, i24* %4, align 4, !dbg !5899
  %6 = or i24 %5, 128, !dbg !5899
  store i24 %6, i24* %4, align 4, !dbg !5899
  call void @llvm.dbg.value(metadata i8* %1, metadata !5894, metadata !DIExpression()), !dbg !5897
  %7 = load i8, i8* %1, align 1, !dbg !5900
  %8 = icmp eq i8 %7, 42, !dbg !5902
  br i1 %8, label %9, label %12, !dbg !5903

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5904
  store i24 %10, i24* %4, align 4, !dbg !5904
  call void @llvm.dbg.value(metadata i8* %1, metadata !5894, metadata !DIExpression()), !dbg !5897
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5906
  call void @llvm.dbg.value(metadata i8* %11, metadata !5894, metadata !DIExpression()), !dbg !5897
  store i8* %11, i8** %3, align 4, !dbg !5906
  br label %29, !dbg !5907

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5895, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8** %3, metadata !5894, metadata !DIExpression(DW_OP_deref)), !dbg !5897
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5908
  call void @llvm.dbg.value(metadata i32 %13, metadata !5896, metadata !DIExpression()), !dbg !5897
  %14 = load i8*, i8** %3, align 4, !dbg !5909
  call void @llvm.dbg.value(metadata i8* %14, metadata !5894, metadata !DIExpression()), !dbg !5897
  %15 = icmp eq i8* %14, %1, !dbg !5911
  br i1 %15, label %29, label %16, !dbg !5912

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5913
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5915
  store i32 %13, i32* %18, align 4, !dbg !5916
  %19 = lshr i32 %13, 31, !dbg !5917
  %20 = lshr i24 %17, 1, !dbg !5918
  %21 = and i24 %20, 1, !dbg !5918
  %22 = zext i24 %21 to i32, !dbg !5918
  %23 = or i32 %19, %22, !dbg !5918
  %24 = trunc i32 %23 to i24, !dbg !5918
  %25 = shl nuw nsw i24 %24, 1, !dbg !5918
  %26 = and i24 %17, -131, !dbg !5918
  %27 = or i24 %26, 128, !dbg !5918
  %28 = or i24 %25, %27, !dbg !5918
  store i24 %28, i24* %4, align 4, !dbg !5918
  br label %29, !dbg !5919

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5897
  ret i8* %30, !dbg !5920
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5921 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5923, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.value(metadata i8* %1, metadata !5924, metadata !DIExpression()), !dbg !5926
  %4 = load i8, i8* %1, align 1, !dbg !5927
  %5 = icmp eq i8 %4, 46, !dbg !5928
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5929
  %7 = load i24, i24* %6, align 4, !dbg !5930
  %8 = select i1 %5, i24 512, i24 0, !dbg !5930
  %9 = and i24 %7, -513, !dbg !5930
  %10 = or i24 %9, %8, !dbg !5930
  store i24 %10, i24* %6, align 4, !dbg !5930
  br i1 %5, label %11, label %32, !dbg !5931

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5924, metadata !DIExpression()), !dbg !5926
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5932
  call void @llvm.dbg.value(metadata i8* %12, metadata !5924, metadata !DIExpression()), !dbg !5926
  store i8* %12, i8** %3, align 4, !dbg !5932
  %13 = load i8, i8* %12, align 1, !dbg !5933
  %14 = icmp eq i8 %13, 42, !dbg !5935
  br i1 %14, label %15, label %18, !dbg !5936

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5937
  store i24 %16, i24* %6, align 4, !dbg !5937
  call void @llvm.dbg.value(metadata i8* %12, metadata !5924, metadata !DIExpression()), !dbg !5926
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5939
  call void @llvm.dbg.value(metadata i8* %17, metadata !5924, metadata !DIExpression()), !dbg !5926
  store i8* %17, i8** %3, align 4, !dbg !5939
  br label %32, !dbg !5940

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5924, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %19, metadata !5925, metadata !DIExpression()), !dbg !5926
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5942
  store i32 %19, i32* %20, align 4, !dbg !5943
  %21 = lshr i32 %19, 31, !dbg !5944
  %22 = load i24, i24* %6, align 4, !dbg !5945
  %23 = lshr i24 %22, 1, !dbg !5945
  %24 = and i24 %23, 1, !dbg !5945
  %25 = zext i24 %24 to i32, !dbg !5945
  %26 = or i32 %21, %25, !dbg !5945
  %27 = trunc i32 %26 to i24, !dbg !5945
  %28 = shl nuw nsw i24 %27, 1, !dbg !5945
  %29 = and i24 %22, -3, !dbg !5945
  %30 = or i24 %28, %29, !dbg !5945
  store i24 %30, i24* %6, align 4, !dbg !5945
  %31 = load i8*, i8** %3, align 4, !dbg !5946
  call void @llvm.dbg.value(metadata i8* %31, metadata !5924, metadata !DIExpression()), !dbg !5926
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5926
  ret i8* %33, !dbg !5947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5948 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5950, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.value(metadata i8* %1, metadata !5951, metadata !DIExpression()), !dbg !5952
  %3 = load i8, i8* %1, align 1, !dbg !5953
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5954

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5955
  call void @llvm.dbg.value(metadata i8* %5, metadata !5951, metadata !DIExpression()), !dbg !5952
  %6 = load i8, i8* %5, align 1, !dbg !5958
  %7 = icmp eq i8 %6, 104, !dbg !5959
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5960
  %9 = load i24, i24* %8, align 4, !dbg !5960
  %10 = and i24 %9, -30721, !dbg !5960
  br i1 %7, label %11, label %14, !dbg !5961

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5962
  store i24 %12, i24* %8, align 4, !dbg !5962
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5964
  call void @llvm.dbg.value(metadata i8* %13, metadata !5951, metadata !DIExpression()), !dbg !5952
  br label %56, !dbg !5965

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5966
  store i24 %15, i24* %8, align 4, !dbg !5966
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5968
  call void @llvm.dbg.value(metadata i8* %17, metadata !5951, metadata !DIExpression()), !dbg !5952
  %18 = load i8, i8* %17, align 1, !dbg !5970
  %19 = icmp eq i8 %18, 108, !dbg !5971
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5972
  %21 = load i24, i24* %20, align 4, !dbg !5972
  %22 = and i24 %21, -30721, !dbg !5972
  br i1 %19, label %23, label %26, !dbg !5973

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5974
  store i24 %24, i24* %20, align 4, !dbg !5974
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5976
  call void @llvm.dbg.value(metadata i8* %25, metadata !5951, metadata !DIExpression()), !dbg !5952
  br label %56, !dbg !5977

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5978
  store i24 %27, i24* %20, align 4, !dbg !5978
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5980
  %30 = load i24, i24* %29, align 4, !dbg !5981
  %31 = and i24 %30, -30721, !dbg !5981
  %32 = or i24 %31, 10240, !dbg !5981
  store i24 %32, i24* %29, align 4, !dbg !5981
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5982
  call void @llvm.dbg.value(metadata i8* %33, metadata !5951, metadata !DIExpression()), !dbg !5952
  br label %56, !dbg !5983

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5984
  %36 = load i24, i24* %35, align 4, !dbg !5985
  %37 = and i24 %36, -30721, !dbg !5985
  %38 = or i24 %37, 12288, !dbg !5985
  store i24 %38, i24* %35, align 4, !dbg !5985
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5986
  call void @llvm.dbg.value(metadata i8* %39, metadata !5951, metadata !DIExpression()), !dbg !5952
  br label %56, !dbg !5987

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5988
  %42 = load i24, i24* %41, align 4, !dbg !5989
  %43 = and i24 %42, -30721, !dbg !5989
  %44 = or i24 %43, 14336, !dbg !5989
  store i24 %44, i24* %41, align 4, !dbg !5989
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5990
  call void @llvm.dbg.value(metadata i8* %45, metadata !5951, metadata !DIExpression()), !dbg !5952
  br label %56, !dbg !5991

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5992
  %48 = load i24, i24* %47, align 4, !dbg !5993
  %49 = and i24 %48, -30723, !dbg !5993
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5994
  call void @llvm.dbg.value(metadata i8* %50, metadata !5951, metadata !DIExpression()), !dbg !5952
  %51 = or i24 %49, 16386, !dbg !5995
  store i24 %51, i24* %47, align 4, !dbg !5995
  br label %56, !dbg !5996

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5997
  %54 = load i24, i24* %53, align 4, !dbg !5998
  %55 = and i24 %54, -30721, !dbg !5998
  store i24 %55, i24* %53, align 4, !dbg !5998
  br label %56, !dbg !5999

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5951, metadata !DIExpression()), !dbg !5952
  ret i8* %57, !dbg !6000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6001 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6003, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8* %1, metadata !6004, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8 0, metadata !6005, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8* %1, metadata !6004, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6008
  %3 = load i8, i8* %1, align 1, !dbg !6009
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6010
  store i8 %3, i8* %4, align 1, !dbg !6011
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6012

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6013

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6014
  %9 = load i24, i24* %8, align 4, !dbg !6014
  %10 = and i24 %9, -458753, !dbg !6014
  %11 = or i24 %10, %7, !dbg !6014
  call void @llvm.dbg.label(metadata !6006), !dbg !6015
  %12 = and i24 %9, 30720, !dbg !6016
  %13 = icmp eq i24 %12, 16384, !dbg !6016
  %14 = zext i1 %13 to i24, !dbg !6018
  %15 = or i24 %11, %14, !dbg !6018
  %16 = icmp eq i8 %3, 99, !dbg !6019
  br i1 %16, label %17, label %43, !dbg !6021

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6022
  %19 = icmp ne i24 %18, 0, !dbg !6022
  call void @llvm.dbg.value(metadata i1 %19, metadata !6005, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6008
  br label %43, !dbg !6024

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6025
  %22 = load i24, i24* %21, align 4, !dbg !6026
  %23 = and i24 %22, -458753, !dbg !6026
  %24 = or i24 %23, 262144, !dbg !6026
  call void @llvm.dbg.value(metadata i8 1, metadata !6005, metadata !DIExpression()), !dbg !6008
  br label %43, !dbg !6027

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6030
  %27 = load i24, i24* %26, align 4, !dbg !6031
  %28 = and i24 %27, -458753, !dbg !6031
  %29 = or i24 %28, 196608, !dbg !6031
  %30 = and i24 %27, 30720, !dbg !6032
  %31 = icmp eq i24 %30, 16384, !dbg !6032
  br label %43, !dbg !6034

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6035
  %34 = load i24, i24* %33, align 4, !dbg !6036
  %35 = and i24 %34, -458753, !dbg !6036
  %36 = or i24 %35, 196608, !dbg !6036
  %37 = and i24 %34, 30720, !dbg !6037
  %38 = icmp ne i24 %37, 0, !dbg !6037
  br label %43, !dbg !6039

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6040
  %41 = load i24, i24* %40, align 4, !dbg !6041
  %42 = or i24 %41, 1, !dbg !6041
  br label %43, !dbg !6042

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6043
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6044
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6045
  call void @llvm.dbg.value(metadata i8* %48, metadata !6004, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8 poison, metadata !6005, metadata !DIExpression()), !dbg !6008
  %49 = lshr i24 %44, 1, !dbg !6043
  %50 = and i24 %49, 1, !dbg !6043
  %51 = zext i24 %50 to i32, !dbg !6043
  %52 = or i32 %51, %47, !dbg !6043
  %53 = trunc i32 %52 to i24, !dbg !6043
  %54 = shl nuw nsw i24 %53, 1, !dbg !6043
  %55 = and i24 %44, -3, !dbg !6043
  %56 = or i24 %54, %55, !dbg !6043
  store i24 %56, i24* %46, align 4, !dbg !6043
  ret i8* %48, !dbg !6046
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6047 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6051, metadata !DIExpression()), !dbg !6054
  %2 = load i8*, i8** %0, align 4, !dbg !6055
  call void @llvm.dbg.value(metadata i8* %2, metadata !6052, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 0, metadata !6053, metadata !DIExpression()), !dbg !6054
  %3 = load i8, i8* %2, align 1, !dbg !6056
  %4 = zext i8 %3 to i32, !dbg !6057
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !6058
  %6 = icmp eq i32 %5, 0, !dbg !6059
  br i1 %6, label %19, label %7, !dbg !6059

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6053, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8* %10, metadata !6052, metadata !DIExpression()), !dbg !6054
  %11 = mul i32 %9, 10, !dbg !6060
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6062
  call void @llvm.dbg.value(metadata i8* %12, metadata !6052, metadata !DIExpression()), !dbg !6054
  %13 = add i32 %11, -48, !dbg !6063
  %14 = add i32 %13, %8, !dbg !6064
  call void @llvm.dbg.value(metadata i32 %14, metadata !6053, metadata !DIExpression()), !dbg !6054
  %15 = load i8, i8* %12, align 1, !dbg !6056
  %16 = zext i8 %15 to i32, !dbg !6057
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !6058
  %18 = icmp eq i32 %17, 0, !dbg !6059
  br i1 %18, label %19, label %7, !dbg !6059, !llvm.loop !6065

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6054
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6054
  store i8* %20, i8** %0, align 4, !dbg !6067
  ret i32 %21, !dbg !6068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6071, metadata !DIExpression()), !dbg !6072
  %2 = add i32 %0, -48, !dbg !6073
  %3 = icmp ult i32 %2, 10, !dbg !6074
  %4 = zext i1 %3 to i32, !dbg !6074
  ret i32 %4, !dbg !6075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6076 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_VND_SENSOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,%object", ""() #23, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,4\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_RTIO\0A\09.equ\09CONFIG_RTIO,1\0A\09.type\09CONFIG_RTIO,%object", ""() #23, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_SIMPLE\0A\09.equ\09CONFIG_RTIO_EXECUTOR_SIMPLE,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_SIMPLE,%object", ""() #23, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_CONCURRENT\0A\09.equ\09CONFIG_RTIO_EXECUTOR_CONCURRENT,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_CONCURRENT,%object", ""() #23, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_RTIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL,3\0A\09.type\09CONFIG_RTIO_LOG_LEVEL,%object", ""() #23, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6704, !srcloc !6705
  ret void, !dbg !6706
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6707 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6709, metadata !DIExpression()), !dbg !6711
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6712
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6713
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6714, !srcloc !6720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6714
  call void @llvm.dbg.value(metadata i32 %3, metadata !6717, metadata !DIExpression()) #23, !dbg !6721
  call void @llvm.dbg.value(metadata i32 undef, metadata !6718, metadata !DIExpression()) #23, !dbg !6721
  call void @llvm.dbg.value(metadata i32 %3, metadata !6710, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i32 %3, metadata !6722, metadata !DIExpression()) #23, !dbg !6725
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6727, !srcloc !6728
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6729
  ret i32 0, !dbg !6730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6731 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6733
  %2 = or i32 %1, 512, !dbg !6733
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6733
  ret void, !dbg !6734
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6735 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6736
  %2 = or i32 %1, 1024, !dbg !6736
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6736
  ret void, !dbg !6737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6738 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6740, metadata !DIExpression()), !dbg !6741
  ret i32 0, !dbg !6742
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6743 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6746, metadata !DIExpression()), !dbg !6754
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6755
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6755
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6747, metadata !DIExpression()), !dbg !6756
  call void @llvm.va_start(i8* nonnull %3), !dbg !6757
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6758
  %5 = load i32, i32* %4, align 4, !dbg !6758
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6758
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6758
  call void @llvm.va_end(i8* nonnull %3), !dbg !6759
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6760
  ret void, !dbg !6760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6761 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6766, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i8* %0, metadata !6765, metadata !DIExpression()), !dbg !6767
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6768
  ret void, !dbg !6769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6774, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %1, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %2, metadata !6776, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %1, metadata !6777, metadata !DIExpression()), !dbg !6778
  %4 = icmp eq i32 %2, 0, !dbg !6779
  br i1 %4, label %14, label %5, !dbg !6780

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) #24, !dbg !6778
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6780

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6777, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %10, metadata !6776, metadata !DIExpression()), !dbg !6778
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 noundef %7) #25, !dbg !6781
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6783
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6784
  call void @llvm.dbg.value(metadata i32 %11, metadata !6776, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %12, metadata !6777, metadata !DIExpression()), !dbg !6778
  br i1 %13, label %14, label %8, !dbg !6784, !llvm.loop !6785

14:                                               ; preds = %8, %3
  ret void, !dbg !6787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) unnamed_addr #4 !dbg !6788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6790, metadata !DIExpression()), !dbg !6791
  %2 = add i32 %0, -1, !dbg !6792
  %3 = icmp ult i32 %2, 4, !dbg !6792
  %4 = shl i32 %2, 3, !dbg !6792
  %5 = lshr i32 1145657157, %4, !dbg !6792
  %6 = trunc i32 %5 to i8, !dbg !6792
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6792
  ret i8 %7, !dbg !6793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6794 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6798, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i32 %1, metadata !6799, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i32 0, metadata !6800, metadata !DIExpression()), !dbg !6810
  br label %4, !dbg !6811

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.37, i32 0, i32 0)) #25, !dbg !6812
  call void @llvm.dbg.value(metadata i32 0, metadata !6802, metadata !DIExpression()), !dbg !6813
  br label %16, !dbg !6814

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6800, metadata !DIExpression()), !dbg !6810
  %6 = icmp ult i32 %5, %1, !dbg !6815
  br i1 %6, label %7, label %11, !dbg !6819

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6820
  %9 = load i8, i8* %8, align 1, !dbg !6820
  %10 = zext i8 %9 to i32, !dbg !6822
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef %10) #25, !dbg !6823
  br label %12, !dbg !6824

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.39, i32 0, i32 0)) #25, !dbg !6825
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6827
  call void @llvm.dbg.value(metadata i32 %13, metadata !6800, metadata !DIExpression()), !dbg !6810
  %14 = icmp eq i32 %13, 8, !dbg !6828
  br i1 %14, label %3, label %4, !dbg !6811, !llvm.loop !6829

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.40, i32 0, i32 0)) #25, !dbg !6831
  ret void, !dbg !6832

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6802, metadata !DIExpression()), !dbg !6813
  %18 = icmp ult i32 %17, %1, !dbg !6833
  br i1 %18, label %19, label %26, !dbg !6834

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6835
  %21 = load i8, i8* %20, align 1, !dbg !6835
  call void @llvm.dbg.value(metadata i8 %21, metadata !6804, metadata !DIExpression()), !dbg !6836
  %22 = zext i8 %21 to i32, !dbg !6837
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6838
  %24 = icmp eq i32 %23, 0, !dbg !6839
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6838
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.41, i32 0, i32 0), i32 noundef %25) #25, !dbg !6840
  br label %27, !dbg !6841

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.42, i32 0, i32 0)) #25, !dbg !6842
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6844
  call void @llvm.dbg.value(metadata i32 %28, metadata !6802, metadata !DIExpression()), !dbg !6813
  %29 = icmp eq i32 %28, 8, !dbg !6845
  br i1 %29, label %15, label %16, !dbg !6814, !llvm.loop !6846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6850, metadata !DIExpression()), !dbg !6851
  %2 = add i32 %0, -32, !dbg !6852
  %3 = icmp ult i32 %2, 95, !dbg !6852
  %4 = zext i1 %3 to i32, !dbg !6852
  ret i32 %4, !dbg !6853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6903, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6904, metadata !DIExpression()), !dbg !6905
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6906
  br i1 %3, label %5, label %4, !dbg !6908

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6909
  br label %5, !dbg !6911

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6912
  ret void, !dbg !6913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6914 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6918, metadata !DIExpression()), !dbg !6919
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6920
  %3 = load i32, i32* %2, align 4, !dbg !6920
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6920
  %5 = load i32, i32* %4, align 4, !dbg !6920
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6920
  %7 = load i32, i32* %6, align 4, !dbg !6920
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6920
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6925
  %9 = load i32, i32* %8, align 4, !dbg !6925
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6925
  %11 = load i32, i32* %10, align 4, !dbg !6925
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6925
  %13 = load i32, i32* %12, align 4, !dbg !6925
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.44, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6925
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6930
  %15 = load i32, i32* %14, align 4, !dbg !6930
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6930
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6935
  %17 = load i32, i32* %16, align 4, !dbg !6935
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.46, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6935
  ret void, !dbg !6940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6941 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6958, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6959, metadata !DIExpression()), !dbg !6961
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6962
  %4 = load i32, i32* %3, align 4, !dbg !6962
  call void @llvm.dbg.value(metadata i32 %4, metadata !6960, metadata !DIExpression()), !dbg !6961
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6963
  ret void, !dbg !6964
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6965 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6969, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i8* %0, metadata !6970, metadata !DIExpression()), !dbg !6972
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6973
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6973
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6971, metadata !DIExpression()), !dbg !6974
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6974
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6975
  %5 = bitcast i8* %4 to i32*, !dbg !6975
  %6 = load i32, i32* %5, align 4, !dbg !6975
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6976
  store i32 %6, i32* %7, align 4, !dbg !6977
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6978
  unreachable, !dbg !6979
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6983, metadata !DIExpression()), !dbg !6984
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6985
  ret void, !dbg !6986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6991, metadata !DIExpression()), !dbg !6992
  %2 = icmp sgt i32 %0, -1, !dbg !6993
  br i1 %2, label %3, label %8, !dbg !6995

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6996, !srcloc !6998
  %4 = and i32 %0, 31, !dbg !6999
  %5 = shl nuw i32 1, %4, !dbg !7000
  %6 = lshr i32 %0, 5, !dbg !7001
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7002
  store volatile i32 %5, i32* %7, align 4, !dbg !7003
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7004, !srcloc !7005
  br label %8, !dbg !7006

8:                                                ; preds = %3, %1
  ret void, !dbg !7007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7010, metadata !DIExpression()), !dbg !7011
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !7012
  ret void, !dbg !7013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7016, metadata !DIExpression()), !dbg !7017
  %2 = icmp sgt i32 %0, -1, !dbg !7018
  br i1 %2, label %3, label %8, !dbg !7020

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7021
  %5 = shl nuw i32 1, %4, !dbg !7023
  %6 = lshr i32 %0, 5, !dbg !7024
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7025
  store volatile i32 %5, i32* %7, align 4, !dbg !7026
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7027, !srcloc !7031
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7032, !srcloc !7035
  br label %8, !dbg !7036

8:                                                ; preds = %3, %1
  ret void, !dbg !7037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !7038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7042, metadata !DIExpression()), !dbg !7043
  %2 = lshr i32 %0, 5, !dbg !7044
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7045
  %4 = load volatile i32, i32* %3, align 4, !dbg !7045
  %5 = and i32 %0, 31, !dbg !7046
  %6 = shl nuw i32 1, %5, !dbg !7046
  %7 = and i32 %4, %6, !dbg !7047
  ret i32 %7, !dbg !7048
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7053, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i32 %1, metadata !7054, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i32 %2, metadata !7055, metadata !DIExpression()), !dbg !7056
  %4 = add i32 %1, 1, !dbg !7057
  call void @llvm.dbg.value(metadata i32 %4, metadata !7054, metadata !DIExpression()), !dbg !7056
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !7060
  ret void, !dbg !7061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7066, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.value(metadata i32 %1, metadata !7067, metadata !DIExpression()), !dbg !7068
  %3 = trunc i32 %1 to i8, !dbg !7069
  %4 = shl i8 %3, 4, !dbg !7069
  %5 = and i32 %0, 15, !dbg !7071
  %6 = add nsw i32 %5, -4, !dbg !7071
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7071
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7071
  %9 = icmp slt i32 %0, 0, !dbg !7071
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7071
  store volatile i8 %4, i8* %10, align 1, !dbg !7069
  ret void, !dbg !7072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7073 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7075, metadata !DIExpression()), !dbg !7076
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7077
  ret void, !dbg !7078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7079 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7081
  tail call void @z_arm_int_exit() #25, !dbg !7082
  ret void, !dbg !7083
}

; Function Attrs: optsize
declare !dbg !7084 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7085 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7087 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !7089
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !7090
  tail call void @z_bss_zero() #25, !dbg !7091
  tail call void @z_data_copy() #25, !dbg !7092
  tail call void @z_arm_interrupt_init() #25, !dbg !7093
  tail call void @z_cstart() #27, !dbg !7094
  unreachable, !dbg !7094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7095 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7096
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7097, !srcloc !7100
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7101, !srcloc !7104
  ret void, !dbg !7105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7106 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7107
  %2 = and i32 %1, -15728641, !dbg !7107
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7107
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7108, !srcloc !7115
  call void @llvm.dbg.value(metadata i32 %3, metadata !7113, metadata !DIExpression()) #23, !dbg !7116
  %4 = and i32 %3, -5, !dbg !7117
  call void @llvm.dbg.value(metadata i32 %4, metadata !7118, metadata !DIExpression()) #23, !dbg !7123
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7127, !srcloc !7104
  ret void, !dbg !7129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7133, metadata !DIExpression()), !dbg !7134
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7135
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7136
  store i32 %0, i32* %3, align 4, !dbg !7137
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7138
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7139
  store i32 %4, i32* %5, align 4, !dbg !7140
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7141
  %7 = or i32 %6, 268435456, !dbg !7141
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7141
  call void @llvm.dbg.value(metadata i32 0, metadata !7142, metadata !DIExpression()) #23, !dbg !7145
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7147, !srcloc !7148
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7149
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7150
  %10 = load i32, i32* %9, align 4, !dbg !7150
  ret i32 %10, !dbg !7151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !7152 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7262, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7263, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i8* %2, metadata !7264, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7265, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i8* %4, metadata !7266, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i8* %5, metadata !7267, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i8* %6, metadata !7268, metadata !DIExpression()), !dbg !7270
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7271
  call void @llvm.dbg.value(metadata i8* %8, metadata !7269, metadata !DIExpression()), !dbg !7270
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7272
  %10 = bitcast i8* %9 to i32*, !dbg !7272
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7273
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7274
  %12 = bitcast i8* %8 to i32*, !dbg !7275
  store i32 %11, i32* %12, align 4, !dbg !7276
  %13 = ptrtoint i8* %4 to i32, !dbg !7277
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7278
  %15 = bitcast i8* %14 to i32*, !dbg !7278
  store i32 %13, i32* %15, align 4, !dbg !7279
  %16 = ptrtoint i8* %5 to i32, !dbg !7280
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7281
  %18 = bitcast i8* %17 to i32*, !dbg !7281
  store i32 %16, i32* %18, align 4, !dbg !7282
  %19 = ptrtoint i8* %6 to i32, !dbg !7283
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7284
  %21 = bitcast i8* %20 to i32*, !dbg !7284
  store i32 %19, i32* %21, align 4, !dbg !7285
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7286
  %23 = bitcast i8* %22 to i32*, !dbg !7286
  store i32 16777216, i32* %23, align 4, !dbg !7287
  %24 = ptrtoint i8* %8 to i32, !dbg !7288
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7289
  store i32 %24, i32* %25, align 8, !dbg !7290
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7291
  store i32 0, i32* %26, align 4, !dbg !7292
  ret void, !dbg !7293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7299, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.value(metadata i32 %1, metadata !7300, metadata !DIExpression()), !dbg !7305
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7306
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7301, metadata !DIExpression()), !dbg !7305
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7307
  br i1 %4, label %19, label %5, !dbg !7309

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7304, metadata !DIExpression()), !dbg !7305
  %6 = icmp eq i32 %0, -22, !dbg !7310
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7310
  %8 = load i32, i32* %7, align 4, !dbg !7310
  br i1 %6, label %16, label %9, !dbg !7312

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7310
  %11 = icmp ule i32 %10, %0, !dbg !7310
  %12 = icmp ugt i32 %8, %0, !dbg !7310
  %13 = and i1 %12, %11, !dbg !7310
  %14 = icmp ugt i32 %8, %1, !dbg !7310
  %15 = and i1 %14, %13, !dbg !7310
  br i1 %15, label %18, label %19, !dbg !7310

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7310
  br i1 %17, label %18, label %19, !dbg !7312

18:                                               ; preds = %9, %16
  br label %19, !dbg !7313

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7305
  ret i32 %20, !dbg !7315
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7316 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7320, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i8* %1, metadata !7321, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7322, metadata !DIExpression()), !dbg !7323
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7324
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7325
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7326, !srcloc !7327
  unreachable, !dbg !7328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7329 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7347, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i32 %1, metadata !7348, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i32 %2, metadata !7349, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7350, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i32 0, metadata !7351, metadata !DIExpression()), !dbg !7357
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7358
  %9 = and i32 %8, 511, !dbg !7359
  call void @llvm.dbg.value(metadata i32 %9, metadata !7352, metadata !DIExpression()), !dbg !7357
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7360
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7360
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7361
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7361
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7356, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i32 0, metadata !7363, metadata !DIExpression()) #23, !dbg !7366
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7368, !srcloc !7369
  call void @llvm.dbg.value(metadata i8* %6, metadata !7354, metadata !DIExpression(DW_OP_deref)), !dbg !7357
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !7370
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7355, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i8* %5, metadata !7353, metadata !DIExpression(DW_OP_deref)), !dbg !7357
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !7371
  call void @llvm.dbg.value(metadata i32 %12, metadata !7351, metadata !DIExpression()), !dbg !7357
  %13 = load i8, i8* %5, align 1, !dbg !7372, !range !7374
  call void @llvm.dbg.value(metadata i8 %13, metadata !7353, metadata !DIExpression()), !dbg !7357
  %14 = icmp eq i8 %13, 0, !dbg !7372
  br i1 %14, label %15, label %32, !dbg !7375

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7376
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7377
  %18 = load i8, i8* %6, align 1, !dbg !7378, !range !7374
  call void @llvm.dbg.value(metadata i8 %18, metadata !7354, metadata !DIExpression()), !dbg !7357
  %19 = icmp eq i8 %18, 0, !dbg !7378
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7380
  %21 = load i32, i32* %20, align 4, !dbg !7380
  br i1 %19, label %27, label %22, !dbg !7381

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7382
  %24 = icmp eq i32 %23, 0, !dbg !7385
  br i1 %24, label %25, label %31, !dbg !7386

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7387
  br label %29, !dbg !7389

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7390
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7380
  br label %31, !dbg !7392

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7392
  br label %32, !dbg !7393

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7393
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7393
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7393
  ret void, !dbg !7393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7399, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata i32 %1, metadata !7400, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata i32 %2, metadata !7401, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata i8* %3, metadata !7402, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata i8 0, metadata !7403, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7404, metadata !DIExpression()), !dbg !7405
  store i8 0, i8* %3, align 1, !dbg !7406
  %5 = icmp ugt i32 %2, -16777217, !dbg !7407
  br i1 %5, label %6, label %17, !dbg !7409

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7410
  %8 = icmp eq i32 %7, 8, !dbg !7410
  br i1 %8, label %9, label %10, !dbg !7410

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !7412
  br label %17, !dbg !7418

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7419
  %12 = icmp eq i32 %11, 0, !dbg !7419
  br i1 %12, label %13, label %14, !dbg !7420

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7404, metadata !DIExpression()), !dbg !7405
  store i8 1, i8* %3, align 1, !dbg !7423
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7405
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7404, metadata !DIExpression()), !dbg !7405
  br label %17, !dbg !7426

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7405
  ret %struct.__esf* %18, !dbg !7427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7428 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7432, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i32 %1, metadata !7433, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i8* %2, metadata !7434, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i32 0, metadata !7435, metadata !DIExpression()), !dbg !7436
  store i8 0, i8* %2, align 1, !dbg !7437
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7438

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !7439
  call void @llvm.dbg.value(metadata i32 %5, metadata !7435, metadata !DIExpression()), !dbg !7436
  br label %12, !dbg !7441

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7442
  call void @llvm.dbg.value(metadata i32 %7, metadata !7435, metadata !DIExpression()), !dbg !7436
  br label %12, !dbg !7443

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7444
  call void @llvm.dbg.value(metadata i32 0, metadata !7435, metadata !DIExpression()), !dbg !7436
  br label %12, !dbg !7445

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !7446
  call void @llvm.dbg.value(metadata i32 0, metadata !7435, metadata !DIExpression()), !dbg !7436
  br label %12, !dbg !7447

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !7448
  br label %12, !dbg !7449

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !7450
  br label %12, !dbg !7451

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7436
  call void @llvm.dbg.value(metadata i32 %13, metadata !7435, metadata !DIExpression()), !dbg !7436
  ret i32 %13, !dbg !7452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7453 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7457, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i8* %1, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 0, metadata !7459, metadata !DIExpression()), !dbg !7460
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !7461
  store i8 0, i8* %1, align 1, !dbg !7466
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7467
  %4 = and i32 %3, 2, !dbg !7469
  %5 = icmp eq i32 %4, 0, !dbg !7470
  br i1 %5, label %7, label %6, !dbg !7471

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7472
  br label %36, !dbg !7478

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7479
  %9 = icmp sgt i32 %8, -1, !dbg !7481
  br i1 %9, label %11, label %10, !dbg !7482

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7483
  br label %36, !dbg !7489

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7490
  %13 = and i32 %12, 1073741824, !dbg !7492
  %14 = icmp eq i32 %13, 0, !dbg !7493
  br i1 %14, label %36, label %15, !dbg !7494

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !7495
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !7501
  br i1 %16, label %17, label %21, !dbg !7503

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7504
  %19 = load i32, i32* %18, align 4, !dbg !7504
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.59, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7504
  %20 = load i32, i32* %18, align 4, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %20, metadata !7459, metadata !DIExpression()), !dbg !7460
  br label %36, !dbg !7511

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7512
  %23 = and i32 %22, 255, !dbg !7514
  %24 = icmp eq i32 %23, 0, !dbg !7515
  br i1 %24, label %27, label %25, !dbg !7516

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7517
  call void @llvm.dbg.value(metadata i32 %26, metadata !7459, metadata !DIExpression()), !dbg !7460
  br label %36, !dbg !7519

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7520
  %29 = and i32 %28, 65280, !dbg !7522
  %30 = icmp eq i32 %29, 0, !dbg !7523
  br i1 %30, label %32, label %31, !dbg !7524

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7525
  call void @llvm.dbg.value(metadata i32 0, metadata !7459, metadata !DIExpression()), !dbg !7460
  br label %36, !dbg !7527

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7528
  %34 = icmp ult i32 %33, 65536, !dbg !7530
  br i1 %34, label %36, label %35, !dbg !7531

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7532
  call void @llvm.dbg.value(metadata i32 0, metadata !7459, metadata !DIExpression()), !dbg !7460
  br label %36, !dbg !7534

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7460
  call void @llvm.dbg.value(metadata i32 %37, metadata !7459, metadata !DIExpression()), !dbg !7460
  ret i32 %37, !dbg !7535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7536 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7538, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.value(metadata i32 %1, metadata !7539, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.value(metadata i8* %2, metadata !7540, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.value(metadata i32 0, metadata !7541, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.value(metadata i32 -22, metadata !7542, metadata !DIExpression()), !dbg !7551
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !7552
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7557
  %5 = and i32 %4, 16, !dbg !7559
  %6 = icmp eq i32 %5, 0, !dbg !7560
  br i1 %6, label %8, label %7, !dbg !7561

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !7562
  br label %8, !dbg !7568

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7569
  %10 = and i32 %9, 8, !dbg !7571
  %11 = icmp eq i32 %10, 0, !dbg !7572
  br i1 %11, label %13, label %12, !dbg !7573

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7574
  br label %13, !dbg !7580

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7581
  %15 = and i32 %14, 2, !dbg !7582
  %16 = icmp eq i32 %15, 0, !dbg !7583
  br i1 %16, label %27, label %17, !dbg !7584

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69) #25, !dbg !7585
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7590
  call void @llvm.dbg.value(metadata i32 %18, metadata !7543, metadata !DIExpression()), !dbg !7591
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7592
  %20 = and i32 %19, 128, !dbg !7594
  %21 = icmp eq i32 %20, 0, !dbg !7595
  br i1 %21, label %27, label %22, !dbg !7596

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7542, metadata !DIExpression()), !dbg !7551
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7597
  %23 = icmp eq i32 %1, 0, !dbg !7603
  br i1 %23, label %27, label %24, !dbg !7605

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7606
  %26 = and i32 %25, -129, !dbg !7606
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7606
  br label %27, !dbg !7608

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7551
  call void @llvm.dbg.value(metadata i32 %28, metadata !7542, metadata !DIExpression()), !dbg !7551
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7609
  %30 = and i32 %29, 1, !dbg !7611
  %31 = icmp eq i32 %30, 0, !dbg !7612
  br i1 %31, label %33, label %32, !dbg !7613

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #25, !dbg !7614
  br label %33, !dbg !7620

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7621
  %35 = and i32 %34, 32, !dbg !7623
  %36 = icmp eq i32 %35, 0, !dbg !7624
  br i1 %36, label %38, label %37, !dbg !7625

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #25, !dbg !7626
  br label %38, !dbg !7632

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7633
  %40 = and i32 %39, 16, !dbg !7634
  %41 = icmp eq i32 %40, 0, !dbg !7634
  br i1 %41, label %42, label %46, !dbg !7635

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7636
  %44 = and i32 %43, 2, !dbg !7637
  %45 = icmp eq i32 %44, 0, !dbg !7637
  br i1 %45, label %55, label %46, !dbg !7638

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7639
  %48 = and i32 %47, 2048, !dbg !7640
  %49 = icmp eq i32 %48, 0, !dbg !7640
  br i1 %49, label %55, label %50, !dbg !7641

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7642
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7643
  call void @llvm.dbg.value(metadata i32 %52, metadata !7546, metadata !DIExpression()), !dbg !7644
  %53 = icmp eq i32 %52, 0, !dbg !7645
  br i1 %53, label %55, label %54, !dbg !7647

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7648, metadata !DIExpression()) #23, !dbg !7651
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7654, !srcloc !7655
  call void @llvm.dbg.value(metadata i32 2, metadata !7541, metadata !DIExpression()), !dbg !7551
  br label %55, !dbg !7656

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7551
  call void @llvm.dbg.value(metadata i32 %56, metadata !7541, metadata !DIExpression()), !dbg !7551
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7657
  %58 = and i32 %57, 32, !dbg !7659
  %59 = icmp eq i32 %58, 0, !dbg !7660
  br i1 %59, label %63, label %60, !dbg !7661

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7662
  %62 = and i32 %61, -8193, !dbg !7662
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7662
  br label %63, !dbg !7664

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7665
  %65 = or i32 %64, 255, !dbg !7665
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7665
  store i8 0, i8* %2, align 1, !dbg !7666
  ret i32 %56, !dbg !7667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7668 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7672, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32 %0, metadata !7673, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8* %1, metadata !7674, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32 0, metadata !7675, metadata !DIExpression()), !dbg !7679
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7680
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7685
  %4 = and i32 %3, 4096, !dbg !7687
  %5 = icmp eq i32 %4, 0, !dbg !7687
  br i1 %5, label %7, label %6, !dbg !7688

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7689
  br label %7, !dbg !7695

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7696
  %9 = and i32 %8, 2048, !dbg !7698
  %10 = icmp eq i32 %9, 0, !dbg !7698
  br i1 %10, label %12, label %11, !dbg !7699

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7700
  br label %12, !dbg !7706

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7707
  %14 = and i32 %13, 512, !dbg !7708
  %15 = icmp eq i32 %14, 0, !dbg !7708
  br i1 %15, label %26, label %16, !dbg !7709

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7710
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7715
  call void @llvm.dbg.value(metadata i32 %17, metadata !7676, metadata !DIExpression()), !dbg !7716
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7717
  %19 = and i32 %18, 32768, !dbg !7719
  %20 = icmp eq i32 %19, 0, !dbg !7720
  br i1 %20, label %26, label %21, !dbg !7721

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7722
  %22 = icmp eq i32 %0, 0, !dbg !7728
  br i1 %22, label %26, label %23, !dbg !7730

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7731
  %25 = and i32 %24, -32769, !dbg !7731
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7731
  br label %26, !dbg !7733

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7734
  %28 = and i32 %27, 1024, !dbg !7736
  %29 = icmp eq i32 %28, 0, !dbg !7736
  br i1 %29, label %31, label %30, !dbg !7737

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #25, !dbg !7738
  br label %31, !dbg !7744

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7745
  %33 = and i32 %32, 256, !dbg !7747
  %34 = icmp eq i32 %33, 0, !dbg !7748
  br i1 %34, label %35, label %39, !dbg !7749

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7750
  %37 = and i32 %36, 8192, !dbg !7752
  %38 = icmp eq i32 %37, 0, !dbg !7752
  br i1 %38, label %41, label %39, !dbg !7753

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7754
  br label %41, !dbg !7755

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7755
  %43 = or i32 %42, 65280, !dbg !7755
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7755
  store i8 0, i8* %1, align 1, !dbg !7756
  ret void, !dbg !7757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7758 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7764, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i32 0, metadata !7765, metadata !DIExpression()), !dbg !7766
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7767
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7772
  %2 = and i32 %1, 33554432, !dbg !7774
  %3 = icmp eq i32 %2, 0, !dbg !7775
  br i1 %3, label %5, label %4, !dbg !7776

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #25, !dbg !7777
  br label %5, !dbg !7783

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7784
  %7 = and i32 %6, 16777216, !dbg !7786
  %8 = icmp eq i32 %7, 0, !dbg !7787
  br i1 %8, label %10, label %9, !dbg !7788

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7789
  br label %10, !dbg !7795

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7796
  %12 = and i32 %11, 524288, !dbg !7798
  %13 = icmp eq i32 %12, 0, !dbg !7799
  br i1 %13, label %15, label %14, !dbg !7800

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7801
  br label %15, !dbg !7807

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7808
  %17 = and i32 %16, 262144, !dbg !7810
  %18 = icmp eq i32 %17, 0, !dbg !7811
  br i1 %18, label %20, label %19, !dbg !7812

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !7813
  br label %20, !dbg !7819

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7820
  %22 = and i32 %21, 131072, !dbg !7822
  %23 = icmp eq i32 %22, 0, !dbg !7823
  br i1 %23, label %25, label %24, !dbg !7824

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7825
  br label %25, !dbg !7831

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7832
  %27 = and i32 %26, 65536, !dbg !7834
  %28 = icmp eq i32 %27, 0, !dbg !7835
  br i1 %28, label %30, label %29, !dbg !7836

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !7837
  br label %30, !dbg !7843

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7844
  %32 = or i32 %31, -65536, !dbg !7844
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7844
  ret void, !dbg !7845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7846 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7850, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %0, metadata !7851, metadata !DIExpression()), !dbg !7852
  store i8 0, i8* %0, align 1, !dbg !7853
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7854
  ret void, !dbg !7859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7860 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7864, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %0, metadata !7865, metadata !DIExpression()), !dbg !7866
  %2 = icmp slt i32 %0, 16, !dbg !7867
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.49, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !7867
  %4 = add nsw i32 %0, -16, !dbg !7867
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7867
  ret void, !dbg !7872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7873 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7877, metadata !DIExpression()), !dbg !7880
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7881
  %3 = load i32, i32* %2, align 4, !dbg !7881
  %4 = inttoptr i32 %3 to i16*, !dbg !7882
  call void @llvm.dbg.value(metadata i16* %4, metadata !7878, metadata !DIExpression()), !dbg !7880
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7883
  %6 = or i32 %5, 256, !dbg !7883
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7883
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7884, !srcloc !7887
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7888, !srcloc !7891
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7892
  %8 = load i16, i16* %7, align 2, !dbg !7893
  call void @llvm.dbg.value(metadata i16 %8, metadata !7879, metadata !DIExpression()), !dbg !7880
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7894
  %10 = and i32 %9, -257, !dbg !7894
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7894
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7895, !srcloc !7887
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7897, !srcloc !7891
  %11 = icmp eq i16 %8, -8446, !dbg !7899
  ret i1 %11, !dbg !7901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7902 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7903
  %2 = or i32 %1, 16, !dbg !7903
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7903
  ret void, !dbg !7904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7905 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7908, metadata !DIExpression()), !dbg !7909
  br label %1, !dbg !7910

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7908, metadata !DIExpression()), !dbg !7909
  tail call fastcc void @__NVIC_SetPriority.63(i32 noundef %2) #24, !dbg !7912
  %3 = add nuw nsw i32 %2, 1, !dbg !7915
  call void @llvm.dbg.value(metadata i32 %3, metadata !7908, metadata !DIExpression()), !dbg !7909
  %4 = icmp eq i32 %3, 86, !dbg !7916
  br i1 %4, label %5, label %1, !dbg !7910, !llvm.loop !7917

5:                                                ; preds = %1
  ret void, !dbg !7919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63(i32 noundef %0) unnamed_addr #15 !dbg !7920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7922, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.value(metadata i32 1, metadata !7923, metadata !DIExpression()), !dbg !7924
  %2 = and i32 %0, 15, !dbg !7925
  %3 = add nsw i32 %2, -4, !dbg !7925
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7925
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7925
  %6 = icmp slt i32 %0, 0, !dbg !7925
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7925
  store volatile i8 16, i8* %7, align 1, !dbg !7926
  ret void, !dbg !7928
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7929 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8035, metadata !DIExpression()), !dbg !8036
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8037
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8039
  br i1 %3, label %4, label %12, !dbg !8040

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8041, !srcloc !8053
  call void @llvm.dbg.value(metadata i32 %5, metadata !8044, metadata !DIExpression()) #23, !dbg !8054
  %6 = icmp eq i32 %5, 0, !dbg !8055
  br i1 %6, label %12, label %7, !dbg !8056

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8057
  %9 = or i32 %8, 268435456, !dbg !8057
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8057
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8059
  %11 = and i32 %10, -32769, !dbg !8059
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8059
  br label %12, !dbg !8060

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8061
  ret void, !dbg !8062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8063 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !8064
  ret void, !dbg !8065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !754, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i8 0, metadata !755, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 64, metadata !757, metadata !DIExpression()), !dbg !8066
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8067
  %3 = load i32, i32* %2, align 4, !dbg !8067
  %4 = add i32 %3, -64, !dbg !8069
  call void @llvm.dbg.value(metadata i32 %4, metadata !756, metadata !DIExpression()), !dbg !8066
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8070
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8071
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8072
  call void @llvm.dbg.value(metadata i8 1, metadata !755, metadata !DIExpression()), !dbg !8066
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !8073
  ret void, !dbg !8074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8075 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8076
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8077, !srcloc !8080
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8081, !srcloc !8084
  ret void, !dbg !8085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8086 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !8087, !srcloc !8090
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8091
  ret void, !dbg !8092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8093 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8108, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i8 %1, metadata !8109, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32 %2, metadata !8110, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32 %3, metadata !8111, metadata !DIExpression()), !dbg !8112
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8113
  ret void, !dbg !8115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8116 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8121, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.value(metadata i8 %1, metadata !8122, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.value(metadata i32 undef, metadata !8123, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.value(metadata i32 undef, metadata !8124, metadata !DIExpression()), !dbg !8126
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8127
  call void @llvm.dbg.value(metadata i8 %3, metadata !8125, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8126
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !8128
  call void @llvm.dbg.value(metadata i32 %4, metadata !8125, metadata !DIExpression()), !dbg !8126
  %5 = trunc i32 %4 to i8, !dbg !8129
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8130
  ret void, !dbg !8131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8132 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8136, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i8 %1, metadata !8137, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i8 %2, metadata !8138, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i1 %3, metadata !8139, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8142
  %5 = zext i8 %2 to i32, !dbg !8143
  call void @llvm.dbg.value(metadata i32 %5, metadata !8141, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i32 0, metadata !8140, metadata !DIExpression()), !dbg !8142
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8141, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i32 0, metadata !8140, metadata !DIExpression()), !dbg !8142
  %7 = icmp eq i8 %1, 0, !dbg !8144
  br i1 %7, label %30, label %8, !dbg !8147

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8141, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i32 %10, metadata !8140, metadata !DIExpression()), !dbg !8142
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8148
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8151
  %13 = load i32, i32* %12, align 4, !dbg !8151
  %14 = icmp eq i32 %13, 0, !dbg !8152
  br i1 %14, label %26, label %15, !dbg !8153

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8154

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8156
  %18 = icmp eq i32 %17, 0, !dbg !8156
  br i1 %18, label %19, label %20, !dbg !8157

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !8158
  br label %30, !dbg !8164

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8165
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8166
  call void @llvm.dbg.value(metadata i32 %22, metadata !8141, metadata !DIExpression()), !dbg !8142
  %23 = icmp eq i32 %22, -22, !dbg !8167
  br i1 %23, label %30, label %24, !dbg !8169

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8170
  call void @llvm.dbg.value(metadata i32 %25, metadata !8141, metadata !DIExpression()), !dbg !8142
  br label %26, !dbg !8171

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8142
  call void @llvm.dbg.value(metadata i32 %27, metadata !8141, metadata !DIExpression()), !dbg !8142
  %28 = add nuw nsw i32 %10, 1, !dbg !8172
  call void @llvm.dbg.value(metadata i32 %28, metadata !8140, metadata !DIExpression()), !dbg !8142
  %29 = icmp eq i32 %28, %6, !dbg !8144
  br i1 %29, label %30, label %8, !dbg !8147, !llvm.loop !8173

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8142
  ret i32 %31, !dbg !8175
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !8176 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8180, metadata !DIExpression()), !dbg !8182
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8183
  %3 = load i32, i32* %2, align 4, !dbg !8183
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8184, !range !8185
  %5 = icmp ult i32 %4, 2, !dbg !8184
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8186
  br i1 %7, label %8, label %15, !dbg !8186

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8187
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8188
  %11 = load i32, i32* %10, align 4, !dbg !8188
  %12 = and i32 %11, %9, !dbg !8189
  %13 = icmp eq i32 %12, 0, !dbg !8190
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8181, metadata !DIExpression()), !dbg !8182
  ret i32 %16, !dbg !8191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8192 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8196, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8197, metadata !DIExpression()), !dbg !8199
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8200
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8200
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8198, metadata !DIExpression()), !dbg !8201
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8202
  %6 = load i32, i32* %5, align 4, !dbg !8202
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8203
  store i32 %6, i32* %7, align 4, !dbg !8204
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8205
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8206
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8207
  %11 = load i32, i32* %10, align 4, !dbg !8207
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* noundef nonnull %8, %union.anon* noundef nonnull %9, i32 noundef %11) #24, !dbg !8208
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !8209
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8210
  ret i32 %12, !dbg !8211
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* nocapture noundef writeonly %0, %union.anon* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !8212 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !8219, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !8220, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i32 undef, metadata !8221, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i32 %2, metadata !8222, metadata !DIExpression()), !dbg !8223
  %4 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !8224
  %5 = load i32, i32* %4, align 4, !dbg !8224
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !8225
  %7 = or i32 %6, %5, !dbg !8226
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !8227
  store i32 %7, i32* %8, align 4, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8230 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8234, metadata !DIExpression()), !dbg !8236
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8235, metadata !DIExpression()), !dbg !8236
  %3 = zext i8 %0 to i32, !dbg !8237
  %4 = icmp ugt i8 %0, 7, !dbg !8239
  br i1 %4, label %5, label %6, !dbg !8240

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !8241
  br label %7, !dbg !8247

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !8248
  br label %7, !dbg !8249

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8236
  ret i32 %8, !dbg !8250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !8251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8255, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8256, metadata !DIExpression()), !dbg !8257
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !8258
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8259
  %4 = load i32, i32* %3, align 4, !dbg !8259
  %5 = and i32 %4, -32, !dbg !8260
  %6 = or i32 %5, %0, !dbg !8261
  %7 = or i32 %6, 16, !dbg !8261
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8262
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8263
  %9 = load i32, i32* %8, align 4, !dbg !8263
  %10 = or i32 %9, 1, !dbg !8264
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8265
  ret void, !dbg !8266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !8267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8270, metadata !DIExpression()), !dbg !8271
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8272
  ret void, !dbg !8273
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8278, metadata !DIExpression()), !dbg !8279
  %2 = icmp ult i32 %0, 33, !dbg !8280
  br i1 %2, label %11, label %3, !dbg !8282

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8283
  br i1 %4, label %11, label %5, !dbg !8285

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8286
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8287, !range !8185
  %8 = mul nsw i32 %7, -2, !dbg !8288
  %9 = add nsw i32 %8, 62, !dbg !8288
  %10 = and i32 %9, 62, !dbg !8289
  br label %11, !dbg !8290

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8279
  ret i32 %12, !dbg !8291
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8292 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8296, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.value(metadata i8 %1, metadata !8297, metadata !DIExpression()), !dbg !8298
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8299
  ret void, !dbg !8301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8302 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8306, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i8 %1, metadata !8307, metadata !DIExpression()), !dbg !8313
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8314
  call void @llvm.dbg.value(metadata i8 %3, metadata !8308, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8313
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !8315
  call void @llvm.dbg.value(metadata i32 %4, metadata !8308, metadata !DIExpression()), !dbg !8313
  %5 = icmp ne i32 %4, -22, !dbg !8316
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8317
  call void @llvm.dbg.value(metadata i32 %4, metadata !8309, metadata !DIExpression()), !dbg !8318
  br i1 %7, label %8, label %12, !dbg !8317

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8309, metadata !DIExpression()), !dbg !8318
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !8319
  %10 = add i32 %9, 1, !dbg !8322
  call void @llvm.dbg.value(metadata i32 %10, metadata !8309, metadata !DIExpression()), !dbg !8318
  %11 = icmp eq i32 %10, 8, !dbg !8323
  br i1 %11, label %12, label %8, !dbg !8324, !llvm.loop !8325

12:                                               ; preds = %8, %2
  ret void, !dbg !8327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !8328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8331, metadata !DIExpression()), !dbg !8332
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8333
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8334
  ret void, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8336 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8341
  %2 = icmp ugt i32 %1, 8, !dbg !8343
  br i1 %2, label %14, label %3, !dbg !8344

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !8345
  call void @llvm.dbg.value(metadata i32 0, metadata !8340, metadata !DIExpression()), !dbg !8346
  %4 = icmp eq i32 %1, 0, !dbg !8347
  br i1 %4, label %12, label %5, !dbg !8350

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8350

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8340, metadata !DIExpression()), !dbg !8346
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8351
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !8353
  %10 = add nuw i32 %8, 1, !dbg !8354
  call void @llvm.dbg.value(metadata i32 %10, metadata !8340, metadata !DIExpression()), !dbg !8346
  %11 = icmp eq i32 %10, %1, !dbg !8347
  br i1 %11, label %12, label %7, !dbg !8350, !llvm.loop !8355

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8357
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8358
  tail call void @arm_core_mpu_enable() #24, !dbg !8359
  br label %14, !dbg !8360

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8346
  ret i32 %15, !dbg !8361
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8362 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8369, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i8* %1, metadata !8370, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i8* %0, metadata !8371, metadata !DIExpression()), !dbg !8372
  %3 = load i8, i8* %1, align 1, !dbg !8373
  %4 = icmp eq i8 %3, 0, !dbg !8374
  br i1 %4, label %13, label %5, !dbg !8375

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8369, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i8* %8, metadata !8370, metadata !DIExpression()), !dbg !8372
  store i8 %6, i8* %7, align 1, !dbg !8376
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8378
  call void @llvm.dbg.value(metadata i8* %9, metadata !8369, metadata !DIExpression()), !dbg !8372
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8379
  call void @llvm.dbg.value(metadata i8* %10, metadata !8370, metadata !DIExpression()), !dbg !8372
  %11 = load i8, i8* %10, align 1, !dbg !8373
  %12 = icmp eq i8 %11, 0, !dbg !8374
  br i1 %12, label %13, label %5, !dbg !8375, !llvm.loop !8380

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8382
  ret i8* %0, !dbg !8383
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8388, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i8* %1, metadata !8389, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %2, metadata !8390, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i8* %0, metadata !8391, metadata !DIExpression()), !dbg !8392
  %4 = icmp eq i32 %2, 0, !dbg !8393
  br i1 %4, label %22, label %5, !dbg !8394

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8388, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %7, metadata !8390, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i8* %8, metadata !8389, metadata !DIExpression()), !dbg !8392
  %9 = load i8, i8* %8, align 1, !dbg !8395
  %10 = icmp eq i8 %9, 0, !dbg !8396
  br i1 %10, label %16, label %11, !dbg !8397

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8398
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8400
  call void @llvm.dbg.value(metadata i8* %12, metadata !8389, metadata !DIExpression()), !dbg !8392
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8401
  call void @llvm.dbg.value(metadata i8* %13, metadata !8388, metadata !DIExpression()), !dbg !8392
  %14 = add i32 %7, -1, !dbg !8402
  call void @llvm.dbg.value(metadata i32 %14, metadata !8390, metadata !DIExpression()), !dbg !8392
  %15 = icmp eq i32 %14, 0, !dbg !8393
  br i1 %15, label %22, label %5, !dbg !8394, !llvm.loop !8403

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8388, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %18, metadata !8390, metadata !DIExpression()), !dbg !8392
  store i8 0, i8* %17, align 1, !dbg !8405
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8407
  call void @llvm.dbg.value(metadata i8* %19, metadata !8388, metadata !DIExpression()), !dbg !8392
  %20 = add i32 %18, -1, !dbg !8408
  call void @llvm.dbg.value(metadata i32 %20, metadata !8390, metadata !DIExpression()), !dbg !8392
  %21 = icmp eq i32 %20, 0, !dbg !8409
  br i1 %21, label %22, label %16, !dbg !8410, !llvm.loop !8411

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8413
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8414 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8418, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %1, metadata !8419, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %1, metadata !8420, metadata !DIExpression()), !dbg !8421
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8422

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8418, metadata !DIExpression()), !dbg !8421
  %6 = load i8, i8* %5, align 1, !dbg !8423
  %7 = icmp eq i8 %6, %3, !dbg !8424
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8425
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8426
  call void @llvm.dbg.value(metadata i8* %10, metadata !8418, metadata !DIExpression()), !dbg !8421
  br i1 %9, label %11, label %4, !dbg !8425, !llvm.loop !8428

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8430
  ret i8* %12, !dbg !8431
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8432 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8434, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %1, metadata !8435, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i8* null, metadata !8436, metadata !DIExpression()), !dbg !8437
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8438

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8437
  call void @llvm.dbg.value(metadata i8* %6, metadata !8436, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i8* %5, metadata !8434, metadata !DIExpression()), !dbg !8437
  %7 = load i8, i8* %5, align 1, !dbg !8439
  %8 = icmp eq i8 %7, %3, !dbg !8442
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8443
  call void @llvm.dbg.value(metadata i8* %9, metadata !8436, metadata !DIExpression()), !dbg !8437
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8444
  call void @llvm.dbg.value(metadata i8* %10, metadata !8434, metadata !DIExpression()), !dbg !8437
  %11 = icmp eq i8 %7, 0, !dbg !8445
  br i1 %11, label %12, label %4, !dbg !8445, !llvm.loop !8446

12:                                               ; preds = %4
  ret i8* %9, !dbg !8448
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !8449 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8453, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata i32 0, metadata !8454, metadata !DIExpression()), !dbg !8455
  %2 = load i8, i8* %0, align 1, !dbg !8456
  %3 = icmp eq i8 %2, 0, !dbg !8457
  br i1 %3, label %11, label %4, !dbg !8458

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8454, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata i8* %6, metadata !8453, metadata !DIExpression()), !dbg !8455
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8459
  call void @llvm.dbg.value(metadata i8* %7, metadata !8453, metadata !DIExpression()), !dbg !8455
  %8 = add i32 %5, 1, !dbg !8461
  call void @llvm.dbg.value(metadata i32 %8, metadata !8454, metadata !DIExpression()), !dbg !8455
  %9 = load i8, i8* %7, align 1, !dbg !8456
  %10 = icmp eq i8 %9, 0, !dbg !8457
  br i1 %10, label %11, label %4, !dbg !8458, !llvm.loop !8462

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8455
  ret i32 %12, !dbg !8464
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8465 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8469, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 %1, metadata !8470, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 0, metadata !8471, metadata !DIExpression()), !dbg !8472
  %3 = load i8, i8* %0, align 1, !dbg !8473
  %4 = icmp ne i8 %3, 0, !dbg !8474
  %5 = icmp ne i32 %1, 0, !dbg !8475
  %6 = and i1 %4, %5, !dbg !8475
  br i1 %6, label %7, label %16, !dbg !8476

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i8* %9, metadata !8469, metadata !DIExpression()), !dbg !8472
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8477
  call void @llvm.dbg.value(metadata i8* %10, metadata !8469, metadata !DIExpression()), !dbg !8472
  %11 = add nuw i32 %8, 1, !dbg !8479
  call void @llvm.dbg.value(metadata i32 %11, metadata !8471, metadata !DIExpression()), !dbg !8472
  %12 = load i8, i8* %10, align 1, !dbg !8473
  %13 = icmp ne i8 %12, 0, !dbg !8474
  %14 = icmp ult i32 %11, %1, !dbg !8475
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8475
  br i1 %15, label %7, label %16, !dbg !8476, !llvm.loop !8480

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8472
  ret i32 %17, !dbg !8482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !8483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8487, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i8* %1, metadata !8488, metadata !DIExpression()), !dbg !8489
  %3 = load i8, i8* %0, align 1, !dbg !8490
  %4 = load i8, i8* %1, align 1, !dbg !8491
  %5 = icmp ne i8 %3, %4, !dbg !8492
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8493
  br i1 %7, label %18, label %8, !dbg !8493

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i8* %10, metadata !8487, metadata !DIExpression()), !dbg !8489
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8494
  call void @llvm.dbg.value(metadata i8* %11, metadata !8487, metadata !DIExpression()), !dbg !8489
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8496
  call void @llvm.dbg.value(metadata i8* %12, metadata !8488, metadata !DIExpression()), !dbg !8489
  %13 = load i8, i8* %11, align 1, !dbg !8490
  %14 = load i8, i8* %12, align 1, !dbg !8491
  %15 = icmp ne i8 %13, %14, !dbg !8492
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8493
  br i1 %17, label %18, label %8, !dbg !8493, !llvm.loop !8497

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8490
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8491
  %21 = zext i8 %19 to i32, !dbg !8500
  %22 = zext i8 %20 to i32, !dbg !8501
  %23 = sub nsw i32 %21, %22, !dbg !8502
  ret i32 %23, !dbg !8503
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8504 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8508, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i8* %1, metadata !8509, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i32 %2, metadata !8510, metadata !DIExpression()), !dbg !8511
  %4 = icmp eq i32 %2, 0, !dbg !8512
  br i1 %4, label %23, label %5, !dbg !8512

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8510, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i8* %7, metadata !8509, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i8* %8, metadata !8508, metadata !DIExpression()), !dbg !8511
  %9 = load i8, i8* %8, align 1, !dbg !8513
  %10 = load i8, i8* %7, align 1, !dbg !8514
  %11 = icmp ne i8 %9, %10, !dbg !8515
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8516
  br i1 %13, label %19, label %14, !dbg !8516

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8517
  call void @llvm.dbg.value(metadata i8* %15, metadata !8508, metadata !DIExpression()), !dbg !8511
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8519
  call void @llvm.dbg.value(metadata i8* %16, metadata !8509, metadata !DIExpression()), !dbg !8511
  %17 = add i32 %6, -1, !dbg !8520
  call void @llvm.dbg.value(metadata i32 %17, metadata !8510, metadata !DIExpression()), !dbg !8511
  %18 = icmp eq i32 %17, 0, !dbg !8512
  br i1 %18, label %23, label %5, !dbg !8512, !llvm.loop !8521

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8524
  %21 = zext i8 %10 to i32, !dbg !8525
  %22 = sub nsw i32 %20, %21, !dbg !8526
  br label %23, !dbg !8527

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8527
  ret i32 %24, !dbg !8528
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8529 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8533, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata i8* %1, metadata !8534, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata i8** %2, metadata !8535, metadata !DIExpression()), !dbg !8538
  %4 = icmp eq i8* %0, null, !dbg !8539
  br i1 %4, label %5, label %7, !dbg !8539

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8540
  br label %7, !dbg !8539

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8539
  call void @llvm.dbg.value(metadata i8* %8, metadata !8536, metadata !DIExpression()), !dbg !8538
  %9 = load i8, i8* %8, align 1, !dbg !8541
  %10 = icmp eq i8 %9, 0, !dbg !8541
  br i1 %10, label %33, label %11, !dbg !8542

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8536, metadata !DIExpression()), !dbg !8538
  %14 = zext i8 %12 to i32, !dbg !8541
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8543
  %16 = icmp eq i8* %15, null, !dbg !8542
  br i1 %16, label %21, label %17, !dbg !8544

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8545
  call void @llvm.dbg.value(metadata i8* %18, metadata !8536, metadata !DIExpression()), !dbg !8538
  %19 = load i8, i8* %18, align 1, !dbg !8541
  %20 = icmp eq i8 %19, 0, !dbg !8541
  br i1 %20, label %33, label %11, !dbg !8542, !llvm.loop !8547

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8537, metadata !DIExpression()), !dbg !8538
  %24 = zext i8 %22 to i32, !dbg !8549
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8550
  %26 = icmp eq i8* %25, null, !dbg !8551
  br i1 %26, label %27, label %31, !dbg !8552

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8553
  call void @llvm.dbg.value(metadata i8* %28, metadata !8537, metadata !DIExpression()), !dbg !8538
  %29 = load i8, i8* %28, align 1, !dbg !8549
  %30 = icmp eq i8 %29, 0, !dbg !8549
  br i1 %30, label %33, label %21, !dbg !8555, !llvm.loop !8556

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8558
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8561
  br label %33, !dbg !8562

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8538
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8538
  store i8* %34, i8** %2, align 4, !dbg !8538
  ret i8* %35, !dbg !8563
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8564 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8566, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %1, metadata !8567, metadata !DIExpression()), !dbg !8568
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8569
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8570
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8571
  ret i8* %0, !dbg !8572
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8573 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8575, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8* %1, metadata !8576, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i32 %2, metadata !8577, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8* %0, metadata !8578, metadata !DIExpression()), !dbg !8580
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8581
  call void @llvm.dbg.value(metadata i32 %4, metadata !8579, metadata !DIExpression()), !dbg !8580
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8582
  call void @llvm.dbg.value(metadata i8* %5, metadata !8575, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8* %1, metadata !8576, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i32 %2, metadata !8577, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i32 %2, metadata !8577, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8580
  %6 = icmp eq i32 %2, 0, !dbg !8583
  br i1 %6, label %18, label %7, !dbg !8584

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8585
  call void @llvm.dbg.value(metadata i8* %9, metadata !8575, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8* %10, metadata !8576, metadata !DIExpression()), !dbg !8580
  %12 = load i8, i8* %10, align 1, !dbg !8586
  %13 = icmp eq i8 %12, 0, !dbg !8587
  br i1 %13, label %18, label %14, !dbg !8588

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8589
  call void @llvm.dbg.value(metadata i8* %15, metadata !8576, metadata !DIExpression()), !dbg !8580
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8591
  call void @llvm.dbg.value(metadata i8* %16, metadata !8575, metadata !DIExpression()), !dbg !8580
  store i8 %12, i8* %9, align 1, !dbg !8592
  call void @llvm.dbg.value(metadata i32 %11, metadata !8577, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i32 %11, metadata !8577, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8580
  %17 = icmp eq i32 %11, 0, !dbg !8583
  br i1 %17, label %18, label %7, !dbg !8584, !llvm.loop !8593

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8580
  store i8 0, i8* %19, align 1, !dbg !8595
  ret i8* %0, !dbg !8596
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8597 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8601, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %1, metadata !8602, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 %2, metadata !8603, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %0, metadata !8604, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %1, metadata !8605, metadata !DIExpression()), !dbg !8606
  %4 = icmp eq i32 %2, 0, !dbg !8607
  br i1 %4, label %31, label %5, !dbg !8609

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8605, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %0, metadata !8604, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 %2, metadata !8603, metadata !DIExpression()), !dbg !8606
  %6 = add i32 %2, -1, !dbg !8610
  call void @llvm.dbg.value(metadata i32 %6, metadata !8603, metadata !DIExpression()), !dbg !8606
  %7 = icmp eq i32 %6, 0, !dbg !8611
  br i1 %7, label %23, label %8, !dbg !8612

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8613
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8613
  br label %11, !dbg !8613

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8605, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %14, metadata !8604, metadata !DIExpression()), !dbg !8606
  %15 = load i8, i8* %14, align 1, !dbg !8614
  %16 = load i8, i8* %13, align 1, !dbg !8615
  %17 = icmp eq i8 %15, %16, !dbg !8616
  br i1 %17, label %18, label %23, !dbg !8613

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8617
  call void @llvm.dbg.value(metadata i8* %19, metadata !8604, metadata !DIExpression()), !dbg !8606
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8619
  call void @llvm.dbg.value(metadata i8* %20, metadata !8605, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 %12, metadata !8603, metadata !DIExpression()), !dbg !8606
  %21 = add i32 %12, -1, !dbg !8610
  call void @llvm.dbg.value(metadata i32 %21, metadata !8603, metadata !DIExpression()), !dbg !8606
  %22 = icmp eq i32 %21, 0, !dbg !8611
  br i1 %22, label %23, label %11, !dbg !8612, !llvm.loop !8620

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8606
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8606
  %26 = load i8, i8* %24, align 1, !dbg !8622
  %27 = zext i8 %26 to i32, !dbg !8622
  %28 = load i8, i8* %25, align 1, !dbg !8623
  %29 = zext i8 %28 to i32, !dbg !8623
  %30 = sub nsw i32 %27, %29, !dbg !8624
  br label %31, !dbg !8625

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8606
  ret i32 %32, !dbg !8626
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8631, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %1, metadata !8632, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i32 %2, metadata !8633, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %0, metadata !8634, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %1, metadata !8635, metadata !DIExpression()), !dbg !8636
  %4 = ptrtoint i8* %0 to i32, !dbg !8637
  %5 = ptrtoint i8* %1 to i32, !dbg !8637
  %6 = sub i32 %4, %5, !dbg !8637
  %7 = icmp ult i32 %6, %2, !dbg !8639
  br i1 %7, label %10, label %8, !dbg !8640

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8635, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %0, metadata !8634, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i32 %2, metadata !8633, metadata !DIExpression()), !dbg !8636
  %9 = icmp eq i32 %2, 0, !dbg !8641
  br i1 %9, label %26, label %17, !dbg !8643

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8633, metadata !DIExpression()), !dbg !8636
  %12 = add i32 %11, -1, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %12, metadata !8633, metadata !DIExpression()), !dbg !8636
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8647
  %14 = load i8, i8* %13, align 1, !dbg !8647
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8648
  store i8 %14, i8* %15, align 1, !dbg !8649
  %16 = icmp eq i32 %12, 0, !dbg !8650
  br i1 %16, label %26, label %10, !dbg !8651, !llvm.loop !8652

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8635, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %19, metadata !8634, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i32 %20, metadata !8633, metadata !DIExpression()), !dbg !8636
  %21 = load i8, i8* %18, align 1, !dbg !8654
  store i8 %21, i8* %19, align 1, !dbg !8656
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8657
  call void @llvm.dbg.value(metadata i8* %22, metadata !8634, metadata !DIExpression()), !dbg !8636
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8658
  call void @llvm.dbg.value(metadata i8* %23, metadata !8635, metadata !DIExpression()), !dbg !8636
  %24 = add i32 %20, -1, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %24, metadata !8633, metadata !DIExpression()), !dbg !8636
  %25 = icmp eq i32 %24, 0, !dbg !8641
  br i1 %25, label %26, label %17, !dbg !8643, !llvm.loop !8660

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8662
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8663 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8669, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %1, metadata !8670, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i32 %2, metadata !8671, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %0, metadata !8672, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %1, metadata !8673, metadata !DIExpression()), !dbg !8674
  %4 = icmp eq i32 %2, 0, !dbg !8675
  br i1 %4, label %14, label %5, !dbg !8676

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %7, metadata !8672, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i32 %8, metadata !8671, metadata !DIExpression()), !dbg !8674
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8677
  call void @llvm.dbg.value(metadata i8* %9, metadata !8673, metadata !DIExpression()), !dbg !8674
  %10 = load i8, i8* %6, align 1, !dbg !8679
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8680
  call void @llvm.dbg.value(metadata i8* %11, metadata !8672, metadata !DIExpression()), !dbg !8674
  store i8 %10, i8* %7, align 1, !dbg !8681
  %12 = add i32 %8, -1, !dbg !8682
  call void @llvm.dbg.value(metadata i32 %12, metadata !8671, metadata !DIExpression()), !dbg !8674
  %13 = icmp eq i32 %12, 0, !dbg !8675
  br i1 %13, label %14, label %5, !dbg !8676, !llvm.loop !8683

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8685
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8686 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8690, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32 %1, metadata !8691, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32 %2, metadata !8692, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i8* %0, metadata !8693, metadata !DIExpression()), !dbg !8695
  %4 = trunc i32 %1 to i8, !dbg !8696
  call void @llvm.dbg.value(metadata i8 %4, metadata !8694, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32 %2, metadata !8692, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i8* %0, metadata !8693, metadata !DIExpression()), !dbg !8695
  %5 = icmp eq i32 %2, 0, !dbg !8697
  br i1 %5, label %12, label %6, !dbg !8698

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8692, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i8* %8, metadata !8693, metadata !DIExpression()), !dbg !8695
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8699
  call void @llvm.dbg.value(metadata i8* %9, metadata !8693, metadata !DIExpression()), !dbg !8695
  store i8 %4, i8* %8, align 1, !dbg !8701
  %10 = add i32 %7, -1, !dbg !8702
  call void @llvm.dbg.value(metadata i32 %10, metadata !8692, metadata !DIExpression()), !dbg !8695
  %11 = icmp eq i32 %10, 0, !dbg !8697
  br i1 %11, label %12, label %6, !dbg !8698, !llvm.loop !8703

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8705
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8706 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8710, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 %1, metadata !8711, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 %2, metadata !8712, metadata !DIExpression()), !dbg !8716
  %4 = icmp eq i32 %2, 0, !dbg !8717
  br i1 %4, label %17, label %5, !dbg !8718

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8719

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8720
  call void @llvm.dbg.value(metadata i8* %9, metadata !8713, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 %8, metadata !8712, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i8* %9, metadata !8713, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8720
  %10 = load i8, i8* %9, align 1, !dbg !8721
  %11 = icmp eq i8 %10, %6, !dbg !8724
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8725
  call void @llvm.dbg.value(metadata i8* %12, metadata !8713, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 %13, metadata !8712, metadata !DIExpression()), !dbg !8716
  br i1 %15, label %16, label %7, !dbg !8725, !llvm.loop !8726

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8728

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8716
  ret i8* %19, !dbg !8729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !8730 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8732, metadata !DIExpression()), !dbg !8733
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8734
  ret void, !dbg !8735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8738, metadata !DIExpression()), !dbg !8739
  ret i32 -1, !dbg !8740
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8745, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i32* %1, metadata !8746, metadata !DIExpression()), !dbg !8747
  %3 = ptrtoint i32* %1 to i32, !dbg !8748
  %4 = and i32 %3, -2, !dbg !8748
  %5 = icmp eq i32 %4, 2, !dbg !8748
  br i1 %5, label %6, label %9, !dbg !8748

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8749
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8749
  br label %9, !dbg !8750

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8750
  ret i32 %10, !dbg !8751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8754, metadata !DIExpression()), !dbg !8756
  call void @llvm.dbg.value(metadata i32* %1, metadata !8755, metadata !DIExpression()), !dbg !8756
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8757
  ret i32 %3, !dbg !8758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8762, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32* %1, metadata !8763, metadata !DIExpression()), !dbg !8764
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8765, !srcloc !8767
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8768
  ret i32 %3, !dbg !8769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8770 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8775, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32* %1, metadata !8776, metadata !DIExpression()), !dbg !8779
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8780
  call void @llvm.dbg.value(metadata i32 %3, metadata !8777, metadata !DIExpression()), !dbg !8779
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8781
  call void @llvm.dbg.value(metadata i32 %4, metadata !8778, metadata !DIExpression()), !dbg !8779
  %5 = icmp ne i32 %3, %4, !dbg !8782
  %6 = sext i1 %5 to i32, !dbg !8783
  ret i32 %6, !dbg !8784
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8785 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8789, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i32 %1, metadata !8790, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i32 %2, metadata !8791, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i32* %3, metadata !8792, metadata !DIExpression()), !dbg !8793
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8794
  ret i32 %5, !dbg !8795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8796 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8798, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 %1, metadata !8799, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 %2, metadata !8800, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32* %3, metadata !8801, metadata !DIExpression()), !dbg !8802
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8803, !srcloc !8805
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8806
  ret i32 %5, !dbg !8807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8810, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i32 %1, metadata !8811, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i32 %2, metadata !8812, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i32* %3, metadata !8813, metadata !DIExpression()), !dbg !8818
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8819
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8821
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8821
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8821
  br i1 %11, label %33, label %12, !dbg !8821

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8818
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8818
  call void @llvm.dbg.value(metadata i8* %14, metadata !8816, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i32 %13, metadata !8814, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i32 %1, metadata !8815, metadata !DIExpression()), !dbg !8818
  br label %15, !dbg !8822

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8824
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8818
  call void @llvm.dbg.value(metadata i8* %17, metadata !8816, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i32 %16, metadata !8815, metadata !DIExpression()), !dbg !8818
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8825
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8828
  call void @llvm.dbg.value(metadata i8* %19, metadata !8816, metadata !DIExpression()), !dbg !8818
  %20 = load i8, i8* %17, align 1, !dbg !8829
  %21 = zext i8 %20 to i32, !dbg !8830
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8825
  %23 = icmp eq i32 %22, -1, !dbg !8831
  br i1 %23, label %30, label %24, !dbg !8832

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %25, metadata !8815, metadata !DIExpression()), !dbg !8818
  %26 = icmp eq i32 %25, 0, !dbg !8834
  br i1 %26, label %27, label %15, !dbg !8835, !llvm.loop !8836

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8838
  call void @llvm.dbg.value(metadata i32 %28, metadata !8814, metadata !DIExpression()), !dbg !8818
  %29 = icmp eq i32 %28, 0, !dbg !8839
  br i1 %29, label %30, label %12, !dbg !8840, !llvm.loop !8841

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8818
  call void @llvm.dbg.value(metadata i32 %31, metadata !8814, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.label(metadata !8817), !dbg !8844
  %32 = sub i32 %2, %31, !dbg !8845
  br label %33, !dbg !8846

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8818
  ret i32 %34, !dbg !8847
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8852, metadata !DIExpression()), !dbg !8853
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8854
  %3 = icmp eq i32 %2, -1, !dbg !8856
  br i1 %3, label %8, label %4, !dbg !8857

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8858
  %6 = icmp eq i32 %5, -1, !dbg !8859
  %7 = sext i1 %6 to i32, !dbg !8858
  br label %8, !dbg !8860

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8853
  ret i32 %9, !dbg !8861
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_simple_submit(%struct.rtio* noundef %0) #1 !dbg !8862 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !8953, metadata !DIExpression()), !dbg !8959
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !8960
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8960
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !8960
  %5 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %4) #24, !dbg !8960
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8960
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !8960
  %8 = load i32, i32* %7, align 4, !dbg !8960
  %9 = add i32 %8, %5, !dbg !8960
  call void @llvm.dbg.value(metadata i32 %9, metadata !8956, metadata !DIExpression()), !dbg !8961
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !8960
  %11 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %10) #24, !dbg !8960
  %12 = icmp eq i32 %9, %11, !dbg !8960
  call void @llvm.dbg.value(metadata i1 %12, metadata !8958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8961
  br i1 %12, label %23, label %13, !dbg !8960

13:                                               ; preds = %1
  %14 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8962
  %15 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %14, i32 0, i32 0, i32 1, !dbg !8962
  %16 = load i32, i32* %15, align 4, !dbg !8962
  %17 = add i32 %16, 1, !dbg !8962
  store i32 %17, i32* %15, align 4, !dbg !8962
  %18 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8960
  %19 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 0, i32 4, !dbg !8960
  %20 = load i32, i32* %19, align 4, !dbg !8960
  %21 = and i32 %20, %9, !dbg !8960
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 1, i32 %21, !dbg !8960
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %22, metadata !8954, metadata !DIExpression()), !dbg !8959
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %22, %struct.rtio* noundef nonnull %0) #24, !dbg !8965
  br label %23, !dbg !8968

23:                                               ; preds = %1, %13
  ret i32 0, !dbg !8969
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.90(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8970 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8972, metadata !DIExpression()), !dbg !8973
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !8974
  ret i32 %2, !dbg !8975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !8976 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !8978, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !8979, metadata !DIExpression()), !dbg !8980
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !8981
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !8981
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !8982
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !8982
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !8983
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !8983
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !8984
  ret void, !dbg !8985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !8986 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !8988, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !8989, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.value(metadata i32 %2, metadata !8990, metadata !DIExpression()), !dbg !8992
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !8993
  %5 = load i8*, i8** %4, align 4, !dbg !8993
  call void @llvm.dbg.value(metadata i8* %5, metadata !8991, metadata !DIExpression()), !dbg !8992
  %6 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !8994
  %7 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !8994
  %8 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %7, i32 0, i32 0, i32 1, !dbg !8994
  %9 = load i32, i32* %8, align 4, !dbg !8994
  %10 = icmp eq i32 %9, 0, !dbg !8994
  br i1 %10, label %15, label %11, !dbg !8997

11:                                               ; preds = %3
  %12 = add i32 %9, -1, !dbg !8998
  store i32 %12, i32* %8, align 4, !dbg !8998
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !8998
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !8998
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %14) #24, !dbg !8998
  br label %15, !dbg !8998

15:                                               ; preds = %11, %3
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %5) #24, !dbg !9000
  %16 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9001
  ret void, !dbg !9002
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.93(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9003 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9005, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.value(metadata i32 1, metadata !9006, metadata !DIExpression()), !dbg !9007
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9008
  ret void, !dbg !9009
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9010 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9014, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 %1, metadata !9015, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i8* %2, metadata !9016, metadata !DIExpression()), !dbg !9022
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9023
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9023
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9023
  %7 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %6) #24, !dbg !9023
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9023
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9023
  %10 = load i32, i32* %9, align 4, !dbg !9023
  %11 = add i32 %10, %7, !dbg !9023
  call void @llvm.dbg.value(metadata i32 %11, metadata !9019, metadata !DIExpression()), !dbg !9024
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9023
  %13 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %12) #24, !dbg !9023
  %14 = sub i32 %11, %13, !dbg !9023
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9023
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9023
  %17 = load i32, i32* %16, align 4, !dbg !9023
  %18 = add i32 %17, 1, !dbg !9023
  %19 = icmp ult i32 %14, %18, !dbg !9023
  call void @llvm.dbg.value(metadata i1 %19, metadata !9021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9024
  br i1 %19, label %22, label %20, !dbg !9023

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9017, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9022
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9025
  tail call fastcc void @atomic_inc(i32* noundef nonnull %21) #24, !dbg !9028
  br label %40, !dbg !9029

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9030
  %24 = load i32, i32* %23, align 4, !dbg !9030
  %25 = add i32 %24, 1, !dbg !9030
  store i32 %25, i32* %23, align 4, !dbg !9030
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9023
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9023
  %28 = load i32, i32* %27, align 4, !dbg !9023
  %29 = and i32 %28, %11, !dbg !9023
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9017, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9022
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9033
  store i32 %1, i32* %30, align 4, !dbg !9035
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9036
  store i8* %2, i8** %31, align 4, !dbg !9037
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9038
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9038
  %34 = load i32, i32* %33, align 4, !dbg !9038
  %35 = icmp eq i32 %34, 0, !dbg !9038
  br i1 %35, label %40, label %36, !dbg !9041

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9042
  store i32 %37, i32* %33, align 4, !dbg !9042
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9042
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9042
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %39) #24, !dbg !9042
  br label %40, !dbg !9042

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9044
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9045 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9049, metadata !DIExpression()), !dbg !9050
  tail call fastcc void @atomic_add.93(i32* noundef %0) #24, !dbg !9051
  ret void, !dbg !9052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_err(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9053 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9055, metadata !DIExpression()), !dbg !9070
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9056, metadata !DIExpression()), !dbg !9070
  call void @llvm.dbg.value(metadata i32 %2, metadata !9057, metadata !DIExpression()), !dbg !9070
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9071
  call void @llvm.dbg.value(metadata i8* undef, metadata !9059, metadata !DIExpression()), !dbg !9070
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9072
  %6 = load i16, i16* %5, align 2, !dbg !9072
  %7 = and i16 %6, 1, !dbg !9073
  %8 = icmp eq i16 %7, 0, !dbg !9074
  call void @llvm.dbg.value(metadata i1 %8, metadata !9060, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9070
  %9 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9075
  %10 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9075
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %10, i32 0, i32 0, i32 1, !dbg !9075
  %12 = load i32, i32* %11, align 4, !dbg !9075
  %13 = icmp eq i32 %12, 0, !dbg !9075
  br i1 %13, label %18, label %14, !dbg !9078

14:                                               ; preds = %3
  %15 = add i32 %12, -1, !dbg !9079
  store i32 %15, i32* %11, align 4, !dbg !9079
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9079
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 3, !dbg !9079
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %17) #24, !dbg !9079
  br label %18, !dbg !9079

18:                                               ; preds = %14, %3
  %19 = load i8*, i8** %4, align 4, !dbg !9081
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %19) #24, !dbg !9082
  br i1 %8, label %69, label %20, !dbg !9083

20:                                               ; preds = %18
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9084
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 3, !dbg !9084
  %23 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %22) #24, !dbg !9084
  %24 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9084
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 1, !dbg !9084
  %26 = load i32, i32* %25, align 4, !dbg !9084
  %27 = add i32 %26, %23, !dbg !9084
  call void @llvm.dbg.value(metadata i32 %27, metadata !9061, metadata !DIExpression()), !dbg !9085
  %28 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 2, !dbg !9084
  %29 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %28) #24, !dbg !9084
  %30 = icmp eq i32 %27, %29, !dbg !9084
  call void @llvm.dbg.value(metadata i1 %30, metadata !9065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9085
  br i1 %30, label %71, label %31, !dbg !9084

31:                                               ; preds = %20, %56
  %32 = phi i32 [ %63, %56 ], [ %27, %20 ]
  %33 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9086
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %33, i32 0, i32 0, i32 1, !dbg !9086
  %35 = load i32, i32* %34, align 4, !dbg !9086
  %36 = add i32 %35, 1, !dbg !9086
  store i32 %36, i32* %34, align 4, !dbg !9086
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9086
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 4, !dbg !9086
  %39 = load i32, i32* %38, align 4, !dbg !9086
  %40 = and i32 %39, %32, !dbg !9086
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %37, i32 %40), metadata !9058, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9070
  %41 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 2, !dbg !9087
  %42 = load i16, i16* %41, align 2, !dbg !9087
  %43 = and i16 %42, 1, !dbg !9088
  %44 = icmp eq i16 %43, 0, !dbg !9089
  br i1 %44, label %67, label %45, !dbg !9090

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 4, !dbg !9091
  %47 = load i8*, i8** %46, align 4, !dbg !9091
  call void @llvm.dbg.value(metadata i8* %47, metadata !9059, metadata !DIExpression()), !dbg !9070
  %48 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9092
  %49 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %48, i32 0, i32 0, i32 1, !dbg !9092
  %50 = load i32, i32* %49, align 4, !dbg !9092
  %51 = icmp eq i32 %50, 0, !dbg !9092
  br i1 %51, label %56, label %52, !dbg !9095

52:                                               ; preds = %45
  %53 = add i32 %50, -1, !dbg !9096
  store i32 %53, i32* %49, align 4, !dbg !9096
  %54 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9096
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %54, i32 0, i32 0, i32 3, !dbg !9096
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %55) #24, !dbg !9096
  br label %56, !dbg !9096

56:                                               ; preds = %52, %45
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %47) #24, !dbg !9098
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9099
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 3, !dbg !9099
  %59 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %58) #24, !dbg !9099
  %60 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9099
  %61 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 1, !dbg !9099
  %62 = load i32, i32* %61, align 4, !dbg !9099
  %63 = add i32 %62, %59, !dbg !9099
  call void @llvm.dbg.value(metadata i32 %63, metadata !9066, metadata !DIExpression()), !dbg !9100
  %64 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 2, !dbg !9099
  %65 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %64) #24, !dbg !9099
  %66 = icmp eq i32 %63, %65, !dbg !9099
  call void @llvm.dbg.value(metadata i1 %66, metadata !9069, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9100
  br i1 %66, label %71, label %31, !dbg !9099

67:                                               ; preds = %31
  %68 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, !dbg !9086
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %68, metadata !9058, metadata !DIExpression()), !dbg !9070
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %68, %struct.rtio* noundef nonnull %0) #24, !dbg !9101
  br label %71, !dbg !9104

69:                                               ; preds = %18
  %70 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9105
  br label %71

71:                                               ; preds = %56, %20, %67, %69
  ret void, !dbg !9107
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_concurrent_submit(%struct.rtio* noundef %0) local_unnamed_addr #1 !dbg !9108 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9110, metadata !DIExpression()), !dbg !9141
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.98, i32 0, i32 0), i32 noundef 73) #25, !dbg !9142
  %2 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9147
  %3 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %2, align 4, !dbg !9147
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %3, metadata !9111, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9148, metadata !DIExpression()) #23, !dbg !9155
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9157, !srcloc !9163
  call void @llvm.dbg.value(metadata i32 undef, metadata !9160, metadata !DIExpression()) #23, !dbg !9164
  call void @llvm.dbg.value(metadata i32 undef, metadata !9161, metadata !DIExpression()) #23, !dbg !9164
  call void @llvm.dbg.value(metadata i32 undef, metadata !9154, metadata !DIExpression()) #23, !dbg !9155
  call void @llvm.dbg.value(metadata i32 undef, metadata !9114, metadata !DIExpression()), !dbg !9141
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 6, !dbg !9165
  %6 = load %struct.rtio_sqe*, %struct.rtio_sqe** %5, align 4, !dbg !9165
  %7 = icmp eq %struct.rtio_sqe* %6, null, !dbg !9166
  %8 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9167
  %9 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9167
  br i1 %7, label %10, label %26, !dbg !9168

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 3, !dbg !9169
  %12 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %11) #24, !dbg !9169
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9169
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 1, !dbg !9169
  %15 = load i32, i32* %14, align 4, !dbg !9169
  %16 = add i32 %15, %12, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %16, metadata !9119, metadata !DIExpression()), !dbg !9170
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 2, !dbg !9169
  %18 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %17) #24, !dbg !9169
  %19 = icmp eq i32 %16, %18, !dbg !9169
  call void @llvm.dbg.value(metadata i1 %19, metadata !9123, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9170
  br i1 %19, label %45, label %20, !dbg !9169

20:                                               ; preds = %10
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9169
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 4, !dbg !9169
  %23 = load i32, i32* %22, align 4, !dbg !9169
  %24 = and i32 %23, %16, !dbg !9169
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 1, i32 %24, !dbg !9169
  br label %47, !dbg !9169

26:                                               ; preds = %1
  %27 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 1, i32 0, !dbg !9171
  %28 = ptrtoint %struct.rtio_sqe* %6 to i32, !dbg !9171
  %29 = ptrtoint %struct.rtio_sqe* %27 to i32, !dbg !9171
  %30 = sub i32 %28, %29, !dbg !9171
  %31 = sdiv exact i32 %30, 20, !dbg !9171
  call void @llvm.dbg.value(metadata i32 %31, metadata !9124, metadata !DIExpression()), !dbg !9172
  %32 = add nsw i32 %31, 1, !dbg !9171
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 4, !dbg !9171
  %34 = load i32, i32* %33, align 4, !dbg !9171
  %35 = and i32 %32, %34, !dbg !9171
  %36 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !9171
  %37 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %36) #24, !dbg !9171
  %38 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9171
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 4, !dbg !9171
  %40 = load i32, i32* %39, align 4, !dbg !9171
  %41 = and i32 %40, %37, !dbg !9171
  %42 = icmp eq i32 %35, %41, !dbg !9171
  call void @llvm.dbg.value(metadata i1 %42, metadata !9127, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9172
  %43 = and i32 %32, %40, !dbg !9171
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 1, i32 %43, !dbg !9171
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9112, metadata !DIExpression()), !dbg !9141
  br i1 %42, label %45, label %47

45:                                               ; preds = %26, %10
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9113, metadata !DIExpression()), !dbg !9141
  %46 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9173
  store %struct.rtio_sqe* null, %struct.rtio_sqe** %46, align 4, !dbg !9174
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9113, metadata !DIExpression()), !dbg !9141
  br label %140, !dbg !9175

47:                                               ; preds = %20, %26
  %48 = phi %struct.rtio_sqe* [ %44, %26 ], [ %25, %20 ], !dbg !9167
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9113, metadata !DIExpression()), !dbg !9141
  %49 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 8
  %50 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 7
  %51 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9113, metadata !DIExpression()), !dbg !9141
  %52 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9176
  br i1 %52, label %55, label %110, !dbg !9177

53:                                               ; preds = %89
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %109, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9113, metadata !DIExpression()), !dbg !9141
  %54 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9176
  br i1 %54, label %55, label %110, !dbg !9177

55:                                               ; preds = %47, %53
  %56 = phi %struct.rtio_sqe* [ %109, %53 ], [ %48, %47 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9112, metadata !DIExpression()), !dbg !9141
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.100, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9178
  %57 = tail call fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9183
  call void @llvm.dbg.value(metadata i16 %57, metadata !9128, metadata !DIExpression()), !dbg !9184
  %58 = zext i16 %57 to i32, !dbg !9185
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.101, i32 0, i32 0), i32 noundef 73, i32 noundef %58) #25, !dbg !9185
  %59 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %49, align 4, !dbg !9190
  %60 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %59, i32 %58, !dbg !9191
  store %struct.rtio_sqe* %56, %struct.rtio_sqe** %60, align 4, !dbg !9192
  %61 = load i8*, i8** %50, align 4, !dbg !9193
  %62 = getelementptr inbounds i8, i8* %61, i32 %58, !dbg !9194
  store i8 2, i8* %62, align 1, !dbg !9195
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.102, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9196
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9112, metadata !DIExpression()), !dbg !9141
  br label %63, !dbg !9201

63:                                               ; preds = %55, %69
  %64 = phi %struct.rtio_sqe* [ %56, %55 ], [ %88, %69 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %64, metadata !9112, metadata !DIExpression()), !dbg !9141
  %65 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %64, i32 0, i32 2, !dbg !9202
  %66 = load i16, i16* %65, align 2, !dbg !9202
  %67 = and i16 %66, 1, !dbg !9203
  %68 = icmp eq i16 %67, 0, !dbg !9201
  br i1 %68, label %89, label %69, !dbg !9204

69:                                               ; preds = %63
  %70 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9205
  %71 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 1, i32 0, !dbg !9205
  %72 = ptrtoint %struct.rtio_sqe* %64 to i32, !dbg !9205
  %73 = ptrtoint %struct.rtio_sqe* %71 to i32, !dbg !9205
  %74 = sub i32 %72, %73, !dbg !9205
  %75 = sdiv exact i32 %74, 20, !dbg !9205
  call void @llvm.dbg.value(metadata i32 %75, metadata !9130, metadata !DIExpression()), !dbg !9206
  %76 = add nsw i32 %75, 1, !dbg !9205
  %77 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 4, !dbg !9205
  %78 = load i32, i32* %77, align 4, !dbg !9205
  %79 = and i32 %76, %78, !dbg !9205
  %80 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 2, !dbg !9205
  %81 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %80) #24, !dbg !9205
  %82 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9205
  %83 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 0, i32 4, !dbg !9205
  %84 = load i32, i32* %83, align 4, !dbg !9205
  %85 = and i32 %84, %81, !dbg !9205
  %86 = icmp eq i32 %79, %85, !dbg !9205
  call void @llvm.dbg.value(metadata i1 %86, metadata !9133, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9206
  %87 = and i32 %76, %84, !dbg !9205
  %88 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 1, i32 %87, !dbg !9205
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9112, metadata !DIExpression()), !dbg !9141
  br i1 %86, label %89, label %63, !dbg !9201

89:                                               ; preds = %63, %69
  %90 = phi %struct.rtio_sqe* [ null, %69 ], [ %64, %63 ], !dbg !9141
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.103, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef %90) #25, !dbg !9207
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9113, metadata !DIExpression()), !dbg !9141
  %91 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9212
  %92 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 1, i32 0, !dbg !9212
  %93 = ptrtoint %struct.rtio_sqe* %90 to i32, !dbg !9212
  %94 = ptrtoint %struct.rtio_sqe* %92 to i32, !dbg !9212
  %95 = sub i32 %93, %94, !dbg !9212
  %96 = sdiv exact i32 %95, 20, !dbg !9212
  call void @llvm.dbg.value(metadata i32 %96, metadata !9134, metadata !DIExpression()), !dbg !9213
  %97 = add nsw i32 %96, 1, !dbg !9212
  %98 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 4, !dbg !9212
  %99 = load i32, i32* %98, align 4, !dbg !9212
  %100 = and i32 %97, %99, !dbg !9212
  %101 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 2, !dbg !9212
  %102 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %101) #24, !dbg !9212
  %103 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9212
  %104 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 0, i32 4, !dbg !9212
  %105 = load i32, i32* %104, align 4, !dbg !9212
  %106 = and i32 %105, %102, !dbg !9212
  %107 = icmp eq i32 %100, %106, !dbg !9212
  call void @llvm.dbg.value(metadata i1 %107, metadata !9136, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9213
  %108 = and i32 %97, %105, !dbg !9212
  %109 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 1, i32 %108, !dbg !9212
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9112, metadata !DIExpression()), !dbg !9141
  br i1 %107, label %110, label %53, !dbg !9214

110:                                              ; preds = %89, %53, %47
  %111 = phi %struct.rtio_sqe* [ %48, %47 ], [ %90, %53 ], [ %90, %89 ], !dbg !9141
  %112 = phi %struct.rtio_sqe* [ %48, %47 ], [ null, %89 ], [ %109, %53 ], !dbg !9141
  %113 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9173
  store %struct.rtio_sqe* %112, %struct.rtio_sqe** %113, align 4, !dbg !9174
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9113, metadata !DIExpression()), !dbg !9141
  %114 = icmp eq %struct.rtio_sqe* %112, null, !dbg !9215
  br i1 %114, label %140, label %115, !dbg !9175

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  %117 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9216
  %118 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %117, i32 0, i32 0, i32 4
  %119 = load i32, i32* %118, align 4, !dbg !9216
  br label %120, !dbg !9175

120:                                              ; preds = %115, %120
  %121 = phi i32 [ %119, %115 ], [ %135, %120 ], !dbg !9216
  %122 = phi %struct.rtio_sq* [ %117, %115 ], [ %133, %120 ], !dbg !9216
  %123 = phi %struct.rtio_sqe* [ %112, %115 ], [ %139, %120 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9113, metadata !DIExpression()), !dbg !9141
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 1, i32 0, !dbg !9216
  %125 = ptrtoint %struct.rtio_sqe* %123 to i32, !dbg !9216
  %126 = ptrtoint %struct.rtio_sqe* %124 to i32, !dbg !9216
  %127 = sub i32 %125, %126, !dbg !9216
  %128 = sdiv exact i32 %127, 20, !dbg !9216
  call void @llvm.dbg.value(metadata i32 %128, metadata !9137, metadata !DIExpression()), !dbg !9217
  %129 = add nsw i32 %128, 1, !dbg !9216
  %130 = and i32 %129, %121, !dbg !9216
  %131 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 0, i32 2, !dbg !9216
  %132 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %131) #24, !dbg !9216
  %133 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9216
  %134 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 0, i32 4, !dbg !9216
  %135 = load i32, i32* %134, align 4, !dbg !9216
  %136 = and i32 %135, %132, !dbg !9216
  %137 = icmp eq i32 %130, %136, !dbg !9216
  call void @llvm.dbg.value(metadata i1 %137, metadata !9140, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9217
  %138 = and i32 %129, %135, !dbg !9216
  %139 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 1, i32 %138, !dbg !9216
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9112, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9112, metadata !DIExpression()), !dbg !9141
  br i1 %137, label %140, label %120, !dbg !9175

140:                                              ; preds = %120, %45, %110
  %141 = phi %struct.rtio_sqe* [ %111, %110 ], [ null, %45 ], [ %123, %120 ], !dbg !9141
  %142 = extractvalue { i32, i32 } %4, 0, !dbg !9157
  call void @llvm.dbg.value(metadata i32 %142, metadata !9160, metadata !DIExpression()) #23, !dbg !9164
  call void @llvm.dbg.value(metadata i32 %142, metadata !9154, metadata !DIExpression()) #23, !dbg !9155
  call void @llvm.dbg.value(metadata i32 %142, metadata !9114, metadata !DIExpression()), !dbg !9141
  store %struct.rtio_sqe* %141, %struct.rtio_sqe** %5, align 4, !dbg !9218
  tail call fastcc void @conex_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9219
  call void @llvm.dbg.value(metadata i32 undef, metadata !9220, metadata !DIExpression()) #23, !dbg !9226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9225, metadata !DIExpression()) #23, !dbg !9226
  call void @llvm.dbg.value(metadata i32 undef, metadata !9228, metadata !DIExpression()) #23, !dbg !9231
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %142) #23, !dbg !9233, !srcloc !9234
  ret i32 0, !dbg !9235
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.99(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9236 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9238, metadata !DIExpression()), !dbg !9239
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9240
  ret i32 %2, !dbg !9241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9242 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9246, metadata !DIExpression()), !dbg !9247
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9248
  %3 = load i16, i16* %2, align 4, !dbg !9248
  %4 = zext i16 %3 to i32, !dbg !9249
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9250
  %6 = load i16, i16* %5, align 2, !dbg !9250
  %7 = zext i16 %6 to i32, !dbg !9251
  %8 = sub nsw i32 %4, %7, !dbg !9252
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4, !dbg !9253
  %10 = load i16, i16* %9, align 4, !dbg !9253
  %11 = zext i16 %10 to i32, !dbg !9254
  %12 = icmp sle i32 %8, %11, !dbg !9255
  ret i1 %12, !dbg !9256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* nocapture noundef %0) unnamed_addr #11 !dbg !9257 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9261, metadata !DIExpression()), !dbg !9263
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9264
  %3 = load i16, i16* %2, align 4, !dbg !9264
  call void @llvm.dbg.value(metadata i16 %3, metadata !9262, metadata !DIExpression()), !dbg !9263
  %4 = add i16 %3, 1, !dbg !9265
  store i16 %4, i16* %2, align 4, !dbg !9265
  ret i16 %3, !dbg !9266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9267 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9271, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9272, metadata !DIExpression()), !dbg !9275
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9276
  %4 = load i16, i16* %3, align 2, !dbg !9276
  call void @llvm.dbg.value(metadata i16 %4, metadata !9273, metadata !DIExpression()), !dbg !9277
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9273, metadata !DIExpression()), !dbg !9277
  %6 = load i16, i16* %5, align 4, !dbg !9278
  %7 = icmp ult i16 %4, %6, !dbg !9280
  br i1 %7, label %8, label %13, !dbg !9281

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 8
  %12 = zext i16 %4 to i32, !dbg !9281
  br label %14, !dbg !9281

13:                                               ; preds = %35, %2
  ret void, !dbg !9282

14:                                               ; preds = %8, %35
  %15 = phi i16 [ %6, %8 ], [ %36, %35 ]
  %16 = phi i32 [ %12, %8 ], [ %37, %35 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9273, metadata !DIExpression()), !dbg !9277
  %17 = load i8*, i8** %9, align 4, !dbg !9283
  %18 = load i16, i16* %10, align 4, !dbg !9286
  %19 = trunc i32 %16 to i16, !dbg !9287
  %20 = and i16 %18, %19, !dbg !9287
  %21 = zext i16 %20 to i32, !dbg !9287
  %22 = getelementptr inbounds i8, i8* %17, i32 %21, !dbg !9288
  %23 = load i8, i8* %22, align 1, !dbg !9288
  %24 = and i8 %23, 2, !dbg !9289
  %25 = icmp eq i8 %24, 0, !dbg !9289
  br i1 %25, label %35, label %26, !dbg !9290

26:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.104, i32 0, i32 0), i32 noundef 73, i32 noundef %16) #25, !dbg !9291
  %27 = load i8*, i8** %9, align 4, !dbg !9297
  %28 = getelementptr inbounds i8, i8* %27, i32 %16, !dbg !9298
  %29 = load i8, i8* %28, align 1, !dbg !9299
  %30 = and i8 %29, -3, !dbg !9299
  store i8 %30, i8* %28, align 1, !dbg !9299
  %31 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %11, align 4, !dbg !9300
  %32 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %31, i32 %16, !dbg !9301
  %33 = load %struct.rtio_sqe*, %struct.rtio_sqe** %32, align 4, !dbg !9301
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %33, %struct.rtio* noundef %0) #24, !dbg !9302
  %34 = load i16, i16* %5, align 4, !dbg !9278
  br label %35, !dbg !9303

35:                                               ; preds = %14, %26
  %36 = phi i16 [ %15, %14 ], [ %34, %26 ], !dbg !9278
  %37 = add nuw nsw i32 %16, 1, !dbg !9304
  call void @llvm.dbg.value(metadata i32 %37, metadata !9273, metadata !DIExpression()), !dbg !9277
  %38 = zext i16 %36 to i32, !dbg !9280
  %39 = icmp ult i32 %37, %38, !dbg !9280
  br i1 %39, label %14, label %13, !dbg !9281, !llvm.loop !9305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9309, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9310, metadata !DIExpression()), !dbg !9311
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9312
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9312
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9313
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9313
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9314
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9314
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9315
  ret void, !dbg !9316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9317 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9319, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9320, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata i32 %2, metadata !9321, metadata !DIExpression()), !dbg !9331
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9332
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9332
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9324, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9148, metadata !DIExpression()) #23, !dbg !9333
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9335, !srcloc !9163
  call void @llvm.dbg.value(metadata i32 undef, metadata !9160, metadata !DIExpression()) #23, !dbg !9337
  call void @llvm.dbg.value(metadata i32 undef, metadata !9161, metadata !DIExpression()) #23, !dbg !9337
  call void @llvm.dbg.value(metadata i32 undef, metadata !9154, metadata !DIExpression()) #23, !dbg !9333
  call void @llvm.dbg.value(metadata i32 undef, metadata !9323, metadata !DIExpression()), !dbg !9331
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9338
  %8 = load i8*, i8** %7, align 4, !dbg !9338
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9339
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9340
  call void @llvm.dbg.value(metadata i16 %9, metadata !9325, metadata !DIExpression()), !dbg !9331
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9341
  %11 = load i16, i16* %10, align 2, !dbg !9341
  %12 = and i16 %11, 1, !dbg !9342
  %13 = icmp eq i16 %12, 0, !dbg !9342
  br i1 %13, label %40, label %14, !dbg !9343

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9344
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9344
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9344
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9344
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9344
  %20 = sub i32 %18, %19, !dbg !9344
  %21 = sdiv exact i32 %20, 20, !dbg !9344
  call void @llvm.dbg.value(metadata i32 %21, metadata !9326, metadata !DIExpression()), !dbg !9345
  %22 = add nsw i32 %21, 1, !dbg !9344
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9344
  %24 = load i32, i32* %23, align 4, !dbg !9344
  %25 = and i32 %22, %24, !dbg !9344
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9344
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9344
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9344
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9344
  %30 = load i32, i32* %29, align 4, !dbg !9344
  %31 = and i32 %30, %27, !dbg !9344
  %32 = icmp eq i32 %25, %31, !dbg !9344
  call void @llvm.dbg.value(metadata i1 %32, metadata !9330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9345
  %33 = and i32 %22, %30, !dbg !9344
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %33, !dbg !9344
  %35 = select i1 %32, %struct.rtio_sqe* null, %struct.rtio_sqe* %34, !dbg !9344
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9322, metadata !DIExpression()), !dbg !9331
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %35, %struct.rtio* noundef nonnull %0) #24, !dbg !9346
  %36 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 8, !dbg !9347
  %37 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %36, align 4, !dbg !9347
  %38 = zext i16 %9 to i32, !dbg !9348
  %39 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %37, i32 %38, !dbg !9348
  store %struct.rtio_sqe* %35, %struct.rtio_sqe** %39, align 4, !dbg !9349
  br label %47, !dbg !9350

40:                                               ; preds = %3
  %41 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9351
  %42 = load i8*, i8** %41, align 4, !dbg !9351
  %43 = zext i16 %9 to i32, !dbg !9353
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !9353
  %45 = load i8, i8* %44, align 1, !dbg !9354
  %46 = or i8 %45, 1, !dbg !9354
  store i8 %46, i8* %44, align 1, !dbg !9354
  br label %47

47:                                               ; preds = %40, %14
  %48 = extractvalue { i32, i32 } %6, 0, !dbg !9335
  call void @llvm.dbg.value(metadata i32 %48, metadata !9160, metadata !DIExpression()) #23, !dbg !9337
  call void @llvm.dbg.value(metadata i32 %48, metadata !9154, metadata !DIExpression()) #23, !dbg !9333
  call void @llvm.dbg.value(metadata i32 %48, metadata !9323, metadata !DIExpression()), !dbg !9331
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef nonnull %5) #24, !dbg !9355
  call void @llvm.dbg.value(metadata i32 undef, metadata !9220, metadata !DIExpression()) #23, !dbg !9356
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9225, metadata !DIExpression()) #23, !dbg !9356
  call void @llvm.dbg.value(metadata i32 undef, metadata !9228, metadata !DIExpression()) #23, !dbg !9358
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #23, !dbg !9360, !srcloc !9234
  ret void, !dbg !9361
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit.106(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9362 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9366, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.value(metadata i32 %1, metadata !9367, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.value(metadata i8* %2, metadata !9368, metadata !DIExpression()), !dbg !9374
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9375
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9375
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9375
  %7 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %6) #24, !dbg !9375
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9375
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9375
  %10 = load i32, i32* %9, align 4, !dbg !9375
  %11 = add i32 %10, %7, !dbg !9375
  call void @llvm.dbg.value(metadata i32 %11, metadata !9371, metadata !DIExpression()), !dbg !9376
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9375
  %13 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %12) #24, !dbg !9375
  %14 = sub i32 %11, %13, !dbg !9375
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9375
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9375
  %17 = load i32, i32* %16, align 4, !dbg !9375
  %18 = add i32 %17, 1, !dbg !9375
  %19 = icmp ult i32 %14, %18, !dbg !9375
  call void @llvm.dbg.value(metadata i1 %19, metadata !9373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9376
  br i1 %19, label %22, label %20, !dbg !9375

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9369, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9374
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9377
  tail call fastcc void @atomic_inc.109(i32* noundef nonnull %21) #24, !dbg !9380
  br label %40, !dbg !9381

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9382
  %24 = load i32, i32* %23, align 4, !dbg !9382
  %25 = add i32 %24, 1, !dbg !9382
  store i32 %25, i32* %23, align 4, !dbg !9382
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9375
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9375
  %28 = load i32, i32* %27, align 4, !dbg !9375
  %29 = and i32 %28, %11, !dbg !9375
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9369, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9374
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9385
  store i32 %1, i32* %30, align 4, !dbg !9387
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9388
  store i8* %2, i8** %31, align 4, !dbg !9389
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9390
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9390
  %34 = load i32, i32* %33, align 4, !dbg !9390
  %35 = icmp eq i32 %34, 0, !dbg !9390
  br i1 %35, label %40, label %36, !dbg !9393

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9394
  store i32 %37, i32* %33, align 4, !dbg !9394
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9394
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9394
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %39) #24, !dbg !9394
  br label %40, !dbg !9394

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9396
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* nocapture noundef readonly %0, %struct.rtio_sqe* noundef readnone %1) unnamed_addr #9 !dbg !9397 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9401, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9402, metadata !DIExpression()), !dbg !9404
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9405
  %4 = load i16, i16* %3, align 2, !dbg !9405
  call void @llvm.dbg.value(metadata i16 %4, metadata !9403, metadata !DIExpression()), !dbg !9404
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2
  %6 = load i16, i16* %5, align 4
  call void @llvm.dbg.value(metadata i16 %4, metadata !9403, metadata !DIExpression()), !dbg !9404
  %7 = icmp ult i16 %4, %6, !dbg !9406
  br i1 %7, label %8, label %23, !dbg !9409

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 8, !dbg !9410
  %10 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %9, align 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4
  %12 = load i16, i16* %11, align 4
  br label %13, !dbg !9409

13:                                               ; preds = %8, %20
  %14 = phi i16 [ %4, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i16 %14, metadata !9403, metadata !DIExpression()), !dbg !9404
  %15 = and i16 %12, %14, !dbg !9413
  %16 = zext i16 %15 to i32, !dbg !9413
  %17 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %10, i32 %16, !dbg !9414
  %18 = load %struct.rtio_sqe*, %struct.rtio_sqe** %17, align 4, !dbg !9414
  %19 = icmp eq %struct.rtio_sqe* %18, %1, !dbg !9415
  br i1 %19, label %23, label %20, !dbg !9416

20:                                               ; preds = %13
  %21 = add nuw i16 %14, 1, !dbg !9417
  call void @llvm.dbg.value(metadata i16 %21, metadata !9403, metadata !DIExpression()), !dbg !9404
  %22 = icmp ult i16 %21, %6, !dbg !9406
  br i1 %22, label %13, label %23, !dbg !9409, !llvm.loop !9418

23:                                               ; preds = %20, %13, %2
  %24 = phi i16 [ %4, %2 ], [ %14, %13 ], [ %6, %20 ], !dbg !9404
  ret i16 %24, !dbg !9420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9421 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9423, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9424, metadata !DIExpression()), !dbg !9425
  tail call fastcc void @conex_sweep(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9426
  tail call fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9427
  ret void, !dbg !9428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep(%struct.rtio* nocapture noundef readonly %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9429 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9431, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9432, metadata !DIExpression()), !dbg !9435
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9436
  %4 = load i16, i16* %3, align 2, !dbg !9436
  call void @llvm.dbg.value(metadata i16 %4, metadata !9433, metadata !DIExpression()), !dbg !9437
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7, !dbg !9438
  %6 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9433, metadata !DIExpression()), !dbg !9437
  %7 = load i16, i16* %6, align 4, !dbg !9442
  %8 = icmp ult i16 %4, %7, !dbg !9443
  br i1 %8, label %9, label %30, !dbg !9444

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = zext i16 %4 to i32, !dbg !9444
  br label %12, !dbg !9444

12:                                               ; preds = %9, %23
  %13 = phi i32 [ %11, %9 ], [ %26, %23 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !9433, metadata !DIExpression()), !dbg !9437
  %14 = load i8*, i8** %5, align 4, !dbg !9438
  %15 = load i16, i16* %10, align 4, !dbg !9445
  %16 = trunc i32 %13 to i16, !dbg !9446
  %17 = and i16 %15, %16, !dbg !9446
  %18 = zext i16 %17 to i32, !dbg !9446
  %19 = getelementptr inbounds i8, i8* %14, i32 %18, !dbg !9447
  %20 = load i8, i8* %19, align 1, !dbg !9447
  %21 = and i8 %20, 1, !dbg !9448
  %22 = icmp eq i8 %21, 0, !dbg !9448
  br i1 %22, label %30, label %23, !dbg !9449

23:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.107, i32 0, i32 0), i32 noundef 73, i32 noundef %13) #25, !dbg !9450
  tail call fastcc void @conex_sweep_task(%struct.rtio* noundef %0) #24, !dbg !9456
  %24 = load i16, i16* %3, align 2, !dbg !9457
  %25 = add i16 %24, 1, !dbg !9457
  store i16 %25, i16* %3, align 2, !dbg !9457
  %26 = add nuw nsw i32 %13, 1, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %26, metadata !9433, metadata !DIExpression()), !dbg !9437
  %27 = load i16, i16* %6, align 4, !dbg !9442
  %28 = zext i16 %27 to i32, !dbg !9443
  %29 = icmp ult i32 %26, %28, !dbg !9443
  br i1 %29, label %12, label %30, !dbg !9444, !llvm.loop !9459

30:                                               ; preds = %23, %12, %2
  ret void, !dbg !9461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @conex_sweep_task(%struct.rtio* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9462 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9464, metadata !DIExpression()), !dbg !9474
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* undef, metadata !9465, metadata !DIExpression()), !dbg !9474
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9475
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9475
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9475
  %5 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %4) #24, !dbg !9475
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9475
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9475
  %8 = load i32, i32* %7, align 4, !dbg !9475
  %9 = add i32 %8, %5, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %9, metadata !9467, metadata !DIExpression()), !dbg !9476
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9475
  %11 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %10) #24, !dbg !9475
  %12 = icmp eq i32 %9, %11, !dbg !9475
  call void @llvm.dbg.value(metadata i1 %12, metadata !9469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9476
  br i1 %12, label %48, label %13, !dbg !9475

13:                                               ; preds = %1, %37
  %14 = phi i32 [ %44, %37 ], [ %9, %1 ]
  %15 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9474
  %16 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %15, i32 0, i32 0, i32 1, !dbg !9474
  %17 = load i32, i32* %16, align 4, !dbg !9474
  %18 = add i32 %17, 1, !dbg !9474
  store i32 %18, i32* %16, align 4, !dbg !9474
  %19 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9474
  %20 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 0, i32 4, !dbg !9474
  %21 = load i32, i32* %20, align 4, !dbg !9474
  %22 = and i32 %21, %14, !dbg !9474
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %19, i32 %22), metadata !9466, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9474
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 1, i32 %22, i32 2, !dbg !9477
  %24 = load i16, i16* %23, align 2, !dbg !9477
  %25 = and i16 %24, 1, !dbg !9478
  %26 = icmp eq i16 %25, 0, !dbg !9479
  br i1 %26, label %48, label %27, !dbg !9480

27:                                               ; preds = %13
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9481
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 1, !dbg !9481
  %30 = load i32, i32* %29, align 4, !dbg !9481
  %31 = icmp eq i32 %30, 0, !dbg !9481
  br i1 %31, label %37, label %32, !dbg !9484

32:                                               ; preds = %27
  %33 = add i32 %30, -1, !dbg !9485
  store i32 %33, i32* %29, align 4, !dbg !9485
  %34 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9485
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %34, i32 0, i32 0, i32 3, !dbg !9485
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %35) #24, !dbg !9485
  %36 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9487
  br label %37, !dbg !9485

37:                                               ; preds = %32, %27
  %38 = phi %struct.rtio_sq* [ %36, %32 ], [ %28, %27 ], !dbg !9487
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 3, !dbg !9487
  %40 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %39) #24, !dbg !9487
  %41 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9487
  %42 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 1, !dbg !9487
  %43 = load i32, i32* %42, align 4, !dbg !9487
  %44 = add i32 %43, %40, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %44, metadata !9470, metadata !DIExpression()), !dbg !9488
  %45 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 2, !dbg !9487
  %46 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %45) #24, !dbg !9487
  %47 = icmp eq i32 %44, %46, !dbg !9487
  call void @llvm.dbg.value(metadata i1 %47, metadata !9473, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9488
  br i1 %47, label %48, label %13, !dbg !9487

48:                                               ; preds = %37, %13, %1
  %49 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9489
  %50 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %49, i32 0, i32 0, i32 1, !dbg !9489
  %51 = load i32, i32* %50, align 4, !dbg !9489
  %52 = icmp eq i32 %51, 0, !dbg !9489
  br i1 %52, label %57, label %53, !dbg !9492

53:                                               ; preds = %48
  %54 = add i32 %51, -1, !dbg !9493
  store i32 %54, i32* %50, align 4, !dbg !9493
  %55 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9493
  %56 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %55, i32 0, i32 0, i32 3, !dbg !9493
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %56) #24, !dbg !9493
  br label %57, !dbg !9493

57:                                               ; preds = %53, %48
  ret void, !dbg !9495
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.108(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9496 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 1, metadata !9499, metadata !DIExpression()), !dbg !9500
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9501
  ret void, !dbg !9502
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc.109(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9503 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9505, metadata !DIExpression()), !dbg !9506
  tail call fastcc void @atomic_add.108(i32* noundef %0) #24, !dbg !9507
  ret void, !dbg !9508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9509 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9511, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9512, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata i32 %2, metadata !9513, metadata !DIExpression()), !dbg !9527
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9528
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9528
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9516, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9148, metadata !DIExpression()) #23, !dbg !9529
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9531, !srcloc !9163
  call void @llvm.dbg.value(metadata i32 undef, metadata !9160, metadata !DIExpression()) #23, !dbg !9533
  call void @llvm.dbg.value(metadata i32 undef, metadata !9161, metadata !DIExpression()) #23, !dbg !9533
  call void @llvm.dbg.value(metadata i32 undef, metadata !9154, metadata !DIExpression()) #23, !dbg !9529
  call void @llvm.dbg.value(metadata i32 undef, metadata !9515, metadata !DIExpression()), !dbg !9527
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9534
  %8 = load i8*, i8** %7, align 4, !dbg !9534
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9535
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9536
  call void @llvm.dbg.value(metadata i16 %9, metadata !9517, metadata !DIExpression()), !dbg !9527
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9537
  %11 = load i16, i16* %10, align 2, !dbg !9537
  %12 = and i16 %11, 1, !dbg !9538
  %13 = icmp eq i16 %12, 0, !dbg !9538
  br i1 %13, label %64, label %14, !dbg !9539

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9540
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9540
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9540
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9540
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9540
  %20 = sub i32 %18, %19, !dbg !9540
  %21 = sdiv exact i32 %20, 20, !dbg !9540
  call void @llvm.dbg.value(metadata i32 %21, metadata !9518, metadata !DIExpression()), !dbg !9541
  %22 = add nsw i32 %21, 1, !dbg !9540
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9540
  %24 = load i32, i32* %23, align 4, !dbg !9540
  %25 = and i32 %22, %24, !dbg !9540
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9540
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9540
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9540
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9540
  %30 = load i32, i32* %29, align 4, !dbg !9540
  %31 = and i32 %30, %27, !dbg !9540
  %32 = icmp eq i32 %25, %31, !dbg !9540
  call void @llvm.dbg.value(metadata i1 %32, metadata !9522, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9541
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9514, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9514, metadata !DIExpression()), !dbg !9527
  br i1 %32, label %64, label %33, !dbg !9542

33:                                               ; preds = %14
  %34 = and i32 %22, %30, !dbg !9540
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %34, !dbg !9540
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9514, metadata !DIExpression()), !dbg !9527
  br label %36, !dbg !9543

36:                                               ; preds = %33, %42
  %37 = phi %struct.rtio_sqe* [ %63, %42 ], [ %35, %33 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %37, metadata !9514, metadata !DIExpression()), !dbg !9527
  %38 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 2, !dbg !9544
  %39 = load i16, i16* %38, align 2, !dbg !9544
  %40 = and i16 %39, 1, !dbg !9545
  %41 = icmp eq i16 %40, 0, !dbg !9542
  br i1 %41, label %64, label %42, !dbg !9543

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 4, !dbg !9546
  %44 = load i8*, i8** %43, align 4, !dbg !9546
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %44) #24, !dbg !9547
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9548
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 1, i32 0, !dbg !9548
  %47 = ptrtoint %struct.rtio_sqe* %37 to i32, !dbg !9548
  %48 = ptrtoint %struct.rtio_sqe* %46 to i32, !dbg !9548
  %49 = sub i32 %47, %48, !dbg !9548
  %50 = sdiv exact i32 %49, 20, !dbg !9548
  call void @llvm.dbg.value(metadata i32 %50, metadata !9523, metadata !DIExpression()), !dbg !9549
  %51 = add nsw i32 %50, 1, !dbg !9548
  %52 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 4, !dbg !9548
  %53 = load i32, i32* %52, align 4, !dbg !9548
  %54 = and i32 %51, %53, !dbg !9548
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 2, !dbg !9548
  %56 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %55) #24, !dbg !9548
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9548
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 4, !dbg !9548
  %59 = load i32, i32* %58, align 4, !dbg !9548
  %60 = and i32 %59, %56, !dbg !9548
  %61 = icmp eq i32 %54, %60, !dbg !9548
  call void @llvm.dbg.value(metadata i1 %61, metadata !9526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9549
  %62 = and i32 %51, %59, !dbg !9548
  %63 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 1, i32 %62, !dbg !9548
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9514, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9514, metadata !DIExpression()), !dbg !9527
  br i1 %61, label %64, label %36, !dbg !9542

64:                                               ; preds = %42, %36, %14, %3
  %65 = extractvalue { i32, i32 } %6, 0, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %65, metadata !9160, metadata !DIExpression()) #23, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %65, metadata !9154, metadata !DIExpression()) #23, !dbg !9529
  call void @llvm.dbg.value(metadata i32 %65, metadata !9515, metadata !DIExpression()), !dbg !9527
  %66 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9550
  %67 = load i8*, i8** %66, align 4, !dbg !9550
  %68 = zext i16 %9 to i32, !dbg !9551
  %69 = getelementptr inbounds i8, i8* %67, i32 %68, !dbg !9551
  %70 = load i8, i8* %69, align 1, !dbg !9552
  %71 = or i8 %70, 1, !dbg !9552
  store i8 %71, i8* %69, align 1, !dbg !9552
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %5) #24, !dbg !9553
  call void @llvm.dbg.value(metadata i32 undef, metadata !9220, metadata !DIExpression()) #23, !dbg !9554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9225, metadata !DIExpression()) #23, !dbg !9554
  call void @llvm.dbg.value(metadata i32 undef, metadata !9228, metadata !DIExpression()) #23, !dbg !9556
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %65) #23, !dbg !9558, !srcloc !9234
  ret void, !dbg !9559
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9562, metadata !DIExpression()), !dbg !9563
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9564
  ret void, !dbg !9565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9570, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32 %1, metadata !9571, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9572, metadata !DIExpression()), !dbg !9576
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9577
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9577
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9577
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9573, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32 %0, metadata !9575, metadata !DIExpression()), !dbg !9576
  %7 = icmp slt i32 %0, %1, !dbg !9578
  br i1 %7, label %8, label %22, !dbg !9581

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9575, metadata !DIExpression()), !dbg !9576
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9582
  %11 = icmp eq i32 %10, 0, !dbg !9582
  br i1 %11, label %19, label %12, !dbg !9585

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9586
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9588
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9588
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9590
  br i1 %15, label %19, label %16, !dbg !9591

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9592
  %18 = load i8*, i8** %17, align 4, !dbg !9592
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9593
  br label %19, !dbg !9594

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %20, metadata !9575, metadata !DIExpression()), !dbg !9576
  %21 = icmp eq i32 %20, %1, !dbg !9578
  br i1 %21, label %22, label %8, !dbg !9581, !llvm.loop !9596

22:                                               ; preds = %19, %3
  ret void, !dbg !9598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !9599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9601, metadata !DIExpression()), !dbg !9602
  %2 = shl nuw i32 1, %0, !dbg !9603
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9606
  ret i32 %3, !dbg !9607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !9608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9612, metadata !DIExpression()), !dbg !9613
  %2 = shl nuw i32 1, %0, !dbg !9614
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9617
  ret void, !dbg !9618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9622, metadata !DIExpression()), !dbg !9623
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9624
  ret void, !dbg !9625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !9626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9628, metadata !DIExpression()), !dbg !9629
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9630
  %3 = and i32 %2, %0, !dbg !9630
  %4 = icmp eq i32 %3, %0, !dbg !9631
  %5 = zext i1 %4 to i32, !dbg !9631
  ret i32 %5, !dbg !9632
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9635, metadata !DIExpression()), !dbg !9636
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9637
  ret void, !dbg !9638
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9641, metadata !DIExpression()), !dbg !9642
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9643
  ret void, !dbg !9644
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9647, metadata !DIExpression()), !dbg !9648
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9649
  ret void, !dbg !9650
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9653, metadata !DIExpression()), !dbg !9654
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9655
  ret void, !dbg !9656
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9657 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9659, metadata !DIExpression()), !dbg !9660
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9661
  ret void, !dbg !9662
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9663 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9665, metadata !DIExpression()), !dbg !9666
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9667
  ret void, !dbg !9668
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9671, metadata !DIExpression()), !dbg !9672
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9673
  ret void, !dbg !9674
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9677, metadata !DIExpression()), !dbg !9678
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9679
  ret void, !dbg !9680
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9681 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9683, metadata !DIExpression()), !dbg !9684
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9685
  ret void, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9689, metadata !DIExpression()), !dbg !9690
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9691
  ret void, !dbg !9692
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9695, metadata !DIExpression()), !dbg !9696
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9697
  ret i32 0, !dbg !9698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1115 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1119, metadata !DIExpression()), !dbg !9699
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9700
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9702
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9704
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9706
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9708
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9710
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9712
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9714
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9716
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9718
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9720
  ret void, !dbg !9722
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9725, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 0, metadata !9726, metadata !DIExpression()), !dbg !9727
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9728
  %3 = load i32, i32* %2, align 4, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %3, metadata !9726, metadata !DIExpression()), !dbg !9727
  %4 = shl nuw i32 1, %0, !dbg !9729
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9730
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9731
  ret void, !dbg !9732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9735, metadata !DIExpression()), !dbg !9736
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9737
  %3 = or i32 %2, %0, !dbg !9737
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9737
  ret void, !dbg !9738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !9739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9741, metadata !DIExpression()), !dbg !9742
  %2 = icmp slt i32 %0, 32, !dbg !9743
  br i1 %2, label %3, label %5, !dbg !9745

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9746
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9748
  br label %5, !dbg !9749

5:                                                ; preds = %1, %3
  ret void, !dbg !9750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9753, metadata !DIExpression()), !dbg !9754
  %2 = xor i32 %0, -1, !dbg !9755
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9755
  %4 = and i32 %3, %2, !dbg !9755
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9755
  ret void, !dbg !9756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9761, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i32 %1, metadata !9762, metadata !DIExpression()), !dbg !9763
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9764

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9765
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9767
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9768
  br label %11, !dbg !9769

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9770
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9771
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9772
  br label %11, !dbg !9773

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9774
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9775
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9776
  br label %11, !dbg !9777

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9778
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9779
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9780
  br label %11, !dbg !9781

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9785, metadata !DIExpression()), !dbg !9786
  %2 = xor i32 %0, -1, !dbg !9787
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9787
  %4 = and i32 %3, %2, !dbg !9787
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9787
  ret void, !dbg !9788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9791, metadata !DIExpression()), !dbg !9792
  %2 = xor i32 %0, -1, !dbg !9793
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9793
  %4 = and i32 %3, %2, !dbg !9793
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9793
  ret void, !dbg !9794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9797, metadata !DIExpression()), !dbg !9798
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9799
  %3 = or i32 %2, %0, !dbg !9799
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9799
  ret void, !dbg !9800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9803, metadata !DIExpression()), !dbg !9804
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9805
  %3 = or i32 %2, %0, !dbg !9805
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9805
  ret void, !dbg !9806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !9807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9811, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9812, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i8* %2, metadata !9813, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9814, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9816, metadata !DIExpression()), !dbg !9817
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9818
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9818
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9820
  br i1 %6, label %7, label %9, !dbg !9821

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9822
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9823
  store i8* %2, i8** %8, align 4, !dbg !9824
  br label %9, !dbg !9825

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9817
  ret i32 %10, !dbg !9826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !9827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9829, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9830, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9831, metadata !DIExpression()), !dbg !9832
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9833
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9834
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9835
  store i8* null, i8** %3, align 4, !dbg !9836
  ret void, !dbg !9837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9840, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i8* %1, metadata !9841, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i8* %1, metadata !9842, metadata !DIExpression()), !dbg !9845
  %3 = bitcast i8* %1 to i32*, !dbg !9846
  %4 = load i32, i32* %3, align 4, !dbg !9846
  %5 = add i32 %4, -169, !dbg !9846
  %6 = icmp ult i32 %5, -121, !dbg !9846
  br i1 %6, label %15, label %7, !dbg !9848

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9849
  %9 = inttoptr i32 %8 to i32*, !dbg !9850
  call void @llvm.dbg.value(metadata i32* %9, metadata !9843, metadata !DIExpression()), !dbg !9845
  %10 = load volatile i32, i32* %9, align 4, !dbg !9851
  call void @llvm.dbg.value(metadata i32 %10, metadata !9844, metadata !DIExpression()), !dbg !9845
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9852
  %12 = bitcast i8* %11 to i32*, !dbg !9852
  %13 = load i32, i32* %12, align 4, !dbg !9852
  %14 = or i32 %13, %10, !dbg !9853
  call void @llvm.dbg.value(metadata i32 %14, metadata !9844, metadata !DIExpression()), !dbg !9845
  store volatile i32 %14, i32* %9, align 4, !dbg !9854
  br label %15, !dbg !9855

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9845
  ret i32 %16, !dbg !9856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9857 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9859, metadata !DIExpression()), !dbg !9864
  call void @llvm.dbg.value(metadata i8* %1, metadata !9860, metadata !DIExpression()), !dbg !9864
  call void @llvm.dbg.value(metadata i8* %1, metadata !9861, metadata !DIExpression()), !dbg !9864
  %3 = bitcast i8* %1 to i32*, !dbg !9865
  %4 = load i32, i32* %3, align 4, !dbg !9865
  %5 = add i32 %4, -169, !dbg !9865
  %6 = icmp ult i32 %5, -121, !dbg !9865
  br i1 %6, label %16, label %7, !dbg !9867

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9868
  %9 = inttoptr i32 %8 to i32*, !dbg !9869
  call void @llvm.dbg.value(metadata i32* %9, metadata !9862, metadata !DIExpression()), !dbg !9864
  %10 = load volatile i32, i32* %9, align 4, !dbg !9870
  call void @llvm.dbg.value(metadata i32 %10, metadata !9863, metadata !DIExpression()), !dbg !9864
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9871
  %12 = bitcast i8* %11 to i32*, !dbg !9871
  %13 = load i32, i32* %12, align 4, !dbg !9871
  %14 = xor i32 %13, -1, !dbg !9872
  %15 = and i32 %10, %14, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %15, metadata !9863, metadata !DIExpression()), !dbg !9864
  store volatile i32 %15, i32* %9, align 4, !dbg !9874
  br label %16, !dbg !9875

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9864
  ret i32 %17, !dbg !9876
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9879, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i8* %1, metadata !9880, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32* %2, metadata !9881, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i8* %1, metadata !9882, metadata !DIExpression()), !dbg !9887
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %4, metadata !9883, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 undef, metadata !9884, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 undef, metadata !9885, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %4, metadata !9886, metadata !DIExpression()), !dbg !9887
  %5 = bitcast i8* %1 to i32*, !dbg !9889
  %6 = load i32, i32* %5, align 4, !dbg !9889
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !9890

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %8, metadata !9884, metadata !DIExpression()), !dbg !9887
  br label %16, !dbg !9892

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9894
  call void @llvm.dbg.value(metadata i32 %10, metadata !9885, metadata !DIExpression()), !dbg !9887
  br label %16, !dbg !9895

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9896
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #24, !dbg !9897
  br label %16, !dbg !9898

14:                                               ; preds = %3
  br label %16, !dbg !9899

15:                                               ; preds = %3
  br label %16, !dbg !9900

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !9901
  br label %18, !dbg !9902

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !9887
  ret i32 %19, !dbg !9902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !9903 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9905, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i8* %1, metadata !9906, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i8* %2, metadata !9907, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i8* %1, metadata !9908, metadata !DIExpression()), !dbg !9913
  %4 = bitcast i8* %1 to i32*, !dbg !9914
  %5 = load i32, i32* %4, align 4, !dbg !9914
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9915
  call void @llvm.dbg.value(metadata i32 %6, metadata !9912, metadata !DIExpression()), !dbg !9913
  %7 = icmp slt i32 %6, 0, !dbg !9916
  br i1 %7, label %22, label %8, !dbg !9918

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9908, metadata !DIExpression()), !dbg !9913
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9919
  %10 = bitcast i8* %9 to i32*, !dbg !9919
  %11 = load i32, i32* %10, align 4, !dbg !9919
  %12 = lshr i32 %11, 16, !dbg !9919
  %13 = and i32 %12, 7, !dbg !9919
  %14 = lshr i32 %11, 8, !dbg !9920
  %15 = and i32 %14, 31, !dbg !9920
  %16 = shl i32 %13, %15, !dbg !9921
  call void @llvm.dbg.value(metadata i32 %16, metadata !9911, metadata !DIExpression()), !dbg !9913
  %17 = and i32 %11, 255, !dbg !9922
  %18 = or i32 %17, 1073887232, !dbg !9923
  %19 = inttoptr i32 %18 to i32*, !dbg !9924
  call void @llvm.dbg.value(metadata i32* %19, metadata !9909, metadata !DIExpression()), !dbg !9913
  %20 = load volatile i32, i32* %19, align 4, !dbg !9925
  call void @llvm.dbg.value(metadata i32 %20, metadata !9910, metadata !DIExpression()), !dbg !9913
  %21 = or i32 %16, %20, !dbg !9926
  call void @llvm.dbg.value(metadata i32 %21, metadata !9910, metadata !DIExpression()), !dbg !9913
  store volatile i32 %21, i32* %19, align 4, !dbg !9927
  br label %22, !dbg !9928

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9913
  ret i32 %23, !dbg !9929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i32 0, metadata !9935, metadata !DIExpression()), !dbg !9936
  %2 = add i32 %0, -1, !dbg !9937
  %3 = icmp ult i32 %2, 6, !dbg !9937
  br i1 %3, label %4, label %7, !dbg !9937

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9937
  %6 = load i32, i32* %5, align 4, !dbg !9937
  call void @llvm.dbg.value(metadata i32 %6, metadata !9935, metadata !DIExpression()), !dbg !9936
  br label %7, !dbg !9938

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9936
  ret i32 %8, !dbg !9939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9944, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.value(metadata i32 %1, metadata !9945, metadata !DIExpression()), !dbg !9946
  %3 = udiv i32 %0, %1, !dbg !9947
  ret i32 %3, !dbg !9948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #4 !dbg !9949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9953, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 16, metadata !9954, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 336, metadata !9955, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 4, metadata !9956, metadata !DIExpression()), !dbg !9957
  %2 = mul i32 %0, 336, !dbg !9958
  %3 = lshr i32 %2, 6, !dbg !9959
  ret i32 %3, !dbg !9960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9961 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9963, metadata !DIExpression()), !dbg !9966
  tail call void @config_enable_default_clocks() #25, !dbg !9967
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9968
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9968
  %4 = lshr i32 %3, 4, !dbg !9968
  %5 = and i32 %4, 15, !dbg !9968
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9968
  %7 = load i8, i8* %6, align 1, !dbg !9968
  %8 = zext i8 %7 to i32, !dbg !9968
  %9 = lshr i32 %2, %8, !dbg !9968
  call void @llvm.dbg.value(metadata i32 %9, metadata !9964, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9965, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9966
  %10 = icmp ult i32 %9, 84000000, !dbg !9969
  br i1 %10, label %11, label %13, !dbg !9971

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9972
  br label %13, !dbg !9974

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9975
  tail call fastcc void @set_up_plls() #24, !dbg !9976
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9977
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9980
  br label %14, !dbg !9981

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9982
  %16 = icmp eq i32 %15, 8, !dbg !9983
  br i1 %16, label %17, label %14, !dbg !9981, !llvm.loop !9984

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9986
  br i1 %18, label %19, label %21, !dbg !9988

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9989
  br label %21, !dbg !9991

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9992
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9993
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9994
  ret i32 0, !dbg !9995
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !9996 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9998
  %2 = and i32 %1, 240, !dbg !9998
  ret i32 %2, !dbg !9999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10000 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10001
  %2 = icmp eq i32 %1, 1, !dbg !10005
  br i1 %2, label %7, label %3, !dbg !10006

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10007
  br label %4, !dbg !10009

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10010
  %6 = icmp eq i32 %5, 1, !dbg !10011
  br i1 %6, label %7, label %4, !dbg !10009, !llvm.loop !10012

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !10014
  br label %8, !dbg !10017

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !10018
  %10 = icmp eq i32 %9, 1, !dbg !10019
  br i1 %10, label %11, label %8, !dbg !10017, !llvm.loop !10020

11:                                               ; preds = %8
  ret void, !dbg !10022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10023 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10024
  %2 = icmp eq i32 %1, 8, !dbg !10026
  br i1 %2, label %3, label %4, !dbg !10027

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10028
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !10030
  br label %4, !dbg !10031

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !10032
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10033
  %6 = and i32 %5, -196609, !dbg !10033
  %7 = or i32 %6, 65536, !dbg !10033
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10033
  tail call void @config_pll_sysclock() #25, !dbg !10034
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !10035
  br label %8, !dbg !10036

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !10037
  %10 = icmp eq i32 %9, 1, !dbg !10038
  br i1 %10, label %11, label %8, !dbg !10036, !llvm.loop !10039

11:                                               ; preds = %8
  ret void, !dbg !10041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10042 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10044, metadata !DIExpression()), !dbg !10045
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10046
  %2 = and i32 %1, -241, !dbg !10046
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10046
  ret void, !dbg !10047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10050, metadata !DIExpression()), !dbg !10051
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10052
  %3 = and i32 %2, -4, !dbg !10052
  %4 = or i32 %3, %0, !dbg !10052
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10052
  ret void, !dbg !10053
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !10054 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10055
  %2 = and i32 %1, 12, !dbg !10055
  ret i32 %2, !dbg !10056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10057 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10059, metadata !DIExpression()), !dbg !10060
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10061
  %2 = and i32 %1, -7169, !dbg !10061
  %3 = or i32 %2, 4096, !dbg !10061
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10061
  ret void, !dbg !10062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10063 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10065, metadata !DIExpression()), !dbg !10066
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10067
  %2 = and i32 %1, -57345, !dbg !10067
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10067
  ret void, !dbg !10068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10069 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10070
  %2 = icmp eq i32 %1, 1, !dbg !10072
  br i1 %2, label %7, label %3, !dbg !10073

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10074
  br label %4, !dbg !10076

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10077
  %6 = icmp eq i32 %5, 1, !dbg !10078
  br i1 %6, label %7, label %4, !dbg !10076, !llvm.loop !10079

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !10081
  br label %8, !dbg !10082

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10083
  %10 = icmp eq i32 %9, 0, !dbg !10084
  br i1 %10, label %11, label %8, !dbg !10082, !llvm.loop !10085

11:                                               ; preds = %8
  ret void, !dbg !10087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10088 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10089
  %2 = and i32 %1, -16777217, !dbg !10089
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10089
  ret void, !dbg !10090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10091 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10092
  %2 = or i32 %1, 16777216, !dbg !10092
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10092
  ret void, !dbg !10093
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !10094 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10095
  %2 = lshr i32 %1, 25, !dbg !10096
  %3 = and i32 %2, 1, !dbg !10096
  ret i32 %3, !dbg !10097
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !10098 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10099
  %2 = lshr i32 %1, 1, !dbg !10100
  %3 = and i32 %2, 1, !dbg !10100
  ret i32 %3, !dbg !10101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10102 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10103
  %2 = or i32 %1, 1, !dbg !10103
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10105 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10106
  %2 = or i32 %1, 1, !dbg !10106
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10106
  ret void, !dbg !10107
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !10108 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10109
  %2 = lshr i32 %1, 1, !dbg !10110
  %3 = and i32 %2, 1, !dbg !10110
  ret i32 %3, !dbg !10111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10112 {
  ret i32 16000000, !dbg !10114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10117 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !10118
  ret void, !dbg !10119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10120 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10124, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata i32 16, metadata !10125, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata i32 336, metadata !10126, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata i32 65536, metadata !10127, metadata !DIExpression()), !dbg !10128
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10129
  %2 = and i32 %1, -4227072, !dbg !10129
  %3 = or i32 %2, 21520, !dbg !10129
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10129
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10130
  %5 = and i32 %4, -196609, !dbg !10130
  %6 = or i32 %5, 65536, !dbg !10130
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10130
  ret void, !dbg !10131
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !10132 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !10133
  ret void, !dbg !10134
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !10135 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10138, metadata !DIExpression()), !dbg !10140
  %2 = bitcast i32* %1 to i8*, !dbg !10141
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10141
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10139, metadata !DIExpression()), !dbg !10142
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10143
  %4 = or i32 %3, 268435456, !dbg !10143
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10143
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10144
  %6 = and i32 %5, 268435456, !dbg !10144
  store volatile i32 %6, i32* %1, align 4, !dbg !10145
  %7 = load volatile i32, i32* %1, align 4, !dbg !10146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10147
  ret void, !dbg !10147
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10148 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10150, metadata !DIExpression()), !dbg !10151
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !10152
  br i1 %2, label %3, label %4, !dbg !10154

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !10155
  br label %4, !dbg !10156

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10151
  ret i32 %5, !dbg !10157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10158 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10163, metadata !DIExpression()), !dbg !10164
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10165, !srcloc !10167
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !10168
  ret i1 %1, !dbg !10169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10170 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10171
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10172
  ret void, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = icmp eq i32 %0, 10, !dbg !10178
  br i1 %2, label %3, label %4, !dbg !10180

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !10181
  br label %4, !dbg !10183

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10184
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !10185
  ret i32 %0, !dbg !10186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10187 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10190, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata i8 %0, metadata !10191, metadata !DIExpression()), !dbg !10192
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10193, !srcloc !10195
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !10196
  ret void, !dbg !10197
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10198 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10200, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i8 %0, metadata !10201, metadata !DIExpression()), !dbg !10203
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10204
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10202, metadata !DIExpression()), !dbg !10203
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10205
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10205
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !10206
  ret void, !dbg !10207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10208 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10210, metadata !DIExpression()), !dbg !10211
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !10212
  ret i1 %1, !dbg !10213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10214 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10261, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10262, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10263, metadata !DIExpression()), !dbg !10264
  ret void, !dbg !10265
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10266 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10268, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i8 %1, metadata !10269, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i32 %2, metadata !10270, metadata !DIExpression()), !dbg !10273
  %5 = bitcast i32* %4 to i8*, !dbg !10274
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10274
  call void @llvm.dbg.value(metadata i32* %4, metadata !10272, metadata !DIExpression(DW_OP_deref)), !dbg !10273
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !10275
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()), !dbg !10273
  %7 = icmp eq i32 %6, 0, !dbg !10276
  br i1 %7, label %8, label %31, !dbg !10278

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10271, metadata !DIExpression()), !dbg !10273
  %9 = and i32 %2, 131072, !dbg !10279
  %10 = icmp eq i32 %9, 0, !dbg !10281
  br i1 %10, label %28, label %11, !dbg !10282

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10283
  %13 = icmp eq i32 %12, 0, !dbg !10286
  br i1 %13, label %18, label %14, !dbg !10287

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10288
  %16 = shl nuw i32 1, %15, !dbg !10288
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !10290
  br label %25, !dbg !10291

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10292
  %20 = icmp eq i32 %19, 0, !dbg !10294
  %21 = zext i8 %1 to i32, !dbg !10273
  br i1 %20, label %25, label %22, !dbg !10295

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10296
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !10298
  br label %25, !dbg !10299

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10300
  %27 = load i32, i32* %4, align 4, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %30, metadata !10272, metadata !DIExpression()), !dbg !10273
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !10302
  br label %31, !dbg !10303

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10300
  %30 = load i32, i32* %4, align 4, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %30, metadata !10272, metadata !DIExpression()), !dbg !10273
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !10302
  call void @llvm.dbg.value(metadata i32 0, metadata !10271, metadata !DIExpression()), !dbg !10273
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10304
  ret i32 %6, !dbg !10304
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !10305 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10309, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata i32* %1, metadata !10310, metadata !DIExpression()), !dbg !10314
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10315
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10315
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10315
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10311, metadata !DIExpression()), !dbg !10314
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10316
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10316
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10316
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10313, metadata !DIExpression()), !dbg !10314
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !10317
  store i32 %9, i32* %1, align 4, !dbg !10318
  ret i32 0, !dbg !10319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !10320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10322, metadata !DIExpression()), !dbg !10328
  call void @llvm.dbg.value(metadata i32 %1, metadata !10323, metadata !DIExpression()), !dbg !10328
  call void @llvm.dbg.value(metadata i32 %2, metadata !10324, metadata !DIExpression()), !dbg !10328
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10329
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10329
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10329
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10325, metadata !DIExpression()), !dbg !10328
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10330
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10330
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10330
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10326, metadata !DIExpression()), !dbg !10328
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %10, metadata !10327, metadata !DIExpression()), !dbg !10328
  %11 = xor i32 %1, -1, !dbg !10332
  %12 = and i32 %10, %11, !dbg !10333
  %13 = and i32 %2, %1, !dbg !10334
  %14 = or i32 %12, %13, !dbg !10335
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !10336
  ret i32 0, !dbg !10337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10340, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %1, metadata !10341, metadata !DIExpression()), !dbg !10344
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10345
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10345
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10345
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10342, metadata !DIExpression()), !dbg !10344
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10346
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10346
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10346
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10343, metadata !DIExpression()), !dbg !10344
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10347
  store volatile i32 %1, i32* %9, align 4, !dbg !10347
  ret i32 0, !dbg !10348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10351, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.value(metadata i32 %1, metadata !10352, metadata !DIExpression()), !dbg !10355
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10356
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10356
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10356
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10353, metadata !DIExpression()), !dbg !10355
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10357
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10357
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10357
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10354, metadata !DIExpression()), !dbg !10355
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10358
  ret i32 0, !dbg !10359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10362, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %1, metadata !10363, metadata !DIExpression()), !dbg !10366
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10367
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10367
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10367
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10364, metadata !DIExpression()), !dbg !10366
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10368
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10368
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10368
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10365, metadata !DIExpression()), !dbg !10366
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10369
  %10 = load volatile i32, i32* %9, align 4, !dbg !10369
  %11 = xor i32 %10, %1, !dbg !10369
  store volatile i32 %11, i32* %9, align 4, !dbg !10369
  ret i32 0, !dbg !10370
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10371 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10373, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i8 %1, metadata !10374, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 %2, metadata !10375, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 %3, metadata !10376, metadata !DIExpression()), !dbg !10383
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10384
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10384
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10384
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10377, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i8* undef, metadata !10378, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 0, metadata !10380, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 0, metadata !10381, metadata !DIExpression()), !dbg !10383
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10385

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10386
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10390
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10391
  %12 = load i32, i32* %11, align 4, !dbg !10391
  %13 = icmp eq i32 %10, %12, !dbg !10392
  br i1 %13, label %14, label %29, !dbg !10393

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10394
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10396
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10397
  br label %29, !dbg !10398

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10399
  %17 = load i8*, i8** %16, align 4, !dbg !10399
  call void @llvm.dbg.value(metadata i8* %17, metadata !10378, metadata !DIExpression()), !dbg !10383
  %18 = zext i8 %1 to i32, !dbg !10400
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10402
  %20 = icmp eq i32 %19, 0, !dbg !10403
  br i1 %20, label %21, label %29, !dbg !10404

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10405
  %23 = load i32, i32* %22, align 4, !dbg !10405
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10406
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10407

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10380, metadata !DIExpression()), !dbg !10383
  br label %27, !dbg !10408

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10380, metadata !DIExpression()), !dbg !10383
  br label %27, !dbg !10410

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10380, metadata !DIExpression()), !dbg !10383
  br label %27, !dbg !10411

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10383
  call void @llvm.dbg.value(metadata i32 %28, metadata !10380, metadata !DIExpression()), !dbg !10383
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10412
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10413
  br label %29, !dbg !10413

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10383
  call void @llvm.dbg.value(metadata i32 %30, metadata !10381, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.label(metadata !10382), !dbg !10414
  ret i32 %30, !dbg !10415
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !10416 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10418, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10419, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i1 %2, metadata !10420, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10422
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10423
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10423
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10423
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10421, metadata !DIExpression()), !dbg !10422
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10424
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10425
  ret i32 %8, !dbg !10426
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !10427 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10433, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10434, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata i1 %2, metadata !10435, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10436
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10437
  br i1 %4, label %10, label %5, !dbg !10439

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10440
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !10443
  %8 = or i1 %7, %2, !dbg !10444
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10444
  br i1 %2, label %11, label %13, !dbg !10444

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10445

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10446
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !10449
  br label %13, !dbg !10450

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10436
  ret i32 %14, !dbg !10451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10452 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10456, metadata !DIExpression()), !dbg !10457
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10458
  %3 = icmp eq %struct._snode* %2, null, !dbg !10458
  ret i1 %3, !dbg !10458
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10459 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10463, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10464, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10465, metadata !DIExpression()), !dbg !10467
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10468
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10465, metadata !DIExpression()), !dbg !10467
  %4 = icmp eq %struct._snode* %3, null, !dbg !10470
  br i1 %4, label %15, label %5, !dbg !10468

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10465, metadata !DIExpression()), !dbg !10467
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10472
  br i1 %6, label %9, label %11, !dbg !10475

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10465, metadata !DIExpression()), !dbg !10467
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10472
  br i1 %8, label %9, label %11, !dbg !10475, !llvm.loop !10476

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10477
  br label %15, !dbg !10477

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10465, metadata !DIExpression()), !dbg !10467
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10470
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10466, metadata !DIExpression()), !dbg !10467
  %14 = icmp eq %struct._snode* %13, null, !dbg !10470
  br i1 %14, label %15, label %7, !dbg !10468, !llvm.loop !10476

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10480 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10484, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10485, metadata !DIExpression()), !dbg !10486
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10487
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10487
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10487
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10488
  %5 = icmp eq %struct._snode* %4, null, !dbg !10488
  br i1 %5, label %6, label %8, !dbg !10487

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10490
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10490
  br label %8, !dbg !10490

8:                                                ; preds = %6, %2
  ret void, !dbg !10487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10492 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10496, metadata !DIExpression()), !dbg !10497
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10498
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10498
  ret %struct._snode* %3, !dbg !10499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10500 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10504, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10505, metadata !DIExpression()), !dbg !10506
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10507
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10508
  ret void, !dbg !10509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10510 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10512, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10513, metadata !DIExpression()), !dbg !10514
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10515
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10516
  ret void, !dbg !10517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10518 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10520, metadata !DIExpression()), !dbg !10521
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10522
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10522
  ret %struct._snode* %3, !dbg !10523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10524 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10526, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10527, metadata !DIExpression()), !dbg !10528
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10529
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10530
  ret void, !dbg !10531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10532 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10536, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10537, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10538, metadata !DIExpression()), !dbg !10539
  %4 = icmp eq %struct._snode* %1, null, !dbg !10540
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10542
  br i1 %4, label %6, label %11, !dbg !10543

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10544
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10546
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10546
  br i1 %8, label %9, label %15, !dbg !10544

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10548
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10548
  br label %15, !dbg !10548

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10550
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10552
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10552
  br i1 %13, label %14, label %15, !dbg !10550

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10554
  br label %15, !dbg !10554

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10543
  ret void, !dbg !10543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10556 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10560, metadata !DIExpression()), !dbg !10561
  %2 = icmp eq %struct._snode* %0, null, !dbg !10562
  br i1 %2, label %5, label %3, !dbg !10562

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10562
  br label %5, !dbg !10562

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10562
  ret %struct._snode* %6, !dbg !10562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10563 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10565, metadata !DIExpression()), !dbg !10566
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10567
  ret %struct._snode* %2, !dbg !10567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10568 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10570, metadata !DIExpression()), !dbg !10571
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10572
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10572
  ret %struct._snode* %3, !dbg !10573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10576, metadata !DIExpression()), !dbg !10579
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10580, !range !10581
  call void @llvm.dbg.value(metadata i32 %2, metadata !10577, metadata !DIExpression()), !dbg !10579
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %3, metadata !10578, metadata !DIExpression()), !dbg !10579
  ret i32 %3, !dbg !10583
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10586, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.value(metadata i8* %1, metadata !10587, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.value(metadata i8* %1, metadata !10588, metadata !DIExpression()), !dbg !10589
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10590
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10590
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10591
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10591
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10591
  %8 = shl nuw i32 1, %0, !dbg !10592
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10593
  ret void, !dbg !10594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10595 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10599, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %1, metadata !10600, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10601, metadata !DIExpression()), !dbg !10605
  %4 = bitcast i64* %3 to i8*, !dbg !10606
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10606
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10603, metadata !DIExpression()), !dbg !10605
  store i64 70368744177732, i64* %3, align 8, !dbg !10607
  call void @llvm.dbg.value(metadata i64* %3, metadata !10603, metadata !DIExpression(DW_OP_deref)), !dbg !10605
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10608
  call void @llvm.dbg.value(metadata i32 %5, metadata !10604, metadata !DIExpression()), !dbg !10605
  %6 = icmp eq i32 %5, 0, !dbg !10609
  br i1 %6, label %7, label %8, !dbg !10611

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10612
  br label %8, !dbg !10613

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10614
  ret void, !dbg !10614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10615 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10617, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata i8* %0, metadata !10618, metadata !DIExpression()), !dbg !10620
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10621
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10619, metadata !DIExpression()), !dbg !10620
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10622
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10622
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10623
  ret i32 %5, !dbg !10624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10627, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.value(metadata i32 %1, metadata !10628, metadata !DIExpression()), !dbg !10630
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10631
  call void @llvm.dbg.value(metadata i32 %3, metadata !10629, metadata !DIExpression()), !dbg !10630
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10632
  ret void, !dbg !10633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10638, metadata !DIExpression()), !dbg !10639
  %2 = sdiv i32 %0, 4, !dbg !10640
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10641
  %6 = add nsw i32 %5, 16, !dbg !10642
  %7 = shl i32 15, %6, !dbg !10643
  %8 = or i32 %7, %2, !dbg !10644
  ret i32 %8, !dbg !10645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10650, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i32 %1, metadata !10651, metadata !DIExpression()), !dbg !10652
  %3 = and i32 %1, 255, !dbg !10653
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10653
  %5 = load volatile i32, i32* %4, align 4, !dbg !10653
  %6 = lshr i32 %1, 16, !dbg !10653
  %7 = xor i32 %6, -1, !dbg !10653
  %8 = and i32 %5, %7, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %6, metadata !10654, metadata !DIExpression()) #23, !dbg !10658
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10660, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 %9, metadata !10657, metadata !DIExpression()) #23, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %9, metadata !10662, metadata !DIExpression()) #23, !dbg !10667
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10669, !range !8185
  %11 = shl i32 %0, %10, !dbg !10653
  %12 = or i32 %11, %8, !dbg !10653
  store volatile i32 %12, i32* %4, align 4, !dbg !10653
  ret void, !dbg !10670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10671 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10675, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10676, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 %2, metadata !10677, metadata !DIExpression()), !dbg !10680
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10681
  %5 = icmp eq %struct._snode* %4, null, !dbg !10681
  br i1 %5, label %21, label %6, !dbg !10681

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10683
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10679, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10678, metadata !DIExpression()), !dbg !10680
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10684
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10684
  %11 = load i32, i32* %10, align 4, !dbg !10684
  %12 = and i32 %11, %2, !dbg !10688
  %13 = icmp eq i32 %12, 0, !dbg !10688
  br i1 %13, label %19, label %14, !dbg !10689

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10678, metadata !DIExpression()), !dbg !10680
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10690
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10690
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10690
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10692
  br label %19, !dbg !10693

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10678, metadata !DIExpression()), !dbg !10680
  %20 = icmp eq %struct._snode* %8, null, !dbg !10694
  br i1 %20, label %21, label %6, !dbg !10694

21:                                               ; preds = %19, %3
  ret void, !dbg !10695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10698, metadata !DIExpression()), !dbg !10699
  %2 = and i32 %0, 255, !dbg !10700
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10700
  %4 = load volatile i32, i32* %3, align 4, !dbg !10700
  %5 = lshr i32 %0, 16, !dbg !10700
  %6 = and i32 %4, %5, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %5, metadata !10654, metadata !DIExpression()) #23, !dbg !10701
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10703, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 %7, metadata !10657, metadata !DIExpression()) #23, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %7, metadata !10662, metadata !DIExpression()) #23, !dbg !10704
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10706, !range !8185
  %9 = lshr i32 %6, %8, !dbg !10707
  ret i32 %9, !dbg !10708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10709 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10714, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 %1, metadata !10715, metadata !DIExpression()), !dbg !10716
  %3 = shl i32 %1, 16, !dbg !10717
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10717
  store volatile i32 %3, i32* %4, align 4, !dbg !10717
  ret void, !dbg !10718
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10719 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10723, metadata !DIExpression()), !dbg !10724
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10725
  %3 = load volatile i32, i32* %2, align 4, !dbg !10725
  ret i32 %3, !dbg !10726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10727 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10729, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.value(metadata i32 %1, metadata !10730, metadata !DIExpression()), !dbg !10731
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10732
  store volatile i32 %1, i32* %3, align 4, !dbg !10732
  ret void, !dbg !10733
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10734 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10736, metadata !DIExpression()), !dbg !10737
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10738
  %3 = load volatile i32, i32* %2, align 4, !dbg !10738
  ret i32 %3, !dbg !10739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !10740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10744, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.value(metadata i32* %1, metadata !10745, metadata !DIExpression()), !dbg !10746
  %3 = and i32 %0, 131072, !dbg !10747
  %4 = icmp eq i32 %3, 0, !dbg !10749
  br i1 %4, label %22, label %5, !dbg !10750

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10751
  %6 = and i32 %0, 2, !dbg !10753
  %7 = icmp eq i32 %6, 0, !dbg !10755
  br i1 %7, label %11, label %8, !dbg !10756

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10757
  %10 = icmp eq i32 %9, 0, !dbg !10757
  br i1 %10, label %33, label %11, !dbg !10760

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10761
  store i32 %12, i32* %1, align 4, !dbg !10761
  %13 = and i32 %0, 16, !dbg !10762
  %14 = icmp eq i32 %13, 0, !dbg !10764
  br i1 %14, label %17, label %15, !dbg !10765

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10766
  br label %31, !dbg !10768

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10769
  %19 = icmp eq i32 %18, 0, !dbg !10771
  br i1 %19, label %33, label %20, !dbg !10772

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10773
  br label %31, !dbg !10775

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10776
  %24 = icmp eq i32 %23, 0, !dbg !10778
  br i1 %24, label %31, label %25, !dbg !10779

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10780
  %27 = icmp eq i32 %26, 0, !dbg !10783
  br i1 %27, label %28, label %31, !dbg !10784

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10785
  br label %33, !dbg !10786

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10746
  ret i32 %34, !dbg !10786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10787 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10791, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.value(metadata i32 %1, metadata !10792, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.value(metadata i32 %2, metadata !10793, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.value(metadata i32 %3, metadata !10794, metadata !DIExpression()), !dbg !10802
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10803
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10803
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10803
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10795, metadata !DIExpression()), !dbg !10802
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10804
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10804
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10804
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10796, metadata !DIExpression()), !dbg !10802
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10805
  call void @llvm.dbg.value(metadata i32 %11, metadata !10797, metadata !DIExpression()), !dbg !10802
  %12 = and i32 %2, 48, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %12, metadata !10798, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.value(metadata i32 %2, metadata !10799, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10802
  call void @llvm.dbg.value(metadata i32 %2, metadata !10800, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10802
  call void @llvm.dbg.value(metadata i32 %2, metadata !10801, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10802
  %13 = lshr i32 %2, 6, !dbg !10807
  %14 = and i32 %13, 1, !dbg !10807
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10808
  %15 = lshr i32 %2, 7, !dbg !10809
  %16 = and i32 %15, 3, !dbg !10809
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10810
  %17 = lshr i32 %2, 9, !dbg !10811
  %18 = and i32 %17, 3, !dbg !10811
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10812
  %19 = icmp eq i32 %12, 32, !dbg !10813
  br i1 %19, label %20, label %24, !dbg !10815

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10816
  br i1 %21, label %22, label %23, !dbg !10819

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10820
  br label %24, !dbg !10822

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10823
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10825
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10826
  ret void, !dbg !10827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10830, metadata !DIExpression()), !dbg !10832
  %2 = shl nuw i32 1, %0, !dbg !10833
  call void @llvm.dbg.value(metadata i32 %2, metadata !10831, metadata !DIExpression()), !dbg !10832
  ret i32 %2, !dbg !10834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10835 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10839, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.value(metadata i32 %1, metadata !10840, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.value(metadata i32 %2, metadata !10841, metadata !DIExpression()), !dbg !10842
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10843
  %5 = load volatile i32, i32* %4, align 4, !dbg !10843
  %6 = xor i32 %1, -1, !dbg !10843
  %7 = and i32 %5, %6, !dbg !10843
  %8 = mul i32 %2, %1, !dbg !10843
  %9 = or i32 %7, %8, !dbg !10843
  store volatile i32 %9, i32* %4, align 4, !dbg !10843
  ret void, !dbg !10844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10845 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10847, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %1, metadata !10848, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10849, metadata !DIExpression()), !dbg !10850
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10851
  %5 = load volatile i32, i32* %4, align 4, !dbg !10851
  call void @llvm.dbg.value(metadata i32 %1, metadata !10654, metadata !DIExpression()) #23, !dbg !10852
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10854, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 %6, metadata !10657, metadata !DIExpression()) #23, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %6, metadata !10662, metadata !DIExpression()) #23, !dbg !10855
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10857, !range !8185
  %8 = shl nuw nsw i32 %7, 1, !dbg !10851
  %9 = shl i32 3, %8, !dbg !10851
  %10 = xor i32 %9, -1, !dbg !10851
  %11 = and i32 %5, %10, !dbg !10851
  call void @llvm.dbg.value(metadata i32 %1, metadata !10654, metadata !DIExpression()) #23, !dbg !10858
  call void @llvm.dbg.value(metadata i32 %6, metadata !10657, metadata !DIExpression()) #23, !dbg !10858
  call void @llvm.dbg.value(metadata i32 %6, metadata !10662, metadata !DIExpression()) #23, !dbg !10860
  %12 = shl i32 %2, %8, !dbg !10851
  %13 = or i32 %11, %12, !dbg !10851
  store volatile i32 %13, i32* %4, align 4, !dbg !10851
  ret void, !dbg !10862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10863 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10865, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i32 %2, metadata !10867, metadata !DIExpression()), !dbg !10868
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10869
  %5 = load volatile i32, i32* %4, align 4, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %1, metadata !10654, metadata !DIExpression()) #23, !dbg !10870
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10872, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 %6, metadata !10657, metadata !DIExpression()) #23, !dbg !10870
  call void @llvm.dbg.value(metadata i32 %6, metadata !10662, metadata !DIExpression()) #23, !dbg !10873
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10875, !range !8185
  %8 = shl nuw nsw i32 %7, 1, !dbg !10869
  %9 = shl i32 3, %8, !dbg !10869
  %10 = xor i32 %9, -1, !dbg !10869
  %11 = and i32 %5, %10, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %1, metadata !10654, metadata !DIExpression()) #23, !dbg !10876
  call void @llvm.dbg.value(metadata i32 %6, metadata !10657, metadata !DIExpression()) #23, !dbg !10876
  call void @llvm.dbg.value(metadata i32 %6, metadata !10662, metadata !DIExpression()) #23, !dbg !10878
  %12 = shl i32 %2, %8, !dbg !10869
  %13 = or i32 %11, %12, !dbg !10869
  store volatile i32 %13, i32* %4, align 4, !dbg !10869
  ret void, !dbg !10880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10881 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10883, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.value(metadata i32 %1, metadata !10884, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.value(metadata i32 %2, metadata !10885, metadata !DIExpression()), !dbg !10886
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10887
  %5 = load volatile i32, i32* %4, align 4, !dbg !10887
  call void @llvm.dbg.value(metadata i32 %1, metadata !10654, metadata !DIExpression()) #23, !dbg !10888
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10890, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 %6, metadata !10657, metadata !DIExpression()) #23, !dbg !10888
  call void @llvm.dbg.value(metadata i32 %6, metadata !10662, metadata !DIExpression()) #23, !dbg !10891
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10893, !range !8185
  %8 = shl nuw nsw i32 %7, 2, !dbg !10887
  %9 = shl i32 15, %8, !dbg !10887
  %10 = xor i32 %9, -1, !dbg !10887
  %11 = and i32 %5, %10, !dbg !10887
  call void @llvm.dbg.value(metadata i32 %1, metadata !10654, metadata !DIExpression()) #23, !dbg !10894
  call void @llvm.dbg.value(metadata i32 %6, metadata !10657, metadata !DIExpression()) #23, !dbg !10894
  call void @llvm.dbg.value(metadata i32 %6, metadata !10662, metadata !DIExpression()) #23, !dbg !10896
  %12 = shl i32 %2, %8, !dbg !10887
  %13 = or i32 %11, %12, !dbg !10887
  store volatile i32 %13, i32* %4, align 4, !dbg !10887
  ret void, !dbg !10898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10899 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10901, metadata !DIExpression()), !dbg !10904
  call void @llvm.dbg.value(metadata i32 %1, metadata !10902, metadata !DIExpression()), !dbg !10904
  call void @llvm.dbg.value(metadata i32 %2, metadata !10903, metadata !DIExpression()), !dbg !10904
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10905
  %5 = load volatile i32, i32* %4, align 4, !dbg !10905
  %6 = lshr i32 %1, 8, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %6, metadata !10654, metadata !DIExpression()) #23, !dbg !10906
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10908, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 %7, metadata !10657, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %7, metadata !10662, metadata !DIExpression()) #23, !dbg !10909
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10911, !range !8185
  %9 = shl nuw nsw i32 %8, 2, !dbg !10905
  %10 = shl i32 15, %9, !dbg !10905
  %11 = xor i32 %10, -1, !dbg !10905
  %12 = and i32 %5, %11, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %6, metadata !10654, metadata !DIExpression()) #23, !dbg !10912
  call void @llvm.dbg.value(metadata i32 %7, metadata !10657, metadata !DIExpression()) #23, !dbg !10912
  call void @llvm.dbg.value(metadata i32 %7, metadata !10662, metadata !DIExpression()) #23, !dbg !10914
  %13 = shl i32 %2, %9, !dbg !10905
  %14 = or i32 %12, %13, !dbg !10905
  store volatile i32 %14, i32* %4, align 4, !dbg !10905
  ret void, !dbg !10916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10917 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10919, metadata !DIExpression()), !dbg !10922
  call void @llvm.dbg.value(metadata i32 %1, metadata !10920, metadata !DIExpression()), !dbg !10922
  call void @llvm.dbg.value(metadata i32 %2, metadata !10921, metadata !DIExpression()), !dbg !10922
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10923
  %5 = load volatile i32, i32* %4, align 4, !dbg !10923
  call void @llvm.dbg.value(metadata i32 %1, metadata !10654, metadata !DIExpression()) #23, !dbg !10924
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10926, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 %6, metadata !10657, metadata !DIExpression()) #23, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %6, metadata !10662, metadata !DIExpression()) #23, !dbg !10927
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10929, !range !8185
  %8 = shl nuw nsw i32 %7, 1, !dbg !10923
  %9 = shl i32 3, %8, !dbg !10923
  %10 = xor i32 %9, -1, !dbg !10923
  %11 = and i32 %5, %10, !dbg !10923
  call void @llvm.dbg.value(metadata i32 %1, metadata !10654, metadata !DIExpression()) #23, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %6, metadata !10657, metadata !DIExpression()) #23, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %6, metadata !10662, metadata !DIExpression()) #23, !dbg !10932
  %12 = shl i32 %2, %8, !dbg !10923
  %13 = or i32 %11, %12, !dbg !10923
  store volatile i32 %13, i32* %4, align 4, !dbg !10923
  ret void, !dbg !10934
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10935 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10937, metadata !DIExpression()), !dbg !10940
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10941
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10941
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10941
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10938, metadata !DIExpression()), !dbg !10940
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10942
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10943
  %6 = tail call fastcc zeroext i1 @device_is_ready.130() #24, !dbg !10944
  br i1 %6, label %7, label %11, !dbg !10946

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10947
  call void @llvm.dbg.value(metadata i32 %8, metadata !10939, metadata !DIExpression()), !dbg !10940
  %9 = icmp slt i32 %8, 0, !dbg !10948
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10950
  br label %11, !dbg !10950

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10940
  ret i32 %12, !dbg !10951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.130() unnamed_addr #1 !dbg !10952 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10956, metadata !DIExpression()), !dbg !10957
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10958, !srcloc !10960
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.131() #24, !dbg !10961
  ret i1 %1, !dbg !10962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10967, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata i8 1, metadata !10968, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10969, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata i32 0, metadata !10970, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10971, metadata !DIExpression()), !dbg !10972
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10973
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10973
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10973
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10969, metadata !DIExpression()), !dbg !10972
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10974
  %6 = bitcast %struct.vnd_sensor_config* %5 to i8*, !dbg !10977
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10978
  call void @llvm.dbg.value(metadata i32 %7, metadata !10970, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata i32 %7, metadata !10970, metadata !DIExpression()), !dbg !10972
  ret i32 %7, !dbg !10979
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.131() unnamed_addr #1 !dbg !10980 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10982, metadata !DIExpression()), !dbg !10983
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10984
  ret i1 %1, !dbg !10985
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10990, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.value(metadata i32 %1, metadata !10991, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.value(metadata i32 %2, metadata !10992, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.value(metadata i32 %3, metadata !10993, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.value(metadata i32 0, metadata !10994, metadata !DIExpression()), !dbg !10998
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10999
  %5 = icmp eq i32 %3, 17, !dbg !11000
  br i1 %5, label %6, label %14, !dbg !11001

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %7, metadata !10995, metadata !DIExpression()), !dbg !11003
  %8 = icmp eq i32 %7, 0, !dbg !11004
  %9 = shl nuw i32 1, %1, !dbg !11006
  br i1 %8, label %12, label %10, !dbg !11007

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11008
  br label %14, !dbg !11010

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11011
  br label %14, !dbg !11014

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11015
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !11016 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11018, metadata !DIExpression()), !dbg !11022
  call void @llvm.dbg.value(metadata i8* %1, metadata !11019, metadata !DIExpression()), !dbg !11022
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11023
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11023
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11023
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11020, metadata !DIExpression()), !dbg !11022
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11024
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11024
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !11026
  %9 = icmp eq i32 %8, 0, !dbg !11026
  br i1 %9, label %12, label %10, !dbg !11027

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11028
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !11030
  br label %12, !dbg !11031

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11032
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11034
  %15 = icmp eq i32 %14, 0, !dbg !11034
  br i1 %15, label %19, label %16, !dbg !11035

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11036
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !11037
  store i8 %18, i8* %1, align 1, !dbg !11038
  br label %19, !dbg !11039

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11022
  ret i32 %20, !dbg !11040
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11041 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11043, metadata !DIExpression()), !dbg !11047
  call void @llvm.dbg.value(metadata i8 %1, metadata !11044, metadata !DIExpression()), !dbg !11047
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11048
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11048
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11048
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11045, metadata !DIExpression()), !dbg !11047
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11049

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11050
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !11053
  %10 = icmp eq i32 %9, 0, !dbg !11053
  br i1 %10, label %18, label %11, !dbg !11054

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11055, !srcloc !11062
  call void @llvm.dbg.value(metadata i32 undef, metadata !11058, metadata !DIExpression()) #23, !dbg !11063
  call void @llvm.dbg.value(metadata i32 undef, metadata !11059, metadata !DIExpression()) #23, !dbg !11063
  call void @llvm.dbg.value(metadata i32 undef, metadata !11046, metadata !DIExpression()), !dbg !11047
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11064
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11066
  %15 = icmp eq i32 %14, 0, !dbg !11066
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11055
  br i1 %15, label %17, label %19, !dbg !11067

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11058, metadata !DIExpression()) #23, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %16, metadata !11046, metadata !DIExpression()), !dbg !11047
  call void @llvm.dbg.value(metadata i32 undef, metadata !11068, metadata !DIExpression()) #23, !dbg !11071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !11073, !srcloc !11074
  br label %18, !dbg !11075

18:                                               ; preds = %17, %7
  br label %7, !dbg !11050, !llvm.loop !11076

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11055
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11078
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !11079
  call void @llvm.dbg.value(metadata i32 %20, metadata !11068, metadata !DIExpression()) #23, !dbg !11080
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !11082, !srcloc !11074
  ret void, !dbg !11083
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !11084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11086, metadata !DIExpression()), !dbg !11089
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11090
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11090
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11090
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11087, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 0, metadata !11088, metadata !DIExpression()), !dbg !11089
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11091
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11091
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !11093
  %8 = icmp ne i32 %7, 0, !dbg !11093
  %9 = zext i1 %8 to i32, !dbg !11094
  call void @llvm.dbg.value(metadata i32 %9, metadata !11088, metadata !DIExpression()), !dbg !11089
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11095
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !11097
  %12 = icmp eq i32 %11, 0, !dbg !11097
  %13 = or i32 %9, 2, !dbg !11098
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %14, metadata !11088, metadata !DIExpression()), !dbg !11089
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11099
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !11101
  %17 = icmp eq i32 %16, 0, !dbg !11101
  %18 = or i32 %14, 4, !dbg !11102
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11102
  call void @llvm.dbg.value(metadata i32 %19, metadata !11088, metadata !DIExpression()), !dbg !11089
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11103
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !11105
  %22 = icmp eq i32 %21, 0, !dbg !11105
  %23 = or i32 %19, 8, !dbg !11106
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11106
  call void @llvm.dbg.value(metadata i32 %24, metadata !11088, metadata !DIExpression()), !dbg !11089
  %25 = and i32 %24, 8, !dbg !11107
  %26 = icmp eq i32 %25, 0, !dbg !11107
  br i1 %26, label %29, label %27, !dbg !11109

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11110
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !11112
  br label %29, !dbg !11113

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11114
  %31 = icmp eq i32 %30, 0, !dbg !11114
  br i1 %31, label %34, label %32, !dbg !11116

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11117
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !11119
  br label %34, !dbg !11120

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11121
  %36 = icmp eq i32 %35, 0, !dbg !11121
  br i1 %36, label %39, label %37, !dbg !11123

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11124
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !11126
  br label %39, !dbg !11127

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11128
  %41 = icmp eq i32 %40, 0, !dbg !11128
  br i1 %41, label %44, label %42, !dbg !11130

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11131
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !11133
  br label %44, !dbg !11134

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11135
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !11136
  ret i32 %24, !dbg !11137
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11140, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11141, metadata !DIExpression()), !dbg !11149
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11150
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11150
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11150
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11142, metadata !DIExpression()), !dbg !11149
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11151
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11151
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11151
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11143, metadata !DIExpression()), !dbg !11149
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11152
  %10 = load i8, i8* %9, align 4, !dbg !11152
  %11 = zext i8 %10 to i32, !dbg !11153
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !11154
  call void @llvm.dbg.value(metadata i32 %12, metadata !11145, metadata !DIExpression()), !dbg !11149
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11155
  %14 = load i8, i8* %13, align 1, !dbg !11155
  %15 = zext i8 %14 to i32, !dbg !11156
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !11157
  call void @llvm.dbg.value(metadata i32 %16, metadata !11146, metadata !DIExpression()), !dbg !11149
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11158
  %18 = load i8, i8* %17, align 2, !dbg !11158
  %19 = zext i8 %18 to i32, !dbg !11159
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !11160
  call void @llvm.dbg.value(metadata i32 %20, metadata !11147, metadata !DIExpression()), !dbg !11149
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11161
  %22 = load i8, i8* %21, align 1, !dbg !11161
  %23 = zext i8 %22 to i32, !dbg !11162
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !11163
  call void @llvm.dbg.value(metadata i32 %24, metadata !11148, metadata !DIExpression()), !dbg !11149
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11164

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11166
  br i1 %26, label %69, label %27, !dbg !11168

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11169

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11170
  br i1 %29, label %65, label %30, !dbg !11170

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11172
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11149
  br i1 %31, label %38, label %34, !dbg !11174

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11175
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !11175

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11178
  br i1 %37, label %38, label %69, !dbg !11179

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11180
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !11181
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !11182
  %41 = icmp eq i32 %12, %40, !dbg !11184
  br i1 %41, label %43, label %42, !dbg !11185

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !11186
  br label %43, !dbg !11188

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !11189
  %45 = icmp eq i32 %16, %44, !dbg !11191
  br i1 %45, label %47, label %46, !dbg !11192

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !11193
  br label %47, !dbg !11195

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !11196
  %49 = icmp eq i32 %20, %48, !dbg !11198
  br i1 %49, label %51, label %50, !dbg !11199

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !11200
  br label %51, !dbg !11202

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !11203
  %53 = icmp eq i32 %24, %52, !dbg !11205
  br i1 %53, label %55, label %54, !dbg !11206

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !11207
  br label %55, !dbg !11209

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11210
  %57 = load i32, i32* %56, align 4, !dbg !11210
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11212
  %59 = load i32, i32* %58, align 4, !dbg !11212
  %60 = icmp eq i32 %57, %59, !dbg !11213
  br i1 %60, label %63, label %61, !dbg !11214

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !11215
  %62 = load i32, i32* %56, align 4, !dbg !11217
  store i32 %62, i32* %58, align 4, !dbg !11218
  br label %63, !dbg !11219

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11220
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !11221
  br label %69, !dbg !11222

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11170
  %67 = and i8 %66, 1, !dbg !11170
  %68 = icmp eq i8 %67, 0, !dbg !11170
  br i1 %68, label %30, label %69, !dbg !11170

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11149
  ret i32 %70, !dbg !11223
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !11224 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11226, metadata !DIExpression()), !dbg !11229
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11227, metadata !DIExpression()), !dbg !11229
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11230
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11230
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11230
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11228, metadata !DIExpression()), !dbg !11229
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11231
  %7 = load i32, i32* %6, align 4, !dbg !11231
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11232
  store i32 %7, i32* %8, align 4, !dbg !11233
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11234, !range !11235
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !11236
  %11 = trunc i32 %10 to i8, !dbg !11236
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11237
  store i8 %11, i8* %12, align 4, !dbg !11238
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !11239, !range !11240
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !11241
  %15 = trunc i32 %14 to i8, !dbg !11241
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11242
  store i8 %15, i8* %16, align 1, !dbg !11243
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !11244
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11245, !range !11235
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !11246
  %20 = trunc i32 %19 to i8, !dbg !11246
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11247
  store i8 %20, i8* %21, align 2, !dbg !11248
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !11249, !range !11250
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !11251
  %24 = trunc i32 %23 to i8, !dbg !11251
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11252
  store i8 %24, i8* %25, align 1, !dbg !11253
  ret i32 0, !dbg !11254
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11259, metadata !DIExpression()), !dbg !11261
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11262
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11262
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11262
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11260, metadata !DIExpression()), !dbg !11261
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11263
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11263
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !11264
  ret i32 %7, !dbg !11265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11270, metadata !DIExpression()), !dbg !11271
  %2 = icmp eq i32 %0, 1024, !dbg !11272
  %3 = select i1 %2, i32 2, i32 0, !dbg !11272
  %4 = icmp eq i32 %0, 1536, !dbg !11272
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11272
  ret i32 %5, !dbg !11273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11274 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11276, metadata !DIExpression()), !dbg !11278
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11279
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11279
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11279
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11277, metadata !DIExpression()), !dbg !11278
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11280
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11280
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !11281
  ret i32 %7, !dbg !11282
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11287, metadata !DIExpression()), !dbg !11288
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11289
  %3 = icmp ult i32 %2, 4, !dbg !11289
  br i1 %3, label %4, label %7, !dbg !11289

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11289
  %6 = load i32, i32* %5, align 4, !dbg !11289
  br label %7, !dbg !11289

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11290
  ret i32 %8, !dbg !11292
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11295, metadata !DIExpression()), !dbg !11297
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11298
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11298
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11298
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11296, metadata !DIExpression()), !dbg !11297
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11299
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11299
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !11300
  ret i32 %7, !dbg !11301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11306, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata i32 %1, metadata !11307, metadata !DIExpression()), !dbg !11308
  %3 = icmp eq i32 %0, 4096, !dbg !11309
  %4 = icmp eq i32 %1, 0, !dbg !11309
  %5 = select i1 %4, i32 4, i32 3, !dbg !11309
  %6 = select i1 %4, i32 3, i32 2, !dbg !11309
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11309
  ret i32 %7, !dbg !11310
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11311 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11313, metadata !DIExpression()), !dbg !11315
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11316
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11316
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11316
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11314, metadata !DIExpression()), !dbg !11315
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11317
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11317
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !11318
  ret i32 %7, !dbg !11319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = icmp eq i32 %0, 768, !dbg !11326
  %3 = zext i1 %2 to i32, !dbg !11325
  ret i32 %3, !dbg !11328
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11329 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11334, metadata !DIExpression()), !dbg !11335
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11336
  %3 = load volatile i32, i32* %2, align 4, !dbg !11336
  %4 = and i32 %3, 768, !dbg !11336
  ret i32 %4, !dbg !11337
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11338 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11340, metadata !DIExpression()), !dbg !11341
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11342
  %3 = load volatile i32, i32* %2, align 4, !dbg !11342
  %4 = and i32 %3, 4096, !dbg !11342
  ret i32 %4, !dbg !11343
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11344 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11346, metadata !DIExpression()), !dbg !11347
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11348
  %3 = load volatile i32, i32* %2, align 4, !dbg !11348
  %4 = and i32 %3, 12288, !dbg !11348
  ret i32 %4, !dbg !11349
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11350 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11352, metadata !DIExpression()), !dbg !11353
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11354
  %3 = load volatile i32, i32* %2, align 4, !dbg !11354
  %4 = and i32 %3, 1536, !dbg !11354
  ret i32 %4, !dbg !11355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11360, metadata !DIExpression()), !dbg !11361
  %2 = icmp eq i32 %0, 2, !dbg !11362
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11362
  %4 = icmp eq i32 %0, 1, !dbg !11362
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11362
  ret i32 %5, !dbg !11363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11368, metadata !DIExpression()), !dbg !11369
  %2 = icmp ult i32 %0, 3, !dbg !11370
  br i1 %2, label %3, label %6, !dbg !11370

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11370
  %5 = load i32, i32* %4, align 4, !dbg !11370
  br label %6, !dbg !11370

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11371
  ret i32 %7, !dbg !11373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11378, metadata !DIExpression()), !dbg !11380
  call void @llvm.dbg.value(metadata i32 %1, metadata !11379, metadata !DIExpression()), !dbg !11380
  %3 = icmp eq i32 %0, 4, !dbg !11381
  %4 = icmp eq i32 %1, 0, !dbg !11381
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11381
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11381
  ret i32 %6, !dbg !11382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11387, metadata !DIExpression()), !dbg !11388
  %2 = icmp eq i32 %0, 1, !dbg !11389
  %3 = select i1 %2, i32 768, i32 0, !dbg !11388
  ret i32 %3, !dbg !11391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11392 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11396, metadata !DIExpression()), !dbg !11397
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11398
  %3 = load volatile i32, i32* %2, align 4, !dbg !11398
  %4 = and i32 %3, -8193, !dbg !11398
  store volatile i32 %4, i32* %2, align 4, !dbg !11398
  ret void, !dbg !11399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11400 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11404, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32 %1, metadata !11405, metadata !DIExpression()), !dbg !11407
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11408
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11408
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11408
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11406, metadata !DIExpression()), !dbg !11407
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11409
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11409
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11410
  ret void, !dbg !11411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11414, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.value(metadata i32 %1, metadata !11415, metadata !DIExpression()), !dbg !11417
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11418
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11418
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11418
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11416, metadata !DIExpression()), !dbg !11417
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11419
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11419
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11420
  ret void, !dbg !11421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11424, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 %1, metadata !11425, metadata !DIExpression()), !dbg !11427
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11428
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11428
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11428
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11426, metadata !DIExpression()), !dbg !11427
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11429
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11429
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11430
  ret void, !dbg !11431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11432 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11434, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata i32 %1, metadata !11435, metadata !DIExpression()), !dbg !11437
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11438
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11438
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11438
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11436, metadata !DIExpression()), !dbg !11437
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11439
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11439
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11440
  ret void, !dbg !11441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11442 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11444, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i32 %1, metadata !11445, metadata !DIExpression()), !dbg !11449
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11450
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11450
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11450
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11446, metadata !DIExpression()), !dbg !11449
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11451
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11451
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11451
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11447, metadata !DIExpression()), !dbg !11449
  %10 = bitcast i32* %3 to i8*, !dbg !11452
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11452
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11453
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11453
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11457
  %14 = bitcast %struct.vnd_sensor_config** %13 to i8**, !dbg !11457
  %15 = load i8*, i8** %14, align 4, !dbg !11457
  call void @llvm.dbg.value(metadata i32* %3, metadata !11448, metadata !DIExpression(DW_OP_deref)), !dbg !11449
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11458
  %17 = icmp slt i32 %16, 0, !dbg !11459
  br i1 %17, label %18, label %21, !dbg !11460

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11461
  %20 = zext i8 %19 to i32, !dbg !11461
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.137, i32 0, i32 0), i32 noundef %20) #25, !dbg !11461
  br label %26, !dbg !11467

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11468
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11468
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11469
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11470
  %25 = load i32, i32* %3, align 4, !dbg !11471
  call void @llvm.dbg.value(metadata i32 %25, metadata !11448, metadata !DIExpression()), !dbg !11449
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11472
  br label %26, !dbg !11473

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11473
  ret void, !dbg !11473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11474 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11476, metadata !DIExpression()), !dbg !11477
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11478
  %3 = load volatile i32, i32* %2, align 4, !dbg !11478
  %4 = or i32 %3, 8192, !dbg !11478
  store volatile i32 %4, i32* %2, align 4, !dbg !11478
  ret void, !dbg !11479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11482, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.value(metadata i8* %1, metadata !11483, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.value(metadata i32* %2, metadata !11484, metadata !DIExpression()), !dbg !11486
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11487
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11487
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11487
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11485, metadata !DIExpression()), !dbg !11486
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11488
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11488
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11490
  br i1 %9, label %12, label %10, !dbg !11491

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11492
  br label %12, !dbg !11493

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11486
  ret i32 %13, !dbg !11494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef %0) unnamed_addr #4 !dbg !11495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11497, metadata !DIExpression()), !dbg !11498
  %2 = icmp eq i32 %0, 2, !dbg !11499
  %3 = select i1 %2, i8 87, i8 63, !dbg !11499
  %4 = icmp eq i32 %0, 1, !dbg !11499
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11499
  ret i8 %5, !dbg !11500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11501 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11505, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 0, metadata !11506, metadata !DIExpression()), !dbg !11507
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11508
  %3 = load volatile i32, i32* %2, align 4, !dbg !11508
  %4 = and i32 %3, -32769, !dbg !11508
  store volatile i32 %4, i32* %2, align 4, !dbg !11508
  ret void, !dbg !11509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11510 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11514, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.value(metadata i32 %1, metadata !11515, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.value(metadata i32 0, metadata !11516, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.value(metadata i32 %2, metadata !11517, metadata !DIExpression()), !dbg !11518
  %4 = zext i32 %1 to i64, !dbg !11519
  %5 = mul nuw nsw i64 %4, 25, !dbg !11519
  %6 = zext i32 %2 to i64, !dbg !11519
  %7 = shl nuw nsw i64 %6, 2, !dbg !11519
  %8 = udiv i64 %5, %7, !dbg !11519
  %9 = trunc i64 %8 to i32, !dbg !11519
  %10 = udiv i32 %9, 100, !dbg !11519
  %11 = shl nuw nsw i32 %10, 4, !dbg !11519
  %12 = mul i32 %10, -100, !dbg !11519
  %13 = add i32 %12, %9, !dbg !11519
  %14 = shl i32 %13, 4, !dbg !11519
  %15 = add i32 %14, 50, !dbg !11519
  %16 = udiv i32 %15, 100, !dbg !11519
  %17 = and i32 %16, 240, !dbg !11519
  %18 = add nuw nsw i32 %17, %11, !dbg !11519
  %19 = and i32 %16, 15, !dbg !11519
  %20 = and i32 %18, 65520, !dbg !11522
  %21 = or i32 %20, %19, !dbg !11522
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11523
  store volatile i32 %21, i32* %22, align 4, !dbg !11524
  ret void, !dbg !11525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11526 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11528, metadata !DIExpression()), !dbg !11530
  call void @llvm.dbg.value(metadata i32 %1, metadata !11529, metadata !DIExpression()), !dbg !11530
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11531
  %4 = load volatile i32, i32* %3, align 4, !dbg !11531
  %5 = and i32 %4, -769, !dbg !11531
  %6 = or i32 %5, %1, !dbg !11531
  store volatile i32 %6, i32* %3, align 4, !dbg !11531
  ret void, !dbg !11532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11533 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11535, metadata !DIExpression()), !dbg !11537
  call void @llvm.dbg.value(metadata i32 %1, metadata !11536, metadata !DIExpression()), !dbg !11537
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11538
  %4 = load volatile i32, i32* %3, align 4, !dbg !11538
  %5 = and i32 %4, -4097, !dbg !11538
  %6 = or i32 %5, %1, !dbg !11538
  store volatile i32 %6, i32* %3, align 4, !dbg !11538
  ret void, !dbg !11539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11540 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11542, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.value(metadata i32 %1, metadata !11543, metadata !DIExpression()), !dbg !11544
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11545
  %4 = load volatile i32, i32* %3, align 4, !dbg !11545
  %5 = and i32 %4, -12289, !dbg !11545
  %6 = or i32 %5, %1, !dbg !11545
  store volatile i32 %6, i32* %3, align 4, !dbg !11545
  ret void, !dbg !11546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11547 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11549, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.value(metadata i32 %1, metadata !11550, metadata !DIExpression()), !dbg !11551
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11552
  %4 = load volatile i32, i32* %3, align 4, !dbg !11552
  %5 = and i32 %4, -1537, !dbg !11552
  %6 = or i32 %5, %1, !dbg !11552
  store volatile i32 %6, i32* %3, align 4, !dbg !11552
  ret void, !dbg !11553
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11554 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11556, metadata !DIExpression()), !dbg !11557
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11558
  %3 = load volatile i32, i32* %2, align 4, !dbg !11558
  %4 = lshr i32 %3, 3, !dbg !11559
  %5 = and i32 %4, 1, !dbg !11559
  ret i32 %5, !dbg !11560
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11561 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11563, metadata !DIExpression()), !dbg !11564
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11565
  %3 = load volatile i32, i32* %2, align 4, !dbg !11565
  %4 = and i32 %3, 1, !dbg !11565
  ret i32 %4, !dbg !11566
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11567 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11569, metadata !DIExpression()), !dbg !11570
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11571
  %3 = load volatile i32, i32* %2, align 4, !dbg !11571
  %4 = lshr i32 %3, 1, !dbg !11572
  %5 = and i32 %4, 1, !dbg !11572
  ret i32 %5, !dbg !11573
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11574 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11576, metadata !DIExpression()), !dbg !11577
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11578
  %3 = load volatile i32, i32* %2, align 4, !dbg !11578
  %4 = lshr i32 %3, 8, !dbg !11579
  %5 = and i32 %4, 1, !dbg !11579
  ret i32 %5, !dbg !11580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11581 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11583, metadata !DIExpression()), !dbg !11584
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11585
  store volatile i32 -257, i32* %2, align 4, !dbg !11585
  ret void, !dbg !11586
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11587 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11589, metadata !DIExpression()), !dbg !11591
  %3 = bitcast i32* %2 to i8*, !dbg !11592
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11592
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11590, metadata !DIExpression()), !dbg !11593
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11594
  %5 = load volatile i32, i32* %4, align 4, !dbg !11594
  store volatile i32 %5, i32* %2, align 4, !dbg !11595
  %6 = load volatile i32, i32* %2, align 4, !dbg !11596
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11597
  %8 = load volatile i32, i32* %7, align 4, !dbg !11597
  store volatile i32 %8, i32* %2, align 4, !dbg !11598
  %9 = load volatile i32, i32* %2, align 4, !dbg !11599
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11600
  ret void, !dbg !11600
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11601 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11603, metadata !DIExpression()), !dbg !11605
  %3 = bitcast i32* %2 to i8*, !dbg !11606
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11606
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11604, metadata !DIExpression()), !dbg !11607
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11608
  %5 = load volatile i32, i32* %4, align 4, !dbg !11608
  store volatile i32 %5, i32* %2, align 4, !dbg !11609
  %6 = load volatile i32, i32* %2, align 4, !dbg !11610
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11611
  %8 = load volatile i32, i32* %7, align 4, !dbg !11611
  store volatile i32 %8, i32* %2, align 4, !dbg !11612
  %9 = load volatile i32, i32* %2, align 4, !dbg !11613
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11614
  ret void, !dbg !11614
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11615 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11617, metadata !DIExpression()), !dbg !11619
  %3 = bitcast i32* %2 to i8*, !dbg !11620
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11620
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11618, metadata !DIExpression()), !dbg !11621
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11622
  %5 = load volatile i32, i32* %4, align 4, !dbg !11622
  store volatile i32 %5, i32* %2, align 4, !dbg !11623
  %6 = load volatile i32, i32* %2, align 4, !dbg !11624
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11625
  %8 = load volatile i32, i32* %7, align 4, !dbg !11625
  store volatile i32 %8, i32* %2, align 4, !dbg !11626
  %9 = load volatile i32, i32* %2, align 4, !dbg !11627
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11628
  ret void, !dbg !11628
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11629 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11631, metadata !DIExpression()), !dbg !11633
  %3 = bitcast i32* %2 to i8*, !dbg !11634
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11634
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11632, metadata !DIExpression()), !dbg !11635
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11636
  %5 = load volatile i32, i32* %4, align 4, !dbg !11636
  store volatile i32 %5, i32* %2, align 4, !dbg !11637
  %6 = load volatile i32, i32* %2, align 4, !dbg !11638
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11639
  %8 = load volatile i32, i32* %7, align 4, !dbg !11639
  store volatile i32 %8, i32* %2, align 4, !dbg !11640
  %9 = load volatile i32, i32* %2, align 4, !dbg !11641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11642
  ret void, !dbg !11642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11643 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11645, metadata !DIExpression()), !dbg !11646
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11647
  %3 = load volatile i32, i32* %2, align 4, !dbg !11647
  %4 = lshr i32 %3, 7, !dbg !11648
  %5 = and i32 %4, 1, !dbg !11648
  ret i32 %5, !dbg !11649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11650 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11654, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.value(metadata i8 %1, metadata !11655, metadata !DIExpression()), !dbg !11656
  %3 = zext i8 %1 to i32, !dbg !11657
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11658
  store volatile i32 %3, i32* %4, align 4, !dbg !11659
  ret void, !dbg !11660
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11661 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11663, metadata !DIExpression()), !dbg !11664
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11665
  %3 = load volatile i32, i32* %2, align 4, !dbg !11665
  %4 = lshr i32 %3, 5, !dbg !11666
  %5 = and i32 %4, 1, !dbg !11666
  ret i32 %5, !dbg !11667
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11668 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11672, metadata !DIExpression()), !dbg !11673
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11674
  %3 = load volatile i32, i32* %2, align 4, !dbg !11674
  %4 = trunc i32 %3 to i8, !dbg !11675
  ret i8 %4, !dbg !11676
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11677 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11679, metadata !DIExpression()), !dbg !11685
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11686
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11686
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11686
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11680, metadata !DIExpression()), !dbg !11685
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11687
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11687
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11687
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11681, metadata !DIExpression()), !dbg !11685
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11688
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11689
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11689
  %10 = tail call fastcc zeroext i1 @device_is_ready.139(%struct.device* noundef %9) #24, !dbg !11691
  br i1 %10, label %14, label %11, !dbg !11692

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11693
  %13 = zext i8 %12 to i32, !dbg !11693
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.140, i32 0, i32 0), i32 noundef %13) #25, !dbg !11693
  br label %62, !dbg !11699

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11700
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11701
  %17 = bitcast %struct.vnd_sensor_config** %16 to i8**, !dbg !11701
  %18 = load i8*, i8** %17, align 4, !dbg !11701
  %19 = tail call fastcc i32 @clock_control_on.141(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11702
  call void @llvm.dbg.value(metadata i32 %19, metadata !11684, metadata !DIExpression()), !dbg !11685
  %20 = icmp eq i32 %19, 0, !dbg !11703
  br i1 %20, label %24, label %21, !dbg !11705

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11706
  %23 = zext i8 %22 to i32, !dbg !11706
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.142, i32 0, i32 0), i32 noundef %23) #25, !dbg !11706
  br label %62, !dbg !11712

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11713
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11713
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11714
  call void @llvm.dbg.value(metadata i32 %27, metadata !11684, metadata !DIExpression()), !dbg !11685
  %28 = icmp slt i32 %27, 0, !dbg !11715
  br i1 %28, label %62, label %29, !dbg !11717

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11718
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11718
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11719
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11720
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11721
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11722
  %34 = load i32, i32* %33, align 4, !dbg !11722
  %35 = icmp ult i32 %34, 3, !dbg !11724
  br i1 %35, label %39, label %36, !dbg !11724

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 2) #24, !dbg !11725
  %38 = zext i8 %37 to i32, !dbg !11725
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.143, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11725
  call void @llvm.dbg.value(metadata i32 0, metadata !11682, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i32 0, metadata !11683, metadata !DIExpression()), !dbg !11685
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11724
  %41 = load i32, i32* %40, align 4, !dbg !11724
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !11724
  %43 = load i32, i32* %42, align 4, !dbg !11724
  br label %44, !dbg !11724

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11734
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11734
  call void @llvm.dbg.value(metadata i32 %46, metadata !11683, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i32 %45, metadata !11682, metadata !DIExpression()), !dbg !11685
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11735
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11736
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11737
  %49 = load i8, i8* %48, align 4, !dbg !11737, !range !7374
  %50 = icmp eq i8 %49, 0, !dbg !11737
  br i1 %50, label %52, label %51, !dbg !11739

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11740
  br label %52, !dbg !11742

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11743
  %54 = load i32, i32* %53, align 4, !dbg !11743
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11744
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11745
  %56 = load i8, i8* %55, align 4, !dbg !11745, !range !7374
  %57 = icmp eq i8 %56, 0, !dbg !11745
  br i1 %57, label %60, label %58, !dbg !11747

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11748
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11750
  br label %60, !dbg !11751

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11752
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11753
  br label %62, !dbg !11754

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11685
  ret i32 %63, !dbg !11755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !11756 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11760, metadata !DIExpression()), !dbg !11764
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11765
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11765
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11765
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11761, metadata !DIExpression()), !dbg !11764
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11762, metadata !DIExpression()), !dbg !11764
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11766
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11767
  ret void, !dbg !11768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.139(%struct.device* noundef %0) unnamed_addr #1 !dbg !11769 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11773, metadata !DIExpression()), !dbg !11774
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11775, !srcloc !11777
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.144(%struct.device* noundef %0) #24, !dbg !11778
  ret i1 %2, !dbg !11779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.141(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11782, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata i8* %1, metadata !11783, metadata !DIExpression()), !dbg !11785
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11786
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11786
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11786
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11784, metadata !DIExpression()), !dbg !11785
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11787
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11787
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11788
  ret i32 %8, !dbg !11789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11790 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11794, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i8 0, metadata !11795, metadata !DIExpression()), !dbg !11798
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11799
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11799
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11797, metadata !DIExpression(DW_OP_deref)), !dbg !11798
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11800
  call void @llvm.dbg.value(metadata i32 %4, metadata !11796, metadata !DIExpression()), !dbg !11798
  %5 = icmp slt i32 %4, 0, !dbg !11801
  br i1 %5, label %9, label %6, !dbg !11803

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11804
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11797, metadata !DIExpression()), !dbg !11798
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11805
  br label %9, !dbg !11806

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11798
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11807
  ret i32 %10, !dbg !11807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11808 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11810, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i32 12, metadata !11811, metadata !DIExpression()), !dbg !11814
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11815

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11816, metadata !DIExpression()) #23, !dbg !11822
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11825, !srcloc !11826
  call void @llvm.dbg.value(metadata i32 %4, metadata !11821, metadata !DIExpression()) #23, !dbg !11822
  %5 = or i32 %4, 12, !dbg !11827
  call void @llvm.dbg.value(metadata i32 %5, metadata !11812, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata i32 %5, metadata !11829, metadata !DIExpression()) #23, !dbg !11836
  call void @llvm.dbg.value(metadata i32* %2, metadata !11834, metadata !DIExpression()) #23, !dbg !11836
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11838, !srcloc !11839
  call void @llvm.dbg.value(metadata i32 %6, metadata !11835, metadata !DIExpression()) #23, !dbg !11836
  %7 = icmp eq i32 %6, 0, !dbg !11815
  br i1 %7, label %8, label %3, !dbg !11827, !llvm.loop !11840

8:                                                ; preds = %3
  ret void, !dbg !11841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11842 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11844, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.value(metadata i32 %1, metadata !11845, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.value(metadata i32 %2, metadata !11846, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.value(metadata i32 0, metadata !11847, metadata !DIExpression()), !dbg !11848
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11849
  %5 = load volatile i32, i32* %4, align 4, !dbg !11849
  %6 = and i32 %5, -5633, !dbg !11849
  %7 = or i32 %2, %1, !dbg !11849
  %8 = or i32 %7, %6, !dbg !11849
  store volatile i32 %8, i32* %4, align 4, !dbg !11849
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11850
  %10 = load volatile i32, i32* %9, align 4, !dbg !11850
  %11 = and i32 %10, -12289, !dbg !11850
  store volatile i32 %11, i32* %9, align 4, !dbg !11850
  ret void, !dbg !11851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11852 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11854, metadata !DIExpression()), !dbg !11855
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11856
  %3 = load volatile i32, i32* %2, align 4, !dbg !11856
  %4 = or i32 %3, 8, !dbg !11856
  store volatile i32 %4, i32* %2, align 4, !dbg !11856
  ret void, !dbg !11857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11858 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11862, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11863, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.value(metadata i32 0, metadata !11864, metadata !DIExpression()), !dbg !11865
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11866
  %3 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %2, align 4, !dbg !11866
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11867
  %5 = load i8, i8* %4, align 4, !dbg !11867
  %6 = tail call i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11868
  ret i32 %6, !dbg !11869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.144(%struct.device* noundef %0) unnamed_addr #1 !dbg !11870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11872, metadata !DIExpression()), !dbg !11873
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11874
  ret i1 %2, !dbg !11875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11878, metadata !DIExpression()), !dbg !11879
  tail call fastcc void @__NVIC_SetPriority.146() #24, !dbg !11880
  store i32 8399, i32* @last_load, align 4, !dbg !11881
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11882
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11883
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11884
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11885
  %3 = or i32 %2, 7, !dbg !11885
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11885
  ret i32 0, !dbg !11886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.146() unnamed_addr #15 !dbg !11887 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11889, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata i32 1, metadata !11890, metadata !DIExpression()), !dbg !11891
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11892
  ret void, !dbg !11895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11898, metadata !DIExpression()), !dbg !11900
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11901
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11902
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11903
  %5 = add i32 %4, %3, !dbg !11903
  store i32 %5, i32* @cycle_count, align 4, !dbg !11903
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11904
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11905
  %7 = sub i32 %5, %6, !dbg !11908
  %8 = udiv i32 %7, 8400, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %8, metadata !11899, metadata !DIExpression()), !dbg !11900
  %9 = mul nuw i32 %8, 8400, !dbg !11910
  %10 = add i32 %9, %6, !dbg !11911
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11911
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11912
  tail call void @z_arm_int_exit() #25, !dbg !11913
  ret void, !dbg !11914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11915 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11920
  call void @llvm.dbg.value(metadata i32 %1, metadata !11917, metadata !DIExpression()), !dbg !11921
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11922
  call void @llvm.dbg.value(metadata i32 %2, metadata !11918, metadata !DIExpression()), !dbg !11921
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11923
  call void @llvm.dbg.value(metadata i32 %3, metadata !11919, metadata !DIExpression()), !dbg !11921
  %4 = and i32 %2, 65536, !dbg !11924
  %5 = icmp ne i32 %4, 0, !dbg !11924
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11926
  %8 = load i32, i32* @last_load, align 4, !dbg !11921
  br i1 %7, label %9, label %13, !dbg !11926

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11927
  %11 = add i32 %10, %8, !dbg !11927
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11927
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11929
  br label %13, !dbg !11930

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11931
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11932
  %16 = add i32 %14, %15, !dbg !11933
  ret i32 %16, !dbg !11934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11939, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i1 %1, metadata !11940, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11952
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11953
  br i1 %4, label %5, label %8, !dbg !11953

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11955
  %7 = and i32 %6, -2, !dbg !11955
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11955
  store i32 -16777216, i32* @last_load, align 4, !dbg !11957
  br label %54, !dbg !11958

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11959
  call void @llvm.dbg.value(metadata i32 %9, metadata !11944, metadata !DIExpression()), !dbg !11952
  br i1 %3, label %18, label %10, !dbg !11960

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11960
  call void @llvm.dbg.value(metadata i32 undef, metadata !11939, metadata !DIExpression()), !dbg !11952
  %12 = icmp slt i32 %11, 1, !dbg !11961
  br i1 %12, label %18, label %13, !dbg !11961

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11961
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11961
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11961
  %17 = add nuw nsw i32 %16, 8399, !dbg !11961
  br label %18, !dbg !11961

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11939, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11962, metadata !DIExpression()) #23, !dbg !11969
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11971, !srcloc !11977
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11971
  call void @llvm.dbg.value(metadata i32 %21, metadata !11974, metadata !DIExpression()) #23, !dbg !11978
  call void @llvm.dbg.value(metadata i32 undef, metadata !11975, metadata !DIExpression()) #23, !dbg !11978
  call void @llvm.dbg.value(metadata i32 %21, metadata !11968, metadata !DIExpression()) #23, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %21, metadata !11945, metadata !DIExpression()), !dbg !11952
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %22, metadata !11950, metadata !DIExpression()), !dbg !11952
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11980
  call void @llvm.dbg.value(metadata i32 %23, metadata !11942, metadata !DIExpression()), !dbg !11952
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11981
  %25 = add i32 %24, %22, !dbg !11981
  store i32 %25, i32* @cycle_count, align 4, !dbg !11981
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11982
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11983
  %27 = sub i32 %25, %26, !dbg !11984
  call void @llvm.dbg.value(metadata i32 %27, metadata !11951, metadata !DIExpression()), !dbg !11952
  %28 = icmp slt i32 %27, 0, !dbg !11985
  br i1 %28, label %38, label %29, !dbg !11987

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11941, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i32 undef, metadata !11941, metadata !DIExpression()), !dbg !11952
  %30 = add nuw i32 %19, %27, !dbg !11988
  %31 = urem i32 %30, 8400, !dbg !11990
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11952
  %32 = sub nuw nsw i32 %19, %31, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %32, metadata !11941, metadata !DIExpression()), !dbg !11952
  %33 = icmp ugt i32 %32, 1024, !dbg !11992
  br i1 %33, label %34, label %36, !dbg !11992

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11941, metadata !DIExpression()), !dbg !11952
  %35 = icmp ugt i32 %32, 16766400, !dbg !11993
  br i1 %35, label %38, label %36, !dbg !11995

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11996
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11997
  call void @llvm.dbg.value(metadata i32 %40, metadata !11943, metadata !DIExpression()), !dbg !11952
  %41 = add nsw i32 %39, -1, !dbg !11998
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11999
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12000
  %42 = icmp ult i32 %23, %40, !dbg !12001
  br i1 %42, label %43, label %48, !dbg !12003

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12004
  %45 = add i32 %23, %9, !dbg !12006
  %46 = sub i32 %45, %40, !dbg !12007
  %47 = add i32 %46, %44, !dbg !12004
  br label %52, !dbg !12008

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12009
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12011
  %51 = add i32 %49, %50, !dbg !12011
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12012
  store i32 %53, i32* @cycle_count, align 4, !dbg !12012
  call void @llvm.dbg.value(metadata i32 %21, metadata !12013, metadata !DIExpression()) #23, !dbg !12019
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12018, metadata !DIExpression()) #23, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %21, metadata !12021, metadata !DIExpression()) #23, !dbg !12024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12026, !srcloc !12027
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12029 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11962, metadata !DIExpression()) #23, !dbg !12033
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12035, !srcloc !11977
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12035
  call void @llvm.dbg.value(metadata i32 %2, metadata !11974, metadata !DIExpression()) #23, !dbg !12037
  call void @llvm.dbg.value(metadata i32 undef, metadata !11975, metadata !DIExpression()) #23, !dbg !12037
  call void @llvm.dbg.value(metadata i32 %2, metadata !11968, metadata !DIExpression()) #23, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %2, metadata !12031, metadata !DIExpression()), !dbg !12038
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12039
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12040
  %5 = add i32 %4, %3, !dbg !12041
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12042
  %7 = sub i32 %5, %6, !dbg !12043
  call void @llvm.dbg.value(metadata i32 %7, metadata !12032, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.value(metadata i32 %2, metadata !12013, metadata !DIExpression()) #23, !dbg !12044
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12018, metadata !DIExpression()) #23, !dbg !12044
  call void @llvm.dbg.value(metadata i32 %2, metadata !12021, metadata !DIExpression()) #23, !dbg !12046
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12048, !srcloc !12027
  %8 = udiv i32 %7, 8400, !dbg !12049
  ret i32 %8, !dbg !12050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12051 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11962, metadata !DIExpression()) #23, !dbg !12055
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12057, !srcloc !11977
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12057
  call void @llvm.dbg.value(metadata i32 %2, metadata !11974, metadata !DIExpression()) #23, !dbg !12059
  call void @llvm.dbg.value(metadata i32 undef, metadata !11975, metadata !DIExpression()) #23, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %2, metadata !11968, metadata !DIExpression()) #23, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %2, metadata !12053, metadata !DIExpression()), !dbg !12060
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12061
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12062
  %5 = add i32 %4, %3, !dbg !12063
  call void @llvm.dbg.value(metadata i32 %5, metadata !12054, metadata !DIExpression()), !dbg !12060
  call void @llvm.dbg.value(metadata i32 %2, metadata !12013, metadata !DIExpression()) #23, !dbg !12064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12018, metadata !DIExpression()) #23, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %2, metadata !12021, metadata !DIExpression()) #23, !dbg !12066
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12068, !srcloc !12027
  ret i32 %5, !dbg !12069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !12070 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12071
  %2 = icmp eq i32 %1, -16777216, !dbg !12073
  br i1 %2, label %3, label %6, !dbg !12074

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12075
  %5 = or i32 %4, 1, !dbg !12075
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12075
  br label %6, !dbg !12077

6:                                                ; preds = %3, %0
  ret void, !dbg !12078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !12079 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12080
  %2 = and i32 %1, -2, !dbg !12080
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12080
  ret void, !dbg !12081
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12082 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12108, metadata !DIExpression()), !dbg !12111
  call void @llvm.dbg.value(metadata i8 %1, metadata !12109, metadata !DIExpression()), !dbg !12111
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12110, metadata !DIExpression()), !dbg !12111
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12112
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12112
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12111
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12113
  %8 = load i8, i8* %6, align 4, !dbg !12114
  %9 = zext i8 %8 to i32, !dbg !12115
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12115
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12116
  br i1 %11, label %18, label %24, !dbg !12117

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12111
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12113
  %14 = load i8, i8* %6, align 4, !dbg !12114
  %15 = zext i8 %14 to i32, !dbg !12115
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12115
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12116
  br i1 %17, label %18, label %24, !dbg !12117, !llvm.loop !12118

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12120
  %21 = load i8, i8* %20, align 1, !dbg !12120
  %22 = icmp eq i8 %21, %1, !dbg !12123
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12124
  br i1 %22, label %24, label %12, !dbg !12125

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12111
  ret i32 %25, !dbg !12126
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12127 {
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %0, metadata !12138, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i8 %1, metadata !12139, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i32 %2, metadata !12140, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i32 0, metadata !12143, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i32 0, metadata !12144, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i8 0, metadata !12145, metadata !DIExpression()), !dbg !12155
  %4 = icmp eq i8 %1, 0, !dbg !12156
  br i1 %4, label %35, label %5, !dbg !12157

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12156
  br label %9, !dbg !12157

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12145, metadata !DIExpression()), !dbg !12155
  call void @llvm.dbg.value(metadata i32 %29, metadata !12143, metadata !DIExpression()), !dbg !12154
  %8 = icmp eq i32 %34, %6, !dbg !12156
  br i1 %8, label %35, label %9, !dbg !12157, !llvm.loop !12158

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12145, metadata !DIExpression()), !dbg !12155
  call void @llvm.dbg.value(metadata i32 %11, metadata !12143, metadata !DIExpression()), !dbg !12154
  %12 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 0, !dbg !12160
  %13 = load i32, i32* %12, align 4, !dbg !12160
  call void @llvm.dbg.value(metadata i32 %13, metadata !12142, metadata !DIExpression()), !dbg !12154
  %14 = and i32 %13, 31, !dbg !12161
  %15 = icmp ult i32 %14, 16, !dbg !12162
  br i1 %15, label %16, label %20, !dbg !12163

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12164
  %18 = load i32, i32* %17, align 4, !dbg !12164
  %19 = or i32 %18, 32, !dbg !12166
  call void @llvm.dbg.value(metadata i32 %19, metadata !12143, metadata !DIExpression()), !dbg !12154
  br label %28, !dbg !12167

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12168

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12169
  %23 = load i32, i32* %22, align 4, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %23, metadata !12147, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12170
  %24 = lshr i32 %23, 7, !dbg !12171
  %25 = and i32 %24, 16, !dbg !12171
  %26 = or i32 %25, %23, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %26, metadata !12143, metadata !DIExpression()), !dbg !12154
  br label %28, !dbg !12172

27:                                               ; preds = %20
  br label %28, !dbg !12173

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12154
  call void @llvm.dbg.value(metadata i32 %29, metadata !12143, metadata !DIExpression()), !dbg !12154
  %30 = lshr i32 %13, 5, !dbg !12173
  %31 = and i32 %30, 255, !dbg !12173
  call void @llvm.dbg.value(metadata i32 %31, metadata !12141, metadata !DIExpression()), !dbg !12154
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %32, metadata !12144, metadata !DIExpression()), !dbg !12154
  %33 = icmp slt i32 %32, 0, !dbg !12175
  %34 = add nuw nsw i32 %10, 1, !dbg !12177
  call void @llvm.dbg.value(metadata i32 %34, metadata !12145, metadata !DIExpression()), !dbg !12155
  br i1 %33, label %35, label %7, !dbg !12178

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12184, metadata !DIExpression()), !dbg !12188
  call void @llvm.dbg.value(metadata i32 %1, metadata !12185, metadata !DIExpression()), !dbg !12188
  call void @llvm.dbg.value(metadata i32 %2, metadata !12186, metadata !DIExpression()), !dbg !12188
  %4 = icmp ugt i32 %0, 175, !dbg !12189
  br i1 %4, label %16, label %5, !dbg !12191

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12192
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12193
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12193
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12187, metadata !DIExpression()), !dbg !12188
  %9 = add nsw i32 %6, -8, !dbg !12194
  %10 = icmp ult i32 %9, 3, !dbg !12194
  br i1 %10, label %16, label %11, !dbg !12196

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.151(%struct.device* noundef %8) #24, !dbg !12197
  br i1 %12, label %13, label %16, !dbg !12198

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12199
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12200
  br label %16, !dbg !12201

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12188
  ret i32 %17, !dbg !12202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.151(%struct.device* noundef %0) unnamed_addr #1 !dbg !12203 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12207, metadata !DIExpression()), !dbg !12208
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12209, !srcloc !12211
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.152(%struct.device* noundef %0) #24, !dbg !12212
  ret i1 %2, !dbg !12213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.152(%struct.device* noundef %0) unnamed_addr #1 !dbg !12214 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12216, metadata !DIExpression()), !dbg !12217
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12218
  ret i1 %2, !dbg !12219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12220 {
  ret void, !dbg !12221
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !12222 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12224, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 0, metadata !12225, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 2, metadata !12226, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 0, metadata !12227, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 2, metadata !12228, metadata !DIExpression()), !dbg !12229
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12230
  %2 = and i32 %1, 12, !dbg !12231
  call void @llvm.dbg.value(metadata i32 %2, metadata !12224, metadata !DIExpression()), !dbg !12229
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12232

3:                                                ; preds = %0
  br label %21, !dbg !12233

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %5, metadata !12227, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12229
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12236
  %7 = and i32 %6, 63, !dbg !12237
  call void @llvm.dbg.value(metadata i32 %7, metadata !12228, metadata !DIExpression()), !dbg !12229
  %8 = and i32 %5, 4194304, !dbg !12238
  %9 = icmp eq i32 %8, 0, !dbg !12238
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !12240
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12240
  %13 = lshr i32 %12, 6, !dbg !12240
  %14 = and i32 %13, 511, !dbg !12240
  %15 = mul i32 %14, %11, !dbg !12240
  call void @llvm.dbg.value(metadata i32 %15, metadata !12225, metadata !DIExpression()), !dbg !12229
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12241
  %17 = lshr i32 %16, 15, !dbg !12242
  %18 = and i32 %17, 6, !dbg !12242
  %19 = add nuw nsw i32 %18, 2, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %19, metadata !12226, metadata !DIExpression()), !dbg !12229
  %20 = udiv i32 %15, %19, !dbg !12243
  br label %21, !dbg !12244

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12245
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12246
  %24 = lshr i32 %23, 4, !dbg !12247
  %25 = and i32 %24, 15, !dbg !12247
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12248
  %27 = load i8, i8* %26, align 1, !dbg !12248
  %28 = zext i8 %27 to i32, !dbg !12248
  call void @llvm.dbg.value(metadata i32 %28, metadata !12224, metadata !DIExpression()), !dbg !12229
  %29 = lshr i32 %22, %28, !dbg !12249
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12249
  ret void, !dbg !12250
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12251 {
  ret i32 0, !dbg !12256
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12257 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12283, metadata !DIExpression()), !dbg !12294
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12295
  br i1 %3, label %311, label %4, !dbg !12297

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12298
  %6 = load i32, i32* %5, align 4, !dbg !12298
  %7 = and i32 %6, 1, !dbg !12300
  %8 = icmp eq i32 %7, 0, !dbg !12301
  br i1 %8, label %66, label %9, !dbg !12302

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12303
  %11 = and i32 %10, 12, !dbg !12303
  %12 = icmp eq i32 %11, 4, !dbg !12306
  br i1 %12, label %21, label %13, !dbg !12307

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12308
  %15 = and i32 %14, 12, !dbg !12308
  %16 = icmp eq i32 %15, 8, !dbg !12309
  br i1 %16, label %17, label %29, !dbg !12310

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12311
  %19 = and i32 %18, 4194304, !dbg !12312
  %20 = icmp eq i32 %19, 0, !dbg !12313
  br i1 %20, label %29, label %21, !dbg !12314

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12315
  %23 = and i32 %22, 131072, !dbg !12315
  %24 = icmp eq i32 %23, 0, !dbg !12315
  br i1 %24, label %66, label %25, !dbg !12318

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12319
  %27 = load i32, i32* %26, align 4, !dbg !12319
  %28 = icmp eq i32 %27, 0, !dbg !12320
  br i1 %28, label %311, label %66, !dbg !12321

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12322
  %31 = load i32, i32* %30, align 4, !dbg !12322
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12326

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12327
  %34 = or i32 %33, 65536, !dbg !12327
  br label %45, !dbg !12327

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12329
  %37 = or i32 %36, 262144, !dbg !12329
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12329
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12329
  %39 = or i32 %38, 65536, !dbg !12329
  br label %45, !dbg !12329

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12332
  %42 = and i32 %41, -65537, !dbg !12332
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12332
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12332
  %44 = and i32 %43, -262145, !dbg !12332
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12334
  %47 = load i32, i32* %30, align 4, !dbg !12335
  %48 = icmp eq i32 %47, 0, !dbg !12337
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12338
  call void @llvm.dbg.value(metadata i32 %49, metadata !12284, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i32 %49, metadata !12284, metadata !DIExpression()), !dbg !12294
  br i1 %48, label %58, label %50, !dbg !12339

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12340
  %52 = and i32 %51, 131072, !dbg !12342
  %53 = icmp eq i32 %52, 0, !dbg !12342
  br i1 %53, label %54, label %66, !dbg !12343

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12344
  %56 = sub i32 %55, %49, !dbg !12347
  %57 = icmp ugt i32 %56, 100, !dbg !12348
  br i1 %57, label %311, label %50, !dbg !12349, !llvm.loop !12350

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12352
  %60 = and i32 %59, 131072, !dbg !12352
  %61 = icmp eq i32 %60, 0, !dbg !12352
  br i1 %61, label %66, label %62, !dbg !12354

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12355
  %64 = sub i32 %63, %49, !dbg !12358
  %65 = icmp ugt i32 %64, 100, !dbg !12359
  br i1 %65, label %311, label %58, !dbg !12360, !llvm.loop !12361

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12363
  %68 = and i32 %67, 2, !dbg !12365
  %69 = icmp eq i32 %68, 0, !dbg !12366
  br i1 %69, label %121, label %70, !dbg !12367

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12368
  %72 = and i32 %71, 12, !dbg !12368
  %73 = icmp eq i32 %72, 0, !dbg !12371
  br i1 %73, label %82, label %74, !dbg !12372

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12373
  %76 = and i32 %75, 12, !dbg !12373
  %77 = icmp eq i32 %76, 8, !dbg !12374
  br i1 %77, label %78, label %90, !dbg !12375

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12376
  %80 = and i32 %79, 4194304, !dbg !12377
  %81 = icmp eq i32 %80, 0, !dbg !12378
  br i1 %81, label %82, label %90, !dbg !12379

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12380
  %84 = and i32 %83, 2, !dbg !12380
  %85 = icmp eq i32 %84, 0, !dbg !12380
  br i1 %85, label %114, label %86, !dbg !12383

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12384
  %88 = load i32, i32* %87, align 4, !dbg !12384
  %89 = icmp eq i32 %88, 1, !dbg !12385
  br i1 %89, label %114, label %311, !dbg !12386

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12387
  %92 = load i32, i32* %91, align 4, !dbg !12387
  %93 = icmp eq i32 %92, 0, !dbg !12390
  br i1 %93, label %104, label %94, !dbg !12391

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12392
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12394
  call void @llvm.dbg.value(metadata i32 %95, metadata !12284, metadata !DIExpression()), !dbg !12294
  br label %96, !dbg !12395

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12396
  %98 = and i32 %97, 2, !dbg !12397
  %99 = icmp eq i32 %98, 0, !dbg !12397
  br i1 %99, label %100, label %114, !dbg !12395

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12398
  %102 = sub i32 %101, %95, !dbg !12401
  %103 = icmp ugt i32 %102, 2, !dbg !12402
  br i1 %103, label %311, label %96, !dbg !12403, !llvm.loop !12404

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12406
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12408
  call void @llvm.dbg.value(metadata i32 %105, metadata !12284, metadata !DIExpression()), !dbg !12294
  br label %106, !dbg !12409

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12410
  %108 = and i32 %107, 2, !dbg !12410
  %109 = icmp eq i32 %108, 0, !dbg !12410
  br i1 %109, label %121, label %110, !dbg !12409

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12411
  %112 = sub i32 %111, %105, !dbg !12414
  %113 = icmp ugt i32 %112, 2, !dbg !12415
  br i1 %113, label %311, label %106, !dbg !12416, !llvm.loop !12417

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12419
  %116 = and i32 %115, -249, !dbg !12419
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12419
  %118 = load i32, i32* %117, align 4, !dbg !12419
  %119 = shl i32 %118, 3, !dbg !12419
  %120 = or i32 %119, %116, !dbg !12419
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12419
  br label %121, !dbg !12420

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12420
  %123 = and i32 %122, 8, !dbg !12422
  %124 = icmp eq i32 %123, 0, !dbg !12423
  br i1 %124, label %149, label %125, !dbg !12424

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12425
  %127 = load i32, i32* %126, align 4, !dbg !12425
  %128 = icmp eq i32 %127, 0, !dbg !12428
  br i1 %128, label %139, label %129, !dbg !12429

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12430
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12432
  call void @llvm.dbg.value(metadata i32 %130, metadata !12284, metadata !DIExpression()), !dbg !12294
  br label %131, !dbg !12433

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12434
  %133 = and i32 %132, 2, !dbg !12435
  %134 = icmp eq i32 %133, 0, !dbg !12435
  br i1 %134, label %135, label %149, !dbg !12433

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12436
  %137 = sub i32 %136, %130, !dbg !12439
  %138 = icmp ugt i32 %137, 2, !dbg !12440
  br i1 %138, label %311, label %131, !dbg !12441, !llvm.loop !12442

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12444
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12446
  call void @llvm.dbg.value(metadata i32 %140, metadata !12284, metadata !DIExpression()), !dbg !12294
  br label %141, !dbg !12447

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12448
  %143 = and i32 %142, 2, !dbg !12448
  %144 = icmp eq i32 %143, 0, !dbg !12448
  br i1 %144, label %149, label %145, !dbg !12447

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12449
  %147 = sub i32 %146, %140, !dbg !12452
  %148 = icmp ugt i32 %147, 2, !dbg !12453
  br i1 %148, label %311, label %141, !dbg !12454, !llvm.loop !12455

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12457
  %151 = and i32 %150, 4, !dbg !12458
  %152 = icmp eq i32 %151, 0, !dbg !12459
  br i1 %152, label %221, label %153, !dbg !12460

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12286, metadata !DIExpression()), !dbg !12461
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12462
  %155 = and i32 %154, 268435456, !dbg !12462
  %156 = icmp eq i32 %155, 0, !dbg !12462
  br i1 %156, label %157, label %164, !dbg !12463

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12464
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12464
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12290, metadata !DIExpression()), !dbg !12464
  store volatile i32 0, i32* %2, align 4, !dbg !12464
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12464
  %160 = or i32 %159, 268435456, !dbg !12464
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12464
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12464
  %162 = and i32 %161, 268435456, !dbg !12464
  store volatile i32 %162, i32* %2, align 4, !dbg !12464
  %163 = load volatile i32, i32* %2, align 4, !dbg !12464
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12465
  call void @llvm.dbg.value(metadata i32 1, metadata !12286, metadata !DIExpression()), !dbg !12461
  br label %164, !dbg !12466

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12286, metadata !DIExpression()), !dbg !12461
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12467
  %166 = and i32 %165, 256, !dbg !12467
  %167 = icmp eq i32 %166, 0, !dbg !12467
  br i1 %167, label %168, label %180, !dbg !12469

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12470
  %170 = or i32 %169, 256, !dbg !12470
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12470
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12472
  call void @llvm.dbg.value(metadata i32 %171, metadata !12284, metadata !DIExpression()), !dbg !12294
  br label %172, !dbg !12473

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12474
  %174 = and i32 %173, 256, !dbg !12474
  %175 = icmp eq i32 %174, 0, !dbg !12474
  br i1 %175, label %176, label %180, !dbg !12473

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12475
  %178 = sub i32 %177, %171, !dbg !12478
  %179 = icmp ugt i32 %178, 2, !dbg !12479
  br i1 %179, label %311, label %172, !dbg !12480, !llvm.loop !12481

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12483
  %182 = load i32, i32* %181, align 4, !dbg !12483
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12486

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12487
  %185 = or i32 %184, 1, !dbg !12487
  br label %196, !dbg !12487

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12489
  %188 = or i32 %187, 4, !dbg !12489
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12489
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12489
  %190 = or i32 %189, 1, !dbg !12489
  br label %196, !dbg !12489

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12492
  %193 = and i32 %192, -2, !dbg !12492
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12492
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12492
  %195 = and i32 %194, -5, !dbg !12492
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12494
  %198 = load i32, i32* %181, align 4, !dbg !12495
  %199 = icmp eq i32 %198, 0, !dbg !12497
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12498
  call void @llvm.dbg.value(metadata i32 %200, metadata !12284, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i32 %200, metadata !12284, metadata !DIExpression()), !dbg !12294
  br i1 %199, label %209, label %201, !dbg !12499

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12500
  %203 = and i32 %202, 2, !dbg !12502
  %204 = icmp eq i32 %203, 0, !dbg !12502
  br i1 %204, label %205, label %217, !dbg !12503

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12504
  %207 = sub i32 %206, %200, !dbg !12507
  %208 = icmp ugt i32 %207, 5000, !dbg !12508
  br i1 %208, label %311, label %201, !dbg !12509, !llvm.loop !12510

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12512
  %211 = and i32 %210, 2, !dbg !12512
  %212 = icmp eq i32 %211, 0, !dbg !12512
  br i1 %212, label %217, label %213, !dbg !12514

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12515
  %215 = sub i32 %214, %200, !dbg !12518
  %216 = icmp ugt i32 %215, 5000, !dbg !12519
  br i1 %216, label %311, label %209, !dbg !12520, !llvm.loop !12521

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12523

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12524
  %220 = and i32 %219, -268435457, !dbg !12524
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12524
  br label %221, !dbg !12527

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12528
  %223 = load i32, i32* %222, align 4, !dbg !12528
  %224 = icmp eq i32 %223, 0, !dbg !12530
  br i1 %224, label %310, label %225, !dbg !12531

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12532
  %227 = and i32 %226, 12, !dbg !12532
  %228 = icmp eq i32 %227, 8, !dbg !12535
  br i1 %228, label %277, label %229, !dbg !12536

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12537
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12540
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12540
  call void @llvm.dbg.value(metadata i32 %231, metadata !12284, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i32 %231, metadata !12284, metadata !DIExpression()), !dbg !12294
  br i1 %230, label %232, label %269, !dbg !12541

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12542
  %234 = and i32 %233, 33554432, !dbg !12542
  %235 = icmp eq i32 %234, 0, !dbg !12542
  br i1 %235, label %240, label %236, !dbg !12544

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12545
  %238 = sub i32 %237, %231, !dbg !12548
  %239 = icmp ugt i32 %238, 2, !dbg !12549
  br i1 %239, label %311, label %232, !dbg !12550, !llvm.loop !12551

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12553
  %242 = load i32, i32* %241, align 4, !dbg !12553
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12553
  %244 = load i32, i32* %243, align 4, !dbg !12553
  %245 = or i32 %244, %242, !dbg !12553
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12553
  %247 = load i32, i32* %246, align 4, !dbg !12553
  %248 = shl i32 %247, 6, !dbg !12553
  %249 = or i32 %245, %248, !dbg !12553
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12553
  %251 = load i32, i32* %250, align 4, !dbg !12553
  %252 = shl i32 %251, 15, !dbg !12553
  %253 = add i32 %252, -65536, !dbg !12553
  %254 = and i32 %253, -65536, !dbg !12553
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12553
  %256 = load i32, i32* %255, align 4, !dbg !12553
  %257 = shl i32 %256, 24, !dbg !12553
  %258 = or i32 %249, %257, !dbg !12553
  %259 = or i32 %258, %254, !dbg !12553
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12553
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12554
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12555
  call void @llvm.dbg.value(metadata i32 %260, metadata !12284, metadata !DIExpression()), !dbg !12294
  br label %261, !dbg !12556

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12557
  %263 = and i32 %262, 33554432, !dbg !12558
  %264 = icmp eq i32 %263, 0, !dbg !12558
  br i1 %264, label %265, label %310, !dbg !12556

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12559
  %267 = sub i32 %266, %260, !dbg !12562
  %268 = icmp ugt i32 %267, 2, !dbg !12563
  br i1 %268, label %311, label %261, !dbg !12564, !llvm.loop !12565

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12567
  %271 = and i32 %270, 33554432, !dbg !12567
  %272 = icmp eq i32 %271, 0, !dbg !12567
  br i1 %272, label %310, label %273, !dbg !12569

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12570
  %275 = sub i32 %274, %231, !dbg !12573
  %276 = icmp ugt i32 %275, 2, !dbg !12574
  br i1 %276, label %311, label %269, !dbg !12575, !llvm.loop !12576

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12578
  br i1 %278, label %311, label %279, !dbg !12581

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12582
  call void @llvm.dbg.value(metadata i32 %280, metadata !12285, metadata !DIExpression()), !dbg !12294
  %281 = and i32 %280, 4194304, !dbg !12584
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12586
  %283 = load i32, i32* %282, align 4, !dbg !12586
  %284 = icmp eq i32 %281, %283, !dbg !12587
  br i1 %284, label %285, label %311, !dbg !12588

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12589
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12590
  %288 = load i32, i32* %287, align 4, !dbg !12590
  %289 = icmp eq i32 %286, %288, !dbg !12591
  br i1 %289, label %290, label %311, !dbg !12592

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12593
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12594
  %293 = load i32, i32* %292, align 4, !dbg !12594
  %294 = shl i32 %293, 6, !dbg !12595
  %295 = icmp eq i32 %291, %294, !dbg !12596
  br i1 %295, label %296, label %311, !dbg !12597

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12598
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12599
  %299 = load i32, i32* %298, align 4, !dbg !12599
  %300 = shl i32 %299, 15, !dbg !12600
  %301 = add i32 %300, -65536, !dbg !12600
  %302 = and i32 %301, -65536, !dbg !12600
  %303 = icmp eq i32 %297, %302, !dbg !12601
  br i1 %303, label %304, label %311, !dbg !12602

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12603
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12604
  %307 = load i32, i32* %306, align 4, !dbg !12604
  %308 = shl i32 %307, 24, !dbg !12605
  %309 = icmp eq i32 %305, %308, !dbg !12606
  br i1 %309, label %310, label %311, !dbg !12607

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12608

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12294
  ret i32 %312, !dbg !12609
}

; Function Attrs: optsize
declare !dbg !12610 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.rtio_spsc* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12612 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12625, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i32 %1, metadata !12626, metadata !DIExpression()), !dbg !12628
  %3 = icmp eq %struct.rtio_spsc* %0, null, !dbg !12629
  br i1 %3, label %115, label %4, !dbg !12631

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12632
  %6 = and i32 %5, 7, !dbg !12632
  %7 = icmp ult i32 %6, %1, !dbg !12634
  br i1 %7, label %8, label %13, !dbg !12635

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12636
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12636
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12638
  %11 = and i32 %10, 7, !dbg !12638
  %12 = icmp eq i32 %11, %1, !dbg !12640
  br i1 %12, label %13, label %115, !dbg !12641

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12642
  %15 = load i32, i32* %14, align 4, !dbg !12642
  %16 = and i32 %15, 2, !dbg !12644
  %17 = icmp eq i32 %16, 0, !dbg !12645
  br i1 %17, label %39, label %18, !dbg !12646

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12647
  %20 = icmp eq i32 %19, 0, !dbg !12650
  br i1 %20, label %25, label %21, !dbg !12651

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12652
  %23 = or i32 %22, 7168, !dbg !12652
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12652
  %24 = load i32, i32* %14, align 4, !dbg !12654
  br label %25, !dbg !12656

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12654
  %27 = and i32 %26, 8, !dbg !12657
  %28 = icmp eq i32 %27, 0, !dbg !12658
  br i1 %28, label %32, label %29, !dbg !12659

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12660
  %31 = or i32 %30, 57344, !dbg !12660
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12660
  br label %32, !dbg !12662

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12663
  %34 = and i32 %33, -241, !dbg !12663
  %35 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12663
  %36 = load i32, i32* %35, align 4, !dbg !12663
  %37 = or i32 %34, %36, !dbg !12663
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12663
  %38 = load i32, i32* %14, align 4, !dbg !12664
  br label %39, !dbg !12666

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12664
  %41 = and i32 %40, 1, !dbg !12667
  %42 = icmp eq i32 %41, 0, !dbg !12668
  br i1 %42, label %73, label %43, !dbg !12669

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12670
  %45 = load i32, i32* %44, align 4, !dbg !12670
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12673

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12674
  %48 = and i32 %47, 131072, !dbg !12677
  %49 = icmp eq i32 %48, 0, !dbg !12677
  br i1 %49, label %115, label %58, !dbg !12678

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12679
  %52 = and i32 %51, 33554432, !dbg !12683
  %53 = icmp eq i32 %52, 0, !dbg !12683
  br i1 %53, label %115, label %58, !dbg !12684

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12685
  %56 = and i32 %55, 2, !dbg !12688
  %57 = icmp eq i32 %56, 0, !dbg !12688
  br i1 %57, label %115, label %58, !dbg !12689

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12690
  %60 = and i32 %59, -4, !dbg !12690
  %61 = or i32 %60, %45, !dbg !12690
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12690
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12691
  call void @llvm.dbg.value(metadata i32 %62, metadata !12627, metadata !DIExpression()), !dbg !12628
  br label %63, !dbg !12692

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12693
  %65 = and i32 %64, 12, !dbg !12693
  %66 = load i32, i32* %44, align 4, !dbg !12694
  %67 = shl i32 %66, 2, !dbg !12695
  %68 = icmp eq i32 %65, %67, !dbg !12696
  br i1 %68, label %73, label %69, !dbg !12692

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12697
  %71 = sub i32 %70, %62, !dbg !12700
  %72 = icmp ugt i32 %71, 5000, !dbg !12701
  br i1 %72, label %115, label %63, !dbg !12702, !llvm.loop !12703

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12705
  %75 = and i32 %74, 7, !dbg !12705
  %76 = icmp ugt i32 %75, %1, !dbg !12707
  br i1 %76, label %77, label %82, !dbg !12708

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12709
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12709
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12711
  %80 = and i32 %79, 7, !dbg !12711
  %81 = icmp eq i32 %80, %1, !dbg !12713
  br i1 %81, label %82, label %115, !dbg !12714

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12715
  %84 = and i32 %83, 4, !dbg !12717
  %85 = icmp eq i32 %84, 0, !dbg !12718
  br i1 %85, label %93, label %86, !dbg !12719

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12720
  %88 = and i32 %87, -7169, !dbg !12720
  %89 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !12720
  %90 = load i32, i32* %89, align 4, !dbg !12720
  %91 = or i32 %88, %90, !dbg !12720
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12720
  %92 = load i32, i32* %14, align 4, !dbg !12722
  br label %93, !dbg !12724

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12722
  %95 = and i32 %94, 8, !dbg !12725
  %96 = icmp eq i32 %95, 0, !dbg !12726
  br i1 %96, label %104, label %97, !dbg !12727

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12728
  %99 = and i32 %98, -57345, !dbg !12728
  %100 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !12728
  %101 = load i32, i32* %100, align 4, !dbg !12728
  %102 = shl i32 %101, 3, !dbg !12728
  %103 = or i32 %102, %99, !dbg !12728
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12728
  br label %104, !dbg !12730

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12731
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12732
  %107 = lshr i32 %106, 4, !dbg !12733
  %108 = and i32 %107, 15, !dbg !12733
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12734
  %110 = load i8, i8* %109, align 1, !dbg !12734
  %111 = zext i8 %110 to i32, !dbg !12734
  %112 = lshr i32 %105, %111, !dbg !12735
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12736
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12737
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12738
  br label %115, !dbg !12739

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12628
  ret i32 %116, !dbg !12740
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12741 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12743, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 0, metadata !12744, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 0, metadata !12745, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 0, metadata !12746, metadata !DIExpression()), !dbg !12747
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12748
  %2 = and i32 %1, 12, !dbg !12749
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12750

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12746, metadata !DIExpression()), !dbg !12747
  br label %29, !dbg !12751

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12754
  %6 = and i32 %5, 63, !dbg !12756
  call void @llvm.dbg.value(metadata i32 %6, metadata !12743, metadata !DIExpression()), !dbg !12747
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12757
  %8 = and i32 %7, 4194304, !dbg !12757
  %9 = icmp eq i32 %8, 0, !dbg !12759
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12760
  %11 = lshr i32 %10, 6, !dbg !12760
  %12 = and i32 %11, 511, !dbg !12760
  br i1 %9, label %16, label %13, !dbg !12761

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !12762
  %15 = udiv i32 %14, %6, !dbg !12764
  call void @llvm.dbg.value(metadata i32 %15, metadata !12744, metadata !DIExpression()), !dbg !12747
  br label %22, !dbg !12765

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !12766
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !12768
  %19 = zext i32 %6 to i64, !dbg !12769
  %20 = udiv i64 %18, %19, !dbg !12770
  %21 = trunc i64 %20 to i32, !dbg !12771
  call void @llvm.dbg.value(metadata i32 %21, metadata !12744, metadata !DIExpression()), !dbg !12747
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !12760
  call void @llvm.dbg.value(metadata i32 %23, metadata !12744, metadata !DIExpression()), !dbg !12747
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12772
  %25 = lshr i32 %24, 15, !dbg !12773
  %26 = and i32 %25, 6, !dbg !12773
  %27 = add nuw nsw i32 %26, 2, !dbg !12773
  call void @llvm.dbg.value(metadata i32 %27, metadata !12745, metadata !DIExpression()), !dbg !12747
  %28 = udiv i32 %23, %27, !dbg !12774
  call void @llvm.dbg.value(metadata i32 %28, metadata !12746, metadata !DIExpression()), !dbg !12747
  br label %29, !dbg !12775

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !12776
  call void @llvm.dbg.value(metadata i32 %30, metadata !12746, metadata !DIExpression()), !dbg !12747
  ret i32 %30, !dbg !12777
}

; Function Attrs: optsize
declare !dbg !12778 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12781 {
  %4 = alloca %struct.rtio_spsc, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12785, metadata !DIExpression()), !dbg !12805
  call void @llvm.dbg.value(metadata i32 %1, metadata !12786, metadata !DIExpression()), !dbg !12805
  call void @llvm.dbg.value(metadata i32 %2, metadata !12787, metadata !DIExpression()), !dbg !12805
  %7 = bitcast %struct.rtio_spsc* %4 to i8*, !dbg !12806
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12806
  call void @llvm.dbg.declare(metadata %struct.rtio_spsc* %4, metadata !12788, metadata !DIExpression()), !dbg !12807
  %8 = icmp eq i32 %0, 0, !dbg !12808
  br i1 %8, label %9, label %23, !dbg !12809

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12810
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12810
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12798, metadata !DIExpression()), !dbg !12810
  store volatile i32 0, i32* %5, align 4, !dbg !12810
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12810
  %12 = or i32 %11, 1, !dbg !12810
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12810
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12810
  %14 = and i32 %13, 1, !dbg !12810
  store volatile i32 %14, i32* %5, align 4, !dbg !12810
  %15 = load volatile i32, i32* %5, align 4, !dbg !12810
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12811
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12812
  store i32 256, i32* %16, align 4, !dbg !12813
  %17 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12814
  store i32 2, i32* %17, align 4, !dbg !12815
  %18 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12816
  store i32 3, i32* %18, align 4, !dbg !12817
  %19 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12818
  store i32 0, i32* %19, align 4, !dbg !12819
  %20 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12820
  store i32 0, i32* %20, align 4, !dbg !12821
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12822
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12823
  %22 = and i32 %21, -123731969, !dbg !12823
  br label %38, !dbg !12824

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12825
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12825
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12802, metadata !DIExpression()), !dbg !12825
  store volatile i32 0, i32* %6, align 4, !dbg !12825
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12825
  %26 = or i32 %25, 4, !dbg !12825
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12825
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12825
  %28 = and i32 %27, 4, !dbg !12825
  store volatile i32 %28, i32* %6, align 4, !dbg !12825
  %29 = load volatile i32, i32* %6, align 4, !dbg !12825
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12826
  %30 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12827
  store i32 512, i32* %30, align 4, !dbg !12828
  %31 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12829
  store i32 2, i32* %31, align 4, !dbg !12830
  %32 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12831
  store i32 3, i32* %32, align 4, !dbg !12832
  %33 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12833
  store i32 0, i32* %33, align 4, !dbg !12834
  %34 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12835
  store i32 0, i32* %34, align 4, !dbg !12836
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12837
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12838
  %36 = and i32 %35, 134217727, !dbg !12838
  %37 = shl i32 %2, 3, !dbg !12838
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12839
  %42 = or i32 %41, %40, !dbg !12839
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12839
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12840
  ret void, !dbg !12840
}

; Function Attrs: optsize
declare !dbg !12841 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.rtio_spsc* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12845 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12846
  ret void, !dbg !12847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12848 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12849
  ret void, !dbg !12850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !12851 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12852
  ret i32 %1, !dbg !12853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !12854 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12855
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12856
  %3 = lshr i32 %2, 10, !dbg !12857
  %4 = and i32 %3, 7, !dbg !12857
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12858
  %6 = load i8, i8* %5, align 1, !dbg !12858
  %7 = zext i8 %6 to i32, !dbg !12858
  %8 = lshr i32 %1, %7, !dbg !12859
  ret i32 %8, !dbg !12860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !12861 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12862
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12863
  %3 = lshr i32 %2, 13, !dbg !12864
  %4 = and i32 %3, 7, !dbg !12864
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12865
  %6 = load i8, i8* %5, align 1, !dbg !12865
  %7 = zext i8 %6 to i32, !dbg !12865
  %8 = lshr i32 %1, %7, !dbg !12866
  ret i32 %8, !dbg !12867
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12868 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12872, metadata !DIExpression()), !dbg !12873
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12874
  store i32 15, i32* %2, align 4, !dbg !12875
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12876
  %4 = and i32 %3, 262144, !dbg !12878
  %5 = icmp eq i32 %4, 0, !dbg !12879
  br i1 %5, label %8, label %6, !dbg !12880

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12881
  store i32 327680, i32* %7, align 4, !dbg !12883
  br label %15, !dbg !12884

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12885
  %10 = and i32 %9, 65536, !dbg !12887
  %11 = icmp eq i32 %10, 0, !dbg !12888
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12889
  br i1 %11, label %14, label %13, !dbg !12890

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12891
  br label %15, !dbg !12893

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12894
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12896
  %17 = and i32 %16, 1, !dbg !12898
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12899
  store i32 %17, i32* %18, align 4, !dbg !12901
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12902
  %20 = lshr i32 %19, 3, !dbg !12903
  %21 = and i32 %20, 31, !dbg !12903
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12904
  store i32 %21, i32* %22, align 4, !dbg !12905
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12906
  %24 = and i32 %23, 4, !dbg !12908
  %25 = icmp eq i32 %24, 0, !dbg !12909
  br i1 %25, label %28, label %26, !dbg !12910

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12911
  store i32 5, i32* %27, align 4, !dbg !12913
  br label %35, !dbg !12914

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12915
  %30 = and i32 %29, 1, !dbg !12917
  %31 = icmp eq i32 %30, 0, !dbg !12918
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12919
  br i1 %31, label %34, label %33, !dbg !12920

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12921
  br label %35, !dbg !12923

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12924
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12926
  %37 = and i32 %36, 1, !dbg !12928
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12929
  store i32 %37, i32* %38, align 4, !dbg !12931
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12932
  %40 = and i32 %39, 16777216, !dbg !12934
  %41 = icmp eq i32 %40, 0, !dbg !12935
  %42 = select i1 %41, i32 1, i32 2, !dbg !12936
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12937
  store i32 %42, i32* %43, align 4, !dbg !12939
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12940
  %45 = and i32 %44, 4194304, !dbg !12941
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12942
  store i32 %45, i32* %46, align 4, !dbg !12943
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12944
  %48 = and i32 %47, 63, !dbg !12945
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12946
  store i32 %48, i32* %49, align 4, !dbg !12947
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12948
  %51 = lshr i32 %50, 6, !dbg !12949
  %52 = and i32 %51, 511, !dbg !12949
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12950
  store i32 %52, i32* %53, align 4, !dbg !12951
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12952
  %55 = shl i32 %54, 1, !dbg !12953
  %56 = and i32 %55, 393216, !dbg !12953
  %57 = add nuw nsw i32 %56, 131072, !dbg !12953
  %58 = lshr exact i32 %57, 16, !dbg !12954
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12955
  store i32 %58, i32* %59, align 4, !dbg !12956
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12957
  %61 = lshr i32 %60, 24, !dbg !12958
  %62 = and i32 %61, 15, !dbg !12958
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12959
  store i32 %62, i32* %63, align 4, !dbg !12960
  ret void, !dbg !12961
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.rtio_spsc* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !12962 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12966, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i32* %1, metadata !12967, metadata !DIExpression()), !dbg !12968
  %3 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12969
  store i32 15, i32* %3, align 4, !dbg !12970
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12971
  %5 = and i32 %4, 3, !dbg !12972
  %6 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12973
  store i32 %5, i32* %6, align 4, !dbg !12974
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12975
  %8 = and i32 %7, 240, !dbg !12976
  %9 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12977
  store i32 %8, i32* %9, align 4, !dbg !12978
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12979
  %11 = and i32 %10, 7168, !dbg !12980
  %12 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !12981
  store i32 %11, i32* %12, align 4, !dbg !12982
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12983
  %14 = lshr i32 %13, 3, !dbg !12984
  %15 = and i32 %14, 7168, !dbg !12984
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !12985
  store i32 %15, i32* %16, align 4, !dbg !12986
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12987
  %18 = and i32 %17, 7, !dbg !12988
  store i32 %18, i32* %1, align 4, !dbg !12989
  ret void, !dbg !12990
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12991 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12992
  %2 = and i32 %1, 128, !dbg !12992
  %3 = icmp eq i32 %2, 0, !dbg !12992
  br i1 %3, label %5, label %4, !dbg !12994

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12995
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12997
  br label %5, !dbg !12998

5:                                                ; preds = %4, %0
  ret void, !dbg !12999
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13000 {
  ret void, !dbg !13001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13005, metadata !DIExpression()), !dbg !13006
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13007
  ret void, !dbg !13008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13012, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i32 1000, metadata !13013, metadata !DIExpression()), !dbg !13014
  %2 = udiv i32 %0, 1000, !dbg !13015
  %3 = add nsw i32 %2, -1, !dbg !13016
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13017
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13018
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !13021 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13023, metadata !DIExpression()), !dbg !13025
  %3 = bitcast i32* %2 to i8*, !dbg !13026
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13026
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13024, metadata !DIExpression()), !dbg !13027
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13028
  store volatile i32 %4, i32* %2, align 4, !dbg !13027
  %5 = load volatile i32, i32* %2, align 4, !dbg !13029
  %6 = icmp eq i32 %0, -1, !dbg !13030
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13023, metadata !DIExpression()), !dbg !13025
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %8, metadata !13023, metadata !DIExpression()), !dbg !13025
  br label %9, !dbg !13032

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13023, metadata !DIExpression()), !dbg !13025
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13033
  call void @llvm.dbg.value(metadata i32 undef, metadata !13023, metadata !DIExpression()), !dbg !13025
  %12 = shl i32 %11, 15, !dbg !13025
  %13 = ashr i32 %12, 31, !dbg !13025
  %14 = add i32 %13, %10, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %14, metadata !13023, metadata !DIExpression()), !dbg !13025
  %15 = icmp eq i32 %14, 0, !dbg !13032
  br i1 %15, label %16, label %9, !dbg !13032

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13036
  ret void, !dbg !13036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !13037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13039, metadata !DIExpression()), !dbg !13040
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13041
  ret void, !dbg !13042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !13043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13048, metadata !DIExpression()), !dbg !13053
  call void @llvm.dbg.value(metadata i32 0, metadata !13051, metadata !DIExpression()), !dbg !13053
  call void @llvm.dbg.value(metadata i32 0, metadata !13052, metadata !DIExpression()), !dbg !13053
  %2 = icmp eq i32 %0, 0, !dbg !13054
  br i1 %2, label %50, label %3, !dbg !13056

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13057
  %5 = icmp eq i32 %4, 49152, !dbg !13060
  br i1 %5, label %6, label %15, !dbg !13061

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13051, metadata !DIExpression()), !dbg !13053
  %7 = add i32 %0, -64000001, !dbg !13062
  %8 = icmp ult i32 %7, 26000000, !dbg !13062
  br i1 %8, label %15, label %9, !dbg !13062

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !13065
  %11 = select i1 %10, i32 0, i32 3, !dbg !13067
  call void @llvm.dbg.value(metadata i32 %11, metadata !13051, metadata !DIExpression()), !dbg !13053
  %12 = add i32 %0, -30000001, !dbg !13068
  %13 = icmp ult i32 %12, 60000000, !dbg !13068
  %14 = select i1 %13, i32 1, i32 %11, !dbg !13068
  call void @llvm.dbg.value(metadata i32 %14, metadata !13051, metadata !DIExpression()), !dbg !13053
  br label %15, !dbg !13068

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !13053
  call void @llvm.dbg.value(metadata i32 %16, metadata !13051, metadata !DIExpression()), !dbg !13053
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13071
  %18 = icmp eq i32 %17, 32768, !dbg !13073
  br i1 %18, label %19, label %27, !dbg !13074

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !13075
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !13078
  br i1 %22, label %27, label %23, !dbg !13078

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !13079
  %25 = and i1 %24, %21, !dbg !13082
  %26 = select i1 %25, i32 1, i32 %16, !dbg !13082
  call void @llvm.dbg.value(metadata i32 %26, metadata !13051, metadata !DIExpression()), !dbg !13053
  br label %27, !dbg !13082

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !13083
  call void @llvm.dbg.value(metadata i32 %28, metadata !13051, metadata !DIExpression()), !dbg !13053
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13084
  %30 = icmp eq i32 %29, 16384, !dbg !13086
  br i1 %30, label %31, label %39, !dbg !13087

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !13088
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !13091
  br i1 %34, label %39, label %35, !dbg !13091

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !13092
  %37 = select i1 %36, i1 %33, i1 false, !dbg !13095
  %38 = select i1 %37, i32 1, i32 %28, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %38, metadata !13051, metadata !DIExpression()), !dbg !13053
  br label %39, !dbg !13095

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !13083
  call void @llvm.dbg.value(metadata i32 %40, metadata !13051, metadata !DIExpression()), !dbg !13053
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !13096
  call void @llvm.dbg.value(metadata i32 2, metadata !13049, metadata !DIExpression()), !dbg !13053
  br label %41, !dbg !13097

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !13083
  call void @llvm.dbg.value(metadata i32 %42, metadata !13049, metadata !DIExpression()), !dbg !13053
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13098
  call void @llvm.dbg.value(metadata i32 %43, metadata !13050, metadata !DIExpression()), !dbg !13053
  %44 = add nsw i32 %42, -1, !dbg !13100
  call void @llvm.dbg.value(metadata i32 %44, metadata !13049, metadata !DIExpression()), !dbg !13053
  %45 = icmp ne i32 %43, %40, !dbg !13101
  %46 = icmp ne i32 %44, 0, !dbg !13102
  %47 = select i1 %45, i1 %46, i1 false, !dbg !13102
  br i1 %47, label %41, label %48, !dbg !13103, !llvm.loop !13104

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !13106
  call void @llvm.dbg.value(metadata i32 %51, metadata !13052, metadata !DIExpression()), !dbg !13053
  ret i32 %51, !dbg !13107
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !13108 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13110
  %2 = and i32 %1, 49152, !dbg !13110
  ret i32 %2, !dbg !13111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !13112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13114, metadata !DIExpression()), !dbg !13115
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13116
  %3 = and i32 %2, -8, !dbg !13116
  %4 = or i32 %3, %0, !dbg !13116
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13116
  ret void, !dbg !13117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !13118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13119
  %2 = and i32 %1, 7, !dbg !13119
  ret i32 %2, !dbg !13120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !13121 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13139, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13140, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata i32 0, metadata !13141, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata i32 0, metadata !13142, metadata !DIExpression()), !dbg !13143
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13144
  %4 = icmp eq i32 %3, 0, !dbg !13146
  br i1 %4, label %5, label %21, !dbg !13147

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !13148
  call void @llvm.dbg.value(metadata i32 %6, metadata !13142, metadata !DIExpression()), !dbg !13143
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.161() #24, !dbg !13150
  %8 = icmp eq i32 %7, 1, !dbg !13152
  br i1 %8, label %13, label %9, !dbg !13153

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.162() #24, !dbg !13154
  br label %10, !dbg !13156

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.161() #24, !dbg !13157
  %12 = icmp eq i32 %11, 1, !dbg !13158
  br i1 %12, label %13, label %10, !dbg !13156, !llvm.loop !13159

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13161
  %15 = load i32, i32* %14, align 4, !dbg !13161
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13162
  %17 = load i32, i32* %16, align 4, !dbg !13162
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13163
  %19 = load i32, i32* %18, align 4, !dbg !13163
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.163(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !13164
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !13165
  call void @llvm.dbg.value(metadata i32 %20, metadata !13141, metadata !DIExpression()), !dbg !13143
  br label %21, !dbg !13166

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13167
  call void @llvm.dbg.value(metadata i32 %22, metadata !13141, metadata !DIExpression()), !dbg !13143
  ret i32 %22, !dbg !13168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !13169 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13173, metadata !DIExpression()), !dbg !13174
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.165() #24, !dbg !13175
  %2 = icmp ne i32 %1, 0, !dbg !13177
  call void @llvm.dbg.value(metadata i1 %2, metadata !13173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13174
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !13178
  %4 = icmp ne i32 %3, 0, !dbg !13180
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13181
  %6 = zext i1 %5 to i32, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %6, metadata !13173, metadata !DIExpression()), !dbg !13174
  ret i32 %6, !dbg !13182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !13183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13187, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13188, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata i32 0, metadata !13189, metadata !DIExpression()), !dbg !13190
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13191
  %4 = load i32, i32* %3, align 4, !dbg !13191
  %5 = and i32 %4, 63, !dbg !13192
  %6 = udiv i32 %0, %5, !dbg !13193
  call void @llvm.dbg.value(metadata i32 %6, metadata !13189, metadata !DIExpression()), !dbg !13190
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13194
  %8 = load i32, i32* %7, align 4, !dbg !13194
  %9 = and i32 %8, 511, !dbg !13195
  %10 = mul i32 %9, %6, !dbg !13196
  call void @llvm.dbg.value(metadata i32 %10, metadata !13189, metadata !DIExpression()), !dbg !13190
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13197
  %12 = load i32, i32* %11, align 4, !dbg !13197
  %13 = lshr i32 %12, 15, !dbg !13198
  %14 = and i32 %13, 131070, !dbg !13198
  %15 = add nuw nsw i32 %14, 2, !dbg !13198
  %16 = udiv i32 %10, %15, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %16, metadata !13189, metadata !DIExpression()), !dbg !13190
  ret i32 %16, !dbg !13200
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.161() unnamed_addr #5 !dbg !13201 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13202
  %2 = lshr i32 %1, 1, !dbg !13203
  %3 = and i32 %2, 1, !dbg !13203
  ret i32 %3, !dbg !13204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.162() unnamed_addr #15 !dbg !13205 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13206
  %2 = or i32 %1, 1, !dbg !13206
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13206
  ret void, !dbg !13207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.163(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13210, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 %1, metadata !13211, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 %2, metadata !13212, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 %3, metadata !13213, metadata !DIExpression()), !dbg !13214
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13215
  %6 = and i32 %5, -4227072, !dbg !13215
  %7 = or i32 %1, %0, !dbg !13215
  %8 = shl i32 %2, 6, !dbg !13215
  %9 = or i32 %7, %8, !dbg !13215
  %10 = or i32 %9, %6, !dbg !13215
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13215
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13216
  %12 = and i32 %11, -196609, !dbg !13216
  %13 = or i32 %12, %3, !dbg !13216
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13216
  ret void, !dbg !13217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13222, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13223, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.value(metadata i32 0, metadata !13224, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.value(metadata i32 0, metadata !13225, metadata !DIExpression()), !dbg !13226
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13227
  %4 = load i32, i32* %3, align 4, !dbg !13227
  %5 = lshr i32 %4, 4, !dbg !13227
  %6 = and i32 %5, 15, !dbg !13227
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13227
  %8 = load i8, i8* %7, align 1, !dbg !13227
  %9 = zext i8 %8 to i32, !dbg !13227
  %10 = lshr i32 %0, %9, !dbg !13227
  call void @llvm.dbg.value(metadata i32 %10, metadata !13225, metadata !DIExpression()), !dbg !13226
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13228
  %12 = icmp ult i32 %11, %10, !dbg !13230
  br i1 %12, label %13, label %16, !dbg !13231

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13232
  call void @llvm.dbg.value(metadata i32 %14, metadata !13224, metadata !DIExpression()), !dbg !13226
  %15 = icmp eq i32 %14, 0, !dbg !13234
  br i1 %15, label %16, label %30, !dbg !13236

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.164() #24, !dbg !13237
  br label %17, !dbg !13239

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.165() #24, !dbg !13240
  %19 = icmp eq i32 %18, 1, !dbg !13241
  br i1 %19, label %20, label %17, !dbg !13239, !llvm.loop !13242

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13244
  tail call fastcc void @LL_RCC_SetAHBPrescaler.166(i32 noundef %21) #24, !dbg !13245
  tail call fastcc void @LL_RCC_SetSysClkSource.167() #24, !dbg !13246
  br label %22, !dbg !13247

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.168() #24, !dbg !13248
  %24 = icmp eq i32 %23, 8, !dbg !13249
  br i1 %24, label %25, label %22, !dbg !13247, !llvm.loop !13250

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13252
  %27 = load i32, i32* %26, align 4, !dbg !13252
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.169(i32 noundef %27) #24, !dbg !13253
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13254
  %29 = load i32, i32* %28, align 4, !dbg !13254
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.170(i32 noundef %29) #24, !dbg !13255
  br label %30, !dbg !13256

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13257
  %33 = icmp ugt i32 %32, %10, !dbg !13259
  br i1 %33, label %34, label %36, !dbg !13260

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13261
  call void @llvm.dbg.value(metadata i32 %35, metadata !13224, metadata !DIExpression()), !dbg !13226
  br label %36, !dbg !13263

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13226
  call void @llvm.dbg.value(metadata i32 %37, metadata !13224, metadata !DIExpression()), !dbg !13226
  %38 = icmp eq i32 %37, 0, !dbg !13264
  br i1 %38, label %39, label %40, !dbg !13266

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13267
  br label %40, !dbg !13269

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13270
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.164() unnamed_addr #15 !dbg !13271 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13272
  %2 = or i32 %1, 16777216, !dbg !13272
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13272
  ret void, !dbg !13273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.165() unnamed_addr #5 !dbg !13274 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13275
  %2 = lshr i32 %1, 25, !dbg !13276
  %3 = and i32 %2, 1, !dbg !13276
  ret i32 %3, !dbg !13277
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.166(i32 noundef %0) unnamed_addr #15 !dbg !13278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13280, metadata !DIExpression()), !dbg !13281
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13282
  %3 = and i32 %2, -241, !dbg !13282
  %4 = or i32 %3, %0, !dbg !13282
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13282
  ret void, !dbg !13283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.167() unnamed_addr #15 !dbg !13284 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13286, metadata !DIExpression()), !dbg !13287
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13288
  %2 = and i32 %1, -4, !dbg !13288
  %3 = or i32 %2, 2, !dbg !13288
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13288
  ret void, !dbg !13289
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.168() unnamed_addr #5 !dbg !13290 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13291
  %2 = and i32 %1, 12, !dbg !13291
  ret i32 %2, !dbg !13292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.169(i32 noundef %0) unnamed_addr #15 !dbg !13293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13295, metadata !DIExpression()), !dbg !13296
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13297
  %3 = and i32 %2, -7169, !dbg !13297
  %4 = or i32 %3, %0, !dbg !13297
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13297
  ret void, !dbg !13298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.170(i32 noundef %0) unnamed_addr #15 !dbg !13299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13301, metadata !DIExpression()), !dbg !13302
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13303
  %3 = and i32 %2, -57345, !dbg !13303
  %4 = or i32 %3, %0, !dbg !13303
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13303
  ret void, !dbg !13304
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !13305 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13306
  %2 = lshr i32 %1, 27, !dbg !13307
  %3 = and i32 %2, 1, !dbg !13307
  ret i32 %3, !dbg !13308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13313, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i32 %1, metadata !13314, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13315, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13316, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i32 0, metadata !13317, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i32 0, metadata !13318, metadata !DIExpression()), !dbg !13319
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13320
  %6 = icmp eq i32 %5, 0, !dbg !13322
  br i1 %6, label %7, label %27, !dbg !13323

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %8, metadata !13318, metadata !DIExpression()), !dbg !13319
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !13326
  %10 = icmp eq i32 %9, 1, !dbg !13328
  br i1 %10, label %19, label %11, !dbg !13329

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13330
  br i1 %12, label %13, label %14, !dbg !13333

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13334
  br label %15, !dbg !13336

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !13337
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !13339
  br label %16, !dbg !13340

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !13341
  %18 = icmp eq i32 %17, 1, !dbg !13342
  br i1 %18, label %19, label %16, !dbg !13340, !llvm.loop !13343

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13345
  %21 = load i32, i32* %20, align 4, !dbg !13345
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13346
  %23 = load i32, i32* %22, align 4, !dbg !13346
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13347
  %25 = load i32, i32* %24, align 4, !dbg !13347
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.163(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !13348
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !13349
  call void @llvm.dbg.value(metadata i32 %26, metadata !13317, metadata !DIExpression()), !dbg !13319
  br label %27, !dbg !13350

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13351
  call void @llvm.dbg.value(metadata i32 %28, metadata !13317, metadata !DIExpression()), !dbg !13319
  ret i32 %28, !dbg !13352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !13353 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13354
  %2 = lshr i32 %1, 17, !dbg !13355
  %3 = and i32 %2, 1, !dbg !13355
  ret i32 %3, !dbg !13356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13357 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13358
  %2 = or i32 %1, 262144, !dbg !13358
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13358
  ret void, !dbg !13359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !13360 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13361
  %2 = and i32 %1, -262145, !dbg !13361
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13361
  ret void, !dbg !13362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !13363 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13364
  %2 = or i32 %1, 65536, !dbg !13364
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13364
  ret void, !dbg !13365
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13366 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13369, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !13369, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !13369, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13385
  ret void, !dbg !13386
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13387 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13391, metadata !DIExpression()), !dbg !13393
  %2 = icmp eq i8* %0, null, !dbg !13394
  br i1 %2, label %29, label %3, !dbg !13396

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13397
  %5 = icmp eq i8 %4, 0, !dbg !13398
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13399
  br i1 %6, label %29, label %8, !dbg !13399

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13392, metadata !DIExpression()), !dbg !13393
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13400

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13392, metadata !DIExpression()), !dbg !13393
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13402
  br i1 %10, label %11, label %15, !dbg !13407

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13408
  %13 = load i8*, i8** %12, align 4, !dbg !13408
  %14 = icmp eq i8* %13, %0, !dbg !13409
  br i1 %14, label %29, label %15, !dbg !13410

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13411
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13392, metadata !DIExpression()), !dbg !13393
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13412
  br i1 %17, label %7, label %8, !dbg !13413, !llvm.loop !13414

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13392, metadata !DIExpression()), !dbg !13393
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13416
  br i1 %20, label %21, label %26, !dbg !13420

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13421
  %23 = load i8*, i8** %22, align 4, !dbg !13421
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13422
  %25 = icmp eq i32 %24, 0, !dbg !13423
  br i1 %25, label %29, label %26, !dbg !13424

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13425
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13392, metadata !DIExpression()), !dbg !13393
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13426
  br i1 %28, label %29, label %18, !dbg !13400, !llvm.loop !13427

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13393
  ret %struct.device* %30, !dbg !13429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !13430 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13434, metadata !DIExpression()), !dbg !13435
  %2 = icmp eq %struct.device* %0, null, !dbg !13436
  br i1 %2, label %14, label %3, !dbg !13438

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13439
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13439
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13440
  %7 = load i8, i8* %6, align 1, !dbg !13440
  %8 = and i8 %7, 1, !dbg !13440
  %9 = icmp eq i8 %8, 0, !dbg !13440
  br i1 %9, label %14, label %10, !dbg !13441

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13442
  %12 = load i8, i8* %11, align 1, !dbg !13442
  %13 = icmp eq i8 %12, 0, !dbg !13443
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13435
  ret i1 %15, !dbg !13444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !13445 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13450, metadata !DIExpression()), !dbg !13451
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13452
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13454 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13462, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13463, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i8* %2, metadata !13464, metadata !DIExpression()), !dbg !13467
  %5 = bitcast i32* %4 to i8*, !dbg !13468
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13468
  call void @llvm.dbg.value(metadata i32 0, metadata !13465, metadata !DIExpression()), !dbg !13467
  store i32 0, i32* %4, align 4, !dbg !13469
  call void @llvm.dbg.value(metadata i32* %4, metadata !13465, metadata !DIExpression(DW_OP_deref)), !dbg !13467
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13470
  call void @llvm.dbg.value(metadata i16* %6, metadata !13466, metadata !DIExpression()), !dbg !13467
  %7 = load i32, i32* %4, align 4, !dbg !13471
  call void @llvm.dbg.value(metadata i32 %7, metadata !13465, metadata !DIExpression()), !dbg !13467
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13472
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13473
  ret i32 %8, !dbg !13474
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13479, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i32* %1, metadata !13480, metadata !DIExpression()), !dbg !13485
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13486
  %4 = load i16*, i16** %3, align 4, !dbg !13486
  call void @llvm.dbg.value(metadata i16* %4, metadata !13481, metadata !DIExpression()), !dbg !13485
  %5 = icmp eq i16* %4, null, !dbg !13487
  br i1 %5, label %14, label %6, !dbg !13488

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13489
  call void @llvm.dbg.value(metadata i32 %7, metadata !13482, metadata !DIExpression()), !dbg !13489
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13490
  %9 = load i16, i16* %8, align 2, !dbg !13490
  %10 = add i16 %9, -32767, !dbg !13491
  %11 = icmp ult i16 %10, 2, !dbg !13491
  %12 = add i32 %7, 1, !dbg !13492
  call void @llvm.dbg.value(metadata i32 %12, metadata !13482, metadata !DIExpression()), !dbg !13489
  br i1 %11, label %13, label %6, !dbg !13491, !llvm.loop !13494

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13497
  br label %14, !dbg !13498

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13500 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13504, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i32 %1, metadata !13505, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13506, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i8* %3, metadata !13507, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i32 0, metadata !13508, metadata !DIExpression()), !dbg !13516
  %5 = icmp eq i32 %1, 0, !dbg !13517
  br i1 %5, label %16, label %8, !dbg !13518

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13508, metadata !DIExpression()), !dbg !13516
  %7 = icmp eq i32 %15, %1, !dbg !13517
  br i1 %7, label %16, label %8, !dbg !13518, !llvm.loop !13519

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13508, metadata !DIExpression()), !dbg !13516
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13521
  %11 = load i16, i16* %10, align 2, !dbg !13521
  call void @llvm.dbg.value(metadata i16 %11, metadata !13510, metadata !DIExpression()), !dbg !13522
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13523
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13513, metadata !DIExpression()), !dbg !13522
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13524
  call void @llvm.dbg.value(metadata i32 %13, metadata !13514, metadata !DIExpression()), !dbg !13522
  %14 = icmp slt i32 %13, 0, !dbg !13525
  %15 = add nuw i32 %9, 1, !dbg !13527
  call void @llvm.dbg.value(metadata i32 %15, metadata !13508, metadata !DIExpression()), !dbg !13516
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13529 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13533, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13534, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13535, metadata !DIExpression()), !dbg !13536
  %2 = sext i16 %0 to i32, !dbg !13537
  %3 = icmp slt i16 %0, 1, !dbg !13539
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13540
  %6 = add nsw i32 %2, -1, !dbg !13540
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13540
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13540
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13534, metadata !DIExpression()), !dbg !13536
  ret %struct.device* %8, !dbg !13541
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13542 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13544, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13545, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.value(metadata i8* %2, metadata !13546, metadata !DIExpression()), !dbg !13549
  %5 = bitcast i32* %4 to i8*, !dbg !13550
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13550
  call void @llvm.dbg.value(metadata i32 0, metadata !13547, metadata !DIExpression()), !dbg !13549
  store i32 0, i32* %4, align 4, !dbg !13551
  call void @llvm.dbg.value(metadata i32* %4, metadata !13547, metadata !DIExpression(DW_OP_deref)), !dbg !13549
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13552
  call void @llvm.dbg.value(metadata i16* %6, metadata !13548, metadata !DIExpression()), !dbg !13549
  %7 = load i32, i32* %4, align 4, !dbg !13553
  call void @llvm.dbg.value(metadata i32 %7, metadata !13547, metadata !DIExpression()), !dbg !13549
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13554
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13555
  ret i32 %8, !dbg !13556
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13559, metadata !DIExpression()), !dbg !13564
  call void @llvm.dbg.value(metadata i32* %1, metadata !13560, metadata !DIExpression()), !dbg !13564
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13565
  %4 = load i16*, i16** %3, align 4, !dbg !13565
  call void @llvm.dbg.value(metadata i16* %4, metadata !13561, metadata !DIExpression()), !dbg !13564
  call void @llvm.dbg.value(metadata i32 0, metadata !13562, metadata !DIExpression()), !dbg !13564
  call void @llvm.dbg.value(metadata i32 0, metadata !13563, metadata !DIExpression()), !dbg !13564
  %5 = icmp eq i16* %4, null, !dbg !13566
  br i1 %5, label %22, label %6, !dbg !13568

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13562, metadata !DIExpression()), !dbg !13564
  call void @llvm.dbg.value(metadata i16* %8, metadata !13561, metadata !DIExpression()), !dbg !13564
  %9 = load i16, i16* %8, align 2, !dbg !13569
  %10 = icmp eq i16 %9, -32768, !dbg !13573
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()), !dbg !13564
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13574
  call void @llvm.dbg.value(metadata i16* %11, metadata !13561, metadata !DIExpression()), !dbg !13564
  %12 = zext i1 %10 to i32, !dbg !13575
  %13 = add i32 %7, %12, !dbg !13575
  call void @llvm.dbg.value(metadata i32 %13, metadata !13562, metadata !DIExpression()), !dbg !13564
  %14 = icmp eq i32 %13, 2, !dbg !13576
  br i1 %14, label %15, label %6, !dbg !13577

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13564
  call void @llvm.dbg.value(metadata i32 %16, metadata !13563, metadata !DIExpression()), !dbg !13564
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13578
  %18 = load i16, i16* %17, align 2, !dbg !13578
  %19 = icmp eq i16 %18, 32767, !dbg !13579
  %20 = add i32 %16, 1, !dbg !13580
  call void @llvm.dbg.value(metadata i32 %20, metadata !13563, metadata !DIExpression()), !dbg !13564
  br i1 %19, label %21, label %15, !dbg !13582, !llvm.loop !13583

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13585
  br label %22, !dbg !13586

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13587
  call void @llvm.dbg.value(metadata i16* %23, metadata !13561, metadata !DIExpression()), !dbg !13564
  ret i16* %23, !dbg !13588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !13589 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13592
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13593
  ret i32* %2, !dbg !13594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13595 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13743, metadata !DIExpression()), !dbg !13746
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13744, metadata !DIExpression()), !dbg !13746
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13745, metadata !DIExpression()), !dbg !13746
  ret void, !dbg !13747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13752, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 %1, metadata !13753, metadata !DIExpression()), !dbg !13754
  ret void, !dbg !13755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13760, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.value(metadata i32 %1, metadata !13761, metadata !DIExpression()), !dbg !13762
  ret void, !dbg !13763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13768, metadata !DIExpression()), !dbg !13770
  call void @llvm.dbg.value(metadata i8* %1, metadata !13769, metadata !DIExpression()), !dbg !13770
  ret i32 -134, !dbg !13771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13776, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i8* %1, metadata !13777, metadata !DIExpression()), !dbg !13778
  ret i32 -134, !dbg !13779
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13783, metadata !DIExpression()), !dbg !13784
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13785, !srcloc !13791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13788, metadata !DIExpression()) #23, !dbg !13792
  call void @llvm.dbg.value(metadata i32 undef, metadata !13789, metadata !DIExpression()) #23, !dbg !13792
  br label %3, !dbg !13793

3:                                                ; preds = %3, %1
  br label %3, !dbg !13794, !llvm.loop !13797
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13804, metadata !DIExpression()), !dbg !13806
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13805, metadata !DIExpression()), !dbg !13806
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.175, i32 0, i32 0), i32 noundef 69) #25, !dbg !13807
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13812
  unreachable, !dbg !13812
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13815, metadata !DIExpression()), !dbg !13816
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13817
  unreachable, !dbg !13817
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13820, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13821, metadata !DIExpression()), !dbg !13824
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13825, !srcloc !13791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13788, metadata !DIExpression()) #23, !dbg !13827
  call void @llvm.dbg.value(metadata i32 undef, metadata !13789, metadata !DIExpression()) #23, !dbg !13827
  call void @llvm.dbg.value(metadata i32 undef, metadata !13822, metadata !DIExpression()), !dbg !13824
  %4 = tail call fastcc %struct.k_thread* @k_current_get.178() #26, !dbg !13828
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13823, metadata !DIExpression()), !dbg !13824
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13829
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !13829
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13834
  br i1 %6, label %15, label %7, !dbg !13836

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13837, metadata !DIExpression()), !dbg !13842
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13844
  %9 = load i32, i32* %8, align 4, !dbg !13844
  %10 = and i32 %9, 511, !dbg !13845
  %11 = icmp eq i32 %10, 0, !dbg !13846
  br i1 %11, label %13, label %12, !dbg !13847

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 69) #25, !dbg !13848
  br label %13, !dbg !13854

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !13855
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.181, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !13855
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13860
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13837, metadata !DIExpression()), !dbg !13861
  br label %17, !dbg !13866

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !13855
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.181, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #25, !dbg !13855
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13860
  br label %17, !dbg !13867

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13825
  call void @llvm.dbg.value(metadata i32 %18, metadata !13788, metadata !DIExpression()) #23, !dbg !13827
  call void @llvm.dbg.value(metadata i32 %18, metadata !13822, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.value(metadata i32 undef, metadata !13868, metadata !DIExpression()) #23, !dbg !13871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13873, !srcloc !13874
  tail call fastcc void @k_thread_abort.182(%struct.k_thread* noundef %4) #24, !dbg !13875
  ret void, !dbg !13878
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.178() unnamed_addr #12 !dbg !13879 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.190() #26, !dbg !13883
  ret %struct.k_thread* %1, !dbg !13884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13889, metadata !DIExpression()), !dbg !13890
  %2 = icmp ult i32 %0, 5, !dbg !13891
  br i1 %2, label %3, label %6, !dbg !13891

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13891
  %5 = load i8*, i8** %4, align 4, !dbg !13891
  br label %6, !dbg !13891

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.184, i32 0, i32 0), %1 ], !dbg !13892
  ret i8* %7, !dbg !13894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13899, metadata !DIExpression()), !dbg !13901
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13902
  br i1 %2, label %9, label %3, !dbg !13903

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13904
  call void @llvm.dbg.value(metadata i8* %4, metadata !13900, metadata !DIExpression()), !dbg !13901
  %5 = icmp eq i8* %4, null, !dbg !13905
  br i1 %5, label %9, label %6, !dbg !13907

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13908
  %8 = icmp eq i8 %7, 0, !dbg !13909
  br i1 %8, label %9, label %10, !dbg !13910

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.183, i32 0, i32 0), metadata !13900, metadata !DIExpression()), !dbg !13901
  br label %10, !dbg !13911

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.183, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13901
  call void @llvm.dbg.value(metadata i8* %11, metadata !13900, metadata !DIExpression()), !dbg !13901
  ret i8* %11, !dbg !13913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.182(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13918, metadata !DIExpression()), !dbg !13919
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13920, !srcloc !13922
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13923
  ret void, !dbg !13924
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.190() unnamed_addr #12 !dbg !13925 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13926, !srcloc !13928
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13929
  ret %struct.k_thread* %1, !dbg !13930
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13931 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13935, metadata !DIExpression()), !dbg !13938
  call void @llvm.dbg.value(metadata i32 %1, metadata !13936, metadata !DIExpression()), !dbg !13938
  call void @llvm.dbg.value(metadata i32 %2, metadata !13937, metadata !DIExpression()), !dbg !13938
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13939
  ret void, !dbg !13940
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13941 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13945, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i8* %1, metadata !13946, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i32 %2, metadata !13947, metadata !DIExpression()), !dbg !13948
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13949
  ret void, !dbg !13950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13951 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13952
  ret void, !dbg !13953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13956, metadata !DIExpression()), !dbg !13957
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13958
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13959
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13960
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13961
  %4 = trunc i32 %0 to i8, !dbg !13962
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13963
  store i8 %4, i8* %5, align 4, !dbg !13964
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13965
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13966
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13967
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13968
  store i8* %8, i8** %9, align 4, !dbg !13969
  ret void, !dbg !13970
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13973, metadata !DIExpression()), !dbg !13979
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13980
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13974, metadata !DIExpression()), !dbg !13979
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13981
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13975, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i8* null, metadata !13978, metadata !DIExpression()), !dbg !13979
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13982
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13983
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13984
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13985
  ret void, !dbg !13986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13987 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13991, metadata !DIExpression()), !dbg !13992
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13993
  ret i8* %2, !dbg !13994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !13995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14000, metadata !DIExpression()), !dbg !14001
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14002
  %3 = load i8, i8* %2, align 1, !dbg !14003
  %4 = and i8 %3, -5, !dbg !14003
  store i8 %4, i8* %2, align 1, !dbg !14003
  ret void, !dbg !14004
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14005 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14008
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14009
  %3 = ptrtoint i8* %2 to i32, !dbg !14018
  %4 = add i32 %3, 2048, !dbg !14019
  call void @llvm.dbg.value(metadata i32 %4, metadata !14013, metadata !DIExpression()) #23, !dbg !14020
  call void @llvm.dbg.value(metadata i32 %4, metadata !14021, metadata !DIExpression()) #23, !dbg !14024
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14026, !srcloc !14027
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14028
  %6 = or i32 %5, 512, !dbg !14028
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14028
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -2, i32 noundef 255) #25, !dbg !14029
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -5, i32 noundef 0) #25, !dbg !14032
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -12, i32 noundef 0) #25, !dbg !14033
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -11, i32 noundef 0) #25, !dbg !14034
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -10, i32 noundef 0) #25, !dbg !14035
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -4, i32 noundef 0) #25, !dbg !14036
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14037
  %8 = or i32 %7, 458752, !dbg !14037
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14037
  tail call void @z_arm_fault_init() #25, !dbg !14038
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14039
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14040
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14043
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14044
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14045
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14046
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !14046
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14007, metadata !DIExpression()), !dbg !14047
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14048
  call void @z_device_state_init() #25, !dbg !14049
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14050
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14051
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14052
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14053
  unreachable, !dbg !14053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2378, metadata !DIExpression()), !dbg !14054
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14055
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14055
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2379, metadata !DIExpression()), !dbg !14054
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2379, metadata !DIExpression()), !dbg !14054
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14056
  br i1 %7, label %8, label %35, !dbg !14057

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2379, metadata !DIExpression()), !dbg !14054
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14058
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14058
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2389, metadata !DIExpression()), !dbg !14059
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14060
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14060
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %14, metadata !2393, metadata !DIExpression()), !dbg !14059
  %15 = icmp eq %struct.device* %11, null, !dbg !14062
  br i1 %15, label %32, label %16, !dbg !14064

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14065
  br i1 %17, label %26, label %18, !dbg !14068

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14069
  call void @llvm.dbg.value(metadata i32 %19, metadata !2393, metadata !DIExpression()), !dbg !14059
  %20 = icmp ult i32 %19, 255, !dbg !14071
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %21, metadata !2393, metadata !DIExpression()), !dbg !14059
  %22 = trunc i32 %21 to i8, !dbg !14072
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14073
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14073
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14074
  store i8 %22, i8* %25, align 1, !dbg !14075
  br label %26, !dbg !14076

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14077
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14077
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14078
  %30 = load i8, i8* %29, align 1, !dbg !14079
  %31 = or i8 %30, 1, !dbg !14079
  store i8 %31, i8* %29, align 1, !dbg !14079
  br label %32, !dbg !14080

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14081
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2379, metadata !DIExpression()), !dbg !14054
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14056
  br i1 %34, label %8, label %35, !dbg !14057, !llvm.loop !14082

35:                                               ; preds = %32, %1
  ret void, !dbg !14084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.199(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !14085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14087, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 %1, metadata !14088, metadata !DIExpression()), !dbg !14089
  %3 = trunc i32 %1 to i8, !dbg !14090
  %4 = shl i8 %3, 4, !dbg !14090
  %5 = and i32 %0, 15, !dbg !14093
  %6 = add nsw i32 %5, -4, !dbg !14094
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14095
  store volatile i8 %4, i8* %7, align 1, !dbg !14096
  ret void, !dbg !14097
}

; Function Attrs: optsize
declare !dbg !14098 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #6 !dbg !14099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14102, metadata !DIExpression()), !dbg !14103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14104
  store i8 1, i8* %2, align 1, !dbg !14105
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14106
  store i8 1, i8* %3, align 4, !dbg !14107
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14108
  store i32 0, i32* %4, align 4, !dbg !14109
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14110
  store i32 0, i32* %5, align 4, !dbg !14111
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14112
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14113
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14114
  ret void, !dbg !14115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14116 {
  tail call void @z_sched_init() #25, !dbg !14121
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14122
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.200, i32 0, i32 0)) #25, !dbg !14123
  call void @llvm.dbg.value(metadata i8* %1, metadata !14120, metadata !DIExpression()), !dbg !14124
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14125
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14126
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14127
  ret i8* %1, !dbg !14128
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14133, metadata !DIExpression()), !dbg !14134
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14135
  unreachable, !dbg !14136
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14137 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14139, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.value(metadata i8* %1, metadata !14140, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.value(metadata i8* %2, metadata !14141, metadata !DIExpression()), !dbg !14142
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14143
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14144
  tail call void @boot_banner() #25, !dbg !14145
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14146
  tail call void @z_init_static_threads() #25, !dbg !14147
  tail call void @main() #25, !dbg !14148
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14149
  %5 = and i8 %4, -2, !dbg !14149
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14149
  ret void, !dbg !14150
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14151 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14161, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i8* %1, metadata !14162, metadata !DIExpression()), !dbg !14163
  ret void, !dbg !14164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14165 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14167, metadata !DIExpression()), !dbg !14169
  call void @llvm.dbg.value(metadata i8* %1, metadata !14168, metadata !DIExpression()), !dbg !14169
  ret void, !dbg !14170
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14171 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14172, !srcloc !14179
  call void @llvm.dbg.value(metadata i32 %1, metadata !14175, metadata !DIExpression()) #23, !dbg !14180
  %2 = icmp ne i32 %1, 0, !dbg !14181
  ret i1 %2, !dbg !14182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !14183 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14184
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14185
  %3 = load i8, i8* %2, align 4, !dbg !14186
  %4 = or i8 %3, 1, !dbg !14186
  store i8 %4, i8* %2, align 4, !dbg !14186
  ret void, !dbg !14187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !14188 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14189
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14190
  %3 = load i8, i8* %2, align 4, !dbg !14191
  %4 = and i8 %3, -2, !dbg !14191
  store i8 %4, i8* %2, align 4, !dbg !14191
  ret void, !dbg !14192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !14193 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14194
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14195
  %3 = load i8, i8* %2, align 4, !dbg !14195
  %4 = and i8 %3, 1, !dbg !14196
  %5 = icmp ne i8 %4, 0, !dbg !14197
  ret i1 %5, !dbg !14198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14199 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14203, metadata !DIExpression()), !dbg !14205
  call void @llvm.dbg.value(metadata i8* %1, metadata !14204, metadata !DIExpression()), !dbg !14205
  ret i32 -88, !dbg !14206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14211, metadata !DIExpression()), !dbg !14212
  ret i8* null, !dbg !14213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata i8* %1, metadata !14219, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata i32 %2, metadata !14220, metadata !DIExpression()), !dbg !14221
  ret i32 -88, !dbg !14222
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2404 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2518, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i8* %1, metadata !2519, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i32 %2, metadata !2520, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i32 0, metadata !2521, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i8 undef, metadata !2523, metadata !DIExpression()), !dbg !14223
  %4 = icmp eq i8* %1, null, !dbg !14224
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14226
  br i1 %6, label %46, label %7, !dbg !14226

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14227
  %9 = load i8, i8* %8, align 1, !dbg !14227
  call void @llvm.dbg.value(metadata i8 %9, metadata !2523, metadata !DIExpression()), !dbg !14223
  %10 = add i32 %2, -1, !dbg !14228
  call void @llvm.dbg.value(metadata i32 %10, metadata !2520, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i8 0, metadata !2524, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata i8 %9, metadata !2523, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i32 0, metadata !2521, metadata !DIExpression()), !dbg !14223
  %11 = icmp eq i8 %9, 0, !dbg !14230
  br i1 %11, label %12, label %15, !dbg !14232

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14233
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14234
  store i8 0, i8* %14, align 1, !dbg !14235
  br label %46, !dbg !14236

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2524, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata i8 %17, metadata !2523, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i32 %18, metadata !2521, metadata !DIExpression()), !dbg !14223
  %19 = zext i8 %17 to i32, !dbg !14237
  %20 = zext i8 %16 to i32, !dbg !14238
  %21 = shl nuw i32 1, %20, !dbg !14238
  call void @llvm.dbg.value(metadata i32 %21, metadata !2522, metadata !DIExpression()), !dbg !14223
  %22 = and i32 %21, %19, !dbg !14240
  %23 = icmp eq i32 %22, 0, !dbg !14242
  br i1 %23, label %42, label %24, !dbg !14243

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14244
  %26 = sub i32 %10, %18, !dbg !14245
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14246
  %28 = load i8*, i8** %27, align 4, !dbg !14246
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14247
  %30 = load i32, i32* %29, align 4, !dbg !14247
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14248
  %32 = add i32 %31, %18, !dbg !14249
  call void @llvm.dbg.value(metadata i32 %32, metadata !2521, metadata !DIExpression()), !dbg !14223
  %33 = trunc i32 %21 to i8, !dbg !14250
  %34 = xor i8 %33, -1, !dbg !14250
  %35 = and i8 %17, %34, !dbg !14250
  call void @llvm.dbg.value(metadata i8 %35, metadata !2523, metadata !DIExpression()), !dbg !14223
  %36 = icmp eq i8 %35, 0, !dbg !14251
  br i1 %36, label %12, label %37, !dbg !14253

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14254
  %39 = sub i32 %10, %32, !dbg !14256
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.203, i32 0, i32 0), i32 noundef 1) #24, !dbg !14257
  %41 = add i32 %40, %32, !dbg !14258
  call void @llvm.dbg.value(metadata i32 %41, metadata !2521, metadata !DIExpression()), !dbg !14223
  br label %42, !dbg !14259

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14223
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14223
  call void @llvm.dbg.value(metadata i8 %44, metadata !2523, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i32 %43, metadata !2521, metadata !DIExpression()), !dbg !14223
  %45 = add i8 %16, 1, !dbg !14260
  call void @llvm.dbg.value(metadata i8 %45, metadata !2524, metadata !DIExpression()), !dbg !14229
  br label %15, !dbg !14232

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.204, i32 0, i32 0), %3 ], !dbg !14223
  ret i8* %47, !dbg !14261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14262 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14266, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata i32 %1, metadata !14267, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata i8* %2, metadata !14268, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata i32 %3, metadata !14269, metadata !DIExpression()), !dbg !14271
  %5 = icmp ult i32 %1, %3, !dbg !14272
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14272
  call void @llvm.dbg.value(metadata i32 %6, metadata !14270, metadata !DIExpression()), !dbg !14271
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14273
  ret i32 %6, !dbg !14274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14279, metadata !DIExpression()), !dbg !14280
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14281
  ret void, !dbg !14282
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14283 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14292, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14293, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i32 %2, metadata !14294, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14295, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i8* %4, metadata !14296, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i8* %5, metadata !14297, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i8* %6, metadata !14298, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i32 %7, metadata !14299, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i32 %8, metadata !14300, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i8* undef, metadata !14301, metadata !DIExpression()), !dbg !14303
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14304
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !14305
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14306
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14307
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14308
  call void @llvm.dbg.value(metadata i8* %13, metadata !14302, metadata !DIExpression()), !dbg !14303
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14309
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14310
  store i8* null, i8** %14, align 4, !dbg !14311
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14312
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14312
  br i1 %16, label %20, label %17, !dbg !14314

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14315
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14315
  br label %20, !dbg !14316

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14303
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14317
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14319
  ret i8* %13, !dbg !14320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !14321 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14326, metadata !DIExpression()), !dbg !14327
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14328
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14329
  ret void, !dbg !14330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !14331 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14336, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i32 %1, metadata !14337, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i32 %2, metadata !14338, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i32 %3, metadata !14339, metadata !DIExpression()), !dbg !14340
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14341
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14342
  %6 = trunc i32 %3 to i8, !dbg !14343
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14344
  store i8 %6, i8* %7, align 4, !dbg !14345
  %8 = trunc i32 %2 to i8, !dbg !14346
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14347
  store i8 %8, i8* %9, align 1, !dbg !14348
  %10 = trunc i32 %1 to i8, !dbg !14349
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14350
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14350
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14350
  store i8 %10, i8* %13, align 2, !dbg !14351
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14352
  store i8 0, i8* %14, align 1, !dbg !14353
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14354
  ret void, !dbg !14355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !14356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14360, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14361, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 %2, metadata !14362, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 0, metadata !14367, metadata !DIExpression()), !dbg !14368
  %4 = add i32 %2, 7, !dbg !14369
  %5 = and i32 %4, -8, !dbg !14369
  %6 = add i32 %5, 64, !dbg !14369
  call void @llvm.dbg.value(metadata i32 %6, metadata !14363, metadata !DIExpression()), !dbg !14368
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.214(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14371
  call void @llvm.dbg.value(metadata i8* %7, metadata !14366, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 %5, metadata !14364, metadata !DIExpression()), !dbg !14368
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14372
  call void @llvm.dbg.value(metadata i8* %8, metadata !14365, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 0, metadata !14367, metadata !DIExpression()), !dbg !14368
  %9 = ptrtoint i8* %7 to i32, !dbg !14373
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14374
  store i32 %9, i32* %10, align 4, !dbg !14375
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14376
  store i32 %5, i32* %11, align 4, !dbg !14377
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14378
  store i32 0, i32* %12, align 4, !dbg !14379
  call void @llvm.dbg.value(metadata i8* %8, metadata !14365, metadata !DIExpression()), !dbg !14368
  ret i8* %8, !dbg !14380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.214(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14381 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14385, metadata !DIExpression()), !dbg !14386
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14387
  ret i8* %2, !dbg !14388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14389 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14394, metadata !DIExpression()), !dbg !14395
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14396
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14397
  ret void, !dbg !14398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14399 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14401, metadata !DIExpression()), !dbg !14402
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14403
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14404
  ret void, !dbg !14405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14406 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14410, metadata !DIExpression()), !dbg !14411
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14412
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14413
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14414
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14415
  ret void, !dbg !14416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !14417 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14422, metadata !DIExpression()), !dbg !14423
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14424
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14425
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14426
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14427
  ret void, !dbg !14428
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14429 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14437, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14438, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata i32 %2, metadata !14439, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14440, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata i8* %4, metadata !14441, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata i8* %5, metadata !14442, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata i8* %6, metadata !14443, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata i32 %7, metadata !14444, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata i32 %8, metadata !14445, metadata !DIExpression()), !dbg !14447
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !14448
  %13 = icmp eq i64 %11, -1, !dbg !14449
  br i1 %13, label %15, label %14, !dbg !14451

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14452
  br label %15, !dbg !14454

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14456 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14461, metadata !DIExpression()), !dbg !14462
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14460, metadata !DIExpression()), !dbg !14462
  %4 = icmp eq i64 %3, 0, !dbg !14463
  br i1 %4, label %5, label %6, !dbg !14465

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14466
  br label %7, !dbg !14468

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14469
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14472 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14476, metadata !DIExpression()), !dbg !14477
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14478, !srcloc !14480
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14481
  ret void, !dbg !14482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14483 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14486, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14485, metadata !DIExpression()), !dbg !14487
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14488
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14489
  ret void, !dbg !14490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14491 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14493, metadata !DIExpression()), !dbg !14513
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14514

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14515
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14511, metadata !DIExpression()), !dbg !14516
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14517

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14493, metadata !DIExpression()), !dbg !14513
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14518
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14518
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14521
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14521
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14522
  %9 = load i32, i32* %8, align 4, !dbg !14522
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14523
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14523
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14524
  %13 = load i8*, i8** %12, align 4, !dbg !14524
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14525
  %15 = load i8*, i8** %14, align 4, !dbg !14525
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14526
  %17 = load i8*, i8** %16, align 4, !dbg !14526
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14527
  %19 = load i32, i32* %18, align 4, !dbg !14527
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14528
  %21 = load i32, i32* %20, align 4, !dbg !14528
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !14529
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14530
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14531
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14532
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14532
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14533
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14493, metadata !DIExpression()), !dbg !14513
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14534
  br i1 %27, label %2, label %1, !dbg !14514, !llvm.loop !14536

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14515
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14511, metadata !DIExpression()), !dbg !14516
  br label %29, !dbg !14517

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14538
  ret void, !dbg !14539

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14511, metadata !DIExpression()), !dbg !14516
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14540
  %33 = load i32, i32* %32, align 4, !dbg !14540
  %34 = icmp eq i32 %33, -1, !dbg !14544
  br i1 %34, label %43, label %35, !dbg !14545

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14546
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14546
  %38 = icmp sgt i32 %33, 0, !dbg !14548
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14548
  %40 = zext i32 %39 to i64, !dbg !14548
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.217(i64 noundef %40) #24, !dbg !14548
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14549
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !14549
  br label %43, !dbg !14550

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14551
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14511, metadata !DIExpression()), !dbg !14516
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14552
  br i1 %45, label %30, label %29, !dbg !14517, !llvm.loop !14554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.217(i64 noundef %0) unnamed_addr #4 !dbg !14556 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14558, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata i64 %0, metadata !14560, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i32 1000, metadata !14563, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i32 10000, metadata !14564, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i8 1, metadata !14565, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i8 0, metadata !14566, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i8 1, metadata !14567, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i8 0, metadata !14568, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i8 1, metadata !14569, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i8 0, metadata !14570, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i64 0, metadata !14571, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i64 0, metadata !14571, metadata !DIExpression()), !dbg !14575
  %2 = mul i64 %0, 10, !dbg !14577
  ret i64 %2, !dbg !14583
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14584 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14586, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.value(metadata i8* %1, metadata !14587, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.value(metadata i8* %2, metadata !14588, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.value(metadata i8* %3, metadata !14589, metadata !DIExpression()), !dbg !14590
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14591
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14592
  %7 = load i8, i8* %6, align 4, !dbg !14593
  %8 = or i8 %7, 4, !dbg !14593
  store i8 %8, i8* %6, align 4, !dbg !14593
  tail call void @z_thread_essential_clear() #24, !dbg !14594
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14595
  unreachable, !dbg !14595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14596 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14600, metadata !DIExpression()), !dbg !14601
  ret i32 -134, !dbg !14602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14603 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14607, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata i32 %1, metadata !14608, metadata !DIExpression()), !dbg !14609
  ret i32 -134, !dbg !14610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #4 !dbg !14611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14618, metadata !DIExpression()), !dbg !14620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14619, metadata !DIExpression()), !dbg !14620
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14621
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14623
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14620
  ret i32 %6, !dbg !14624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #4 !dbg !14625 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14629, metadata !DIExpression()), !dbg !14630
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14631
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14630
  ret i32 %3, !dbg !14633
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14634 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14636
  ret void, !dbg !14637
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14638 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14640, metadata !DIExpression()), !dbg !14643
  call void @llvm.dbg.value(metadata i8* %1, metadata !14641, metadata !DIExpression()), !dbg !14643
  call void @llvm.dbg.value(metadata i8* %2, metadata !14642, metadata !DIExpression()), !dbg !14643
  br label %4, !dbg !14644

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14645, !srcloc !14652
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !14653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14649, metadata !DIExpression()) #23, !dbg !14653
  tail call fastcc void @k_cpu_idle() #24, !dbg !14654
  br label %4, !dbg !14644, !llvm.loop !14655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14657 {
  tail call void @arch_cpu_idle() #25, !dbg !14658
  ret void, !dbg !14659
}

; Function Attrs: optsize
declare !dbg !14660 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14666, metadata !DIExpression()), !dbg !14669
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14670
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14670
  %5 = load i8, i8* %4, align 2, !dbg !14670
  call void @llvm.dbg.value(metadata i8 %5, metadata !14667, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14669
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14671
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14671
  %8 = load i8, i8* %7, align 2, !dbg !14671
  call void @llvm.dbg.value(metadata i8 %8, metadata !14668, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14669
  %9 = icmp eq i8 %8, %5, !dbg !14672
  %10 = sext i8 %5 to i32, !dbg !14674
  %11 = sext i8 %8 to i32, !dbg !14674
  %12 = sub nsw i32 %11, %10, !dbg !14674
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14674
  ret i32 %13, !dbg !14675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14680, metadata !DIExpression()), !dbg !14681
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14682
  %3 = icmp eq i32 %2, 0, !dbg !14684
  br i1 %3, label %8, label %4, !dbg !14685

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14686
  %6 = add i32 %5, %2, !dbg !14688
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14689
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14690
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14691
  br label %8, !dbg !14692

8:                                                ; preds = %4, %1
  ret void, !dbg !14693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !14694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14698, metadata !DIExpression()), !dbg !14700
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14701
  call void @llvm.dbg.value(metadata i32 %1, metadata !14699, metadata !DIExpression()), !dbg !14700
  ret i32 %1, !dbg !14702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14707, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.value(metadata i32 %1, metadata !14708, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.value(metadata i32 0, metadata !14709, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !14725
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14727, !srcloc !14733
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14727
  call void @llvm.dbg.value(metadata i32 %4, metadata !14730, metadata !DIExpression()) #23, !dbg !14734
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !14734
  call void @llvm.dbg.value(metadata i32 %4, metadata !14724, metadata !DIExpression()) #23, !dbg !14725
  call void @llvm.dbg.value(metadata i32 %4, metadata !14715, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14717
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14735
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14738
  %6 = icmp sgt i32 %0, 0, !dbg !14739
  %7 = icmp sgt i32 %5, 2, !dbg !14741
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14741
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14741
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14742
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14743
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14744
  call void @llvm.dbg.value(metadata i32 %4, metadata !14745, metadata !DIExpression()) #23, !dbg !14751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !14751
  call void @llvm.dbg.value(metadata i32 %4, metadata !14753, metadata !DIExpression()) #23, !dbg !14756
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14758, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !14709, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14717
  ret void, !dbg !14760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14763, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata i32 %0, metadata !14765, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i32 1000, metadata !14768, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i32 10000, metadata !14769, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i8 1, metadata !14770, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i1 true, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i1 true, metadata !14772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i8 0, metadata !14773, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i1 true, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i1 false, metadata !14775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !14780
  %2 = mul i32 %0, 10, !dbg !14782
  ret i32 %2, !dbg !14788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14791, metadata !DIExpression()), !dbg !14793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !14794
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14796, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14796
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #23, !dbg !14798
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !14798
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #23, !dbg !14794
  call void @llvm.dbg.value(metadata i32 %3, metadata !14792, metadata !DIExpression()), !dbg !14793
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14799
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14801
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14802
  br i1 %6, label %7, label %8, !dbg !14803

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !14806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !14808
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14810, !srcloc !14759
  br label %24, !dbg !14811

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14812
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !14813
  %10 = icmp eq i32 %9, 0, !dbg !14813
  br i1 %10, label %21, label %11, !dbg !14815

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !14816
  br i1 %12, label %13, label %21, !dbg !14817

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14818
  %15 = icmp sgt i32 %14, %0, !dbg !14821
  br i1 %15, label %19, label %16, !dbg !14822

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14823
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %18, metadata !14792, metadata !DIExpression()), !dbg !14793
  br label %22, !dbg !14825

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14826
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14826
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14828
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14793
  call void @llvm.dbg.value(metadata i32 %23, metadata !14792, metadata !DIExpression()), !dbg !14793
  call void @llvm.dbg.value(metadata i32 %23, metadata !14745, metadata !DIExpression()) #23, !dbg !14830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !14830
  call void @llvm.dbg.value(metadata i32 %23, metadata !14753, metadata !DIExpression()) #23, !dbg !14832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14834, !srcloc !14759
  br label %24, !dbg !14835

24:                                               ; preds = %22, %7
  ret void, !dbg !14835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !14836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14840, metadata !DIExpression()), !dbg !14842
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14843
  %3 = icmp eq i32 %2, 0, !dbg !14843
  br i1 %3, label %16, label %4, !dbg !14844

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14845
  br i1 %5, label %16, label %6, !dbg !14846

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14847
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14847
  %9 = load i8, i8* %8, align 2, !dbg !14847
  %10 = sext i8 %9 to i32, !dbg !14848
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14849
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14850
  br i1 %12, label %16, label %13, !dbg !14851

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14852
  %15 = xor i1 %14, true, !dbg !14853
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14842
  call void @llvm.dbg.value(metadata i1 %17, metadata !14841, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14842
  ret i1 %17, !dbg !14854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14855 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14859, metadata !DIExpression()), !dbg !14861
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14862
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14860, metadata !DIExpression()), !dbg !14861
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14863
  br i1 %3, label %5, label %4, !dbg !14865

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14866
  br label %5, !dbg !14868

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14859, metadata !DIExpression()), !dbg !14861
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14869
  ret i32 %6, !dbg !14870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14873, metadata !DIExpression()), !dbg !14875
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14876
  %3 = load i8, i8* %2, align 1, !dbg !14876
  call void @llvm.dbg.value(metadata i8 %3, metadata !14874, metadata !DIExpression()), !dbg !14875
  %4 = and i8 %3, 31, !dbg !14877
  %5 = icmp ne i8 %4, 0, !dbg !14878
  ret i1 %5, !dbg !14879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14880 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14882, metadata !DIExpression()), !dbg !14883
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14884
  br i1 %2, label %3, label %7, !dbg !14886

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !14890
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14893
  %5 = load i8, i8* %4, align 1, !dbg !14894
  %6 = and i8 %5, 127, !dbg !14894
  store i8 %6, i8* %4, align 1, !dbg !14894
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !14898
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14902
  br label %7, !dbg !14903

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #23, !dbg !14907
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14909
  %9 = load i8, i8* %8, align 1, !dbg !14910
  %10 = or i8 %9, -128, !dbg !14910
  store i8 %10, i8* %8, align 1, !dbg !14910
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #23, !dbg !14914
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #23, !dbg !14926
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !14926
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14928
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14925, metadata !DIExpression()) #23, !dbg !14926
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14930
  br i1 %12, label %23, label %13, !dbg !14928

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14925, metadata !DIExpression()) #23, !dbg !14926
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14925, metadata !DIExpression()) #23, !dbg !14926
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14933
  %17 = icmp sgt i32 %16, 0, !dbg !14936
  br i1 %17, label %18, label %20, !dbg !14937

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14938
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14940
  br label %25, !dbg !14941

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14930
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14925, metadata !DIExpression()) #23, !dbg !14926
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14930
  br i1 %22, label %23, label %13, !dbg !14928, !llvm.loop !14942

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14944
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14945
  br label %25, !dbg !14946

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14947
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14948
  %28 = zext i1 %27 to i32, !dbg !14948
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !14949
  ret void, !dbg !14950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14951 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14953, metadata !DIExpression()), !dbg !14954
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !14955
  ret i1 %2, !dbg !14956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !14957 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14959, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14960, metadata !DIExpression()), !dbg !14961
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14962
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !14963
  ret void, !dbg !14964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !14965 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14969, metadata !DIExpression()), !dbg !14970
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14971
  br i1 %2, label %6, label %3, !dbg !14971

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14972
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14972
  br label %6, !dbg !14971

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14971
  ret %struct._dnode* %7, !dbg !14973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14974 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14979, metadata !DIExpression()), !dbg !14982
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14983
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14983
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14980, metadata !DIExpression()), !dbg !14982
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14984
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14985
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14986
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14987
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14988
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14989
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14990
  ret void, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14992 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14996, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14997, metadata !DIExpression()), !dbg !14998
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14999
  br i1 %3, label %6, label %4, !dbg !15000

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15001
  br label %6, !dbg !15000

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15000
  ret %struct._dnode* %7, !dbg !15002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15007, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15008, metadata !DIExpression()), !dbg !15010
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15011
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15011
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15009, metadata !DIExpression()), !dbg !15010
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15012
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15013
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15014
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15015
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15016
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15017
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15018
  ret void, !dbg !15019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15022, metadata !DIExpression()), !dbg !15024
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15025
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15032, metadata !DIExpression()) #23, !dbg !15034
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15035
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15036
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15036
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15023, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15037, metadata !DIExpression()) #23, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %0, metadata !15042, metadata !DIExpression()) #23, !dbg !15043
  %6 = icmp eq i32 %0, 0, !dbg !15046
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15048
  br i1 %6, label %8, label %15, !dbg !15049

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15050
  br i1 %9, label %15, label %10, !dbg !15052

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15053
  br i1 %11, label %15, label %12, !dbg !15055

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15056
  %14 = icmp eq i32 %13, 0, !dbg !15056
  br i1 %14, label %18, label %15, !dbg !15058

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15059
  br i1 %16, label %18, label %17, !dbg !15062

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15063
  br label %18, !dbg !15065

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15048
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15048
  ret void, !dbg !15066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !15067 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15071, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15072, metadata !DIExpression()), !dbg !15074
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15075
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15073, metadata !DIExpression()), !dbg !15074
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15072, metadata !DIExpression()), !dbg !15074
  ret %struct.k_thread* %3, !dbg !15076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()), !dbg !15080
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15081
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15082
  %4 = xor i1 %3, true, !dbg !15083
  ret i1 %4, !dbg !15084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15085 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15087, metadata !DIExpression()), !dbg !15088
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15089
  %3 = load i16, i16* %2, align 2, !dbg !15089
  %4 = icmp ult i16 %3, 128, !dbg !15090
  %5 = zext i1 %4 to i32, !dbg !15090
  ret i32 %5, !dbg !15091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15092 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15098, metadata !DIExpression()), !dbg !15099
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15100
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15101
  %4 = xor i1 %3, true, !dbg !15102
  ret i1 %4, !dbg !15103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15104 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15110, metadata !DIExpression()), !dbg !15111
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15112
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15112
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15113
  ret i1 %4, !dbg !15114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15115 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15117, metadata !DIExpression()), !dbg !15119
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15118, metadata !DIExpression()), !dbg !15119
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15120
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15120
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15121
  br i1 %5, label %9, label %6, !dbg !15122

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15123
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15123
  br label %9, !dbg !15122

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15122
  ret %struct._dnode* %10, !dbg !15124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15125 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15129, metadata !DIExpression()), !dbg !15130
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15131
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15131
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15132
  ret i1 %4, !dbg !15133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15134 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15138, metadata !DIExpression()), !dbg !15141
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15142
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15142
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15139, metadata !DIExpression()), !dbg !15141
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15143
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15143
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15140, metadata !DIExpression()), !dbg !15141
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15144
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15145
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15146
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15147
  tail call fastcc void @sys_dnode_init.220(%struct._dnode* noundef %0) #24, !dbg !15148
  ret void, !dbg !15149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.220(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15150 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15152, metadata !DIExpression()), !dbg !15153
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15154
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15155
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15156
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15157
  ret void, !dbg !15158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15163, metadata !DIExpression()), !dbg !15165
  call void @llvm.dbg.value(metadata i32 128, metadata !15164, metadata !DIExpression()), !dbg !15165
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15166
  %3 = load i8, i8* %2, align 1, !dbg !15166
  %4 = icmp slt i8 %3, 0, !dbg !15167
  ret i1 %4, !dbg !15168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15173, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i32 %1, metadata !15174, metadata !DIExpression()), !dbg !15175
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15176
  ret i1 %3, !dbg !15177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !15178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15180, metadata !DIExpression()), !dbg !15181
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15182
  ret i1 %2, !dbg !15183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15186, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 %1, metadata !15187, metadata !DIExpression()), !dbg !15188
  %3 = icmp slt i32 %0, %1, !dbg !15189
  ret i1 %3, !dbg !15190
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15193, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 0, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15199
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15201, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15201
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #23, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #23, !dbg !15199
  call void @llvm.dbg.value(metadata i32 %3, metadata !15196, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15198
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15204
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !15209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15209
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !15211
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15213, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15198
  ret void, !dbg !15214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15217, metadata !DIExpression()), !dbg !15218
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15219
  br i1 %2, label %24, label %3, !dbg !15221

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15222
  br i1 %4, label %5, label %24, !dbg !15223

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #23, !dbg !15224
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15227
  %7 = load i8, i8* %6, align 1, !dbg !15228
  %8 = or i8 %7, -128, !dbg !15228
  store i8 %8, i8* %6, align 1, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #23, !dbg !15229
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #23, !dbg !15231
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !15231
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15233
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14925, metadata !DIExpression()) #23, !dbg !15231
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15234
  br i1 %10, label %21, label %11, !dbg !15233

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14925, metadata !DIExpression()) #23, !dbg !15231
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15235
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14925, metadata !DIExpression()) #23, !dbg !15231
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15236
  %15 = icmp sgt i32 %14, 0, !dbg !15237
  br i1 %15, label %16, label %18, !dbg !15238

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15239
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15240
  br label %23, !dbg !15241

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15234
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14925, metadata !DIExpression()) #23, !dbg !15231
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15234
  br i1 %20, label %21, label %11, !dbg !15233, !llvm.loop !15242

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15244
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15245
  br label %23, !dbg !15246

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15247
  br label %24, !dbg !15248

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15250 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15252, metadata !DIExpression()), !dbg !15253
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15254
  br i1 %2, label %6, label %3, !dbg !15255

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15256
  %5 = xor i1 %4, true, !dbg !15255
  br label %6, !dbg !15255

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15260, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata i32 0, metadata !15261, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15266
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15268, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15268
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #23, !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #23, !dbg !15266
  call void @llvm.dbg.value(metadata i32 %3, metadata !15263, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 undef, metadata !15261, metadata !DIExpression()), !dbg !15265
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15271
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !15274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15274
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !15276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15278, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15261, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 undef, metadata !15261, metadata !DIExpression()), !dbg !15265
  ret void, !dbg !15279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15280 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15282, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15285
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15287, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15287
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #23, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #23, !dbg !15285
  call void @llvm.dbg.value(metadata i32 %3, metadata !15283, metadata !DIExpression()), !dbg !15284
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15290
  br i1 %4, label %5, label %6, !dbg !15292

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !15296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15298, !srcloc !14759
  br label %8, !dbg !15299

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.225(%struct.k_thread* noundef %0) #24, !dbg !15300
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15301
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15302
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15302
  br label %8, !dbg !15303

8:                                                ; preds = %6, %5
  ret void, !dbg !15303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15304 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15306, metadata !DIExpression()), !dbg !15307
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15308
  %3 = load i8, i8* %2, align 1, !dbg !15308
  %4 = and i8 %3, 4, !dbg !15309
  %5 = icmp eq i8 %4, 0, !dbg !15310
  ret i1 %5, !dbg !15311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.225(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15312 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15314, metadata !DIExpression()), !dbg !15315
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15316
  %3 = load i8, i8* %2, align 1, !dbg !15317
  %4 = and i8 %3, -5, !dbg !15317
  store i8 %4, i8* %2, align 1, !dbg !15317
  ret void, !dbg !15318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15319 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15322, metadata !DIExpression()), !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15321, metadata !DIExpression()), !dbg !15323
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15324
  br i1 %4, label %5, label %9, !dbg !15326

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15327
  br i1 %6, label %7, label %9, !dbg !15328

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15329, metadata !DIExpression()) #23, !dbg !15335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #23, !dbg !15335
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15338
  br label %10, !dbg !15339

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !15340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !15343
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15345, !srcloc !14759
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15351, metadata !DIExpression()), !dbg !15352
  call void @llvm.dbg.value(metadata i32 %0, metadata !15353, metadata !DIExpression()), !dbg !15358
  %2 = icmp eq i32 %0, 0, !dbg !15360
  br i1 %2, label %3, label %6, !dbg !15361

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15362, !srcloc !15369
  call void @llvm.dbg.value(metadata i32 %4, metadata !15365, metadata !DIExpression()) #23, !dbg !15370
  %5 = icmp eq i32 %4, 0, !dbg !15371
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15352
  ret i1 %7, !dbg !15372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !15373 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15375, metadata !DIExpression()), !dbg !15377
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15378
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15379
  ret i1 %3, !dbg !15380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15383, metadata !DIExpression()), !dbg !15385
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15386
  call void @llvm.dbg.value(metadata i32 %2, metadata !15384, metadata !DIExpression()), !dbg !15385
  ret i32 %2, !dbg !15387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15390, metadata !DIExpression()), !dbg !15394
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15395
  call void @llvm.dbg.value(metadata i32 0, metadata !15391, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15397
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15399, !srcloc !14733
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15399
  call void @llvm.dbg.value(metadata i32 %4, metadata !14730, metadata !DIExpression()) #23, !dbg !15401
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15401
  call void @llvm.dbg.value(metadata i32 %4, metadata !14724, metadata !DIExpression()) #23, !dbg !15397
  call void @llvm.dbg.value(metadata i32 %4, metadata !15393, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()), !dbg !15396
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15402
  br i1 %5, label %6, label %10, !dbg !15406

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !15407
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15410
  %8 = load i8, i8* %7, align 1, !dbg !15411
  %9 = and i8 %8, 127, !dbg !15411
  store i8 %9, i8* %7, align 1, !dbg !15411
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !15412
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15414
  br label %10, !dbg !15415

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15416
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15417
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15418
  %13 = zext i1 %12 to i32, !dbg !15418
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %4, metadata !14745, metadata !DIExpression()) #23, !dbg !15420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15420
  call void @llvm.dbg.value(metadata i32 %4, metadata !14753, metadata !DIExpression()) #23, !dbg !15422
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15424, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15391, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()), !dbg !15396
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15425
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15427
  br i1 %15, label %16, label %17, !dbg !15428

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15429
  br label %17, !dbg !15431

17:                                               ; preds = %16, %10
  ret void, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15435, metadata !DIExpression()), !dbg !15436
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15437
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15438
  ret i32 %3, !dbg !15439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15442, metadata !DIExpression()), !dbg !15443
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15444
  %3 = load i8, i8* %2, align 1, !dbg !15445
  %4 = or i8 %3, 16, !dbg !15445
  store i8 %4, i8* %2, align 1, !dbg !15445
  ret void, !dbg !15446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15447 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15448, !srcloc !14733
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %2, metadata !14730, metadata !DIExpression()) #23, !dbg !15450
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15450
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15451
  ret void, !dbg !15452
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15455, metadata !DIExpression()), !dbg !15456
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15457
  br i1 %2, label %3, label %5, !dbg !15459

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15460
  br label %6, !dbg !15462

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14753, metadata !DIExpression()) #23, !dbg !15463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15466, !srcloc !14759
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15468 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15470, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15473
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15475, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15475
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()), !dbg !15472
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15478
  br i1 %4, label %6, label %5, !dbg !15480

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !15484
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15486, !srcloc !14759
  br label %8, !dbg !15487

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15488
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15489
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15490
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15490
  br label %8, !dbg !15491

8:                                                ; preds = %6, %5
  ret void, !dbg !15491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15494, metadata !DIExpression()), !dbg !15495
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15496
  %3 = load i8, i8* %2, align 1, !dbg !15496
  %4 = and i8 %3, 16, !dbg !15497
  %5 = icmp ne i8 %4, 0, !dbg !15498
  ret i1 %5, !dbg !15499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15502, metadata !DIExpression()), !dbg !15503
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15504
  %3 = load i8, i8* %2, align 1, !dbg !15505
  %4 = and i8 %3, -17, !dbg !15505
  store i8 %4, i8* %2, align 1, !dbg !15505
  ret void, !dbg !15506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15507 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15517, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15515, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15516, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 0, metadata !15518, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15523
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15525, !srcloc !14733
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15525
  call void @llvm.dbg.value(metadata i32 %5, metadata !14730, metadata !DIExpression()) #23, !dbg !15527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15527
  call void @llvm.dbg.value(metadata i32 %5, metadata !14724, metadata !DIExpression()) #23, !dbg !15523
  call void @llvm.dbg.value(metadata i32 %5, metadata !15520, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !15518, metadata !DIExpression()), !dbg !15522
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15528
  call void @llvm.dbg.value(metadata i32 %5, metadata !14745, metadata !DIExpression()) #23, !dbg !15531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15531
  call void @llvm.dbg.value(metadata i32 %5, metadata !14753, metadata !DIExpression()) #23, !dbg !15533
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !15535, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15518, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !15518, metadata !DIExpression()), !dbg !15522
  ret void, !dbg !15536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15537 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15541, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15539, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15540, metadata !DIExpression()), !dbg !15542
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15543
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15544
  ret void, !dbg !15545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15550, metadata !DIExpression()), !dbg !15552
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15551, metadata !DIExpression()), !dbg !15552
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15553
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15554
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15555
  br i1 %3, label %21, label %4, !dbg !15557

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15558
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15560
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15561
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14918, metadata !DIExpression()) #23, !dbg !15562
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !15562
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15564
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14925, metadata !DIExpression()) #23, !dbg !15562
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15565
  br i1 %8, label %19, label %9, !dbg !15564

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14925, metadata !DIExpression()) #23, !dbg !15562
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15566
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14925, metadata !DIExpression()) #23, !dbg !15562
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15567
  %13 = icmp sgt i32 %12, 0, !dbg !15568
  br i1 %13, label %14, label %16, !dbg !15569

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15570
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15571
  br label %21, !dbg !15572

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15565
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14925, metadata !DIExpression()) #23, !dbg !15562
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15565
  br i1 %18, label %19, label %9, !dbg !15564, !llvm.loop !15573

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15575
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15576
  br label %21, !dbg !15577

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15579 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15584, metadata !DIExpression()), !dbg !15585
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15583, metadata !DIExpression()), !dbg !15585
  %4 = icmp eq i64 %3, -1, !dbg !15586
  br i1 %4, label %6, label %5, !dbg !15588

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.226(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15589
  br label %6, !dbg !15591

6:                                                ; preds = %5, %2
  ret void, !dbg !15592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.226(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15593 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15596, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15595, metadata !DIExpression()), !dbg !15597
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15598
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15599
  ret void, !dbg !15600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15601 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15603, metadata !DIExpression()), !dbg !15611
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15612
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15604, metadata !DIExpression()), !dbg !15611
  call void @llvm.dbg.value(metadata i32 0, metadata !15605, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15614
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15616, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #23, !dbg !15618
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15618
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #23, !dbg !15614
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15605, metadata !DIExpression()), !dbg !15613
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15619
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15620
  %7 = load i8, i8* %6, align 1, !dbg !15620
  %8 = and i8 %7, 40, !dbg !15621
  %9 = icmp eq i8 %8, 0, !dbg !15621
  call void @llvm.dbg.value(metadata i1 %9, metadata !15608, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15622
  br i1 %9, label %10, label %17, !dbg !15623

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15624
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !15624
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !15624
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !15628
  br i1 %14, label %16, label %15, !dbg !15629

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15630
  br label %16, !dbg !15632

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.225(%struct.k_thread* noundef nonnull %3) #24, !dbg !15633
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15634
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15635
  br label %17, !dbg !15636

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15616
  call void @llvm.dbg.value(metadata i32 %18, metadata !14730, metadata !DIExpression()) #23, !dbg !15618
  call void @llvm.dbg.value(metadata i32 %18, metadata !14724, metadata !DIExpression()) #23, !dbg !15614
  call void @llvm.dbg.value(metadata i32 %18, metadata !15607, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #23, !dbg !15637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #23, !dbg !15639
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !15641, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15605, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15605, metadata !DIExpression()), !dbg !15613
  ret void, !dbg !15642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15645, metadata !DIExpression()), !dbg !15646
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15647
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15648
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15649
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !15650
  ret void, !dbg !15651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15654, metadata !DIExpression()), !dbg !15655
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15656
  %3 = load i8, i8* %2, align 1, !dbg !15657
  %4 = and i8 %3, -3, !dbg !15657
  store i8 %4, i8* %2, align 1, !dbg !15657
  ret void, !dbg !15658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15661, metadata !DIExpression()), !dbg !15662
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15663
  br i1 %2, label %3, label %7, !dbg !15665

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !15666
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15669
  %5 = load i8, i8* %4, align 1, !dbg !15670
  %6 = and i8 %5, 127, !dbg !15670
  store i8 %6, i8* %4, align 1, !dbg !15670
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !15671
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15673
  br label %7, !dbg !15674

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15675
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15676
  %10 = zext i1 %9 to i32, !dbg !15676
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15677
  ret void, !dbg !15678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15681, metadata !DIExpression()), !dbg !15682
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15683
  %3 = load i8, i8* %2, align 1, !dbg !15684
  %4 = or i8 %3, 2, !dbg !15684
  store i8 %4, i8* %2, align 1, !dbg !15684
  ret void, !dbg !15685
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !15686 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15688, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata i32 0, metadata !15689, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15694
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15696, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15696
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #23, !dbg !15694
  call void @llvm.dbg.value(metadata i32 %3, metadata !15691, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()), !dbg !15693
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15699
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !15702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15702
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !15704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15706, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15689, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()), !dbg !15693
  ret void, !dbg !15707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15708 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15714, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.value(metadata i32 %0, metadata !15712, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15713, metadata !DIExpression()), !dbg !15719
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15720
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15721
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15722
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15723
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15724
  call void @llvm.dbg.value(metadata i32 %6, metadata !15715, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.value(metadata i32 0, metadata !15716, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15726
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15728, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #23, !dbg !15730
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15730
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #23, !dbg !15726
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()), !dbg !15725
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15731
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15735
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15736
  br i1 %10, label %11, label %12, !dbg !15737

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15738
  br label %12, !dbg !15740

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15728
  call void @llvm.dbg.value(metadata i32 %13, metadata !14730, metadata !DIExpression()) #23, !dbg !15730
  call void @llvm.dbg.value(metadata i32 %13, metadata !14724, metadata !DIExpression()) #23, !dbg !15726
  call void @llvm.dbg.value(metadata i32 %13, metadata !15718, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #23, !dbg !15741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15741
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #23, !dbg !15743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !15745, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15716, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()), !dbg !15725
  ret i32 %6, !dbg !15746
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15747 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15752, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.value(metadata i64 undef, metadata !15754, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15751, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15753, metadata !DIExpression()), !dbg !15755
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15756
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15758
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15760, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #23, !dbg !15762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #23, !dbg !15758
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15763
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15764
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15329, metadata !DIExpression()) #23, !dbg !15765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #23, !dbg !15765
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15767
  ret i32 %9, !dbg !15768
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15769 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15773, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15774, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 0, metadata !15775, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15780
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15782, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #23, !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #23, !dbg !15780
  call void @llvm.dbg.value(metadata i32 undef, metadata !15777, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15774, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()), !dbg !15779
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15774, metadata !DIExpression()), !dbg !15778
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15788
  br i1 %5, label %7, label %6, !dbg !15790

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15791
  br label %7, !dbg !15793

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15782
  call void @llvm.dbg.value(metadata i32 %8, metadata !14730, metadata !DIExpression()) #23, !dbg !15784
  call void @llvm.dbg.value(metadata i32 %8, metadata !14724, metadata !DIExpression()) #23, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %8, metadata !15777, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #23, !dbg !15794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #23, !dbg !15796
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15798, !srcloc !14759
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15774, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()), !dbg !15779
  ret %struct.k_thread* %4, !dbg !15799
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15800 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15802, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i32 0, metadata !15804, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15809
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15811, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #23, !dbg !15813
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15813
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #23, !dbg !15809
  call void @llvm.dbg.value(metadata i32 undef, metadata !15806, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15804, metadata !DIExpression()), !dbg !15808
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15803, metadata !DIExpression()), !dbg !15807
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15817
  br i1 %5, label %8, label %6, !dbg !15819

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15820
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15822
  br label %8, !dbg !15823

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15811
  call void @llvm.dbg.value(metadata i32 %9, metadata !14730, metadata !DIExpression()) #23, !dbg !15813
  call void @llvm.dbg.value(metadata i32 %9, metadata !14724, metadata !DIExpression()) #23, !dbg !15809
  call void @llvm.dbg.value(metadata i32 %9, metadata !15806, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #23, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15824
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #23, !dbg !15826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15828, !srcloc !14759
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15804, metadata !DIExpression()), !dbg !15808
  ret %struct.k_thread* %4, !dbg !15829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15832, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15688, metadata !DIExpression()) #23, !dbg !15834
  call void @llvm.dbg.value(metadata i32 0, metadata !15689, metadata !DIExpression()) #23, !dbg !15836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15837
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15839, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15839
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #23, !dbg !15841
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15841
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %3, metadata !15691, metadata !DIExpression()) #23, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()) #23, !dbg !15836
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15842
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !15843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15843
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !15845
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15847, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15689, metadata !DIExpression()) #23, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()) #23, !dbg !15836
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15848
  ret void, !dbg !15849
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15852, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 %1, metadata !15853, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i8 0, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 0, metadata !15855, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15860
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15862, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #23, !dbg !15864
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15864
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #23, !dbg !15860
  call void @llvm.dbg.value(metadata i32 undef, metadata !15857, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i8 poison, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15855, metadata !DIExpression()), !dbg !15859
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15865
  call void @llvm.dbg.value(metadata i1 %6, metadata !15854, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15858
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15868

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !15869
  %11 = load i8, i8* %4, align 1, !dbg !15875
  %12 = and i8 %11, 127, !dbg !15875
  store i8 %12, i8* %4, align 1, !dbg !15875
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !15876
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15878
  store i8 %9, i8* %8, align 2, !dbg !15879
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #23, !dbg !15880
  %13 = load i8, i8* %4, align 1, !dbg !15882
  %14 = or i8 %13, -128, !dbg !15882
  store i8 %14, i8* %4, align 1, !dbg !15882
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #23, !dbg !15885
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !15885
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15887
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14925, metadata !DIExpression()) #23, !dbg !15885
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15888
  br i1 %16, label %26, label %17, !dbg !15887

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14925, metadata !DIExpression()) #23, !dbg !15885
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15889
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14925, metadata !DIExpression()) #23, !dbg !15885
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15890
  %21 = icmp sgt i32 %20, 0, !dbg !15891
  br i1 %21, label %22, label %23, !dbg !15892

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15893
  br label %27, !dbg !15894

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15888
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14925, metadata !DIExpression()) #23, !dbg !15885
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15888
  br i1 %25, label %26, label %17, !dbg !15887, !llvm.loop !15895

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15897
  br label %27, !dbg !15898

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15899
  br label %29, !dbg !15900

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15901
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15862
  call void @llvm.dbg.value(metadata i32 %30, metadata !14730, metadata !DIExpression()) #23, !dbg !15864
  call void @llvm.dbg.value(metadata i32 %30, metadata !14724, metadata !DIExpression()) #23, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %30, metadata !15857, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #23, !dbg !15905
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !15907, !srcloc !14759
  call void @llvm.dbg.value(metadata i8 poison, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15855, metadata !DIExpression()), !dbg !15859
  ret i1 %6, !dbg !15908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15913, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata i32 %1, metadata !15914, metadata !DIExpression()), !dbg !15916
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15917
  call void @llvm.dbg.value(metadata i1 %3, metadata !15915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15916
  br i1 %3, label %4, label %12, !dbg !15918

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15920
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15921
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15921
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15921
  %9 = load i8, i8* %8, align 1, !dbg !15921
  %10 = icmp eq i8 %9, 0, !dbg !15922
  br i1 %10, label %11, label %12, !dbg !15923

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15924
  br label %12, !dbg !15926

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15928 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15930, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15934
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15936, !srcloc !14733
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15936
  call void @llvm.dbg.value(metadata i32 %2, metadata !14730, metadata !DIExpression()) #23, !dbg !15938
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15938
  call void @llvm.dbg.value(metadata i32 %2, metadata !14724, metadata !DIExpression()) #23, !dbg !15934
  call void @llvm.dbg.value(metadata i32 %2, metadata !15932, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15930, metadata !DIExpression()), !dbg !15933
  tail call fastcc void @z_sched_lock() #24, !dbg !15939
  call void @llvm.dbg.value(metadata i32 %2, metadata !14745, metadata !DIExpression()) #23, !dbg !15942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15942
  call void @llvm.dbg.value(metadata i32 %2, metadata !14753, metadata !DIExpression()) #23, !dbg !15944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15946, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15930, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15930, metadata !DIExpression()), !dbg !15933
  ret void, !dbg !15947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15948 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15949
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15950
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15950
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15950
  %5 = load i8, i8* %4, align 1, !dbg !15951
  %6 = add i8 %5, -1, !dbg !15951
  store i8 %6, i8* %4, align 1, !dbg !15951
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15952, !srcloc !15954
  ret void, !dbg !15955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15956 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15958, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !15962
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15964, !srcloc !14733
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %2, metadata !14730, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %2, metadata !14724, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %2, metadata !15960, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15958, metadata !DIExpression()), !dbg !15961
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15967
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15970
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15970
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15970
  %7 = load i8, i8* %6, align 1, !dbg !15971
  %8 = add i8 %7, 1, !dbg !15971
  store i8 %8, i8* %6, align 1, !dbg !15971
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15972
  call void @llvm.dbg.value(metadata i32 %2, metadata !14745, metadata !DIExpression()) #23, !dbg !15973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15973
  call void @llvm.dbg.value(metadata i32 %2, metadata !14753, metadata !DIExpression()) #23, !dbg !15975
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15977, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15958, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15958, metadata !DIExpression()), !dbg !15961
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15978
  ret void, !dbg !15979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !15980 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15981
  ret %struct.k_thread* %1, !dbg !15982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15983 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15987, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15988, metadata !DIExpression()), !dbg !15992
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15993
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15989, metadata !DIExpression()), !dbg !15992
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15994
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15990, metadata !DIExpression()), !dbg !15992
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15995
  call void @llvm.dbg.value(metadata i32 %5, metadata !15991, metadata !DIExpression()), !dbg !15992
  %6 = icmp sgt i32 %5, 0, !dbg !15996
  br i1 %6, label %17, label %7, !dbg !15998

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15999
  br i1 %8, label %17, label %9, !dbg !16001

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16002
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16002
  %12 = load i32, i32* %11, align 8, !dbg !16002
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16004
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16004
  %15 = load i32, i32* %14, align 8, !dbg !16004
  %16 = icmp ult i32 %12, %15, !dbg !16005
  br label %17, !dbg !16006

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16007
  ret i1 %18, !dbg !16008
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16009 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16026, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16027, metadata !DIExpression()), !dbg !16041
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16042
  %5 = load i32, i32* %4, align 4, !dbg !16043
  %6 = add nsw i32 %5, 1, !dbg !16043
  store i32 %6, i32* %4, align 4, !dbg !16043
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16044
  store i32 %5, i32* %7, align 8, !dbg !16045
  %8 = load i32, i32* %4, align 4, !dbg !16046
  %9 = icmp eq i32 %8, 0, !dbg !16047
  br i1 %9, label %10, label %32, !dbg !16048

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16049
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16049
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16029, metadata !DIExpression()), !dbg !16049
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16049
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16049
  %14 = load i32, i32* %13, align 4, !dbg !16049
  %15 = shl i32 %14, 2, !dbg !16049
  %16 = alloca i8, i32 %15, align 8, !dbg !16049
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16049
  store i8* %16, i8** %17, align 4, !dbg !16049
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16049
  %19 = alloca i8, i32 %14, align 8, !dbg !16049
  store i8* %19, i8** %18, align 4, !dbg !16049
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16049
  store i32 -1, i32* %20, align 4, !dbg !16049
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16050
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16038, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16028, metadata !DIExpression()), !dbg !16041
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16052
  br i1 %22, label %23, label %24, !dbg !16049

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16052
  br label %32, !dbg !16053

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16028, metadata !DIExpression()), !dbg !16041
  %26 = load i32, i32* %4, align 4, !dbg !16054
  %27 = add nsw i32 %26, 1, !dbg !16054
  store i32 %27, i32* %4, align 4, !dbg !16054
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16056
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16056
  store i32 %26, i32* %29, align 8, !dbg !16057
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16050
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16038, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16028, metadata !DIExpression()), !dbg !16041
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16052
  br i1 %31, label %23, label %24, !dbg !16049, !llvm.loop !16058

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16060
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16061
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16062
  ret void, !dbg !16063
}

; Function Attrs: optsize
declare !dbg !16064 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16069 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16072 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16074, metadata !DIExpression()), !dbg !16076
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16075, metadata !DIExpression()), !dbg !16076
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16077
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16078
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16079
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16080
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16080
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16082
  br i1 %7, label %8, label %10, !dbg !16083

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16084
  store i32 0, i32* %9, align 4, !dbg !16086
  br label %10, !dbg !16087

10:                                               ; preds = %8, %2
  ret void, !dbg !16088
}

; Function Attrs: optsize
declare !dbg !16089 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16090 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16094, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16095, metadata !DIExpression()), !dbg !16097
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16098
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16099
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16096, metadata !DIExpression()), !dbg !16097
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16095, metadata !DIExpression()), !dbg !16097
  ret %struct.k_thread* %4, !dbg !16100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16101 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16105, metadata !DIExpression()), !dbg !16106
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16107
  ret %struct.rbnode* %2, !dbg !16108
}

; Function Attrs: optsize
declare !dbg !16109 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16112 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16124, metadata !DIExpression()), !dbg !16128
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16129
  %3 = load i32, i32* %2, align 4, !dbg !16129
  %4 = icmp eq i32 %3, 0, !dbg !16131
  br i1 %4, label %10, label %5, !dbg !16132

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16125, metadata !DIExpression()), !dbg !16128
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16133, !range !8185
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16134
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16126, metadata !DIExpression()), !dbg !16128
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16135
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16127, metadata !DIExpression()), !dbg !16128
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16125, metadata !DIExpression()), !dbg !16128
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16128
  ret %struct.k_thread* %11, !dbg !16136
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16137 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16141, metadata !DIExpression()), !dbg !16144
  call void @llvm.dbg.value(metadata i32 0, metadata !16142, metadata !DIExpression()), !dbg !16144
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16145
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16143, metadata !DIExpression()), !dbg !16144
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16146
  br i1 %3, label %8, label %4, !dbg !16147

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16148
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16150
  call void @llvm.dbg.value(metadata i32 1, metadata !16142, metadata !DIExpression()), !dbg !16144
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16145
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16143, metadata !DIExpression()), !dbg !16144
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16146
  br i1 %7, label %8, label %4, !dbg !16147, !llvm.loop !16151

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16144
  ret i32 %9, !dbg !16153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !16154 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16156, metadata !DIExpression()), !dbg !16157
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16158
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16159
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16160
  ret %struct.k_thread* %4, !dbg !16161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !16162 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16171, metadata !DIExpression()), !dbg !16172
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16173
  tail call fastcc void @sys_dlist_init.233(%struct._dnode* noundef nonnull %2) #24, !dbg !16174
  ret void, !dbg !16175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.233(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !16176 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16180, metadata !DIExpression()), !dbg !16181
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16182
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16183
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16184
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16185
  ret void, !dbg !16186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16187 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16188
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16189
  ret void, !dbg !16190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16196, metadata !DIExpression()), !dbg !16197
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16198
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16198
  %4 = load i8, i8* %3, align 2, !dbg !16198
  %5 = sext i8 %4 to i32, !dbg !16199
  ret i32 %5, !dbg !16200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16205, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata i32 %1, metadata !16206, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16207, metadata !DIExpression()), !dbg !16208
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16209
  ret void, !dbg !16210
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16211 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16212
  br i1 %1, label %8, label %2, !dbg !16213

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16214
  br i1 %3, label %8, label %4, !dbg !16215

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16216
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16217
  %7 = xor i1 %6, true, !dbg !16215
  br label %8, !dbg !16215

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !16219 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16220, !range !7374
  %2 = icmp eq i8 %1, 0, !dbg !16220
  ret i1 %2, !dbg !16221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16222 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !16225
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16227, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #23, !dbg !16229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !16229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #23, !dbg !16225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16224, metadata !DIExpression()), !dbg !16230
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16231
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14887, metadata !DIExpression()) #23, !dbg !16234
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16236
  %4 = load i8, i8* %3, align 1, !dbg !16237
  %5 = and i8 %4, 127, !dbg !16237
  store i8 %5, i8* %3, align 1, !dbg !16237
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14895, metadata !DIExpression()) #23, !dbg !16238
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16240
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16241
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14904, metadata !DIExpression()) #23, !dbg !16242
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16244
  %8 = load i8, i8* %7, align 1, !dbg !16245
  %9 = or i8 %8, -128, !dbg !16245
  store i8 %9, i8* %7, align 1, !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14911, metadata !DIExpression()) #23, !dbg !16246
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #23, !dbg !16248
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14924, metadata !DIExpression()) #23, !dbg !16248
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16250
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14925, metadata !DIExpression()) #23, !dbg !16248
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16251
  br i1 %11, label %22, label %12, !dbg !16250

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14925, metadata !DIExpression()) #23, !dbg !16248
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16252
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14925, metadata !DIExpression()) #23, !dbg !16248
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16253
  %16 = icmp sgt i32 %15, 0, !dbg !16254
  br i1 %16, label %17, label %19, !dbg !16255

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16256
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16257
  br label %24, !dbg !16258

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16251
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14925, metadata !DIExpression()) #23, !dbg !16248
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16251
  br i1 %21, label %22, label %12, !dbg !16250, !llvm.loop !16259

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16261
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16262
  br label %24, !dbg !16263

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16227
  call void @llvm.dbg.value(metadata i32 %25, metadata !14730, metadata !DIExpression()) #23, !dbg !16229
  call void @llvm.dbg.value(metadata i32 %25, metadata !14724, metadata !DIExpression()) #23, !dbg !16225
  call void @llvm.dbg.value(metadata i32 %25, metadata !16224, metadata !DIExpression()), !dbg !16230
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16264
  call void @llvm.dbg.value(metadata i32 undef, metadata !15329, metadata !DIExpression()) #23, !dbg !16265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #23, !dbg !16265
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16267
  ret void, !dbg !16268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16269 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16273, metadata !DIExpression()), !dbg !16276
  %3 = icmp eq i64 %2, -1, !dbg !16277
  br i1 %3, label %4, label %6, !dbg !16279

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16280
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !16282
  br label %11, !dbg !16283

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16274, metadata !DIExpression()), !dbg !16276
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16284
  %8 = sext i32 %7 to i64, !dbg !16284
  call void @llvm.dbg.value(metadata i64 %8, metadata !16274, metadata !DIExpression()), !dbg !16276
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !16285
  %10 = trunc i64 %9 to i32, !dbg !16285
  call void @llvm.dbg.value(metadata i32 %10, metadata !16275, metadata !DIExpression()), !dbg !16276
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16276
  ret i32 %12, !dbg !16286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16291, metadata !DIExpression()), !dbg !16292
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16293, !srcloc !16295
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16296
  ret void, !dbg !16297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16298 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16302, metadata !DIExpression()), !dbg !16306
  %2 = icmp eq i64 %0, 0, !dbg !16307
  br i1 %2, label %3, label %4, !dbg !16309

3:                                                ; preds = %1
  tail call fastcc void @k_yield.240() #24, !dbg !16310
  br label %29, !dbg !16312

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16304, metadata !DIExpression()), !dbg !16306
  %5 = icmp sgt i64 %0, -3, !dbg !16313
  br i1 %5, label %6, label %10, !dbg !16315

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16316
  %8 = trunc i64 %0 to i32, !dbg !16318
  %9 = add i32 %7, %8, !dbg !16318
  call void @llvm.dbg.value(metadata i32 %9, metadata !16303, metadata !DIExpression()), !dbg !16306
  br label %13, !dbg !16319

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16320
  %12 = sub i32 -2, %11, !dbg !16320
  call void @llvm.dbg.value(metadata i32 %12, metadata !16303, metadata !DIExpression()), !dbg !16306
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16322
  call void @llvm.dbg.value(metadata i32 %14, metadata !16303, metadata !DIExpression()), !dbg !16306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !16323
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16325, !srcloc !14733
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16325
  call void @llvm.dbg.value(metadata i32 %16, metadata !14730, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %16, metadata !14724, metadata !DIExpression()) #23, !dbg !16323
  call void @llvm.dbg.value(metadata i32 %16, metadata !16305, metadata !DIExpression()), !dbg !16306
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16328
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16329
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !16330
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16331
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16332
  tail call fastcc void @z_add_thread_timeout.226(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !16332
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16333
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !16334
  call void @llvm.dbg.value(metadata i32 %16, metadata !15329, metadata !DIExpression()) #23, !dbg !16335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #23, !dbg !16335
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16337
  %22 = zext i32 %14 to i64, !dbg !16338
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16339
  %24 = zext i32 %23 to i64, !dbg !16339
  %25 = sub nsw i64 %22, %24, !dbg !16340
  call void @llvm.dbg.value(metadata i64 %25, metadata !16302, metadata !DIExpression()), !dbg !16306
  %26 = icmp sgt i64 %25, 0, !dbg !16341
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16341
  %28 = trunc i64 %27 to i32, !dbg !16341
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16306
  ret i32 %30, !dbg !16342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16343 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16345, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i64 %0, metadata !14765, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i32 10000, metadata !14768, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i32 1000, metadata !14769, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i8 1, metadata !14770, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i1 false, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16347
  call void @llvm.dbg.value(metadata i1 false, metadata !14772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16347
  call void @llvm.dbg.value(metadata i8 0, metadata !14773, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i1 false, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16347
  call void @llvm.dbg.value(metadata i1 true, metadata !14775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16347
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i64 %0, metadata !14765, metadata !DIExpression()), !dbg !16347
  %2 = udiv i64 %0, 10, !dbg !16349
  ret i64 %2, !dbg !16353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield.240() unnamed_addr #1 !dbg !16354 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16355, !srcloc !16357
  tail call void @z_impl_k_yield() #24, !dbg !16358
  ret void, !dbg !16359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16364, metadata !DIExpression()), !dbg !16366
  %2 = sext i32 %0 to i64, !dbg !16367
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16368
  call void @llvm.dbg.value(metadata i64 %3, metadata !16365, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  %4 = shl i64 %3, 32, !dbg !16369
  %5 = ashr exact i64 %4, 32, !dbg !16369
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %6, metadata !16365, metadata !DIExpression()), !dbg !16366
  %7 = sext i32 %6 to i64, !dbg !16371
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16372
  %9 = trunc i64 %8 to i32, !dbg !16372
  ret i32 %9, !dbg !16373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16374 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16376, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i64 %0, metadata !14765, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14768, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i32 10000, metadata !14769, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i8 1, metadata !14770, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i1 false, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16378
  call void @llvm.dbg.value(metadata i1 true, metadata !14772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16378
  call void @llvm.dbg.value(metadata i8 0, metadata !14773, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i1 false, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16378
  call void @llvm.dbg.value(metadata i1 true, metadata !14775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16378
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16378
  %2 = add i64 %0, 99, !dbg !16380
  call void @llvm.dbg.value(metadata i64 %2, metadata !14765, metadata !DIExpression()), !dbg !16378
  %3 = udiv i64 %2, 100, !dbg !16381
  ret i64 %3, !dbg !16382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16383 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16385, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i64 %0, metadata !14765, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 10000, metadata !14768, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14769, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i8 1, metadata !14770, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i8 0, metadata !14773, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i1 true, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16387
  %2 = mul i64 %0, 100, !dbg !16389
  ret i64 %2, !dbg !16391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16394, metadata !DIExpression()), !dbg !16395
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16396
  br i1 %2, label %14, label %3, !dbg !16398

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16399
  %5 = icmp slt i32 %4, 0, !dbg !16401
  br i1 %5, label %6, label %10, !dbg !16402

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16403
  %8 = load i8, i8* %7, align 1, !dbg !16403
  %9 = icmp eq i8 %8, 16, !dbg !16406
  br i1 %9, label %10, label %14, !dbg !16407

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16408
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16409
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16410, !srcloc !15369
  call void @llvm.dbg.value(metadata i32 %11, metadata !15365, metadata !DIExpression()) #23, !dbg !16414
  %12 = icmp eq i32 %11, 0, !dbg !16415
  br i1 %12, label %13, label %14, !dbg !16416

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16417
  br label %14, !dbg !16419

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16421 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16423, metadata !DIExpression()), !dbg !16424
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16425
  %3 = load i8, i8* %2, align 1, !dbg !16425
  %4 = and i8 %3, 2, !dbg !16426
  %5 = icmp ne i8 %4, 0, !dbg !16427
  ret i1 %5, !dbg !16428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !16429 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16434
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16433, metadata !DIExpression()), !dbg !16435
  ret %struct.k_thread* %1, !dbg !16436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16437 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16438, !srcloc !15369
  call void @llvm.dbg.value(metadata i32 %1, metadata !15365, metadata !DIExpression()) #23, !dbg !16441
  %2 = icmp eq i32 %1, 0, !dbg !16442
  br i1 %2, label %3, label %8, !dbg !16443

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16444
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16445
  %6 = icmp ne i32 %5, 0, !dbg !16443
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16446
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16449, metadata !DIExpression()), !dbg !16451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !16452
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16454, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16454
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #23, !dbg !16456
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !16456
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #23, !dbg !16452
  call void @llvm.dbg.value(metadata i32 %3, metadata !16450, metadata !DIExpression()), !dbg !16451
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16457
  %5 = load i8, i8* %4, align 4, !dbg !16457
  %6 = and i8 %5, 1, !dbg !16459
  %7 = icmp eq i8 %6, 0, !dbg !16460
  br i1 %7, label %9, label %8, !dbg !16461

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !16462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !16462
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !16465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16467, !srcloc !14759
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !16468, !srcloc !16470
  br label %24, !dbg !16471

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16472
  %11 = load i8, i8* %10, align 1, !dbg !16472
  %12 = and i8 %11, 8, !dbg !16474
  %13 = icmp eq i8 %12, 0, !dbg !16475
  br i1 %13, label %15, label %14, !dbg !16476

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !16477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !16480
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16482, !srcloc !14759
  br label %24, !dbg !16483

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16484
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16485
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16487
  br i1 %17, label %18, label %23, !dbg !16488

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16489, !srcloc !15369
  call void @llvm.dbg.value(metadata i32 %19, metadata !15365, metadata !DIExpression()) #23, !dbg !16492
  %20 = icmp eq i32 %19, 0, !dbg !16493
  br i1 %20, label %21, label %23, !dbg !16494

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15329, metadata !DIExpression()) #23, !dbg !16495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #23, !dbg !16495
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16498
  br label %23, !dbg !16499

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #23, !dbg !16502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16504, !srcloc !14759
  br label %24, !dbg !16505

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16508, metadata !DIExpression()), !dbg !16509
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16510
  %3 = load i8, i8* %2, align 1, !dbg !16510
  %4 = and i8 %3, 8, !dbg !16512
  %5 = icmp eq i8 %4, 0, !dbg !16513
  br i1 %5, label %6, label %20, !dbg !16514

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16515
  %8 = or i8 %7, 8, !dbg !16515
  store i8 %8, i8* %2, align 1, !dbg !16515
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16517
  br i1 %9, label %10, label %12, !dbg !16519

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !16520
  %11 = and i8 %8, 95, !dbg !16523
  store i8 %11, i8* %2, align 1, !dbg !16523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !16524
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16526
  br label %12, !dbg !16527

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16528
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16528
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16530
  br i1 %15, label %17, label %16, !dbg !16531

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16532
  br label %17, !dbg !16534

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16535
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16536
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16537
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16538
  br label %20, !dbg !16539

20:                                               ; preds = %17, %1
  ret void, !dbg !16540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16541 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16545, metadata !DIExpression()), !dbg !16547
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16548
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16546, metadata !DIExpression()), !dbg !16547
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16549
  br i1 %3, label %10, label %4, !dbg !16550

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16551
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16553
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16554, metadata !DIExpression()), !dbg !16560
  call void @llvm.dbg.value(metadata i32 0, metadata !16559, metadata !DIExpression()), !dbg !16560
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16562
  store i32 0, i32* %7, align 4, !dbg !16563
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16564
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16548
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16546, metadata !DIExpression()), !dbg !16547
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16549
  br i1 %9, label %10, label %4, !dbg !16550, !llvm.loop !16565

10:                                               ; preds = %4, %1
  ret void, !dbg !16567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16568 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16573, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16572, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !16577
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16579, !srcloc !14733
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16579
  call void @llvm.dbg.value(metadata i32 %4, metadata !14730, metadata !DIExpression()) #23, !dbg !16581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !16581
  call void @llvm.dbg.value(metadata i32 %4, metadata !14724, metadata !DIExpression()) #23, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %4, metadata !16574, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata i32 0, metadata !16575, metadata !DIExpression()), !dbg !16576
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16582
  %6 = load i8, i8* %5, align 1, !dbg !16582
  %7 = and i8 %6, 8, !dbg !16584
  %8 = icmp eq i8 %7, 0, !dbg !16585
  br i1 %8, label %9, label %24, !dbg !16586

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16573, metadata !DIExpression()), !dbg !16576
  %11 = icmp eq i64 %10, 0, !dbg !16587
  br i1 %11, label %24, label %12, !dbg !16589

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16590
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16592
  br i1 %14, label %24, label %15, !dbg !16593

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16594
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !16594
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16595
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !16596
  br i1 %19, label %24, label %20, !dbg !16597

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16598
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !16600
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16601
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !16602
  call void @llvm.dbg.value(metadata i32 %4, metadata !15329, metadata !DIExpression()) #23, !dbg !16603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #23, !dbg !16603
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16605
  call void @llvm.dbg.value(metadata i32 %23, metadata !16575, metadata !DIExpression()), !dbg !16576
  br label %26, !dbg !16606

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16607
  call void @llvm.dbg.value(metadata i32 %25, metadata !16575, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata i32 %4, metadata !14745, metadata !DIExpression()) #23, !dbg !16608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !16608
  call void @llvm.dbg.value(metadata i32 %4, metadata !14753, metadata !DIExpression()) #23, !dbg !16610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16612, !srcloc !14759
  br label %26, !dbg !16613

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16576
  ret i32 %27, !dbg !16614
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16615 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16619, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 %1, metadata !16620, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i8* %2, metadata !16621, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i8 0, metadata !16623, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 0, metadata !16624, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #23, !dbg !16629
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16631, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #23, !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16626, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i8 poison, metadata !16623, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !16624, metadata !DIExpression()), !dbg !16628
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !16634
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16622, metadata !DIExpression()), !dbg !16627
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16637
  br i1 %7, label %12, label %8, !dbg !16639

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16640, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i32 %1, metadata !16646, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i8* %2, metadata !16647, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16554, metadata !DIExpression()), !dbg !16651
  call void @llvm.dbg.value(metadata i32 %1, metadata !16559, metadata !DIExpression()), !dbg !16651
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16653
  store i32 %1, i32* %9, align 4, !dbg !16654
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16655
  store i8* %2, i8** %10, align 4, !dbg !16656
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16657
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16658
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !16659
  call void @llvm.dbg.value(metadata i8 1, metadata !16623, metadata !DIExpression()), !dbg !16627
  br label %12, !dbg !16660

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16631
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16631
  call void @llvm.dbg.value(metadata i32 %14, metadata !14730, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata i32 %14, metadata !14724, metadata !DIExpression()) #23, !dbg !16629
  call void @llvm.dbg.value(metadata i32 %14, metadata !16626, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i8 poison, metadata !16623, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #23, !dbg !16661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #23, !dbg !16661
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #23, !dbg !16663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16665, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 undef, metadata !16624, metadata !DIExpression()), !dbg !16628
  ret i1 %13, !dbg !16666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16667 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16673, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata i64 undef, metadata !16675, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16672, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16674, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata i8** %4, metadata !16676, metadata !DIExpression()), !dbg !16678
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16679
  call void @llvm.dbg.value(metadata i32 %6, metadata !16677, metadata !DIExpression()), !dbg !16678
  %7 = icmp eq i8** %4, null, !dbg !16680
  br i1 %7, label %12, label %8, !dbg !16682

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16683
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16685
  %11 = load i8*, i8** %10, align 4, !dbg !16685
  store i8* %11, i8** %4, align 4, !dbg !16686
  br label %12, !dbg !16687

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16688
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16689 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16691
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16692
  ret void, !dbg !16693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16694 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16704, metadata !DIExpression()), !dbg !16721
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16702, metadata !DIExpression()), !dbg !16721
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16703, metadata !DIExpression()), !dbg !16721
  %5 = icmp eq i64 %4, -1, !dbg !16722
  br i1 %5, label %55, label %6, !dbg !16724

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16725
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16726
  call void @llvm.dbg.value(metadata i32 0, metadata !16705, metadata !DIExpression()), !dbg !16727
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !16735
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16737, !srcloc !16743
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16737
  call void @llvm.dbg.value(metadata i32 %9, metadata !16740, metadata !DIExpression()) #23, !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !16744
  call void @llvm.dbg.value(metadata i32 %9, metadata !16734, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata i32 %9, metadata !16711, metadata !DIExpression()), !dbg !16727
  call void @llvm.dbg.value(metadata i32 undef, metadata !16705, metadata !DIExpression()), !dbg !16727
  %10 = icmp slt i64 %4, -1, !dbg !16745
  br i1 %10, label %11, label %17, !dbg !16746

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16747
  %13 = add i64 %4, %12, !dbg !16748
  %14 = sub i64 -2, %13, !dbg !16748
  call void @llvm.dbg.value(metadata i64 %14, metadata !16715, metadata !DIExpression()), !dbg !16749
  %15 = icmp sgt i64 %14, 1, !dbg !16750
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16750
  br label %22, !dbg !16751

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16752
  %19 = tail call fastcc i32 @elapsed.249() #24, !dbg !16754
  %20 = sext i32 %19 to i64, !dbg !16754
  %21 = add nsw i64 %18, %20, !dbg !16755
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16756
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16757
  store i64 %23, i64* %24, align 8, !dbg !16758
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !16759
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16712, metadata !DIExpression()), !dbg !16761
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16762
  br i1 %26, label %42, label %27, !dbg !16762

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16763
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16712, metadata !DIExpression()), !dbg !16761
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16767
  %31 = load i64, i64* %30, align 8, !dbg !16767
  %32 = icmp slt i64 %28, %31, !dbg !16768
  br i1 %32, label %33, label %38, !dbg !16769

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16767
  %35 = sub nsw i64 %31, %28, !dbg !16770
  store i64 %35, i64* %34, align 8, !dbg !16770
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16772
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16773
  tail call fastcc void @sys_dlist_insert.250(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !16774
  br label %44, !dbg !16775

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16776
  store i64 %39, i64* %24, align 8, !dbg !16776
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !16777
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16712, metadata !DIExpression()), !dbg !16761
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16762
  br i1 %41, label %42, label %27, !dbg !16762, !llvm.loop !16778

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16780
  tail call fastcc void @sys_dlist_append.251(%struct._dnode* noundef %43) #24, !dbg !16783
  br label %44, !dbg !16784

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !16785
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16786
  br i1 %46, label %47, label %54, !dbg !16787

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %48, metadata !16718, metadata !DIExpression()), !dbg !16789
  %49 = icmp ne i32 %48, 0, !dbg !16790
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16792
  br i1 %52, label %54, label %53, !dbg !16792

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16793
  br label %54, !dbg !16795

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16796, metadata !DIExpression()) #23, !dbg !16802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !16802
  call void @llvm.dbg.value(metadata i32 %9, metadata !16804, metadata !DIExpression()) #23, !dbg !16807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16809, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !16705, metadata !DIExpression()), !dbg !16727
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.249() unnamed_addr #1 !dbg !16812 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16815
  %2 = icmp eq i32 %1, 0, !dbg !16816
  br i1 %2, label %3, label %5, !dbg !16815

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16817
  br label %5, !dbg !16815

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16815
  ret i32 %6, !dbg !16818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16819 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.254() #24, !dbg !16825
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16823, metadata !DIExpression()), !dbg !16826
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16827
  ret %struct._timeout* %2, !dbg !16828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.250(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16829 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16833, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16834, metadata !DIExpression()), !dbg !16837
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16838
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16838
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16835, metadata !DIExpression()), !dbg !16837
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16839
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16840
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16841
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16842
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16843
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16844
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16845
  ret void, !dbg !16846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16847 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16851, metadata !DIExpression()), !dbg !16853
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16854
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.252(%struct._dnode* noundef %2) #24, !dbg !16855
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16852, metadata !DIExpression()), !dbg !16853
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16856
  ret %struct._timeout* %4, !dbg !16857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.251(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16858 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16863, metadata !DIExpression()), !dbg !16866
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16864, metadata !DIExpression()), !dbg !16866
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16867
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16865, metadata !DIExpression()), !dbg !16866
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16868
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16869
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16870
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16871
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16872
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16873
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16874
  ret void, !dbg !16875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16876 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16881
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16878, metadata !DIExpression()), !dbg !16882
  %2 = tail call fastcc i32 @elapsed.249() #24, !dbg !16883
  call void @llvm.dbg.value(metadata i32 %2, metadata !16879, metadata !DIExpression()), !dbg !16882
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16884
  br i1 %3, label %14, label %4, !dbg !16886

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16887
  %6 = load i64, i64* %5, align 8, !dbg !16887
  %7 = sext i32 %2 to i64, !dbg !16888
  %8 = sub nsw i64 %6, %7, !dbg !16889
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16890
  br i1 %9, label %14, label %10, !dbg !16891

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16892
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16892
  %13 = trunc i64 %12 to i32, !dbg !16892
  call void @llvm.dbg.value(metadata i32 %13, metadata !16880, metadata !DIExpression()), !dbg !16882
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16894
  call void @llvm.dbg.value(metadata i32 %15, metadata !16880, metadata !DIExpression()), !dbg !16882
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16895
  %17 = icmp ne i32 %16, 0, !dbg !16897
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16898
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16898
  call void @llvm.dbg.value(metadata i32 %20, metadata !16880, metadata !DIExpression()), !dbg !16882
  ret i32 %20, !dbg !16899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.252(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16900 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16904, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16905, metadata !DIExpression()), !dbg !16906
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16907
  br i1 %2, label %5, label %3, !dbg !16908

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.253(%struct._dnode* noundef nonnull %0) #24, !dbg !16909
  br label %5, !dbg !16908

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16908
  ret %struct._dnode* %6, !dbg !16910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.253(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16911 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16913, metadata !DIExpression()), !dbg !16915
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16914, metadata !DIExpression()), !dbg !16915
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16916
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16917
  br i1 %3, label %7, label %4, !dbg !16918

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16919
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16919
  br label %7, !dbg !16918

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16918
  ret %struct._dnode* %8, !dbg !16920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.254() unnamed_addr #10 !dbg !16921 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16925, metadata !DIExpression()), !dbg !16926
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.255() #24, !dbg !16927
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16927
  ret %struct._dnode* %3, !dbg !16928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.255() unnamed_addr #10 !dbg !16929 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16933, metadata !DIExpression()), !dbg !16934
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16935
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16936
  ret i1 %2, !dbg !16937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16938 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16942, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 -22, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 0, metadata !16944, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !16949
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16951, !srcloc !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #23, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16946, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i32 -22, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16948
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16943, metadata !DIExpression()), !dbg !16947
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.258(%struct._dnode* noundef %3) #24, !dbg !16954
  br i1 %4, label %5, label %6, !dbg !16958

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16959
  call void @llvm.dbg.value(metadata i32 0, metadata !16943, metadata !DIExpression()), !dbg !16947
  br label %6, !dbg !16961

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16947
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %8, metadata !16740, metadata !DIExpression()) #23, !dbg !16953
  call void @llvm.dbg.value(metadata i32 %8, metadata !16734, metadata !DIExpression()) #23, !dbg !16949
  call void @llvm.dbg.value(metadata i32 %8, metadata !16946, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i32 %7, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !16962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16804, metadata !DIExpression()) #23, !dbg !16964
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16966, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16948
  ret i32 %7, !dbg !16967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.258(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16968 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16974, metadata !DIExpression()), !dbg !16975
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16976
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16976
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16977
  ret i1 %4, !dbg !16978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !16979 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16981, metadata !DIExpression()), !dbg !16982
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16983
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16985
  br i1 %3, label %10, label %4, !dbg !16986

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16987
  %6 = load i64, i64* %5, align 8, !dbg !16987
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16989
  %8 = load i64, i64* %7, align 8, !dbg !16990
  %9 = add nsw i64 %8, %6, !dbg !16990
  store i64 %9, i64* %7, align 8, !dbg !16990
  br label %10, !dbg !16991

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16992
  tail call fastcc void @sys_dlist_remove.259(%struct._dnode* noundef %11) #24, !dbg !16993
  ret void, !dbg !16994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.259(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16995 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16999, metadata !DIExpression()), !dbg !17002
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17003
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17003
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17000, metadata !DIExpression()), !dbg !17002
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17004
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17004
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17001, metadata !DIExpression()), !dbg !17002
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17005
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17006
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17007
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17008
  tail call fastcc void @sys_dnode_init.260(%struct._dnode* noundef %0) #24, !dbg !17009
  ret void, !dbg !17010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.260(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17011 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17013, metadata !DIExpression()), !dbg !17014
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17015
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17016
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17017
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17018
  ret void, !dbg !17019
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17020 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17026, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i64 0, metadata !17027, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 0, metadata !17028, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !17033
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17035, !srcloc !16743
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17035
  call void @llvm.dbg.value(metadata i32 %3, metadata !16740, metadata !DIExpression()) #23, !dbg !17037
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !17037
  call void @llvm.dbg.value(metadata i32 %3, metadata !16734, metadata !DIExpression()) #23, !dbg !17033
  call void @llvm.dbg.value(metadata i32 %3, metadata !17030, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i64 0, metadata !17027, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()), !dbg !17032
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17038
  call void @llvm.dbg.value(metadata i64 %4, metadata !17027, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 %3, metadata !16796, metadata !DIExpression()) #23, !dbg !17041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !17041
  call void @llvm.dbg.value(metadata i32 %3, metadata !16804, metadata !DIExpression()) #23, !dbg !17043
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17045, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()), !dbg !17032
  ret i64 %4, !dbg !17046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17047 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17049, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i64 0, metadata !17050, metadata !DIExpression()), !dbg !17053
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.261(%struct._timeout* noundef %0) #24, !dbg !17054
  br i1 %2, label %21, label %3, !dbg !17056

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17057
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17051, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i64 0, metadata !17050, metadata !DIExpression()), !dbg !17053
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17059
  br i1 %5, label %16, label %6, !dbg !17061

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17051, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i64 %8, metadata !17050, metadata !DIExpression()), !dbg !17053
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17062
  %10 = load i64, i64* %9, align 8, !dbg !17062
  %11 = add nsw i64 %10, %8, !dbg !17064
  call void @llvm.dbg.value(metadata i64 %11, metadata !17050, metadata !DIExpression()), !dbg !17053
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17065
  br i1 %12, label %16, label %13, !dbg !17067

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17068
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17051, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i64 %11, metadata !17050, metadata !DIExpression()), !dbg !17053
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17059
  br i1 %15, label %16, label %6, !dbg !17061, !llvm.loop !17069

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17053
  call void @llvm.dbg.value(metadata i64 %17, metadata !17050, metadata !DIExpression()), !dbg !17053
  %18 = tail call fastcc i32 @elapsed.249() #24, !dbg !17071
  %19 = sext i32 %18 to i64, !dbg !17071
  %20 = sub nsw i64 %17, %19, !dbg !17072
  br label %21, !dbg !17073

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17053
  ret i64 %22, !dbg !17074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.261(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17075 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17079, metadata !DIExpression()), !dbg !17080
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17081
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.258(%struct._dnode* noundef %2) #24, !dbg !17082
  %4 = xor i1 %3, true, !dbg !17083
  ret i1 %4, !dbg !17084
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17085 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17087, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i64 0, metadata !17088, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i32 0, metadata !17089, metadata !DIExpression()), !dbg !17093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !17094
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17096, !srcloc !16743
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17096
  call void @llvm.dbg.value(metadata i32 %3, metadata !16740, metadata !DIExpression()) #23, !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !17098
  call void @llvm.dbg.value(metadata i32 %3, metadata !16734, metadata !DIExpression()) #23, !dbg !17094
  call void @llvm.dbg.value(metadata i32 %3, metadata !17091, metadata !DIExpression()), !dbg !17093
  call void @llvm.dbg.value(metadata i64 0, metadata !17088, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17093
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17099
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17102
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17088, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17092
  call void @llvm.dbg.value(metadata i32 %3, metadata !16796, metadata !DIExpression()) #23, !dbg !17103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %3, metadata !16804, metadata !DIExpression()) #23, !dbg !17105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17107, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17093
  %6 = add i64 %5, %4, !dbg !17108
  ret i64 %6, !dbg !17109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17110 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 0, metadata !17113, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !17118
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17120, !srcloc !16743
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17120
  call void @llvm.dbg.value(metadata i32 %2, metadata !16740, metadata !DIExpression()) #23, !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !17122
  call void @llvm.dbg.value(metadata i32 %2, metadata !16734, metadata !DIExpression()) #23, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %2, metadata !17115, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i32 -1, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !17113, metadata !DIExpression()), !dbg !17117
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !17123
  call void @llvm.dbg.value(metadata i32 %3, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 %2, metadata !16796, metadata !DIExpression()) #23, !dbg !17126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !17126
  call void @llvm.dbg.value(metadata i32 %2, metadata !16804, metadata !DIExpression()) #23, !dbg !17128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17130, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17113, metadata !DIExpression()), !dbg !17117
  ret i32 %3, !dbg !17131
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17134, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i1 %1, metadata !17135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17144
  call void @llvm.dbg.value(metadata i32 0, metadata !17136, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !17146
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17148, !srcloc !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #23, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17146
  call void @llvm.dbg.value(metadata i32 undef, metadata !17138, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata i32 undef, metadata !17136, metadata !DIExpression()), !dbg !17145
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !17151
  call void @llvm.dbg.value(metadata i32 %4, metadata !17139, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.value(metadata i1 undef, metadata !17142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17152
  %5 = icmp slt i32 %4, 2, !dbg !17153
  call void @llvm.dbg.value(metadata i1 %5, metadata !17143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17152
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17154
  call void @llvm.dbg.value(metadata i1 %6, metadata !17142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17152
  br i1 %7, label %11, label %8, !dbg !17154

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17156
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17156
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17158
  br label %11, !dbg !17159

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17148
  call void @llvm.dbg.value(metadata i32 %12, metadata !16740, metadata !DIExpression()) #23, !dbg !17150
  call void @llvm.dbg.value(metadata i32 %12, metadata !16734, metadata !DIExpression()) #23, !dbg !17146
  call void @llvm.dbg.value(metadata i32 %12, metadata !17138, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !16804, metadata !DIExpression()) #23, !dbg !17162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17164, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 1, metadata !17136, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata i32 undef, metadata !17136, metadata !DIExpression()), !dbg !17145
  ret void, !dbg !17165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17170, metadata !DIExpression()), !dbg !17175
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !17177
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17179, !srcloc !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !17182
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17183
  br i1 %4, label %28, label %5, !dbg !17184

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17185
  %10 = load i64, i64* %9, align 8, !dbg !17185
  %11 = sext i32 %8 to i64, !dbg !17186
  %12 = icmp sgt i64 %10, %11, !dbg !17187
  br i1 %12, label %26, label %13, !dbg !17188

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17175
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17172, metadata !DIExpression()), !dbg !17189
  %15 = trunc i64 %10 to i32, !dbg !17190
  call void @llvm.dbg.value(metadata i32 %15, metadata !17174, metadata !DIExpression()), !dbg !17189
  %16 = sext i32 %15 to i64, !dbg !17191
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17192
  %18 = add i64 %17, %16, !dbg !17192
  store i64 %18, i64* @curr_tick, align 8, !dbg !17192
  store i64 0, i64* %9, align 8, !dbg !17193
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !17194
  call void @llvm.dbg.value(metadata i32 %14, metadata !16796, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata i32 %14, metadata !16804, metadata !DIExpression()) #23, !dbg !17197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17199, !srcloc !16810
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17200
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17200
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !17202
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17204, !srcloc !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #23, !dbg !17206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !17206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17202
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17207
  %23 = sub nsw i32 %22, %15, !dbg !17207
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !17182
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17183
  br i1 %25, label %28, label %5, !dbg !17184, !llvm.loop !17208

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17210
  store i64 %27, i64* %9, align 8, !dbg !17210
  br label %32, !dbg !17213

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17175
  %31 = sext i32 %30 to i64, !dbg !17214
  br label %32, !dbg !17214

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17214
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17175
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17215
  %37 = add i64 %36, %33, !dbg !17215
  store i64 %37, i64* @curr_tick, align 8, !dbg !17215
  store i32 0, i32* @announce_remaining, align 4, !dbg !17216
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !17217
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17218
  call void @llvm.dbg.value(metadata i32 %35, metadata !16796, metadata !DIExpression()) #23, !dbg !17219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !17219
  call void @llvm.dbg.value(metadata i32 %35, metadata !16804, metadata !DIExpression()) #23, !dbg !17221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17223, !srcloc !16810
  ret void, !dbg !17224
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17225 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17229, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata i32 0, metadata !17230, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #23, !dbg !17235
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17237, !srcloc !16743
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17237
  call void @llvm.dbg.value(metadata i32 %2, metadata !16740, metadata !DIExpression()) #23, !dbg !17239
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #23, !dbg !17239
  call void @llvm.dbg.value(metadata i32 %2, metadata !16734, metadata !DIExpression()) #23, !dbg !17235
  call void @llvm.dbg.value(metadata i32 %2, metadata !17232, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata i64 0, metadata !17229, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata i32 undef, metadata !17230, metadata !DIExpression()), !dbg !17234
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17240
  %4 = tail call fastcc i32 @elapsed.249() #24, !dbg !17243
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17229, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17233
  call void @llvm.dbg.value(metadata i32 %2, metadata !16796, metadata !DIExpression()) #23, !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #23, !dbg !17244
  call void @llvm.dbg.value(metadata i32 %2, metadata !16804, metadata !DIExpression()) #23, !dbg !17246
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17248, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17230, metadata !DIExpression()), !dbg !17234
  %5 = sext i32 %4 to i64, !dbg !17243
  %6 = add i64 %3, %5, !dbg !17249
  ret i64 %6, !dbg !17250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17251 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17252
  %2 = trunc i64 %1 to i32, !dbg !17253
  ret i32 %2, !dbg !17254
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17255 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17256
  ret i64 %1, !dbg !17257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17260, metadata !DIExpression()), !dbg !17267
  %2 = icmp eq i32 %0, 0, !dbg !17268
  br i1 %2, label %10, label %3, !dbg !17270

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %4, metadata !17261, metadata !DIExpression()), !dbg !17267
  %5 = mul i32 %0, 84, !dbg !17272
  call void @llvm.dbg.value(metadata i32 %5, metadata !17262, metadata !DIExpression()), !dbg !17267
  br label %6, !dbg !17273

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17274
  call void @llvm.dbg.value(metadata i32 %7, metadata !17263, metadata !DIExpression()), !dbg !17275
  %8 = sub i32 %7, %4, !dbg !17276
  %9 = icmp ult i32 %8, %5, !dbg !17278
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17280 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17281
  ret i32 %1, !dbg !17282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17283 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17285
  ret i32 %1, !dbg !17286
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17287 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17291, metadata !DIExpression()), !dbg !17293
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17294

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17295
  br label %14, !dbg !17299

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17292, metadata !DIExpression()), !dbg !17293
  %6 = icmp slt i64 %2, -1, !dbg !17300
  br i1 %6, label %7, label %9, !dbg !17303

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17304
  br label %14, !dbg !17305

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17307
  %11 = icmp ugt i64 %2, 1, !dbg !17308
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17308
  %13 = add nsw i64 %10, %12, !dbg !17309
  br label %14, !dbg !17310

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17311
  ret i64 %15, !dbg !17312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_timer_expiration_handler(%struct._timeout* noundef %0) #1 !dbg !17313 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17315, metadata !DIExpression()), !dbg !17326
  %2 = bitcast %struct._timeout* %0 to %struct.k_timer*, !dbg !17327
  call void @llvm.dbg.value(metadata %struct.k_timer* %2, metadata !17316, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17328, metadata !DIExpression()) #23, !dbg !17335
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17337, !srcloc !17343
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17337
  call void @llvm.dbg.value(metadata i32 %4, metadata !17340, metadata !DIExpression()) #23, !dbg !17344
  call void @llvm.dbg.value(metadata i32 undef, metadata !17341, metadata !DIExpression()) #23, !dbg !17344
  call void @llvm.dbg.value(metadata i32 %4, metadata !17334, metadata !DIExpression()) #23, !dbg !17335
  call void @llvm.dbg.value(metadata i32 %4, metadata !17318, metadata !DIExpression()), !dbg !17326
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 2, !dbg !17345
  %6 = load i64, i64* %5, align 8, !dbg !17345
  switch i64 %6, label %7 [
    i64 0, label %21
    i64 -1, label %21
  ], !dbg !17346

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 undef, metadata !17323, metadata !DIExpression()), !dbg !17347
  %8 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17348
  %9 = add nsw i64 %8, 1, !dbg !17348
  %10 = load i64, i64* %5, align 8, !dbg !17348
  %11 = add nsw i64 %9, %10, !dbg !17348
  %12 = icmp sgt i64 %11, 0, !dbg !17348
  br i1 %12, label %13, label %18, !dbg !17348

13:                                               ; preds = %7
  %14 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17348
  %15 = load i64, i64* %5, align 8, !dbg !17348
  %16 = add i64 %14, %15, !dbg !17348
  %17 = sub i64 -3, %16, !dbg !17348
  br label %18, !dbg !17348

18:                                               ; preds = %7, %13
  %19 = phi i64 [ %17, %13 ], [ -2, %7 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !17323, metadata !DIExpression()), !dbg !17347
  %20 = insertvalue [1 x i64] poison, i64 %19, 0, !dbg !17349
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %0, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %20) #25, !dbg !17349
  br label %21, !dbg !17350

21:                                               ; preds = %1, %1, %18
  %22 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 2, !dbg !17351
  %23 = bitcast %struct._timeout* %22 to i32*, !dbg !17351
  %24 = load i32, i32* %23, align 8, !dbg !17352
  %25 = add i32 %24, 1, !dbg !17352
  store i32 %25, i32* %23, align 8, !dbg !17352
  %26 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 1, !dbg !17353
  %27 = bitcast void (%struct._timeout*)** %26 to void (%struct.k_timer*)**, !dbg !17353
  %28 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17353
  %29 = icmp eq void (%struct.k_timer*)* %28, null, !dbg !17355
  br i1 %29, label %34, label %30, !dbg !17356

30:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %4, metadata !17357, metadata !DIExpression()) #23, !dbg !17363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17362, metadata !DIExpression()) #23, !dbg !17363
  call void @llvm.dbg.value(metadata i32 %4, metadata !17366, metadata !DIExpression()) #23, !dbg !17369
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !17371, !srcloc !17372
  %31 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17373
  tail call void %31(%struct.k_timer* noundef nonnull %2) #25, !dbg !17374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17328, metadata !DIExpression()) #23, !dbg !17375
  %32 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17377, !srcloc !17343
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !17377
  call void @llvm.dbg.value(metadata i32 %33, metadata !17340, metadata !DIExpression()) #23, !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17341, metadata !DIExpression()) #23, !dbg !17379
  call void @llvm.dbg.value(metadata i32 %33, metadata !17334, metadata !DIExpression()) #23, !dbg !17375
  call void @llvm.dbg.value(metadata i32 %33, metadata !17318, metadata !DIExpression()), !dbg !17326
  br label %34, !dbg !17380

34:                                               ; preds = %30, %21
  %35 = phi i32 [ %33, %30 ], [ %4, %21 ], !dbg !17326
  call void @llvm.dbg.value(metadata i32 %35, metadata !17318, metadata !DIExpression()), !dbg !17326
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, !dbg !17381
  %37 = bitcast %struct._timeout* %36 to %struct._wait_q_t*, !dbg !17381
  %38 = tail call fastcc %struct.k_thread* @z_waitq_head.268(%struct._wait_q_t* noundef nonnull %37) #24, !dbg !17382
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17317, metadata !DIExpression()), !dbg !17326
  %39 = icmp eq %struct.k_thread* %38, null, !dbg !17383
  br i1 %39, label %40, label %41, !dbg !17385

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %35, metadata !17357, metadata !DIExpression()) #23, !dbg !17386
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17362, metadata !DIExpression()) #23, !dbg !17386
  call void @llvm.dbg.value(metadata i32 %35, metadata !17366, metadata !DIExpression()) #23, !dbg !17389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17391, !srcloc !17372
  br label %43, !dbg !17392

41:                                               ; preds = %34
  tail call void @z_unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %38) #25, !dbg !17393
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17394, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i32 0, metadata !17399, metadata !DIExpression()), !dbg !17400
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %38, i32 0, i32 7, i32 1, !dbg !17402
  store i32 0, i32* %42, align 4, !dbg !17403
  call void @llvm.dbg.value(metadata i32 %35, metadata !17357, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17362, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata i32 %35, metadata !17366, metadata !DIExpression()) #23, !dbg !17406
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17408, !srcloc !17372
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %38) #25, !dbg !17409
  br label %43, !dbg !17410

43:                                               ; preds = %41, %40
  ret void, !dbg !17410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !17411 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17412, !srcloc !17414
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !17415
  ret i64 %1, !dbg !17416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.268(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17417 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17421, metadata !DIExpression()), !dbg !17422
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17423
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.269(%struct._dnode* noundef %2) #24, !dbg !17424
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17425
  ret %struct.k_thread* %4, !dbg !17426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.269(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17427 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17432, metadata !DIExpression()), !dbg !17433
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.270(%struct._dnode* noundef %0) #24, !dbg !17434
  br i1 %2, label %6, label %3, !dbg !17434

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17435
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17435
  br label %6, !dbg !17434

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17434
  ret %struct._dnode* %7, !dbg !17436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.270(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17437 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17441, metadata !DIExpression()), !dbg !17442
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17443
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17443
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17444
  ret i1 %4, !dbg !17445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_timer_init(%struct.k_timer* noundef %0, void (%struct.k_timer*)* noundef %1, void (%struct.k_timer*)* noundef %2) local_unnamed_addr #6 !dbg !17446 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17452, metadata !DIExpression()), !dbg !17455
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %1, metadata !17453, metadata !DIExpression()), !dbg !17455
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %2, metadata !17454, metadata !DIExpression()), !dbg !17455
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 2, !dbg !17456
  store void (%struct.k_timer*)* %1, void (%struct.k_timer*)** %4, align 8, !dbg !17457
  %5 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17458
  store void (%struct.k_timer*)* %2, void (%struct.k_timer*)** %5, align 4, !dbg !17459
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17460
  store i32 0, i32* %6, align 8, !dbg !17461
  %7 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17462
  tail call fastcc void @z_waitq_init.273(%struct._wait_q_t* noundef nonnull %7) #24, !dbg !17465
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17466
  tail call fastcc void @z_init_timeout.274(%struct._timeout* noundef %8) #24, !dbg !17467
  %9 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 6, !dbg !17468
  store i8* null, i8** %9, align 4, !dbg !17469
  ret void, !dbg !17470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.273(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17471 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17475, metadata !DIExpression()), !dbg !17476
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17477
  tail call fastcc void @sys_dlist_init.276(%struct._dnode* noundef %2) #24, !dbg !17478
  ret void, !dbg !17479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.274(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17480 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17482, metadata !DIExpression()), !dbg !17483
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17484
  tail call fastcc void @sys_dnode_init.275(%struct._dnode* noundef %2) #24, !dbg !17485
  ret void, !dbg !17486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.275(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17487 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17491, metadata !DIExpression()), !dbg !17492
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17493
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17494
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17495
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17496
  ret void, !dbg !17497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.276(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17498 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17502, metadata !DIExpression()), !dbg !17503
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17504
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17505
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17506
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17507
  ret void, !dbg !17508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17509 {
  %4 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17514, metadata !DIExpression()), !dbg !17516
  %5 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17515, metadata !DIExpression()), !dbg !17516
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17513, metadata !DIExpression()), !dbg !17516
  %6 = icmp eq i64 %4, -1, !dbg !17517
  br i1 %6, label %23, label %7, !dbg !17519

7:                                                ; preds = %3
  %8 = icmp sgt i64 %5, 0, !dbg !17520
  %9 = icmp sgt i64 %5, 2, !dbg !17520
  %10 = select i1 %9, i64 %5, i64 2, !dbg !17520
  %11 = add nsw i64 %10, -1, !dbg !17520
  %12 = select i1 %8, i64 %11, i64 %5, !dbg !17520
  call void @llvm.dbg.value(metadata i64 %12, metadata !17515, metadata !DIExpression()), !dbg !17516
  %13 = icmp sgt i64 %4, -2, !dbg !17522
  %14 = icmp sgt i64 %4, 1, !dbg !17524
  %15 = select i1 %14, i64 %4, i64 1, !dbg !17524
  %16 = add nsw i64 %15, -1, !dbg !17524
  %17 = select i1 %13, i64 %16, i64 %4, !dbg !17524
  call void @llvm.dbg.value(metadata i64 %17, metadata !17514, metadata !DIExpression()), !dbg !17516
  %18 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17525
  %19 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %18) #25, !dbg !17526
  %20 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 4, i32 0, !dbg !17527
  store i64 %12, i64* %20, align 8, !dbg !17527
  %21 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17528
  store i32 0, i32* %21, align 8, !dbg !17529
  %22 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !17530
  tail call void @z_add_timeout(%struct._timeout* noundef %18, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %22) #25, !dbg !17530
  br label %23, !dbg !17531

23:                                               ; preds = %3, %7
  ret void, !dbg !17531
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_stop(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17532 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17534, metadata !DIExpression()), !dbg !17539
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17540
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %2) #25, !dbg !17541
  %4 = icmp eq i32 %3, 0, !dbg !17542
  call void @llvm.dbg.value(metadata i1 %4, metadata !17535, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17539
  br i1 %4, label %5, label %15, !dbg !17543

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17544
  %7 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %6, align 4, !dbg !17544
  %8 = icmp eq void (%struct.k_timer*)* %7, null, !dbg !17546
  br i1 %8, label %10, label %9, !dbg !17547

9:                                                ; preds = %5
  tail call void %7(%struct.k_timer* noundef nonnull %0) #25, !dbg !17548
  br label %10, !dbg !17550

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17551
  %12 = tail call %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef nonnull %11) #25, !dbg !17552
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !17536, metadata !DIExpression()), !dbg !17553
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !17554
  br i1 %13, label %15, label %14, !dbg !17556

14:                                               ; preds = %10
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %12) #25, !dbg !17557
  tail call fastcc void @z_reschedule_unlocked.279() #24, !dbg !17559
  br label %15, !dbg !17560

15:                                               ; preds = %10, %14, %1
  ret void, !dbg !17561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.279() unnamed_addr #1 !dbg !17562 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17563, !srcloc !17343
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17563
  call void @llvm.dbg.value(metadata i32 %2, metadata !17340, metadata !DIExpression()) #23, !dbg !17565
  call void @llvm.dbg.value(metadata i32 undef, metadata !17341, metadata !DIExpression()) #23, !dbg !17565
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !17566
  ret void, !dbg !17567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_get(%struct.k_timer* nocapture noundef %0) local_unnamed_addr #1 !dbg !17568 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17572, metadata !DIExpression()), !dbg !17575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17328, metadata !DIExpression()) #23, !dbg !17576
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17578, !srcloc !17343
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17578
  call void @llvm.dbg.value(metadata i32 %3, metadata !17340, metadata !DIExpression()) #23, !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17341, metadata !DIExpression()) #23, !dbg !17580
  call void @llvm.dbg.value(metadata i32 %3, metadata !17334, metadata !DIExpression()) #23, !dbg !17576
  call void @llvm.dbg.value(metadata i32 %3, metadata !17573, metadata !DIExpression()), !dbg !17575
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17581
  %5 = load i32, i32* %4, align 8, !dbg !17581
  call void @llvm.dbg.value(metadata i32 %5, metadata !17574, metadata !DIExpression()), !dbg !17575
  store i32 0, i32* %4, align 8, !dbg !17582
  call void @llvm.dbg.value(metadata i32 %3, metadata !17357, metadata !DIExpression()) #23, !dbg !17583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17362, metadata !DIExpression()) #23, !dbg !17583
  call void @llvm.dbg.value(metadata i32 %3, metadata !17366, metadata !DIExpression()) #23, !dbg !17585
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17587, !srcloc !17372
  ret i32 %5, !dbg !17588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17589 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17591, metadata !DIExpression()), !dbg !17594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17328, metadata !DIExpression()) #23, !dbg !17595
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17597, !srcloc !17343
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17597
  call void @llvm.dbg.value(metadata i32 %3, metadata !17340, metadata !DIExpression()) #23, !dbg !17599
  call void @llvm.dbg.value(metadata i32 undef, metadata !17341, metadata !DIExpression()) #23, !dbg !17599
  call void @llvm.dbg.value(metadata i32 %3, metadata !17334, metadata !DIExpression()) #23, !dbg !17595
  call void @llvm.dbg.value(metadata i32 %3, metadata !17592, metadata !DIExpression()), !dbg !17594
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17600
  %5 = load i32, i32* %4, align 8, !dbg !17600
  call void @llvm.dbg.value(metadata i32 %5, metadata !17593, metadata !DIExpression()), !dbg !17594
  %6 = icmp eq i32 %5, 0, !dbg !17601
  br i1 %6, label %7, label %17, !dbg !17603

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17604
  %9 = tail call fastcc zeroext i1 @z_is_inactive_timeout.280(%struct._timeout* noundef %8) #24, !dbg !17607
  br i1 %9, label %17, label %10, !dbg !17608

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17609
  %12 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17611
  %13 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %12, %struct._wait_q_t* noundef nonnull %11, [1 x i64] [i64 -1]) #25, !dbg !17611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17328, metadata !DIExpression()) #23, !dbg !17612
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17614, !srcloc !17343
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17614
  call void @llvm.dbg.value(metadata i32 %15, metadata !17340, metadata !DIExpression()) #23, !dbg !17616
  call void @llvm.dbg.value(metadata i32 undef, metadata !17341, metadata !DIExpression()) #23, !dbg !17616
  call void @llvm.dbg.value(metadata i32 %15, metadata !17334, metadata !DIExpression()) #23, !dbg !17612
  call void @llvm.dbg.value(metadata i32 %15, metadata !17592, metadata !DIExpression()), !dbg !17594
  %16 = load i32, i32* %4, align 8, !dbg !17617
  call void @llvm.dbg.value(metadata i32 %16, metadata !17593, metadata !DIExpression()), !dbg !17594
  br label %17, !dbg !17618

17:                                               ; preds = %1, %10, %7
  %18 = phi i32 [ 0, %7 ], [ %16, %10 ], [ %5, %1 ], !dbg !17594
  %19 = phi i32 [ %3, %7 ], [ %15, %10 ], [ %3, %1 ], !dbg !17594
  call void @llvm.dbg.value(metadata i32 %19, metadata !17592, metadata !DIExpression()), !dbg !17594
  call void @llvm.dbg.value(metadata i32 %18, metadata !17593, metadata !DIExpression()), !dbg !17594
  store i32 0, i32* %4, align 8, !dbg !17619
  call void @llvm.dbg.value(metadata i32 %19, metadata !17357, metadata !DIExpression()) #23, !dbg !17620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17362, metadata !DIExpression()) #23, !dbg !17620
  call void @llvm.dbg.value(metadata i32 %19, metadata !17366, metadata !DIExpression()) #23, !dbg !17622
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !17624, !srcloc !17372
  ret i32 %18, !dbg !17625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.280(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17626 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17632, metadata !DIExpression()), !dbg !17633
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17634
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.281(%struct._dnode* noundef %2) #24, !dbg !17635
  %4 = xor i1 %3, true, !dbg !17636
  ret i1 %4, !dbg !17637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.281(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17638 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17644, metadata !DIExpression()), !dbg !17645
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17646
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17646
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17647
  ret i1 %4, !dbg !17648
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17649 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.284, i32 0, i32 0)) #25, !dbg !17651
  ret void, !dbg !17652
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!496, !2, !2806, !27, !260, !530, !551, !2808, !2810, !2844, !561, !604, !2846, !2849, !2860, !2906, !2908, !2936, !2964, !3007, !3079, !3124, !633, !783, !3152, !819, !829, !854, !865, !982, !1151, !3157, !1289, !1355, !1658, !1880, !3196, !1991, !2081, !3198, !3284, !3349, !2132, !3352, !2139, !2509, !3370, !2529, !3372, !2644, !2683, !3375}
!llvm.ident = !{!3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377, !3377}
!llvm.module.flags = !{!3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !119, line: 12, type: !252, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !103, globals: !116, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_RTIO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_RTIO_IODEV", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_LAST", value: 68)
!103 = !{!104, !105, !108, !109, !113, !114}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !110, line: 46, baseType: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !112)
!112 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !{!25, !117, !227, !229, !235, !237, !245}
!117 = !DIGlobalVariableExpression(var: !118, expr: !DIExpression())
!118 = distinct !DIGlobalVariable(name: "simple_exec", scope: !27, file: !119, line: 24, type: !120, isLocal: false, isDefinition: true)
!119 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_simple_executor", file: !121, line: 57, size: 32, elements: !122)
!121 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_simple.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !120, file: !121, line: 58, baseType: !124, size: 32)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !126)
!125 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !124, file: !125, line: 211, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !131)
!131 = !{!132, !222, !226}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !130, file: !125, line: 177, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!108, !136}
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !138)
!138 = !{!139, !141, !145, !210}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !137, file: !125, line: 228, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !137, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !143, line: 22, baseType: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !137, file: !125, line: 254, baseType: !146, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !148)
!148 = !{!149, !159}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !147, file: !125, line: 143, baseType: !150, size: 160)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_spsc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = !{!153, !154, !155, !156, !157}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !150, file: !151, line: 60, baseType: !24, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !150, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !150, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !150, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !150, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !147, file: !125, line: 144, baseType: !160, offset: 160)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, elements: !197)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !162)
!162 = !{!163, !166, !167, !170, !200, !201}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !161, file: !125, line: 110, baseType: !164, size: 8)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !161, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !161, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !169)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !161, file: !125, line: 116, baseType: !171, size: 32, offset: 32)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !174)
!174 = !{!175, !186, !199}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !173, file: !125, line: 308, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !178, file: !125, line: 271, baseType: !181, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184, !136}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !173, file: !125, line: 311, baseType: !187, size: 32, offset: 32)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !188, file: !125, line: 299, baseType: !150, size: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !188, file: !125, line: 300, baseType: !192, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !197)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !194)
!194 = !{!195, !196}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !193, file: !125, line: 289, baseType: !184, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !193, file: !125, line: 290, baseType: !136, size: 32, offset: 32)
!197 = !{!198}
!198 = !DISubrange(count: -1)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !173, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !161, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !125, line: 127, baseType: !202, size: 64, offset: 96)
!202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !125, line: 127, size: 64, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !125, line: 128, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !202, file: !125, line: 128, size: 64, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !205, file: !125, line: 129, baseType: !113, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !205, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !137, file: !125, line: 257, baseType: !211, size: 32, offset: 96)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !213)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !212, file: !125, line: 162, baseType: !150, size: 160)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !212, file: !125, line: 163, baseType: !216, offset: 160)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, elements: !197)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !218)
!218 = !{!219, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !217, file: !125, line: 151, baseType: !220, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !108)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !217, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !130, file: !125, line: 182, baseType: !223, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DISubroutineType(types: !225)
!225 = !{null, !136, !184, !108}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !130, file: !125, line: 187, baseType: !223, size: 32, offset: 64)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "ez_io", scope: !27, file: !119, line: 25, type: !137, isLocal: false, isDefinition: true, align: 32)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "bufs", scope: !27, file: !119, line: 27, type: !231, isLocal: true, isDefinition: true)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 1024, elements: !232)
!232 = !{!233, !234}
!233 = !DISubrange(count: 8)
!234 = !DISubrange(count: 16)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(name: "z_rtio_simple_api", scope: !27, file: !121, line: 64, type: !129, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "_sq_ez_io", scope: !27, file: !119, line: 25, type: !239, isLocal: true, isDefinition: true)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__sq_ez_io", file: !119, line: 25, size: 1440, elements: !240)
!240 = !{!241, !242}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !239, file: !119, line: 25, baseType: !150, size: 160)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !239, file: !119, line: 25, baseType: !243, size: 1280, offset: 160)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1280, elements: !244)
!244 = !{!233}
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "_cq_ez_io", scope: !27, file: !119, line: 25, type: !247, isLocal: true, isDefinition: true)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__cq_ez_io", file: !119, line: 25, size: 672, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !247, file: !119, line: 25, baseType: !150, size: 160)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !247, file: !119, line: 25, baseType: !251, size: 512, offset: 160)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 512, elements: !244)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !253, file: !254, line: 17, baseType: !105, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !253, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "log_const_vnd_sensor", scope: !260, file: !265, line: 14, type: !489, isLocal: false, isDefinition: true)
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !262, globals: !450, splitDebugInlining: false, nameTableKind: None)
!261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!262 = !{!104, !108, !263, !109, !443, !113, !114}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_data", file: !265, line: 21, size: 960, elements: !266)
!265 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!266 = !{!267, !357, !407, !430, !449}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !264, file: !265, line: 22, baseType: !268, size: 96)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !269)
!269 = !{!270, !345, !356}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !268, file: !125, line: 308, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !274)
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !273, file: !125, line: 271, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !279, !298}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !282)
!282 = !{!283, !284, !285, !286, !289, !290}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !281, file: !125, line: 110, baseType: !164, size: 8)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !281, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !281, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !281, file: !125, line: 116, baseType: !287, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !281, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !125, line: 127, baseType: !291, size: 64, offset: 96)
!291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !125, line: 127, size: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, scope: !291, file: !125, line: 128, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !291, file: !125, line: 128, size: 64, elements: !295)
!295 = !{!296, !297}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !294, file: !125, line: 129, baseType: !113, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !294, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !300)
!300 = !{!301, !319, !320, !334}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !299, file: !125, line: 228, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !303, file: !125, line: 211, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !309)
!309 = !{!310, !314, !318}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !308, file: !125, line: 177, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{!108, !298}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !308, file: !125, line: 182, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !298, !279, !108}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !308, file: !125, line: 187, baseType: !315, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !299, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !299, file: !125, line: 254, baseType: !321, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !323)
!323 = !{!324, !332}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !322, file: !125, line: 143, baseType: !325, size: 160)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !326)
!326 = !{!327, !328, !329, !330, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !325, file: !151, line: 60, baseType: !24, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !325, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !325, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !325, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !325, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !322, file: !125, line: 144, baseType: !333, offset: 160)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !197)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !299, file: !125, line: 257, baseType: !335, size: 32, offset: 96)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !337)
!337 = !{!338, !339}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !336, file: !125, line: 162, baseType: !325, size: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !336, file: !125, line: 163, baseType: !340, offset: 160)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !197)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !341, file: !125, line: 151, baseType: !220, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !341, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !268, file: !125, line: 311, baseType: !346, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !347, file: !125, line: 299, baseType: !325, size: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !347, file: !125, line: 300, baseType: !351, offset: 160)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, elements: !197)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !353)
!353 = !{!354, !355}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !352, file: !125, line: 289, baseType: !279, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !352, file: !125, line: 290, baseType: !298, size: 32, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !268, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !264, file: !265, line: 23, baseType: !358, size: 448, offset: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !388, !394, !399, !400, !405, !406}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !359, line: 1324, baseType: !362, size: 192)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !381, !387}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !362, file: !363, line: 245, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !369)
!369 = !{!370, !376}
!370 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 38, baseType: !371, size: 32)
!371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 38, size: 32, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !371, file: !367, line: 39, baseType: !374, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !371, file: !367, line: 40, baseType: !374, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 42, baseType: !377, size: 32, offset: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 42, size: 32, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !377, file: !367, line: 43, baseType: !374, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !377, file: !367, line: 44, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !362, file: !363, line: 246, baseType: !382, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !386}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !362, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !358, file: !359, line: 1327, baseType: !389, size: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !363, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !358, file: !359, line: 1330, baseType: !395, size: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !358, file: !359, line: 1333, baseType: !395, size: 32, offset: 288)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !358, file: !359, line: 1336, baseType: !401, size: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !402, file: !110, line: 66, baseType: !109, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !358, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !358, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !265, line: 24, baseType: !408, size: 32, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !412)
!411 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!412 = !{!413, !414, !415, !416, !423, !424}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !411, line: 380, baseType: !105, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !410, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !410, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !410, file: !411, line: 386, baseType: !417, size: 32, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !418, file: !411, line: 359, baseType: !164, size: 8)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !418, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!422 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !410, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !410, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !411, line: 43, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !429)
!429 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !264, file: !265, line: 25, baseType: !431, size: 320, offset: 608)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !359, line: 4204, size: 320, elements: !432)
!432 = !{!433, !434, !438, !441, !442, !444, !445, !446, !447, !448}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !431, file: !359, line: 4206, baseType: !389, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !431, file: !359, line: 4208, baseType: !435, offset: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !431, file: !359, line: 4210, baseType: !439, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !440, line: 214, baseType: !32)
!440 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !431, file: !359, line: 4212, baseType: !113, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !431, file: !359, line: 4214, baseType: !443, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !431, file: !359, line: 4216, baseType: !443, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !431, file: !359, line: 4218, baseType: !443, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !431, file: !359, line: 4220, baseType: !443, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !431, file: !359, line: 4222, baseType: !113, size: 32, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !431, file: !359, line: 4227, baseType: !164, size: 8, offset: 288)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sample_number", scope: !264, file: !265, line: 26, baseType: !113, size: 32, offset: 928)
!450 = !{!258, !451, !458, !463, !465, !476, !478, !485, !487}
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_sq_0", scope: !260, file: !265, line: 152, type: !453, isLocal: false, isDefinition: true)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc_vnd_sensor_iodev_sq_0", file: !265, line: 152, size: 672, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !453, file: !265, line: 152, baseType: !325, size: 160)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !453, file: !265, line: 152, baseType: !457, size: 512, offset: 160)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 512, elements: !244)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_13", scope: !260, file: !265, line: 152, type: !460, isLocal: false, isDefinition: true, align: 16)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 4)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "__device_dts_ord_13", scope: !260, file: !265, line: 152, type: !409, isLocal: false, isDefinition: true, align: 32)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_13", scope: !260, file: !265, line: 152, type: !467, isLocal: true, isDefinition: true, align: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !470)
!469 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !468, file: !469, line: 60, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DISubroutineType(types: !474)
!474 = !{!108, !408}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !468, file: !469, line: 65, baseType: !408, size: 32, offset: 32)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_13", scope: !260, file: !265, line: 152, type: !418, isLocal: true, isDefinition: true, align: 8)
!478 = !DIGlobalVariableExpression(var: !479, expr: !DIExpression())
!479 = distinct !DIGlobalVariable(name: "vnd_sensor_config_0", scope: !260, file: !265, line: 152, type: !480, isLocal: true, isDefinition: true)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_config", file: !265, line: 16, size: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !481, file: !265, line: 17, baseType: !113, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !481, file: !265, line: 18, baseType: !439, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "vnd_sensor_data_0", scope: !260, file: !265, line: 152, type: !264, isLocal: true, isDefinition: true)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_api", scope: !260, file: !265, line: 127, type: !272, isLocal: true, isDefinition: true)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !254, line: 17, baseType: !105, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !490, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_13", scope: !496, file: !501, line: 90, type: !507, isLocal: false, isDefinition: true, align: 16)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !498, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!498 = !{!499, !505, !510, !512, !514, !516, !518, !520, !522, !524, !526, !494}
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !496, file: !501, line: 17, type: !502, isLocal: false, isDefinition: true, align: 16)
!501 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 192, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 12)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !496, file: !501, line: 22, type: !507, isLocal: false, isDefinition: true, align: 16)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 48, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 3)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !496, file: !501, line: 29, type: !460, isLocal: false, isDefinition: true, align: 16)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !496, file: !501, line: 36, type: !460, isLocal: false, isDefinition: true, align: 16)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !496, file: !501, line: 43, type: !460, isLocal: false, isDefinition: true, align: 16)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !496, file: !501, line: 50, type: !460, isLocal: false, isDefinition: true, align: 16)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !496, file: !501, line: 57, type: !460, isLocal: false, isDefinition: true, align: 16)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !496, file: !501, line: 64, type: !460, isLocal: false, isDefinition: true, align: 16)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !496, file: !501, line: 71, type: !460, isLocal: false, isDefinition: true, align: 16)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !496, file: !501, line: 78, type: !460, isLocal: false, isDefinition: true, align: 16)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !496, file: !501, line: 85, type: !460, isLocal: false, isDefinition: true, align: 16)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !530, file: !543, line: 18, type: !544, isLocal: false, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !532, globals: !542, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!532 = !{!22, !104, !24, !533, !535, !537, !439, !108, !538, !539, !540, !541, !443, !209, !168, !105}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!536 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!542 = !{!528}
!543 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !545, file: !254, line: 17, baseType: !105, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !545, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(name: "_char_out", scope: !551, file: !555, line: 54, type: !556, isLocal: false, isDefinition: true)
!551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, globals: !554, splitDebugInlining: false, nameTableKind: None)
!552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!553 = !{!104, !108}
!554 = !{!549}
!555 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 32)
!557 = !DISubroutineType(types: !558)
!558 = !{!108, !108}
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !561, file: !578, line: 56, type: !579, isLocal: true, isDefinition: true, align: 32)
!561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !563, globals: !577, splitDebugInlining: false, nameTableKind: None)
!562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!563 = !{!564}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !566, line: 259, baseType: !567)
!566 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 250, size: 224, elements: !568)
!568 = !{!569, !571, !572, !573, !574, !575, !576}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !567, file: !566, line: 252, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !567, file: !566, line: 253, baseType: !570, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !567, file: !566, line: 254, baseType: !570, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !567, file: !566, line: 255, baseType: !570, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !567, file: !566, line: 256, baseType: !570, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !567, file: !566, line: 257, baseType: !570, size: 32, offset: 160)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !567, file: !566, line: 258, baseType: !570, size: 32, offset: 192)
!577 = !{!559}
!578 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !581)
!581 = !{!582, !601}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !580, file: !469, line: 60, baseType: !583, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!584 = !DISubroutineType(types: !585)
!585 = !{!108, !586}
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !589)
!589 = !{!590, !591, !592, !593, !599, !600}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !588, file: !411, line: 380, baseType: !105, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !588, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !588, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !588, file: !411, line: 386, baseType: !594, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !596)
!596 = !{!597, !598}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !595, file: !411, line: 359, baseType: !164, size: 8)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !595, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !588, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !588, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !580, file: !469, line: 65, baseType: !586, size: 32, offset: 32)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !604, file: !607, line: 71, type: !608, isLocal: true, isDefinition: true, align: 32)
!604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !605, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !606, splitDebugInlining: false, nameTableKind: None)
!605 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!606 = !{!602}
!607 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !610)
!610 = !{!611, !630}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !609, file: !469, line: 60, baseType: !612, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 32)
!613 = !DISubroutineType(types: !614)
!614 = !{!108, !615}
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !618)
!618 = !{!619, !620, !621, !622, !628, !629}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !617, file: !411, line: 380, baseType: !105, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !617, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !617, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !617, file: !411, line: 386, baseType: !623, size: 32, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 32)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !625)
!625 = !{!626, !627}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !624, file: !411, line: 359, baseType: !164, size: 8)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !624, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !617, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !617, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !609, file: !469, line: 65, baseType: !615, size: 32, offset: 32)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !633, file: !640, line: 17, type: !776, isLocal: false, isDefinition: true)
!633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !635, globals: !636, splitDebugInlining: false, nameTableKind: None)
!634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!635 = !{!439, !108, !113, !104}
!636 = !{!631, !637, !772}
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !639, file: !640, line: 198, type: !758, isLocal: true, isDefinition: true)
!639 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !640, file: !640, line: 175, type: !641, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !753)
!640 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!641 = !DISubroutineType(types: !642)
!642 = !{null, !643}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 32)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !646)
!645 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!646 = !{!647, !710, !723, !724, !725, !726, !732, !748}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !644, file: !645, line: 247, baseType: !648, size: 384)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !649)
!649 = !{!650, !677, !684, !685, !686, !697, !698, !699}
!650 = !DIDerivedType(tag: DW_TAG_member, scope: !648, file: !645, line: 60, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !648, file: !645, line: 60, size: 64, elements: !652)
!652 = !{!653, !668}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !651, file: !645, line: 61, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !656)
!656 = !{!657, !663}
!657 = !DIDerivedType(tag: DW_TAG_member, scope: !655, file: !367, line: 38, baseType: !658, size: 32)
!658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !655, file: !367, line: 38, size: 32, elements: !659)
!659 = !{!660, !662}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !658, file: !367, line: 39, baseType: !661, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !658, file: !367, line: 40, baseType: !661, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, scope: !655, file: !367, line: 42, baseType: !664, size: 32, offset: 32)
!664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !655, file: !367, line: 42, size: 32, elements: !665)
!665 = !{!666, !667}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !664, file: !367, line: 43, baseType: !661, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !664, file: !367, line: 44, baseType: !661, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !651, file: !645, line: 62, baseType: !669, size: 64)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !671)
!670 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !{!672}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !669, file: !670, line: 50, baseType: !673, size: 64)
!673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 64, elements: !675)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 32)
!675 = !{!676}
!676 = !DISubrange(count: 2)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !648, file: !645, line: 68, baseType: !678, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !680, file: !363, line: 232, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !655)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !648, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !648, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!686 = !DIDerivedType(tag: DW_TAG_member, scope: !648, file: !645, line: 90, baseType: !687, size: 16, offset: 112)
!687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !648, file: !645, line: 90, size: 16, elements: !688)
!688 = !{!689, !696}
!689 = !DIDerivedType(tag: DW_TAG_member, scope: !687, file: !645, line: 91, baseType: !690, size: 16)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !687, file: !645, line: 91, size: 16, elements: !691)
!691 = !{!692, !695}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !690, file: !645, line: 96, baseType: !693, size: 8)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !694)
!694 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !690, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !687, file: !645, line: 100, baseType: !168, size: 16)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !648, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !648, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !648, file: !645, line: 131, baseType: !700, size: 192, offset: 192)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !701)
!701 = !{!702, !703, !709}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !700, file: !363, line: 245, baseType: !654, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !700, file: !363, line: 246, baseType: !704, size: 32, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !705)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{null, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !700, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !644, file: !645, line: 250, baseType: !711, size: 288, offset: 384)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !713)
!712 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!713 = !{!714, !715, !716, !717, !718, !719, !720, !721, !722}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !711, file: !712, line: 26, baseType: !113, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !711, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !711, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !711, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !711, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !711, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !711, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !711, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !711, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !644, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !644, file: !645, line: 256, baseType: !679, size: 64, offset: 704)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !644, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !644, file: !645, line: 300, baseType: !727, size: 96, offset: 800)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !728)
!728 = !{!729, !730, !731}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !727, file: !645, line: 153, baseType: !22, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !727, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !727, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !644, file: !645, line: 325, baseType: !733, size: 32, offset: 896)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 32)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !735)
!735 = !{!736, !745, !746}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !734, file: !359, line: 5074, baseType: !737, size: 96)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !739)
!738 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!739 = !{!740, !743, !744}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !737, file: !738, line: 57, baseType: !741, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !738, line: 57, flags: DIFlagFwdDecl)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !737, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !737, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !734, file: !359, line: 5075, baseType: !679, size: 64, offset: 96)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !734, file: !359, line: 5076, baseType: !747, offset: 160)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !644, file: !645, line: 343, baseType: !749, size: 64, offset: 928)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !749, file: !712, line: 63, baseType: !113, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !749, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!753 = !{!754, !755, !756, !757}
!754 = !DILocalVariable(name: "thread", arg: 1, scope: !639, file: !640, line: 175, type: !643)
!755 = !DILocalVariable(name: "region_num", scope: !639, file: !640, line: 200, type: !164)
!756 = !DILocalVariable(name: "guard_start", scope: !639, file: !640, line: 265, type: !22)
!757 = !DILocalVariable(name: "guard_size", scope: !639, file: !640, line: 266, type: !439)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 96, elements: !770)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !760, line: 52, size: 96, elements: !761)
!760 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!761 = !{!762, !763, !764}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !759, file: !760, line: 53, baseType: !22, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !759, file: !760, line: 54, baseType: !439, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !759, file: !760, line: 55, baseType: !765, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !766, line: 151, baseType: !767)
!766 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !766, line: 149, size: 32, elements: !768)
!768 = !{!769}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !767, file: !766, line: 150, baseType: !113, size: 32)
!770 = !{!771}
!771 = !DISubrange(count: 1)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "static_regions", scope: !633, file: !640, line: 62, type: !774, isLocal: true, isDefinition: true)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 96, elements: !770)
!775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !778)
!778 = !{!779, !780}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !777, file: !254, line: 17, baseType: !105, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !777, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !783, file: !816, line: 39, type: !164, isLocal: true, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !785, globals: !815, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!785 = !{!786, !104, !108, !803, !164}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !788, line: 1226, baseType: !789)
!788 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 1213, size: 352, elements: !790)
!790 = !{!791, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !789, file: !788, line: 1215, baseType: !792, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !789, file: !788, line: 1216, baseType: !570, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !789, file: !788, line: 1217, baseType: !570, size: 32, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !789, file: !788, line: 1218, baseType: !570, size: 32, offset: 96)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !789, file: !788, line: 1219, baseType: !570, size: 32, offset: 128)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !789, file: !788, line: 1220, baseType: !570, size: 32, offset: 160)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !789, file: !788, line: 1221, baseType: !570, size: 32, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !789, file: !788, line: 1222, baseType: !570, size: 32, offset: 224)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !789, file: !788, line: 1223, baseType: !570, size: 32, offset: 256)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !789, file: !788, line: 1224, baseType: !570, size: 32, offset: 288)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !789, file: !788, line: 1225, baseType: !570, size: 32, offset: 320)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !806, line: 27, size: 96, elements: !807)
!806 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!807 = !{!808, !809, !810}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !805, file: !806, line: 29, baseType: !113, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !805, file: !806, line: 31, baseType: !105, size: 32, offset: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !805, file: !806, line: 37, baseType: !811, size: 32, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !766, line: 146, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !766, line: 141, size: 32, elements: !813)
!813 = !{!814}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !812, file: !766, line: 143, baseType: !113, size: 32)
!815 = !{!781}
!816 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !819, file: !826, line: 21, type: !556, isLocal: true, isDefinition: true)
!819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !821, globals: !825, splitDebugInlining: false, nameTableKind: None)
!820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!821 = !{!822, !108, !104}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !824, line: 22, baseType: !108)
!824 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!825 = !{!817}
!826 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !829, file: !834, line: 13, type: !851, isLocal: true, isDefinition: true)
!829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !831, splitDebugInlining: false, nameTableKind: None)
!830 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!831 = !{!832, !827}
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "mpu_config", scope: !829, file: !834, line: 37, type: !835, isLocal: false, isDefinition: true)
!834 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !806, line: 41, size: 64, elements: !837)
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !836, file: !806, line: 43, baseType: !113, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !836, file: !806, line: 45, baseType: !840, size: 32, offset: 32)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !806, line: 27, size: 96, elements: !843)
!843 = !{!844, !845, !846}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !842, file: !806, line: 29, baseType: !113, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !806, line: 31, baseType: !105, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !842, file: !806, line: 37, baseType: !847, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !766, line: 146, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !766, line: 141, size: 32, elements: !849)
!849 = !{!850}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !848, file: !766, line: 143, baseType: !113, size: 32)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !841, size: 192, elements: !675)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_simple", scope: !854, file: !857, line: 12, type: !858, isLocal: false, isDefinition: true)
!854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, globals: !856, splitDebugInlining: false, nameTableKind: None)
!855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!856 = !{!852}
!857 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !859, file: !254, line: 17, baseType: !105, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !859, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_concurrent", scope: !865, file: !974, line: 13, type: !975, isLocal: false, isDefinition: true)
!865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !866, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !867, globals: !973, splitDebugInlining: false, nameTableKind: None)
!866 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!867 = !{!868, !104, !108}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_concurrent_executor", file: !870, line: 61, size: 224, elements: !871)
!870 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_concurrent.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!871 = !{!872, !962, !964, !965, !966, !967, !969, !970, !971}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !869, file: !870, line: 62, baseType: !873, size: 32)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !874)
!874 = !{!875}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !873, file: !125, line: 211, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !879)
!879 = !{!880, !957, !961}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !878, file: !125, line: 177, baseType: !881, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DISubroutineType(types: !883)
!883 = !{!108, !884}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !886)
!886 = !{!887, !889, !890, !946}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !885, file: !125, line: 228, baseType: !888, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !885, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !885, file: !125, line: 254, baseType: !891, size: 32, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !893)
!893 = !{!894, !902}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !892, file: !125, line: 143, baseType: !895, size: 160)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !896)
!896 = !{!897, !898, !899, !900, !901}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !895, file: !151, line: 60, baseType: !24, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !895, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !895, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !895, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !895, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !892, file: !125, line: 144, baseType: !903, offset: 160)
!903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, elements: !197)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !905)
!905 = !{!906, !907, !908, !909, !937, !938}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !904, file: !125, line: 110, baseType: !164, size: 8)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !904, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !904, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !904, file: !125, line: 116, baseType: !910, size: 32, offset: 32)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !913)
!913 = !{!914, !925, !936}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !912, file: !125, line: 308, baseType: !915, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !918)
!918 = !{!919}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !917, file: !125, line: 271, baseType: !920, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DISubroutineType(types: !922)
!922 = !{null, !923, !884}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !912, file: !125, line: 311, baseType: !926, size: 32, offset: 32)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !928)
!928 = !{!929, !930}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !927, file: !125, line: 299, baseType: !895, size: 160)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !927, file: !125, line: 300, baseType: !931, offset: 160)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, elements: !197)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !933)
!933 = !{!934, !935}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !932, file: !125, line: 289, baseType: !923, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !932, file: !125, line: 290, baseType: !884, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !912, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !904, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, scope: !904, file: !125, line: 127, baseType: !939, size: 64, offset: 96)
!939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !904, file: !125, line: 127, size: 64, elements: !940)
!940 = !{!941}
!941 = !DIDerivedType(tag: DW_TAG_member, scope: !939, file: !125, line: 128, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !939, file: !125, line: 128, size: 64, elements: !943)
!943 = !{!944, !945}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !942, file: !125, line: 129, baseType: !113, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !942, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !885, file: !125, line: 257, baseType: !947, size: 32, offset: 96)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !949)
!949 = !{!950, !951}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !948, file: !125, line: 162, baseType: !895, size: 160)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !948, file: !125, line: 163, baseType: !952, offset: 160)
!952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !953, elements: !197)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !953, file: !125, line: 151, baseType: !220, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !953, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !878, file: !125, line: 182, baseType: !958, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DISubroutineType(types: !960)
!960 = !{null, !884, !923, !108}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !878, file: !125, line: 187, baseType: !958, size: 32, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !869, file: !870, line: 65, baseType: !963, offset: 32)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "task_in", scope: !869, file: !870, line: 68, baseType: !168, size: 16, offset: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "task_out", scope: !869, file: !870, line: 68, baseType: !168, size: 16, offset: 48)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "task_mask", scope: !869, file: !870, line: 68, baseType: !168, size: 16, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sqe", scope: !869, file: !870, line: 71, baseType: !968, size: 32, offset: 96)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "last_sqe", scope: !869, file: !870, line: 74, baseType: !968, size: 32, offset: 128)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "task_status", scope: !869, file: !870, line: 77, baseType: !209, size: 32, offset: 160)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "task_cur", scope: !869, file: !870, line: 80, baseType: !972, size: 32, offset: 192)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!973 = !{!863}
!974 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !977)
!977 = !{!978, !979}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !976, file: !254, line: 17, baseType: !105, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !976, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !982, file: !1066, line: 72, type: !1146, isLocal: true, isDefinition: true)
!982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !984, retainedTypes: !1052, globals: !1063, splitDebugInlining: false, nameTableKind: None)
!983 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!984 = !{!30, !985}
!985 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !566, line: 65, baseType: !108, size: 32, elements: !986)
!986 = !{!987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051}
!987 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!988 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!989 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!990 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!991 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!992 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!993 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!994 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!995 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!996 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!997 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!998 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!999 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1000 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1001 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1002 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1003 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1004 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1005 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1006 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1007 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1008 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1009 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1010 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1011 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1012 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1013 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1014 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1015 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1016 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1017 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1018 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1019 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1020 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1021 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1022 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1023 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1024 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1025 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1026 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1027 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1028 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1029 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1030 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1031 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1032 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1033 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1034 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1035 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1036 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1037 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1038 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1039 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1040 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1041 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1042 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1043 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1044 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1045 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1046 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1047 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1048 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1049 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1050 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!1051 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!1052 = !{!439, !108, !104, !1053}
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !566, line: 244, baseType: !1055)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 236, size: 192, elements: !1056)
!1056 = !{!1057, !1058, !1059, !1060, !1061, !1062}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1055, file: !566, line: 238, baseType: !570, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1055, file: !566, line: 239, baseType: !570, size: 32, offset: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1055, file: !566, line: 240, baseType: !570, size: 32, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1055, file: !566, line: 241, baseType: !570, size: 32, offset: 96)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1055, file: !566, line: 242, baseType: !570, size: 32, offset: 128)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1055, file: !566, line: 243, baseType: !570, size: 32, offset: 160)
!1063 = !{!1064, !1067, !1083, !1094, !1111, !980, !1113, !1126, !1128, !1130, !1132, !1134, !1136, !1138, !1140, !1142, !1144}
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !982, file: !1066, line: 424, type: !460, isLocal: false, isDefinition: true, align: 16)
!1066 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !982, file: !1066, line: 424, type: !1069, isLocal: false, isDefinition: true, align: 32)
!1069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1071)
!1071 = !{!1072, !1073, !1074, !1075, !1081, !1082}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1070, file: !411, line: 380, baseType: !105, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1070, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1070, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1070, file: !411, line: 386, baseType: !1076, size: 32, offset: 96)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1077, file: !411, line: 359, baseType: !164, size: 8)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1077, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1070, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1070, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !982, file: !1066, line: 424, type: !1085, isLocal: true, isDefinition: true, align: 32)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1087)
!1087 = !{!1088, !1093}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1086, file: !469, line: 60, baseType: !1089, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!108, !1092}
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1086, file: !469, line: 65, baseType: !1092, size: 32, offset: 32)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "exti_data", scope: !982, file: !1066, line: 423, type: !1096, isLocal: true, isDefinition: true)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1066, line: 107, size: 1472, elements: !1097)
!1097 = !{!1098}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1096, file: !1066, line: 109, baseType: !1099, size: 1472)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 1472, elements: !1109)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1066, line: 101, size: 64, elements: !1101)
!1101 = !{!1102, !1108}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1100, file: !1066, line: 102, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1104, line: 63, baseType: !1105)
!1104 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{null, !108, !104}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1100, file: !1066, line: 103, baseType: !104, size: 32, offset: 32)
!1109 = !{!1110}
!1110 = !DISubrange(count: 23)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !982, file: !1066, line: 424, type: !1077, isLocal: true, isDefinition: true, align: 8)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1115, file: !1066, line: 493, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1115 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1066, file: !1066, line: 460, type: !1116, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !1118)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !1092}
!1118 = !{!1119}
!1119 = !DILocalVariable(name: "dev", arg: 1, scope: !1115, file: !1066, line: 460, type: !1092)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1120, file: !10, line: 55, baseType: !220, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1120, file: !10, line: 57, baseType: !220, size: 32, offset: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1120, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1120, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1115, file: !1066, line: 497, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1115, file: !1066, line: 507, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1115, file: !1066, line: 512, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1115, file: !1066, line: 516, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1115, file: !1066, line: 523, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1115, file: !1066, line: 527, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1115, file: !1066, line: 581, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1115, file: !1066, line: 586, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1115, file: !1066, line: 591, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1115, file: !1066, line: 595, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1147, size: 736, elements: !1109)
!1147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1148)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !566, line: 134, baseType: !985)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1151, file: !1215, line: 398, type: !1248, isLocal: true, isDefinition: true)
!1151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1152, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1153, retainedTypes: !1166, globals: !1212, splitDebugInlining: false, nameTableKind: None)
!1152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!1153 = !{!1154, !30, !1159}
!1154 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1155, line: 197, baseType: !32, size: 32, elements: !1156)
!1155 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1156 = !{!1157, !1158}
!1157 = !DIEnumerator(name: "SUCCESS", value: 0)
!1158 = !DIEnumerator(name: "ERROR", value: 1)
!1159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1160, line: 44, baseType: !32, size: 32, elements: !1161)
!1160 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1161 = !{!1162, !1163, !1164, !1165}
!1162 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1163 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1164 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1165 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1166 = !{!104, !108, !113, !1167, !1205, !1211}
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 370, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 336, size: 1152, elements: !1170)
!1170 = !{!1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1204}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1169, file: !566, line: 338, baseType: !570, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1169, file: !566, line: 339, baseType: !570, size: 32, offset: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1169, file: !566, line: 340, baseType: !570, size: 32, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1169, file: !566, line: 341, baseType: !570, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1169, file: !566, line: 342, baseType: !570, size: 32, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1169, file: !566, line: 343, baseType: !570, size: 32, offset: 160)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1169, file: !566, line: 344, baseType: !570, size: 32, offset: 192)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1169, file: !566, line: 345, baseType: !113, size: 32, offset: 224)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1169, file: !566, line: 346, baseType: !570, size: 32, offset: 256)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1169, file: !566, line: 347, baseType: !570, size: 32, offset: 288)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1169, file: !566, line: 348, baseType: !1182, size: 64, offset: 320)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !675)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1169, file: !566, line: 349, baseType: !570, size: 32, offset: 384)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1169, file: !566, line: 350, baseType: !570, size: 32, offset: 416)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1169, file: !566, line: 351, baseType: !570, size: 32, offset: 448)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1169, file: !566, line: 352, baseType: !113, size: 32, offset: 480)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1169, file: !566, line: 353, baseType: !570, size: 32, offset: 512)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1169, file: !566, line: 354, baseType: !570, size: 32, offset: 544)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1169, file: !566, line: 355, baseType: !1182, size: 64, offset: 576)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1169, file: !566, line: 356, baseType: !570, size: 32, offset: 640)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1169, file: !566, line: 357, baseType: !570, size: 32, offset: 672)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1169, file: !566, line: 358, baseType: !570, size: 32, offset: 704)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1169, file: !566, line: 359, baseType: !113, size: 32, offset: 736)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1169, file: !566, line: 360, baseType: !570, size: 32, offset: 768)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1169, file: !566, line: 361, baseType: !570, size: 32, offset: 800)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1169, file: !566, line: 362, baseType: !1182, size: 64, offset: 832)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1169, file: !566, line: 363, baseType: !570, size: 32, offset: 896)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1169, file: !566, line: 364, baseType: !570, size: 32, offset: 928)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1169, file: !566, line: 365, baseType: !1182, size: 64, offset: 960)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1169, file: !566, line: 366, baseType: !570, size: 32, offset: 1024)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1169, file: !566, line: 367, baseType: !570, size: 32, offset: 1056)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1169, file: !566, line: 368, baseType: !1203, size: 32, offset: 1088)
!1203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 32, elements: !770)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1169, file: !566, line: 369, baseType: !570, size: 32, offset: 1120)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1207, line: 343, size: 64, elements: !1208)
!1207 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1208 = !{!1209, !1210}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1206, file: !1207, line: 344, baseType: !113, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1206, file: !1207, line: 345, baseType: !113, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1212 = !{!1213, !1219, !1235, !1246, !1149}
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !1151, file: !1215, line: 752, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1215 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 704, elements: !1217)
!1217 = !{!1218}
!1218 = !DISubrange(count: 44)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !1151, file: !1215, line: 752, type: !1221, isLocal: false, isDefinition: true, align: 32)
!1221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1233, !1234}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1222, file: !411, line: 380, baseType: !105, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1222, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1222, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1222, file: !411, line: 386, baseType: !1228, size: 32, offset: 96)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1229, file: !411, line: 359, baseType: !164, size: 8)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1229, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1222, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1222, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !1151, file: !1215, line: 752, type: !1237, isLocal: true, isDefinition: true, align: 32)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1239)
!1239 = !{!1240, !1245}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1238, file: !469, line: 60, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!108, !1244}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1238, file: !469, line: 65, baseType: !1244, size: 32, offset: 32)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !1151, file: !1215, line: 752, type: !1229, isLocal: true, isDefinition: true, align: 8)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1160, line: 100, size: 224, elements: !1249)
!1249 = !{!1250, !1256, !1257, !1266, !1271, !1276, !1282}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1248, file: !1160, line: 101, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1160, line: 76, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!108, !1244, !1255}
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1160, line: 56, baseType: !104)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1248, file: !1160, line: 102, baseType: !1251, size: 32, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1248, file: !1160, line: 103, baseType: !1258, size: 32, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1160, line: 83, baseType: !1259)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!108, !1244, !1255, !1262, !104}
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1160, line: 72, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{null, !1244, !1255, !104}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1248, file: !1160, line: 104, baseType: !1267, size: 32, offset: 96)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1160, line: 79, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!108, !1244, !1255, !1211}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1248, file: !1160, line: 105, baseType: !1272, size: 32, offset: 128)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1160, line: 88, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!1159, !1244, !1255}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1248, file: !1160, line: 106, baseType: !1277, size: 32, offset: 160)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1160, line: 92, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!108, !1244, !1255, !1281}
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1160, line: 64, baseType: !104)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1248, file: !1160, line: 107, baseType: !1283, size: 32, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1160, line: 96, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!108, !1244, !1255, !104}
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1289, file: !1346, line: 603, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1289 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1290, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1291, globals: !1343, splitDebugInlining: false, nameTableKind: None)
!1290 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!1291 = !{!104, !108, !1292}
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1295, line: 336, size: 160, elements: !1296)
!1295 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1296 = !{!1297, !1317, !1321, !1325, !1338}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1294, file: !1295, line: 365, baseType: !1298, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!108, !1301, !1316}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308, !1314, !1315}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1303, file: !411, line: 380, baseType: !105, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1303, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1303, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1303, file: !411, line: 386, baseType: !1309, size: 32, offset: 96)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1311)
!1311 = !{!1312, !1313}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1310, file: !411, line: 359, baseType: !164, size: 8)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1310, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1303, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1303, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1294, file: !1295, line: 366, baseType: !1318, size: 32, offset: 32)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{null, !1301, !165}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1294, file: !1295, line: 374, baseType: !1322, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 32)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!108, !1301}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1294, file: !1295, line: 377, baseType: !1326, size: 32, offset: 96)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!108, !1301, !1329}
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1295, line: 122, size: 64, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1331, file: !1295, line: 123, baseType: !113, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1331, file: !1295, line: 124, baseType: !164, size: 8, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1331, file: !1295, line: 125, baseType: !164, size: 8, offset: 40)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1331, file: !1295, line: 126, baseType: !164, size: 8, offset: 48)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1331, file: !1295, line: 127, baseType: !164, size: 8, offset: 56)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1294, file: !1295, line: 379, baseType: !1339, size: 32, offset: 128)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 32)
!1340 = !DISubroutineType(types: !1341)
!1341 = !{!108, !1301, !1342}
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1343 = !{!1287, !1344}
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1289, file: !1346, line: 38, type: !1347, isLocal: true, isDefinition: true)
!1346 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1301)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1350)
!1350 = !{!1351, !1352}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1349, file: !469, line: 60, baseType: !1322, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1349, file: !469, line: 65, baseType: !1301, size: 32, offset: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1355, file: !1524, line: 762, type: !1633, isLocal: true, isDefinition: true)
!1355 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1356, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1357, retainedTypes: !1375, globals: !1521, splitDebugInlining: false, nameTableKind: None)
!1356 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!1357 = !{!30, !1358, !1364, !1369, !1159}
!1358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1359, line: 506, baseType: !32, size: 32, elements: !1360)
!1359 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1360 = !{!1361, !1362, !1363}
!1361 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1362 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1363 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1364 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1359, line: 512, baseType: !32, size: 32, elements: !1365)
!1365 = !{!1366, !1367, !1368}
!1366 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1367 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1368 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1369 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1104, line: 43, baseType: !32, size: 32, elements: !1370)
!1370 = !{!1371, !1372, !1373, !1374}
!1371 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1372 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1373 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1374 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1375 = !{!104, !108, !1376, !1446, !1451, !1411, !1364, !1358, !1456, !1457, !113, !1471, !1426, !443, !1481, !1482}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1359, line: 523, size: 288, elements: !1379)
!1379 = !{!1380, !1401, !1407, !1412, !1416, !1417, !1418, !1422, !1442}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1378, file: !1359, line: 524, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!108, !1384, !1399, !1400}
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1391, !1397, !1398}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1386, file: !411, line: 380, baseType: !105, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1386, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1386, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1386, file: !411, line: 386, baseType: !1392, size: 32, offset: 96)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1393, file: !411, line: 359, baseType: !164, size: 8)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1393, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1386, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1386, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1359, line: 237, baseType: !164)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1359, line: 257, baseType: !113)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1378, file: !1359, line: 530, baseType: !1402, size: 32, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!108, !1384, !1405}
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1359, line: 229, baseType: !113)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1378, file: !1359, line: 532, baseType: !1408, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!108, !1384, !1411, !1406}
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1359, line: 216, baseType: !113)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1378, file: !1359, line: 535, baseType: !1413, size: 32, offset: 96)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!108, !1384, !1411}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1378, file: !1359, line: 537, baseType: !1413, size: 32, offset: 128)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1378, file: !1359, line: 539, baseType: !1413, size: 32, offset: 160)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1378, file: !1359, line: 541, baseType: !1419, size: 32, offset: 192)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!108, !1384, !1399, !1358, !1364}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1378, file: !1359, line: 544, baseType: !1423, size: 32, offset: 224)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{!108, !1384, !1426, !422}
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1359, line: 478, size: 96, elements: !1428)
!1428 = !{!1429, !1436, !1441}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1427, file: !1359, line: 482, baseType: !1430, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1431, line: 33, baseType: !1432)
!1431 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1431, line: 29, size: 32, elements: !1433)
!1433 = !{!1434}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1432, file: !1431, line: 30, baseType: !1435, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1427, file: !1359, line: 485, baseType: !1437, size: 32, offset: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1359, line: 464, baseType: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{null, !1384, !1426, !1411}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1427, file: !1359, line: 493, baseType: !1411, size: 32, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1378, file: !1359, line: 547, baseType: !1443, size: 32, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!113, !1384}
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1359, line: 428, size: 32, elements: !1449)
!1449 = !{!1450}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1448, file: !1359, line: 434, baseType: !1411, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1359, line: 441, size: 32, elements: !1454)
!1454 = !{!1455}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1453, file: !1359, line: 447, baseType: !1411, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !566, line: 276, baseType: !1459)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 265, size: 320, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1459, file: !566, line: 267, baseType: !570, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1459, file: !566, line: 268, baseType: !570, size: 32, offset: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1459, file: !566, line: 269, baseType: !570, size: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1459, file: !566, line: 270, baseType: !570, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1459, file: !566, line: 271, baseType: !570, size: 32, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1459, file: !566, line: 272, baseType: !570, size: 32, offset: 160)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1459, file: !566, line: 273, baseType: !570, size: 32, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1459, file: !566, line: 274, baseType: !570, size: 32, offset: 224)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1459, file: !566, line: 275, baseType: !1470, size: 64, offset: 256)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 64, elements: !675)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !566, line: 289, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 282, size: 288, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1479, !1480}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1473, file: !566, line: 284, baseType: !570, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1473, file: !566, line: 285, baseType: !570, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1473, file: !566, line: 286, baseType: !1478, size: 128, offset: 64)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 128, elements: !461)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1473, file: !566, line: 287, baseType: !1182, size: 64, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1473, file: !566, line: 288, baseType: !570, size: 32, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1160, line: 100, size: 224, elements: !1485)
!1485 = !{!1486, !1491, !1492, !1501, !1506, !1511, !1516}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1484, file: !1160, line: 101, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1160, line: 76, baseType: !1488)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!108, !1384, !1255}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1484, file: !1160, line: 102, baseType: !1487, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1484, file: !1160, line: 103, baseType: !1493, size: 32, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1160, line: 83, baseType: !1494)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!108, !1384, !1255, !1497, !104}
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1160, line: 72, baseType: !1498)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{null, !1384, !1255, !104}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1484, file: !1160, line: 104, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1160, line: 79, baseType: !1503)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!108, !1384, !1255, !1211}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1484, file: !1160, line: 105, baseType: !1507, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1160, line: 88, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!1159, !1384, !1255}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1484, file: !1160, line: 106, baseType: !1512, size: 32, offset: 160)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1160, line: 92, baseType: !1513)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!108, !1384, !1255, !1281}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1484, file: !1160, line: 107, baseType: !1517, size: 32, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1160, line: 96, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!108, !1384, !1255, !104}
!1521 = !{!1522, !1528, !1530, !1540, !1545, !1547, !1549, !1551, !1553, !1555, !1557, !1559, !1561, !1563, !1565, !1567, !1569, !1571, !1573, !1575, !1577, !1579, !1581, !1583, !1585, !1599, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1625, !1627, !1353, !1629, !1631, !1644, !1646, !1648, !1650, !1652, !1654}
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1355, file: !1524, line: 762, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1524 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 80, elements: !1526)
!1526 = !{!1527}
!1527 = !DISubrange(count: 5)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1355, file: !1524, line: 762, type: !1385, isLocal: false, isDefinition: true, align: 32)
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1355, file: !1524, line: 762, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1534)
!1534 = !{!1535, !1539}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1533, file: !469, line: 60, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!108, !1384}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1533, file: !469, line: 65, baseType: !1384, size: 32, offset: 32)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1355, file: !1524, line: 766, type: !1542, isLocal: false, isDefinition: true, align: 16)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 160, elements: !1543)
!1543 = !{!1544}
!1544 = !DISubrange(count: 10)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1355, file: !1524, line: 766, type: !1385, isLocal: false, isDefinition: true, align: 32)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1355, file: !1524, line: 766, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1355, file: !1524, line: 770, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1355, file: !1524, line: 770, type: !1385, isLocal: false, isDefinition: true, align: 32)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1355, file: !1524, line: 770, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1355, file: !1524, line: 774, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1355, file: !1524, line: 774, type: !1385, isLocal: false, isDefinition: true, align: 32)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1355, file: !1524, line: 774, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1355, file: !1524, line: 778, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1355, file: !1524, line: 778, type: !1385, isLocal: false, isDefinition: true, align: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1355, file: !1524, line: 778, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1355, file: !1524, line: 782, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1355, file: !1524, line: 782, type: !1385, isLocal: false, isDefinition: true, align: 32)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1355, file: !1524, line: 782, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1355, file: !1524, line: 786, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1355, file: !1524, line: 786, type: !1385, isLocal: false, isDefinition: true, align: 32)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1355, file: !1524, line: 786, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1355, file: !1524, line: 790, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1355, file: !1524, line: 790, type: !1385, isLocal: false, isDefinition: true, align: 32)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1355, file: !1524, line: 790, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1355, file: !1524, line: 762, type: !1587, isLocal: true, isDefinition: true)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1588, line: 237, size: 128, elements: !1589)
!1588 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1589 = !{!1590, !1591, !1592}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1587, file: !1588, line: 239, baseType: !1453, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1587, file: !1588, line: 241, baseType: !1384, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1587, file: !1588, line: 243, baseType: !1593, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1431, line: 40, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1431, line: 35, size: 64, elements: !1595)
!1595 = !{!1596, !1598}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1594, file: !1431, line: 36, baseType: !1597, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1594, file: !1431, line: 37, baseType: !1597, size: 32, offset: 32)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1355, file: !1524, line: 762, type: !1393, isLocal: true, isDefinition: true, align: 8)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1355, file: !1524, line: 766, type: !1587, isLocal: true, isDefinition: true)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1355, file: !1524, line: 766, type: !1393, isLocal: true, isDefinition: true, align: 8)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1355, file: !1524, line: 770, type: !1587, isLocal: true, isDefinition: true)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1355, file: !1524, line: 770, type: !1393, isLocal: true, isDefinition: true, align: 8)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1355, file: !1524, line: 774, type: !1587, isLocal: true, isDefinition: true)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1355, file: !1524, line: 774, type: !1393, isLocal: true, isDefinition: true, align: 8)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1355, file: !1524, line: 778, type: !1587, isLocal: true, isDefinition: true)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1355, file: !1524, line: 778, type: !1393, isLocal: true, isDefinition: true, align: 8)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1355, file: !1524, line: 782, type: !1587, isLocal: true, isDefinition: true)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1355, file: !1524, line: 782, type: !1393, isLocal: true, isDefinition: true, align: 8)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1355, file: !1524, line: 786, type: !1587, isLocal: true, isDefinition: true)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1355, file: !1524, line: 786, type: !1393, isLocal: true, isDefinition: true, align: 8)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1355, file: !1524, line: 790, type: !1587, isLocal: true, isDefinition: true)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1355, file: !1524, line: 790, type: !1393, isLocal: true, isDefinition: true, align: 8)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1355, file: !1524, line: 656, type: !1377, isLocal: true, isDefinition: true)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1355, file: !1524, line: 766, type: !1633, isLocal: true, isDefinition: true)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1588, line: 224, size: 160, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1634, file: !1588, line: 226, baseType: !1448, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1634, file: !1588, line: 228, baseType: !1211, size: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1634, file: !1588, line: 230, baseType: !108, size: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1634, file: !1588, line: 231, baseType: !1640, size: 64, offset: 96)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1207, line: 343, size: 64, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1640, file: !1207, line: 344, baseType: !113, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1640, file: !1207, line: 345, baseType: !113, size: 32, offset: 32)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1355, file: !1524, line: 770, type: !1633, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1355, file: !1524, line: 774, type: !1633, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1355, file: !1524, line: 778, type: !1633, isLocal: true, isDefinition: true)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1355, file: !1524, line: 782, type: !1633, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1355, file: !1524, line: 786, type: !1633, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1355, file: !1524, line: 790, type: !1633, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1658, file: !1797, line: 44, type: !1873, isLocal: false, isDefinition: true)
!1658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1660, retainedTypes: !1693, globals: !1794, splitDebugInlining: false, nameTableKind: None)
!1659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!1660 = !{!30, !1661, !1668, !1675, !1682, !1688, !1159}
!1661 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1295, line: 47, baseType: !32, size: 32, elements: !1662)
!1662 = !{!1663, !1664, !1665, !1666, !1667}
!1663 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1664 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1665 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1666 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1667 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1668 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1295, line: 75, baseType: !32, size: 32, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674}
!1670 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1671 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1672 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1673 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1674 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1675 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1295, line: 92, baseType: !32, size: 32, elements: !1676)
!1676 = !{!1677, !1678, !1679, !1680, !1681}
!1677 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1678 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1679 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1680 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1681 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1682 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1295, line: 84, baseType: !32, size: 32, elements: !1683)
!1683 = !{!1684, !1685, !1686, !1687}
!1684 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1685 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1686 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1687 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1688 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1295, line: 107, baseType: !32, size: 32, elements: !1689)
!1689 = !{!1690, !1691, !1692}
!1690 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1691 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1692 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1693 = !{!104, !108, !1694, !165, !164, !1743, !113, !1255, !1754, !168, !114, !1793}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1295, line: 336, size: 160, elements: !1697)
!1697 = !{!1698, !1717, !1721, !1725, !1738}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1696, file: !1295, line: 365, baseType: !1699, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!108, !1702, !1316}
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1704)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1705)
!1705 = !{!1706, !1707, !1708, !1709, !1715, !1716}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1704, file: !411, line: 380, baseType: !105, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1704, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1704, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1704, file: !411, line: 386, baseType: !1710, size: 32, offset: 96)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1712)
!1712 = !{!1713, !1714}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1711, file: !411, line: 359, baseType: !164, size: 8)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1711, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1704, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1704, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1696, file: !1295, line: 366, baseType: !1718, size: 32, offset: 32)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{null, !1702, !165}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1696, file: !1295, line: 374, baseType: !1722, size: 32, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!108, !1702}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1696, file: !1295, line: 377, baseType: !1726, size: 32, offset: 96)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{!108, !1702, !1729}
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1295, line: 122, size: 64, elements: !1732)
!1732 = !{!1733, !1734, !1735, !1736, !1737}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1731, file: !1295, line: 123, baseType: !113, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1731, file: !1295, line: 124, baseType: !164, size: 8, offset: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1731, file: !1295, line: 125, baseType: !164, size: 8, offset: 40)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1731, file: !1295, line: 126, baseType: !164, size: 8, offset: 48)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1731, file: !1295, line: 127, baseType: !164, size: 8, offset: 56)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1696, file: !1295, line: 379, baseType: !1739, size: 32, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!108, !1702, !1742}
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !566, line: 508, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 499, size: 224, elements: !1746)
!1746 = !{!1747, !1748, !1749, !1750, !1751, !1752, !1753}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1745, file: !566, line: 501, baseType: !570, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1745, file: !566, line: 502, baseType: !570, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1745, file: !566, line: 503, baseType: !570, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1745, file: !566, line: 504, baseType: !570, size: 32, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1745, file: !566, line: 505, baseType: !570, size: 32, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1745, file: !566, line: 506, baseType: !570, size: 32, offset: 160)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1745, file: !566, line: 507, baseType: !570, size: 32, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1160, line: 100, size: 224, elements: !1757)
!1757 = !{!1758, !1763, !1764, !1773, !1778, !1783, !1788}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1756, file: !1160, line: 101, baseType: !1759, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1160, line: 76, baseType: !1760)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!108, !1702, !1255}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1756, file: !1160, line: 102, baseType: !1759, size: 32, offset: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1756, file: !1160, line: 103, baseType: !1765, size: 32, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1160, line: 83, baseType: !1766)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!108, !1702, !1255, !1769, !104}
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1160, line: 72, baseType: !1770)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{null, !1702, !1255, !104}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1756, file: !1160, line: 104, baseType: !1774, size: 32, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1160, line: 79, baseType: !1775)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!108, !1702, !1255, !1211}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1756, file: !1160, line: 105, baseType: !1779, size: 32, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1160, line: 88, baseType: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!1159, !1702, !1255}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1756, file: !1160, line: 106, baseType: !1784, size: 32, offset: 160)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1160, line: 92, baseType: !1785)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!108, !1702, !1255, !1281}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1756, file: !1160, line: 107, baseType: !1789, size: 32, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1160, line: 96, baseType: !1790)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!108, !1702, !1255, !104}
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!1794 = !{!1656, !1795, !1799, !1801, !1808, !1810, !1854, !1857, !1859, !1862, !1865, !1867}
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1658, file: !1797, line: 1914, type: !1798, isLocal: false, isDefinition: true, align: 16)
!1797 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 128, elements: !244)
!1799 = !DIGlobalVariableExpression(var: !1800, expr: !DIExpression())
!1800 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1658, file: !1797, line: 1914, type: !1703, isLocal: false, isDefinition: true, align: 32)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1658, file: !1797, line: 1914, type: !1803, isLocal: true, isDefinition: true, align: 32)
!1803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1805)
!1805 = !{!1806, !1807}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1804, file: !469, line: 60, baseType: !1722, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1804, file: !469, line: 65, baseType: !1702, size: 32, offset: 32)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1658, file: !1797, line: 1914, type: !1711, isLocal: true, isDefinition: true, align: 8)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1658, file: !1797, line: 1914, type: !1812, isLocal: true, isDefinition: true)
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1814, line: 22, size: 224, elements: !1815)
!1814 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1815 = !{!1816, !1817, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1813, file: !1814, line: 24, baseType: !1743, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1813, file: !1814, line: 26, baseType: !1818, size: 32, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1207, line: 343, size: 64, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1820, file: !1207, line: 344, baseType: !113, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1820, file: !1207, line: 345, baseType: !113, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1813, file: !1814, line: 28, baseType: !439, size: 32, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1813, file: !1814, line: 30, baseType: !422, size: 8, offset: 96)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1813, file: !1814, line: 32, baseType: !108, size: 32, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1813, file: !1814, line: 34, baseType: !422, size: 8, offset: 160)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1813, file: !1814, line: 36, baseType: !422, size: 8, offset: 168)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1813, file: !1814, line: 38, baseType: !422, size: 8, offset: 176)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1813, file: !1814, line: 40, baseType: !422, size: 8, offset: 184)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1813, file: !1814, line: 41, baseType: !1832, size: 32, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1835, line: 60, size: 64, elements: !1836)
!1835 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1836 = !{!1837, !1853}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1834, file: !1835, line: 69, baseType: !1838, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1835, line: 50, size: 64, elements: !1841)
!1841 = !{!1842, !1851, !1852}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1840, file: !1835, line: 52, baseType: !1843, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1846, line: 37, baseType: !1847)
!1846 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1846, line: 32, size: 64, elements: !1848)
!1848 = !{!1849, !1850}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1847, file: !1846, line: 34, baseType: !113, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1847, file: !1846, line: 36, baseType: !113, size: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1840, file: !1835, line: 54, baseType: !164, size: 8, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1840, file: !1835, line: 56, baseType: !164, size: 8, offset: 40)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1834, file: !1835, line: 71, baseType: !164, size: 8, offset: 32)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1658, file: !1797, line: 1914, type: !1856, isLocal: true, isDefinition: true)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 64, elements: !770)
!1857 = !DIGlobalVariableExpression(var: !1858, expr: !DIExpression())
!1858 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1658, file: !1797, line: 1914, type: !1833, isLocal: true, isDefinition: true)
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1658, file: !1797, line: 1914, type: !1861, isLocal: true, isDefinition: true)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 64, elements: !770)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1658, file: !1797, line: 1914, type: !1864, isLocal: true, isDefinition: true)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1844, size: 128, elements: !675)
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression())
!1866 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1658, file: !1797, line: 1539, type: !1695, isLocal: true, isDefinition: true)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1658, file: !1797, line: 1914, type: !1869, isLocal: true, isDefinition: true)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1814, line: 74, size: 64, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1869, file: !1814, line: 76, baseType: !113, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1869, file: !1814, line: 78, baseType: !1702, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1874, file: !254, line: 17, baseType: !105, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1874, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1880, file: !1956, line: 65, type: !570, isLocal: true, isDefinition: true)
!1880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1881, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1882, retainedTypes: !1883, globals: !1953, splitDebugInlining: false, nameTableKind: None)
!1881 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!1882 = !{!985}
!1883 = !{!109, !1884, !220, !164, !113, !1892, !1923}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !788, line: 770, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 764, size: 128, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1886, file: !788, line: 766, baseType: !570, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1886, file: !788, line: 767, baseType: !570, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1886, file: !788, line: 768, baseType: !570, size: 32, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1886, file: !788, line: 769, baseType: !792, size: 32, offset: 96)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !788, line: 426, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 411, size: 28704, elements: !1895)
!1895 = !{!1896, !1898, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1913, !1918, !1922}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1894, file: !788, line: 413, baseType: !1897, size: 256)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 256, elements: !244)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1894, file: !788, line: 414, baseType: !1899, size: 768, offset: 256)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1900)
!1900 = !{!1901}
!1901 = !DISubrange(count: 24)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1894, file: !788, line: 415, baseType: !1897, size: 256, offset: 1024)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1894, file: !788, line: 416, baseType: !1899, size: 768, offset: 1280)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1894, file: !788, line: 417, baseType: !1897, size: 256, offset: 2048)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1894, file: !788, line: 418, baseType: !1899, size: 768, offset: 2304)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1894, file: !788, line: 419, baseType: !1897, size: 256, offset: 3072)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1894, file: !788, line: 420, baseType: !1899, size: 768, offset: 3328)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1894, file: !788, line: 421, baseType: !1897, size: 256, offset: 4096)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1894, file: !788, line: 422, baseType: !1910, size: 1792, offset: 4352)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1911)
!1911 = !{!1912}
!1912 = !DISubrange(count: 56)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1894, file: !788, line: 423, baseType: !1914, size: 1920, offset: 6144)
!1914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1915, size: 1920, elements: !1916)
!1915 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!1916 = !{!1917}
!1917 = !DISubrange(count: 240)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1894, file: !788, line: 424, baseType: !1919, size: 20608, offset: 8064)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1920)
!1920 = !{!1921}
!1921 = !DISubrange(count: 644)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1894, file: !788, line: 425, baseType: !570, size: 32, offset: 28672)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1932, !1933, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1944, !1945, !1946, !1948, !1950, !1952}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1925, file: !788, line: 447, baseType: !792, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1925, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1925, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1925, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1925, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1925, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1925, file: !788, line: 453, baseType: !1934, size: 96, offset: 192)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1915, size: 96, elements: !503)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1925, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1925, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1925, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1925, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1925, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1925, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1925, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1925, file: !788, line: 461, baseType: !1943, size: 64, offset: 512)
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 64, elements: !675)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1925, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1925, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1925, file: !788, line: 464, baseType: !1947, size: 128, offset: 640)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 128, elements: !461)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1925, file: !788, line: 465, baseType: !1949, size: 160, offset: 768)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 160, elements: !1526)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1925, file: !788, line: 466, baseType: !1951, size: 160, offset: 928)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1526)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1925, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!1953 = !{!1954, !1980, !1983, !1985, !1987, !1878}
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1880, file: !1956, line: 285, type: !1957, isLocal: true, isDefinition: true, align: 32)
!1956 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1958)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1959)
!1959 = !{!1960, !1979}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1958, file: !469, line: 60, baseType: !1961, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!108, !1964}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1977, !1978}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1966, file: !411, line: 380, baseType: !105, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1966, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1966, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1966, file: !411, line: 386, baseType: !1972, size: 32, offset: 96)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1974)
!1974 = !{!1975, !1976}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1973, file: !411, line: 359, baseType: !164, size: 8)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1973, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1966, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1966, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1958, file: !469, line: 65, baseType: !1964, size: 32, offset: 32)
!1980 = !DIGlobalVariableExpression(var: !1981, expr: !DIExpression())
!1981 = distinct !DIGlobalVariable(name: "lock", scope: !1880, file: !1956, line: 34, type: !1982, isLocal: true, isDefinition: true)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "last_load", scope: !1880, file: !1956, line: 36, type: !113, isLocal: true, isDefinition: true)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1880, file: !1956, line: 48, type: !113, isLocal: true, isDefinition: true)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1880, file: !1956, line: 54, type: !113, isLocal: true, isDefinition: true)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1991, file: !2073, line: 22, type: !2075, isLocal: true, isDefinition: true)
!1991 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1992, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1993, retainedTypes: !1994, globals: !2070, splitDebugInlining: false, nameTableKind: None)
!1992 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!1993 = !{!1358, !1364}
!1994 = !{!1995, !2059, !2064, !1411, !1364, !1358, !2069, !104}
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1359, line: 523, size: 288, elements: !1998)
!1998 = !{!1999, !2018, !2022, !2026, !2030, !2031, !2032, !2036, !2055}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1997, file: !1359, line: 524, baseType: !2000, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!108, !2003, !1399, !1400}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2016, !2017}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2005, file: !411, line: 380, baseType: !105, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2005, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2005, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2005, file: !411, line: 386, baseType: !2011, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 32)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2012, file: !411, line: 359, baseType: !164, size: 8)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2012, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2005, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2005, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1997, file: !1359, line: 530, baseType: !2019, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!108, !2003, !1405}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1997, file: !1359, line: 532, baseType: !2023, size: 32, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{!108, !2003, !1411, !1406}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1997, file: !1359, line: 535, baseType: !2027, size: 32, offset: 96)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!108, !2003, !1411}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1997, file: !1359, line: 537, baseType: !2027, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1997, file: !1359, line: 539, baseType: !2027, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1997, file: !1359, line: 541, baseType: !2033, size: 32, offset: 192)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!108, !2003, !1399, !1358, !1364}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1997, file: !1359, line: 544, baseType: !2037, size: 32, offset: 224)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!108, !2003, !2040, !422}
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1359, line: 478, size: 96, elements: !2042)
!2042 = !{!2043, !2049, !2054}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2041, file: !1359, line: 482, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1431, line: 33, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1431, line: 29, size: 32, elements: !2046)
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1431, line: 30, baseType: !2048, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2041, file: !1359, line: 485, baseType: !2050, size: 32, offset: 32)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1359, line: 464, baseType: !2051)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{null, !2003, !2040, !1411}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2041, file: !1359, line: 493, baseType: !1411, size: 32, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1997, file: !1359, line: 547, baseType: !2056, size: 32, offset: 256)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!113, !2003}
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2061)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1359, line: 428, size: 32, elements: !2062)
!2062 = !{!2063}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2061, file: !1359, line: 434, baseType: !1411, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1359, line: 441, size: 32, elements: !2067)
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2066, file: !1359, line: 447, baseType: !1411, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2070 = !{!2071, !1989}
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2072 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1991, file: !2073, line: 37, type: !2074, isLocal: true, isDefinition: true)
!2073 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2076, size: 352, elements: !2077)
!2076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2003)
!2077 = !{!2078}
!2078 = !DISubrange(count: 11)
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2081, file: !2123, line: 139, type: !2129, isLocal: false, isDefinition: true)
!2081 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2082, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2083, globals: !2120, splitDebugInlining: false, nameTableKind: None)
!2082 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2083 = !{!2084}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 370, baseType: !2086)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 336, size: 1152, elements: !2087)
!2087 = !{!2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2086, file: !566, line: 338, baseType: !570, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2086, file: !566, line: 339, baseType: !570, size: 32, offset: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2086, file: !566, line: 340, baseType: !570, size: 32, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2086, file: !566, line: 341, baseType: !570, size: 32, offset: 96)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2086, file: !566, line: 342, baseType: !570, size: 32, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2086, file: !566, line: 343, baseType: !570, size: 32, offset: 160)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2086, file: !566, line: 344, baseType: !570, size: 32, offset: 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2086, file: !566, line: 345, baseType: !113, size: 32, offset: 224)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2086, file: !566, line: 346, baseType: !570, size: 32, offset: 256)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2086, file: !566, line: 347, baseType: !570, size: 32, offset: 288)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2086, file: !566, line: 348, baseType: !1182, size: 64, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2086, file: !566, line: 349, baseType: !570, size: 32, offset: 384)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2086, file: !566, line: 350, baseType: !570, size: 32, offset: 416)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2086, file: !566, line: 351, baseType: !570, size: 32, offset: 448)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2086, file: !566, line: 352, baseType: !113, size: 32, offset: 480)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2086, file: !566, line: 353, baseType: !570, size: 32, offset: 512)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2086, file: !566, line: 354, baseType: !570, size: 32, offset: 544)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2086, file: !566, line: 355, baseType: !1182, size: 64, offset: 576)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2086, file: !566, line: 356, baseType: !570, size: 32, offset: 640)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2086, file: !566, line: 357, baseType: !570, size: 32, offset: 672)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2086, file: !566, line: 358, baseType: !570, size: 32, offset: 704)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2086, file: !566, line: 359, baseType: !113, size: 32, offset: 736)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2086, file: !566, line: 360, baseType: !570, size: 32, offset: 768)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2086, file: !566, line: 361, baseType: !570, size: 32, offset: 800)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2086, file: !566, line: 362, baseType: !1182, size: 64, offset: 832)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2086, file: !566, line: 363, baseType: !570, size: 32, offset: 896)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2086, file: !566, line: 364, baseType: !570, size: 32, offset: 928)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2086, file: !566, line: 365, baseType: !1182, size: 64, offset: 960)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2086, file: !566, line: 366, baseType: !570, size: 32, offset: 1024)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2086, file: !566, line: 367, baseType: !570, size: 32, offset: 1056)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2086, file: !566, line: 368, baseType: !1203, size: 32, offset: 1088)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2086, file: !566, line: 369, baseType: !570, size: 32, offset: 1120)
!2120 = !{!2121, !2124, !2079}
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2081, file: !2123, line: 137, type: !113, isLocal: false, isDefinition: true)
!2123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2124 = !DIGlobalVariableExpression(var: !2125, expr: !DIExpression())
!2125 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2081, file: !2123, line: 138, type: !2126, isLocal: false, isDefinition: true)
!2126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2127, size: 128, elements: !2128)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2128 = !{!234}
!2129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2127, size: 64, elements: !244)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2132, file: !2135, line: 23, type: !2136, isLocal: false, isDefinition: true)
!2132 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2133, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, globals: !2134, splitDebugInlining: false, nameTableKind: None)
!2133 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2134 = !{!2130}
!2135 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2139, file: !2143, line: 37, type: !2397, isLocal: false, isDefinition: true)
!2139 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2140, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2141, retainedTypes: !2150, globals: !2223, splitDebugInlining: false, nameTableKind: None)
!2140 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2141 = !{!2142, !30, !985}
!2142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2143, line: 63, baseType: !32, size: 32, elements: !2144)
!2143 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2144 = !{!2145, !2146, !2147, !2148, !2149}
!2145 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2146 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2147 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2148 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2149 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2150 = !{!439, !104, !108, !2151, !443, !113, !2181, !220, !164, !2206}
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2154, line: 51, size: 64, elements: !2155)
!2154 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2155 = !{!2156, !2176}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2153, file: !2154, line: 52, baseType: !2157, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2154, line: 38, baseType: !2158)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!108, !2161, !209, !168}
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2163)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2174, !2175}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2163, file: !411, line: 380, baseType: !105, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2163, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2163, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2163, file: !411, line: 386, baseType: !2169, size: 32, offset: 96)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 32)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2170, file: !411, line: 359, baseType: !164, size: 8)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2170, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2163, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2163, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2153, file: !2154, line: 53, baseType: !2177, size: 32, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2154, line: 47, baseType: !2178)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 32)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!108, !2161, !209, !168, !113}
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !2184)
!2184 = !{!2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2183, file: !788, line: 447, baseType: !792, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2183, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2183, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2183, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2183, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2183, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2183, file: !788, line: 453, baseType: !1934, size: 96, offset: 192)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2183, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2183, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2183, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2183, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2183, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2183, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2183, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2183, file: !788, line: 461, baseType: !1943, size: 64, offset: 512)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2183, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2183, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2183, file: !788, line: 464, baseType: !1947, size: 128, offset: 640)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2183, file: !788, line: 465, baseType: !1949, size: 160, offset: 768)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2183, file: !788, line: 466, baseType: !1951, size: 160, offset: 928)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2183, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !788, line: 426, baseType: !2208)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 411, size: 28704, elements: !2209)
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2208, file: !788, line: 413, baseType: !1897, size: 256)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2208, file: !788, line: 414, baseType: !1899, size: 768, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2208, file: !788, line: 415, baseType: !1897, size: 256, offset: 1024)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2208, file: !788, line: 416, baseType: !1899, size: 768, offset: 1280)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2208, file: !788, line: 417, baseType: !1897, size: 256, offset: 2048)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2208, file: !788, line: 418, baseType: !1899, size: 768, offset: 2304)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2208, file: !788, line: 419, baseType: !1897, size: 256, offset: 3072)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2208, file: !788, line: 420, baseType: !1899, size: 768, offset: 3328)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2208, file: !788, line: 421, baseType: !1897, size: 256, offset: 4096)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2208, file: !788, line: 422, baseType: !1910, size: 1792, offset: 4352)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2208, file: !788, line: 423, baseType: !1914, size: 1920, offset: 6144)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2208, file: !788, line: 424, baseType: !1919, size: 20608, offset: 8064)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2208, file: !788, line: 425, baseType: !570, size: 32, offset: 28672)
!2223 = !{!2137, !2224, !2346, !2355, !2357, !2360, !2365, !2367, !2372}
!2224 = !DIGlobalVariableExpression(var: !2225, expr: !DIExpression())
!2225 = distinct !DIGlobalVariable(name: "_kernel", scope: !2139, file: !2143, line: 40, type: !2226, isLocal: false, isDefinition: true)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !363, line: 158, size: 288, elements: !2227)
!2227 = !{!2228, !2341}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2226, file: !363, line: 159, baseType: !2229, size: 192)
!2229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2230, size: 192, elements: !770)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !363, line: 100, size: 192, elements: !2231)
!2231 = !{!2232, !2233, !2234, !2335, !2336, !2337, !2338}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2230, file: !363, line: 102, baseType: !113, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2230, file: !363, line: 105, baseType: !443, size: 32, offset: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2230, file: !363, line: 108, baseType: !2235, size: 32, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !2237)
!2237 = !{!2238, !2296, !2308, !2309, !2310, !2311, !2317, !2330}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2236, file: !645, line: 247, baseType: !2239, size: 384)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !2240)
!2240 = !{!2241, !2265, !2272, !2273, !2274, !2283, !2284, !2285}
!2241 = !DIDerivedType(tag: DW_TAG_member, scope: !2239, file: !645, line: 60, baseType: !2242, size: 64)
!2242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2239, file: !645, line: 60, size: 64, elements: !2243)
!2243 = !{!2244, !2259}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2242, file: !645, line: 61, baseType: !2245, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2246)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2247)
!2247 = !{!2248, !2254}
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2246, file: !367, line: 38, baseType: !2249, size: 32)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2246, file: !367, line: 38, size: 32, elements: !2250)
!2250 = !{!2251, !2253}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2249, file: !367, line: 39, baseType: !2252, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2249, file: !367, line: 40, baseType: !2252, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2246, file: !367, line: 42, baseType: !2255, size: 32, offset: 32)
!2255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2246, file: !367, line: 42, size: 32, elements: !2256)
!2256 = !{!2257, !2258}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2255, file: !367, line: 43, baseType: !2252, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2255, file: !367, line: 44, baseType: !2252, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2242, file: !645, line: 62, baseType: !2260, size: 64)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !2261)
!2261 = !{!2262}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2260, file: !670, line: 50, baseType: !2263, size: 64)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2264, size: 64, elements: !675)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2239, file: !645, line: 68, baseType: !2266, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2268)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2269)
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2268, file: !363, line: 232, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2246)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2239, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2239, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!2274 = !DIDerivedType(tag: DW_TAG_member, scope: !2239, file: !645, line: 90, baseType: !2275, size: 16, offset: 112)
!2275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2239, file: !645, line: 90, size: 16, elements: !2276)
!2276 = !{!2277, !2282}
!2277 = !DIDerivedType(tag: DW_TAG_member, scope: !2275, file: !645, line: 91, baseType: !2278, size: 16)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2275, file: !645, line: 91, size: 16, elements: !2279)
!2279 = !{!2280, !2281}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2278, file: !645, line: 96, baseType: !693, size: 8)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2278, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2275, file: !645, line: 100, baseType: !168, size: 16)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2239, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2239, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2239, file: !645, line: 131, baseType: !2286, size: 192, offset: 192)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2287)
!2287 = !{!2288, !2289, !2295}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2286, file: !363, line: 245, baseType: !2245, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2286, file: !363, line: 246, baseType: !2290, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2291)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{null, !2294}
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2286, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2236, file: !645, line: 250, baseType: !2297, size: 288, offset: 384)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !2298)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2297, file: !712, line: 26, baseType: !113, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2297, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2297, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2297, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2297, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2297, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2297, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2297, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2297, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2236, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2236, file: !645, line: 256, baseType: !2267, size: 64, offset: 704)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2236, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2236, file: !645, line: 300, baseType: !2312, size: 96, offset: 800)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !2313)
!2313 = !{!2314, !2315, !2316}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2312, file: !645, line: 153, baseType: !22, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2312, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2312, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2236, file: !645, line: 325, baseType: !2318, size: 32, offset: 896)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2320)
!2320 = !{!2321, !2327, !2328}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2319, file: !359, line: 5074, baseType: !2322, size: 96)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !2323)
!2323 = !{!2324, !2325, !2326}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2322, file: !738, line: 57, baseType: !741, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2322, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2322, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2319, file: !359, line: 5075, baseType: !2267, size: 64, offset: 96)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2319, file: !359, line: 5076, baseType: !2329, offset: 160)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2236, file: !645, line: 343, baseType: !2331, size: 64, offset: 928)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !2332)
!2332 = !{!2333, !2334}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2331, file: !712, line: 63, baseType: !113, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2331, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2230, file: !363, line: 111, baseType: !2235, size: 32, offset: 96)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2230, file: !363, line: 124, baseType: !108, size: 32, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2230, file: !363, line: 127, baseType: !164, size: 8, offset: 160)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2230, file: !363, line: 153, baseType: !2339, offset: 168)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2340, line: 33, elements: !437)
!2340 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2226, file: !363, line: 170, baseType: !2342, size: 96, offset: 192)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !2343)
!2343 = !{!2344, !2345}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2342, file: !363, line: 86, baseType: !2235, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2342, file: !363, line: 90, baseType: !2271, size: 64, offset: 32)
!2346 = !DIGlobalVariableExpression(var: !2347, expr: !DIExpression())
!2347 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2139, file: !2143, line: 43, type: !2348, isLocal: false, isDefinition: true, align: 512)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2349, size: 8704, elements: !2353)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2350, line: 47, size: 8, elements: !2351)
!2350 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2351 = !{!2352}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2349, file: !2350, line: 48, baseType: !107, size: 8)
!2353 = !{!2354}
!2354 = !DISubrange(count: 1088)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2139, file: !2143, line: 44, type: !2236, isLocal: false, isDefinition: true)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2139, file: !2143, line: 48, type: !2359, isLocal: false, isDefinition: true)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2236, size: 1024, elements: !770)
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2139, file: !2143, line: 86, type: !2362, isLocal: false, isDefinition: true, align: 512)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2349, size: 16896, elements: !2363)
!2363 = !{!771, !2364}
!2364 = !DISubrange(count: 2112)
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2139, file: !2143, line: 217, type: !422, isLocal: false, isDefinition: true)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2139, file: !2143, line: 50, type: !2369, isLocal: true, isDefinition: true, align: 512)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2349, size: 3072, elements: !2370)
!2370 = !{!771, !2371}
!2371 = !DISubrange(count: 384)
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "levels", scope: !2374, file: !2143, line: 232, type: !2394, isLocal: true, isDefinition: true)
!2374 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2143, file: !2143, line: 230, type: !2375, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !2377)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{null, !2142}
!2377 = !{!2378, !2379, !2389, !2393}
!2378 = !DILocalVariable(name: "level", arg: 1, scope: !2374, file: !2143, line: 230, type: !2142)
!2379 = !DILocalVariable(name: "entry", scope: !2374, file: !2143, line: 244, type: !2380)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2382)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2383)
!2383 = !{!2384, !2388}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2382, file: !469, line: 60, baseType: !2385, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!108, !2161}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2382, file: !469, line: 65, baseType: !2161, size: 32, offset: 32)
!2389 = !DILocalVariable(name: "dev", scope: !2390, file: !2143, line: 247, type: !2161)
!2390 = distinct !DILexicalBlock(scope: !2391, file: !2143, line: 246, column: 64)
!2391 = distinct !DILexicalBlock(scope: !2392, file: !2143, line: 246, column: 2)
!2392 = distinct !DILexicalBlock(scope: !2374, file: !2143, line: 246, column: 2)
!2393 = !DILocalVariable(name: "rc", scope: !2390, file: !2143, line: 248, type: !108)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2380, size: 192, elements: !2395)
!2395 = !{!2396}
!2396 = !DISubrange(count: 6)
!2397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !2399)
!2399 = !{!2400, !2401}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2398, file: !254, line: 17, baseType: !105, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2398, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "states_str", scope: !2404, file: !2405, line: 276, type: !2526, isLocal: true, isDefinition: true)
!2404 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2405, file: !2405, line: 271, type: !2406, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !2517)
!2405 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!105, !2408, !443, !439}
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !2409)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !2411)
!2411 = !{!2412, !2470, !2482, !2483, !2484, !2485, !2491, !2504}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2410, file: !645, line: 247, baseType: !2413, size: 384)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !2414)
!2414 = !{!2415, !2439, !2446, !2447, !2448, !2457, !2458, !2459}
!2415 = !DIDerivedType(tag: DW_TAG_member, scope: !2413, file: !645, line: 60, baseType: !2416, size: 64)
!2416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2413, file: !645, line: 60, size: 64, elements: !2417)
!2417 = !{!2418, !2433}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2416, file: !645, line: 61, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2421)
!2421 = !{!2422, !2428}
!2422 = !DIDerivedType(tag: DW_TAG_member, scope: !2420, file: !367, line: 38, baseType: !2423, size: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2420, file: !367, line: 38, size: 32, elements: !2424)
!2424 = !{!2425, !2427}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2423, file: !367, line: 39, baseType: !2426, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2423, file: !367, line: 40, baseType: !2426, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2420, file: !367, line: 42, baseType: !2429, size: 32, offset: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2420, file: !367, line: 42, size: 32, elements: !2430)
!2430 = !{!2431, !2432}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2429, file: !367, line: 43, baseType: !2426, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2429, file: !367, line: 44, baseType: !2426, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2416, file: !645, line: 62, baseType: !2434, size: 64)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !2435)
!2435 = !{!2436}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2434, file: !670, line: 50, baseType: !2437, size: 64)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2438, size: 64, elements: !675)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2413, file: !645, line: 68, baseType: !2440, size: 32, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2442)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2443)
!2443 = !{!2444}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2442, file: !363, line: 232, baseType: !2445, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2420)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2413, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2413, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !2413, file: !645, line: 90, baseType: !2449, size: 16, offset: 112)
!2449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2413, file: !645, line: 90, size: 16, elements: !2450)
!2450 = !{!2451, !2456}
!2451 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !645, line: 91, baseType: !2452, size: 16)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2449, file: !645, line: 91, size: 16, elements: !2453)
!2453 = !{!2454, !2455}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2452, file: !645, line: 96, baseType: !693, size: 8)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2452, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2449, file: !645, line: 100, baseType: !168, size: 16)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2413, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2413, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2413, file: !645, line: 131, baseType: !2460, size: 192, offset: 192)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2461)
!2461 = !{!2462, !2463, !2469}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2460, file: !363, line: 245, baseType: !2419, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2460, file: !363, line: 246, baseType: !2464, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2465)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{null, !2468}
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2460, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2410, file: !645, line: 250, baseType: !2471, size: 288, offset: 384)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2471, file: !712, line: 26, baseType: !113, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2471, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2471, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2471, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2471, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2471, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2471, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2471, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2471, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2410, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2410, file: !645, line: 256, baseType: !2441, size: 64, offset: 704)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2410, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2410, file: !645, line: 300, baseType: !2486, size: 96, offset: 800)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !2487)
!2487 = !{!2488, !2489, !2490}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2486, file: !645, line: 153, baseType: !22, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2486, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2486, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2410, file: !645, line: 325, baseType: !2492, size: 32, offset: 896)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2494)
!2494 = !{!2495, !2501, !2502}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2493, file: !359, line: 5074, baseType: !2496, size: 96)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !2497)
!2497 = !{!2498, !2499, !2500}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2496, file: !738, line: 57, baseType: !741, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2496, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2496, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2493, file: !359, line: 5075, baseType: !2441, size: 64, offset: 96)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2493, file: !359, line: 5076, baseType: !2503, offset: 160)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2410, file: !645, line: 343, baseType: !2505, size: 64, offset: 928)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !2506)
!2506 = !{!2507, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2505, file: !712, line: 63, baseType: !113, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2505, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!2509 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2510, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2511, globals: !2513, splitDebugInlining: false, nameTableKind: None)
!2510 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2511 = !{!104, !105, !109, !164, !108, !2512, !24, !439, !443, !22, !113, !114}
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2513 = !{!2402, !2514}
!2514 = !DIGlobalVariableExpression(var: !2515, expr: !DIExpression())
!2515 = distinct !DIGlobalVariable(name: "states_sz", scope: !2404, file: !2405, line: 279, type: !2516, isLocal: true, isDefinition: true)
!2516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2074, size: 256, elements: !244)
!2517 = !{!2518, !2519, !2520, !2521, !2522, !2523, !2524}
!2518 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2404, file: !2405, line: 271, type: !2408)
!2519 = !DILocalVariable(name: "buf", arg: 2, scope: !2404, file: !2405, line: 271, type: !443)
!2520 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2404, file: !2405, line: 271, type: !439)
!2521 = !DILocalVariable(name: "off", scope: !2404, file: !2405, line: 273, type: !439)
!2522 = !DILocalVariable(name: "bit", scope: !2404, file: !2405, line: 274, type: !164)
!2523 = !DILocalVariable(name: "thread_state", scope: !2404, file: !2405, line: 275, type: !164)
!2524 = !DILocalVariable(name: "index", scope: !2525, file: !2405, line: 293, type: !164)
!2525 = distinct !DILexicalBlock(scope: !2404, file: !2405, line: 293, column: 2)
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !244)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2529, file: !2637, line: 56, type: !2626, isLocal: false, isDefinition: true)
!2529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2531, globals: !2634, splitDebugInlining: false, nameTableKind: None)
!2530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2531 = !{!2532, !443, !104, !2632, !209, !109, !220, !108, !113, !114, !2633}
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !2534)
!2534 = !{!2535, !2593, !2605, !2606, !2607, !2608, !2614, !2627}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2533, file: !645, line: 247, baseType: !2536, size: 384)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !2537)
!2537 = !{!2538, !2562, !2569, !2570, !2571, !2580, !2581, !2582}
!2538 = !DIDerivedType(tag: DW_TAG_member, scope: !2536, file: !645, line: 60, baseType: !2539, size: 64)
!2539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2536, file: !645, line: 60, size: 64, elements: !2540)
!2540 = !{!2541, !2556}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2539, file: !645, line: 61, baseType: !2542, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2543)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2544)
!2544 = !{!2545, !2551}
!2545 = !DIDerivedType(tag: DW_TAG_member, scope: !2543, file: !367, line: 38, baseType: !2546, size: 32)
!2546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2543, file: !367, line: 38, size: 32, elements: !2547)
!2547 = !{!2548, !2550}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2546, file: !367, line: 39, baseType: !2549, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2546, file: !367, line: 40, baseType: !2549, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, scope: !2543, file: !367, line: 42, baseType: !2552, size: 32, offset: 32)
!2552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2543, file: !367, line: 42, size: 32, elements: !2553)
!2553 = !{!2554, !2555}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2552, file: !367, line: 43, baseType: !2549, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2552, file: !367, line: 44, baseType: !2549, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2539, file: !645, line: 62, baseType: !2557, size: 64)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !2558)
!2558 = !{!2559}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2557, file: !670, line: 50, baseType: !2560, size: 64)
!2560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2561, size: 64, elements: !675)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2536, file: !645, line: 68, baseType: !2563, size: 32, offset: 64)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2565)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2566)
!2566 = !{!2567}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2565, file: !363, line: 232, baseType: !2568, size: 64)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2543)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2536, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2536, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2536, file: !645, line: 90, baseType: !2572, size: 16, offset: 112)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2536, file: !645, line: 90, size: 16, elements: !2573)
!2573 = !{!2574, !2579}
!2574 = !DIDerivedType(tag: DW_TAG_member, scope: !2572, file: !645, line: 91, baseType: !2575, size: 16)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2572, file: !645, line: 91, size: 16, elements: !2576)
!2576 = !{!2577, !2578}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2575, file: !645, line: 96, baseType: !693, size: 8)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2575, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2572, file: !645, line: 100, baseType: !168, size: 16)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2536, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2536, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2536, file: !645, line: 131, baseType: !2583, size: 192, offset: 192)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2584)
!2584 = !{!2585, !2586, !2592}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2583, file: !363, line: 245, baseType: !2542, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2583, file: !363, line: 246, baseType: !2587, size: 32, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2588)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DISubroutineType(types: !2590)
!2590 = !{null, !2591}
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2583, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2533, file: !645, line: 250, baseType: !2594, size: 288, offset: 384)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !2595)
!2595 = !{!2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2594, file: !712, line: 26, baseType: !113, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2594, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2594, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2594, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2594, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2594, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2594, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2594, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2594, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2533, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2533, file: !645, line: 256, baseType: !2564, size: 64, offset: 704)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2533, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2533, file: !645, line: 300, baseType: !2609, size: 96, offset: 800)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !2610)
!2610 = !{!2611, !2612, !2613}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2609, file: !645, line: 153, baseType: !22, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2609, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2609, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2533, file: !645, line: 325, baseType: !2615, size: 32, offset: 896)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 32)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2617)
!2617 = !{!2618, !2624, !2625}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2616, file: !359, line: 5074, baseType: !2619, size: 96)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !2620)
!2620 = !{!2621, !2622, !2623}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2619, file: !738, line: 57, baseType: !741, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2619, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2619, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2616, file: !359, line: 5075, baseType: !2564, size: 64, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2616, file: !359, line: 5076, baseType: !2626, offset: 160)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2533, file: !645, line: 343, baseType: !2628, size: 64, offset: 928)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !2629)
!2629 = !{!2630, !2631}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2628, file: !712, line: 63, baseType: !113, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2628, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 32)
!2634 = !{!2527, !2635, !2638, !2640}
!2635 = !DIGlobalVariableExpression(var: !2636, expr: !DIExpression())
!2636 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2529, file: !2637, line: 404, type: !108, isLocal: true, isDefinition: true)
!2637 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2638 = !DIGlobalVariableExpression(var: !2639, expr: !DIExpression())
!2639 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2529, file: !2637, line: 405, type: !108, isLocal: true, isDefinition: true)
!2640 = !DIGlobalVariableExpression(var: !2641, expr: !DIExpression())
!2641 = distinct !DIGlobalVariable(name: "pending_current", scope: !2529, file: !2637, line: 425, type: !2532, isLocal: true, isDefinition: true)
!2642 = !DIGlobalVariableExpression(var: !2643, expr: !DIExpression())
!2643 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2644, file: !2674, line: 15, type: !114, isLocal: true, isDefinition: true)
!2644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2646, globals: !2671, splitDebugInlining: false, nameTableKind: None)
!2645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2646 = !{!109, !104, !220, !113, !114, !108, !2647, !443, !111}
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2649)
!2649 = !{!2650, !2665, !2670}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2648, file: !363, line: 245, baseType: !2651, size: 64)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2652)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2653)
!2653 = !{!2654, !2660}
!2654 = !DIDerivedType(tag: DW_TAG_member, scope: !2652, file: !367, line: 38, baseType: !2655, size: 32)
!2655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2652, file: !367, line: 38, size: 32, elements: !2656)
!2656 = !{!2657, !2659}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2655, file: !367, line: 39, baseType: !2658, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2655, file: !367, line: 40, baseType: !2658, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, scope: !2652, file: !367, line: 42, baseType: !2661, size: 32, offset: 32)
!2661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2652, file: !367, line: 42, size: 32, elements: !2662)
!2662 = !{!2663, !2664}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2661, file: !367, line: 43, baseType: !2658, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2661, file: !367, line: 44, baseType: !2658, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2648, file: !363, line: 246, baseType: !2666, size: 32, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2667)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 32)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{null, !2647}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2648, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2671 = !{!2642, !2672, !2676, !2678}
!2672 = !DIGlobalVariableExpression(var: !2673, expr: !DIExpression())
!2673 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2644, file: !2674, line: 19, type: !2675, isLocal: true, isDefinition: true)
!2674 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2676 = !DIGlobalVariableExpression(var: !2677, expr: !DIExpression())
!2677 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2644, file: !2674, line: 25, type: !108, isLocal: true, isDefinition: true)
!2678 = !DIGlobalVariableExpression(var: !2679, expr: !DIExpression())
!2679 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2644, file: !2674, line: 17, type: !2680, isLocal: true, isDefinition: true)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2652)
!2681 = !DIGlobalVariableExpression(var: !2682, expr: !DIExpression())
!2682 = distinct !DIGlobalVariable(name: "lock", scope: !2683, file: !2805, line: 16, type: !2797, isLocal: true, isDefinition: true)
!2683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2685, globals: !2804, splitDebugInlining: false, nameTableKind: None)
!2684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2685 = !{!2686, !443, !109, !104, !108, !2732, !2803}
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 32)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !2688)
!2688 = !{!2689, !2714, !2720, !2724, !2725, !2730, !2731}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2687, file: !359, line: 1324, baseType: !2690, size: 192)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2691)
!2691 = !{!2692, !2707, !2713}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2690, file: !363, line: 245, baseType: !2693, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2694)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2695)
!2695 = !{!2696, !2702}
!2696 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !367, line: 38, baseType: !2697, size: 32)
!2697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !367, line: 38, size: 32, elements: !2698)
!2698 = !{!2699, !2701}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2697, file: !367, line: 39, baseType: !2700, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2697, file: !367, line: 40, baseType: !2700, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !367, line: 42, baseType: !2703, size: 32, offset: 32)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !367, line: 42, size: 32, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2703, file: !367, line: 43, baseType: !2700, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2703, file: !367, line: 44, baseType: !2700, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2690, file: !363, line: 246, baseType: !2708, size: 32, offset: 64)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2709)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{null, !2712}
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2690, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2687, file: !359, line: 1327, baseType: !2715, size: 64, offset: 192)
!2715 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2716)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2717)
!2717 = !{!2718}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2716, file: !363, line: 232, baseType: !2719, size: 64)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2694)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !2687, file: !359, line: 1330, baseType: !2721, size: 32, offset: 256)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 32)
!2722 = !DISubroutineType(types: !2723)
!2723 = !{null, !2686}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !2687, file: !359, line: 1333, baseType: !2721, size: 32, offset: 288)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2687, file: !359, line: 1336, baseType: !2726, size: 64, offset: 320)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !2728)
!2728 = !{!2729}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2727, file: !110, line: 66, baseType: !109, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2687, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2687, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !2734)
!2734 = !{!2735, !2764, !2776, !2777, !2778, !2779, !2785, !2798}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2733, file: !645, line: 247, baseType: !2736, size: 384)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !2737)
!2737 = !{!2738, !2748, !2750, !2751, !2752, !2761, !2762, !2763}
!2738 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !645, line: 60, baseType: !2739, size: 64)
!2739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !645, line: 60, size: 64, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2739, file: !645, line: 61, baseType: !2693, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2739, file: !645, line: 62, baseType: !2743, size: 64)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !2744)
!2744 = !{!2745}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2743, file: !670, line: 50, baseType: !2746, size: 64)
!2746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2747, size: 64, elements: !675)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2736, file: !645, line: 68, baseType: !2749, size: 32, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2736, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2736, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!2752 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !645, line: 90, baseType: !2753, size: 16, offset: 112)
!2753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !645, line: 90, size: 16, elements: !2754)
!2754 = !{!2755, !2760}
!2755 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !645, line: 91, baseType: !2756, size: 16)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2753, file: !645, line: 91, size: 16, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2756, file: !645, line: 96, baseType: !693, size: 8)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2756, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2753, file: !645, line: 100, baseType: !168, size: 16)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2736, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2736, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2736, file: !645, line: 131, baseType: !2690, size: 192, offset: 192)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2733, file: !645, line: 250, baseType: !2765, size: 288, offset: 384)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !2766)
!2766 = !{!2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2765, file: !712, line: 26, baseType: !113, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2765, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2765, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2765, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2765, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2765, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2765, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2765, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2765, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2733, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2733, file: !645, line: 256, baseType: !2715, size: 64, offset: 704)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2733, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2733, file: !645, line: 300, baseType: !2780, size: 96, offset: 800)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !2781)
!2781 = !{!2782, !2783, !2784}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2780, file: !645, line: 153, baseType: !22, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2780, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2780, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2733, file: !645, line: 325, baseType: !2786, size: 32, offset: 896)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 32)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2788)
!2788 = !{!2789, !2795, !2796}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2787, file: !359, line: 5074, baseType: !2790, size: 96)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !2791)
!2791 = !{!2792, !2793, !2794}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2790, file: !738, line: 57, baseType: !741, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2790, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2790, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2787, file: !359, line: 5075, baseType: !2715, size: 64, offset: 96)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2787, file: !359, line: 5076, baseType: !2797, offset: 160)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2733, file: !645, line: 343, baseType: !2799, size: 64, offset: 928)
!2799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !2800)
!2800 = !{!2801, !2802}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2799, file: !712, line: 63, baseType: !113, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2799, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2804 = !{!2681}
!2805 = !DIFile(filename: "zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!2807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2812, retainedTypes: !2832, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2812 = !{!2813, !2821}
!2813 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2814, line: 69, baseType: !32, size: 32, elements: !2815)
!2814 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2815 = !{!2816, !2817, !2818, !2819, !2820}
!2816 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2817 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2818 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2819 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2820 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2821 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2814, line: 56, baseType: !32, size: 32, elements: !2822)
!2822 = !{!2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831}
!2823 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2824 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2825 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2826 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2827 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2828 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2829 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2830 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2831 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2832 = !{!108, !2813, !2821, !2833, !694, !429, !2835, !2836, !165, !169, !105, !439, !104, !22, !32, !538, !2838, !2839, !144, !539, !112, !540, !2834, !2840, !2841, !2842, !2843}
!2833 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2814, line: 31, baseType: !2834)
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !112)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !440, line: 329, baseType: !32)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2814, line: 32, baseType: !2837)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !440, line: 145, baseType: !108)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 32)
!2844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2845, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2845 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2848, splitDebugInlining: false, nameTableKind: None)
!2847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2848 = !{!105, !165, !108, !32}
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2851, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2851 = !{!2852, !30}
!2852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2853, line: 27, baseType: !32, size: 32, elements: !2854)
!2853 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2854 = !{!2855, !2856, !2857, !2858, !2859}
!2855 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2856 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2857 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2858 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2859 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2862, retainedTypes: !2863, splitDebugInlining: false, nameTableKind: None)
!2861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2862 = !{!985, !2852, !30}
!2863 = !{!1148, !2864, !104, !108, !220, !113, !164, !2881}
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !788, line: 426, baseType: !2866)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 411, size: 28704, elements: !2867)
!2867 = !{!2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2866, file: !788, line: 413, baseType: !1897, size: 256)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2866, file: !788, line: 414, baseType: !1899, size: 768, offset: 256)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2866, file: !788, line: 415, baseType: !1897, size: 256, offset: 1024)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2866, file: !788, line: 416, baseType: !1899, size: 768, offset: 1280)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2866, file: !788, line: 417, baseType: !1897, size: 256, offset: 2048)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2866, file: !788, line: 418, baseType: !1899, size: 768, offset: 2304)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2866, file: !788, line: 419, baseType: !1897, size: 256, offset: 3072)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2866, file: !788, line: 420, baseType: !1899, size: 768, offset: 3328)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2866, file: !788, line: 421, baseType: !1897, size: 256, offset: 4096)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2866, file: !788, line: 422, baseType: !1910, size: 1792, offset: 4352)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2866, file: !788, line: 423, baseType: !1914, size: 1920, offset: 6144)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2866, file: !788, line: 424, baseType: !1919, size: 20608, offset: 8064)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2866, file: !788, line: 425, baseType: !570, size: 32, offset: 28672)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !2884)
!2884 = !{!2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2883, file: !788, line: 447, baseType: !792, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2883, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2883, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2883, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2883, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2883, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2883, file: !788, line: 453, baseType: !1934, size: 96, offset: 192)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2883, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2883, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2883, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2883, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2883, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2883, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2883, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2883, file: !788, line: 461, baseType: !1943, size: 64, offset: 512)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2883, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2883, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2883, file: !788, line: 464, baseType: !1947, size: 128, offset: 640)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2883, file: !788, line: 465, baseType: !1949, size: 160, offset: 768)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2883, file: !788, line: 466, baseType: !1951, size: 160, offset: 928)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2883, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!2906 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2907, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!2907 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2908 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2909, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2910, splitDebugInlining: false, nameTableKind: None)
!2909 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2910 = !{!104, !108, !22, !2911}
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !2913)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !2914)
!2914 = !{!2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2913, file: !788, line: 447, baseType: !792, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2913, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2913, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2913, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2913, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2913, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2913, file: !788, line: 453, baseType: !1934, size: 96, offset: 192)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2913, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2913, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2913, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2913, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2913, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2913, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2913, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2913, file: !788, line: 461, baseType: !1943, size: 64, offset: 512)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2913, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2913, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2913, file: !788, line: 464, baseType: !1947, size: 128, offset: 640)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2913, file: !788, line: 465, baseType: !1949, size: 160, offset: 768)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2913, file: !788, line: 466, baseType: !1951, size: 160, offset: 928)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2913, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!2936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2938, splitDebugInlining: false, nameTableKind: None)
!2937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2938 = !{!2939, !104, !108}
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !2942)
!2942 = !{!2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2941, file: !788, line: 447, baseType: !792, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2941, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2941, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2941, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2941, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2941, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2941, file: !788, line: 453, baseType: !1934, size: 96, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2941, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2941, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2941, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2941, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2941, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2941, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2941, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2941, file: !788, line: 461, baseType: !1943, size: 64, offset: 512)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2941, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2941, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2941, file: !788, line: 464, baseType: !1947, size: 128, offset: 640)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2941, file: !788, line: 465, baseType: !1949, size: 160, offset: 768)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2941, file: !788, line: 466, baseType: !1951, size: 160, offset: 928)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2941, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!2964 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2965, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2966, splitDebugInlining: false, nameTableKind: None)
!2965 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!2966 = !{!2967, !113, !104, !108}
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 32)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2969, line: 98, size: 256, elements: !2970)
!2969 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2970 = !{!2971, !2976, !2981, !2986, !2991, !2996, !3001, !3006}
!2971 = !DIDerivedType(tag: DW_TAG_member, scope: !2968, file: !2969, line: 99, baseType: !2972, size: 32)
!2972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2968, file: !2969, line: 99, size: 32, elements: !2973)
!2973 = !{!2974, !2975}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2972, file: !2969, line: 99, baseType: !113, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2972, file: !2969, line: 99, baseType: !113, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, scope: !2968, file: !2969, line: 100, baseType: !2977, size: 32, offset: 32)
!2977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2968, file: !2969, line: 100, size: 32, elements: !2978)
!2978 = !{!2979, !2980}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2977, file: !2969, line: 100, baseType: !113, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2977, file: !2969, line: 100, baseType: !113, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, scope: !2968, file: !2969, line: 101, baseType: !2982, size: 32, offset: 64)
!2982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2968, file: !2969, line: 101, size: 32, elements: !2983)
!2983 = !{!2984, !2985}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2982, file: !2969, line: 101, baseType: !113, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2982, file: !2969, line: 101, baseType: !113, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, scope: !2968, file: !2969, line: 102, baseType: !2987, size: 32, offset: 96)
!2987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2968, file: !2969, line: 102, size: 32, elements: !2988)
!2988 = !{!2989, !2990}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2987, file: !2969, line: 102, baseType: !113, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2987, file: !2969, line: 102, baseType: !113, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, scope: !2968, file: !2969, line: 103, baseType: !2992, size: 32, offset: 128)
!2992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2968, file: !2969, line: 103, size: 32, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2992, file: !2969, line: 103, baseType: !113, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2992, file: !2969, line: 103, baseType: !113, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, scope: !2968, file: !2969, line: 104, baseType: !2997, size: 32, offset: 160)
!2997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2968, file: !2969, line: 104, size: 32, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2997, file: !2969, line: 104, baseType: !113, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2997, file: !2969, line: 104, baseType: !113, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !2968, file: !2969, line: 105, baseType: !3002, size: 32, offset: 192)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2968, file: !2969, line: 105, size: 32, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3002, file: !2969, line: 105, baseType: !113, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3002, file: !2969, line: 105, baseType: !113, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2968, file: !2969, line: 106, baseType: !113, size: 32, offset: 224)
!3007 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3008, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2851, retainedTypes: !3009, splitDebugInlining: false, nameTableKind: None)
!3008 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3009 = !{!3010, !104, !108, !3035, !3078, !113}
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3012, file: !788, line: 447, baseType: !792, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3012, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3012, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3012, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3012, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3012, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3012, file: !788, line: 453, baseType: !1934, size: 96, offset: 192)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3012, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3012, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3012, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3012, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3012, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3012, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3012, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3012, file: !788, line: 461, baseType: !1943, size: 64, offset: 512)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3012, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3012, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3012, file: !788, line: 464, baseType: !1947, size: 128, offset: 640)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3012, file: !788, line: 465, baseType: !1949, size: 160, offset: 768)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3012, file: !788, line: 466, baseType: !1951, size: 160, offset: 928)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3012, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2969, line: 141, baseType: !3037)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2969, line: 97, size: 256, elements: !3038)
!3038 = !{!3039}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3037, file: !2969, line: 107, baseType: !3040, size: 256)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2969, line: 98, size: 256, elements: !3041)
!3041 = !{!3042, !3047, !3052, !3057, !3062, !3067, !3072, !3077}
!3042 = !DIDerivedType(tag: DW_TAG_member, scope: !3040, file: !2969, line: 99, baseType: !3043, size: 32)
!3043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3040, file: !2969, line: 99, size: 32, elements: !3044)
!3044 = !{!3045, !3046}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3043, file: !2969, line: 99, baseType: !113, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3043, file: !2969, line: 99, baseType: !113, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, scope: !3040, file: !2969, line: 100, baseType: !3048, size: 32, offset: 32)
!3048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3040, file: !2969, line: 100, size: 32, elements: !3049)
!3049 = !{!3050, !3051}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3048, file: !2969, line: 100, baseType: !113, size: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3048, file: !2969, line: 100, baseType: !113, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, scope: !3040, file: !2969, line: 101, baseType: !3053, size: 32, offset: 64)
!3053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3040, file: !2969, line: 101, size: 32, elements: !3054)
!3054 = !{!3055, !3056}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3053, file: !2969, line: 101, baseType: !113, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3053, file: !2969, line: 101, baseType: !113, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, scope: !3040, file: !2969, line: 102, baseType: !3058, size: 32, offset: 96)
!3058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3040, file: !2969, line: 102, size: 32, elements: !3059)
!3059 = !{!3060, !3061}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3058, file: !2969, line: 102, baseType: !113, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3058, file: !2969, line: 102, baseType: !113, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, scope: !3040, file: !2969, line: 103, baseType: !3063, size: 32, offset: 128)
!3063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3040, file: !2969, line: 103, size: 32, elements: !3064)
!3064 = !{!3065, !3066}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3063, file: !2969, line: 103, baseType: !113, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3063, file: !2969, line: 103, baseType: !113, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, scope: !3040, file: !2969, line: 104, baseType: !3068, size: 32, offset: 160)
!3068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3040, file: !2969, line: 104, size: 32, elements: !3069)
!3069 = !{!3070, !3071}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3068, file: !2969, line: 104, baseType: !113, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3068, file: !2969, line: 104, baseType: !113, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, scope: !3040, file: !2969, line: 105, baseType: !3073, size: 32, offset: 192)
!3073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3040, file: !2969, line: 105, size: 32, elements: !3074)
!3074 = !{!3075, !3076}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3073, file: !2969, line: 105, baseType: !113, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3073, file: !2969, line: 105, baseType: !113, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3040, file: !2969, line: 106, baseType: !113, size: 32, offset: 224)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!3079 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3080, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1882, retainedTypes: !3081, splitDebugInlining: false, nameTableKind: None)
!3080 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3081 = !{!1148, !220, !164, !113, !3082, !3099}
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 32)
!3083 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !788, line: 426, baseType: !3084)
!3084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 411, size: 28704, elements: !3085)
!3085 = !{!3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3084, file: !788, line: 413, baseType: !1897, size: 256)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3084, file: !788, line: 414, baseType: !1899, size: 768, offset: 256)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3084, file: !788, line: 415, baseType: !1897, size: 256, offset: 1024)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3084, file: !788, line: 416, baseType: !1899, size: 768, offset: 1280)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3084, file: !788, line: 417, baseType: !1897, size: 256, offset: 2048)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3084, file: !788, line: 418, baseType: !1899, size: 768, offset: 2304)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3084, file: !788, line: 419, baseType: !1897, size: 256, offset: 3072)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3084, file: !788, line: 420, baseType: !1899, size: 768, offset: 3328)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3084, file: !788, line: 421, baseType: !1897, size: 256, offset: 4096)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3084, file: !788, line: 422, baseType: !1910, size: 1792, offset: 4352)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3084, file: !788, line: 423, baseType: !1914, size: 1920, offset: 6144)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3084, file: !788, line: 424, baseType: !1919, size: 20608, offset: 8064)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3084, file: !788, line: 425, baseType: !570, size: 32, offset: 28672)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 32)
!3100 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !3101)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !3102)
!3102 = !{!3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3101, file: !788, line: 447, baseType: !792, size: 32)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3101, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3101, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3101, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3101, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3101, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3101, file: !788, line: 453, baseType: !1934, size: 96, offset: 192)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3101, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3101, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3101, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3101, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3101, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3101, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3101, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3101, file: !788, line: 461, baseType: !1943, size: 64, offset: 512)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3101, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3101, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3101, file: !788, line: 464, baseType: !1947, size: 128, offset: 640)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3101, file: !788, line: 465, baseType: !1949, size: 160, offset: 768)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3101, file: !788, line: 466, baseType: !1951, size: 160, offset: 928)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3101, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!3124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3126, splitDebugInlining: false, nameTableKind: None)
!3125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3126 = !{!3127, !104, !108}
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !3129)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !3130)
!3130 = !{!3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3129, file: !788, line: 447, baseType: !792, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3129, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3129, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3129, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3129, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3129, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3129, file: !788, line: 453, baseType: !1934, size: 96, offset: 192)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3129, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3129, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3129, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3129, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3129, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3129, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3129, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3129, file: !788, line: 461, baseType: !1943, size: 64, offset: 512)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3129, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3129, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3129, file: !788, line: 464, baseType: !1947, size: 128, offset: 640)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3129, file: !788, line: 465, baseType: !1949, size: 160, offset: 768)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3129, file: !788, line: 466, baseType: !1951, size: 160, offset: 928)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3129, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!3152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3154, splitDebugInlining: false, nameTableKind: None)
!3153 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3154 = !{!107, !443, !439, !1316, !3155, !165, !104}
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3157 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3158, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3159, splitDebugInlining: false, nameTableKind: None)
!3158 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3159 = !{!3160}
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 370, baseType: !3162)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 336, size: 1152, elements: !3163)
!3163 = !{!3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3162, file: !566, line: 338, baseType: !570, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3162, file: !566, line: 339, baseType: !570, size: 32, offset: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3162, file: !566, line: 340, baseType: !570, size: 32, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3162, file: !566, line: 341, baseType: !570, size: 32, offset: 96)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3162, file: !566, line: 342, baseType: !570, size: 32, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3162, file: !566, line: 343, baseType: !570, size: 32, offset: 160)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3162, file: !566, line: 344, baseType: !570, size: 32, offset: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3162, file: !566, line: 345, baseType: !113, size: 32, offset: 224)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3162, file: !566, line: 346, baseType: !570, size: 32, offset: 256)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3162, file: !566, line: 347, baseType: !570, size: 32, offset: 288)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3162, file: !566, line: 348, baseType: !1182, size: 64, offset: 320)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3162, file: !566, line: 349, baseType: !570, size: 32, offset: 384)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3162, file: !566, line: 350, baseType: !570, size: 32, offset: 416)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3162, file: !566, line: 351, baseType: !570, size: 32, offset: 448)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3162, file: !566, line: 352, baseType: !113, size: 32, offset: 480)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3162, file: !566, line: 353, baseType: !570, size: 32, offset: 512)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3162, file: !566, line: 354, baseType: !570, size: 32, offset: 544)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3162, file: !566, line: 355, baseType: !1182, size: 64, offset: 576)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3162, file: !566, line: 356, baseType: !570, size: 32, offset: 640)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3162, file: !566, line: 357, baseType: !570, size: 32, offset: 672)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3162, file: !566, line: 358, baseType: !570, size: 32, offset: 704)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3162, file: !566, line: 359, baseType: !113, size: 32, offset: 736)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3162, file: !566, line: 360, baseType: !570, size: 32, offset: 768)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3162, file: !566, line: 361, baseType: !570, size: 32, offset: 800)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3162, file: !566, line: 362, baseType: !1182, size: 64, offset: 832)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3162, file: !566, line: 363, baseType: !570, size: 32, offset: 896)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3162, file: !566, line: 364, baseType: !570, size: 32, offset: 928)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3162, file: !566, line: 365, baseType: !1182, size: 64, offset: 960)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3162, file: !566, line: 366, baseType: !570, size: 32, offset: 1024)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3162, file: !566, line: 367, baseType: !570, size: 32, offset: 1056)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3162, file: !566, line: 368, baseType: !1203, size: 32, offset: 1088)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3162, file: !566, line: 369, baseType: !570, size: 32, offset: 1120)
!3196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3197, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3197 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3199, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3200, retainedTypes: !3216, splitDebugInlining: false, nameTableKind: None)
!3199 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3200 = !{!3201, !3208, !3212}
!3201 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3202, line: 38, baseType: !32, size: 32, elements: !3203)
!3202 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3203 = !{!3204, !3205, !3206, !3207}
!3204 = !DIEnumerator(name: "HAL_OK", value: 0)
!3205 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3206 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3207 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3208 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1155, line: 184, baseType: !32, size: 32, elements: !3209)
!3209 = !{!3210, !3211}
!3210 = !DIEnumerator(name: "RESET", value: 0)
!3211 = !DIEnumerator(name: "SET", value: 1)
!3212 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1155, line: 190, baseType: !32, size: 32, elements: !3213)
!3213 = !{!3214, !3215}
!3214 = !DIEnumerator(name: "DISABLE", value: 0)
!3215 = !DIEnumerator(name: "ENABLE", value: 1)
!3216 = !{!104, !3217, !164, !113, !1793, !3253, !3259, !3270, !168, !3271, !114}
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 370, baseType: !3219)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 336, size: 1152, elements: !3220)
!3220 = !{!3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3219, file: !566, line: 338, baseType: !570, size: 32)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3219, file: !566, line: 339, baseType: !570, size: 32, offset: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3219, file: !566, line: 340, baseType: !570, size: 32, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3219, file: !566, line: 341, baseType: !570, size: 32, offset: 96)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3219, file: !566, line: 342, baseType: !570, size: 32, offset: 128)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3219, file: !566, line: 343, baseType: !570, size: 32, offset: 160)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3219, file: !566, line: 344, baseType: !570, size: 32, offset: 192)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3219, file: !566, line: 345, baseType: !113, size: 32, offset: 224)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3219, file: !566, line: 346, baseType: !570, size: 32, offset: 256)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3219, file: !566, line: 347, baseType: !570, size: 32, offset: 288)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3219, file: !566, line: 348, baseType: !1182, size: 64, offset: 320)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3219, file: !566, line: 349, baseType: !570, size: 32, offset: 384)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3219, file: !566, line: 350, baseType: !570, size: 32, offset: 416)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3219, file: !566, line: 351, baseType: !570, size: 32, offset: 448)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3219, file: !566, line: 352, baseType: !113, size: 32, offset: 480)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3219, file: !566, line: 353, baseType: !570, size: 32, offset: 512)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3219, file: !566, line: 354, baseType: !570, size: 32, offset: 544)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3219, file: !566, line: 355, baseType: !1182, size: 64, offset: 576)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3219, file: !566, line: 356, baseType: !570, size: 32, offset: 640)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3219, file: !566, line: 357, baseType: !570, size: 32, offset: 672)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3219, file: !566, line: 358, baseType: !570, size: 32, offset: 704)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3219, file: !566, line: 359, baseType: !113, size: 32, offset: 736)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3219, file: !566, line: 360, baseType: !570, size: 32, offset: 768)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3219, file: !566, line: 361, baseType: !570, size: 32, offset: 800)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3219, file: !566, line: 362, baseType: !1182, size: 64, offset: 832)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3219, file: !566, line: 363, baseType: !570, size: 32, offset: 896)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3219, file: !566, line: 364, baseType: !570, size: 32, offset: 928)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3219, file: !566, line: 365, baseType: !1182, size: 64, offset: 960)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3219, file: !566, line: 366, baseType: !570, size: 32, offset: 1024)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3219, file: !566, line: 367, baseType: !570, size: 32, offset: 1056)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3219, file: !566, line: 368, baseType: !1203, size: 32, offset: 1088)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3219, file: !566, line: 369, baseType: !570, size: 32, offset: 1120)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 32)
!3254 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !566, line: 330, baseType: !3255)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 326, size: 64, elements: !3256)
!3256 = !{!3257, !3258}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3255, file: !566, line: 328, baseType: !570, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3255, file: !566, line: 329, baseType: !570, size: 32, offset: 32)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !566, line: 259, baseType: !3261)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 250, size: 224, elements: !3262)
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268, !3269}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3261, file: !566, line: 252, baseType: !570, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3261, file: !566, line: 253, baseType: !570, size: 32, offset: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3261, file: !566, line: 254, baseType: !570, size: 32, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3261, file: !566, line: 255, baseType: !570, size: 32, offset: 96)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3261, file: !566, line: 256, baseType: !570, size: 32, offset: 128)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3261, file: !566, line: 257, baseType: !570, size: 32, offset: 160)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3261, file: !566, line: 258, baseType: !570, size: 32, offset: 192)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !566, line: 276, baseType: !3273)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 265, size: 320, elements: !3274)
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3273, file: !566, line: 267, baseType: !570, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3273, file: !566, line: 268, baseType: !570, size: 32, offset: 32)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3273, file: !566, line: 269, baseType: !570, size: 32, offset: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3273, file: !566, line: 270, baseType: !570, size: 32, offset: 96)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3273, file: !566, line: 271, baseType: !570, size: 32, offset: 128)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3273, file: !566, line: 272, baseType: !570, size: 32, offset: 160)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3273, file: !566, line: 273, baseType: !570, size: 32, offset: 192)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3273, file: !566, line: 274, baseType: !570, size: 32, offset: 224)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3273, file: !566, line: 275, baseType: !1470, size: 64, offset: 256)
!3284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3285, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3286, retainedTypes: !3287, splitDebugInlining: false, nameTableKind: None)
!3285 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3286 = !{!1154}
!3287 = !{!3288, !113, !3296, !3302, !3313}
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !788, line: 770, baseType: !3290)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 764, size: 128, elements: !3291)
!3291 = !{!3292, !3293, !3294, !3295}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3290, file: !788, line: 766, baseType: !570, size: 32)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3290, file: !788, line: 767, baseType: !570, size: 32, offset: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3290, file: !788, line: 768, baseType: !570, size: 32, offset: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3290, file: !788, line: 769, baseType: !792, size: 32, offset: 96)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !566, line: 330, baseType: !3298)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 326, size: 64, elements: !3299)
!3299 = !{!3300, !3301}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3298, file: !566, line: 328, baseType: !570, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3298, file: !566, line: 329, baseType: !570, size: 32, offset: 32)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !566, line: 259, baseType: !3304)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 250, size: 224, elements: !3305)
!3305 = !{!3306, !3307, !3308, !3309, !3310, !3311, !3312}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3304, file: !566, line: 252, baseType: !570, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3304, file: !566, line: 253, baseType: !570, size: 32, offset: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3304, file: !566, line: 254, baseType: !570, size: 32, offset: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3304, file: !566, line: 255, baseType: !570, size: 32, offset: 96)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3304, file: !566, line: 256, baseType: !570, size: 32, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3304, file: !566, line: 257, baseType: !570, size: 32, offset: 160)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3304, file: !566, line: 258, baseType: !570, size: 32, offset: 192)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 32)
!3314 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 370, baseType: !3315)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 336, size: 1152, elements: !3316)
!3316 = !{!3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3315, file: !566, line: 338, baseType: !570, size: 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3315, file: !566, line: 339, baseType: !570, size: 32, offset: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3315, file: !566, line: 340, baseType: !570, size: 32, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3315, file: !566, line: 341, baseType: !570, size: 32, offset: 96)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3315, file: !566, line: 342, baseType: !570, size: 32, offset: 128)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3315, file: !566, line: 343, baseType: !570, size: 32, offset: 160)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3315, file: !566, line: 344, baseType: !570, size: 32, offset: 192)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3315, file: !566, line: 345, baseType: !113, size: 32, offset: 224)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3315, file: !566, line: 346, baseType: !570, size: 32, offset: 256)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3315, file: !566, line: 347, baseType: !570, size: 32, offset: 288)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3315, file: !566, line: 348, baseType: !1182, size: 64, offset: 320)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3315, file: !566, line: 349, baseType: !570, size: 32, offset: 384)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3315, file: !566, line: 350, baseType: !570, size: 32, offset: 416)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3315, file: !566, line: 351, baseType: !570, size: 32, offset: 448)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3315, file: !566, line: 352, baseType: !113, size: 32, offset: 480)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3315, file: !566, line: 353, baseType: !570, size: 32, offset: 512)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3315, file: !566, line: 354, baseType: !570, size: 32, offset: 544)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3315, file: !566, line: 355, baseType: !1182, size: 64, offset: 576)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3315, file: !566, line: 356, baseType: !570, size: 32, offset: 640)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3315, file: !566, line: 357, baseType: !570, size: 32, offset: 672)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3315, file: !566, line: 358, baseType: !570, size: 32, offset: 704)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3315, file: !566, line: 359, baseType: !113, size: 32, offset: 736)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3315, file: !566, line: 360, baseType: !570, size: 32, offset: 768)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3315, file: !566, line: 361, baseType: !570, size: 32, offset: 800)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3315, file: !566, line: 362, baseType: !1182, size: 64, offset: 832)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3315, file: !566, line: 363, baseType: !570, size: 32, offset: 896)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3315, file: !566, line: 364, baseType: !570, size: 32, offset: 928)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3315, file: !566, line: 365, baseType: !1182, size: 64, offset: 960)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3315, file: !566, line: 366, baseType: !570, size: 32, offset: 1024)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3315, file: !566, line: 367, baseType: !570, size: 32, offset: 1056)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3315, file: !566, line: 368, baseType: !1203, size: 32, offset: 1088)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3315, file: !566, line: 369, baseType: !570, size: 32, offset: 1120)
!3349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3351, splitDebugInlining: false, nameTableKind: None)
!3350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3351 = !{!104, !439}
!3352 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3353, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3354, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!3353 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3354 = !{!3355, !3362, !30}
!3355 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3356, line: 14, baseType: !32, size: 32, elements: !3357)
!3356 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3357 = !{!3358, !3359, !3360, !3361}
!3358 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3359 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3360 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3361 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3356, line: 42, baseType: !32, size: 32, elements: !3363)
!3363 = !{!3364, !3365, !3366, !3367, !3368, !3369}
!3364 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3365 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3366 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3367 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3368 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3369 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3371, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!3371 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3373, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3374, splitDebugInlining: false, nameTableKind: None)
!3373 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3374 = !{!22, !104, !108}
!3375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3376, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!3376 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3377 = !{!"Ubuntu clang version 14.0.6"}
!3378 = !{i32 7, !"Dwarf Version", i32 4}
!3379 = !{i32 2, !"Debug Info Version", i32 3}
!3380 = !{i32 1, !"wchar_size", i32 4}
!3381 = !{i32 1, !"min_enum_size", i32 4}
!3382 = !{i32 1, !"branch-target-enforcement", i32 0}
!3383 = !{i32 1, !"sign-return-address", i32 0}
!3384 = !{i32 1, !"sign-return-address-all", i32 0}
!3385 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3386 = !{i32 7, !"frame-pointer", i32 2}
!3387 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3388, file: !3388, line: 26, type: !3389, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !437)
!3388 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3389 = !DISubroutineType(types: !3390)
!3390 = !{null}
!3391 = !DILocation(line: 28, column: 1, scope: !3387)
!3392 = !{i64 2154358638, i64 2154358658, i64 2154358721}
!3393 = !DILocation(line: 29, column: 1, scope: !3387)
!3394 = !{i64 2154359053, i64 2154359073, i64 2154359136}
!3395 = !DILocation(line: 30, column: 1, scope: !3387)
!3396 = !{i64 2154359472, i64 2154359492, i64 2154359555}
!3397 = !DILocation(line: 31, column: 1, scope: !3387)
!3398 = !{i64 2154359891, i64 2154359911, i64 2154359974}
!3399 = !DILocation(line: 33, column: 1, scope: !3387)
!3400 = !{i64 2154360183, i64 2154360203, i64 2154360266}
!3401 = !DILocation(line: 35, column: 1, scope: !3387)
!3402 = !{i64 2154360508, i64 2154360528, i64 2154360591}
!3403 = !DILocation(line: 50, column: 1, scope: !3387)
!3404 = !{i64 2154360935, i64 2154360955, i64 2154361018}
!3405 = !DILocation(line: 54, column: 1, scope: !3387)
!3406 = !{i64 2154361374, i64 2154361394, i64 2154361457}
!3407 = !DILocation(line: 61, column: 1, scope: !3387)
!3408 = !{i64 2154361691, i64 2154361711, i64 2154361774}
!3409 = !DILocation(line: 63, column: 1, scope: !3387)
!3410 = !{i64 2154362071, i64 2154362091, i64 2154362154}
!3411 = !DILocation(line: 64, column: 1, scope: !3387)
!3412 = !{i64 2154362593, i64 2154362613, i64 2154362676}
!3413 = !DILocation(line: 65, column: 1, scope: !3387)
!3414 = !{i64 2154363091, i64 2154363111, i64 2154363174}
!3415 = !DILocation(line: 66, column: 1, scope: !3387)
!3416 = !{i64 2154363573, i64 2154363593, i64 2154363656}
!3417 = !DILocation(line: 67, column: 1, scope: !3387)
!3418 = !{i64 2154364080, i64 2154364100, i64 2154364163}
!3419 = !DILocation(line: 68, column: 1, scope: !3387)
!3420 = !{i64 2154364568, i64 2154364588, i64 2154364651}
!3421 = !DILocation(line: 70, column: 1, scope: !3387)
!3422 = !{i64 2154365036, i64 2154365056, i64 2154365119}
!3423 = !DILocation(line: 71, column: 1, scope: !3387)
!3424 = !{i64 2154365478, i64 2154365498, i64 2154365561}
!3425 = !DILocation(line: 72, column: 1, scope: !3387)
!3426 = !{i64 2154365936, i64 2154365956, i64 2154366019}
!3427 = !DILocation(line: 79, column: 1, scope: !3387)
!3428 = !{i64 2154366390, i64 2154366410, i64 2154366473}
!3429 = !DILocation(line: 80, column: 1, scope: !3387)
!3430 = !{i64 2154366901, i64 2154366921, i64 2154366984}
!3431 = !DILocation(line: 82, column: 1, scope: !3387)
!3432 = !{i64 2154371453, i64 2154371473, i64 2154371536}
!3433 = !DILocation(line: 97, column: 1, scope: !3387)
!3434 = !{i64 2154371790, i64 2154371810, i64 2154371873}
!3435 = !DILocation(line: 99, column: 1, scope: !3387)
!3436 = !{i64 2154372008, i64 2154372028, i64 2154372091}
!3437 = !DILocation(line: 102, column: 1, scope: !3387)
!3438 = !{i64 2154372265, i64 2154372285, i64 2154372348}
!3439 = !DILocation(line: 105, column: 1, scope: !3387)
!3440 = !{i64 2154372505, i64 2154372525, i64 2154372588}
!3441 = !DILocation(line: 115, column: 1, scope: !3387)
!3442 = !{i64 2154372844, i64 2154372864, i64 2154372927}
!3443 = !DILocation(line: 118, column: 1, scope: !3387)
!3444 = !{i64 2154373188, i64 2154373208, i64 2154373271}
!3445 = !DILocation(line: 32, column: 1, scope: !3446)
!3446 = !DILexicalBlockFile(scope: !3387, file: !3447, discriminator: 0)
!3447 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3448 = !{i64 2154373544, i64 2154373564, i64 2154373627}
!3449 = !DILocation(line: 33, column: 1, scope: !3446)
!3450 = !{i64 2154374056, i64 2154374076, i64 2154374139}
!3451 = !DILocation(line: 53, column: 1, scope: !3446)
!3452 = !{i64 2154374564, i64 2154374584, i64 2154374647}
!3453 = !DILocation(line: 54, column: 1, scope: !3446)
!3454 = !{i64 2154374982, i64 2154375002, i64 2154375065}
!3455 = !DILocation(line: 55, column: 1, scope: !3446)
!3456 = !{i64 2154375400, i64 2154375420, i64 2154375483}
!3457 = !DILocation(line: 56, column: 1, scope: !3446)
!3458 = !{i64 2154375818, i64 2154375838, i64 2154375901}
!3459 = !DILocation(line: 57, column: 1, scope: !3446)
!3460 = !{i64 2154376236, i64 2154376256, i64 2154376319}
!3461 = !DILocation(line: 58, column: 1, scope: !3446)
!3462 = !{i64 2154376654, i64 2154376674, i64 2154376737}
!3463 = !DILocation(line: 59, column: 1, scope: !3446)
!3464 = !{i64 2154377072, i64 2154377092, i64 2154377155}
!3465 = !DILocation(line: 60, column: 1, scope: !3446)
!3466 = !{i64 2154377496, i64 2154377516, i64 2154377579}
!3467 = !DILocation(line: 61, column: 1, scope: !3446)
!3468 = !{i64 2154377813, i64 2154377833, i64 2154377896}
!3469 = !DILocation(line: 70, column: 1, scope: !3446)
!3470 = !{i64 2154378042, i64 2154378062, i64 2154378125}
!3471 = !DILocation(line: 72, column: 1, scope: !3446)
!3472 = !{i64 2154378374, i64 2154378394, i64 2154378457}
!3473 = !DILocation(line: 73, column: 1, scope: !3446)
!3474 = !{i64 2154378824, i64 2154378844, i64 2154378907}
!3475 = !DILocation(line: 74, column: 1, scope: !3446)
!3476 = !{i64 2154379274, i64 2154379294, i64 2154379357}
!3477 = !DILocation(line: 75, column: 1, scope: !3446)
!3478 = !{i64 2154379724, i64 2154379744, i64 2154379807}
!3479 = !DILocation(line: 76, column: 1, scope: !3446)
!3480 = !{i64 2154380174, i64 2154380194, i64 2154380257}
!3481 = !DILocation(line: 77, column: 1, scope: !3446)
!3482 = !{i64 2154380624, i64 2154380644, i64 2154380707}
!3483 = !DILocation(line: 78, column: 1, scope: !3446)
!3484 = !{i64 2154385135, i64 2154385155, i64 2154385218}
!3485 = !DILocation(line: 79, column: 1, scope: !3446)
!3486 = !{i64 2154385585, i64 2154385605, i64 2154385668}
!3487 = !DILocation(line: 80, column: 1, scope: !3446)
!3488 = !{i64 2154386038, i64 2154386058, i64 2154386121}
!3489 = !DILocation(line: 84, column: 1, scope: !3446)
!3490 = !{i64 2154386370, i64 2154386390, i64 2154386453}
!3491 = !DILocation(line: 91, column: 1, scope: !3446)
!3492 = !{i64 2154386767, i64 2154386787, i64 2154386850}
!3493 = !DILocation(line: 93, column: 1, scope: !3446)
!3494 = !{i64 2154387134, i64 2154387154, i64 2154387217}
!3495 = !DILocation(line: 106, column: 1, scope: !3446)
!3496 = !{i64 2154387404, i64 2154387424, i64 2154387487}
!3497 = !DILocation(line: 11, column: 1, scope: !3498)
!3498 = !DILexicalBlockFile(scope: !3387, file: !3499, discriminator: 0)
!3499 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3500 = distinct !DISubprogram(name: "main", scope: !119, file: !119, line: 29, type: !3389, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3501)
!3501 = !{!3502, !3519, !3521, !3523, !3527, !3529, !3530, !3532, !3534, !3537, !3539, !3540, !3545, !3546, !3547, !3551, !3553}
!3502 = !DILocalVariable(name: "vnd_sensor", scope: !3500, file: !119, line: 31, type: !3503)
!3503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3504)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 32)
!3505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3506)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !3507)
!3507 = !{!3508, !3509, !3510, !3511, !3517, !3518}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3506, file: !411, line: 380, baseType: !105, size: 32)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3506, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3506, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3506, file: !411, line: 386, baseType: !3512, size: 32, offset: 96)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 32)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !3514)
!3514 = !{!3515, !3516}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3513, file: !411, line: 359, baseType: !164, size: 8)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3513, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3506, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3506, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!3519 = !DILocalVariable(name: "iodev", scope: !3500, file: !119, line: 32, type: !3520)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!3521 = !DILocalVariable(name: "n", scope: !3522, file: !119, line: 35, type: !108)
!3522 = distinct !DILexicalBlock(scope: !3500, file: !119, line: 35, column: 2)
!3523 = !DILocalVariable(name: "sqe", scope: !3524, file: !119, line: 36, type: !3526)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !119, line: 35, column: 30)
!3525 = distinct !DILexicalBlock(scope: !3522, file: !119, line: 35, column: 2)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!3527 = !DILocalVariable(name: "idx", scope: !3528, file: !119, line: 36, type: !24)
!3528 = distinct !DILexicalBlock(scope: !3524, file: !119, line: 36, column: 26)
!3529 = !DILocalVariable(name: "acq", scope: !3528, file: !119, line: 36, type: !422)
!3530 = !DILocalVariable(name: "m", scope: !3531, file: !119, line: 44, type: !108)
!3531 = distinct !DILexicalBlock(scope: !3500, file: !119, line: 43, column: 15)
!3532 = !DILocalVariable(name: "userdata", scope: !3531, file: !119, line: 45, type: !3533)
!3533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !461)
!3534 = !DILocalVariable(name: "cqe", scope: !3535, file: !119, line: 55, type: !3536)
!3535 = distinct !DILexicalBlock(scope: !3531, file: !119, line: 54, column: 17)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3537 = !DILocalVariable(name: "idx", scope: !3538, file: !119, line: 55, type: !24)
!3538 = distinct !DILexicalBlock(scope: !3535, file: !119, line: 55, column: 27)
!3539 = !DILocalVariable(name: "has_consumable", scope: !3538, file: !119, line: 55, type: !422)
!3540 = !DILocalVariable(name: "_str", scope: !3541, file: !119, line: 81, type: !105)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !119, line: 81, column: 4)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !119, line: 80, column: 27)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !119, line: 80, column: 3)
!3544 = distinct !DILexicalBlock(scope: !3531, file: !119, line: 80, column: 3)
!3545 = !DILocalVariable(name: "is_user_context", scope: !3541, file: !119, line: 81, type: !422)
!3546 = !DILocalVariable(name: "filters", scope: !3541, file: !119, line: 81, type: !113)
!3547 = !DILocalVariable(name: "sqe", scope: !3548, file: !119, line: 90, type: !3526)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !119, line: 89, column: 27)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !119, line: 89, column: 3)
!3550 = distinct !DILexicalBlock(scope: !3531, file: !119, line: 89, column: 3)
!3551 = !DILocalVariable(name: "idx", scope: !3552, file: !119, line: 90, type: !24)
!3552 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 90, column: 27)
!3553 = !DILocalVariable(name: "acq", scope: !3552, file: !119, line: 90, type: !422)
!3554 = !DILocation(line: 0, scope: !3500)
!3555 = !DILocation(line: 32, column: 41, scope: !3500)
!3556 = !DILocation(line: 0, scope: !3522)
!3557 = !DILocation(line: 36, column: 26, scope: !3528)
!3558 = !DILocation(line: 35, column: 2, scope: !3522)
!3559 = !DILocation(line: 43, column: 2, scope: !3500)
!3560 = !DILocation(line: 0, scope: !3528)
!3561 = !DILocation(line: 36, column: 26, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !119, line: 36, column: 26)
!3563 = distinct !DILexicalBlock(scope: !3528, file: !119, line: 36, column: 26)
!3564 = !DILocation(line: 0, scope: !3524)
!3565 = !DILocation(line: 38, column: 50, scope: !3524)
!3566 = !DILocation(line: 38, column: 3, scope: !3524)
!3567 = !DILocation(line: 40, column: 3, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !119, line: 40, column: 3)
!3569 = distinct !DILexicalBlock(scope: !3524, file: !119, line: 40, column: 3)
!3570 = !DILocation(line: 40, column: 3, scope: !3569)
!3571 = !DILocation(line: 40, column: 3, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3568, file: !119, line: 40, column: 3)
!3573 = !DILocation(line: 35, column: 26, scope: !3525)
!3574 = !DILocation(line: 35, column: 20, scope: !3525)
!3575 = distinct !{!3575, !3558, !3576}
!3576 = !DILocation(line: 41, column: 2, scope: !3522)
!3577 = !DILocation(line: 0, scope: !3531)
!3578 = !DILocation(line: 45, column: 3, scope: !3531)
!3579 = !DILocation(line: 45, column: 12, scope: !3531)
!3580 = !DILocation(line: 47, column: 3, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !119, line: 47, column: 3)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !119, line: 47, column: 3)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !119, line: 47, column: 3)
!3584 = distinct !DILexicalBlock(scope: !3531, file: !119, line: 47, column: 3)
!3585 = !DILocation(line: 48, column: 3, scope: !3531)
!3586 = !DILocation(line: 54, column: 3, scope: !3531)
!3587 = !DILocation(line: 55, column: 27, scope: !3538)
!3588 = !DILocation(line: 0, scope: !3538)
!3589 = !DILocation(line: 0, scope: !3535)
!3590 = !DILocation(line: 58, column: 5, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !119, line: 58, column: 5)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !119, line: 58, column: 5)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !119, line: 58, column: 5)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !119, line: 58, column: 5)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !119, line: 57, column: 21)
!3596 = distinct !DILexicalBlock(scope: !3535, file: !119, line: 57, column: 8)
!3597 = !DILocation(line: 59, column: 5, scope: !3595)
!3598 = !DILocation(line: 60, column: 5, scope: !3595)
!3599 = distinct !{!3599, !3586, !3600}
!3600 = !DILocation(line: 71, column: 3, scope: !3531)
!3601 = !DILocation(line: 55, column: 27, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !119, line: 55, column: 27)
!3603 = distinct !DILexicalBlock(scope: !3538, file: !119, line: 55, column: 27)
!3604 = !DILocation(line: 62, column: 4, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !119, line: 62, column: 4)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !119, line: 62, column: 4)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !119, line: 62, column: 4)
!3608 = distinct !DILexicalBlock(scope: !3535, file: !119, line: 62, column: 4)
!3609 = !DILocation(line: 64, column: 13, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3535, file: !119, line: 64, column: 8)
!3611 = !DILocation(line: 64, column: 20, scope: !3610)
!3612 = !DILocation(line: 64, column: 8, scope: !3535)
!3613 = !DILocation(line: 65, column: 5, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !119, line: 65, column: 5)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !119, line: 65, column: 5)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !119, line: 65, column: 5)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !119, line: 65, column: 5)
!3618 = distinct !DILexicalBlock(scope: !3610, file: !119, line: 64, column: 25)
!3619 = !DILocation(line: 66, column: 4, scope: !3618)
!3620 = !DILocation(line: 68, column: 23, scope: !3535)
!3621 = !DILocation(line: 68, column: 4, scope: !3535)
!3622 = !DILocation(line: 68, column: 16, scope: !3535)
!3623 = !DILocation(line: 69, column: 4, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !119, line: 69, column: 4)
!3625 = distinct !DILexicalBlock(scope: !3535, file: !119, line: 69, column: 4)
!3626 = !DILocation(line: 69, column: 4, scope: !3625)
!3627 = !DILocation(line: 69, column: 4, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3624, file: !119, line: 69, column: 4)
!3629 = !DILocation(line: 70, column: 5, scope: !3535)
!3630 = !DILocation(line: 54, column: 12, scope: !3531)
!3631 = !DILocation(line: 79, column: 3, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !119, line: 79, column: 3)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !119, line: 79, column: 3)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !119, line: 79, column: 3)
!3635 = distinct !DILexicalBlock(scope: !3531, file: !119, line: 79, column: 3)
!3636 = !DILocation(line: 80, column: 3, scope: !3544)
!3637 = !DILocation(line: 0, scope: !3541)
!3638 = !DILocation(line: 81, column: 4, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !119, line: 81, column: 4)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !119, line: 81, column: 4)
!3641 = distinct !DILexicalBlock(scope: !3541, file: !119, line: 81, column: 4)
!3642 = !DILocation(line: 81, column: 4, scope: !3640)
!3643 = !DILocation(line: 80, column: 23, scope: !3543)
!3644 = !DILocation(line: 80, column: 17, scope: !3543)
!3645 = distinct !{!3645, !3636, !3646}
!3646 = !DILocation(line: 82, column: 3, scope: !3544)
!3647 = !DILocation(line: 83, column: 3, scope: !3531)
!3648 = !DILocation(line: 84, column: 3, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !119, line: 84, column: 3)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !119, line: 84, column: 3)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !119, line: 84, column: 3)
!3652 = distinct !DILexicalBlock(scope: !3531, file: !119, line: 84, column: 3)
!3653 = !DILocation(line: 90, column: 27, scope: !3552)
!3654 = !DILocation(line: 89, column: 3, scope: !3550)
!3655 = !DILocation(line: 0, scope: !3552)
!3656 = !DILocation(line: 90, column: 27, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !119, line: 90, column: 27)
!3658 = distinct !DILexicalBlock(scope: !3552, file: !119, line: 90, column: 27)
!3659 = !DILocation(line: 0, scope: !3548)
!3660 = !DILocation(line: 93, column: 9, scope: !3548)
!3661 = !DILocation(line: 92, column: 4, scope: !3548)
!3662 = !DILocation(line: 95, column: 4, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !119, line: 95, column: 4)
!3664 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 95, column: 4)
!3665 = !DILocation(line: 95, column: 4, scope: !3664)
!3666 = !DILocation(line: 95, column: 4, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3663, file: !119, line: 95, column: 4)
!3668 = !DILocation(line: 89, column: 23, scope: !3549)
!3669 = !DILocation(line: 89, column: 17, scope: !3549)
!3670 = distinct !{!3670, !3654, !3671}
!3671 = !DILocation(line: 96, column: 3, scope: !3550)
!3672 = !DILocation(line: 97, column: 2, scope: !3500)
!3673 = distinct !{!3673, !3559, !3672}
!3674 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3675, file: !3675, line: 175, type: !3676, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3678)
!3675 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3676 = !DISubroutineType(types: !3677)
!3677 = !{!107, !108}
!3678 = !{!3679}
!3679 = !DILocalVariable(name: "level", arg: 1, scope: !3674, file: !3675, line: 175, type: !108)
!3680 = !DILocation(line: 0, scope: !3674)
!3681 = !DILocation(line: 177, column: 2, scope: !3674)
!3682 = !DILocation(line: 189, column: 1, scope: !3674)
!3683 = distinct !DISubprogram(name: "atomic_get", scope: !3684, file: !3684, line: 159, type: !3685, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3690)
!3684 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3685 = !DISubroutineType(types: !3686)
!3686 = !{!3687, !3688}
!3687 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !143, line: 23, baseType: !142)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!3690 = !{!3691}
!3691 = !DILocalVariable(name: "target", arg: 1, scope: !3683, file: !3684, line: 159, type: !3688)
!3692 = !DILocation(line: 0, scope: !3683)
!3693 = !DILocation(line: 161, column: 9, scope: !3683)
!3694 = !DILocation(line: 161, column: 2, scope: !3683)
!3695 = distinct !DISubprogram(name: "rtio_sqe_prep_read", scope: !125, file: !125, line: 341, type: !3696, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3698)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{null, !3526, !171, !693, !209, !113, !104}
!3698 = !{!3699, !3700, !3701, !3702, !3703, !3704}
!3699 = !DILocalVariable(name: "sqe", arg: 1, scope: !3695, file: !125, line: 341, type: !3526)
!3700 = !DILocalVariable(name: "iodev", arg: 2, scope: !3695, file: !125, line: 342, type: !171)
!3701 = !DILocalVariable(name: "prio", arg: 3, scope: !3695, file: !125, line: 343, type: !693)
!3702 = !DILocalVariable(name: "buf", arg: 4, scope: !3695, file: !125, line: 344, type: !209)
!3703 = !DILocalVariable(name: "len", arg: 5, scope: !3695, file: !125, line: 345, type: !113)
!3704 = !DILocalVariable(name: "userdata", arg: 6, scope: !3695, file: !125, line: 346, type: !104)
!3705 = !DILocation(line: 0, scope: !3695)
!3706 = !DILocation(line: 348, column: 7, scope: !3695)
!3707 = !DILocation(line: 348, column: 10, scope: !3695)
!3708 = !DILocation(line: 349, column: 7, scope: !3695)
!3709 = !DILocation(line: 349, column: 12, scope: !3695)
!3710 = !DILocation(line: 350, column: 7, scope: !3695)
!3711 = !DILocation(line: 350, column: 13, scope: !3695)
!3712 = !DILocation(line: 351, column: 7, scope: !3695)
!3713 = !DILocation(line: 351, column: 15, scope: !3695)
!3714 = !DILocation(line: 352, column: 7, scope: !3695)
!3715 = !DILocation(line: 352, column: 11, scope: !3695)
!3716 = !DILocation(line: 353, column: 7, scope: !3695)
!3717 = !DILocation(line: 353, column: 16, scope: !3695)
!3718 = !DILocation(line: 354, column: 1, scope: !3695)
!3719 = distinct !DISubprogram(name: "atomic_add", scope: !3684, file: !3684, line: 86, type: !3720, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3723)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!3687, !3722, !3687}
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3723 = !{!3724, !3725}
!3724 = !DILocalVariable(name: "target", arg: 1, scope: !3719, file: !3684, line: 86, type: !3722)
!3725 = !DILocalVariable(name: "value", arg: 2, scope: !3719, file: !3684, line: 86, type: !3687)
!3726 = !DILocation(line: 0, scope: !3719)
!3727 = !DILocation(line: 88, column: 9, scope: !3719)
!3728 = !DILocation(line: 88, column: 2, scope: !3719)
!3729 = distinct !DISubprogram(name: "rtio_submit", scope: !3730, file: !3730, line: 75, type: !3731, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3733)
!3730 = !DIFile(filename: "zephyr/include/generated/syscalls/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3731 = !DISubroutineType(types: !3732)
!3732 = !{!108, !136, !113}
!3733 = !{!3734, !3735}
!3734 = !DILocalVariable(name: "r", arg: 1, scope: !3729, file: !3730, line: 75, type: !136)
!3735 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3729, file: !3730, line: 75, type: !113)
!3736 = !DILocation(line: 0, scope: !3729)
!3737 = !DILocation(line: 84, column: 2, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3729, file: !3730, line: 84, column: 2)
!3739 = !{i64 2154299659}
!3740 = !DILocation(line: 85, column: 9, scope: !3729)
!3741 = !DILocation(line: 85, column: 2, scope: !3729)
!3742 = distinct !DISubprogram(name: "k_msleep", scope: !359, file: !359, line: 439, type: !3743, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3745)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!220, !220}
!3745 = !{!3746}
!3746 = !DILocalVariable(name: "ms", arg: 1, scope: !3742, file: !359, line: 439, type: !220)
!3747 = !DILocation(line: 0, scope: !3742)
!3748 = !DILocation(line: 441, column: 17, scope: !3742)
!3749 = !DILocation(line: 441, column: 9, scope: !3742)
!3750 = !DILocation(line: 441, column: 2, scope: !3742)
!3751 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3752, file: !3752, line: 403, type: !3753, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3755)
!3752 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!114, !114}
!3755 = !{!3756}
!3756 = !DILocalVariable(name: "t", arg: 1, scope: !3751, file: !3752, line: 403, type: !114)
!3757 = !DILocation(line: 0, scope: !3751)
!3758 = !DILocalVariable(name: "t", arg: 1, scope: !3759, file: !3752, line: 102, type: !114)
!3759 = distinct !DISubprogram(name: "z_tmcvt", scope: !3752, file: !3752, line: 102, type: !3760, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3762)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!114, !114, !113, !113, !422, !422, !422, !422}
!3762 = !{!3758, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772}
!3763 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3759, file: !3752, line: 102, type: !113)
!3764 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3759, file: !3752, line: 103, type: !113)
!3765 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3759, file: !3752, line: 103, type: !422)
!3766 = !DILocalVariable(name: "result32", arg: 5, scope: !3759, file: !3752, line: 104, type: !422)
!3767 = !DILocalVariable(name: "round_up", arg: 6, scope: !3759, file: !3752, line: 104, type: !422)
!3768 = !DILocalVariable(name: "round_off", arg: 7, scope: !3759, file: !3752, line: 105, type: !422)
!3769 = !DILocalVariable(name: "mul_ratio", scope: !3759, file: !3752, line: 107, type: !422)
!3770 = !DILocalVariable(name: "div_ratio", scope: !3759, file: !3752, line: 109, type: !422)
!3771 = !DILocalVariable(name: "off", scope: !3759, file: !3752, line: 116, type: !114)
!3772 = !DILocalVariable(name: "rdivisor", scope: !3773, file: !3752, line: 119, type: !113)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !3752, line: 118, column: 18)
!3774 = distinct !DILexicalBlock(scope: !3759, file: !3752, line: 118, column: 6)
!3775 = !DILocation(line: 0, scope: !3759, inlinedAt: !3776)
!3776 = distinct !DILocation(line: 406, column: 9, scope: !3751)
!3777 = !DILocation(line: 145, column: 13, scope: !3778, inlinedAt: !3776)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !3752, line: 144, column: 10)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !3752, line: 142, column: 7)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !3752, line: 141, column: 24)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !3752, line: 141, column: 13)
!3782 = distinct !DILexicalBlock(scope: !3759, file: !3752, line: 134, column: 6)
!3783 = !DILocation(line: 406, column: 2, scope: !3751)
!3784 = distinct !DISubprogram(name: "k_sleep", scope: !3785, file: !3785, line: 91, type: !3786, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3792)
!3785 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!220, !3788}
!3788 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !3789)
!3789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !3790)
!3790 = !{!3791}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3789, file: !110, line: 66, baseType: !109, size: 64)
!3792 = !{!3793}
!3793 = !DILocalVariable(name: "timeout", arg: 1, scope: !3784, file: !3785, line: 91, type: !3788)
!3794 = !DILocation(line: 0, scope: !3784)
!3795 = !DILocation(line: 99, column: 2, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3784, file: !3785, line: 99, column: 2)
!3797 = !{i64 2154079597}
!3798 = !DILocation(line: 100, column: 9, scope: !3784)
!3799 = !DILocation(line: 100, column: 2, scope: !3784)
!3800 = distinct !DISubprogram(name: "z_impl_rtio_submit", scope: !125, file: !125, line: 744, type: !3731, scopeLine: 745, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3801)
!3801 = !{!3802, !3803, !3804, !3805}
!3802 = !DILocalVariable(name: "r", arg: 1, scope: !3800, file: !125, line: 744, type: !136)
!3803 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3800, file: !125, line: 744, type: !113)
!3804 = !DILocalVariable(name: "res", scope: !3800, file: !125, line: 746, type: !108)
!3805 = !DILocalVariable(name: "acquired", scope: !3806, file: !125, line: 763, type: !24)
!3806 = distinct !DILexicalBlock(scope: !3807, file: !125, line: 763, column: 2)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !125, line: 763, column: 2)
!3808 = distinct !DILexicalBlock(scope: !3800, file: !125, line: 763, column: 2)
!3809 = !DILocation(line: 0, scope: !3800)
!3810 = !DILocation(line: 763, column: 2, scope: !3807)
!3811 = !DILocation(line: 763, column: 2, scope: !3808)
!3812 = !DILocation(line: 0, scope: !3806)
!3813 = !DILocation(line: 763, column: 2, scope: !3806)
!3814 = !DILocation(line: 768, column: 11, scope: !3800)
!3815 = !DILocation(line: 768, column: 21, scope: !3800)
!3816 = !DILocation(line: 768, column: 26, scope: !3800)
!3817 = !DILocation(line: 768, column: 8, scope: !3800)
!3818 = !DILocation(line: 769, column: 10, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3800, file: !125, line: 769, column: 6)
!3820 = !DILocation(line: 769, column: 6, scope: !3800)
!3821 = !DILocation(line: 784, column: 9, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3800, file: !125, line: 784, column: 9)
!3823 = !DILocation(line: 784, column: 37, scope: !3800)
!3824 = !DILocation(line: 784, column: 2, scope: !3800)
!3825 = !DILocation(line: 788, column: 3, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3800, file: !125, line: 784, column: 51)
!3827 = distinct !{!3827, !3824, !3828}
!3828 = !DILocation(line: 790, column: 2, scope: !3800)
!3829 = !DILocation(line: 794, column: 1, scope: !3800)
!3830 = distinct !DISubprogram(name: "k_yield", scope: !3785, file: !3785, line: 140, type: !3389, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !437)
!3831 = !DILocation(line: 148, column: 2, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3830, file: !3785, line: 148, column: 2)
!3833 = !{i64 2154079801}
!3834 = !DILocation(line: 149, column: 2, scope: !3830)
!3835 = !DILocation(line: 150, column: 1, scope: !3830)
!3836 = distinct !DISubprogram(name: "vnd_sensor_iodev_submit", scope: !265, file: !265, line: 74, type: !277, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3837)
!3837 = !{!3838, !3839, !3840, !3841, !3842, !3844, !3846}
!3838 = !DILocalVariable(name: "sqe", arg: 1, scope: !3836, file: !265, line: 74, type: !279)
!3839 = !DILocalVariable(name: "r", arg: 2, scope: !3836, file: !265, line: 74, type: !298)
!3840 = !DILocalVariable(name: "data", scope: !3836, file: !265, line: 76, type: !263)
!3841 = !DILocalVariable(name: "dev", scope: !3836, file: !265, line: 77, type: !408)
!3842 = !DILocalVariable(name: "iodev_sqe", scope: !3836, file: !265, line: 78, type: !3843)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3844 = !DILocalVariable(name: "idx", scope: !3845, file: !265, line: 78, type: !24)
!3845 = distinct !DILexicalBlock(scope: !3836, file: !265, line: 78, column: 37)
!3846 = !DILocalVariable(name: "acq", scope: !3845, file: !265, line: 78, type: !422)
!3847 = !DILocation(line: 0, scope: !3836)
!3848 = !DILocation(line: 76, column: 65, scope: !3836)
!3849 = !DILocation(line: 77, column: 35, scope: !3836)
!3850 = !DILocation(line: 78, column: 37, scope: !3845)
!3851 = !DILocation(line: 0, scope: !3845)
!3852 = !DILocation(line: 78, column: 37, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !265, line: 78, column: 37)
!3854 = distinct !DILexicalBlock(scope: !3845, file: !265, line: 78, column: 37)
!3855 = !DILocation(line: 81, column: 14, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !265, line: 80, column: 25)
!3857 = distinct !DILexicalBlock(scope: !3836, file: !265, line: 80, column: 6)
!3858 = !DILocation(line: 81, column: 18, scope: !3856)
!3859 = !DILocation(line: 82, column: 14, scope: !3856)
!3860 = !DILocation(line: 82, column: 16, scope: !3856)
!3861 = !DILocation(line: 83, column: 3, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !265, line: 83, column: 3)
!3863 = distinct !DILexicalBlock(scope: !3856, file: !265, line: 83, column: 3)
!3864 = !DILocation(line: 83, column: 3, scope: !3863)
!3865 = !DILocation(line: 83, column: 3, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3862, file: !265, line: 83, column: 3)
!3867 = !DILocation(line: 85, column: 3, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !265, line: 85, column: 3)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !265, line: 85, column: 3)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !265, line: 85, column: 3)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !265, line: 85, column: 3)
!3872 = distinct !DILexicalBlock(scope: !3857, file: !265, line: 84, column: 9)
!3873 = !DILocation(line: 86, column: 3, scope: !3872)
!3874 = !DILocation(line: 88, column: 1, scope: !3836)
!3875 = distinct !DISubprogram(name: "atomic_get", scope: !3684, file: !3684, line: 159, type: !3685, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3876)
!3876 = !{!3877}
!3877 = !DILocalVariable(name: "target", arg: 1, scope: !3875, file: !3684, line: 159, type: !3688)
!3878 = !DILocation(line: 0, scope: !3875)
!3879 = !DILocation(line: 161, column: 9, scope: !3875)
!3880 = !DILocation(line: 161, column: 2, scope: !3875)
!3881 = distinct !DISubprogram(name: "atomic_add", scope: !3684, file: !3684, line: 86, type: !3720, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3882)
!3882 = !{!3883, !3884}
!3883 = !DILocalVariable(name: "target", arg: 1, scope: !3881, file: !3684, line: 86, type: !3722)
!3884 = !DILocalVariable(name: "value", arg: 2, scope: !3881, file: !3684, line: 86, type: !3687)
!3885 = !DILocation(line: 0, scope: !3881)
!3886 = !DILocation(line: 88, column: 9, scope: !3881)
!3887 = !DILocation(line: 88, column: 2, scope: !3881)
!3888 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3675, file: !3675, line: 175, type: !3676, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3889)
!3889 = !{!3890}
!3890 = !DILocalVariable(name: "level", arg: 1, scope: !3888, file: !3675, line: 175, type: !108)
!3891 = !DILocation(line: 0, scope: !3888)
!3892 = !DILocation(line: 177, column: 2, scope: !3888)
!3893 = !DILocation(line: 189, column: 1, scope: !3888)
!3894 = distinct !DISubprogram(name: "rtio_sqe_err", scope: !125, file: !125, line: 592, type: !316, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3895)
!3895 = !{!3896, !3897, !3898}
!3896 = !DILocalVariable(name: "r", arg: 1, scope: !3894, file: !125, line: 592, type: !298)
!3897 = !DILocalVariable(name: "sqe", arg: 2, scope: !3894, file: !125, line: 592, type: !279)
!3898 = !DILocalVariable(name: "result", arg: 3, scope: !3894, file: !125, line: 592, type: !108)
!3899 = !DILocation(line: 0, scope: !3894)
!3900 = !DILocation(line: 594, column: 5, scope: !3894)
!3901 = !DILocation(line: 594, column: 15, scope: !3894)
!3902 = !DILocation(line: 594, column: 20, scope: !3894)
!3903 = !DILocation(line: 594, column: 2, scope: !3894)
!3904 = !DILocation(line: 595, column: 1, scope: !3894)
!3905 = distinct !DISubprogram(name: "vnd_sensor_init", scope: !265, file: !265, line: 111, type: !473, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3906)
!3906 = !{!3907, !3908, !3910, !3911}
!3907 = !DILocalVariable(name: "dev", arg: 1, scope: !3905, file: !265, line: 111, type: !408)
!3908 = !DILocalVariable(name: "config", scope: !3905, file: !265, line: 113, type: !3909)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!3910 = !DILocalVariable(name: "data", scope: !3905, file: !265, line: 114, type: !263)
!3911 = !DILocalVariable(name: "sample_period", scope: !3905, file: !265, line: 115, type: !113)
!3912 = !DILocation(line: 0, scope: !3905)
!3913 = !DILocation(line: 113, column: 48, scope: !3905)
!3914 = !DILocation(line: 114, column: 38, scope: !3905)
!3915 = !DILocation(line: 115, column: 35, scope: !3905)
!3916 = !DILocation(line: 117, column: 8, scope: !3905)
!3917 = !DILocation(line: 117, column: 12, scope: !3905)
!3918 = !DILocation(line: 119, column: 22, scope: !3905)
!3919 = !DILocation(line: 119, column: 2, scope: !3905)
!3920 = !DILocation(line: 121, column: 30, scope: !3905)
!3921 = !DILocation(line: 121, column: 2, scope: !3905)
!3922 = !DILocation(line: 124, column: 2, scope: !3905)
!3923 = distinct !DISubprogram(name: "vnd_sensor_timer_expiry", scope: !265, file: !265, line: 103, type: !396, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3924)
!3924 = !{!3925, !3926}
!3925 = !DILocalVariable(name: "timer", arg: 1, scope: !3923, file: !265, line: 103, type: !398)
!3926 = !DILocalVariable(name: "data", scope: !3923, file: !265, line: 105, type: !263)
!3927 = !DILocation(line: 0, scope: !3923)
!3928 = !DILocation(line: 106, column: 3, scope: !3923)
!3929 = !DILocation(line: 108, column: 30, scope: !3923)
!3930 = !DILocation(line: 108, column: 2, scope: !3923)
!3931 = !DILocation(line: 109, column: 1, scope: !3923)
!3932 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3752, file: !3752, line: 403, type: !3753, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3933)
!3933 = !{!3934}
!3934 = !DILocalVariable(name: "t", arg: 1, scope: !3932, file: !3752, line: 403, type: !114)
!3935 = !DILocation(line: 0, scope: !3932)
!3936 = !DILocalVariable(name: "t", arg: 1, scope: !3937, file: !3752, line: 102, type: !114)
!3937 = distinct !DISubprogram(name: "z_tmcvt", scope: !3752, file: !3752, line: 102, type: !3760, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3938)
!3938 = !{!3936, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948}
!3939 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3937, file: !3752, line: 102, type: !113)
!3940 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3937, file: !3752, line: 103, type: !113)
!3941 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3937, file: !3752, line: 103, type: !422)
!3942 = !DILocalVariable(name: "result32", arg: 5, scope: !3937, file: !3752, line: 104, type: !422)
!3943 = !DILocalVariable(name: "round_up", arg: 6, scope: !3937, file: !3752, line: 104, type: !422)
!3944 = !DILocalVariable(name: "round_off", arg: 7, scope: !3937, file: !3752, line: 105, type: !422)
!3945 = !DILocalVariable(name: "mul_ratio", scope: !3937, file: !3752, line: 107, type: !422)
!3946 = !DILocalVariable(name: "div_ratio", scope: !3937, file: !3752, line: 109, type: !422)
!3947 = !DILocalVariable(name: "off", scope: !3937, file: !3752, line: 116, type: !114)
!3948 = !DILocalVariable(name: "rdivisor", scope: !3949, file: !3752, line: 119, type: !113)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !3752, line: 118, column: 18)
!3950 = distinct !DILexicalBlock(scope: !3937, file: !3752, line: 118, column: 6)
!3951 = !DILocation(line: 0, scope: !3937, inlinedAt: !3952)
!3952 = distinct !DILocation(line: 406, column: 9, scope: !3932)
!3953 = !DILocation(line: 145, column: 13, scope: !3954, inlinedAt: !3952)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !3752, line: 144, column: 10)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !3752, line: 142, column: 7)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !3752, line: 141, column: 24)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !3752, line: 141, column: 13)
!3958 = distinct !DILexicalBlock(scope: !3937, file: !3752, line: 134, column: 6)
!3959 = !DILocation(line: 406, column: 2, scope: !3932)
!3960 = distinct !DISubprogram(name: "k_timer_start", scope: !3785, file: !3785, line: 426, type: !3961, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3963)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{null, !398, !401, !401}
!3963 = !{!3964, !3965, !3966}
!3964 = !DILocalVariable(name: "timer", arg: 1, scope: !3960, file: !3785, line: 426, type: !398)
!3965 = !DILocalVariable(name: "duration", arg: 2, scope: !3960, file: !3785, line: 426, type: !401)
!3966 = !DILocalVariable(name: "period", arg: 3, scope: !3960, file: !3785, line: 426, type: !401)
!3967 = !DILocation(line: 0, scope: !3960)
!3968 = !DILocation(line: 437, column: 2, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3960, file: !3785, line: 437, column: 2)
!3970 = !{i64 2154083247}
!3971 = !DILocation(line: 438, column: 2, scope: !3960)
!3972 = !DILocation(line: 439, column: 1, scope: !3960)
!3973 = distinct !DISubprogram(name: "vnd_sensor_handle_int", scope: !265, file: !265, line: 90, type: !3974, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3976)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{null, !408}
!3976 = !{!3977, !3978, !3979, !3980, !3982}
!3977 = !DILocalVariable(name: "dev", arg: 1, scope: !3973, file: !265, line: 90, type: !408)
!3978 = !DILocalVariable(name: "data", scope: !3973, file: !265, line: 92, type: !263)
!3979 = !DILocalVariable(name: "iodev_sqe", scope: !3973, file: !265, line: 93, type: !3843)
!3980 = !DILocalVariable(name: "idx", scope: !3981, file: !265, line: 93, type: !24)
!3981 = distinct !DILexicalBlock(scope: !3973, file: !265, line: 93, column: 37)
!3982 = !DILocalVariable(name: "has_consumable", scope: !3981, file: !265, line: 93, type: !422)
!3983 = !DILocation(line: 0, scope: !3973)
!3984 = !DILocation(line: 92, column: 38, scope: !3973)
!3985 = !DILocation(line: 93, column: 37, scope: !3981)
!3986 = !DILocation(line: 0, scope: !3981)
!3987 = !DILocation(line: 93, column: 37, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !265, line: 93, column: 37)
!3989 = distinct !DILexicalBlock(scope: !3981, file: !265, line: 93, column: 37)
!3990 = !DILocation(line: 96, column: 44, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !265, line: 95, column: 25)
!3992 = distinct !DILexicalBlock(scope: !3973, file: !265, line: 95, column: 6)
!3993 = !DILocation(line: 96, column: 60, scope: !3991)
!3994 = !DILocation(line: 96, column: 3, scope: !3991)
!3995 = !DILocation(line: 97, column: 3, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !265, line: 97, column: 3)
!3997 = distinct !DILexicalBlock(scope: !3991, file: !265, line: 97, column: 3)
!3998 = !DILocation(line: 97, column: 3, scope: !3997)
!3999 = !DILocation(line: 97, column: 3, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3996, file: !265, line: 97, column: 3)
!4001 = !DILocation(line: 99, column: 3, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !265, line: 99, column: 3)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !265, line: 99, column: 3)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !265, line: 99, column: 3)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !265, line: 99, column: 3)
!4006 = distinct !DILexicalBlock(scope: !3992, file: !265, line: 98, column: 9)
!4007 = !DILocation(line: 101, column: 1, scope: !3973)
!4008 = distinct !DISubprogram(name: "vnd_sensor_iodev_execute", scope: !265, file: !265, line: 55, type: !4009, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4011)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !408, !279, !298}
!4011 = !{!4012, !4013, !4014, !4015}
!4012 = !DILocalVariable(name: "dev", arg: 1, scope: !4008, file: !265, line: 55, type: !408)
!4013 = !DILocalVariable(name: "sqe", arg: 2, scope: !4008, file: !265, line: 56, type: !279)
!4014 = !DILocalVariable(name: "r", arg: 3, scope: !4008, file: !265, line: 56, type: !298)
!4015 = !DILocalVariable(name: "result", scope: !4008, file: !265, line: 58, type: !108)
!4016 = !DILocation(line: 0, scope: !4008)
!4017 = !DILocation(line: 60, column: 11, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4008, file: !265, line: 60, column: 6)
!4019 = !DILocation(line: 60, column: 14, scope: !4018)
!4020 = !DILocation(line: 60, column: 6, scope: !4008)
!4021 = !DILocation(line: 63, column: 3, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !265, line: 63, column: 3)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !265, line: 63, column: 3)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !265, line: 63, column: 3)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !265, line: 63, column: 3)
!4026 = distinct !DILexicalBlock(scope: !4018, file: !265, line: 62, column: 9)
!4027 = !DILocation(line: 67, column: 6, scope: !4008)
!4028 = !DILocation(line: 61, column: 44, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4018, file: !265, line: 60, column: 29)
!4030 = !DILocation(line: 61, column: 54, scope: !4029)
!4031 = !DILocation(line: 61, column: 12, scope: !4029)
!4032 = !DILocation(line: 67, column: 13, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4008, file: !265, line: 67, column: 6)
!4034 = !DILocation(line: 68, column: 3, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4033, file: !265, line: 67, column: 18)
!4036 = !DILocation(line: 69, column: 2, scope: !4035)
!4037 = !DILocation(line: 70, column: 3, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4033, file: !265, line: 69, column: 9)
!4039 = !DILocation(line: 72, column: 1, scope: !4008)
!4040 = distinct !DISubprogram(name: "vnd_sensor_iodev_read", scope: !265, file: !265, line: 29, type: !4041, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4043)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!108, !408, !209, !113}
!4043 = !{!4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051}
!4044 = !DILocalVariable(name: "dev", arg: 1, scope: !4040, file: !265, line: 29, type: !408)
!4045 = !DILocalVariable(name: "buf", arg: 2, scope: !4040, file: !265, line: 29, type: !209)
!4046 = !DILocalVariable(name: "buf_len", arg: 3, scope: !4040, file: !265, line: 30, type: !113)
!4047 = !DILocalVariable(name: "config", scope: !4040, file: !265, line: 32, type: !3909)
!4048 = !DILocalVariable(name: "data", scope: !4040, file: !265, line: 33, type: !263)
!4049 = !DILocalVariable(name: "sample_number", scope: !4040, file: !265, line: 34, type: !113)
!4050 = !DILocalVariable(name: "key", scope: !4040, file: !265, line: 35, type: !113)
!4051 = !DILocalVariable(name: "i", scope: !4052, file: !265, line: 48, type: !108)
!4052 = distinct !DILexicalBlock(scope: !4040, file: !265, line: 48, column: 2)
!4053 = !DILocation(line: 0, scope: !4040)
!4054 = !DILocation(line: 32, column: 48, scope: !4040)
!4055 = !DILocation(line: 33, column: 38, scope: !4040)
!4056 = !DILocation(line: 37, column: 2, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !265, line: 37, column: 2)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !265, line: 37, column: 2)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !265, line: 37, column: 2)
!4060 = distinct !DILexicalBlock(scope: !4040, file: !265, line: 37, column: 2)
!4061 = !DILocation(line: 55, column: 2, scope: !4062, inlinedAt: !4069)
!4062 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4066)
!4063 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4064 = !DISubroutineType(types: !4065)
!4065 = !{!32}
!4066 = !{!4067, !4068}
!4067 = !DILocalVariable(name: "key", scope: !4062, file: !4063, line: 44, type: !32)
!4068 = !DILocalVariable(name: "tmp", scope: !4062, file: !4063, line: 53, type: !32)
!4069 = distinct !DILocation(line: 39, column: 8, scope: !4040)
!4070 = !{i64 1967255}
!4071 = !DILocation(line: 0, scope: !4062, inlinedAt: !4069)
!4072 = !DILocation(line: 40, column: 24, scope: !4040)
!4073 = !DILocation(line: 40, column: 37, scope: !4040)
!4074 = !DILocalVariable(name: "key", arg: 1, scope: !4075, file: !4063, line: 84, type: !32)
!4075 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4078)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{null, !32}
!4078 = !{!4074}
!4079 = !DILocation(line: 0, scope: !4075, inlinedAt: !4080)
!4080 = distinct !DILocation(line: 41, column: 2, scope: !4040)
!4081 = !DILocation(line: 95, column: 2, scope: !4075, inlinedAt: !4080)
!4082 = !{i64 1968072}
!4083 = !DILocation(line: 43, column: 24, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4040, file: !265, line: 43, column: 6)
!4085 = !DILocation(line: 43, column: 14, scope: !4084)
!4086 = !DILocation(line: 43, column: 6, scope: !4040)
!4087 = !DILocation(line: 0, scope: !4052)
!4088 = !DILocation(line: 48, column: 22, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4052, file: !265, line: 48, column: 2)
!4090 = !DILocation(line: 48, column: 20, scope: !4089)
!4091 = !DILocation(line: 48, column: 2, scope: !4052)
!4092 = !DILocation(line: 44, column: 3, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !265, line: 44, column: 3)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !265, line: 44, column: 3)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !265, line: 44, column: 3)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !265, line: 44, column: 3)
!4097 = distinct !DILexicalBlock(scope: !4084, file: !265, line: 43, column: 37)
!4098 = !DILocation(line: 45, column: 3, scope: !4097)
!4099 = !DILocation(line: 49, column: 26, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4089, file: !265, line: 48, column: 62)
!4101 = !DILocation(line: 49, column: 48, scope: !4100)
!4102 = !DILocation(line: 49, column: 12, scope: !4100)
!4103 = !DILocation(line: 49, column: 3, scope: !4100)
!4104 = !DILocation(line: 49, column: 10, scope: !4100)
!4105 = !DILocation(line: 48, column: 58, scope: !4089)
!4106 = distinct !{!4106, !4091, !4107}
!4107 = !DILocation(line: 50, column: 2, scope: !4052)
!4108 = !DILocation(line: 53, column: 1, scope: !4040)
!4109 = distinct !DISubprogram(name: "rtio_sqe_ok", scope: !125, file: !125, line: 578, type: !316, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4110)
!4110 = !{!4111, !4112, !4113}
!4111 = !DILocalVariable(name: "r", arg: 1, scope: !4109, file: !125, line: 578, type: !298)
!4112 = !DILocalVariable(name: "sqe", arg: 2, scope: !4109, file: !125, line: 578, type: !279)
!4113 = !DILocalVariable(name: "result", arg: 3, scope: !4109, file: !125, line: 578, type: !108)
!4114 = !DILocation(line: 0, scope: !4109)
!4115 = !DILocation(line: 580, column: 5, scope: !4109)
!4116 = !DILocation(line: 580, column: 15, scope: !4109)
!4117 = !DILocation(line: 580, column: 20, scope: !4109)
!4118 = !DILocation(line: 580, column: 2, scope: !4109)
!4119 = !DILocation(line: 581, column: 1, scope: !4109)
!4120 = distinct !DISubprogram(name: "cbvprintf_package", scope: !543, file: !543, line: 233, type: !4121, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4130)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{!108, !104, !439, !113, !105, !4123}
!4123 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4124, line: 99, baseType: !4125)
!4124 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4124, line: 40, baseType: !4126)
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !543, baseType: !4127)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4128)
!4128 = !{!4129}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4127, file: !543, line: 18, baseType: !104, size: 32)
!4130 = !{!4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4166, !4175, !4178, !4179, !4182, !4185, !4188, !4191, !4197}
!4131 = !DILocalVariable(name: "packaged", arg: 1, scope: !4120, file: !543, line: 233, type: !104)
!4132 = !DILocalVariable(name: "len", arg: 2, scope: !4120, file: !543, line: 233, type: !439)
!4133 = !DILocalVariable(name: "flags", arg: 3, scope: !4120, file: !543, line: 233, type: !113)
!4134 = !DILocalVariable(name: "fmt", arg: 4, scope: !4120, file: !543, line: 234, type: !105)
!4135 = !DILocalVariable(name: "ap", arg: 5, scope: !4120, file: !543, line: 234, type: !4123)
!4136 = !DILocalVariable(name: "buf0", scope: !4120, file: !543, line: 247, type: !209)
!4137 = !DILocalVariable(name: "buf", scope: !4120, file: !543, line: 248, type: !209)
!4138 = !DILocalVariable(name: "size", scope: !4120, file: !543, line: 249, type: !32)
!4139 = !DILocalVariable(name: "align", scope: !4120, file: !543, line: 250, type: !32)
!4140 = !DILocalVariable(name: "str_ptr_pos", scope: !4120, file: !543, line: 251, type: !4141)
!4141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !2128)
!4142 = !DILocalVariable(name: "str_ptr_arg", scope: !4120, file: !543, line: 252, type: !4141)
!4143 = !DILocalVariable(name: "s_idx", scope: !4120, file: !543, line: 253, type: !32)
!4144 = !DILocalVariable(name: "s_rw_cnt", scope: !4120, file: !543, line: 254, type: !32)
!4145 = !DILocalVariable(name: "s_ro_cnt", scope: !4120, file: !543, line: 255, type: !32)
!4146 = !DILocalVariable(name: "arg_idx", scope: !4120, file: !543, line: 256, type: !108)
!4147 = !DILocalVariable(name: "i", scope: !4120, file: !543, line: 257, type: !32)
!4148 = !DILocalVariable(name: "s", scope: !4120, file: !543, line: 258, type: !105)
!4149 = !DILocalVariable(name: "parsing", scope: !4120, file: !543, line: 259, type: !422)
!4150 = !DILocalVariable(name: "rws_pos_en", scope: !4120, file: !543, line: 263, type: !422)
!4151 = !DILocalVariable(name: "fros_cnt", scope: !4120, file: !543, line: 268, type: !108)
!4152 = !DILocalVariable(name: "is_str_arg", scope: !4120, file: !543, line: 269, type: !422)
!4153 = !DILocalVariable(name: "pkg_hdr", scope: !4120, file: !543, line: 270, type: !4154)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 32)
!4155 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4156, line: 78, size: 32, elements: !4157)
!4156 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4157 = !{!4158, !4165}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4155, file: !4156, line: 80, baseType: !4159, size: 32)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4156, line: 45, size: 32, elements: !4160)
!4160 = !{!4161, !4162, !4163, !4164}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4159, file: !4156, line: 47, baseType: !164, size: 8)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4159, file: !4156, line: 50, baseType: !164, size: 8, offset: 8)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4159, file: !4156, line: 53, baseType: !164, size: 8, offset: 16)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4159, file: !4156, line: 56, baseType: !164, size: 8, offset: 24)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4155, file: !4156, line: 82, baseType: !104, size: 32)
!4166 = !DILocalVariable(name: "v", scope: !4167, file: !543, line: 567, type: !4171)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !543, line: 562, column: 14)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !543, line: 481, column: 18)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !543, line: 466, column: 3)
!4170 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 343, column: 15)
!4171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4120, file: !543, line: 567, size: 64, elements: !4172)
!4172 = !{!4173, !4174}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4171, file: !543, line: 567, baseType: !536, size: 64)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4171, file: !543, line: 567, baseType: !534, size: 64)
!4175 = !DILocalVariable(name: "is_ro", scope: !4176, file: !543, line: 620, type: !422)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !543, line: 613, column: 19)
!4177 = distinct !DILexicalBlock(scope: !4170, file: !543, line: 613, column: 7)
!4178 = !DILocalVariable(name: "do_ro", scope: !4176, file: !543, line: 621, type: !422)
!4179 = !DILocalVariable(name: "s_ptr_idx", scope: !4180, file: !543, line: 626, type: !113)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !543, line: 625, column: 11)
!4181 = distinct !DILexicalBlock(scope: !4176, file: !543, line: 623, column: 8)
!4182 = !DILocalVariable(name: "v", scope: !4183, file: !543, line: 684, type: !108)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !543, line: 683, column: 35)
!4184 = distinct !DILexicalBlock(scope: !4177, file: !543, line: 683, column: 14)
!4185 = !DILocalVariable(name: "v", scope: !4186, file: !543, line: 691, type: !144)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !543, line: 690, column: 36)
!4187 = distinct !DILexicalBlock(scope: !4184, file: !543, line: 690, column: 14)
!4188 = !DILocalVariable(name: "v", scope: !4189, file: !543, line: 698, type: !112)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !543, line: 697, column: 41)
!4190 = distinct !DILexicalBlock(scope: !4187, file: !543, line: 697, column: 14)
!4191 = !DILocalVariable(name: "pos", scope: !4192, file: !543, line: 762, type: !164)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !543, line: 757, column: 31)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !543, line: 757, column: 3)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !543, line: 757, column: 3)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !543, line: 756, column: 16)
!4196 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 756, column: 6)
!4197 = !DILabel(scope: !4176, name: "process_string", file: !543, line: 615)
!4198 = !DILocation(line: 0, scope: !4120)
!4199 = !DILocation(line: 251, column: 2, scope: !4120)
!4200 = !DILocation(line: 251, column: 10, scope: !4120)
!4201 = !DILocation(line: 252, column: 2, scope: !4120)
!4202 = !DILocation(line: 252, column: 10, scope: !4120)
!4203 = !DILocation(line: 263, column: 29, scope: !4120)
!4204 = !DILocation(line: 263, column: 21, scope: !4120)
!4205 = !DILocation(line: 268, column: 21, scope: !4120)
!4206 = !DILocation(line: 268, column: 19, scope: !4120)
!4207 = !DILocation(line: 273, column: 6, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 273, column: 6)
!4209 = !DILocation(line: 273, column: 26, scope: !4208)
!4210 = !DILocation(line: 273, column: 6, scope: !4120)
!4211 = !DILocation(line: 297, column: 6, scope: !4120)
!4212 = !DILocation(line: 305, column: 11, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 305, column: 6)
!4214 = !DILocation(line: 305, column: 6, scope: !4120)
!4215 = !DILocation(line: 327, column: 19, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 327, column: 6)
!4217 = !DILocation(line: 327, column: 22, scope: !4216)
!4218 = !DILocation(line: 327, column: 33, scope: !4216)
!4219 = !DILocation(line: 327, column: 50, scope: !4216)
!4220 = !DILocation(line: 327, column: 6, scope: !4120)
!4221 = !DILocation(line: 338, column: 9, scope: !4120)
!4222 = !DILocation(line: 341, column: 2, scope: !4120)
!4223 = !DILocation(line: 472, column: 8, scope: !4169)
!4224 = !DILocation(line: 473, column: 14, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !543, line: 473, column: 9)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !543, line: 472, column: 18)
!4227 = distinct !DILexicalBlock(scope: !4169, file: !543, line: 472, column: 8)
!4228 = !DILocation(line: 473, column: 9, scope: !4226)
!4229 = !DILocation(line: 479, column: 5, scope: !4226)
!4230 = !DILocation(line: 468, column: 9, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4169, file: !543, line: 468, column: 8)
!4232 = !DILocation(line: 468, column: 8, scope: !4231)
!4233 = !DILocation(line: 468, column: 15, scope: !4231)
!4234 = !DILocation(line: 468, column: 8, scope: !4169)
!4235 = distinct !{!4235, !4236, !4237}
!4236 = !DILocation(line: 343, column: 2, scope: !4120)
!4237 = !DILocation(line: 712, column: 2, scope: !4120)
!4238 = !DILocation(line: 481, column: 4, scope: !4169)
!4239 = !DILocation(line: 484, column: 12, scope: !4168)
!4240 = !DILocation(line: 485, column: 5, scope: !4168)
!4241 = !DILocation(line: 505, column: 5, scope: !4168)
!4242 = !DILocation(line: 518, column: 5, scope: !4168)
!4243 = !DILocation(line: 523, column: 5, scope: !4168)
!4244 = !DILocation(line: 532, column: 9, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4168, file: !543, line: 532, column: 9)
!4246 = !DILocation(line: 532, column: 17, scope: !4245)
!4247 = !DILocation(line: 532, column: 9, scope: !4168)
!4248 = !DILocation(line: 533, column: 10, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !543, line: 533, column: 10)
!4250 = distinct !DILexicalBlock(scope: !4245, file: !543, line: 532, column: 25)
!4251 = !DILocation(line: 533, column: 18, scope: !4249)
!4252 = !DILocation(line: 0, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4167, file: !543, line: 569, column: 9)
!4254 = !DILocation(line: 0, scope: !4167)
!4255 = !DILocation(line: 579, column: 20, scope: !4167)
!4256 = !DILocation(line: 579, column: 11, scope: !4167)
!4257 = !DILocation(line: 580, column: 9, scope: !4167)
!4258 = !DILocation(line: 582, column: 21, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !543, line: 582, column: 10)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !543, line: 580, column: 23)
!4261 = distinct !DILexicalBlock(scope: !4167, file: !543, line: 580, column: 9)
!4262 = !DILocation(line: 582, column: 28, scope: !4259)
!4263 = !DILocation(line: 582, column: 10, scope: !4260)
!4264 = !DILocation(line: 0, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !543, line: 587, column: 17)
!4266 = distinct !DILexicalBlock(scope: !4260, file: !543, line: 585, column: 10)
!4267 = !DILocation(line: 593, column: 9, scope: !4167)
!4268 = !DILocation(line: 600, column: 5, scope: !4168)
!4269 = !DILocation(line: 605, column: 18, scope: !4170)
!4270 = !DILocation(line: 605, column: 9, scope: !4170)
!4271 = !DILocation(line: 608, column: 20, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4170, file: !543, line: 608, column: 7)
!4273 = !DILocation(line: 608, column: 23, scope: !4272)
!4274 = !DILocation(line: 608, column: 34, scope: !4272)
!4275 = !DILocation(line: 608, column: 41, scope: !4272)
!4276 = !DILocation(line: 608, column: 7, scope: !4170)
!4277 = !DILocation(line: 613, column: 7, scope: !4170)
!4278 = !DILocation(line: 614, column: 8, scope: !4176)
!4279 = !DILocation(line: 614, column: 4, scope: !4176)
!4280 = !DILocation(line: 255, column: 15, scope: !4120)
!4281 = !DILocation(line: 256, column: 6, scope: !4120)
!4282 = !DILocation(line: 254, column: 15, scope: !4120)
!4283 = !DILocation(line: 253, column: 15, scope: !4120)
!4284 = !DILocation(line: 320, column: 7, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4213, file: !543, line: 305, column: 20)
!4286 = !DILocation(line: 615, column: 1, scope: !4176)
!4287 = !DILocation(line: 616, column: 8, scope: !4176)
!4288 = !DILocation(line: 617, column: 5, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !543, line: 616, column: 22)
!4290 = distinct !DILexicalBlock(scope: !4176, file: !543, line: 616, column: 8)
!4291 = !DILocation(line: 617, column: 25, scope: !4289)
!4292 = !DILocation(line: 618, column: 4, scope: !4289)
!4293 = !DILocation(line: 620, column: 26, scope: !4176)
!4294 = !DILocation(line: 620, column: 29, scope: !4176)
!4295 = !DILocation(line: 620, column: 17, scope: !4176)
!4296 = !DILocation(line: 620, column: 43, scope: !4176)
!4297 = !DILocation(line: 0, scope: !4176)
!4298 = !DILocation(line: 623, column: 14, scope: !4181)
!4299 = !DILocation(line: 626, column: 26, scope: !4180)
!4300 = !DILocation(line: 626, column: 37, scope: !4180)
!4301 = !DILocation(line: 0, scope: !4180)
!4302 = !DILocation(line: 634, column: 15, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4180, file: !543, line: 634, column: 9)
!4304 = !DILocation(line: 644, column: 9, scope: !4180)
!4305 = !DILocation(line: 649, column: 27, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !543, line: 644, column: 23)
!4307 = distinct !DILexicalBlock(scope: !4180, file: !543, line: 644, column: 9)
!4308 = !DILocation(line: 649, column: 6, scope: !4306)
!4309 = !DILocation(line: 649, column: 25, scope: !4306)
!4310 = !DILocation(line: 650, column: 27, scope: !4306)
!4311 = !DILocation(line: 650, column: 6, scope: !4306)
!4312 = !DILocation(line: 650, column: 25, scope: !4306)
!4313 = !DILocation(line: 651, column: 10, scope: !4306)
!4314 = !DILocation(line: 653, column: 26, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !543, line: 651, column: 17)
!4316 = distinct !DILexicalBlock(scope: !4306, file: !543, line: 651, column: 10)
!4317 = !DILocation(line: 654, column: 15, scope: !4315)
!4318 = !DILocation(line: 655, column: 6, scope: !4315)
!4319 = !DILocation(line: 656, column: 15, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4316, file: !543, line: 655, column: 13)
!4321 = !DILocation(line: 658, column: 16, scope: !4307)
!4322 = !DILocation(line: 663, column: 10, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !543, line: 658, column: 23)
!4324 = distinct !DILexicalBlock(scope: !4307, file: !543, line: 658, column: 16)
!4325 = !DILocation(line: 664, column: 5, scope: !4323)
!4326 = !DILocation(line: 664, column: 16, scope: !4324)
!4327 = !DILocation(line: 669, column: 10, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !543, line: 664, column: 28)
!4329 = distinct !DILexicalBlock(scope: !4324, file: !543, line: 664, column: 16)
!4330 = !DILocation(line: 670, column: 5, scope: !4328)
!4331 = !DILocation(line: 675, column: 13, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4329, file: !543, line: 670, column: 12)
!4333 = !DILocation(line: 675, column: 27, scope: !4332)
!4334 = !DILocation(line: 675, column: 10, scope: !4332)
!4335 = !DILocation(line: 678, column: 10, scope: !4180)
!4336 = !DILocation(line: 680, column: 8, scope: !4176)
!4337 = !DILocation(line: 683, column: 14, scope: !4177)
!4338 = !DILocation(line: 684, column: 12, scope: !4183)
!4339 = !DILocation(line: 0, scope: !4183)
!4340 = !DILocation(line: 686, column: 8, scope: !4183)
!4341 = !DILocation(line: 687, column: 5, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !543, line: 686, column: 22)
!4343 = distinct !DILexicalBlock(scope: !4183, file: !543, line: 686, column: 8)
!4344 = !DILocation(line: 687, column: 17, scope: !4342)
!4345 = !DILocation(line: 688, column: 4, scope: !4342)
!4346 = !DILocation(line: 698, column: 18, scope: !4189)
!4347 = !DILocation(line: 0, scope: !4189)
!4348 = !DILocation(line: 700, column: 8, scope: !4189)
!4349 = !DILocation(line: 704, column: 6, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !543, line: 703, column: 12)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !543, line: 701, column: 9)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !543, line: 700, column: 22)
!4353 = distinct !DILexicalBlock(scope: !4189, file: !543, line: 700, column: 8)
!4354 = !DILocation(line: 704, column: 24, scope: !4350)
!4355 = !DILocation(line: 706, column: 4, scope: !4352)
!4356 = !DILocation(line: 0, scope: !4184)
!4357 = !DILocation(line: 0, scope: !4170)
!4358 = !DILocation(line: 720, column: 6, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 720, column: 6)
!4360 = !DILocation(line: 720, column: 17, scope: !4359)
!4361 = !DILocation(line: 720, column: 31, scope: !4359)
!4362 = !DILocation(line: 720, column: 6, scope: !4120)
!4363 = !DILocation(line: 729, column: 6, scope: !4120)
!4364 = !DILocation(line: 730, column: 21, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !543, line: 729, column: 20)
!4366 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 729, column: 6)
!4367 = !DILocation(line: 730, column: 27, scope: !4365)
!4368 = !DILocation(line: 730, column: 3, scope: !4365)
!4369 = !DILocation(line: 737, column: 22, scope: !4120)
!4370 = !DILocation(line: 737, column: 20, scope: !4120)
!4371 = !DILocation(line: 0, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 739, column: 6)
!4373 = !DILocation(line: 745, column: 17, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4372, file: !543, line: 743, column: 9)
!4375 = !DILocation(line: 745, column: 25, scope: !4374)
!4376 = !DILocation(line: 746, column: 17, scope: !4374)
!4377 = !DILocation(line: 746, column: 28, scope: !4374)
!4378 = !DILocation(line: 749, column: 29, scope: !4120)
!4379 = !DILocation(line: 749, column: 16, scope: !4120)
!4380 = !DILocation(line: 749, column: 27, scope: !4120)
!4381 = !DILocation(line: 756, column: 6, scope: !4196)
!4382 = !DILocation(line: 756, column: 6, scope: !4120)
!4383 = !DILocation(line: 757, column: 3, scope: !4194)
!4384 = !DILocation(line: 758, column: 10, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4192, file: !543, line: 758, column: 8)
!4386 = !DILocation(line: 758, column: 25, scope: !4385)
!4387 = !DILocation(line: 758, column: 8, scope: !4192)
!4388 = !DILocation(line: 0, scope: !4192)
!4389 = !DILocation(line: 765, column: 8, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4192, file: !543, line: 765, column: 8)
!4391 = !DILocation(line: 765, column: 19, scope: !4390)
!4392 = !DILocation(line: 765, column: 23, scope: !4390)
!4393 = !DILocation(line: 765, column: 8, scope: !4192)
!4394 = !DILocation(line: 762, column: 33, scope: !4192)
!4395 = !DILocation(line: 769, column: 8, scope: !4192)
!4396 = !DILocation(line: 769, column: 11, scope: !4192)
!4397 = !DILocation(line: 757, column: 27, scope: !4193)
!4398 = !DILocation(line: 757, column: 17, scope: !4193)
!4399 = distinct !{!4399, !4383, !4400}
!4400 = !DILocation(line: 770, column: 3, scope: !4194)
!4401 = !DILocation(line: 774, column: 16, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !543, line: 774, column: 2)
!4403 = distinct !DILexicalBlock(scope: !4120, file: !543, line: 774, column: 2)
!4404 = !DILocation(line: 774, column: 2, scope: !4403)
!4405 = !DILocation(line: 776, column: 16, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4407, file: !543, line: 776, column: 7)
!4407 = distinct !DILexicalBlock(scope: !4402, file: !543, line: 774, column: 30)
!4408 = !DILocation(line: 776, column: 19, scope: !4406)
!4409 = !DILocation(line: 776, column: 34, scope: !4406)
!4410 = !DILocation(line: 776, column: 7, scope: !4407)
!4411 = !DILocation(line: 780, column: 7, scope: !4407)
!4412 = !DILocation(line: 782, column: 13, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4414, file: !543, line: 780, column: 19)
!4414 = distinct !DILexicalBlock(scope: !4407, file: !543, line: 780, column: 7)
!4415 = !DILocation(line: 782, column: 8, scope: !4413)
!4416 = !DILocation(line: 782, column: 11, scope: !4413)
!4417 = !DILocation(line: 783, column: 3, scope: !4413)
!4418 = !DILocation(line: 785, column: 26, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4414, file: !543, line: 783, column: 10)
!4420 = !DILocation(line: 785, column: 41, scope: !4419)
!4421 = !DILocation(line: 785, column: 24, scope: !4419)
!4422 = !DILocation(line: 785, column: 8, scope: !4419)
!4423 = !DILocation(line: 787, column: 52, scope: !4419)
!4424 = !DILocation(line: 789, column: 11, scope: !4419)
!4425 = !DILocation(line: 789, column: 21, scope: !4419)
!4426 = !DILocation(line: 0, scope: !4414)
!4427 = !DILocation(line: 793, column: 7, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4407, file: !543, line: 793, column: 7)
!4429 = !DILocation(line: 793, column: 18, scope: !4428)
!4430 = !DILocation(line: 793, column: 22, scope: !4428)
!4431 = !DILocation(line: 793, column: 29, scope: !4428)
!4432 = !DILocation(line: 793, column: 7, scope: !4407)
!4433 = !DILocation(line: 797, column: 12, scope: !4407)
!4434 = !DILocation(line: 797, column: 7, scope: !4407)
!4435 = !DILocation(line: 797, column: 10, scope: !4407)
!4436 = !DILocation(line: 799, column: 3, scope: !4407)
!4437 = !DILocation(line: 800, column: 7, scope: !4407)
!4438 = !DILocation(line: 801, column: 2, scope: !4407)
!4439 = !DILocation(line: 338, column: 4, scope: !4120)
!4440 = !DILocation(line: 774, column: 26, scope: !4402)
!4441 = distinct !{!4441, !4404, !4442}
!4442 = !DILocation(line: 801, column: 2, scope: !4403)
!4443 = !DILocation(line: 808, column: 9, scope: !4120)
!4444 = !DILocation(line: 808, column: 2, scope: !4120)
!4445 = !DILocation(line: 813, column: 1, scope: !4120)
!4446 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !543, file: !543, line: 33, type: !4447, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4449)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!422, !105}
!4449 = !{!4450}
!4450 = !DILocalVariable(name: "addr", arg: 1, scope: !4446, file: !543, line: 33, type: !105)
!4451 = !DILocation(line: 0, scope: !4446)
!4452 = !DILocation(line: 41, column: 9, scope: !4446)
!4453 = !DILocation(line: 41, column: 2, scope: !4446)
!4454 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4455, file: !4455, line: 24, type: !4456, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4458)
!4455 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!422, !13}
!4458 = !{!4459}
!4459 = !DILocalVariable(name: "addr", arg: 1, scope: !4454, file: !4455, line: 24, type: !13)
!4460 = !DILocation(line: 0, scope: !4454)
!4461 = !DILocation(line: 49, column: 30, scope: !4454)
!4462 = !DILocation(line: 49, column: 57, scope: !4454)
!4463 = !DILocation(line: 49, column: 2, scope: !4454)
!4464 = distinct !DISubprogram(name: "cbprintf_package", scope: !543, file: !543, line: 815, type: !4465, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4467)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{!108, !104, !439, !113, !105, null}
!4467 = !{!4468, !4469, !4470, !4471, !4472, !4473}
!4468 = !DILocalVariable(name: "packaged", arg: 1, scope: !4464, file: !543, line: 815, type: !104)
!4469 = !DILocalVariable(name: "len", arg: 2, scope: !4464, file: !543, line: 815, type: !439)
!4470 = !DILocalVariable(name: "flags", arg: 3, scope: !4464, file: !543, line: 815, type: !113)
!4471 = !DILocalVariable(name: "format", arg: 4, scope: !4464, file: !543, line: 816, type: !105)
!4472 = !DILocalVariable(name: "ap", scope: !4464, file: !543, line: 818, type: !4123)
!4473 = !DILocalVariable(name: "ret", scope: !4464, file: !543, line: 819, type: !108)
!4474 = !DILocation(line: 0, scope: !4464)
!4475 = !DILocation(line: 818, column: 2, scope: !4464)
!4476 = !DILocation(line: 818, column: 10, scope: !4464)
!4477 = !DILocation(line: 821, column: 2, scope: !4464)
!4478 = !DILocation(line: 822, column: 8, scope: !4464)
!4479 = !DILocation(line: 823, column: 2, scope: !4464)
!4480 = !DILocation(line: 825, column: 1, scope: !4464)
!4481 = !DILocation(line: 824, column: 2, scope: !4464)
!4482 = distinct !DISubprogram(name: "cbpprintf_external", scope: !543, file: !543, line: 827, type: !4483, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4493)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!108, !4485, !4489, !104, !104}
!4485 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4156, line: 297, baseType: !4486)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 32)
!4487 = !DISubroutineType(types: !4488)
!4488 = !{!108, null}
!4489 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4156, line: 328, baseType: !4490)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 32)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{!108, !4485, !104, !105, !4123}
!4493 = !{!4494, !4495, !4496, !4497, !4498, !4499, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512}
!4494 = !DILocalVariable(name: "out", arg: 1, scope: !4482, file: !543, line: 827, type: !4485)
!4495 = !DILocalVariable(name: "formatter", arg: 2, scope: !4482, file: !543, line: 828, type: !4489)
!4496 = !DILocalVariable(name: "ctx", arg: 3, scope: !4482, file: !543, line: 829, type: !104)
!4497 = !DILocalVariable(name: "packaged", arg: 4, scope: !4482, file: !543, line: 829, type: !104)
!4498 = !DILocalVariable(name: "buf", scope: !4482, file: !543, line: 831, type: !209)
!4499 = !DILocalVariable(name: "hdr", scope: !4482, file: !543, line: 832, type: !4500)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 32)
!4501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4156, line: 96, size: 64, elements: !4502)
!4502 = !{!4503, !4504}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4501, file: !4156, line: 98, baseType: !4155, size: 32)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4501, file: !4156, line: 101, baseType: !443, size: 32, offset: 32)
!4505 = !DILocalVariable(name: "s", scope: !4482, file: !543, line: 833, type: !443)
!4506 = !DILocalVariable(name: "ps", scope: !4482, file: !543, line: 833, type: !541)
!4507 = !DILocalVariable(name: "i", scope: !4482, file: !543, line: 834, type: !32)
!4508 = !DILocalVariable(name: "args_size", scope: !4482, file: !543, line: 834, type: !32)
!4509 = !DILocalVariable(name: "s_nbr", scope: !4482, file: !543, line: 834, type: !32)
!4510 = !DILocalVariable(name: "ros_nbr", scope: !4482, file: !543, line: 834, type: !32)
!4511 = !DILocalVariable(name: "rws_nbr", scope: !4482, file: !543, line: 834, type: !32)
!4512 = !DILocalVariable(name: "s_idx", scope: !4482, file: !543, line: 834, type: !32)
!4513 = !DILocation(line: 0, scope: !4482)
!4514 = !DILocation(line: 836, column: 10, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4482, file: !543, line: 836, column: 6)
!4516 = !DILocation(line: 836, column: 6, scope: !4482)
!4517 = !DILocation(line: 842, column: 28, scope: !4482)
!4518 = !DILocation(line: 842, column: 14, scope: !4482)
!4519 = !DILocation(line: 852, column: 16, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !543, line: 852, column: 2)
!4521 = distinct !DILexicalBlock(scope: !4482, file: !543, line: 852, column: 2)
!4522 = !DILocation(line: 852, column: 2, scope: !4521)
!4523 = !DILocation(line: 841, column: 28, scope: !4482)
!4524 = !DILocation(line: 841, column: 14, scope: !4482)
!4525 = !DILocation(line: 841, column: 32, scope: !4482)
!4526 = !DILocation(line: 847, column: 19, scope: !4482)
!4527 = !DILocation(line: 843, column: 28, scope: !4482)
!4528 = !DILocation(line: 843, column: 14, scope: !4482)
!4529 = !DILocation(line: 847, column: 31, scope: !4482)
!4530 = !DILocation(line: 844, column: 28, scope: !4482)
!4531 = !DILocation(line: 844, column: 14, scope: !4482)
!4532 = !DILocation(line: 847, column: 45, scope: !4482)
!4533 = !DILocation(line: 847, column: 41, scope: !4482)
!4534 = !DILocation(line: 854, column: 24, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4520, file: !543, line: 852, column: 30)
!4536 = !DILocation(line: 854, column: 11, scope: !4535)
!4537 = !DILocation(line: 855, column: 30, scope: !4535)
!4538 = !DILocation(line: 855, column: 22, scope: !4535)
!4539 = !DILocation(line: 855, column: 8, scope: !4535)
!4540 = !DILocation(line: 857, column: 7, scope: !4535)
!4541 = !DILocation(line: 859, column: 8, scope: !4535)
!4542 = !DILocation(line: 859, column: 18, scope: !4535)
!4543 = !DILocation(line: 859, column: 5, scope: !4535)
!4544 = !DILocation(line: 852, column: 26, scope: !4520)
!4545 = distinct !{!4545, !4522, !4546}
!4546 = !DILocation(line: 860, column: 2, scope: !4521)
!4547 = !DILocation(line: 863, column: 6, scope: !4482)
!4548 = !DILocation(line: 866, column: 56, scope: !4482)
!4549 = !DILocation(line: 866, column: 9, scope: !4482)
!4550 = !DILocation(line: 866, column: 2, scope: !4482)
!4551 = !DILocation(line: 867, column: 1, scope: !4482)
!4552 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !543, file: !543, line: 179, type: !4553, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4555)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{!108, !4485, !4489, !104, !105, !104}
!4555 = !{!4556, !4557, !4558, !4559, !4560, !4561}
!4556 = !DILocalVariable(name: "out", arg: 1, scope: !4552, file: !543, line: 179, type: !4485)
!4557 = !DILocalVariable(name: "formatter", arg: 2, scope: !4552, file: !543, line: 180, type: !4489)
!4558 = !DILocalVariable(name: "ctx", arg: 3, scope: !4552, file: !543, line: 181, type: !104)
!4559 = !DILocalVariable(name: "fmt", arg: 4, scope: !4552, file: !543, line: 182, type: !105)
!4560 = !DILocalVariable(name: "buf", arg: 5, scope: !4552, file: !543, line: 182, type: !104)
!4561 = !DILocalVariable(name: "u", scope: !4552, file: !543, line: 187, type: !4562)
!4562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4552, file: !543, line: 184, size: 32, elements: !4563)
!4563 = !{!4564, !4565}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4562, file: !543, line: 185, baseType: !4123, size: 32)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4562, file: !543, line: 186, baseType: !104, size: 32)
!4566 = !DILocation(line: 0, scope: !4552)
!4567 = !DILocation(line: 191, column: 9, scope: !4552)
!4568 = !DILocation(line: 191, column: 2, scope: !4552)
!4569 = distinct !DISubprogram(name: "is_ptr", scope: !543, file: !543, line: 881, type: !4570, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4572)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!422, !105, !108}
!4572 = !{!4573, !4574, !4575, !4576, !4577}
!4573 = !DILocalVariable(name: "fmt", arg: 1, scope: !4569, file: !543, line: 881, type: !105)
!4574 = !DILocalVariable(name: "n", arg: 2, scope: !4569, file: !543, line: 881, type: !108)
!4575 = !DILocalVariable(name: "c", scope: !4569, file: !543, line: 883, type: !107)
!4576 = !DILocalVariable(name: "mod", scope: !4569, file: !543, line: 884, type: !422)
!4577 = !DILocalVariable(name: "cnt", scope: !4569, file: !543, line: 885, type: !108)
!4578 = !DILocation(line: 0, scope: !4569)
!4579 = !DILocation(line: 887, column: 14, scope: !4569)
!4580 = !DILocation(line: 887, column: 22, scope: !4569)
!4581 = !DILocation(line: 887, column: 2, scope: !4569)
!4582 = !DILocation(line: 887, column: 18, scope: !4569)
!4583 = !DILocation(line: 888, column: 7, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4569, file: !543, line: 887, column: 31)
!4585 = !DILocation(line: 889, column: 12, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !543, line: 889, column: 8)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !543, line: 888, column: 12)
!4588 = distinct !DILexicalBlock(scope: !4584, file: !543, line: 888, column: 7)
!4589 = !DILocation(line: 889, column: 8, scope: !4587)
!4590 = !DILocation(line: 890, column: 11, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !543, line: 890, column: 9)
!4592 = distinct !DILexicalBlock(scope: !4586, file: !543, line: 889, column: 18)
!4593 = !DILocation(line: 890, column: 9, scope: !4592)
!4594 = !DILocation(line: 892, column: 16, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4591, file: !543, line: 892, column: 16)
!4596 = !DILocation(line: 892, column: 16, scope: !4591)
!4597 = !DILocation(line: 895, column: 15, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4586, file: !543, line: 895, column: 15)
!4599 = !DILocation(line: 895, column: 15, scope: !4586)
!4600 = !DILocation(line: 900, column: 9, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4584, file: !543, line: 900, column: 7)
!4602 = !DILocation(line: 900, column: 7, scope: !4584)
!4603 = distinct !{!4603, !4581, !4604}
!4604 = !DILocation(line: 903, column: 2, scope: !4569)
!4605 = !DILocation(line: 906, column: 1, scope: !4569)
!4606 = distinct !DISubprogram(name: "is_fmt_spec", scope: !543, file: !543, line: 873, type: !4607, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4609)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!422, !107}
!4609 = !{!4610}
!4610 = !DILocalVariable(name: "c", arg: 1, scope: !4606, file: !543, line: 873, type: !107)
!4611 = !DILocation(line: 0, scope: !4606)
!4612 = !DILocation(line: 875, column: 19, scope: !4606)
!4613 = !DILocation(line: 875, column: 2, scope: !4606)
!4614 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !543, file: !543, line: 908, type: !4615, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4621)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{!108, !104, !439, !4617, !104, !113, !3078, !439}
!4617 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4156, line: 308, baseType: !4618)
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 32)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!108, !13, !439, !104}
!4621 = !{!4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4639, !4640, !4641, !4642, !4643, !4649, !4652, !4653, !4654, !4656, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4672, !4675, !4676, !4677, !4678, !4679, !4680, !4682, !4685, !4686, !4687}
!4622 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4614, file: !543, line: 908, type: !104)
!4623 = !DILocalVariable(name: "in_len", arg: 2, scope: !4614, file: !543, line: 909, type: !439)
!4624 = !DILocalVariable(name: "cb", arg: 3, scope: !4614, file: !543, line: 910, type: !4617)
!4625 = !DILocalVariable(name: "ctx", arg: 4, scope: !4614, file: !543, line: 911, type: !104)
!4626 = !DILocalVariable(name: "flags", arg: 5, scope: !4614, file: !543, line: 912, type: !113)
!4627 = !DILocalVariable(name: "strl", arg: 6, scope: !4614, file: !543, line: 913, type: !3078)
!4628 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4614, file: !543, line: 914, type: !439)
!4629 = !DILocalVariable(name: "buf", scope: !4614, file: !543, line: 918, type: !209)
!4630 = !DILocalVariable(name: "buf32", scope: !4614, file: !543, line: 919, type: !1211)
!4631 = !DILocalVariable(name: "args_size", scope: !4614, file: !543, line: 920, type: !32)
!4632 = !DILocalVariable(name: "ros_nbr", scope: !4614, file: !543, line: 920, type: !32)
!4633 = !DILocalVariable(name: "rws_nbr", scope: !4614, file: !543, line: 920, type: !32)
!4634 = !DILocalVariable(name: "fmt_present", scope: !4614, file: !543, line: 921, type: !422)
!4635 = !DILocalVariable(name: "rw_cpy", scope: !4614, file: !543, line: 922, type: !422)
!4636 = !DILocalVariable(name: "ro_cpy", scope: !4614, file: !543, line: 923, type: !422)
!4637 = !DILocalVariable(name: "in_desc", scope: !4614, file: !543, line: 924, type: !4638)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 32)
!4639 = !DILocalVariable(name: "out_len", scope: !4614, file: !543, line: 960, type: !108)
!4640 = !DILocalVariable(name: "fmt", scope: !4614, file: !543, line: 965, type: !105)
!4641 = !DILocalVariable(name: "str_pos", scope: !4614, file: !543, line: 966, type: !209)
!4642 = !DILocalVariable(name: "strl_cnt", scope: !4614, file: !543, line: 967, type: !439)
!4643 = !DILocalVariable(name: "i", scope: !4644, file: !543, line: 973, type: !108)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !543, line: 973, column: 4)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !543, line: 972, column: 15)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !543, line: 972, column: 7)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !543, line: 970, column: 18)
!4648 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 970, column: 6)
!4649 = !DILocalVariable(name: "str", scope: !4650, file: !543, line: 974, type: !105)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !543, line: 973, column: 38)
!4651 = distinct !DILexicalBlock(scope: !4644, file: !543, line: 973, column: 4)
!4652 = !DILocalVariable(name: "len", scope: !4650, file: !543, line: 975, type: !108)
!4653 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4647, file: !543, line: 990, type: !422)
!4654 = !DILocalVariable(name: "i", scope: !4655, file: !543, line: 995, type: !108)
!4655 = distinct !DILexicalBlock(scope: !4647, file: !543, line: 995, column: 3)
!4656 = !DILocalVariable(name: "arg_idx", scope: !4657, file: !543, line: 996, type: !164)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !543, line: 995, column: 37)
!4658 = distinct !DILexicalBlock(scope: !4655, file: !543, line: 995, column: 3)
!4659 = !DILocalVariable(name: "arg_pos", scope: !4657, file: !543, line: 997, type: !164)
!4660 = !DILocalVariable(name: "str", scope: !4657, file: !543, line: 998, type: !105)
!4661 = !DILocalVariable(name: "is_ro", scope: !4657, file: !543, line: 999, type: !422)
!4662 = !DILocalVariable(name: "len", scope: !4657, file: !543, line: 1000, type: !108)
!4663 = !DILocalVariable(name: "out_desc", scope: !4614, file: !543, line: 1038, type: !4159)
!4664 = !DILocalVariable(name: "cpy_str_pos", scope: !4614, file: !543, line: 1040, type: !4141)
!4665 = !DILocalVariable(name: "keep_str_pos", scope: !4614, file: !543, line: 1042, type: !4141)
!4666 = !DILocalVariable(name: "scpy_cnt", scope: !4614, file: !543, line: 1043, type: !164)
!4667 = !DILocalVariable(name: "keep_cnt", scope: !4614, file: !543, line: 1044, type: !164)
!4668 = !DILocalVariable(name: "dst", scope: !4614, file: !543, line: 1045, type: !209)
!4669 = !DILocalVariable(name: "rv", scope: !4614, file: !543, line: 1046, type: !108)
!4670 = !DILocalVariable(name: "i", scope: !4671, file: !543, line: 1074, type: !108)
!4671 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 1074, column: 2)
!4672 = !DILocalVariable(name: "arg_idx", scope: !4673, file: !543, line: 1075, type: !164)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !543, line: 1074, column: 36)
!4674 = distinct !DILexicalBlock(scope: !4671, file: !543, line: 1074, column: 2)
!4675 = !DILocalVariable(name: "arg_pos", scope: !4673, file: !543, line: 1076, type: !164)
!4676 = !DILocalVariable(name: "str", scope: !4673, file: !543, line: 1077, type: !105)
!4677 = !DILocalVariable(name: "is_ro", scope: !4673, file: !543, line: 1078, type: !422)
!4678 = !DILocalVariable(name: "in_desc_backup", scope: !4614, file: !543, line: 1114, type: !4159)
!4679 = !DILocalVariable(name: "strs_len", scope: !4614, file: !543, line: 1134, type: !439)
!4680 = !DILocalVariable(name: "i", scope: !4681, file: !543, line: 1143, type: !108)
!4681 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 1143, column: 2)
!4682 = !DILocalVariable(name: "loc", scope: !4683, file: !543, line: 1144, type: !164)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !543, line: 1143, column: 37)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !543, line: 1143, column: 2)
!4685 = !DILocalVariable(name: "str", scope: !4683, file: !543, line: 1145, type: !105)
!4686 = !DILocalVariable(name: "str_len", scope: !4683, file: !543, line: 1146, type: !168)
!4687 = !DILabel(scope: !4688, name: "calculate_string_length", file: !543, line: 1021)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !543, line: 1020, column: 56)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !543, line: 1020, column: 15)
!4690 = distinct !DILexicalBlock(scope: !4657, file: !543, line: 1014, column: 8)
!4691 = !DILocation(line: 0, scope: !4614)
!4692 = !DILocation(line: 919, column: 20, scope: !4614)
!4693 = !DILocation(line: 921, column: 27, scope: !4614)
!4694 = !DILocation(line: 921, column: 21, scope: !4614)
!4695 = !DILocation(line: 926, column: 18, scope: !4614)
!4696 = !DILocation(line: 926, column: 11, scope: !4614)
!4697 = !DILocation(line: 926, column: 34, scope: !4614)
!4698 = !DILocation(line: 931, column: 21, scope: !4614)
!4699 = !DILocation(line: 931, column: 12, scope: !4614)
!4700 = !DILocation(line: 932, column: 11, scope: !4614)
!4701 = !DILocation(line: 932, column: 19, scope: !4614)
!4702 = !DILocation(line: 938, column: 21, scope: !4614)
!4703 = !DILocation(line: 938, column: 12, scope: !4614)
!4704 = !DILocation(line: 939, column: 19, scope: !4614)
!4705 = !DILocation(line: 939, column: 23, scope: !4614)
!4706 = !DILocation(line: 946, column: 14, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 946, column: 6)
!4708 = !DILocation(line: 947, column: 7, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !543, line: 947, column: 7)
!4710 = distinct !DILexicalBlock(scope: !4707, file: !543, line: 946, column: 26)
!4711 = !DILocation(line: 947, column: 7, scope: !4710)
!4712 = !DILocation(line: 948, column: 4, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4709, file: !543, line: 947, column: 11)
!4714 = !DILocation(line: 949, column: 3, scope: !4713)
!4715 = !DILocation(line: 958, column: 23, scope: !4614)
!4716 = !DILocation(line: 958, column: 14, scope: !4614)
!4717 = !DILocation(line: 958, column: 27, scope: !4614)
!4718 = !DILocation(line: 965, column: 41, scope: !4614)
!4719 = !DILocation(line: 965, column: 20, scope: !4614)
!4720 = !DILocation(line: 966, column: 22, scope: !4614)
!4721 = !DILocation(line: 970, column: 9, scope: !4648)
!4722 = !DILocation(line: 970, column: 6, scope: !4614)
!4723 = !DILocation(line: 972, column: 7, scope: !4647)
!4724 = !DILocation(line: 0, scope: !4644)
!4725 = !DILocation(line: 973, column: 4, scope: !4644)
!4726 = !DILocation(line: 974, column: 46, scope: !4650)
!4727 = !DILocation(line: 974, column: 40, scope: !4650)
!4728 = !DILocation(line: 974, column: 23, scope: !4650)
!4729 = !DILocation(line: 0, scope: !4650)
!4730 = !DILocation(line: 975, column: 15, scope: !4650)
!4731 = !DILocation(line: 978, column: 14, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4650, file: !543, line: 978, column: 9)
!4733 = !DILocation(line: 979, column: 25, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4732, file: !543, line: 978, column: 38)
!4735 = !DILocation(line: 979, column: 19, scope: !4734)
!4736 = !DILocation(line: 979, column: 6, scope: !4734)
!4737 = !DILocation(line: 979, column: 23, scope: !4734)
!4738 = !DILocation(line: 980, column: 5, scope: !4734)
!4739 = !DILocation(line: 981, column: 13, scope: !4650)
!4740 = !DILocation(line: 982, column: 12, scope: !4650)
!4741 = !DILocation(line: 973, column: 34, scope: !4651)
!4742 = !DILocation(line: 973, column: 22, scope: !4651)
!4743 = distinct !{!4743, !4725, !4744}
!4744 = !DILocation(line: 983, column: 4, scope: !4644)
!4745 = !DILocation(line: 985, column: 16, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !543, line: 985, column: 8)
!4747 = distinct !DILexicalBlock(scope: !4646, file: !543, line: 984, column: 10)
!4748 = !DILocation(line: 967, column: 9, scope: !4614)
!4749 = !DILocation(line: 971, column: 11, scope: !4647)
!4750 = !DILocation(line: 0, scope: !4647)
!4751 = !DILocation(line: 0, scope: !4655)
!4752 = !DILocation(line: 995, column: 21, scope: !4658)
!4753 = !DILocation(line: 995, column: 3, scope: !4655)
!4754 = !DILocation(line: 990, column: 34, scope: !4647)
!4755 = !DILocation(line: 990, column: 26, scope: !4647)
!4756 = !DILocation(line: 996, column: 30, scope: !4657)
!4757 = !DILocation(line: 0, scope: !4657)
!4758 = !DILocation(line: 997, column: 30, scope: !4657)
!4759 = !DILocation(line: 997, column: 22, scope: !4657)
!4760 = !DILocation(line: 998, column: 39, scope: !4657)
!4761 = !DILocation(line: 998, column: 22, scope: !4657)
!4762 = !DILocation(line: 999, column: 17, scope: !4657)
!4763 = !DILocation(line: 1002, column: 20, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4657, file: !543, line: 1002, column: 8)
!4765 = !DILocation(line: 996, column: 22, scope: !4657)
!4766 = !DILocation(line: 1002, column: 35, scope: !4764)
!4767 = !DILocation(line: 1002, column: 23, scope: !4764)
!4768 = !DILocation(line: 1002, column: 8, scope: !4657)
!4769 = !DILocation(line: 1003, column: 5, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !543, line: 1003, column: 5)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !543, line: 1003, column: 5)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !543, line: 1003, column: 5)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !543, line: 1003, column: 5)
!4774 = distinct !DILexicalBlock(scope: !4764, file: !543, line: 1002, column: 45)
!4775 = !DILocation(line: 1010, column: 13, scope: !4774)
!4776 = !DILocation(line: 1011, column: 5, scope: !4774)
!4777 = !DILocation(line: 1014, column: 8, scope: !4657)
!4778 = !DILocation(line: 1015, column: 9, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4690, file: !543, line: 1014, column: 15)
!4780 = !DILocation(line: 1018, column: 14, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !543, line: 1017, column: 12)
!4782 = distinct !DILexicalBlock(scope: !4779, file: !543, line: 1015, column: 9)
!4783 = !DILocation(line: 1020, column: 4, scope: !4779)
!4784 = !DILocation(line: 1020, column: 15, scope: !4690)
!4785 = !DILocation(line: 1021, column: 1, scope: !4688)
!4786 = !DILocation(line: 1022, column: 11, scope: !4688)
!4787 = !DILocation(line: 1025, column: 14, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4688, file: !543, line: 1025, column: 9)
!4789 = !DILocation(line: 1026, column: 25, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4788, file: !543, line: 1025, column: 38)
!4791 = !DILocation(line: 1026, column: 19, scope: !4790)
!4792 = !DILocation(line: 1026, column: 6, scope: !4790)
!4793 = !DILocation(line: 1026, column: 23, scope: !4790)
!4794 = !DILocation(line: 1027, column: 5, scope: !4790)
!4795 = !DILocation(line: 1031, column: 21, scope: !4688)
!4796 = !DILocation(line: 1031, column: 13, scope: !4688)
!4797 = !DILocation(line: 1032, column: 4, scope: !4688)
!4798 = !DILocation(line: 995, column: 33, scope: !4658)
!4799 = distinct !{!4799, !4753, !4800}
!4800 = !DILocation(line: 1033, column: 3, scope: !4655)
!4801 = !DILocation(line: 1040, column: 10, scope: !4614)
!4802 = !DILocation(line: 1042, column: 10, scope: !4614)
!4803 = !DILocation(line: 1052, column: 6, scope: !4614)
!4804 = !DILocation(line: 1055, column: 9, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4806, file: !543, line: 1052, column: 14)
!4806 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 1052, column: 6)
!4807 = !DILocation(line: 1056, column: 2, scope: !4805)
!4808 = !DILocation(line: 1056, column: 21, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !543, line: 1056, column: 13)
!4810 = !DILocation(line: 1066, column: 3, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !543, line: 1065, column: 11)
!4812 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 1065, column: 6)
!4813 = !DILocation(line: 1067, column: 2, scope: !4811)
!4814 = !DILocation(line: 1068, column: 10, scope: !4614)
!4815 = !DILocation(line: 0, scope: !4671)
!4816 = !DILocation(line: 1074, column: 20, scope: !4674)
!4817 = !DILocation(line: 1074, column: 2, scope: !4671)
!4818 = !DILocation(line: 1110, column: 24, scope: !4614)
!4819 = !DILocation(line: 1053, column: 12, scope: !4805)
!4820 = !DILocation(line: 1054, column: 12, scope: !4805)
!4821 = !DILocation(line: 1108, column: 30, scope: !4614)
!4822 = !DILocation(line: 1108, column: 40, scope: !4614)
!4823 = !DILocation(line: 1108, column: 38, scope: !4614)
!4824 = !DILocation(line: 1109, column: 31, scope: !4614)
!4825 = !DILocation(line: 1109, column: 24, scope: !4614)
!4826 = !DILocation(line: 1110, column: 31, scope: !4614)
!4827 = !DILocation(line: 1114, column: 31, scope: !4614)
!4828 = !DILocation(line: 1114, column: 48, scope: !4614)
!4829 = !DILocation(line: 1115, column: 13, scope: !4614)
!4830 = !DILocation(line: 1118, column: 7, scope: !4614)
!4831 = !DILocation(line: 1119, column: 9, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 1119, column: 6)
!4833 = !DILocation(line: 1119, column: 6, scope: !4614)
!4834 = !DILocation(line: 1075, column: 29, scope: !4673)
!4835 = !DILocation(line: 1075, column: 21, scope: !4673)
!4836 = !DILocation(line: 0, scope: !4673)
!4837 = !DILocation(line: 1076, column: 29, scope: !4673)
!4838 = !DILocation(line: 1076, column: 21, scope: !4673)
!4839 = !DILocation(line: 1077, column: 38, scope: !4673)
!4840 = !DILocation(line: 1077, column: 21, scope: !4673)
!4841 = !DILocation(line: 1078, column: 16, scope: !4673)
!4842 = !DILocation(line: 1080, column: 19, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4673, file: !543, line: 1080, column: 7)
!4844 = !DILocation(line: 1080, column: 34, scope: !4843)
!4845 = !DILocation(line: 1080, column: 22, scope: !4843)
!4846 = !DILocation(line: 1080, column: 7, scope: !4673)
!4847 = !DILocation(line: 1084, column: 7, scope: !4673)
!4848 = !DILocation(line: 1085, column: 8, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !543, line: 1084, column: 14)
!4850 = distinct !DILexicalBlock(scope: !4673, file: !543, line: 1084, column: 7)
!4851 = !DILocation(line: 1087, column: 25, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !543, line: 1085, column: 49)
!4853 = distinct !DILexicalBlock(scope: !4849, file: !543, line: 1085, column: 8)
!4854 = !DILocation(line: 1088, column: 4, scope: !4852)
!4855 = !DILocation(line: 1088, column: 15, scope: !4853)
!4856 = !DILocation(line: 1090, column: 26, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !543, line: 1088, column: 61)
!4858 = distinct !DILexicalBlock(scope: !4853, file: !543, line: 1088, column: 15)
!4859 = !DILocation(line: 1091, column: 4, scope: !4857)
!4860 = !DILocation(line: 1095, column: 8, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4850, file: !543, line: 1094, column: 10)
!4862 = !DILocation(line: 1097, column: 25, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !543, line: 1095, column: 49)
!4864 = distinct !DILexicalBlock(scope: !4861, file: !543, line: 1095, column: 8)
!4865 = !DILocation(line: 1098, column: 4, scope: !4863)
!4866 = !DILocation(line: 1100, column: 26, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4864, file: !543, line: 1098, column: 11)
!4868 = !DILocation(line: 1100, column: 5, scope: !4867)
!4869 = !DILocation(line: 1100, column: 30, scope: !4867)
!4870 = !DILocation(line: 1101, column: 26, scope: !4867)
!4871 = !DILocation(line: 0, scope: !4850)
!4872 = !DILocation(line: 1074, column: 32, scope: !4674)
!4873 = distinct !{!4873, !4817, !4874}
!4874 = !DILocation(line: 1104, column: 2, scope: !4671)
!4875 = !DILocation(line: 1124, column: 13, scope: !4614)
!4876 = !DILocation(line: 1127, column: 10, scope: !4614)
!4877 = !DILocation(line: 1127, column: 7, scope: !4614)
!4878 = !DILocation(line: 1128, column: 9, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 1128, column: 6)
!4880 = !DILocation(line: 1128, column: 6, scope: !4614)
!4881 = !DILocation(line: 1134, column: 27, scope: !4614)
!4882 = !DILocation(line: 1136, column: 7, scope: !4614)
!4883 = !DILocation(line: 1137, column: 9, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4614, file: !543, line: 1137, column: 6)
!4885 = !DILocation(line: 1137, column: 6, scope: !4614)
!4886 = !DILocation(line: 1131, column: 10, scope: !4614)
!4887 = !DILocation(line: 1140, column: 10, scope: !4614)
!4888 = !DILocation(line: 0, scope: !4681)
!4889 = !DILocation(line: 1143, column: 20, scope: !4684)
!4890 = !DILocation(line: 1143, column: 2, scope: !4681)
!4891 = !DILocation(line: 1144, column: 3, scope: !4683)
!4892 = !DILocation(line: 1144, column: 17, scope: !4683)
!4893 = !DILocation(line: 0, scope: !4683)
!4894 = !DILocation(line: 1144, column: 11, scope: !4683)
!4895 = !DILocation(line: 1145, column: 38, scope: !4683)
!4896 = !DILocation(line: 1145, column: 21, scope: !4683)
!4897 = !DILocation(line: 1146, column: 22, scope: !4683)
!4898 = !DILocation(line: 1146, column: 29, scope: !4683)
!4899 = !DILocation(line: 1148, column: 8, scope: !4683)
!4900 = !DILocation(line: 1149, column: 10, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4683, file: !543, line: 1149, column: 7)
!4902 = !DILocation(line: 1149, column: 7, scope: !4683)
!4903 = !DILocation(line: 1154, column: 8, scope: !4683)
!4904 = !DILocation(line: 1155, column: 10, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4683, file: !543, line: 1155, column: 7)
!4906 = !DILocation(line: 1155, column: 7, scope: !4683)
!4907 = !DILocation(line: 1159, column: 2, scope: !4684)
!4908 = !DILocation(line: 1152, column: 11, scope: !4683)
!4909 = !DILocation(line: 1158, column: 11, scope: !4683)
!4910 = !DILocation(line: 1143, column: 33, scope: !4684)
!4911 = distinct !{!4911, !4890, !4912}
!4912 = !DILocation(line: 1159, column: 2, scope: !4681)
!4913 = !DILocation(line: 1162, column: 8, scope: !4614)
!4914 = !DILocation(line: 1164, column: 2, scope: !4614)
!4915 = !DILocation(line: 1165, column: 1, scope: !4614)
!4916 = distinct !DISubprogram(name: "get_package_len", scope: !543, file: !543, line: 196, type: !4917, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4919)
!4917 = !DISubroutineType(types: !4918)
!4918 = !{!439, !104}
!4919 = !{!4920, !4921, !4922, !4923, !4924, !4925, !4926}
!4920 = !DILocalVariable(name: "packaged", arg: 1, scope: !4916, file: !543, line: 196, type: !104)
!4921 = !DILocalVariable(name: "buf", scope: !4916, file: !543, line: 200, type: !209)
!4922 = !DILocalVariable(name: "start", scope: !4916, file: !543, line: 201, type: !209)
!4923 = !DILocalVariable(name: "args_size", scope: !4916, file: !543, line: 202, type: !32)
!4924 = !DILocalVariable(name: "s_nbr", scope: !4916, file: !543, line: 202, type: !32)
!4925 = !DILocalVariable(name: "ros_nbr", scope: !4916, file: !543, line: 202, type: !32)
!4926 = !DILocalVariable(name: "i", scope: !4927, file: !543, line: 215, type: !108)
!4927 = distinct !DILexicalBlock(scope: !4916, file: !543, line: 215, column: 2)
!4928 = !DILocation(line: 0, scope: !4916)
!4929 = !DILocation(line: 204, column: 14, scope: !4916)
!4930 = !DILocation(line: 204, column: 21, scope: !4916)
!4931 = !DILocation(line: 205, column: 14, scope: !4916)
!4932 = !DILocation(line: 206, column: 14, scope: !4916)
!4933 = !DILocation(line: 209, column: 6, scope: !4916)
!4934 = !DILocation(line: 212, column: 6, scope: !4916)
!4935 = !DILocation(line: 0, scope: !4927)
!4936 = !DILocation(line: 215, column: 20, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4927, file: !543, line: 215, column: 2)
!4938 = !DILocation(line: 215, column: 2, scope: !4927)
!4939 = !DILocation(line: 220, column: 33, scope: !4916)
!4940 = !DILocation(line: 220, column: 2, scope: !4916)
!4941 = !DILocation(line: 216, column: 6, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4937, file: !543, line: 215, column: 34)
!4943 = !DILocation(line: 217, column: 10, scope: !4942)
!4944 = !DILocation(line: 217, column: 36, scope: !4942)
!4945 = !DILocation(line: 217, column: 7, scope: !4942)
!4946 = !DILocation(line: 215, column: 30, scope: !4937)
!4947 = distinct !{!4947, !4938, !4948}
!4948 = !DILocation(line: 218, column: 2, scope: !4927)
!4949 = distinct !DISubprogram(name: "append_string", scope: !543, file: !543, line: 223, type: !4950, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4952)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{!108, !4617, !104, !105, !168}
!4952 = !{!4953, !4954, !4955, !4956}
!4953 = !DILocalVariable(name: "cb", arg: 1, scope: !4949, file: !543, line: 223, type: !4617)
!4954 = !DILocalVariable(name: "ctx", arg: 2, scope: !4949, file: !543, line: 223, type: !104)
!4955 = !DILocalVariable(name: "str", arg: 3, scope: !4949, file: !543, line: 223, type: !105)
!4956 = !DILocalVariable(name: "strl", arg: 4, scope: !4949, file: !543, line: 223, type: !168)
!4957 = !DILocation(line: 0, scope: !4949)
!4958 = !DILocation(line: 225, column: 9, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4949, file: !543, line: 225, column: 6)
!4960 = !DILocation(line: 225, column: 6, scope: !4949)
!4961 = !DILocation(line: 226, column: 14, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4959, file: !543, line: 225, column: 18)
!4963 = !DILocation(line: 226, column: 12, scope: !4962)
!4964 = !DILocation(line: 226, column: 3, scope: !4962)
!4965 = !DILocation(line: 229, column: 14, scope: !4949)
!4966 = !DILocation(line: 229, column: 9, scope: !4949)
!4967 = !DILocation(line: 229, column: 27, scope: !4949)
!4968 = !DILocation(line: 229, column: 39, scope: !4949)
!4969 = !DILocation(line: 230, column: 17, scope: !4949)
!4970 = !DILocation(line: 230, column: 9, scope: !4949)
!4971 = !DILocation(line: 230, column: 2, scope: !4949)
!4972 = !DILocation(line: 231, column: 1, scope: !4949)
!4973 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !555, file: !555, line: 45, type: !557, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !4974)
!4974 = !{!4975}
!4975 = !DILocalVariable(name: "c", arg: 1, scope: !4973, file: !555, line: 45, type: !108)
!4976 = !DILocation(line: 0, scope: !4973)
!4977 = !DILocation(line: 50, column: 2, scope: !4973)
!4978 = distinct !DISubprogram(name: "__printk_hook_install", scope: !555, file: !555, line: 63, type: !4979, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !4981)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{null, !556}
!4981 = !{!4982}
!4982 = !DILocalVariable(name: "fn", arg: 1, scope: !4978, file: !555, line: 63, type: !556)
!4983 = !DILocation(line: 0, scope: !4978)
!4984 = !DILocation(line: 65, column: 12, scope: !4978)
!4985 = !DILocation(line: 66, column: 1, scope: !4978)
!4986 = distinct !DISubprogram(name: "__printk_get_hook", scope: !555, file: !555, line: 76, type: !4987, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !437)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!104}
!4989 = !DILocation(line: 78, column: 9, scope: !4986)
!4990 = !DILocation(line: 78, column: 2, scope: !4986)
!4991 = distinct !DISubprogram(name: "vprintk", scope: !555, file: !555, line: 113, type: !4992, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5000)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{null, !105, !4994}
!4994 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4124, line: 99, baseType: !4995)
!4995 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4124, line: 40, baseType: !4996)
!4996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !555, baseType: !4997)
!4997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4998)
!4998 = !{!4999}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4997, file: !555, line: 79, baseType: !104, size: 32)
!5000 = !{!5001, !5002, !5003}
!5001 = !DILocalVariable(name: "fmt", arg: 1, scope: !4991, file: !555, line: 113, type: !105)
!5002 = !DILocalVariable(name: "ap", arg: 2, scope: !4991, file: !555, line: 113, type: !4994)
!5003 = !DILocalVariable(name: "ctx", scope: !5004, file: !555, line: 121, type: !5006)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !555, line: 120, column: 27)
!5005 = distinct !DILexicalBlock(scope: !4991, file: !555, line: 120, column: 6)
!5006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !555, line: 81, size: 32, elements: !5007)
!5007 = !{!5008, !5009}
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5006, file: !555, line: 85, baseType: !32, size: 32)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5006, file: !555, line: 86, baseType: !5010, offset: 32)
!5010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !5011)
!5011 = !{!5012}
!5012 = !DISubrange(count: 0)
!5013 = !DILocation(line: 0, scope: !4991)
!5014 = !DILocation(line: 148, column: 3, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5005, file: !555, line: 138, column: 9)
!5016 = !DILocation(line: 155, column: 1, scope: !4991)
!5017 = distinct !DISubprogram(name: "char_out", scope: !555, file: !555, line: 107, type: !5018, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5020)
!5018 = !DISubroutineType(types: !5019)
!5019 = !{!108, !108, !104}
!5020 = !{!5021, !5022}
!5021 = !DILocalVariable(name: "c", arg: 1, scope: !5017, file: !555, line: 107, type: !108)
!5022 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5017, file: !555, line: 107, type: !104)
!5023 = !DILocation(line: 0, scope: !5017)
!5024 = !DILocation(line: 110, column: 9, scope: !5017)
!5025 = !DILocation(line: 110, column: 2, scope: !5017)
!5026 = distinct !DISubprogram(name: "cbvprintf", scope: !4156, file: !4156, line: 739, type: !5027, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5029)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{!108, !4485, !104, !105, !4994}
!5029 = !{!5030, !5031, !5032, !5033}
!5030 = !DILocalVariable(name: "out", arg: 1, scope: !5026, file: !4156, line: 739, type: !4485)
!5031 = !DILocalVariable(name: "ctx", arg: 2, scope: !5026, file: !4156, line: 739, type: !104)
!5032 = !DILocalVariable(name: "format", arg: 3, scope: !5026, file: !4156, line: 739, type: !105)
!5033 = !DILocalVariable(name: "ap", arg: 4, scope: !5026, file: !4156, line: 739, type: !4994)
!5034 = !DILocation(line: 0, scope: !5026)
!5035 = !DILocation(line: 741, column: 9, scope: !5026)
!5036 = !DILocation(line: 741, column: 2, scope: !5026)
!5037 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !555, file: !555, line: 157, type: !5038, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5040)
!5038 = !DISubroutineType(types: !5039)
!5039 = !{null, !443, !439}
!5040 = !{!5041, !5042, !5043}
!5041 = !DILocalVariable(name: "c", arg: 1, scope: !5037, file: !555, line: 157, type: !443)
!5042 = !DILocalVariable(name: "n", arg: 2, scope: !5037, file: !555, line: 157, type: !439)
!5043 = !DILocalVariable(name: "i", scope: !5037, file: !555, line: 159, type: !439)
!5044 = !DILocation(line: 0, scope: !5037)
!5045 = !DILocation(line: 164, column: 16, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !555, line: 164, column: 2)
!5047 = distinct !DILexicalBlock(scope: !5037, file: !555, line: 164, column: 2)
!5048 = !DILocation(line: 164, column: 2, scope: !5047)
!5049 = !DILocation(line: 165, column: 3, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5046, file: !555, line: 164, column: 26)
!5051 = !DILocation(line: 165, column: 13, scope: !5050)
!5052 = !DILocation(line: 164, column: 22, scope: !5046)
!5053 = distinct !{!5053, !5048, !5054}
!5054 = !DILocation(line: 166, column: 2, scope: !5047)
!5055 = !DILocation(line: 171, column: 1, scope: !5037)
!5056 = distinct !DISubprogram(name: "printk", scope: !555, file: !555, line: 203, type: !5057, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5059)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{null, !105, null}
!5059 = !{!5060, !5061}
!5060 = !DILocalVariable(name: "fmt", arg: 1, scope: !5056, file: !555, line: 203, type: !105)
!5061 = !DILocalVariable(name: "ap", scope: !5056, file: !555, line: 205, type: !4994)
!5062 = !DILocation(line: 0, scope: !5056)
!5063 = !DILocation(line: 205, column: 2, scope: !5056)
!5064 = !DILocation(line: 205, column: 10, scope: !5056)
!5065 = !DILocation(line: 207, column: 2, scope: !5056)
!5066 = !DILocation(line: 209, column: 2, scope: !5056)
!5067 = !DILocation(line: 211, column: 2, scope: !5056)
!5068 = !DILocation(line: 212, column: 1, scope: !5056)
!5069 = distinct !DISubprogram(name: "snprintk", scope: !555, file: !555, line: 239, type: !5070, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5072)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{!108, !443, !439, !105, null}
!5072 = !{!5073, !5074, !5075, !5076, !5077}
!5073 = !DILocalVariable(name: "str", arg: 1, scope: !5069, file: !555, line: 239, type: !443)
!5074 = !DILocalVariable(name: "size", arg: 2, scope: !5069, file: !555, line: 239, type: !439)
!5075 = !DILocalVariable(name: "fmt", arg: 3, scope: !5069, file: !555, line: 239, type: !105)
!5076 = !DILocalVariable(name: "ap", scope: !5069, file: !555, line: 241, type: !4994)
!5077 = !DILocalVariable(name: "ret", scope: !5069, file: !555, line: 242, type: !108)
!5078 = !DILocation(line: 0, scope: !5069)
!5079 = !DILocation(line: 241, column: 2, scope: !5069)
!5080 = !DILocation(line: 241, column: 10, scope: !5069)
!5081 = !DILocation(line: 244, column: 2, scope: !5069)
!5082 = !DILocation(line: 245, column: 8, scope: !5069)
!5083 = !DILocation(line: 246, column: 2, scope: !5069)
!5084 = !DILocation(line: 249, column: 1, scope: !5069)
!5085 = !DILocation(line: 248, column: 2, scope: !5069)
!5086 = distinct !DISubprogram(name: "vsnprintk", scope: !555, file: !555, line: 251, type: !5087, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!108, !443, !439, !105, !4994}
!5089 = !{!5090, !5091, !5092, !5093, !5094}
!5090 = !DILocalVariable(name: "str", arg: 1, scope: !5086, file: !555, line: 251, type: !443)
!5091 = !DILocalVariable(name: "size", arg: 2, scope: !5086, file: !555, line: 251, type: !439)
!5092 = !DILocalVariable(name: "fmt", arg: 3, scope: !5086, file: !555, line: 251, type: !105)
!5093 = !DILocalVariable(name: "ap", arg: 4, scope: !5086, file: !555, line: 251, type: !4994)
!5094 = !DILocalVariable(name: "ctx", scope: !5086, file: !555, line: 253, type: !5095)
!5095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !555, line: 217, size: 96, elements: !5096)
!5096 = !{!5097, !5098, !5099}
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5095, file: !555, line: 218, baseType: !443, size: 32)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5095, file: !555, line: 219, baseType: !108, size: 32, offset: 32)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5095, file: !555, line: 220, baseType: !108, size: 32, offset: 64)
!5100 = !DILocation(line: 0, scope: !5086)
!5101 = !DILocation(line: 253, column: 2, scope: !5086)
!5102 = !DILocation(line: 253, column: 21, scope: !5086)
!5103 = !DILocation(line: 253, column: 27, scope: !5086)
!5104 = !DILocation(line: 255, column: 2, scope: !5086)
!5105 = !DILocation(line: 257, column: 10, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5086, file: !555, line: 257, column: 6)
!5107 = !DILocation(line: 257, column: 22, scope: !5106)
!5108 = !DILocation(line: 257, column: 16, scope: !5106)
!5109 = !DILocation(line: 257, column: 6, scope: !5086)
!5110 = !DILocation(line: 258, column: 3, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5106, file: !555, line: 257, column: 27)
!5112 = !DILocation(line: 258, column: 18, scope: !5111)
!5113 = !DILocation(line: 259, column: 2, scope: !5111)
!5114 = !DILocation(line: 262, column: 1, scope: !5086)
!5115 = !DILocation(line: 261, column: 2, scope: !5086)
!5116 = distinct !DISubprogram(name: "str_out", scope: !555, file: !555, line: 223, type: !5117, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5120)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{!108, !108, !5119}
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 32)
!5120 = !{!5121, !5122}
!5121 = !DILocalVariable(name: "c", arg: 1, scope: !5116, file: !555, line: 223, type: !108)
!5122 = !DILocalVariable(name: "ctx", arg: 2, scope: !5116, file: !555, line: 223, type: !5119)
!5123 = !DILocation(line: 0, scope: !5116)
!5124 = !DILocation(line: 225, column: 11, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5116, file: !555, line: 225, column: 6)
!5126 = !DILocation(line: 225, column: 15, scope: !5125)
!5127 = !DILocation(line: 0, scope: !5125)
!5128 = !DILocation(line: 225, column: 23, scope: !5125)
!5129 = !DILocation(line: 225, column: 45, scope: !5125)
!5130 = !DILocation(line: 225, column: 37, scope: !5125)
!5131 = !DILocation(line: 225, column: 6, scope: !5116)
!5132 = !DILocation(line: 226, column: 8, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5125, file: !555, line: 225, column: 50)
!5134 = !DILocation(line: 226, column: 13, scope: !5133)
!5135 = !DILocation(line: 227, column: 3, scope: !5133)
!5136 = !DILocation(line: 230, column: 29, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5116, file: !555, line: 230, column: 6)
!5138 = !DILocation(line: 230, column: 17, scope: !5137)
!5139 = !DILocation(line: 230, column: 6, scope: !5116)
!5140 = !DILocation(line: 231, column: 22, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !555, line: 230, column: 34)
!5142 = !DILocation(line: 231, column: 3, scope: !5141)
!5143 = !DILocation(line: 231, column: 26, scope: !5141)
!5144 = !DILocation(line: 232, column: 2, scope: !5141)
!5145 = !DILocation(line: 233, column: 28, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5137, file: !555, line: 232, column: 9)
!5147 = !DILocation(line: 233, column: 22, scope: !5146)
!5148 = !DILocation(line: 233, column: 3, scope: !5146)
!5149 = !DILocation(line: 233, column: 26, scope: !5146)
!5150 = !DILocation(line: 237, column: 1, scope: !5116)
!5151 = distinct !DISubprogram(name: "z_thread_entry", scope: !5152, file: !5152, line: 30, type: !5153, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !5160)
!5152 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5153 = !DISubroutineType(types: !5154)
!5154 = !{null, !5155, !104, !104, !104}
!5155 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5156, line: 46, baseType: !5157)
!5156 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5158, size: 32)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{null, !104, !104, !104}
!5160 = !{!5161, !5162, !5163, !5164}
!5161 = !DILocalVariable(name: "entry", arg: 1, scope: !5151, file: !5152, line: 30, type: !5155)
!5162 = !DILocalVariable(name: "p1", arg: 2, scope: !5151, file: !5152, line: 31, type: !104)
!5163 = !DILocalVariable(name: "p2", arg: 3, scope: !5151, file: !5152, line: 31, type: !104)
!5164 = !DILocalVariable(name: "p3", arg: 4, scope: !5151, file: !5152, line: 31, type: !104)
!5165 = !DILocation(line: 0, scope: !5151)
!5166 = !DILocation(line: 36, column: 2, scope: !5151)
!5167 = !DILocation(line: 38, column: 17, scope: !5151)
!5168 = !DILocation(line: 38, column: 2, scope: !5151)
!5169 = !DILocation(line: 45, column: 2, scope: !5151)
!5170 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !5171, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !437)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{!5173}
!5173 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !5174)
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 32)
!5175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !5176)
!5176 = !{!5177, !5235, !5247, !5248, !5249, !5250, !5256, !5269}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5175, file: !645, line: 247, baseType: !5178, size: 384)
!5178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !5179)
!5179 = !{!5180, !5204, !5211, !5212, !5213, !5222, !5223, !5224}
!5180 = !DIDerivedType(tag: DW_TAG_member, scope: !5178, file: !645, line: 60, baseType: !5181, size: 64)
!5181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5178, file: !645, line: 60, size: 64, elements: !5182)
!5182 = !{!5183, !5198}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5181, file: !645, line: 61, baseType: !5184, size: 64)
!5184 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !5185)
!5185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !5186)
!5186 = !{!5187, !5193}
!5187 = !DIDerivedType(tag: DW_TAG_member, scope: !5185, file: !367, line: 38, baseType: !5188, size: 32)
!5188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5185, file: !367, line: 38, size: 32, elements: !5189)
!5189 = !{!5190, !5192}
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5188, file: !367, line: 39, baseType: !5191, size: 32)
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 32)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5188, file: !367, line: 40, baseType: !5191, size: 32)
!5193 = !DIDerivedType(tag: DW_TAG_member, scope: !5185, file: !367, line: 42, baseType: !5194, size: 32, offset: 32)
!5194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5185, file: !367, line: 42, size: 32, elements: !5195)
!5195 = !{!5196, !5197}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5194, file: !367, line: 43, baseType: !5191, size: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5194, file: !367, line: 44, baseType: !5191, size: 32)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5181, file: !645, line: 62, baseType: !5199, size: 64)
!5199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !5200)
!5200 = !{!5201}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5199, file: !670, line: 50, baseType: !5202, size: 64)
!5202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5203, size: 64, elements: !675)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 32)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5178, file: !645, line: 68, baseType: !5205, size: 32, offset: 64)
!5205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5206, size: 32)
!5206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !5207)
!5207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !5208)
!5208 = !{!5209}
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5207, file: !363, line: 232, baseType: !5210, size: 64)
!5210 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !5185)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5178, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5178, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!5213 = !DIDerivedType(tag: DW_TAG_member, scope: !5178, file: !645, line: 90, baseType: !5214, size: 16, offset: 112)
!5214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5178, file: !645, line: 90, size: 16, elements: !5215)
!5215 = !{!5216, !5221}
!5216 = !DIDerivedType(tag: DW_TAG_member, scope: !5214, file: !645, line: 91, baseType: !5217, size: 16)
!5217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5214, file: !645, line: 91, size: 16, elements: !5218)
!5218 = !{!5219, !5220}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5217, file: !645, line: 96, baseType: !693, size: 8)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5217, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5214, file: !645, line: 100, baseType: !168, size: 16)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5178, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5178, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5178, file: !645, line: 131, baseType: !5225, size: 192, offset: 192)
!5225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !5226)
!5226 = !{!5227, !5228, !5234}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5225, file: !363, line: 245, baseType: !5184, size: 64)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5225, file: !363, line: 246, baseType: !5229, size: 32, offset: 64)
!5229 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !5230)
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 32)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{null, !5233}
!5233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5225, size: 32)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5225, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5175, file: !645, line: 250, baseType: !5236, size: 288, offset: 384)
!5236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !5237)
!5237 = !{!5238, !5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5236, file: !712, line: 26, baseType: !113, size: 32)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5236, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5236, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5236, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5236, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5236, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5236, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5236, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5236, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5175, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5175, file: !645, line: 256, baseType: !5206, size: 64, offset: 704)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5175, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5175, file: !645, line: 300, baseType: !5251, size: 96, offset: 800)
!5251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !5252)
!5252 = !{!5253, !5254, !5255}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5251, file: !645, line: 153, baseType: !22, size: 32)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5251, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5251, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5175, file: !645, line: 325, baseType: !5257, size: 32, offset: 896)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5258, size: 32)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !5259)
!5259 = !{!5260, !5266, !5267}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5258, file: !359, line: 5074, baseType: !5261, size: 96)
!5261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !5262)
!5262 = !{!5263, !5264, !5265}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5261, file: !738, line: 57, baseType: !741, size: 32)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5261, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5261, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5258, file: !359, line: 5075, baseType: !5206, size: 64, offset: 96)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5258, file: !359, line: 5076, baseType: !5268, offset: 160)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5175, file: !645, line: 343, baseType: !5270, size: 64, offset: 928)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !5271)
!5271 = !{!5272, !5273}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5270, file: !712, line: 63, baseType: !113, size: 32)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5270, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!5274 = !DILocation(line: 535, column: 9, scope: !5170)
!5275 = !DILocation(line: 535, column: 2, scope: !5170)
!5276 = distinct !DISubprogram(name: "k_thread_abort", scope: !3785, file: !3785, line: 188, type: !5277, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !5279)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{null, !5173}
!5279 = !{!5280}
!5280 = !DILocalVariable(name: "thread", arg: 1, scope: !5276, file: !3785, line: 188, type: !5173)
!5281 = !DILocation(line: 0, scope: !5276)
!5282 = !DILocation(line: 197, column: 2, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5276, file: !3785, line: 197, column: 2)
!5284 = !{i64 2154078562}
!5285 = !DILocation(line: 198, column: 2, scope: !5276)
!5286 = !DILocation(line: 199, column: 1, scope: !5276)
!5287 = distinct !DISubprogram(name: "z_current_get", scope: !3785, file: !3785, line: 173, type: !5171, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !437)
!5288 = !DILocation(line: 180, column: 2, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5287, file: !3785, line: 180, column: 2)
!5290 = !{i64 2154078494}
!5291 = !DILocation(line: 181, column: 9, scope: !5287)
!5292 = !DILocation(line: 181, column: 2, scope: !5287)
!5293 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2814, file: !2814, line: 1338, type: !5294, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5302)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{!108, !4485, !104, !105, !5296, !113}
!5296 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4124, line: 99, baseType: !5297)
!5297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4124, line: 40, baseType: !5298)
!5298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2814, baseType: !5299)
!5299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5300)
!5300 = !{!5301}
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5299, file: !2814, baseType: !104, size: 32)
!5302 = !{!5303, !5304, !5305, !5306, !5307, !5308, !5312, !5313, !5314, !5316, !5321, !5364, !5367, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5379, !5380, !5381, !5385, !5388, !5390, !5393, !5394, !5395, !5400, !5406, !5409, !5413, !5419, !5423, !5426, !5428, !5431}
!5303 = !DILocalVariable(name: "out", arg: 1, scope: !5293, file: !2814, line: 1338, type: !4485)
!5304 = !DILocalVariable(name: "ctx", arg: 2, scope: !5293, file: !2814, line: 1338, type: !104)
!5305 = !DILocalVariable(name: "fp", arg: 3, scope: !5293, file: !2814, line: 1338, type: !105)
!5306 = !DILocalVariable(name: "ap", arg: 4, scope: !5293, file: !2814, line: 1339, type: !5296)
!5307 = !DILocalVariable(name: "flags", arg: 5, scope: !5293, file: !2814, line: 1339, type: !113)
!5308 = !DILocalVariable(name: "buf", scope: !5293, file: !2814, line: 1341, type: !5309)
!5309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !5310)
!5310 = !{!5311}
!5311 = !DISubrange(count: 22)
!5312 = !DILocalVariable(name: "count", scope: !5293, file: !2814, line: 1342, type: !439)
!5313 = !DILocalVariable(name: "sint", scope: !5293, file: !2814, line: 1343, type: !2833)
!5314 = !DILocalVariable(name: "tagged_ap", scope: !5293, file: !2814, line: 1345, type: !5315)
!5315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!5316 = !DILocalVariable(name: "rc", scope: !5317, file: !2814, line: 1377, type: !108)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !2814, line: 1377, column: 4)
!5318 = distinct !DILexicalBlock(scope: !5319, file: !2814, line: 1376, column: 19)
!5319 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1376, column: 7)
!5320 = distinct !DILexicalBlock(scope: !5293, file: !2814, line: 1375, column: 19)
!5321 = !DILocalVariable(name: "state", scope: !5320, file: !2814, line: 1395, type: !5322)
!5322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5293, file: !2814, line: 1392, size: 192, elements: !5323)
!5323 = !{!5324, !5332}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5322, file: !2814, line: 1393, baseType: !5325, size: 64)
!5325 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2814, line: 166, size: 64, elements: !5326)
!5326 = !{!5327, !5328, !5329, !5330, !5331}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5325, file: !2814, line: 168, baseType: !2833, size: 64)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5325, file: !2814, line: 171, baseType: !2836, size: 64)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5325, file: !2814, line: 174, baseType: !536, size: 64)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5325, file: !2814, line: 177, baseType: !534, size: 64)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5325, file: !2814, line: 180, baseType: !104, size: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5322, file: !2814, line: 1394, baseType: !5333, size: 96, offset: 64)
!5333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2814, line: 189, size: 96, elements: !5334)
!5334 = !{!5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5359}
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5333, file: !2814, line: 191, baseType: !422, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5333, file: !2814, line: 194, baseType: !422, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5333, file: !2814, line: 197, baseType: !422, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5333, file: !2814, line: 200, baseType: !422, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5333, file: !2814, line: 203, baseType: !422, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5333, file: !2814, line: 206, baseType: !422, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5333, file: !2814, line: 209, baseType: !422, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5333, file: !2814, line: 212, baseType: !422, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5333, file: !2814, line: 219, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5333, file: !2814, line: 222, baseType: !422, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5333, file: !2814, line: 229, baseType: !422, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5333, file: !2814, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5333, file: !2814, line: 238, baseType: !422, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5333, file: !2814, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5333, file: !2814, line: 244, baseType: !422, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5333, file: !2814, line: 247, baseType: !422, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5333, file: !2814, line: 252, baseType: !422, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5333, file: !2814, line: 257, baseType: !422, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5333, file: !2814, line: 260, baseType: !165, size: 8, offset: 24)
!5354 = !DIDerivedType(tag: DW_TAG_member, scope: !5333, file: !2814, line: 262, baseType: !5355, size: 32, offset: 32)
!5355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5333, file: !2814, line: 262, size: 32, elements: !5356)
!5356 = !{!5357, !5358}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5355, file: !2814, line: 267, baseType: !108, size: 32)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5355, file: !2814, line: 289, baseType: !108, size: 32)
!5359 = !DIDerivedType(tag: DW_TAG_member, scope: !5333, file: !2814, line: 292, baseType: !5360, size: 32, offset: 64)
!5360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5333, file: !2814, line: 292, size: 32, elements: !5361)
!5361 = !{!5362, !5363}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5360, file: !2814, line: 297, baseType: !108, size: 32)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5360, file: !2814, line: 306, baseType: !108, size: 32)
!5364 = !DILocalVariable(name: "conv", scope: !5320, file: !2814, line: 1400, type: !5365)
!5365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5366)
!5366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5333, size: 32)
!5367 = !DILocalVariable(name: "value", scope: !5320, file: !2814, line: 1401, type: !5368)
!5368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5369)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5325, size: 32)
!5370 = !DILocalVariable(name: "sp", scope: !5320, file: !2814, line: 1402, type: !105)
!5371 = !DILocalVariable(name: "width", scope: !5320, file: !2814, line: 1403, type: !108)
!5372 = !DILocalVariable(name: "precision", scope: !5320, file: !2814, line: 1404, type: !108)
!5373 = !DILocalVariable(name: "bps", scope: !5320, file: !2814, line: 1405, type: !105)
!5374 = !DILocalVariable(name: "bpe", scope: !5320, file: !2814, line: 1406, type: !105)
!5375 = !DILocalVariable(name: "sign", scope: !5320, file: !2814, line: 1407, type: !107)
!5376 = !DILocalVariable(name: "arg", scope: !5377, file: !2814, line: 1432, type: !108)
!5377 = distinct !DILexicalBlock(scope: !5378, file: !2814, line: 1431, column: 24)
!5378 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1431, column: 7)
!5379 = !DILocalVariable(name: "specifier_cat", scope: !5320, file: !2814, line: 1468, type: !2813)
!5380 = !DILocalVariable(name: "length_mod", scope: !5320, file: !2814, line: 1470, type: !2821)
!5381 = !DILocalVariable(name: "rc", scope: !5382, file: !2814, line: 1575, type: !108)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !2814, line: 1575, column: 4)
!5383 = distinct !DILexicalBlock(scope: !5384, file: !2814, line: 1574, column: 43)
!5384 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1574, column: 7)
!5385 = !DILocalVariable(name: "rc", scope: !5386, file: !2814, line: 1584, type: !108)
!5386 = distinct !DILexicalBlock(scope: !5387, file: !2814, line: 1584, column: 4)
!5387 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1582, column: 28)
!5388 = !DILocalVariable(name: "len", scope: !5389, file: !2814, line: 1589, type: !439)
!5389 = distinct !DILexicalBlock(scope: !5387, file: !2814, line: 1586, column: 13)
!5390 = !DILocalVariable(name: "len", scope: !5391, file: !2814, line: 1641, type: !439)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !2814, line: 1640, column: 24)
!5392 = distinct !DILexicalBlock(scope: !5387, file: !2814, line: 1640, column: 8)
!5393 = !DILocalVariable(name: "nj_len", scope: !5320, file: !2814, line: 1722, type: !439)
!5394 = !DILocalVariable(name: "pad_len", scope: !5320, file: !2814, line: 1723, type: !108)
!5395 = !DILocalVariable(name: "pad", scope: !5396, file: !2814, line: 1751, type: !107)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !2814, line: 1750, column: 26)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !2814, line: 1750, column: 8)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !2814, line: 1747, column: 18)
!5399 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1747, column: 7)
!5400 = !DILocalVariable(name: "rc", scope: !5401, file: !2814, line: 1758, type: !108)
!5401 = distinct !DILexicalBlock(scope: !5402, file: !2814, line: 1758, column: 7)
!5402 = distinct !DILexicalBlock(scope: !5403, file: !2814, line: 1757, column: 21)
!5403 = distinct !DILexicalBlock(scope: !5404, file: !2814, line: 1757, column: 10)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !2814, line: 1756, column: 26)
!5405 = distinct !DILexicalBlock(scope: !5396, file: !2814, line: 1756, column: 9)
!5406 = !DILocalVariable(name: "rc", scope: !5407, file: !2814, line: 1765, type: !108)
!5407 = distinct !DILexicalBlock(scope: !5408, file: !2814, line: 1765, column: 6)
!5408 = distinct !DILexicalBlock(scope: !5396, file: !2814, line: 1764, column: 25)
!5409 = !DILocalVariable(name: "rc", scope: !5410, file: !2814, line: 1774, type: !108)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !2814, line: 1774, column: 4)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !2814, line: 1773, column: 18)
!5412 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1773, column: 7)
!5413 = !DILocalVariable(name: "rc", scope: !5414, file: !2814, line: 1819, type: !108)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !2814, line: 1819, column: 5)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !2814, line: 1818, column: 44)
!5416 = distinct !DILexicalBlock(scope: !5417, file: !2814, line: 1818, column: 8)
!5417 = distinct !DILexicalBlock(scope: !5418, file: !2814, line: 1817, column: 10)
!5418 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1777, column: 7)
!5419 = !DILocalVariable(name: "rc", scope: !5420, file: !2814, line: 1823, type: !108)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !2814, line: 1823, column: 5)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !2814, line: 1822, column: 26)
!5422 = distinct !DILexicalBlock(scope: !5417, file: !2814, line: 1822, column: 8)
!5423 = !DILocalVariable(name: "rc", scope: !5424, file: !2814, line: 1828, type: !108)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !2814, line: 1828, column: 5)
!5425 = distinct !DILexicalBlock(scope: !5417, file: !2814, line: 1827, column: 26)
!5426 = !DILocalVariable(name: "rc", scope: !5427, file: !2814, line: 1831, type: !108)
!5427 = distinct !DILexicalBlock(scope: !5417, file: !2814, line: 1831, column: 4)
!5428 = !DILocalVariable(name: "rc", scope: !5429, file: !2814, line: 1836, type: !108)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !2814, line: 1836, column: 4)
!5430 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1835, column: 21)
!5431 = !DILabel(scope: !5387, name: "prec_int_pad0", file: !2814, line: 1634)
!5432 = !DILocation(line: 0, scope: !5293)
!5433 = !DILocation(line: 1341, column: 2, scope: !5293)
!5434 = !DILocation(line: 1341, column: 7, scope: !5293)
!5435 = !DILocation(line: 1375, column: 2, scope: !5293)
!5436 = !DILocation(line: 1342, column: 9, scope: !5293)
!5437 = !DILocation(line: 1375, column: 9, scope: !5293)
!5438 = !DILocation(line: 1377, column: 4, scope: !5317)
!5439 = !DILocation(line: 0, scope: !5317)
!5440 = !DILocation(line: 1377, column: 4, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5317, file: !2814, line: 1377, column: 4)
!5442 = distinct !{!5442, !5435, !5443}
!5443 = !DILocation(line: 1839, column: 2, scope: !5293)
!5444 = !DILocation(line: 1392, column: 3, scope: !5320)
!5445 = !DILocation(line: 1395, column: 5, scope: !5320)
!5446 = !DILocation(line: 0, scope: !5320)
!5447 = !DILocation(line: 1409, column: 8, scope: !5320)
!5448 = !DILocation(line: 1414, column: 13, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1414, column: 7)
!5450 = !DILocation(line: 1414, column: 7, scope: !5320)
!5451 = !DILocation(line: 1415, column: 12, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5449, file: !2814, line: 1414, column: 25)
!5453 = !DILocation(line: 1417, column: 14, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5452, file: !2814, line: 1417, column: 8)
!5455 = !DILocation(line: 1417, column: 8, scope: !5452)
!5456 = !DILocation(line: 1418, column: 21, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !2814, line: 1417, column: 19)
!5458 = !DILocation(line: 1419, column: 13, scope: !5457)
!5459 = !DILocation(line: 1420, column: 4, scope: !5457)
!5460 = !DILocation(line: 1421, column: 20, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5449, file: !2814, line: 1421, column: 14)
!5462 = !DILocation(line: 1421, column: 14, scope: !5449)
!5463 = !DILocation(line: 1431, column: 13, scope: !5378)
!5464 = !DILocation(line: 1431, column: 7, scope: !5320)
!5465 = !DILocation(line: 1432, column: 14, scope: !5377)
!5466 = !DILocation(line: 0, scope: !5377)
!5467 = !DILocation(line: 1434, column: 12, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5377, file: !2814, line: 1434, column: 8)
!5469 = !DILocation(line: 1434, column: 8, scope: !5377)
!5470 = !DILocation(line: 1435, column: 24, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5468, file: !2814, line: 1434, column: 17)
!5472 = !DILocation(line: 1436, column: 4, scope: !5471)
!5473 = !DILocation(line: 1439, column: 20, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5378, file: !2814, line: 1439, column: 14)
!5475 = !DILocation(line: 1439, column: 14, scope: !5378)
!5476 = !DILocation(line: 1469, column: 37, scope: !5320)
!5477 = !DILocation(line: 1448, column: 20, scope: !5320)
!5478 = !DILocation(line: 1449, column: 22, scope: !5320)
!5479 = !DILocation(line: 1471, column: 34, scope: !5320)
!5480 = !DILocation(line: 1478, column: 7, scope: !5320)
!5481 = !DILocation(line: 1479, column: 4, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !2814, line: 1478, column: 40)
!5483 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1478, column: 7)
!5484 = !DILocation(line: 1484, column: 19, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5482, file: !2814, line: 1479, column: 24)
!5486 = !DILocation(line: 1484, column: 17, scope: !5485)
!5487 = !DILocation(line: 1485, column: 5, scope: !5485)
!5488 = !DILocation(line: 1492, column: 20, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !2814, line: 1491, column: 12)
!5490 = distinct !DILexicalBlock(scope: !5485, file: !2814, line: 1487, column: 9)
!5491 = !DILocation(line: 1492, column: 18, scope: !5489)
!5492 = !DILocation(line: 1494, column: 5, scope: !5485)
!5493 = !DILocation(line: 1497, column: 23, scope: !5485)
!5494 = !DILocation(line: 1496, column: 17, scope: !5485)
!5495 = !DILocation(line: 1498, column: 5, scope: !5485)
!5496 = !DILocation(line: 1501, column: 23, scope: !5485)
!5497 = !DILocation(line: 1500, column: 17, scope: !5485)
!5498 = !DILocation(line: 1502, column: 5, scope: !5485)
!5499 = !DILocation(line: 1513, column: 23, scope: !5485)
!5500 = !DILocation(line: 1513, column: 6, scope: !5485)
!5501 = !DILocation(line: 1512, column: 17, scope: !5485)
!5502 = !DILocation(line: 1514, column: 5, scope: !5485)
!5503 = !DILocation(line: 0, scope: !5485)
!5504 = !DILocation(line: 1516, column: 8, scope: !5482)
!5505 = !DILocation(line: 1517, column: 19, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !2814, line: 1516, column: 33)
!5507 = distinct !DILexicalBlock(scope: !5482, file: !2814, line: 1516, column: 8)
!5508 = !DILocation(line: 1517, column: 17, scope: !5506)
!5509 = !DILocation(line: 1518, column: 4, scope: !5506)
!5510 = !DILocation(line: 1519, column: 19, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !2814, line: 1518, column: 39)
!5512 = distinct !DILexicalBlock(scope: !5507, file: !2814, line: 1518, column: 15)
!5513 = !DILocation(line: 1519, column: 17, scope: !5511)
!5514 = !DILocation(line: 1520, column: 4, scope: !5511)
!5515 = !DILocation(line: 1522, column: 4, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !2814, line: 1521, column: 47)
!5517 = distinct !DILexicalBlock(scope: !5483, file: !2814, line: 1521, column: 14)
!5518 = !DILocation(line: 1527, column: 19, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5516, file: !2814, line: 1522, column: 24)
!5520 = !DILocation(line: 1527, column: 17, scope: !5519)
!5521 = !DILocation(line: 1528, column: 5, scope: !5519)
!5522 = !DILocation(line: 0, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5519, file: !2814, line: 1530, column: 9)
!5524 = !DILocation(line: 1540, column: 23, scope: !5519)
!5525 = !DILocation(line: 1539, column: 17, scope: !5519)
!5526 = !DILocation(line: 1542, column: 5, scope: !5519)
!5527 = !DILocation(line: 1545, column: 23, scope: !5519)
!5528 = !DILocation(line: 1544, column: 17, scope: !5519)
!5529 = !DILocation(line: 1547, column: 5, scope: !5519)
!5530 = !DILocation(line: 1551, column: 23, scope: !5519)
!5531 = !DILocation(line: 1551, column: 6, scope: !5519)
!5532 = !DILocation(line: 1550, column: 17, scope: !5519)
!5533 = !DILocation(line: 1552, column: 5, scope: !5519)
!5534 = !DILocation(line: 0, scope: !5519)
!5535 = !DILocation(line: 1554, column: 8, scope: !5516)
!5536 = !DILocation(line: 1555, column: 19, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5538, file: !2814, line: 1554, column: 33)
!5538 = distinct !DILexicalBlock(scope: !5516, file: !2814, line: 1554, column: 8)
!5539 = !DILocation(line: 1555, column: 17, scope: !5537)
!5540 = !DILocation(line: 1556, column: 4, scope: !5537)
!5541 = !DILocation(line: 1557, column: 19, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5543, file: !2814, line: 1556, column: 39)
!5543 = distinct !DILexicalBlock(scope: !5538, file: !2814, line: 1556, column: 15)
!5544 = !DILocation(line: 1557, column: 17, scope: !5542)
!5545 = !DILocation(line: 1558, column: 4, scope: !5542)
!5546 = !DILocation(line: 0, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5548, file: !2814, line: 1560, column: 8)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !2814, line: 1559, column: 45)
!5549 = distinct !DILexicalBlock(scope: !5517, file: !2814, line: 1559, column: 14)
!5550 = !DILocation(line: 1566, column: 17, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !2814, line: 1565, column: 46)
!5552 = distinct !DILexicalBlock(scope: !5549, file: !2814, line: 1565, column: 14)
!5553 = !DILocation(line: 1566, column: 15, scope: !5551)
!5554 = !DILocation(line: 1567, column: 3, scope: !5551)
!5555 = !DILocation(line: 1574, column: 21, scope: !5384)
!5556 = !DILocation(line: 1575, column: 4, scope: !5382)
!5557 = !DILocation(line: 0, scope: !5382)
!5558 = !DILocation(line: 1575, column: 4, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5382, file: !2814, line: 1575, column: 4)
!5560 = !DILocation(line: 1582, column: 17, scope: !5320)
!5561 = !DILocation(line: 1582, column: 3, scope: !5320)
!5562 = !DILocation(line: 1584, column: 4, scope: !5386)
!5563 = !DILocation(line: 0, scope: !5386)
!5564 = !DILocation(line: 1584, column: 4, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5386, file: !2814, line: 1584, column: 4)
!5566 = !DILocation(line: 1587, column: 31, scope: !5389)
!5567 = !DILocation(line: 1591, column: 18, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5389, file: !2814, line: 1591, column: 8)
!5569 = !DILocation(line: 1591, column: 8, scope: !5389)
!5570 = !DILocation(line: 1592, column: 11, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5568, file: !2814, line: 1591, column: 24)
!5572 = !DILocation(line: 0, scope: !5389)
!5573 = !DILocation(line: 1593, column: 4, scope: !5571)
!5574 = !DILocation(line: 1594, column: 11, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5568, file: !2814, line: 1593, column: 11)
!5576 = !DILocation(line: 1604, column: 51, scope: !5387)
!5577 = !DILocation(line: 1604, column: 13, scope: !5387)
!5578 = !DILocation(line: 1604, column: 11, scope: !5387)
!5579 = !DILocation(line: 1606, column: 4, scope: !5387)
!5580 = !DILocation(line: 1609, column: 14, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5387, file: !2814, line: 1609, column: 8)
!5582 = !DILocation(line: 1609, column: 8, scope: !5387)
!5583 = !DILocation(line: 1619, column: 18, scope: !5387)
!5584 = !DILocation(line: 1620, column: 13, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5387, file: !2814, line: 1620, column: 8)
!5586 = !DILocation(line: 1620, column: 8, scope: !5387)
!5587 = !DILocation(line: 1622, column: 36, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5585, file: !2814, line: 1620, column: 18)
!5589 = !DILocation(line: 1622, column: 17, scope: !5588)
!5590 = !DILocation(line: 1623, column: 4, scope: !5588)
!5591 = !DILocation(line: 1632, column: 29, scope: !5387)
!5592 = !DILocation(line: 1632, column: 10, scope: !5387)
!5593 = !DILocation(line: 1632, column: 4, scope: !5387)
!5594 = !DILocation(line: 1407, column: 8, scope: !5320)
!5595 = !DILocation(line: 0, scope: !5387)
!5596 = !DILocation(line: 1634, column: 3, scope: !5387)
!5597 = !DILocation(line: 1640, column: 18, scope: !5392)
!5598 = !DILocation(line: 1640, column: 8, scope: !5387)
!5599 = !DILocation(line: 1729, column: 13, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1729, column: 7)
!5601 = !DILocation(line: 1641, column: 22, scope: !5391)
!5602 = !DILocation(line: 0, scope: !5391)
!5603 = !DILocation(line: 1646, column: 21, scope: !5391)
!5604 = !DILocation(line: 1649, column: 13, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5391, file: !2814, line: 1649, column: 9)
!5606 = !DILocation(line: 1649, column: 9, scope: !5391)
!5607 = !DILocation(line: 1650, column: 35, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5605, file: !2814, line: 1649, column: 34)
!5609 = !DILocation(line: 1650, column: 23, scope: !5608)
!5610 = !DILocation(line: 1651, column: 5, scope: !5608)
!5611 = !DILocation(line: 1660, column: 15, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5387, file: !2814, line: 1660, column: 8)
!5613 = !DILocation(line: 1660, column: 19, scope: !5612)
!5614 = !DILocation(line: 1660, column: 8, scope: !5387)
!5615 = !DILocation(line: 1661, column: 23, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5612, file: !2814, line: 1660, column: 28)
!5617 = !DILocation(line: 1661, column: 11, scope: !5616)
!5618 = !DILocation(line: 1665, column: 22, scope: !5616)
!5619 = !DILocation(line: 1666, column: 21, scope: !5616)
!5620 = !DILocation(line: 1668, column: 5, scope: !5616)
!5621 = !DILocation(line: 1677, column: 30, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5623, file: !2814, line: 1676, column: 49)
!5623 = distinct !DILexicalBlock(scope: !5387, file: !2814, line: 1676, column: 8)
!5624 = !DILocation(line: 1677, column: 5, scope: !5622)
!5625 = !DILocation(line: 1680, column: 4, scope: !5387)
!5626 = !DILocation(line: 0, scope: !5568)
!5627 = !DILocation(line: 1597, column: 14, scope: !5389)
!5628 = !DILocation(line: 1699, column: 11, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1699, column: 7)
!5630 = !DILocation(line: 1699, column: 7, scope: !5320)
!5631 = !DILocation(line: 1725, column: 7, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1725, column: 7)
!5633 = !DILocation(line: 1725, column: 12, scope: !5632)
!5634 = !DILocation(line: 1747, column: 13, scope: !5399)
!5635 = !DILocation(line: 1747, column: 7, scope: !5320)
!5636 = !DILocation(line: 1722, column: 24, scope: !5320)
!5637 = !DILocation(line: 1725, column: 7, scope: !5320)
!5638 = !DILocation(line: 1729, column: 7, scope: !5320)
!5639 = !DILocation(line: 1736, column: 13, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5320, file: !2814, line: 1736, column: 7)
!5641 = !DILocation(line: 1735, column: 19, scope: !5320)
!5642 = !DILocation(line: 1736, column: 7, scope: !5320)
!5643 = !DILocation(line: 1748, column: 10, scope: !5398)
!5644 = !DILocation(line: 1750, column: 15, scope: !5397)
!5645 = !DILocation(line: 1750, column: 8, scope: !5398)
!5646 = !DILocation(line: 0, scope: !5396)
!5647 = !DILocation(line: 1756, column: 15, scope: !5405)
!5648 = !DILocation(line: 1756, column: 9, scope: !5396)
!5649 = !DILocation(line: 1758, column: 7, scope: !5401)
!5650 = !DILocation(line: 0, scope: !5401)
!5651 = !DILocation(line: 1758, column: 7, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5401, file: !2814, line: 1758, column: 7)
!5653 = !DILocation(line: 1764, column: 5, scope: !5396)
!5654 = !DILocation(line: 0, scope: !5398)
!5655 = !DILocation(line: 1764, column: 20, scope: !5396)
!5656 = !DILocation(line: 1764, column: 17, scope: !5396)
!5657 = !DILocation(line: 1765, column: 6, scope: !5407)
!5658 = !DILocation(line: 0, scope: !5407)
!5659 = !DILocation(line: 1765, column: 6, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5407, file: !2814, line: 1765, column: 6)
!5661 = distinct !{!5661, !5653, !5662}
!5662 = !DILocation(line: 1766, column: 5, scope: !5396)
!5663 = !DILocation(line: 1773, column: 12, scope: !5412)
!5664 = !DILocation(line: 1773, column: 7, scope: !5320)
!5665 = !DILocation(line: 1773, column: 7, scope: !5412)
!5666 = !DILocation(line: 1774, column: 4, scope: !5410)
!5667 = !DILocation(line: 0, scope: !5410)
!5668 = !DILocation(line: 1774, column: 4, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5410, file: !2814, line: 1774, column: 4)
!5670 = !DILocation(line: 1818, column: 8, scope: !5416)
!5671 = !DILocation(line: 1818, column: 27, scope: !5416)
!5672 = !DILocation(line: 1818, column: 25, scope: !5416)
!5673 = !DILocation(line: 1818, column: 8, scope: !5417)
!5674 = !DILocation(line: 1819, column: 5, scope: !5414)
!5675 = !DILocation(line: 0, scope: !5414)
!5676 = !DILocation(line: 1819, column: 5, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5414, file: !2814, line: 1819, column: 5)
!5678 = !DILocation(line: 1822, column: 14, scope: !5422)
!5679 = !DILocation(line: 1822, column: 8, scope: !5417)
!5680 = !DILocation(line: 1823, column: 5, scope: !5420)
!5681 = !DILocation(line: 0, scope: !5420)
!5682 = !DILocation(line: 1823, column: 5, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5420, file: !2814, line: 1823, column: 5)
!5684 = !DILocation(line: 1826, column: 20, scope: !5417)
!5685 = !DILocation(line: 1827, column: 4, scope: !5417)
!5686 = !DILocation(line: 0, scope: !5417)
!5687 = !DILocation(line: 1827, column: 21, scope: !5417)
!5688 = !DILocation(line: 1827, column: 18, scope: !5417)
!5689 = !DILocation(line: 1828, column: 5, scope: !5424)
!5690 = !DILocation(line: 0, scope: !5424)
!5691 = !DILocation(line: 1828, column: 5, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5424, file: !2814, line: 1828, column: 5)
!5693 = distinct !{!5693, !5685, !5694}
!5694 = !DILocation(line: 1829, column: 4, scope: !5417)
!5695 = !DILocation(line: 1831, column: 4, scope: !5427)
!5696 = !DILocation(line: 0, scope: !5427)
!5697 = !DILocation(line: 1831, column: 4, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5427, file: !2814, line: 1831, column: 4)
!5699 = !DILocation(line: 1835, column: 16, scope: !5320)
!5700 = !DILocation(line: 1835, column: 3, scope: !5320)
!5701 = !DILocation(line: 1836, column: 4, scope: !5429)
!5702 = !DILocation(line: 0, scope: !5429)
!5703 = !DILocation(line: 1836, column: 4, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5429, file: !2814, line: 1836, column: 4)
!5705 = !DILocation(line: 1837, column: 4, scope: !5430)
!5706 = distinct !{!5706, !5700, !5707}
!5707 = !DILocation(line: 1838, column: 3, scope: !5320)
!5708 = !DILocation(line: 1844, column: 1, scope: !5293)
!5709 = distinct !DISubprogram(name: "extract_conversion", scope: !2814, file: !2814, line: 642, type: !5710, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5712)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{!105, !5366, !105}
!5712 = !{!5713, !5714}
!5713 = !DILocalVariable(name: "conv", arg: 1, scope: !5709, file: !2814, line: 642, type: !5366)
!5714 = !DILocalVariable(name: "sp", arg: 2, scope: !5709, file: !2814, line: 643, type: !105)
!5715 = !DILocation(line: 0, scope: !5709)
!5716 = !DILocation(line: 645, column: 10, scope: !5709)
!5717 = !DILocation(line: 653, column: 2, scope: !5709)
!5718 = !DILocation(line: 654, column: 6, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5709, file: !2814, line: 654, column: 6)
!5720 = !DILocation(line: 654, column: 10, scope: !5719)
!5721 = !DILocation(line: 654, column: 6, scope: !5709)
!5722 = !DILocation(line: 655, column: 24, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5719, file: !2814, line: 654, column: 18)
!5724 = !DILocation(line: 655, column: 19, scope: !5723)
!5725 = !DILocation(line: 656, column: 3, scope: !5723)
!5726 = !DILocation(line: 659, column: 7, scope: !5709)
!5727 = !DILocation(line: 660, column: 7, scope: !5709)
!5728 = !DILocation(line: 661, column: 7, scope: !5709)
!5729 = !DILocation(line: 662, column: 7, scope: !5709)
!5730 = !DILocation(line: 663, column: 7, scope: !5709)
!5731 = !DILocation(line: 665, column: 2, scope: !5709)
!5732 = !DILocation(line: 666, column: 1, scope: !5709)
!5733 = distinct !DISubprogram(name: "outs", scope: !2814, file: !2814, line: 1319, type: !5734, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5736)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!108, !4485, !104, !105, !105}
!5736 = !{!5737, !5738, !5739, !5740, !5741, !5742}
!5737 = !DILocalVariable(name: "out", arg: 1, scope: !5733, file: !2814, line: 1319, type: !4485)
!5738 = !DILocalVariable(name: "ctx", arg: 2, scope: !5733, file: !2814, line: 1320, type: !104)
!5739 = !DILocalVariable(name: "sp", arg: 3, scope: !5733, file: !2814, line: 1321, type: !105)
!5740 = !DILocalVariable(name: "ep", arg: 4, scope: !5733, file: !2814, line: 1322, type: !105)
!5741 = !DILocalVariable(name: "count", scope: !5733, file: !2814, line: 1324, type: !439)
!5742 = !DILocalVariable(name: "rc", scope: !5743, file: !2814, line: 1327, type: !108)
!5743 = distinct !DILexicalBlock(scope: !5733, file: !2814, line: 1326, column: 45)
!5744 = !DILocation(line: 0, scope: !5733)
!5745 = !DILocation(line: 1326, column: 2, scope: !5733)
!5746 = !DILocation(line: 1324, column: 9, scope: !5733)
!5747 = !DILocation(line: 1326, column: 13, scope: !5733)
!5748 = !DILocation(line: 1326, column: 19, scope: !5733)
!5749 = !DILocation(line: 1327, column: 21, scope: !5743)
!5750 = !DILocation(line: 1326, column: 36, scope: !5733)
!5751 = !DILocation(line: 1326, column: 39, scope: !5733)
!5752 = !DILocation(line: 1327, column: 24, scope: !5743)
!5753 = !DILocation(line: 1327, column: 16, scope: !5743)
!5754 = !DILocation(line: 1327, column: 12, scope: !5743)
!5755 = !DILocation(line: 0, scope: !5743)
!5756 = !DILocation(line: 1329, column: 10, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5743, file: !2814, line: 1329, column: 7)
!5758 = !DILocation(line: 1329, column: 7, scope: !5743)
!5759 = distinct !{!5759, !5745, !5760}
!5760 = !DILocation(line: 1333, column: 2, scope: !5733)
!5761 = !DILocation(line: 1336, column: 1, scope: !5733)
!5762 = distinct !DISubprogram(name: "encode_uint", scope: !2814, file: !2814, line: 788, type: !5763, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5765)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!443, !2836, !5366, !443, !105}
!5765 = !{!5766, !5767, !5768, !5769, !5770, !5771, !5773, !5774}
!5766 = !DILocalVariable(name: "value", arg: 1, scope: !5762, file: !2814, line: 788, type: !2836)
!5767 = !DILocalVariable(name: "conv", arg: 2, scope: !5762, file: !2814, line: 789, type: !5366)
!5768 = !DILocalVariable(name: "bps", arg: 3, scope: !5762, file: !2814, line: 790, type: !443)
!5769 = !DILocalVariable(name: "bpe", arg: 4, scope: !5762, file: !2814, line: 791, type: !105)
!5770 = !DILocalVariable(name: "upcase", scope: !5762, file: !2814, line: 793, type: !422)
!5771 = !DILocalVariable(name: "radix", scope: !5762, file: !2814, line: 794, type: !5772)
!5772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5773 = !DILocalVariable(name: "bp", scope: !5762, file: !2814, line: 795, type: !443)
!5774 = !DILocalVariable(name: "lsv", scope: !5775, file: !2814, line: 798, type: !32)
!5775 = distinct !DILexicalBlock(scope: !5762, file: !2814, line: 797, column: 5)
!5776 = !DILocation(line: 0, scope: !5762)
!5777 = !DILocation(line: 793, column: 35, scope: !5762)
!5778 = !DILocation(line: 793, column: 24, scope: !5762)
!5779 = !DILocation(line: 793, column: 16, scope: !5762)
!5780 = !DILocation(line: 794, column: 29, scope: !5762)
!5781 = !DILocation(line: 795, column: 24, scope: !5762)
!5782 = !DILocation(line: 795, column: 17, scope: !5762)
!5783 = !DILocation(line: 797, column: 2, scope: !5762)
!5784 = !DILocation(line: 802, column: 9, scope: !5775)
!5785 = !DILocation(line: 798, column: 22, scope: !5775)
!5786 = !DILocation(line: 0, scope: !5775)
!5787 = !DILocation(line: 800, column: 16, scope: !5775)
!5788 = !DILocation(line: 800, column: 11, scope: !5775)
!5789 = !DILocation(line: 800, column: 4, scope: !5775)
!5790 = !DILocation(line: 800, column: 9, scope: !5775)
!5791 = !DILocation(line: 803, column: 18, scope: !5762)
!5792 = !DILocation(line: 803, column: 24, scope: !5762)
!5793 = !DILocation(line: 803, column: 2, scope: !5775)
!5794 = distinct !{!5794, !5783, !5795}
!5795 = !DILocation(line: 803, column: 37, scope: !5762)
!5796 = !DILocation(line: 808, column: 12, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5762, file: !2814, line: 808, column: 6)
!5798 = !DILocation(line: 808, column: 6, scope: !5762)
!5799 = !DILocation(line: 809, column: 7, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5797, file: !2814, line: 808, column: 23)
!5801 = !DILocation(line: 813, column: 3, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !2814, line: 811, column: 27)
!5803 = distinct !DILexicalBlock(scope: !5804, file: !2814, line: 811, column: 14)
!5804 = distinct !DILexicalBlock(scope: !5800, file: !2814, line: 809, column: 7)
!5805 = !DILocation(line: 0, scope: !5804)
!5806 = !DILocation(line: 818, column: 2, scope: !5762)
!5807 = distinct !DISubprogram(name: "store_count", scope: !2814, file: !2814, line: 1280, type: !5808, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5812)
!5808 = !DISubroutineType(types: !5809)
!5809 = !{null, !5810, !104, !108}
!5810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5811, size: 32)
!5811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5333)
!5812 = !{!5813, !5814, !5815}
!5813 = !DILocalVariable(name: "conv", arg: 1, scope: !5807, file: !2814, line: 1280, type: !5810)
!5814 = !DILocalVariable(name: "dp", arg: 2, scope: !5807, file: !2814, line: 1281, type: !104)
!5815 = !DILocalVariable(name: "count", arg: 3, scope: !5807, file: !2814, line: 1282, type: !108)
!5816 = !DILocation(line: 0, scope: !5807)
!5817 = !DILocation(line: 1284, column: 38, scope: !5807)
!5818 = !DILocation(line: 1284, column: 2, scope: !5807)
!5819 = !DILocation(line: 1286, column: 4, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5807, file: !2814, line: 1284, column: 50)
!5821 = !DILocation(line: 1286, column: 14, scope: !5820)
!5822 = !DILocation(line: 1287, column: 3, scope: !5820)
!5823 = !DILocation(line: 1289, column: 24, scope: !5820)
!5824 = !DILocation(line: 1289, column: 22, scope: !5820)
!5825 = !DILocation(line: 1290, column: 3, scope: !5820)
!5826 = !DILocation(line: 1292, column: 18, scope: !5820)
!5827 = !DILocation(line: 1292, column: 4, scope: !5820)
!5828 = !DILocation(line: 1292, column: 16, scope: !5820)
!5829 = !DILocation(line: 1293, column: 3, scope: !5820)
!5830 = !DILocation(line: 1295, column: 4, scope: !5820)
!5831 = !DILocation(line: 1295, column: 15, scope: !5820)
!5832 = !DILocation(line: 1296, column: 3, scope: !5820)
!5833 = !DILocation(line: 1298, column: 22, scope: !5820)
!5834 = !DILocation(line: 1298, column: 4, scope: !5820)
!5835 = !DILocation(line: 1298, column: 20, scope: !5820)
!5836 = !DILocation(line: 1299, column: 3, scope: !5820)
!5837 = !DILocation(line: 1301, column: 21, scope: !5820)
!5838 = !DILocation(line: 1301, column: 4, scope: !5820)
!5839 = !DILocation(line: 1301, column: 19, scope: !5820)
!5840 = !DILocation(line: 1302, column: 3, scope: !5820)
!5841 = !DILocation(line: 1304, column: 4, scope: !5820)
!5842 = !DILocation(line: 1304, column: 17, scope: !5820)
!5843 = !DILocation(line: 1305, column: 3, scope: !5820)
!5844 = !DILocation(line: 1307, column: 4, scope: !5820)
!5845 = !DILocation(line: 1307, column: 20, scope: !5820)
!5846 = !DILocation(line: 1308, column: 3, scope: !5820)
!5847 = !DILocation(line: 1316, column: 1, scope: !5807)
!5848 = distinct !DISubprogram(name: "isupper", scope: !5849, file: !5849, line: 16, type: !557, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5850)
!5849 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5850 = !{!5851}
!5851 = !DILocalVariable(name: "a", arg: 1, scope: !5848, file: !5849, line: 16, type: !108)
!5852 = !DILocation(line: 0, scope: !5848)
!5853 = !DILocation(line: 18, column: 29, scope: !5848)
!5854 = !DILocation(line: 18, column: 45, scope: !5848)
!5855 = !DILocation(line: 18, column: 2, scope: !5848)
!5856 = distinct !DISubprogram(name: "conversion_radix", scope: !2814, file: !2814, line: 761, type: !5857, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5859)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!439, !107}
!5859 = !{!5860}
!5860 = !DILocalVariable(name: "specifier", arg: 1, scope: !5856, file: !2814, line: 761, type: !107)
!5861 = !DILocation(line: 0, scope: !5856)
!5862 = !DILocation(line: 763, column: 2, scope: !5856)
!5863 = !DILocation(line: 770, column: 3, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5856, file: !2814, line: 763, column: 21)
!5865 = !DILocation(line: 774, column: 3, scope: !5864)
!5866 = !DILocation(line: 0, scope: !5864)
!5867 = !DILocation(line: 776, column: 1, scope: !5856)
!5868 = distinct !DISubprogram(name: "extract_flags", scope: !2814, file: !2814, line: 339, type: !5710, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5869)
!5869 = !{!5870, !5871, !5872}
!5870 = !DILocalVariable(name: "conv", arg: 1, scope: !5868, file: !2814, line: 339, type: !5366)
!5871 = !DILocalVariable(name: "sp", arg: 2, scope: !5868, file: !2814, line: 340, type: !105)
!5872 = !DILocalVariable(name: "loop", scope: !5868, file: !2814, line: 342, type: !422)
!5873 = !DILocation(line: 0, scope: !5868)
!5874 = !DILocation(line: 344, column: 2, scope: !5868)
!5875 = !DILocation(line: 345, column: 11, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5868, file: !2814, line: 344, column: 5)
!5877 = !DILocation(line: 345, column: 3, scope: !5876)
!5878 = !DILocation(line: 351, column: 4, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5876, file: !2814, line: 345, column: 16)
!5880 = !DILocation(line: 354, column: 4, scope: !5879)
!5881 = !DILocation(line: 357, column: 4, scope: !5879)
!5882 = !DILocation(line: 360, column: 4, scope: !5879)
!5883 = !DILocation(line: 0, scope: !5879)
!5884 = !DILocation(line: 370, column: 12, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5868, file: !2814, line: 370, column: 6)
!5886 = !DILocation(line: 370, column: 22, scope: !5885)
!5887 = !DILocation(line: 371, column: 19, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5885, file: !2814, line: 370, column: 42)
!5889 = !DILocation(line: 372, column: 2, scope: !5888)
!5890 = !DILocation(line: 376, column: 2, scope: !5868)
!5891 = distinct !DISubprogram(name: "extract_width", scope: !2814, file: !2814, line: 388, type: !5710, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5892)
!5892 = !{!5893, !5894, !5895, !5896}
!5893 = !DILocalVariable(name: "conv", arg: 1, scope: !5891, file: !2814, line: 388, type: !5366)
!5894 = !DILocalVariable(name: "sp", arg: 2, scope: !5891, file: !2814, line: 389, type: !105)
!5895 = !DILocalVariable(name: "wp", scope: !5891, file: !2814, line: 398, type: !105)
!5896 = !DILocalVariable(name: "width", scope: !5891, file: !2814, line: 399, type: !439)
!5897 = !DILocation(line: 0, scope: !5891)
!5898 = !DILocation(line: 391, column: 8, scope: !5891)
!5899 = !DILocation(line: 391, column: 22, scope: !5891)
!5900 = !DILocation(line: 393, column: 6, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5891, file: !2814, line: 393, column: 6)
!5902 = !DILocation(line: 393, column: 10, scope: !5901)
!5903 = !DILocation(line: 393, column: 6, scope: !5891)
!5904 = !DILocation(line: 394, column: 20, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5901, file: !2814, line: 393, column: 18)
!5906 = !DILocation(line: 395, column: 10, scope: !5905)
!5907 = !DILocation(line: 395, column: 3, scope: !5905)
!5908 = !DILocation(line: 399, column: 17, scope: !5891)
!5909 = !DILocation(line: 401, column: 6, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5891, file: !2814, line: 401, column: 6)
!5911 = !DILocation(line: 401, column: 9, scope: !5910)
!5912 = !DILocation(line: 401, column: 6, scope: !5891)
!5913 = !DILocation(line: 402, column: 23, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5910, file: !2814, line: 401, column: 16)
!5915 = !DILocation(line: 403, column: 9, scope: !5914)
!5916 = !DILocation(line: 403, column: 21, scope: !5914)
!5917 = !DILocation(line: 405, column: 11, scope: !5914)
!5918 = !DILocation(line: 404, column: 21, scope: !5914)
!5919 = !DILocation(line: 406, column: 2, scope: !5914)
!5920 = !DILocation(line: 409, column: 1, scope: !5891)
!5921 = distinct !DISubprogram(name: "extract_prec", scope: !2814, file: !2814, line: 420, type: !5710, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5922)
!5922 = !{!5923, !5924, !5925}
!5923 = !DILocalVariable(name: "conv", arg: 1, scope: !5921, file: !2814, line: 420, type: !5366)
!5924 = !DILocalVariable(name: "sp", arg: 2, scope: !5921, file: !2814, line: 421, type: !105)
!5925 = !DILocalVariable(name: "prec", scope: !5921, file: !2814, line: 435, type: !439)
!5926 = !DILocation(line: 0, scope: !5921)
!5927 = !DILocation(line: 423, column: 24, scope: !5921)
!5928 = !DILocation(line: 423, column: 28, scope: !5921)
!5929 = !DILocation(line: 423, column: 8, scope: !5921)
!5930 = !DILocation(line: 423, column: 21, scope: !5921)
!5931 = !DILocation(line: 425, column: 6, scope: !5921)
!5932 = !DILocation(line: 428, column: 2, scope: !5921)
!5933 = !DILocation(line: 430, column: 6, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5921, file: !2814, line: 430, column: 6)
!5935 = !DILocation(line: 430, column: 10, scope: !5934)
!5936 = !DILocation(line: 430, column: 6, scope: !5921)
!5937 = !DILocation(line: 431, column: 19, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5934, file: !2814, line: 430, column: 18)
!5939 = !DILocation(line: 432, column: 10, scope: !5938)
!5940 = !DILocation(line: 432, column: 3, scope: !5938)
!5941 = !DILocation(line: 435, column: 16, scope: !5921)
!5942 = !DILocation(line: 437, column: 8, scope: !5921)
!5943 = !DILocation(line: 437, column: 19, scope: !5921)
!5944 = !DILocation(line: 439, column: 10, scope: !5921)
!5945 = !DILocation(line: 438, column: 20, scope: !5921)
!5946 = !DILocation(line: 441, column: 9, scope: !5921)
!5947 = !DILocation(line: 442, column: 1, scope: !5921)
!5948 = distinct !DISubprogram(name: "extract_length", scope: !2814, file: !2814, line: 453, type: !5710, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !5949)
!5949 = !{!5950, !5951}
!5950 = !DILocalVariable(name: "conv", arg: 1, scope: !5948, file: !2814, line: 453, type: !5366)
!5951 = !DILocalVariable(name: "sp", arg: 2, scope: !5948, file: !2814, line: 454, type: !105)
!5952 = !DILocation(line: 0, scope: !5948)
!5953 = !DILocation(line: 456, column: 10, scope: !5948)
!5954 = !DILocation(line: 456, column: 2, scope: !5948)
!5955 = !DILocation(line: 458, column: 8, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5957, file: !2814, line: 458, column: 7)
!5957 = distinct !DILexicalBlock(scope: !5948, file: !2814, line: 456, column: 15)
!5958 = !DILocation(line: 458, column: 7, scope: !5956)
!5959 = !DILocation(line: 458, column: 13, scope: !5956)
!5960 = !DILocation(line: 0, scope: !5956)
!5961 = !DILocation(line: 458, column: 7, scope: !5957)
!5962 = !DILocation(line: 459, column: 21, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5956, file: !2814, line: 458, column: 21)
!5964 = !DILocation(line: 460, column: 4, scope: !5963)
!5965 = !DILocation(line: 461, column: 3, scope: !5963)
!5966 = !DILocation(line: 462, column: 21, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5956, file: !2814, line: 461, column: 10)
!5968 = !DILocation(line: 466, column: 8, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5957, file: !2814, line: 466, column: 7)
!5970 = !DILocation(line: 466, column: 7, scope: !5969)
!5971 = !DILocation(line: 466, column: 13, scope: !5969)
!5972 = !DILocation(line: 0, scope: !5969)
!5973 = !DILocation(line: 466, column: 7, scope: !5957)
!5974 = !DILocation(line: 467, column: 21, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5969, file: !2814, line: 466, column: 21)
!5976 = !DILocation(line: 468, column: 4, scope: !5975)
!5977 = !DILocation(line: 469, column: 3, scope: !5975)
!5978 = !DILocation(line: 470, column: 21, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5969, file: !2814, line: 469, column: 10)
!5980 = !DILocation(line: 474, column: 9, scope: !5957)
!5981 = !DILocation(line: 474, column: 20, scope: !5957)
!5982 = !DILocation(line: 475, column: 3, scope: !5957)
!5983 = !DILocation(line: 476, column: 3, scope: !5957)
!5984 = !DILocation(line: 478, column: 9, scope: !5957)
!5985 = !DILocation(line: 478, column: 20, scope: !5957)
!5986 = !DILocation(line: 479, column: 3, scope: !5957)
!5987 = !DILocation(line: 480, column: 3, scope: !5957)
!5988 = !DILocation(line: 482, column: 9, scope: !5957)
!5989 = !DILocation(line: 482, column: 20, scope: !5957)
!5990 = !DILocation(line: 483, column: 3, scope: !5957)
!5991 = !DILocation(line: 484, column: 3, scope: !5957)
!5992 = !DILocation(line: 486, column: 9, scope: !5957)
!5993 = !DILocation(line: 486, column: 20, scope: !5957)
!5994 = !DILocation(line: 487, column: 3, scope: !5957)
!5995 = !DILocation(line: 492, column: 21, scope: !5957)
!5996 = !DILocation(line: 493, column: 3, scope: !5957)
!5997 = !DILocation(line: 495, column: 9, scope: !5957)
!5998 = !DILocation(line: 495, column: 20, scope: !5957)
!5999 = !DILocation(line: 496, column: 3, scope: !5957)
!6000 = !DILocation(line: 498, column: 2, scope: !5948)
!6001 = distinct !DISubprogram(name: "extract_specifier", scope: !2814, file: !2814, line: 513, type: !5710, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !6002)
!6002 = !{!6003, !6004, !6005, !6006}
!6003 = !DILocalVariable(name: "conv", arg: 1, scope: !6001, file: !2814, line: 513, type: !5366)
!6004 = !DILocalVariable(name: "sp", arg: 2, scope: !6001, file: !2814, line: 514, type: !105)
!6005 = !DILocalVariable(name: "unsupported", scope: !6001, file: !2814, line: 516, type: !422)
!6006 = !DILabel(scope: !6007, name: "int_conv", file: !2814, line: 526)
!6007 = distinct !DILexicalBlock(scope: !6001, file: !2814, line: 520, column: 27)
!6008 = !DILocation(line: 0, scope: !6001)
!6009 = !DILocation(line: 518, column: 20, scope: !6001)
!6010 = !DILocation(line: 518, column: 8, scope: !6001)
!6011 = !DILocation(line: 518, column: 18, scope: !6001)
!6012 = !DILocation(line: 520, column: 2, scope: !6001)
!6013 = !DILocation(line: 525, column: 3, scope: !6007)
!6014 = !DILocation(line: 0, scope: !6007)
!6015 = !DILocation(line: 526, column: 1, scope: !6007)
!6016 = !DILocation(line: 528, column: 24, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6007, file: !2814, line: 528, column: 7)
!6018 = !DILocation(line: 528, column: 7, scope: !6007)
!6019 = !DILocation(line: 535, column: 23, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6007, file: !2814, line: 535, column: 7)
!6021 = !DILocation(line: 535, column: 7, scope: !6007)
!6022 = !DILocation(line: 536, column: 36, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6020, file: !2814, line: 535, column: 31)
!6024 = !DILocation(line: 537, column: 3, scope: !6023)
!6025 = !DILocation(line: 570, column: 9, scope: !6007)
!6026 = !DILocation(line: 570, column: 23, scope: !6007)
!6027 = !DILocation(line: 575, column: 4, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6029, file: !2814, line: 573, column: 48)
!6029 = distinct !DILexicalBlock(scope: !6007, file: !2814, line: 573, column: 7)
!6030 = !DILocation(line: 603, column: 9, scope: !6007)
!6031 = !DILocation(line: 603, column: 23, scope: !6007)
!6032 = !DILocation(line: 605, column: 24, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6007, file: !2814, line: 605, column: 7)
!6034 = !DILocation(line: 605, column: 7, scope: !6007)
!6035 = !DILocation(line: 612, column: 9, scope: !6007)
!6036 = !DILocation(line: 612, column: 23, scope: !6007)
!6037 = !DILocation(line: 619, column: 24, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6007, file: !2814, line: 619, column: 7)
!6039 = !DILocation(line: 619, column: 7, scope: !6007)
!6040 = !DILocation(line: 625, column: 9, scope: !6007)
!6041 = !DILocation(line: 625, column: 17, scope: !6007)
!6042 = !DILocation(line: 626, column: 3, scope: !6007)
!6043 = !DILocation(line: 629, column: 20, scope: !6001)
!6044 = !DILocation(line: 629, column: 8, scope: !6001)
!6045 = !DILocation(line: 518, column: 23, scope: !6001)
!6046 = !DILocation(line: 631, column: 2, scope: !6001)
!6047 = distinct !DISubprogram(name: "extract_decimal", scope: !2814, file: !2814, line: 318, type: !6048, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !6050)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!439, !537}
!6050 = !{!6051, !6052, !6053}
!6051 = !DILocalVariable(name: "str", arg: 1, scope: !6047, file: !2814, line: 318, type: !537)
!6052 = !DILocalVariable(name: "sp", scope: !6047, file: !2814, line: 320, type: !105)
!6053 = !DILocalVariable(name: "val", scope: !6047, file: !2814, line: 321, type: !439)
!6054 = !DILocation(line: 0, scope: !6047)
!6055 = !DILocation(line: 320, column: 19, scope: !6047)
!6056 = !DILocation(line: 323, column: 37, scope: !6047)
!6057 = !DILocation(line: 323, column: 17, scope: !6047)
!6058 = !DILocation(line: 323, column: 9, scope: !6047)
!6059 = !DILocation(line: 323, column: 2, scope: !6047)
!6060 = !DILocation(line: 324, column: 13, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6047, file: !2814, line: 323, column: 43)
!6062 = !DILocation(line: 324, column: 24, scope: !6061)
!6063 = !DILocation(line: 324, column: 19, scope: !6061)
!6064 = !DILocation(line: 324, column: 27, scope: !6061)
!6065 = distinct !{!6065, !6059, !6066}
!6066 = !DILocation(line: 325, column: 2, scope: !6047)
!6067 = !DILocation(line: 326, column: 7, scope: !6047)
!6068 = !DILocation(line: 327, column: 2, scope: !6047)
!6069 = distinct !DISubprogram(name: "isdigit", scope: !5849, file: !5849, line: 43, type: !557, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !6070)
!6070 = !{!6071}
!6071 = !DILocalVariable(name: "a", arg: 1, scope: !6069, file: !5849, line: 43, type: !108)
!6072 = !DILocation(line: 0, scope: !6069)
!6073 = !DILocation(line: 45, column: 29, scope: !6069)
!6074 = !DILocation(line: 45, column: 45, scope: !6069)
!6075 = !DILocation(line: 45, column: 2, scope: !6069)
!6076 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6077, file: !6077, line: 9, type: !3389, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2844, retainedNodes: !437)
!6077 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!6078 = !DILocation(line: 11, column: 1, scope: !6076)
!6079 = !{i64 2147564396, i64 2147564439, i64 2147564479}
!6080 = !DILocation(line: 12, column: 1, scope: !6076)
!6081 = !{i64 2147568623, i64 2147568666, i64 2147568706}
!6082 = !DILocation(line: 13, column: 1, scope: !6076)
!6083 = !{i64 2147568832, i64 2147568875, i64 2147568915}
!6084 = !DILocation(line: 14, column: 1, scope: !6076)
!6085 = !{i64 2147569001, i64 2147569044, i64 2147569084}
!6086 = !DILocation(line: 15, column: 1, scope: !6076)
!6087 = !{i64 2147569164, i64 2147569207, i64 2147569247}
!6088 = !DILocation(line: 16, column: 1, scope: !6076)
!6089 = !{i64 2147569348, i64 2147569391, i64 2147569431}
!6090 = !DILocation(line: 17, column: 1, scope: !6076)
!6091 = !{i64 2147569527, i64 2147569570, i64 2147569610}
!6092 = !DILocation(line: 18, column: 1, scope: !6076)
!6093 = !{i64 2147569769, i64 2147569812, i64 2147569852}
!6094 = !DILocation(line: 19, column: 1, scope: !6076)
!6095 = !{i64 2147570004, i64 2147570047, i64 2147570087}
!6096 = !DILocation(line: 20, column: 1, scope: !6076)
!6097 = !{i64 2147570190, i64 2147570233, i64 2147570273}
!6098 = !DILocation(line: 21, column: 1, scope: !6076)
!6099 = !{i64 2147570406, i64 2147570449, i64 2147570489}
!6100 = !DILocation(line: 22, column: 1, scope: !6076)
!6101 = !{i64 2147570609, i64 2147570652, i64 2147570692}
!6102 = !DILocation(line: 23, column: 1, scope: !6076)
!6103 = !{i64 2147570812, i64 2147570855, i64 2147570895}
!6104 = !DILocation(line: 24, column: 1, scope: !6076)
!6105 = !{i64 2147570987, i64 2147571030, i64 2147571070}
!6106 = !DILocation(line: 25, column: 1, scope: !6076)
!6107 = !{i64 2147571195, i64 2147571238, i64 2147571278}
!6108 = !DILocation(line: 26, column: 1, scope: !6076)
!6109 = !{i64 2147571399, i64 2147571442, i64 2147571482}
!6110 = !DILocation(line: 27, column: 1, scope: !6076)
!6111 = !{i64 2147571592, i64 2147571635, i64 2147571675}
!6112 = !DILocation(line: 28, column: 1, scope: !6076)
!6113 = !{i64 2147571794, i64 2147571837, i64 2147571877}
!6114 = !DILocation(line: 29, column: 1, scope: !6076)
!6115 = !{i64 2147571993, i64 2147572036, i64 2147572076}
!6116 = !DILocation(line: 30, column: 1, scope: !6076)
!6117 = !{i64 2147572220, i64 2147572263, i64 2147572303}
!6118 = !DILocation(line: 31, column: 1, scope: !6076)
!6119 = !{i64 2147572422, i64 2147572465, i64 2147572505}
!6120 = !DILocation(line: 32, column: 1, scope: !6076)
!6121 = !{i64 2147572637, i64 2147572680, i64 2147572720}
!6122 = !DILocation(line: 33, column: 1, scope: !6076)
!6123 = !{i64 2147572809, i64 2147572852, i64 2147572892}
!6124 = !DILocation(line: 34, column: 1, scope: !6076)
!6125 = !{i64 2147573011, i64 2147573054, i64 2147573094}
!6126 = !DILocation(line: 35, column: 1, scope: !6076)
!6127 = !{i64 2147573237, i64 2147573280, i64 2147573320}
!6128 = !DILocation(line: 36, column: 1, scope: !6076)
!6129 = !{i64 2147573436, i64 2147573479, i64 2147573519}
!6130 = !DILocation(line: 37, column: 1, scope: !6076)
!6131 = !{i64 2147573611, i64 2147573654, i64 2147573694}
!6132 = !DILocation(line: 38, column: 1, scope: !6076)
!6133 = !{i64 2147573864, i64 2147573907, i64 2147573947}
!6134 = !DILocation(line: 39, column: 1, scope: !6076)
!6135 = !{i64 2147574105, i64 2147574148, i64 2147574188}
!6136 = !DILocation(line: 40, column: 1, scope: !6076)
!6137 = !{i64 2147574340, i64 2147574383, i64 2147574423}
!6138 = !DILocation(line: 41, column: 1, scope: !6076)
!6139 = !{i64 2147574572, i64 2147574615, i64 2147574655}
!6140 = !DILocation(line: 42, column: 1, scope: !6076)
!6141 = !{i64 2147574798, i64 2147574841, i64 2147574881}
!6142 = !DILocation(line: 43, column: 1, scope: !6076)
!6143 = !{i64 2147575024, i64 2147575067, i64 2147575107}
!6144 = !DILocation(line: 44, column: 1, scope: !6076)
!6145 = !{i64 2147575250, i64 2147575293, i64 2147575333}
!6146 = !DILocation(line: 45, column: 1, scope: !6076)
!6147 = !{i64 2147575485, i64 2147575528, i64 2147575568}
!6148 = !DILocation(line: 46, column: 1, scope: !6076)
!6149 = !{i64 2147575723, i64 2147575766, i64 2147575806}
!6150 = !DILocation(line: 47, column: 1, scope: !6076)
!6151 = !{i64 2147575997, i64 2147576040, i64 2147576080}
!6152 = !DILocation(line: 48, column: 1, scope: !6076)
!6153 = !{i64 2147576235, i64 2147576278, i64 2147576318}
!6154 = !DILocation(line: 49, column: 1, scope: !6076)
!6155 = !{i64 2147576479, i64 2147576522, i64 2147576562}
!6156 = !DILocation(line: 50, column: 1, scope: !6076)
!6157 = !{i64 2147576729, i64 2147576772, i64 2147576812}
!6158 = !DILocation(line: 51, column: 1, scope: !6076)
!6159 = !{i64 2147576976, i64 2147577019, i64 2147577059}
!6160 = !DILocation(line: 52, column: 1, scope: !6076)
!6161 = !{i64 2147577211, i64 2147577254, i64 2147577294}
!6162 = !DILocation(line: 53, column: 1, scope: !6076)
!6163 = !{i64 2147581507, i64 2147581550, i64 2147581590}
!6164 = !DILocation(line: 54, column: 1, scope: !6076)
!6165 = !{i64 2147581742, i64 2147581785, i64 2147581825}
!6166 = !DILocation(line: 55, column: 1, scope: !6076)
!6167 = !{i64 2147581980, i64 2147582023, i64 2147582063}
!6168 = !DILocation(line: 56, column: 1, scope: !6076)
!6169 = !{i64 2147582221, i64 2147582264, i64 2147582304}
!6170 = !DILocation(line: 57, column: 1, scope: !6076)
!6171 = !{i64 2147582501, i64 2147582544, i64 2147582584}
!6172 = !DILocation(line: 58, column: 1, scope: !6076)
!6173 = !{i64 2147582760, i64 2147582803, i64 2147582843}
!6174 = !DILocation(line: 59, column: 1, scope: !6076)
!6175 = !{i64 2147582986, i64 2147583029, i64 2147583069}
!6176 = !DILocation(line: 60, column: 1, scope: !6076)
!6177 = !{i64 2147583224, i64 2147583267, i64 2147583307}
!6178 = !DILocation(line: 61, column: 1, scope: !6076)
!6179 = !{i64 2147583453, i64 2147583496, i64 2147583536}
!6180 = !DILocation(line: 62, column: 1, scope: !6076)
!6181 = !{i64 2147583682, i64 2147583725, i64 2147583765}
!6182 = !DILocation(line: 63, column: 1, scope: !6076)
!6183 = !{i64 2147583890, i64 2147583933, i64 2147583973}
!6184 = !DILocation(line: 64, column: 1, scope: !6076)
!6185 = !{i64 2147584101, i64 2147584144, i64 2147584184}
!6186 = !DILocation(line: 65, column: 1, scope: !6076)
!6187 = !{i64 2147584336, i64 2147584379, i64 2147584419}
!6188 = !DILocation(line: 66, column: 1, scope: !6076)
!6189 = !{i64 2147584565, i64 2147584608, i64 2147584648}
!6190 = !DILocation(line: 67, column: 1, scope: !6076)
!6191 = !{i64 2147584782, i64 2147584825, i64 2147584865}
!6192 = !DILocation(line: 68, column: 1, scope: !6076)
!6193 = !{i64 2147585011, i64 2147585054, i64 2147585094}
!6194 = !DILocation(line: 69, column: 1, scope: !6076)
!6195 = !{i64 2147585249, i64 2147585292, i64 2147585332}
!6196 = !DILocation(line: 70, column: 1, scope: !6076)
!6197 = !{i64 2147585481, i64 2147585524, i64 2147585564}
!6198 = !DILocation(line: 71, column: 1, scope: !6076)
!6199 = !{i64 2147585707, i64 2147585750, i64 2147585790}
!6200 = !DILocation(line: 72, column: 1, scope: !6076)
!6201 = !{i64 2147585924, i64 2147585967, i64 2147586007}
!6202 = !DILocation(line: 73, column: 1, scope: !6076)
!6203 = !{i64 2147586156, i64 2147586199, i64 2147586239}
!6204 = !DILocation(line: 74, column: 1, scope: !6076)
!6205 = !{i64 2147586382, i64 2147586425, i64 2147586465}
!6206 = !DILocation(line: 75, column: 1, scope: !6076)
!6207 = !{i64 2147586596, i64 2147586639, i64 2147586679}
!6208 = !DILocation(line: 76, column: 1, scope: !6076)
!6209 = !{i64 2147586816, i64 2147586859, i64 2147586899}
!6210 = !DILocation(line: 77, column: 1, scope: !6076)
!6211 = !{i64 2147587048, i64 2147587091, i64 2147587131}
!6212 = !DILocation(line: 78, column: 1, scope: !6076)
!6213 = !{i64 2147587256, i64 2147587299, i64 2147587339}
!6214 = !DILocation(line: 79, column: 1, scope: !6076)
!6215 = !{i64 2147587461, i64 2147587504, i64 2147587544}
!6216 = !DILocation(line: 80, column: 1, scope: !6076)
!6217 = !{i64 2147587678, i64 2147587721, i64 2147587761}
!6218 = !DILocation(line: 81, column: 1, scope: !6076)
!6219 = !{i64 2147587892, i64 2147587935, i64 2147587975}
!6220 = !DILocation(line: 82, column: 1, scope: !6076)
!6221 = !{i64 2147588118, i64 2147588161, i64 2147588201}
!6222 = !DILocation(line: 83, column: 1, scope: !6076)
!6223 = !{i64 2147588338, i64 2147588381, i64 2147588421}
!6224 = !DILocation(line: 84, column: 1, scope: !6076)
!6225 = !{i64 2147588543, i64 2147588586, i64 2147588626}
!6226 = !DILocation(line: 85, column: 1, scope: !6076)
!6227 = !{i64 2147588775, i64 2147588818, i64 2147588858}
!6228 = !DILocation(line: 86, column: 1, scope: !6076)
!6229 = !{i64 2147589010, i64 2147589053, i64 2147589093}
!6230 = !DILocation(line: 87, column: 1, scope: !6076)
!6231 = !{i64 2147589260, i64 2147589303, i64 2147589343}
!6232 = !DILocation(line: 88, column: 1, scope: !6076)
!6233 = !{i64 2147589510, i64 2147589553, i64 2147589593}
!6234 = !DILocation(line: 89, column: 1, scope: !6076)
!6235 = !{i64 2147593809, i64 2147593852, i64 2147593892}
!6236 = !DILocation(line: 90, column: 1, scope: !6076)
!6237 = !{i64 2147594020, i64 2147594063, i64 2147594103}
!6238 = !DILocation(line: 91, column: 1, scope: !6076)
!6239 = !{i64 2147594237, i64 2147594280, i64 2147594320}
!6240 = !DILocation(line: 92, column: 1, scope: !6076)
!6241 = !{i64 2147594433, i64 2147594476, i64 2147594516}
!6242 = !DILocation(line: 93, column: 1, scope: !6076)
!6243 = !{i64 2147594635, i64 2147594678, i64 2147594718}
!6244 = !DILocation(line: 94, column: 1, scope: !6076)
!6245 = !{i64 2147594828, i64 2147594871, i64 2147594911}
!6246 = !DILocation(line: 95, column: 1, scope: !6076)
!6247 = !{i64 2147595036, i64 2147595079, i64 2147595119}
!6248 = !DILocation(line: 96, column: 1, scope: !6076)
!6249 = !{i64 2147595232, i64 2147595275, i64 2147595315}
!6250 = !DILocation(line: 97, column: 1, scope: !6076)
!6251 = !{i64 2147595437, i64 2147595480, i64 2147595520}
!6252 = !DILocation(line: 98, column: 1, scope: !6076)
!6253 = !{i64 2147595648, i64 2147595691, i64 2147595731}
!6254 = !DILocation(line: 99, column: 1, scope: !6076)
!6255 = !{i64 2147595847, i64 2147595890, i64 2147595930}
!6256 = !DILocation(line: 100, column: 1, scope: !6076)
!6257 = !{i64 2147596022, i64 2147596065, i64 2147596105}
!6258 = !DILocation(line: 101, column: 1, scope: !6076)
!6259 = !{i64 2147596206, i64 2147596249, i64 2147596289}
!6260 = !DILocation(line: 102, column: 1, scope: !6076)
!6261 = !{i64 2147596408, i64 2147596451, i64 2147596491}
!6262 = !DILocation(line: 103, column: 1, scope: !6076)
!6263 = !{i64 2147596607, i64 2147596650, i64 2147596690}
!6264 = !DILocation(line: 104, column: 1, scope: !6076)
!6265 = !{i64 2147596812, i64 2147596855, i64 2147596895}
!6266 = !DILocation(line: 105, column: 1, scope: !6076)
!6267 = !{i64 2147597005, i64 2147597048, i64 2147597088}
!6268 = !DILocation(line: 106, column: 1, scope: !6076)
!6269 = !{i64 2147597171, i64 2147597214, i64 2147597254}
!6270 = !DILocation(line: 107, column: 1, scope: !6076)
!6271 = !{i64 2147597355, i64 2147597398, i64 2147597438}
!6272 = !DILocation(line: 108, column: 1, scope: !6076)
!6273 = !{i64 2147597545, i64 2147597588, i64 2147597628}
!6274 = !DILocation(line: 109, column: 1, scope: !6076)
!6275 = !{i64 2147597729, i64 2147597772, i64 2147597812}
!6276 = !DILocation(line: 110, column: 1, scope: !6076)
!6277 = !{i64 2147597943, i64 2147597986, i64 2147598026}
!6278 = !DILocation(line: 111, column: 1, scope: !6076)
!6279 = !{i64 2147598154, i64 2147598197, i64 2147598237}
!6280 = !DILocation(line: 112, column: 1, scope: !6076)
!6281 = !{i64 2147598377, i64 2147598420, i64 2147598460}
!6282 = !DILocation(line: 113, column: 1, scope: !6076)
!6283 = !{i64 2147598561, i64 2147598604, i64 2147598644}
!6284 = !DILocation(line: 114, column: 1, scope: !6076)
!6285 = !{i64 2147598775, i64 2147598818, i64 2147598858}
!6286 = !DILocation(line: 115, column: 1, scope: !6076)
!6287 = !{i64 2147598941, i64 2147598984, i64 2147599024}
!6288 = !DILocation(line: 116, column: 1, scope: !6076)
!6289 = !{i64 2147599122, i64 2147599165, i64 2147599205}
!6290 = !DILocation(line: 117, column: 1, scope: !6076)
!6291 = !{i64 2147599315, i64 2147599358, i64 2147599398}
!6292 = !DILocation(line: 118, column: 1, scope: !6076)
!6293 = !{i64 2147599541, i64 2147599584, i64 2147599624}
!6294 = !DILocation(line: 119, column: 1, scope: !6076)
!6295 = !{i64 2147599755, i64 2147599798, i64 2147599838}
!6296 = !DILocation(line: 120, column: 1, scope: !6076)
!6297 = !{i64 2147599981, i64 2147600024, i64 2147600064}
!6298 = !DILocation(line: 121, column: 1, scope: !6076)
!6299 = !{i64 2147600198, i64 2147600241, i64 2147600281}
!6300 = !DILocation(line: 122, column: 1, scope: !6076)
!6301 = !{i64 2147600475, i64 2147600518, i64 2147600558}
!6302 = !DILocation(line: 123, column: 1, scope: !6076)
!6303 = !{i64 2147600701, i64 2147600744, i64 2147600784}
!6304 = !DILocation(line: 124, column: 1, scope: !6076)
!6305 = !{i64 2147600909, i64 2147600952, i64 2147600992}
!6306 = !DILocation(line: 125, column: 1, scope: !6076)
!6307 = !{i64 2147601105, i64 2147601148, i64 2147601188}
!6308 = !DILocation(line: 126, column: 1, scope: !6076)
!6309 = !{i64 2147601370, i64 2147601413, i64 2147601453}
!6310 = !DILocation(line: 127, column: 1, scope: !6076)
!6311 = !{i64 2147601584, i64 2147601627, i64 2147601667}
!6312 = !DILocation(line: 128, column: 1, scope: !6076)
!6313 = !{i64 2147601759, i64 2147601802, i64 2147601842}
!6314 = !DILocation(line: 129, column: 1, scope: !6076)
!6315 = !{i64 2147602013, i64 2147602056, i64 2147602096}
!6316 = !DILocation(line: 130, column: 1, scope: !6076)
!6317 = !{i64 2147602212, i64 2147602255, i64 2147602295}
!6318 = !DILocation(line: 131, column: 1, scope: !6076)
!6319 = !{i64 2147602454, i64 2147602497, i64 2147602537}
!6320 = !DILocation(line: 132, column: 1, scope: !6076)
!6321 = !{i64 2147602617, i64 2147602660, i64 2147602700}
!6322 = !DILocation(line: 133, column: 1, scope: !6076)
!6323 = !{i64 2147602804, i64 2147602847, i64 2147602887}
!6324 = !DILocation(line: 134, column: 1, scope: !6076)
!6325 = !{i64 2147607073, i64 2147607116, i64 2147607156}
!6326 = !DILocation(line: 135, column: 1, scope: !6076)
!6327 = !{i64 2147607269, i64 2147607312, i64 2147607352}
!6328 = !DILocation(line: 136, column: 1, scope: !6076)
!6329 = !{i64 2147607462, i64 2147607505, i64 2147607545}
!6330 = !DILocation(line: 137, column: 1, scope: !6076)
!6331 = !{i64 2147607645, i64 2147607688, i64 2147607728}
!6332 = !DILocation(line: 138, column: 1, scope: !6076)
!6333 = !{i64 2147607859, i64 2147607902, i64 2147607942}
!6334 = !DILocation(line: 139, column: 1, scope: !6076)
!6335 = !{i64 2147608070, i64 2147608113, i64 2147608153}
!6336 = !DILocation(line: 140, column: 1, scope: !6076)
!6337 = !{i64 2147608290, i64 2147608333, i64 2147608373}
!6338 = !DILocation(line: 141, column: 1, scope: !6076)
!6339 = !{i64 2147608497, i64 2147608540, i64 2147608580}
!6340 = !DILocation(line: 142, column: 1, scope: !6076)
!6341 = !{i64 2147608770, i64 2147608813, i64 2147608853}
!6342 = !DILocation(line: 143, column: 1, scope: !6076)
!6343 = !{i64 2147609018, i64 2147609061, i64 2147609101}
!6344 = !DILocation(line: 144, column: 1, scope: !6076)
!6345 = !{i64 2147609217, i64 2147609260, i64 2147609300}
!6346 = !DILocation(line: 145, column: 1, scope: !6076)
!6347 = !{i64 2147609452, i64 2147609495, i64 2147609535}
!6348 = !DILocation(line: 146, column: 1, scope: !6076)
!6349 = !{i64 2147609702, i64 2147609745, i64 2147609785}
!6350 = !DILocation(line: 147, column: 1, scope: !6076)
!6351 = !{i64 2147609904, i64 2147609947, i64 2147609987}
!6352 = !DILocation(line: 148, column: 1, scope: !6076)
!6353 = !{i64 2147610127, i64 2147610170, i64 2147610210}
!6354 = !DILocation(line: 149, column: 1, scope: !6076)
!6355 = !{i64 2147610341, i64 2147610384, i64 2147610424}
!6356 = !DILocation(line: 150, column: 1, scope: !6076)
!6357 = !{i64 2147610585, i64 2147610628, i64 2147610668}
!6358 = !DILocation(line: 151, column: 1, scope: !6076)
!6359 = !{i64 2147610814, i64 2147610857, i64 2147610897}
!6360 = !DILocation(line: 152, column: 1, scope: !6076)
!6361 = !{i64 2147611043, i64 2147611086, i64 2147611126}
!6362 = !DILocation(line: 153, column: 1, scope: !6076)
!6363 = !{i64 2147611251, i64 2147611294, i64 2147611334}
!6364 = !DILocation(line: 154, column: 1, scope: !6076)
!6365 = !{i64 2147611489, i64 2147611532, i64 2147611572}
!6366 = !DILocation(line: 155, column: 1, scope: !6076)
!6367 = !{i64 2147611715, i64 2147611758, i64 2147611798}
!6368 = !DILocation(line: 156, column: 1, scope: !6076)
!6369 = !{i64 2147611974, i64 2147612017, i64 2147612057}
!6370 = !DILocation(line: 157, column: 1, scope: !6076)
!6371 = !{i64 2147612194, i64 2147612237, i64 2147612277}
!6372 = !DILocation(line: 158, column: 1, scope: !6076)
!6373 = !{i64 2147612426, i64 2147612469, i64 2147612509}
!6374 = !DILocation(line: 159, column: 1, scope: !6076)
!6375 = !{i64 2147612667, i64 2147612710, i64 2147612750}
!6376 = !DILocation(line: 160, column: 1, scope: !6076)
!6377 = !{i64 2147612908, i64 2147612951, i64 2147612991}
!6378 = !DILocation(line: 161, column: 1, scope: !6076)
!6379 = !{i64 2147613131, i64 2147613174, i64 2147613214}
!6380 = !DILocation(line: 162, column: 1, scope: !6076)
!6381 = !{i64 2147613348, i64 2147613391, i64 2147613431}
!6382 = !DILocation(line: 163, column: 1, scope: !6076)
!6383 = !{i64 2147613589, i64 2147613632, i64 2147613672}
!6384 = !DILocation(line: 164, column: 1, scope: !6076)
!6385 = !{i64 2147613776, i64 2147613819, i64 2147613859}
!6386 = !DILocation(line: 165, column: 1, scope: !6076)
!6387 = !{i64 2147613963, i64 2147614006, i64 2147614046}
!6388 = !DILocation(line: 166, column: 1, scope: !6076)
!6389 = !{i64 2147614126, i64 2147614169, i64 2147614209}
!6390 = !DILocation(line: 167, column: 1, scope: !6076)
!6391 = !{i64 2147614331, i64 2147614374, i64 2147614414}
!6392 = !DILocation(line: 168, column: 1, scope: !6076)
!6393 = !{i64 2147614524, i64 2147614567, i64 2147614607}
!6394 = !DILocation(line: 169, column: 1, scope: !6076)
!6395 = !{i64 2147614783, i64 2147614826, i64 2147614866}
!6396 = !DILocation(line: 170, column: 1, scope: !6076)
!6397 = !{i64 2147615006, i64 2147615049, i64 2147615089}
!6398 = !DILocation(line: 171, column: 1, scope: !6076)
!6399 = !{i64 2147615235, i64 2147615278, i64 2147615318}
!6400 = !DILocation(line: 172, column: 1, scope: !6076)
!6401 = !{i64 2147615449, i64 2147615492, i64 2147615532}
!6402 = !DILocation(line: 173, column: 1, scope: !6076)
!6403 = !{i64 2147619712, i64 2147619755, i64 2147619795}
!6404 = !DILocation(line: 174, column: 1, scope: !6076)
!6405 = !{i64 2147619908, i64 2147619951, i64 2147619991}
!6406 = !DILocation(line: 175, column: 1, scope: !6076)
!6407 = !{i64 2147620120, i64 2147620163, i64 2147620203}
!6408 = !DILocation(line: 176, column: 1, scope: !6076)
!6409 = !{i64 2147620341, i64 2147620384, i64 2147620424}
!6410 = !DILocation(line: 177, column: 1, scope: !6076)
!6411 = !{i64 2147620555, i64 2147620598, i64 2147620638}
!6412 = !DILocation(line: 178, column: 1, scope: !6076)
!6413 = !{i64 2147620745, i64 2147620788, i64 2147620828}
!6414 = !DILocation(line: 179, column: 1, scope: !6076)
!6415 = !{i64 2147620944, i64 2147620987, i64 2147621027}
!6416 = !DILocation(line: 180, column: 1, scope: !6076)
!6417 = !{i64 2147621149, i64 2147621192, i64 2147621232}
!6418 = !DILocation(line: 181, column: 1, scope: !6076)
!6419 = !{i64 2147621369, i64 2147621412, i64 2147621452}
!6420 = !DILocation(line: 182, column: 1, scope: !6076)
!6421 = !{i64 2147621570, i64 2147621613, i64 2147621653}
!6422 = !DILocation(line: 183, column: 1, scope: !6076)
!6423 = !{i64 2147621769, i64 2147621812, i64 2147621852}
!6424 = !DILocation(line: 184, column: 1, scope: !6076)
!6425 = !{i64 2147621974, i64 2147622017, i64 2147622057}
!6426 = !DILocation(line: 185, column: 1, scope: !6076)
!6427 = !{i64 2147622143, i64 2147622186, i64 2147622226}
!6428 = !DILocation(line: 186, column: 1, scope: !6076)
!6429 = !{i64 2147622327, i64 2147622370, i64 2147622410}
!6430 = !DILocation(line: 187, column: 1, scope: !6076)
!6431 = !{i64 2147622511, i64 2147622554, i64 2147622594}
!6432 = !DILocation(line: 188, column: 1, scope: !6076)
!6433 = !{i64 2147622698, i64 2147622741, i64 2147622781}
!6434 = !DILocation(line: 189, column: 1, scope: !6076)
!6435 = !{i64 2147622882, i64 2147622925, i64 2147622965}
!6436 = !DILocation(line: 190, column: 1, scope: !6076)
!6437 = !{i64 2147623120, i64 2147623163, i64 2147623203}
!6438 = !DILocation(line: 191, column: 1, scope: !6076)
!6439 = !{i64 2147623350, i64 2147623393, i64 2147623433}
!6440 = !DILocation(line: 192, column: 1, scope: !6076)
!6441 = !{i64 2147623579, i64 2147623622, i64 2147623662}
!6442 = !DILocation(line: 193, column: 1, scope: !6076)
!6443 = !{i64 2147623766, i64 2147623809, i64 2147623849}
!6444 = !DILocation(line: 194, column: 1, scope: !6076)
!6445 = !{i64 2147623962, i64 2147624005, i64 2147624045}
!6446 = !DILocation(line: 195, column: 1, scope: !6076)
!6447 = !{i64 2147624170, i64 2147624213, i64 2147624253}
!6448 = !DILocation(line: 196, column: 1, scope: !6076)
!6449 = !{i64 2147624382, i64 2147624425, i64 2147624465}
!6450 = !DILocation(line: 197, column: 1, scope: !6076)
!6451 = !{i64 2147624581, i64 2147624624, i64 2147624664}
!6452 = !DILocation(line: 198, column: 1, scope: !6076)
!6453 = !{i64 2147624819, i64 2147624862, i64 2147624902}
!6454 = !DILocation(line: 199, column: 1, scope: !6076)
!6455 = !{i64 2147625015, i64 2147625058, i64 2147625098}
!6456 = !DILocation(line: 200, column: 1, scope: !6076)
!6457 = !{i64 2147625217, i64 2147625260, i64 2147625300}
!6458 = !DILocation(line: 201, column: 1, scope: !6076)
!6459 = !{i64 2147625410, i64 2147625453, i64 2147625493}
!6460 = !DILocation(line: 202, column: 1, scope: !6076)
!6461 = !{i64 2147625644, i64 2147625687, i64 2147625727}
!6462 = !DILocation(line: 203, column: 1, scope: !6076)
!6463 = !{i64 2147625807, i64 2147625850, i64 2147625890}
!6464 = !DILocation(line: 204, column: 1, scope: !6076)
!6465 = !{i64 2147626046, i64 2147626089, i64 2147626129}
!6466 = !DILocation(line: 205, column: 1, scope: !6076)
!6467 = !{i64 2147626285, i64 2147626328, i64 2147626368}
!6468 = !DILocation(line: 206, column: 1, scope: !6076)
!6469 = !{i64 2147626521, i64 2147626564, i64 2147626604}
!6470 = !DILocation(line: 207, column: 1, scope: !6076)
!6471 = !{i64 2147626751, i64 2147626794, i64 2147626834}
!6472 = !DILocation(line: 208, column: 1, scope: !6076)
!6473 = !{i64 2147626938, i64 2147626981, i64 2147627021}
!6474 = !DILocation(line: 209, column: 1, scope: !6076)
!6475 = !{i64 2147627137, i64 2147627180, i64 2147627220}
!6476 = !DILocation(line: 210, column: 1, scope: !6076)
!6477 = !{i64 2147627408, i64 2147627451, i64 2147627491}
!6478 = !DILocation(line: 211, column: 1, scope: !6076)
!6479 = !{i64 2147627583, i64 2147627626, i64 2147627666}
!6480 = !DILocation(line: 212, column: 1, scope: !6076)
!6481 = !{i64 2147627817, i64 2147627860, i64 2147627900}
!6482 = !DILocation(line: 213, column: 1, scope: !6076)
!6483 = !{i64 2147628025, i64 2147628068, i64 2147628108}
!6484 = !DILocation(line: 214, column: 1, scope: !6076)
!6485 = !{i64 2147628243, i64 2147628286, i64 2147628326}
!6486 = !DILocation(line: 215, column: 1, scope: !6076)
!6487 = !{i64 2147628433, i64 2147628476, i64 2147628516}
!6488 = !DILocation(line: 216, column: 1, scope: !6076)
!6489 = !{i64 2147628665, i64 2147628708, i64 2147628748}
!6490 = !DILocation(line: 217, column: 1, scope: !6076)
!6491 = !{i64 2147632946, i64 2147632989, i64 2147633029}
!6492 = !DILocation(line: 218, column: 1, scope: !6076)
!6493 = !{i64 2147633142, i64 2147633185, i64 2147633225}
!6494 = !DILocation(line: 219, column: 1, scope: !6076)
!6495 = !{i64 2147633348, i64 2147633391, i64 2147633431}
!6496 = !DILocation(line: 220, column: 1, scope: !6076)
!6497 = !{i64 2147633553, i64 2147633596, i64 2147633636}
!6498 = !DILocation(line: 221, column: 1, scope: !6076)
!6499 = !{i64 2147633779, i64 2147633822, i64 2147633862}
!6500 = !DILocation(line: 222, column: 1, scope: !6076)
!6501 = !{i64 2147633987, i64 2147634030, i64 2147634070}
!6502 = !DILocation(line: 223, column: 1, scope: !6076)
!6503 = !{i64 2147634183, i64 2147634226, i64 2147634266}
!6504 = !DILocation(line: 224, column: 1, scope: !6076)
!6505 = !{i64 2147634415, i64 2147634458, i64 2147634498}
!6506 = !DILocation(line: 225, column: 1, scope: !6076)
!6507 = !{i64 2147634599, i64 2147634642, i64 2147634682}
!6508 = !DILocation(line: 226, column: 1, scope: !6076)
!6509 = !{i64 2147634808, i64 2147634851, i64 2147634891}
!6510 = !DILocation(line: 227, column: 1, scope: !6076)
!6511 = !{i64 2147635016, i64 2147635059, i64 2147635099}
!6512 = !DILocation(line: 228, column: 1, scope: !6076)
!6513 = !{i64 2147635212, i64 2147635255, i64 2147635295}
!6514 = !DILocation(line: 229, column: 1, scope: !6076)
!6515 = !{i64 2147635396, i64 2147635439, i64 2147635479}
!6516 = !DILocation(line: 230, column: 1, scope: !6076)
!6517 = !{i64 2147635622, i64 2147635665, i64 2147635705}
!6518 = !DILocation(line: 231, column: 1, scope: !6076)
!6519 = !{i64 2147635848, i64 2147635891, i64 2147635931}
!6520 = !DILocation(line: 232, column: 1, scope: !6076)
!6521 = !{i64 2147636074, i64 2147636117, i64 2147636157}
!6522 = !DILocation(line: 233, column: 1, scope: !6076)
!6523 = !{i64 2147636300, i64 2147636343, i64 2147636383}
!6524 = !DILocation(line: 234, column: 1, scope: !6076)
!6525 = !{i64 2147636526, i64 2147636569, i64 2147636609}
!6526 = !DILocation(line: 235, column: 1, scope: !6076)
!6527 = !{i64 2147636758, i64 2147636801, i64 2147636841}
!6528 = !DILocation(line: 236, column: 1, scope: !6076)
!6529 = !{i64 2147636996, i64 2147637039, i64 2147637079}
!6530 = !DILocation(line: 237, column: 1, scope: !6076)
!6531 = !{i64 2147637216, i64 2147637259, i64 2147637299}
!6532 = !DILocation(line: 238, column: 1, scope: !6076)
!6533 = !{i64 2147637460, i64 2147637503, i64 2147637543}
!6534 = !DILocation(line: 239, column: 1, scope: !6076)
!6535 = !{i64 2147637701, i64 2147637744, i64 2147637784}
!6536 = !DILocation(line: 240, column: 1, scope: !6076)
!6537 = !{i64 2147637936, i64 2147637979, i64 2147638019}
!6538 = !DILocation(line: 241, column: 1, scope: !6076)
!6539 = !{i64 2147638168, i64 2147638211, i64 2147638251}
!6540 = !DILocation(line: 242, column: 1, scope: !6076)
!6541 = !{i64 2147638370, i64 2147638413, i64 2147638453}
!6542 = !DILocation(line: 243, column: 1, scope: !6076)
!6543 = !{i64 2147638620, i64 2147638663, i64 2147638703}
!6544 = !DILocation(line: 244, column: 1, scope: !6076)
!6545 = !{i64 2147638858, i64 2147638901, i64 2147638941}
!6546 = !DILocation(line: 245, column: 1, scope: !6076)
!6547 = !{i64 2147639066, i64 2147639109, i64 2147639149}
!6548 = !DILocation(line: 246, column: 1, scope: !6076)
!6549 = !{i64 2147639262, i64 2147639305, i64 2147639345}
!6550 = !DILocation(line: 247, column: 1, scope: !6076)
!6551 = !{i64 2147639446, i64 2147639489, i64 2147639529}
!6552 = !DILocation(line: 248, column: 1, scope: !6076)
!6553 = !{i64 2147639663, i64 2147639706, i64 2147639746}
!6554 = !DILocation(line: 249, column: 1, scope: !6076)
!6555 = !{i64 2147639868, i64 2147639911, i64 2147639951}
!6556 = !DILocation(line: 250, column: 1, scope: !6076)
!6557 = !{i64 2147640103, i64 2147640146, i64 2147640186}
!6558 = !DILocation(line: 251, column: 1, scope: !6076)
!6559 = !{i64 2147640326, i64 2147640369, i64 2147640409}
!6560 = !DILocation(line: 252, column: 1, scope: !6076)
!6561 = !{i64 2147640549, i64 2147640592, i64 2147640632}
!6562 = !DILocation(line: 253, column: 1, scope: !6076)
!6563 = !{i64 2147640787, i64 2147640830, i64 2147640870}
!6564 = !DILocation(line: 254, column: 1, scope: !6076)
!6565 = !{i64 2147641025, i64 2147641068, i64 2147641108}
!6566 = !DILocation(line: 255, column: 1, scope: !6076)
!6567 = !{i64 2147641242, i64 2147641285, i64 2147641325}
!6568 = !DILocation(line: 256, column: 1, scope: !6076)
!6569 = !{i64 2147641447, i64 2147641490, i64 2147641530}
!6570 = !DILocation(line: 257, column: 1, scope: !6076)
!6571 = !{i64 2147645701, i64 2147645744, i64 2147645784}
!6572 = !DILocation(line: 258, column: 1, scope: !6076)
!6573 = !{i64 2147645954, i64 2147645997, i64 2147646037}
!6574 = !DILocation(line: 259, column: 1, scope: !6076)
!6575 = !{i64 2147646162, i64 2147646205, i64 2147646245}
!6576 = !DILocation(line: 260, column: 1, scope: !6076)
!6577 = !{i64 2147646358, i64 2147646401, i64 2147646441}
!6578 = !DILocation(line: 261, column: 1, scope: !6076)
!6579 = !{i64 2147646572, i64 2147646615, i64 2147646655}
!6580 = !DILocation(line: 262, column: 1, scope: !6076)
!6581 = !{i64 2147646780, i64 2147646823, i64 2147646863}
!6582 = !DILocation(line: 263, column: 1, scope: !6076)
!6583 = !{i64 2147646970, i64 2147647013, i64 2147647053}
!6584 = !DILocation(line: 264, column: 1, scope: !6076)
!6585 = !{i64 2147647184, i64 2147647227, i64 2147647267}
!6586 = !DILocation(line: 265, column: 1, scope: !6076)
!6587 = !{i64 2147647446, i64 2147647489, i64 2147647529}
!6588 = !DILocation(line: 266, column: 1, scope: !6076)
!6589 = !{i64 2147647657, i64 2147647700, i64 2147647740}
!6590 = !DILocation(line: 267, column: 1, scope: !6076)
!6591 = !{i64 2147647901, i64 2147647944, i64 2147647984}
!6592 = !DILocation(line: 268, column: 1, scope: !6076)
!6593 = !{i64 2147648112, i64 2147648155, i64 2147648195}
!6594 = !DILocation(line: 269, column: 1, scope: !6076)
!6595 = !{i64 2147648341, i64 2147648384, i64 2147648424}
!6596 = !DILocation(line: 270, column: 1, scope: !6076)
!6597 = !{i64 2147648606, i64 2147648649, i64 2147648689}
!6598 = !DILocation(line: 271, column: 1, scope: !6076)
!6599 = !{i64 2147648811, i64 2147648854, i64 2147648894}
!6600 = !DILocation(line: 272, column: 1, scope: !6076)
!6601 = !{i64 2147649007, i64 2147649050, i64 2147649090}
!6602 = !DILocation(line: 273, column: 1, scope: !6076)
!6603 = !{i64 2147649230, i64 2147649273, i64 2147649313}
!6604 = !DILocation(line: 274, column: 1, scope: !6076)
!6605 = !{i64 2147649393, i64 2147649436, i64 2147649476}
!6606 = !DILocation(line: 275, column: 1, scope: !6076)
!6607 = !{i64 2147649598, i64 2147649641, i64 2147649681}
!6608 = !DILocation(line: 276, column: 1, scope: !6076)
!6609 = !{i64 2147649818, i64 2147649861, i64 2147649901}
!6610 = !DILocation(line: 277, column: 1, scope: !6076)
!6611 = !{i64 2147650032, i64 2147650075, i64 2147650115}
!6612 = !DILocation(line: 278, column: 1, scope: !6076)
!6613 = !{i64 2147650276, i64 2147650319, i64 2147650359}
!6614 = !DILocation(line: 279, column: 1, scope: !6076)
!6615 = !{i64 2147650508, i64 2147650551, i64 2147650591}
!6616 = !DILocation(line: 280, column: 1, scope: !6076)
!6617 = !{i64 2147650722, i64 2147650765, i64 2147650805}
!6618 = !DILocation(line: 281, column: 1, scope: !6076)
!6619 = !{i64 2147650933, i64 2147650976, i64 2147651016}
!6620 = !DILocation(line: 282, column: 1, scope: !6076)
!6621 = !{i64 2147651126, i64 2147651169, i64 2147651209}
!6622 = !DILocation(line: 283, column: 1, scope: !6076)
!6623 = !{i64 2147651325, i64 2147651368, i64 2147651408}
!6624 = !DILocation(line: 284, column: 1, scope: !6076)
!6625 = !{i64 2147651497, i64 2147651540, i64 2147651580}
!6626 = !DILocation(line: 285, column: 1, scope: !6076)
!6627 = !{i64 2147651690, i64 2147651733, i64 2147651773}
!6628 = !DILocation(line: 286, column: 1, scope: !6076)
!6629 = !{i64 2147651886, i64 2147651929, i64 2147651969}
!6630 = !DILocation(line: 287, column: 1, scope: !6076)
!6631 = !{i64 2147652049, i64 2147652092, i64 2147652132}
!6632 = !DILocation(line: 288, column: 1, scope: !6076)
!6633 = !{i64 2147652251, i64 2147652294, i64 2147652334}
!6634 = !DILocation(line: 289, column: 1, scope: !6076)
!6635 = !{i64 2147652456, i64 2147652499, i64 2147652539}
!6636 = !DILocation(line: 290, column: 1, scope: !6076)
!6637 = !{i64 2147652664, i64 2147652707, i64 2147652747}
!6638 = !DILocation(line: 291, column: 1, scope: !6076)
!6639 = !{i64 2147652857, i64 2147652900, i64 2147652940}
!6640 = !DILocation(line: 292, column: 1, scope: !6076)
!6641 = !{i64 2147653044, i64 2147653087, i64 2147653127}
!6642 = !DILocation(line: 293, column: 1, scope: !6076)
!6643 = !{i64 2147653271, i64 2147653314, i64 2147653354}
!6644 = !DILocation(line: 294, column: 1, scope: !6076)
!6645 = !{i64 2147653437, i64 2147653480, i64 2147653520}
!6646 = !DILocation(line: 295, column: 1, scope: !6076)
!6647 = !{i64 2147653651, i64 2147653694, i64 2147653734}
!6648 = !DILocation(line: 296, column: 1, scope: !6076)
!6649 = !{i64 2147653877, i64 2147653920, i64 2147653960}
!6650 = !DILocation(line: 297, column: 1, scope: !6076)
!6651 = !{i64 2147654085, i64 2147654128, i64 2147654168}
!6652 = !DILocation(line: 298, column: 1, scope: !6076)
!6653 = !{i64 2147654281, i64 2147654324, i64 2147654364}
!6654 = !DILocation(line: 299, column: 1, scope: !6076)
!6655 = !{i64 2147654498, i64 2147654541, i64 2147654581}
!6656 = !DILocation(line: 300, column: 1, scope: !6076)
!6657 = !{i64 2147658851, i64 2147658894, i64 2147658934}
!6658 = !DILocation(line: 301, column: 1, scope: !6076)
!6659 = !{i64 2147659083, i64 2147659126, i64 2147659166}
!6660 = !DILocation(line: 302, column: 1, scope: !6076)
!6661 = !{i64 2147659300, i64 2147659343, i64 2147659383}
!6662 = !DILocation(line: 303, column: 1, scope: !6076)
!6663 = !{i64 2147659507, i64 2147659550, i64 2147659590}
!6664 = !DILocation(line: 304, column: 1, scope: !6076)
!6665 = !{i64 2147659708, i64 2147659751, i64 2147659791}
!6666 = !DILocation(line: 305, column: 1, scope: !6076)
!6667 = !{i64 2147659940, i64 2147659983, i64 2147660023}
!6668 = !DILocation(line: 306, column: 1, scope: !6076)
!6669 = !{i64 2147660148, i64 2147660191, i64 2147660231}
!6670 = !DILocation(line: 307, column: 1, scope: !6076)
!6671 = !{i64 2147660338, i64 2147660381, i64 2147660421}
!6672 = !DILocation(line: 308, column: 1, scope: !6076)
!6673 = !{i64 2147660564, i64 2147660607, i64 2147660647}
!6674 = !DILocation(line: 309, column: 1, scope: !6076)
!6675 = !{i64 2147660753, i64 2147660796, i64 2147660836}
!6676 = !DILocation(line: 310, column: 1, scope: !6076)
!6677 = !{i64 2147661024, i64 2147661067, i64 2147661107}
!6678 = !DILocation(line: 311, column: 1, scope: !6076)
!6679 = !{i64 2147661244, i64 2147661287, i64 2147661327}
!6680 = !DILocation(line: 312, column: 1, scope: !6076)
!6681 = !{i64 2147661497, i64 2147661540, i64 2147661580}
!6682 = !DILocation(line: 313, column: 1, scope: !6076)
!6683 = !{i64 2147661705, i64 2147661748, i64 2147661788}
!6684 = !DILocation(line: 314, column: 1, scope: !6076)
!6685 = !{i64 2147661937, i64 2147661980, i64 2147662020}
!6686 = !DILocation(line: 315, column: 1, scope: !6076)
!6687 = !{i64 2147662148, i64 2147662191, i64 2147662231}
!6688 = !DILocation(line: 316, column: 1, scope: !6076)
!6689 = !{i64 2147662338, i64 2147662381, i64 2147662421}
!6690 = !DILocation(line: 317, column: 1, scope: !6076)
!6691 = !{i64 2147662552, i64 2147662595, i64 2147662635}
!6692 = !DILocation(line: 318, column: 1, scope: !6076)
!6693 = !{i64 2147662751, i64 2147662794, i64 2147662834}
!6694 = !DILocation(line: 319, column: 1, scope: !6076)
!6695 = !{i64 2147662938, i64 2147662981, i64 2147663021}
!6696 = !DILocation(line: 320, column: 1, scope: !6076)
!6697 = !{i64 2147663146, i64 2147663189, i64 2147663229}
!6698 = !DILocation(line: 321, column: 1, scope: !6076)
!6699 = !{i64 2147663375, i64 2147663418, i64 2147663458}
!6700 = !DILocation(line: 322, column: 1, scope: !6076)
!6701 = !{i64 2147663577, i64 2147663620, i64 2147663660}
!6702 = !DILocation(line: 323, column: 1, scope: !6076)
!6703 = !{i64 2147663776, i64 2147663819, i64 2147663859}
!6704 = !DILocation(line: 324, column: 1, scope: !6076)
!6705 = !{i64 2147663993, i64 2147664036, i64 2147664076}
!6706 = !DILocation(line: 326, column: 1, scope: !6076)
!6707 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !578, file: !578, line: 30, type: !584, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6708)
!6708 = !{!6709, !6710}
!6709 = !DILocalVariable(name: "arg", arg: 1, scope: !6707, file: !578, line: 30, type: !586)
!6710 = !DILocalVariable(name: "key", scope: !6707, file: !578, line: 32, type: !113)
!6711 = !DILocation(line: 0, scope: !6707)
!6712 = !DILocation(line: 37, column: 2, scope: !6707)
!6713 = !DILocation(line: 38, column: 2, scope: !6707)
!6714 = !DILocation(line: 55, column: 2, scope: !6715, inlinedAt: !6719)
!6715 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6716)
!6716 = !{!6717, !6718}
!6717 = !DILocalVariable(name: "key", scope: !6715, file: !4063, line: 44, type: !32)
!6718 = !DILocalVariable(name: "tmp", scope: !6715, file: !4063, line: 53, type: !32)
!6719 = distinct !DILocation(line: 40, column: 8, scope: !6707)
!6720 = !{i64 1845269}
!6721 = !DILocation(line: 0, scope: !6715, inlinedAt: !6719)
!6722 = !DILocalVariable(name: "key", arg: 1, scope: !6723, file: !4063, line: 84, type: !32)
!6723 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6724)
!6724 = !{!6722}
!6725 = !DILocation(line: 0, scope: !6723, inlinedAt: !6726)
!6726 = distinct !DILocation(line: 47, column: 2, scope: !6707)
!6727 = !DILocation(line: 95, column: 2, scope: !6723, inlinedAt: !6726)
!6728 = !{i64 1846086}
!6729 = !DILocation(line: 51, column: 18, scope: !6707)
!6730 = !DILocation(line: 53, column: 2, scope: !6707)
!6731 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6732, file: !6732, line: 1609, type: !3389, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !437)
!6732 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6733 = !DILocation(line: 1611, column: 3, scope: !6731)
!6734 = !DILocation(line: 1612, column: 1, scope: !6731)
!6735 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6732, file: !6732, line: 1629, type: !3389, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !437)
!6736 = !DILocation(line: 1631, column: 3, scope: !6735)
!6737 = !DILocation(line: 1632, column: 1, scope: !6735)
!6738 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !607, file: !607, line: 26, type: !613, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !604, retainedNodes: !6739)
!6739 = !{!6740}
!6740 = !DILocalVariable(name: "dev", arg: 1, scope: !6738, file: !607, line: 26, type: !615)
!6741 = !DILocation(line: 0, scope: !6738)
!6742 = !DILocation(line: 68, column: 2, scope: !6738)
!6743 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6744, file: !6744, line: 14, type: !5057, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !6745)
!6744 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6745 = !{!6746, !6747}
!6746 = !DILocalVariable(name: "fmt", arg: 1, scope: !6743, file: !6744, line: 14, type: !105)
!6747 = !DILocalVariable(name: "ap", scope: !6743, file: !6744, line: 16, type: !6748)
!6748 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4124, line: 99, baseType: !6749)
!6749 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4124, line: 40, baseType: !6750)
!6750 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6744, baseType: !6751)
!6751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6752)
!6752 = !{!6753}
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6751, file: !6744, line: 16, baseType: !104, size: 32)
!6754 = !DILocation(line: 0, scope: !6743)
!6755 = !DILocation(line: 16, column: 2, scope: !6743)
!6756 = !DILocation(line: 16, column: 10, scope: !6743)
!6757 = !DILocation(line: 18, column: 2, scope: !6743)
!6758 = !DILocation(line: 19, column: 2, scope: !6743)
!6759 = !DILocation(line: 20, column: 2, scope: !6743)
!6760 = !DILocation(line: 21, column: 1, scope: !6743)
!6761 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6744, file: !6744, line: 23, type: !6762, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !6764)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{null, !105, !6748}
!6764 = !{!6765, !6766}
!6765 = !DILocalVariable(name: "fmt", arg: 1, scope: !6761, file: !6744, line: 23, type: !105)
!6766 = !DILocalVariable(name: "ap", arg: 2, scope: !6761, file: !6744, line: 23, type: !6748)
!6767 = !DILocation(line: 0, scope: !6761)
!6768 = !DILocation(line: 25, column: 2, scope: !6761)
!6769 = !DILocation(line: 26, column: 1, scope: !6761)
!6770 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6744, file: !6744, line: 52, type: !6771, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !6773)
!6771 = !DISubroutineType(types: !6772)
!6772 = !{null, !108, !13, !439}
!6773 = !{!6774, !6775, !6776, !6777}
!6774 = !DILocalVariable(name: "level", arg: 1, scope: !6770, file: !6744, line: 52, type: !108)
!6775 = !DILocalVariable(name: "data", arg: 2, scope: !6770, file: !6744, line: 52, type: !13)
!6776 = !DILocalVariable(name: "size", arg: 3, scope: !6770, file: !6744, line: 52, type: !439)
!6777 = !DILocalVariable(name: "data_buffer", scope: !6770, file: !6744, line: 54, type: !105)
!6778 = !DILocation(line: 0, scope: !6770)
!6779 = !DILocation(line: 55, column: 14, scope: !6770)
!6780 = !DILocation(line: 55, column: 2, scope: !6770)
!6781 = !DILocation(line: 56, column: 3, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6770, file: !6744, line: 55, column: 20)
!6783 = !DILocation(line: 57, column: 3, scope: !6782)
!6784 = !DILocation(line: 59, column: 7, scope: !6782)
!6785 = distinct !{!6785, !6780, !6786}
!6786 = !DILocation(line: 65, column: 2, scope: !6770)
!6787 = !DILocation(line: 66, column: 1, scope: !6770)
!6788 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3675, file: !3675, line: 175, type: !3676, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !6789)
!6789 = !{!6790}
!6790 = !DILocalVariable(name: "level", arg: 1, scope: !6788, file: !3675, line: 175, type: !108)
!6791 = !DILocation(line: 0, scope: !6788)
!6792 = !DILocation(line: 177, column: 2, scope: !6788)
!6793 = !DILocation(line: 189, column: 1, scope: !6788)
!6794 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6744, file: !6744, line: 28, type: !6795, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !6797)
!6795 = !DISubroutineType(types: !6796)
!6796 = !{null, !105, !439}
!6797 = !{!6798, !6799, !6800, !6802, !6804}
!6798 = !DILocalVariable(name: "data", arg: 1, scope: !6794, file: !6744, line: 28, type: !105)
!6799 = !DILocalVariable(name: "length", arg: 2, scope: !6794, file: !6744, line: 28, type: !439)
!6800 = !DILocalVariable(name: "i", scope: !6801, file: !6744, line: 30, type: !439)
!6801 = distinct !DILexicalBlock(scope: !6794, file: !6744, line: 30, column: 2)
!6802 = !DILocalVariable(name: "i", scope: !6803, file: !6744, line: 40, type: !439)
!6803 = distinct !DILexicalBlock(scope: !6794, file: !6744, line: 40, column: 2)
!6804 = !DILocalVariable(name: "c", scope: !6805, file: !6744, line: 42, type: !165)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6744, line: 41, column: 19)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6744, line: 41, column: 7)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6744, line: 40, column: 54)
!6808 = distinct !DILexicalBlock(scope: !6803, file: !6744, line: 40, column: 2)
!6809 = !DILocation(line: 0, scope: !6794)
!6810 = !DILocation(line: 0, scope: !6801)
!6811 = !DILocation(line: 30, column: 2, scope: !6801)
!6812 = !DILocation(line: 38, column: 2, scope: !6794)
!6813 = !DILocation(line: 0, scope: !6803)
!6814 = !DILocation(line: 40, column: 2, scope: !6803)
!6815 = !DILocation(line: 31, column: 9, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !6744, line: 31, column: 7)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6744, line: 30, column: 54)
!6818 = distinct !DILexicalBlock(scope: !6801, file: !6744, line: 30, column: 2)
!6819 = !DILocation(line: 31, column: 7, scope: !6817)
!6820 = !DILocation(line: 32, column: 35, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6816, file: !6744, line: 31, column: 19)
!6822 = !DILocation(line: 32, column: 20, scope: !6821)
!6823 = !DILocation(line: 32, column: 4, scope: !6821)
!6824 = !DILocation(line: 33, column: 3, scope: !6821)
!6825 = !DILocation(line: 34, column: 4, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6816, file: !6744, line: 33, column: 10)
!6827 = !DILocation(line: 30, column: 50, scope: !6818)
!6828 = !DILocation(line: 30, column: 24, scope: !6818)
!6829 = distinct !{!6829, !6811, !6830}
!6830 = !DILocation(line: 36, column: 2, scope: !6801)
!6831 = !DILocation(line: 49, column: 2, scope: !6794)
!6832 = !DILocation(line: 50, column: 1, scope: !6794)
!6833 = !DILocation(line: 41, column: 9, scope: !6806)
!6834 = !DILocation(line: 41, column: 7, scope: !6807)
!6835 = !DILocation(line: 42, column: 22, scope: !6805)
!6836 = !DILocation(line: 0, scope: !6805)
!6837 = !DILocation(line: 44, column: 25, scope: !6805)
!6838 = !DILocation(line: 44, column: 17, scope: !6805)
!6839 = !DILocation(line: 44, column: 33, scope: !6805)
!6840 = !DILocation(line: 44, column: 4, scope: !6805)
!6841 = !DILocation(line: 45, column: 3, scope: !6805)
!6842 = !DILocation(line: 46, column: 4, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6806, file: !6744, line: 45, column: 10)
!6844 = !DILocation(line: 40, column: 50, scope: !6808)
!6845 = !DILocation(line: 40, column: 24, scope: !6808)
!6846 = distinct !{!6846, !6814, !6847}
!6847 = !DILocation(line: 48, column: 2, scope: !6803)
!6848 = distinct !DISubprogram(name: "isprint", scope: !5849, file: !5849, line: 37, type: !557, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !6849)
!6849 = !{!6850}
!6850 = !DILocalVariable(name: "c", arg: 1, scope: !6848, file: !5849, line: 37, type: !108)
!6851 = !DILocation(line: 0, scope: !6848)
!6852 = !DILocation(line: 39, column: 38, scope: !6848)
!6853 = !DILocation(line: 39, column: 2, scope: !6848)
!6854 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6855, file: !6855, line: 57, type: !6856, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !6902)
!6855 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6856 = !DISubroutineType(types: !6857)
!6857 = !{null, !32, !6858}
!6858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6859, size: 32)
!6859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6860)
!6860 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2969, line: 141, baseType: !6861)
!6861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2969, line: 97, size: 256, elements: !6862)
!6862 = !{!6863}
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6861, file: !2969, line: 107, baseType: !6864, size: 256)
!6864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2969, line: 98, size: 256, elements: !6865)
!6865 = !{!6866, !6871, !6876, !6881, !6886, !6891, !6896, !6901}
!6866 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !2969, line: 99, baseType: !6867, size: 32)
!6867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6864, file: !2969, line: 99, size: 32, elements: !6868)
!6868 = !{!6869, !6870}
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6867, file: !2969, line: 99, baseType: !113, size: 32)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6867, file: !2969, line: 99, baseType: !113, size: 32)
!6871 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !2969, line: 100, baseType: !6872, size: 32, offset: 32)
!6872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6864, file: !2969, line: 100, size: 32, elements: !6873)
!6873 = !{!6874, !6875}
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6872, file: !2969, line: 100, baseType: !113, size: 32)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6872, file: !2969, line: 100, baseType: !113, size: 32)
!6876 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !2969, line: 101, baseType: !6877, size: 32, offset: 64)
!6877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6864, file: !2969, line: 101, size: 32, elements: !6878)
!6878 = !{!6879, !6880}
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6877, file: !2969, line: 101, baseType: !113, size: 32)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6877, file: !2969, line: 101, baseType: !113, size: 32)
!6881 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !2969, line: 102, baseType: !6882, size: 32, offset: 96)
!6882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6864, file: !2969, line: 102, size: 32, elements: !6883)
!6883 = !{!6884, !6885}
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6882, file: !2969, line: 102, baseType: !113, size: 32)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6882, file: !2969, line: 102, baseType: !113, size: 32)
!6886 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !2969, line: 103, baseType: !6887, size: 32, offset: 128)
!6887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6864, file: !2969, line: 103, size: 32, elements: !6888)
!6888 = !{!6889, !6890}
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6887, file: !2969, line: 103, baseType: !113, size: 32)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6887, file: !2969, line: 103, baseType: !113, size: 32)
!6891 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !2969, line: 104, baseType: !6892, size: 32, offset: 160)
!6892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6864, file: !2969, line: 104, size: 32, elements: !6893)
!6893 = !{!6894, !6895}
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6892, file: !2969, line: 104, baseType: !113, size: 32)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6892, file: !2969, line: 104, baseType: !113, size: 32)
!6896 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !2969, line: 105, baseType: !6897, size: 32, offset: 192)
!6897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6864, file: !2969, line: 105, size: 32, elements: !6898)
!6898 = !{!6899, !6900}
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6897, file: !2969, line: 105, baseType: !113, size: 32)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6897, file: !2969, line: 105, baseType: !113, size: 32)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6864, file: !2969, line: 106, baseType: !113, size: 32, offset: 224)
!6902 = !{!6903, !6904}
!6903 = !DILocalVariable(name: "reason", arg: 1, scope: !6854, file: !6855, line: 57, type: !32)
!6904 = !DILocalVariable(name: "esf", arg: 2, scope: !6854, file: !6855, line: 57, type: !6858)
!6905 = !DILocation(line: 0, scope: !6854)
!6906 = !DILocation(line: 60, column: 10, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6854, file: !6855, line: 60, column: 6)
!6908 = !DILocation(line: 60, column: 6, scope: !6854)
!6909 = !DILocation(line: 61, column: 3, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6907, file: !6855, line: 60, column: 19)
!6911 = !DILocation(line: 62, column: 2, scope: !6910)
!6912 = !DILocation(line: 63, column: 2, scope: !6854)
!6913 = !DILocation(line: 64, column: 1, scope: !6854)
!6914 = distinct !DISubprogram(name: "esf_dump", scope: !6855, file: !6855, line: 20, type: !6915, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !6917)
!6915 = !DISubroutineType(types: !6916)
!6916 = !{null, !6858}
!6917 = !{!6918}
!6918 = !DILocalVariable(name: "esf", arg: 1, scope: !6914, file: !6855, line: 20, type: !6858)
!6919 = !DILocation(line: 0, scope: !6914)
!6920 = !DILocation(line: 22, column: 2, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !6855, line: 22, column: 2)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6855, line: 22, column: 2)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !6855, line: 22, column: 2)
!6924 = distinct !DILexicalBlock(scope: !6914, file: !6855, line: 22, column: 2)
!6925 = !DILocation(line: 24, column: 2, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6855, line: 24, column: 2)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !6855, line: 24, column: 2)
!6928 = distinct !DILexicalBlock(scope: !6929, file: !6855, line: 24, column: 2)
!6929 = distinct !DILexicalBlock(scope: !6914, file: !6855, line: 24, column: 2)
!6930 = !DILocation(line: 26, column: 2, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6855, line: 26, column: 2)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6855, line: 26, column: 2)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6855, line: 26, column: 2)
!6934 = distinct !DILexicalBlock(scope: !6914, file: !6855, line: 26, column: 2)
!6935 = !DILocation(line: 53, column: 2, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6855, line: 53, column: 2)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6855, line: 53, column: 2)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6855, line: 53, column: 2)
!6939 = distinct !DILexicalBlock(scope: !6914, file: !6855, line: 53, column: 2)
!6940 = !DILocation(line: 55, column: 1, scope: !6914)
!6941 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6855, file: !6855, line: 82, type: !6942, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !6957)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{null, !6858, !6944}
!6944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6945, size: 32)
!6945 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !712, line: 37, baseType: !6946)
!6946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !6947)
!6947 = !{!6948, !6949, !6950, !6951, !6952, !6953, !6954, !6955, !6956}
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6946, file: !712, line: 26, baseType: !113, size: 32)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6946, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6946, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6946, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6946, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6946, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6946, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6946, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6946, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!6957 = !{!6958, !6959, !6960}
!6958 = !DILocalVariable(name: "esf", arg: 1, scope: !6941, file: !6855, line: 82, type: !6858)
!6959 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6941, file: !6855, line: 82, type: !6944)
!6960 = !DILocalVariable(name: "reason", scope: !6941, file: !6855, line: 88, type: !32)
!6961 = !DILocation(line: 0, scope: !6941)
!6962 = !DILocation(line: 88, column: 35, scope: !6941)
!6963 = !DILocation(line: 108, column: 2, scope: !6941)
!6964 = !DILocation(line: 131, column: 1, scope: !6941)
!6965 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6855, file: !6855, line: 133, type: !6966, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !6968)
!6966 = !DISubroutineType(types: !6967)
!6967 = !{null, !104}
!6968 = !{!6969, !6970, !6971}
!6969 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6965, file: !6855, line: 133, type: !104)
!6970 = !DILocalVariable(name: "ssf_contents", scope: !6965, file: !6855, line: 135, type: !1211)
!6971 = !DILocalVariable(name: "oops_esf", scope: !6965, file: !6855, line: 136, type: !6860)
!6972 = !DILocation(line: 0, scope: !6965)
!6973 = !DILocation(line: 136, column: 2, scope: !6965)
!6974 = !DILocation(line: 136, column: 15, scope: !6965)
!6975 = !DILocation(line: 139, column: 22, scope: !6965)
!6976 = !DILocation(line: 139, column: 17, scope: !6965)
!6977 = !DILocation(line: 139, column: 20, scope: !6965)
!6978 = !DILocation(line: 141, column: 2, scope: !6965)
!6979 = !DILocation(line: 142, column: 2, scope: !6965)
!6980 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6981, file: !6981, line: 40, type: !4076, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !6982)
!6981 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6982 = !{!6983}
!6983 = !DILocalVariable(name: "irq", arg: 1, scope: !6980, file: !6981, line: 40, type: !32)
!6984 = !DILocation(line: 0, scope: !6980)
!6985 = !DILocation(line: 42, column: 2, scope: !6980)
!6986 = !DILocation(line: 43, column: 1, scope: !6980)
!6987 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !788, file: !788, line: 1684, type: !6988, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !6990)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{null, !1148}
!6990 = !{!6991}
!6991 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6987, file: !788, line: 1684, type: !1148)
!6992 = !DILocation(line: 0, scope: !6987)
!6993 = !DILocation(line: 1686, column: 23, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6987, file: !788, line: 1686, column: 7)
!6995 = !DILocation(line: 1686, column: 7, scope: !6987)
!6996 = !DILocation(line: 1688, column: 5, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6994, file: !788, line: 1687, column: 3)
!6998 = !{i64 2150372816}
!6999 = !DILocation(line: 1689, column: 81, scope: !6997)
!7000 = !DILocation(line: 1689, column: 60, scope: !6997)
!7001 = !DILocation(line: 1689, column: 34, scope: !6997)
!7002 = !DILocation(line: 1689, column: 5, scope: !6997)
!7003 = !DILocation(line: 1689, column: 43, scope: !6997)
!7004 = !DILocation(line: 1690, column: 5, scope: !6997)
!7005 = !{i64 2150372930}
!7006 = !DILocation(line: 1691, column: 3, scope: !6997)
!7007 = !DILocation(line: 1692, column: 1, scope: !6987)
!7008 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6981, file: !6981, line: 45, type: !4076, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !7009)
!7009 = !{!7010}
!7010 = !DILocalVariable(name: "irq", arg: 1, scope: !7008, file: !6981, line: 45, type: !32)
!7011 = !DILocation(line: 0, scope: !7008)
!7012 = !DILocation(line: 47, column: 2, scope: !7008)
!7013 = !DILocation(line: 48, column: 1, scope: !7008)
!7014 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !788, file: !788, line: 1722, type: !6988, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !7015)
!7015 = !{!7016}
!7016 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7014, file: !788, line: 1722, type: !1148)
!7017 = !DILocation(line: 0, scope: !7014)
!7018 = !DILocation(line: 1724, column: 23, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7014, file: !788, line: 1724, column: 7)
!7020 = !DILocation(line: 1724, column: 7, scope: !7014)
!7021 = !DILocation(line: 1726, column: 81, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7019, file: !788, line: 1725, column: 3)
!7023 = !DILocation(line: 1726, column: 60, scope: !7022)
!7024 = !DILocation(line: 1726, column: 34, scope: !7022)
!7025 = !DILocation(line: 1726, column: 5, scope: !7022)
!7026 = !DILocation(line: 1726, column: 43, scope: !7022)
!7027 = !DILocation(line: 271, column: 3, scope: !7028, inlinedAt: !7030)
!7028 = distinct !DISubprogram(name: "__DSB", scope: !7029, file: !7029, line: 269, type: !3389, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !437)
!7029 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7030 = distinct !DILocation(line: 1727, column: 5, scope: !7022)
!7031 = !{i64 2827199}
!7032 = !DILocation(line: 260, column: 3, scope: !7033, inlinedAt: !7034)
!7033 = distinct !DISubprogram(name: "__ISB", scope: !7029, file: !7029, line: 258, type: !3389, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !437)
!7034 = distinct !DILocation(line: 1728, column: 5, scope: !7022)
!7035 = !{i64 2826916}
!7036 = !DILocation(line: 1729, column: 3, scope: !7022)
!7037 = !DILocation(line: 1730, column: 1, scope: !7014)
!7038 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6981, file: !6981, line: 50, type: !7039, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !7041)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{!108, !32}
!7041 = !{!7042}
!7042 = !DILocalVariable(name: "irq", arg: 1, scope: !7038, file: !6981, line: 50, type: !32)
!7043 = !DILocation(line: 0, scope: !7038)
!7044 = !DILocation(line: 52, column: 20, scope: !7038)
!7045 = !DILocation(line: 52, column: 9, scope: !7038)
!7046 = !DILocation(line: 52, column: 41, scope: !7038)
!7047 = !DILocation(line: 52, column: 39, scope: !7038)
!7048 = !DILocation(line: 52, column: 2, scope: !7038)
!7049 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6981, file: !6981, line: 64, type: !7050, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !7052)
!7050 = !DISubroutineType(types: !7051)
!7051 = !{null, !32, !32, !113}
!7052 = !{!7053, !7054, !7055}
!7053 = !DILocalVariable(name: "irq", arg: 1, scope: !7049, file: !6981, line: 64, type: !32)
!7054 = !DILocalVariable(name: "prio", arg: 2, scope: !7049, file: !6981, line: 64, type: !32)
!7055 = !DILocalVariable(name: "flags", arg: 3, scope: !7049, file: !6981, line: 64, type: !113)
!7056 = !DILocation(line: 0, scope: !7049)
!7057 = !DILocation(line: 83, column: 8, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6981, line: 82, column: 9)
!7059 = distinct !DILexicalBlock(scope: !7049, file: !6981, line: 76, column: 6)
!7060 = !DILocation(line: 95, column: 2, scope: !7049)
!7061 = !DILocation(line: 96, column: 1, scope: !7049)
!7062 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !788, file: !788, line: 1814, type: !7063, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !7065)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{null, !1148, !113}
!7065 = !{!7066, !7067}
!7066 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7062, file: !788, line: 1814, type: !1148)
!7067 = !DILocalVariable(name: "priority", arg: 2, scope: !7062, file: !788, line: 1814, type: !113)
!7068 = !DILocation(line: 0, scope: !7062)
!7069 = !DILocation(line: 0, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7062, file: !788, line: 1816, column: 7)
!7071 = !DILocation(line: 1816, column: 7, scope: !7062)
!7072 = !DILocation(line: 1824, column: 1, scope: !7062)
!7073 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6981, file: !6981, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !7074)
!7074 = !{!7075}
!7075 = !DILocalVariable(name: "unused", arg: 1, scope: !7073, file: !6981, line: 155, type: !13)
!7076 = !DILocation(line: 0, scope: !7073)
!7077 = !DILocation(line: 159, column: 2, scope: !7073)
!7078 = !DILocation(line: 160, column: 1, scope: !7073)
!7079 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7080, file: !7080, line: 87, type: !3389, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !437)
!7080 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7081 = !DILocation(line: 89, column: 2, scope: !7079)
!7082 = !DILocation(line: 90, column: 2, scope: !7079)
!7083 = !DILocation(line: 91, column: 1, scope: !7079)
!7084 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7080, file: !7080, line: 23, type: !3389, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7085 = !DISubprogram(name: "z_arm_int_exit", scope: !7086, file: !7086, line: 153, type: !3389, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7086 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7087 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7088, file: !7088, line: 256, type: !3389, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !437)
!7088 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7089 = !DILocation(line: 258, column: 2, scope: !7087)
!7090 = !DILocation(line: 260, column: 2, scope: !7087)
!7091 = !DILocation(line: 262, column: 2, scope: !7087)
!7092 = !DILocation(line: 263, column: 2, scope: !7087)
!7093 = !DILocation(line: 267, column: 2, scope: !7087)
!7094 = !DILocation(line: 268, column: 2, scope: !7087)
!7095 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7088, file: !7088, line: 53, type: !3389, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !437)
!7096 = !DILocation(line: 55, column: 12, scope: !7095)
!7097 = !DILocation(line: 271, column: 3, scope: !7098, inlinedAt: !7099)
!7098 = distinct !DISubprogram(name: "__DSB", scope: !7029, file: !7029, line: 269, type: !3389, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !437)
!7099 = distinct !DILocation(line: 56, column: 2, scope: !7095)
!7100 = !{i64 2825870}
!7101 = !DILocation(line: 260, column: 3, scope: !7102, inlinedAt: !7103)
!7102 = distinct !DISubprogram(name: "__ISB", scope: !7029, file: !7029, line: 258, type: !3389, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !437)
!7103 = distinct !DILocation(line: 57, column: 2, scope: !7095)
!7104 = !{i64 2825587}
!7105 = !DILocation(line: 58, column: 1, scope: !7095)
!7106 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7088, file: !7088, line: 96, type: !3389, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !437)
!7107 = !DILocation(line: 103, column: 13, scope: !7106)
!7108 = !DILocation(line: 975, column: 3, scope: !7109, inlinedAt: !7114)
!7109 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7029, file: !7029, line: 971, type: !7110, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !7112)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{!113}
!7112 = !{!7113}
!7113 = !DILocalVariable(name: "result", scope: !7109, file: !7029, line: 973, type: !113)
!7114 = distinct !DILocation(line: 189, column: 16, scope: !7106)
!7115 = !{i64 2846700}
!7116 = !DILocation(line: 0, scope: !7109, inlinedAt: !7114)
!7117 = !DILocation(line: 189, column: 32, scope: !7106)
!7118 = !DILocalVariable(name: "control", arg: 1, scope: !7119, file: !7029, line: 1001, type: !113)
!7119 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7029, file: !7029, line: 1001, type: !7120, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !7122)
!7120 = !DISubroutineType(types: !7121)
!7121 = !{null, !113}
!7122 = !{!7118}
!7123 = !DILocation(line: 0, scope: !7119, inlinedAt: !7124)
!7124 = distinct !DILocation(line: 189, column: 2, scope: !7106)
!7125 = !DILocation(line: 1003, column: 3, scope: !7119, inlinedAt: !7124)
!7126 = !{i64 2847420}
!7127 = !DILocation(line: 260, column: 3, scope: !7102, inlinedAt: !7128)
!7128 = distinct !DILocation(line: 1004, column: 3, scope: !7119, inlinedAt: !7124)
!7129 = !DILocation(line: 191, column: 1, scope: !7106)
!7130 = distinct !DISubprogram(name: "arch_swap", scope: !7131, file: !7131, line: 33, type: !7039, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2936, retainedNodes: !7132)
!7131 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7132 = !{!7133}
!7133 = !DILocalVariable(name: "key", arg: 1, scope: !7130, file: !7131, line: 33, type: !32)
!7134 = !DILocation(line: 0, scope: !7130)
!7135 = !DILocation(line: 36, column: 2, scope: !7130)
!7136 = !DILocation(line: 36, column: 17, scope: !7130)
!7137 = !DILocation(line: 36, column: 25, scope: !7130)
!7138 = !DILocation(line: 37, column: 37, scope: !7130)
!7139 = !DILocation(line: 37, column: 17, scope: !7130)
!7140 = !DILocation(line: 37, column: 35, scope: !7130)
!7141 = !DILocation(line: 41, column: 12, scope: !7130)
!7142 = !DILocalVariable(name: "key", arg: 1, scope: !7143, file: !4063, line: 84, type: !32)
!7143 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2936, retainedNodes: !7144)
!7144 = !{!7142}
!7145 = !DILocation(line: 0, scope: !7143, inlinedAt: !7146)
!7146 = distinct !DILocation(line: 44, column: 2, scope: !7130)
!7147 = !DILocation(line: 95, column: 2, scope: !7143, inlinedAt: !7146)
!7148 = !{i64 1965066}
!7149 = !DILocation(line: 53, column: 9, scope: !7130)
!7150 = !DILocation(line: 53, column: 24, scope: !7130)
!7151 = !DILocation(line: 53, column: 2, scope: !7130)
!7152 = distinct !DISubprogram(name: "arch_new_thread", scope: !7153, file: !7153, line: 56, type: !7154, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2964, retainedNodes: !7261)
!7153 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7154 = !DISubroutineType(types: !7155)
!7155 = !{null, !7156, !7256, !443, !5155, !104, !104, !104}
!7156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7157, size: 32)
!7157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !7158)
!7158 = !{!7159, !7217, !7229, !7230, !7231, !7232, !7238, !7251}
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7157, file: !645, line: 247, baseType: !7160, size: 384)
!7160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !7161)
!7161 = !{!7162, !7186, !7193, !7194, !7195, !7204, !7205, !7206}
!7162 = !DIDerivedType(tag: DW_TAG_member, scope: !7160, file: !645, line: 60, baseType: !7163, size: 64)
!7163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7160, file: !645, line: 60, size: 64, elements: !7164)
!7164 = !{!7165, !7180}
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7163, file: !645, line: 61, baseType: !7166, size: 64)
!7166 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7167)
!7167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7168)
!7168 = !{!7169, !7175}
!7169 = !DIDerivedType(tag: DW_TAG_member, scope: !7167, file: !367, line: 38, baseType: !7170, size: 32)
!7170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7167, file: !367, line: 38, size: 32, elements: !7171)
!7171 = !{!7172, !7174}
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7170, file: !367, line: 39, baseType: !7173, size: 32)
!7173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7167, size: 32)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7170, file: !367, line: 40, baseType: !7173, size: 32)
!7175 = !DIDerivedType(tag: DW_TAG_member, scope: !7167, file: !367, line: 42, baseType: !7176, size: 32, offset: 32)
!7176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7167, file: !367, line: 42, size: 32, elements: !7177)
!7177 = !{!7178, !7179}
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7176, file: !367, line: 43, baseType: !7173, size: 32)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7176, file: !367, line: 44, baseType: !7173, size: 32)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7163, file: !645, line: 62, baseType: !7181, size: 64)
!7181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !7182)
!7182 = !{!7183}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7181, file: !670, line: 50, baseType: !7184, size: 64)
!7184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7185, size: 64, elements: !675)
!7185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7181, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7160, file: !645, line: 68, baseType: !7187, size: 32, offset: 64)
!7187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7188, size: 32)
!7188 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7189)
!7189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7190)
!7190 = !{!7191}
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7189, file: !363, line: 232, baseType: !7192, size: 64)
!7192 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7167)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7160, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7160, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!7195 = !DIDerivedType(tag: DW_TAG_member, scope: !7160, file: !645, line: 90, baseType: !7196, size: 16, offset: 112)
!7196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7160, file: !645, line: 90, size: 16, elements: !7197)
!7197 = !{!7198, !7203}
!7198 = !DIDerivedType(tag: DW_TAG_member, scope: !7196, file: !645, line: 91, baseType: !7199, size: 16)
!7199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7196, file: !645, line: 91, size: 16, elements: !7200)
!7200 = !{!7201, !7202}
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7199, file: !645, line: 96, baseType: !693, size: 8)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7199, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7196, file: !645, line: 100, baseType: !168, size: 16)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7160, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7160, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7160, file: !645, line: 131, baseType: !7207, size: 192, offset: 192)
!7207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7208)
!7208 = !{!7209, !7210, !7216}
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7207, file: !363, line: 245, baseType: !7166, size: 64)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7207, file: !363, line: 246, baseType: !7211, size: 32, offset: 64)
!7211 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7212)
!7212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7213, size: 32)
!7213 = !DISubroutineType(types: !7214)
!7214 = !{null, !7215}
!7215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7207, size: 32)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7207, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7157, file: !645, line: 250, baseType: !7218, size: 288, offset: 384)
!7218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !7219)
!7219 = !{!7220, !7221, !7222, !7223, !7224, !7225, !7226, !7227, !7228}
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7218, file: !712, line: 26, baseType: !113, size: 32)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7218, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7218, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7218, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7218, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7218, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7218, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7218, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7218, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7157, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7157, file: !645, line: 256, baseType: !7188, size: 64, offset: 704)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7157, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7157, file: !645, line: 300, baseType: !7233, size: 96, offset: 800)
!7233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !7234)
!7234 = !{!7235, !7236, !7237}
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7233, file: !645, line: 153, baseType: !22, size: 32)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7233, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7233, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7157, file: !645, line: 325, baseType: !7239, size: 32, offset: 896)
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 32)
!7240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !7241)
!7241 = !{!7242, !7248, !7249}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7240, file: !359, line: 5074, baseType: !7243, size: 96)
!7243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !7244)
!7244 = !{!7245, !7246, !7247}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7243, file: !738, line: 57, baseType: !741, size: 32)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7243, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7243, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7240, file: !359, line: 5075, baseType: !7188, size: 64, offset: 96)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7240, file: !359, line: 5076, baseType: !7250, offset: 160)
!7250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7157, file: !645, line: 343, baseType: !7252, size: 64, offset: 928)
!7252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !7253)
!7253 = !{!7254, !7255}
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7252, file: !712, line: 63, baseType: !113, size: 32)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7252, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!7256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7257, size: 32)
!7257 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5156, line: 44, baseType: !7258)
!7258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2350, line: 47, size: 8, elements: !7259)
!7259 = !{!7260}
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7258, file: !2350, line: 48, baseType: !107, size: 8)
!7261 = !{!7262, !7263, !7264, !7265, !7266, !7267, !7268, !7269}
!7262 = !DILocalVariable(name: "thread", arg: 1, scope: !7152, file: !7153, line: 56, type: !7156)
!7263 = !DILocalVariable(name: "stack", arg: 2, scope: !7152, file: !7153, line: 56, type: !7256)
!7264 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7152, file: !7153, line: 57, type: !443)
!7265 = !DILocalVariable(name: "entry", arg: 4, scope: !7152, file: !7153, line: 57, type: !5155)
!7266 = !DILocalVariable(name: "p1", arg: 5, scope: !7152, file: !7153, line: 58, type: !104)
!7267 = !DILocalVariable(name: "p2", arg: 6, scope: !7152, file: !7153, line: 58, type: !104)
!7268 = !DILocalVariable(name: "p3", arg: 7, scope: !7152, file: !7153, line: 58, type: !104)
!7269 = !DILocalVariable(name: "iframe", scope: !7152, file: !7153, line: 60, type: !2967)
!7270 = !DILocation(line: 0, scope: !7152)
!7271 = !DILocation(line: 85, column: 11, scope: !7152)
!7272 = !DILocation(line: 93, column: 10, scope: !7152)
!7273 = !DILocation(line: 98, column: 13, scope: !7152)
!7274 = !DILocation(line: 100, column: 15, scope: !7152)
!7275 = !DILocation(line: 100, column: 10, scope: !7152)
!7276 = !DILocation(line: 100, column: 13, scope: !7152)
!7277 = !DILocation(line: 101, column: 15, scope: !7152)
!7278 = !DILocation(line: 101, column: 10, scope: !7152)
!7279 = !DILocation(line: 101, column: 13, scope: !7152)
!7280 = !DILocation(line: 102, column: 15, scope: !7152)
!7281 = !DILocation(line: 102, column: 10, scope: !7152)
!7282 = !DILocation(line: 102, column: 13, scope: !7152)
!7283 = !DILocation(line: 103, column: 15, scope: !7152)
!7284 = !DILocation(line: 103, column: 10, scope: !7152)
!7285 = !DILocation(line: 103, column: 13, scope: !7152)
!7286 = !DILocation(line: 106, column: 10, scope: !7152)
!7287 = !DILocation(line: 106, column: 15, scope: !7152)
!7288 = !DILocation(line: 122, column: 29, scope: !7152)
!7289 = !DILocation(line: 122, column: 23, scope: !7152)
!7290 = !DILocation(line: 122, column: 27, scope: !7152)
!7291 = !DILocation(line: 123, column: 15, scope: !7152)
!7292 = !DILocation(line: 123, column: 23, scope: !7152)
!7293 = !DILocation(line: 143, column: 1, scope: !7152)
!7294 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7153, file: !7153, line: 385, type: !7295, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2964, retainedNodes: !7298)
!7295 = !DISubroutineType(types: !7296)
!7296 = !{!113, !7297, !7297}
!7297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!7298 = !{!7299, !7300, !7301, !7304}
!7299 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7294, file: !7153, line: 385, type: !7297)
!7300 = !DILocalVariable(name: "psp", arg: 2, scope: !7294, file: !7153, line: 385, type: !7297)
!7301 = !DILocalVariable(name: "thread", scope: !7294, file: !7153, line: 388, type: !7302)
!7302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7303, size: 32)
!7303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7157)
!7304 = !DILocalVariable(name: "guard_len", scope: !7294, file: !7153, line: 405, type: !113)
!7305 = !DILocation(line: 0, scope: !7294)
!7306 = !DILocation(line: 388, column: 34, scope: !7294)
!7307 = !DILocation(line: 390, column: 13, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7294, file: !7153, line: 390, column: 6)
!7309 = !DILocation(line: 390, column: 6, scope: !7294)
!7310 = !DILocation(line: 438, column: 6, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7294, file: !7153, line: 438, column: 6)
!7312 = !DILocation(line: 438, column: 6, scope: !7294)
!7313 = !DILocation(line: 442, column: 3, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7311, file: !7153, line: 440, column: 22)
!7315 = !DILocation(line: 455, column: 1, scope: !7294)
!7316 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7153, file: !7153, line: 530, type: !7317, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2964, retainedNodes: !7319)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{null, !7156, !443, !5155}
!7319 = !{!7320, !7321, !7322}
!7320 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7316, file: !7153, line: 530, type: !7156)
!7321 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7316, file: !7153, line: 530, type: !443)
!7322 = !DILocalVariable(name: "_main", arg: 3, scope: !7316, file: !7153, line: 531, type: !5155)
!7323 = !DILocation(line: 0, scope: !7316)
!7324 = !DILocation(line: 535, column: 11, scope: !7316)
!7325 = !DILocation(line: 560, column: 2, scope: !7316)
!7326 = !DILocation(line: 576, column: 2, scope: !7316)
!7327 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7328 = !DILocation(line: 603, column: 2, scope: !7316)
!7329 = distinct !DISubprogram(name: "z_arm_fault", scope: !7330, file: !7330, line: 1036, type: !7331, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7346)
!7330 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7331 = !DISubroutineType(types: !7332)
!7332 = !{null, !113, !113, !113, !7333}
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 32)
!7334 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !712, line: 37, baseType: !7335)
!7335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !7336)
!7336 = !{!7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345}
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7335, file: !712, line: 26, baseType: !113, size: 32)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7335, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7335, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7335, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7335, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7335, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7335, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7335, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7335, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!7346 = !{!7347, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356}
!7347 = !DILocalVariable(name: "msp", arg: 1, scope: !7329, file: !7330, line: 1036, type: !113)
!7348 = !DILocalVariable(name: "psp", arg: 2, scope: !7329, file: !7330, line: 1036, type: !113)
!7349 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7329, file: !7330, line: 1036, type: !113)
!7350 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7329, file: !7330, line: 1037, type: !7333)
!7351 = !DILocalVariable(name: "reason", scope: !7329, file: !7330, line: 1039, type: !113)
!7352 = !DILocalVariable(name: "fault", scope: !7329, file: !7330, line: 1040, type: !108)
!7353 = !DILocalVariable(name: "recoverable", scope: !7329, file: !7330, line: 1041, type: !422)
!7354 = !DILocalVariable(name: "nested_exc", scope: !7329, file: !7330, line: 1041, type: !422)
!7355 = !DILocalVariable(name: "esf", scope: !7329, file: !7330, line: 1042, type: !3035)
!7356 = !DILocalVariable(name: "esf_copy", scope: !7329, file: !7330, line: 1047, type: !3036)
!7357 = !DILocation(line: 0, scope: !7329)
!7358 = !DILocation(line: 1040, column: 19, scope: !7329)
!7359 = !DILocation(line: 1040, column: 24, scope: !7329)
!7360 = !DILocation(line: 1041, column: 2, scope: !7329)
!7361 = !DILocation(line: 1047, column: 2, scope: !7329)
!7362 = !DILocation(line: 1047, column: 15, scope: !7329)
!7363 = !DILocalVariable(name: "key", arg: 1, scope: !7364, file: !4063, line: 84, type: !32)
!7364 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7365)
!7365 = !{!7363}
!7366 = !DILocation(line: 0, scope: !7364, inlinedAt: !7367)
!7367 = distinct !DILocation(line: 1050, column: 2, scope: !7329)
!7368 = !DILocation(line: 95, column: 2, scope: !7364, inlinedAt: !7367)
!7369 = !{i64 1998310}
!7370 = !DILocation(line: 1055, column: 9, scope: !7329)
!7371 = !DILocation(line: 1063, column: 11, scope: !7329)
!7372 = !DILocation(line: 1064, column: 6, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7329, file: !7330, line: 1064, column: 6)
!7374 = !{i8 0, i8 2}
!7375 = !DILocation(line: 1064, column: 6, scope: !7329)
!7376 = !DILocation(line: 1070, column: 20, scope: !7329)
!7377 = !DILocation(line: 1070, column: 2, scope: !7329)
!7378 = !DILocation(line: 1089, column: 6, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7329, file: !7330, line: 1089, column: 6)
!7380 = !DILocation(line: 0, scope: !7379)
!7381 = !DILocation(line: 1089, column: 6, scope: !7329)
!7382 = !DILocation(line: 1090, column: 28, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !7330, line: 1090, column: 7)
!7384 = distinct !DILexicalBlock(scope: !7379, file: !7330, line: 1089, column: 18)
!7385 = !DILocation(line: 1090, column: 44, scope: !7383)
!7386 = !DILocation(line: 1090, column: 7, scope: !7384)
!7387 = !DILocation(line: 1091, column: 24, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7383, file: !7330, line: 1090, column: 50)
!7389 = !DILocation(line: 1092, column: 3, scope: !7388)
!7390 = !DILocation(line: 1094, column: 23, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7379, file: !7330, line: 1093, column: 9)
!7392 = !DILocation(line: 1097, column: 2, scope: !7329)
!7393 = !DILocation(line: 1098, column: 1, scope: !7329)
!7394 = distinct !DISubprogram(name: "get_esf", scope: !7330, file: !7330, line: 894, type: !7395, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7398)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{!3035, !113, !113, !113, !7397}
!7397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!7398 = !{!7399, !7400, !7401, !7402, !7403, !7404}
!7399 = !DILocalVariable(name: "msp", arg: 1, scope: !7394, file: !7330, line: 894, type: !113)
!7400 = !DILocalVariable(name: "psp", arg: 2, scope: !7394, file: !7330, line: 894, type: !113)
!7401 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7394, file: !7330, line: 894, type: !113)
!7402 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7394, file: !7330, line: 895, type: !7397)
!7403 = !DILocalVariable(name: "alternative_state_exc", scope: !7394, file: !7330, line: 897, type: !422)
!7404 = !DILocalVariable(name: "ptr_esf", scope: !7394, file: !7330, line: 898, type: !3035)
!7405 = !DILocation(line: 0, scope: !7394)
!7406 = !DILocation(line: 900, column: 14, scope: !7394)
!7407 = !DILocation(line: 902, column: 49, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7394, file: !7330, line: 902, column: 6)
!7409 = !DILocation(line: 902, column: 6, scope: !7394)
!7410 = !DILocation(line: 983, column: 44, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7394, file: !7330, line: 983, column: 6)
!7412 = !DILocation(line: 985, column: 3, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !7330, line: 985, column: 3)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !7330, line: 985, column: 3)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !7330, line: 985, column: 3)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !7330, line: 985, column: 3)
!7417 = distinct !DILexicalBlock(scope: !7411, file: !7330, line: 984, column: 47)
!7418 = !DILocation(line: 986, column: 3, scope: !7417)
!7419 = !DILocation(line: 983, column: 18, scope: !7411)
!7420 = !DILocation(line: 991, column: 7, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !7330, line: 990, column: 30)
!7422 = distinct !DILexicalBlock(scope: !7394, file: !7330, line: 990, column: 6)
!7423 = !DILocation(line: 998, column: 16, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !7330, line: 995, column: 10)
!7425 = distinct !DILexicalBlock(scope: !7421, file: !7330, line: 991, column: 7)
!7426 = !DILocation(line: 1002, column: 2, scope: !7394)
!7427 = !DILocation(line: 1003, column: 1, scope: !7394)
!7428 = distinct !DISubprogram(name: "fault_handle", scope: !7330, file: !7330, line: 786, type: !7429, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7431)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{!113, !3035, !108, !7397}
!7431 = !{!7432, !7433, !7434, !7435}
!7432 = !DILocalVariable(name: "esf", arg: 1, scope: !7428, file: !7330, line: 786, type: !3035)
!7433 = !DILocalVariable(name: "fault", arg: 2, scope: !7428, file: !7330, line: 786, type: !108)
!7434 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7428, file: !7330, line: 786, type: !7397)
!7435 = !DILocalVariable(name: "reason", scope: !7428, file: !7330, line: 788, type: !113)
!7436 = !DILocation(line: 0, scope: !7428)
!7437 = !DILocation(line: 790, column: 15, scope: !7428)
!7438 = !DILocation(line: 792, column: 2, scope: !7428)
!7439 = !DILocation(line: 794, column: 12, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7428, file: !7330, line: 792, column: 17)
!7441 = !DILocation(line: 795, column: 3, scope: !7440)
!7442 = !DILocation(line: 800, column: 12, scope: !7440)
!7443 = !DILocation(line: 801, column: 3, scope: !7440)
!7444 = !DILocation(line: 803, column: 12, scope: !7440)
!7445 = !DILocation(line: 804, column: 3, scope: !7440)
!7446 = !DILocation(line: 806, column: 12, scope: !7440)
!7447 = !DILocation(line: 807, column: 3, scope: !7440)
!7448 = !DILocation(line: 814, column: 3, scope: !7440)
!7449 = !DILocation(line: 815, column: 3, scope: !7440)
!7450 = !DILocation(line: 820, column: 3, scope: !7440)
!7451 = !DILocation(line: 821, column: 3, scope: !7440)
!7452 = !DILocation(line: 829, column: 2, scope: !7428)
!7453 = distinct !DISubprogram(name: "hard_fault", scope: !7330, file: !7330, line: 709, type: !7454, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7456)
!7454 = !DISubroutineType(types: !7455)
!7455 = !{!113, !3035, !7397}
!7456 = !{!7457, !7458, !7459}
!7457 = !DILocalVariable(name: "esf", arg: 1, scope: !7453, file: !7330, line: 709, type: !3035)
!7458 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7453, file: !7330, line: 709, type: !7397)
!7459 = !DILocalVariable(name: "reason", scope: !7453, file: !7330, line: 711, type: !113)
!7460 = !DILocation(line: 0, scope: !7453)
!7461 = !DILocation(line: 713, column: 2, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !7330, line: 713, column: 2)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !7330, line: 713, column: 2)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !7330, line: 713, column: 2)
!7465 = distinct !DILexicalBlock(scope: !7453, file: !7330, line: 713, column: 2)
!7466 = !DILocation(line: 732, column: 15, scope: !7453)
!7467 = !DILocation(line: 734, column: 12, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7453, file: !7330, line: 734, column: 6)
!7469 = !DILocation(line: 734, column: 17, scope: !7468)
!7470 = !DILocation(line: 734, column: 41, scope: !7468)
!7471 = !DILocation(line: 734, column: 6, scope: !7453)
!7472 = !DILocation(line: 735, column: 3, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !7330, line: 735, column: 3)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !7330, line: 735, column: 3)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !7330, line: 735, column: 3)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !7330, line: 735, column: 3)
!7477 = distinct !DILexicalBlock(scope: !7468, file: !7330, line: 734, column: 47)
!7478 = !DILocation(line: 736, column: 2, scope: !7477)
!7479 = !DILocation(line: 736, column: 19, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7468, file: !7330, line: 736, column: 13)
!7481 = !DILocation(line: 736, column: 49, scope: !7480)
!7482 = !DILocation(line: 736, column: 13, scope: !7468)
!7483 = !DILocation(line: 737, column: 3, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !7330, line: 737, column: 3)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !7330, line: 737, column: 3)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !7330, line: 737, column: 3)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !7330, line: 737, column: 3)
!7488 = distinct !DILexicalBlock(scope: !7480, file: !7330, line: 736, column: 55)
!7489 = !DILocation(line: 738, column: 2, scope: !7488)
!7490 = !DILocation(line: 738, column: 19, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7480, file: !7330, line: 738, column: 13)
!7492 = !DILocation(line: 738, column: 24, scope: !7491)
!7493 = !DILocation(line: 738, column: 47, scope: !7491)
!7494 = !DILocation(line: 738, column: 13, scope: !7480)
!7495 = !DILocation(line: 739, column: 3, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !7330, line: 739, column: 3)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !7330, line: 739, column: 3)
!7498 = distinct !DILexicalBlock(scope: !7499, file: !7330, line: 739, column: 3)
!7499 = distinct !DILexicalBlock(scope: !7500, file: !7330, line: 739, column: 3)
!7500 = distinct !DILexicalBlock(scope: !7491, file: !7330, line: 738, column: 53)
!7501 = !DILocation(line: 740, column: 7, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7500, file: !7330, line: 740, column: 7)
!7503 = !DILocation(line: 740, column: 7, scope: !7500)
!7504 = !DILocation(line: 741, column: 4, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !7330, line: 741, column: 4)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !7330, line: 741, column: 4)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !7330, line: 741, column: 4)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !7330, line: 741, column: 4)
!7509 = distinct !DILexicalBlock(scope: !7502, file: !7330, line: 740, column: 38)
!7510 = !DILocation(line: 742, column: 24, scope: !7509)
!7511 = !DILocation(line: 743, column: 3, scope: !7509)
!7512 = !DILocation(line: 743, column: 20, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7502, file: !7330, line: 743, column: 14)
!7514 = !DILocation(line: 743, column: 25, scope: !7513)
!7515 = !DILocation(line: 743, column: 52, scope: !7513)
!7516 = !DILocation(line: 743, column: 14, scope: !7502)
!7517 = !DILocation(line: 744, column: 13, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7513, file: !7330, line: 743, column: 58)
!7519 = !DILocation(line: 745, column: 3, scope: !7518)
!7520 = !DILocation(line: 745, column: 20, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7513, file: !7330, line: 745, column: 14)
!7522 = !DILocation(line: 745, column: 25, scope: !7521)
!7523 = !DILocation(line: 745, column: 52, scope: !7521)
!7524 = !DILocation(line: 745, column: 14, scope: !7513)
!7525 = !DILocation(line: 746, column: 13, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7521, file: !7330, line: 745, column: 58)
!7527 = !DILocation(line: 747, column: 3, scope: !7526)
!7528 = !DILocation(line: 747, column: 20, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7521, file: !7330, line: 747, column: 14)
!7530 = !DILocation(line: 747, column: 52, scope: !7529)
!7531 = !DILocation(line: 747, column: 14, scope: !7521)
!7532 = !DILocation(line: 748, column: 13, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7529, file: !7330, line: 747, column: 58)
!7534 = !DILocation(line: 753, column: 3, scope: !7533)
!7535 = !DILocation(line: 766, column: 2, scope: !7453)
!7536 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7330, file: !7330, line: 229, type: !7429, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7537)
!7537 = !{!7538, !7539, !7540, !7541, !7542, !7543, !7546}
!7538 = !DILocalVariable(name: "esf", arg: 1, scope: !7536, file: !7330, line: 229, type: !3035)
!7539 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7536, file: !7330, line: 229, type: !108)
!7540 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7536, file: !7330, line: 230, type: !7397)
!7541 = !DILocalVariable(name: "reason", scope: !7536, file: !7330, line: 232, type: !113)
!7542 = !DILocalVariable(name: "mmfar", scope: !7536, file: !7330, line: 233, type: !113)
!7543 = !DILocalVariable(name: "temp", scope: !7544, file: !7330, line: 254, type: !113)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !7330, line: 244, column: 48)
!7545 = distinct !DILexicalBlock(scope: !7536, file: !7330, line: 244, column: 6)
!7546 = !DILocalVariable(name: "min_stack_ptr", scope: !7547, file: !7330, line: 309, type: !113)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !7330, line: 308, column: 43)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !7330, line: 308, column: 7)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !7330, line: 289, column: 40)
!7550 = distinct !DILexicalBlock(scope: !7536, file: !7330, line: 288, column: 6)
!7551 = !DILocation(line: 0, scope: !7536)
!7552 = !DILocation(line: 235, column: 2, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !7330, line: 235, column: 2)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !7330, line: 235, column: 2)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !7330, line: 235, column: 2)
!7556 = distinct !DILexicalBlock(scope: !7536, file: !7330, line: 235, column: 2)
!7557 = !DILocation(line: 237, column: 12, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7536, file: !7330, line: 237, column: 6)
!7559 = !DILocation(line: 237, column: 17, scope: !7558)
!7560 = !DILocation(line: 237, column: 41, scope: !7558)
!7561 = !DILocation(line: 237, column: 6, scope: !7536)
!7562 = !DILocation(line: 238, column: 3, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !7330, line: 238, column: 3)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !7330, line: 238, column: 3)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !7330, line: 238, column: 3)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !7330, line: 238, column: 3)
!7567 = distinct !DILexicalBlock(scope: !7558, file: !7330, line: 237, column: 47)
!7568 = !DILocation(line: 240, column: 2, scope: !7567)
!7569 = !DILocation(line: 241, column: 12, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7536, file: !7330, line: 241, column: 6)
!7571 = !DILocation(line: 241, column: 17, scope: !7570)
!7572 = !DILocation(line: 241, column: 43, scope: !7570)
!7573 = !DILocation(line: 241, column: 6, scope: !7536)
!7574 = !DILocation(line: 242, column: 3, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !7330, line: 242, column: 3)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !7330, line: 242, column: 3)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !7330, line: 242, column: 3)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !7330, line: 242, column: 3)
!7579 = distinct !DILexicalBlock(scope: !7570, file: !7330, line: 241, column: 49)
!7580 = !DILocation(line: 243, column: 2, scope: !7579)
!7581 = !DILocation(line: 244, column: 12, scope: !7545)
!7582 = !DILocation(line: 244, column: 17, scope: !7545)
!7583 = !DILocation(line: 244, column: 42, scope: !7545)
!7584 = !DILocation(line: 244, column: 6, scope: !7536)
!7585 = !DILocation(line: 245, column: 3, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !7330, line: 245, column: 3)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !7330, line: 245, column: 3)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !7330, line: 245, column: 3)
!7589 = distinct !DILexicalBlock(scope: !7544, file: !7330, line: 245, column: 3)
!7590 = !DILocation(line: 254, column: 24, scope: !7544)
!7591 = !DILocation(line: 0, scope: !7544)
!7592 = !DILocation(line: 256, column: 13, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7544, file: !7330, line: 256, column: 7)
!7594 = !DILocation(line: 256, column: 18, scope: !7593)
!7595 = !DILocation(line: 256, column: 44, scope: !7593)
!7596 = !DILocation(line: 256, column: 7, scope: !7544)
!7597 = !DILocation(line: 258, column: 4, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !7330, line: 258, column: 4)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !7330, line: 258, column: 4)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !7330, line: 258, column: 4)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !7330, line: 258, column: 4)
!7602 = distinct !DILexicalBlock(scope: !7593, file: !7330, line: 256, column: 50)
!7603 = !DILocation(line: 259, column: 24, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7602, file: !7330, line: 259, column: 8)
!7605 = !DILocation(line: 259, column: 8, scope: !7602)
!7606 = !DILocation(line: 261, column: 15, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7604, file: !7330, line: 259, column: 30)
!7608 = !DILocation(line: 262, column: 4, scope: !7607)
!7609 = !DILocation(line: 265, column: 12, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7536, file: !7330, line: 265, column: 6)
!7611 = !DILocation(line: 265, column: 17, scope: !7610)
!7612 = !DILocation(line: 265, column: 42, scope: !7610)
!7613 = !DILocation(line: 265, column: 6, scope: !7536)
!7614 = !DILocation(line: 266, column: 3, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7616, file: !7330, line: 266, column: 3)
!7616 = distinct !DILexicalBlock(scope: !7617, file: !7330, line: 266, column: 3)
!7617 = distinct !DILexicalBlock(scope: !7618, file: !7330, line: 266, column: 3)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !7330, line: 266, column: 3)
!7619 = distinct !DILexicalBlock(scope: !7610, file: !7330, line: 265, column: 48)
!7620 = !DILocation(line: 267, column: 2, scope: !7619)
!7621 = !DILocation(line: 269, column: 12, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7536, file: !7330, line: 269, column: 6)
!7623 = !DILocation(line: 269, column: 17, scope: !7622)
!7624 = !DILocation(line: 269, column: 41, scope: !7622)
!7625 = !DILocation(line: 269, column: 6, scope: !7536)
!7626 = !DILocation(line: 270, column: 3, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !7330, line: 270, column: 3)
!7628 = distinct !DILexicalBlock(scope: !7629, file: !7330, line: 270, column: 3)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !7330, line: 270, column: 3)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !7330, line: 270, column: 3)
!7631 = distinct !DILexicalBlock(scope: !7622, file: !7330, line: 269, column: 47)
!7632 = !DILocation(line: 272, column: 2, scope: !7631)
!7633 = !DILocation(line: 288, column: 12, scope: !7550)
!7634 = !DILocation(line: 288, column: 17, scope: !7550)
!7635 = !DILocation(line: 288, column: 41, scope: !7550)
!7636 = !DILocation(line: 289, column: 9, scope: !7550)
!7637 = !DILocation(line: 289, column: 14, scope: !7550)
!7638 = !DILocation(line: 288, column: 6, scope: !7536)
!7639 = !DILocation(line: 308, column: 12, scope: !7548)
!7640 = !DILocation(line: 308, column: 17, scope: !7548)
!7641 = !DILocation(line: 308, column: 7, scope: !7549)
!7642 = !DILocation(line: 310, column: 6, scope: !7547)
!7643 = !DILocation(line: 309, column: 29, scope: !7547)
!7644 = !DILocation(line: 0, scope: !7547)
!7645 = !DILocation(line: 312, column: 8, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7547, file: !7330, line: 312, column: 8)
!7647 = !DILocation(line: 312, column: 8, scope: !7547)
!7648 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7649, file: !7029, line: 1099, type: !113)
!7649 = distinct !DISubprogram(name: "__set_PSP", scope: !7029, file: !7029, line: 1099, type: !7120, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7650)
!7650 = !{!7648}
!7651 = !DILocation(line: 0, scope: !7649, inlinedAt: !7652)
!7652 = distinct !DILocation(line: 338, column: 5, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7646, file: !7330, line: 312, column: 23)
!7654 = !DILocation(line: 1101, column: 3, scope: !7649, inlinedAt: !7652)
!7655 = !{i64 2876839}
!7656 = !DILocation(line: 341, column: 4, scope: !7653)
!7657 = !DILocation(line: 360, column: 12, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7536, file: !7330, line: 360, column: 6)
!7659 = !DILocation(line: 360, column: 17, scope: !7658)
!7660 = !DILocation(line: 360, column: 41, scope: !7658)
!7661 = !DILocation(line: 360, column: 6, scope: !7536)
!7662 = !DILocation(line: 361, column: 14, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7658, file: !7330, line: 360, column: 47)
!7664 = !DILocation(line: 362, column: 2, scope: !7663)
!7665 = !DILocation(line: 366, column: 12, scope: !7536)
!7666 = !DILocation(line: 369, column: 15, scope: !7536)
!7667 = !DILocation(line: 371, column: 2, scope: !7536)
!7668 = distinct !DISubprogram(name: "bus_fault", scope: !7330, file: !7330, line: 383, type: !7669, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7671)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!108, !3035, !108, !7397}
!7671 = !{!7672, !7673, !7674, !7675, !7676}
!7672 = !DILocalVariable(name: "esf", arg: 1, scope: !7668, file: !7330, line: 383, type: !3035)
!7673 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7668, file: !7330, line: 383, type: !108)
!7674 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7668, file: !7330, line: 383, type: !7397)
!7675 = !DILocalVariable(name: "reason", scope: !7668, file: !7330, line: 385, type: !113)
!7676 = !DILocalVariable(name: "bfar", scope: !7677, file: !7330, line: 405, type: !113)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !7330, line: 395, column: 42)
!7678 = distinct !DILexicalBlock(scope: !7668, file: !7330, line: 395, column: 6)
!7679 = !DILocation(line: 0, scope: !7668)
!7680 = !DILocation(line: 387, column: 2, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !7330, line: 387, column: 2)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !7330, line: 387, column: 2)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !7330, line: 387, column: 2)
!7684 = distinct !DILexicalBlock(scope: !7668, file: !7330, line: 387, column: 2)
!7685 = !DILocation(line: 389, column: 11, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7668, file: !7330, line: 389, column: 6)
!7687 = !DILocation(line: 389, column: 16, scope: !7686)
!7688 = !DILocation(line: 389, column: 6, scope: !7668)
!7689 = !DILocation(line: 390, column: 3, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7330, line: 390, column: 3)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !7330, line: 390, column: 3)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !7330, line: 390, column: 3)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !7330, line: 390, column: 3)
!7694 = distinct !DILexicalBlock(scope: !7686, file: !7330, line: 389, column: 39)
!7695 = !DILocation(line: 391, column: 2, scope: !7694)
!7696 = !DILocation(line: 392, column: 11, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7668, file: !7330, line: 392, column: 6)
!7698 = !DILocation(line: 392, column: 16, scope: !7697)
!7699 = !DILocation(line: 392, column: 6, scope: !7668)
!7700 = !DILocation(line: 393, column: 3, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !7330, line: 393, column: 3)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !7330, line: 393, column: 3)
!7703 = distinct !DILexicalBlock(scope: !7704, file: !7330, line: 393, column: 3)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !7330, line: 393, column: 3)
!7705 = distinct !DILexicalBlock(scope: !7697, file: !7330, line: 392, column: 41)
!7706 = !DILocation(line: 394, column: 2, scope: !7705)
!7707 = !DILocation(line: 395, column: 11, scope: !7678)
!7708 = !DILocation(line: 395, column: 16, scope: !7678)
!7709 = !DILocation(line: 395, column: 6, scope: !7668)
!7710 = !DILocation(line: 396, column: 3, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !7330, line: 396, column: 3)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7330, line: 396, column: 3)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !7330, line: 396, column: 3)
!7714 = distinct !DILexicalBlock(scope: !7677, file: !7330, line: 396, column: 3)
!7715 = !DILocation(line: 405, column: 3, scope: !7677)
!7716 = !DILocation(line: 0, scope: !7677)
!7717 = !DILocation(line: 407, column: 13, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7677, file: !7330, line: 407, column: 7)
!7719 = !DILocation(line: 407, column: 18, scope: !7718)
!7720 = !DILocation(line: 407, column: 44, scope: !7718)
!7721 = !DILocation(line: 407, column: 7, scope: !7677)
!7722 = !DILocation(line: 408, column: 4, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !7330, line: 408, column: 4)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !7330, line: 408, column: 4)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7330, line: 408, column: 4)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7330, line: 408, column: 4)
!7727 = distinct !DILexicalBlock(scope: !7718, file: !7330, line: 407, column: 50)
!7728 = !DILocation(line: 409, column: 24, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7727, file: !7330, line: 409, column: 8)
!7730 = !DILocation(line: 409, column: 8, scope: !7727)
!7731 = !DILocation(line: 411, column: 15, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7729, file: !7330, line: 409, column: 30)
!7733 = !DILocation(line: 412, column: 4, scope: !7732)
!7734 = !DILocation(line: 415, column: 11, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7668, file: !7330, line: 415, column: 6)
!7736 = !DILocation(line: 415, column: 16, scope: !7735)
!7737 = !DILocation(line: 415, column: 6, scope: !7668)
!7738 = !DILocation(line: 416, column: 3, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !7330, line: 416, column: 3)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !7330, line: 416, column: 3)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !7330, line: 416, column: 3)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !7330, line: 416, column: 3)
!7743 = distinct !DILexicalBlock(scope: !7735, file: !7330, line: 415, column: 44)
!7744 = !DILocation(line: 417, column: 2, scope: !7743)
!7745 = !DILocation(line: 418, column: 12, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7668, file: !7330, line: 418, column: 6)
!7747 = !DILocation(line: 418, column: 17, scope: !7746)
!7748 = !DILocation(line: 418, column: 41, scope: !7746)
!7749 = !DILocation(line: 418, column: 6, scope: !7668)
!7750 = !DILocation(line: 423, column: 18, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7746, file: !7330, line: 423, column: 13)
!7752 = !DILocation(line: 423, column: 23, scope: !7751)
!7753 = !DILocation(line: 423, column: 13, scope: !7746)
!7754 = !DILocation(line: 0, scope: !7746)
!7755 = !DILocation(line: 524, column: 12, scope: !7668)
!7756 = !DILocation(line: 526, column: 15, scope: !7668)
!7757 = !DILocation(line: 528, column: 2, scope: !7668)
!7758 = distinct !DISubprogram(name: "usage_fault", scope: !7330, file: !7330, line: 539, type: !7759, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7763)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{!113, !7761}
!7761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7762, size: 32)
!7762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3036)
!7763 = !{!7764, !7765}
!7764 = !DILocalVariable(name: "esf", arg: 1, scope: !7758, file: !7330, line: 539, type: !7761)
!7765 = !DILocalVariable(name: "reason", scope: !7758, file: !7330, line: 541, type: !113)
!7766 = !DILocation(line: 0, scope: !7758)
!7767 = !DILocation(line: 543, column: 2, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !7330, line: 543, column: 2)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !7330, line: 543, column: 2)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7330, line: 543, column: 2)
!7771 = distinct !DILexicalBlock(scope: !7758, file: !7330, line: 543, column: 2)
!7772 = !DILocation(line: 546, column: 12, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7758, file: !7330, line: 546, column: 6)
!7774 = !DILocation(line: 546, column: 17, scope: !7773)
!7775 = !DILocation(line: 546, column: 43, scope: !7773)
!7776 = !DILocation(line: 546, column: 6, scope: !7758)
!7777 = !DILocation(line: 547, column: 3, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !7330, line: 547, column: 3)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !7330, line: 547, column: 3)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7330, line: 547, column: 3)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !7330, line: 547, column: 3)
!7782 = distinct !DILexicalBlock(scope: !7773, file: !7330, line: 546, column: 49)
!7783 = !DILocation(line: 548, column: 2, scope: !7782)
!7784 = !DILocation(line: 549, column: 12, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7758, file: !7330, line: 549, column: 6)
!7786 = !DILocation(line: 549, column: 17, scope: !7785)
!7787 = !DILocation(line: 549, column: 43, scope: !7785)
!7788 = !DILocation(line: 549, column: 6, scope: !7758)
!7789 = !DILocation(line: 550, column: 3, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7330, line: 550, column: 3)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !7330, line: 550, column: 3)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !7330, line: 550, column: 3)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !7330, line: 550, column: 3)
!7794 = distinct !DILexicalBlock(scope: !7785, file: !7330, line: 549, column: 49)
!7795 = !DILocation(line: 551, column: 2, scope: !7794)
!7796 = !DILocation(line: 567, column: 12, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7758, file: !7330, line: 567, column: 6)
!7798 = !DILocation(line: 567, column: 17, scope: !7797)
!7799 = !DILocation(line: 567, column: 38, scope: !7797)
!7800 = !DILocation(line: 567, column: 6, scope: !7758)
!7801 = !DILocation(line: 568, column: 3, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7330, line: 568, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !7330, line: 568, column: 3)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !7330, line: 568, column: 3)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !7330, line: 568, column: 3)
!7806 = distinct !DILexicalBlock(scope: !7797, file: !7330, line: 567, column: 44)
!7807 = !DILocation(line: 569, column: 2, scope: !7806)
!7808 = !DILocation(line: 570, column: 12, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7758, file: !7330, line: 570, column: 6)
!7810 = !DILocation(line: 570, column: 17, scope: !7809)
!7811 = !DILocation(line: 570, column: 39, scope: !7809)
!7812 = !DILocation(line: 570, column: 6, scope: !7758)
!7813 = !DILocation(line: 571, column: 3, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !7330, line: 571, column: 3)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7330, line: 571, column: 3)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !7330, line: 571, column: 3)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !7330, line: 571, column: 3)
!7818 = distinct !DILexicalBlock(scope: !7809, file: !7330, line: 570, column: 45)
!7819 = !DILocation(line: 572, column: 2, scope: !7818)
!7820 = !DILocation(line: 573, column: 12, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7758, file: !7330, line: 573, column: 6)
!7822 = !DILocation(line: 573, column: 17, scope: !7821)
!7823 = !DILocation(line: 573, column: 42, scope: !7821)
!7824 = !DILocation(line: 573, column: 6, scope: !7758)
!7825 = !DILocation(line: 574, column: 3, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !7330, line: 574, column: 3)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !7330, line: 574, column: 3)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !7330, line: 574, column: 3)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !7330, line: 574, column: 3)
!7830 = distinct !DILexicalBlock(scope: !7821, file: !7330, line: 573, column: 48)
!7831 = !DILocation(line: 575, column: 2, scope: !7830)
!7832 = !DILocation(line: 576, column: 12, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7758, file: !7330, line: 576, column: 6)
!7834 = !DILocation(line: 576, column: 17, scope: !7833)
!7835 = !DILocation(line: 576, column: 44, scope: !7833)
!7836 = !DILocation(line: 576, column: 6, scope: !7758)
!7837 = !DILocation(line: 577, column: 3, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !7330, line: 577, column: 3)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !7330, line: 577, column: 3)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !7330, line: 577, column: 3)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !7330, line: 577, column: 3)
!7842 = distinct !DILexicalBlock(scope: !7833, file: !7330, line: 576, column: 50)
!7843 = !DILocation(line: 578, column: 2, scope: !7842)
!7844 = !DILocation(line: 581, column: 12, scope: !7758)
!7845 = !DILocation(line: 583, column: 2, scope: !7758)
!7846 = distinct !DISubprogram(name: "debug_monitor", scope: !7330, file: !7330, line: 632, type: !7847, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7849)
!7847 = !DISubroutineType(types: !7848)
!7848 = !{null, !3035, !7397}
!7849 = !{!7850, !7851}
!7850 = !DILocalVariable(name: "esf", arg: 1, scope: !7846, file: !7330, line: 632, type: !3035)
!7851 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7846, file: !7330, line: 632, type: !7397)
!7852 = !DILocation(line: 0, scope: !7846)
!7853 = !DILocation(line: 634, column: 15, scope: !7846)
!7854 = !DILocation(line: 636, column: 2, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7856, file: !7330, line: 636, column: 2)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !7330, line: 636, column: 2)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !7330, line: 636, column: 2)
!7858 = distinct !DILexicalBlock(scope: !7846, file: !7330, line: 636, column: 2)
!7859 = !DILocation(line: 652, column: 1, scope: !7846)
!7860 = distinct !DISubprogram(name: "reserved_exception", scope: !7330, file: !7330, line: 776, type: !7861, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7863)
!7861 = !DISubroutineType(types: !7862)
!7862 = !{null, !7761, !108}
!7863 = !{!7864, !7865}
!7864 = !DILocalVariable(name: "esf", arg: 1, scope: !7860, file: !7330, line: 776, type: !7761)
!7865 = !DILocalVariable(name: "fault", arg: 2, scope: !7860, file: !7330, line: 776, type: !108)
!7866 = !DILocation(line: 0, scope: !7860)
!7867 = !DILocation(line: 780, column: 2, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !7330, line: 780, column: 2)
!7869 = distinct !DILexicalBlock(scope: !7870, file: !7330, line: 780, column: 2)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !7330, line: 780, column: 2)
!7871 = distinct !DILexicalBlock(scope: !7860, file: !7330, line: 780, column: 2)
!7872 = !DILocation(line: 783, column: 1, scope: !7860)
!7873 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7330, file: !7330, line: 658, type: !7874, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !7876)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{!422, !3035}
!7876 = !{!7877, !7878, !7879}
!7877 = !DILocalVariable(name: "esf", arg: 1, scope: !7873, file: !7330, line: 658, type: !3035)
!7878 = !DILocalVariable(name: "ret_addr", scope: !7873, file: !7330, line: 660, type: !3078)
!7879 = !DILocalVariable(name: "fault_insn", scope: !7873, file: !7330, line: 686, type: !168)
!7880 = !DILocation(line: 0, scope: !7873)
!7881 = !DILocation(line: 660, column: 46, scope: !7873)
!7882 = !DILocation(line: 660, column: 23, scope: !7873)
!7883 = !DILocation(line: 682, column: 11, scope: !7873)
!7884 = !DILocation(line: 271, column: 3, scope: !7885, inlinedAt: !7886)
!7885 = distinct !DISubprogram(name: "__DSB", scope: !7029, file: !7029, line: 269, type: !3389, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !437)
!7886 = distinct !DILocation(line: 683, column: 2, scope: !7873)
!7887 = !{i64 2852974}
!7888 = !DILocation(line: 260, column: 3, scope: !7889, inlinedAt: !7890)
!7889 = distinct !DISubprogram(name: "__ISB", scope: !7029, file: !7029, line: 258, type: !3389, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !437)
!7890 = distinct !DILocation(line: 684, column: 2, scope: !7873)
!7891 = !{i64 2852691}
!7892 = !DILocation(line: 686, column: 35, scope: !7873)
!7893 = !DILocation(line: 686, column: 24, scope: !7873)
!7894 = !DILocation(line: 688, column: 11, scope: !7873)
!7895 = !DILocation(line: 271, column: 3, scope: !7885, inlinedAt: !7896)
!7896 = distinct !DILocation(line: 689, column: 2, scope: !7873)
!7897 = !DILocation(line: 260, column: 3, scope: !7889, inlinedAt: !7898)
!7898 = distinct !DILocation(line: 690, column: 2, scope: !7873)
!7899 = !DILocation(line: 693, column: 45, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7873, file: !7330, line: 693, column: 6)
!7901 = !DILocation(line: 699, column: 1, scope: !7873)
!7902 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7330, file: !7330, line: 1107, type: !3389, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !437)
!7903 = !DILocation(line: 1111, column: 11, scope: !7902)
!7904 = !DILocation(line: 1136, column: 1, scope: !7902)
!7905 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7906, file: !7906, line: 26, type: !3389, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !7907)
!7906 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7907 = !{!7908}
!7908 = !DILocalVariable(name: "irq", scope: !7905, file: !7906, line: 28, type: !108)
!7909 = !DILocation(line: 0, scope: !7905)
!7910 = !DILocation(line: 30, column: 2, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7905, file: !7906, line: 30, column: 2)
!7912 = !DILocation(line: 31, column: 3, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !7906, line: 30, column: 39)
!7914 = distinct !DILexicalBlock(scope: !7911, file: !7906, line: 30, column: 2)
!7915 = !DILocation(line: 30, column: 35, scope: !7914)
!7916 = !DILocation(line: 30, column: 13, scope: !7914)
!7917 = distinct !{!7917, !7910, !7918}
!7918 = !DILocation(line: 32, column: 2, scope: !7911)
!7919 = !DILocation(line: 33, column: 1, scope: !7905)
!7920 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !788, file: !788, line: 1814, type: !7063, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !7921)
!7921 = !{!7922, !7923}
!7922 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7920, file: !788, line: 1814, type: !1148)
!7923 = !DILocalVariable(name: "priority", arg: 2, scope: !7920, file: !788, line: 1814, type: !113)
!7924 = !DILocation(line: 0, scope: !7920)
!7925 = !DILocation(line: 1816, column: 7, scope: !7920)
!7926 = !DILocation(line: 0, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7920, file: !788, line: 1816, column: 7)
!7928 = !DILocation(line: 1824, column: 1, scope: !7920)
!7929 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7930, file: !7930, line: 27, type: !7931, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !8034)
!7930 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7931 = !DISubroutineType(types: !7932)
!7932 = !{null, !7933}
!7933 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !7934)
!7934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7935, size: 32)
!7935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !7936)
!7936 = !{!7937, !7995, !8007, !8008, !8009, !8010, !8016, !8029}
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7935, file: !645, line: 247, baseType: !7938, size: 384)
!7938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !7939)
!7939 = !{!7940, !7964, !7971, !7972, !7973, !7982, !7983, !7984}
!7940 = !DIDerivedType(tag: DW_TAG_member, scope: !7938, file: !645, line: 60, baseType: !7941, size: 64)
!7941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7938, file: !645, line: 60, size: 64, elements: !7942)
!7942 = !{!7943, !7958}
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7941, file: !645, line: 61, baseType: !7944, size: 64)
!7944 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7945)
!7945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7946)
!7946 = !{!7947, !7953}
!7947 = !DIDerivedType(tag: DW_TAG_member, scope: !7945, file: !367, line: 38, baseType: !7948, size: 32)
!7948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7945, file: !367, line: 38, size: 32, elements: !7949)
!7949 = !{!7950, !7952}
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7948, file: !367, line: 39, baseType: !7951, size: 32)
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 32)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7948, file: !367, line: 40, baseType: !7951, size: 32)
!7953 = !DIDerivedType(tag: DW_TAG_member, scope: !7945, file: !367, line: 42, baseType: !7954, size: 32, offset: 32)
!7954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7945, file: !367, line: 42, size: 32, elements: !7955)
!7955 = !{!7956, !7957}
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7954, file: !367, line: 43, baseType: !7951, size: 32)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7954, file: !367, line: 44, baseType: !7951, size: 32)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7941, file: !645, line: 62, baseType: !7959, size: 64)
!7959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !7960)
!7960 = !{!7961}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7959, file: !670, line: 50, baseType: !7962, size: 64)
!7962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7963, size: 64, elements: !675)
!7963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7959, size: 32)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7938, file: !645, line: 68, baseType: !7965, size: 32, offset: 64)
!7965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7966, size: 32)
!7966 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7967)
!7967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7968)
!7968 = !{!7969}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7967, file: !363, line: 232, baseType: !7970, size: 64)
!7970 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7945)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7938, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7938, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!7973 = !DIDerivedType(tag: DW_TAG_member, scope: !7938, file: !645, line: 90, baseType: !7974, size: 16, offset: 112)
!7974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7938, file: !645, line: 90, size: 16, elements: !7975)
!7975 = !{!7976, !7981}
!7976 = !DIDerivedType(tag: DW_TAG_member, scope: !7974, file: !645, line: 91, baseType: !7977, size: 16)
!7977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7974, file: !645, line: 91, size: 16, elements: !7978)
!7978 = !{!7979, !7980}
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7977, file: !645, line: 96, baseType: !693, size: 8)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7977, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7974, file: !645, line: 100, baseType: !168, size: 16)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7938, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7938, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7938, file: !645, line: 131, baseType: !7985, size: 192, offset: 192)
!7985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7986)
!7986 = !{!7987, !7988, !7994}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7985, file: !363, line: 245, baseType: !7944, size: 64)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7985, file: !363, line: 246, baseType: !7989, size: 32, offset: 64)
!7989 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7990)
!7990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7991, size: 32)
!7991 = !DISubroutineType(types: !7992)
!7992 = !{null, !7993}
!7993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7985, size: 32)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7985, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7935, file: !645, line: 250, baseType: !7996, size: 288, offset: 384)
!7996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !7997)
!7997 = !{!7998, !7999, !8000, !8001, !8002, !8003, !8004, !8005, !8006}
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7996, file: !712, line: 26, baseType: !113, size: 32)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7996, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7996, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7996, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7996, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7996, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7996, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7996, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7996, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7935, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7935, file: !645, line: 256, baseType: !7966, size: 64, offset: 704)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7935, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7935, file: !645, line: 300, baseType: !8011, size: 96, offset: 800)
!8011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !8012)
!8012 = !{!8013, !8014, !8015}
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8011, file: !645, line: 153, baseType: !22, size: 32)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8011, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8011, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7935, file: !645, line: 325, baseType: !8017, size: 32, offset: 896)
!8017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8018, size: 32)
!8018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !8019)
!8019 = !{!8020, !8026, !8027}
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8018, file: !359, line: 5074, baseType: !8021, size: 96)
!8021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !8022)
!8022 = !{!8023, !8024, !8025}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8021, file: !738, line: 57, baseType: !741, size: 32)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8021, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8021, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8018, file: !359, line: 5075, baseType: !7966, size: 64, offset: 96)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8018, file: !359, line: 5076, baseType: !8028, offset: 160)
!8028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7935, file: !645, line: 343, baseType: !8030, size: 64, offset: 928)
!8030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !8031)
!8031 = !{!8032, !8033}
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8030, file: !712, line: 63, baseType: !113, size: 32)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8030, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!8034 = !{!8035}
!8035 = !DILocalVariable(name: "thread", arg: 1, scope: !7929, file: !7930, line: 27, type: !7933)
!8036 = !DILocation(line: 0, scope: !7929)
!8037 = !DILocation(line: 29, column: 6, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !7929, file: !7930, line: 29, column: 6)
!8039 = !DILocation(line: 29, column: 15, scope: !8038)
!8040 = !DILocation(line: 29, column: 6, scope: !7929)
!8041 = !DILocation(line: 1031, column: 3, scope: !8042, inlinedAt: !8045)
!8042 = distinct !DISubprogram(name: "__get_IPSR", scope: !7029, file: !7029, line: 1027, type: !7110, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !8043)
!8043 = !{!8044}
!8044 = !DILocalVariable(name: "result", scope: !8042, file: !7029, line: 1029, type: !113)
!8045 = distinct !DILocation(line: 48, column: 10, scope: !8046, inlinedAt: !8050)
!8046 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8047, file: !8047, line: 46, type: !8048, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !437)
!8047 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!422}
!8050 = distinct !DILocation(line: 30, column: 7, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !7930, line: 30, column: 7)
!8052 = distinct !DILexicalBlock(scope: !8038, file: !7930, line: 29, column: 26)
!8053 = !{i64 2841822}
!8054 = !DILocation(line: 0, scope: !8042, inlinedAt: !8045)
!8055 = !DILocation(line: 48, column: 9, scope: !8046, inlinedAt: !8050)
!8056 = !DILocation(line: 30, column: 7, scope: !8052)
!8057 = !DILocation(line: 42, column: 14, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8051, file: !7930, line: 30, column: 25)
!8059 = !DILocation(line: 48, column: 15, scope: !8058)
!8060 = !DILocation(line: 49, column: 3, scope: !8058)
!8061 = !DILocation(line: 52, column: 2, scope: !7929)
!8062 = !DILocation(line: 53, column: 1, scope: !7929)
!8063 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !640, file: !640, line: 127, type: !3389, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !437)
!8064 = !DILocation(line: 134, column: 2, scope: !8063)
!8065 = !DILocation(line: 156, column: 1, scope: !8063)
!8066 = !DILocation(line: 0, scope: !639)
!8067 = !DILocation(line: 289, column: 36, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !639, file: !640, line: 285, column: 2)
!8069 = !DILocation(line: 289, column: 42, scope: !8068)
!8070 = !DILocation(line: 300, column: 36, scope: !639)
!8071 = !DILocation(line: 301, column: 35, scope: !639)
!8072 = !DILocation(line: 302, column: 37, scope: !639)
!8073 = !DILocation(line: 311, column: 2, scope: !639)
!8074 = !DILocation(line: 316, column: 1, scope: !639)
!8075 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !816, file: !816, line: 180, type: !3389, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8076 = !DILocation(line: 188, column: 12, scope: !8075)
!8077 = !DILocation(line: 271, column: 3, scope: !8078, inlinedAt: !8079)
!8078 = distinct !DISubprogram(name: "__DSB", scope: !7029, file: !7029, line: 269, type: !3389, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8079 = distinct !DILocation(line: 192, column: 2, scope: !8075)
!8080 = !{i64 3003004}
!8081 = !DILocation(line: 260, column: 3, scope: !8082, inlinedAt: !8083)
!8082 = distinct !DISubprogram(name: "__ISB", scope: !7029, file: !7029, line: 258, type: !3389, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8083 = distinct !DILocation(line: 193, column: 2, scope: !8075)
!8084 = !{i64 3002721}
!8085 = !DILocation(line: 194, column: 1, scope: !8075)
!8086 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !816, file: !816, line: 199, type: !3389, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8087 = !DILocation(line: 282, column: 3, scope: !8088, inlinedAt: !8089)
!8088 = distinct !DISubprogram(name: "__DMB", scope: !7029, file: !7029, line: 280, type: !3389, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8089 = distinct !DILocation(line: 202, column: 2, scope: !8086)
!8090 = !{i64 3003280}
!8091 = !DILocation(line: 205, column: 12, scope: !8086)
!8092 = !DILocation(line: 206, column: 1, scope: !8086)
!8093 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !816, file: !816, line: 275, type: !8094, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8107)
!8094 = !DISubroutineType(types: !8095)
!8095 = !{null, !8096, !2127, !7297, !7297}
!8096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8097, size: 32)
!8097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8098)
!8098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !760, line: 52, size: 96, elements: !8099)
!8099 = !{!8100, !8101, !8102}
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8098, file: !760, line: 53, baseType: !22, size: 32)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8098, file: !760, line: 54, baseType: !439, size: 32, offset: 32)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8098, file: !760, line: 55, baseType: !8103, size: 32, offset: 64)
!8103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !766, line: 151, baseType: !8104)
!8104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !766, line: 149, size: 32, elements: !8105)
!8105 = !{!8106}
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8104, file: !766, line: 150, baseType: !113, size: 32)
!8107 = !{!8108, !8109, !8110, !8111}
!8108 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8093, file: !816, line: 276, type: !8096)
!8109 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8093, file: !816, line: 276, type: !2127)
!8110 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8093, file: !816, line: 277, type: !7297)
!8111 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8093, file: !816, line: 277, type: !7297)
!8112 = !DILocation(line: 0, scope: !8093)
!8113 = !DILocation(line: 279, column: 6, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8093, file: !816, line: 279, column: 6)
!8115 = !DILocation(line: 285, column: 1, scope: !8093)
!8116 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8117, file: !8117, line: 220, type: !8118, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8120)
!8117 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!108, !8096, !2127, !7297, !7297}
!8120 = !{!8121, !8122, !8123, !8124, !8125}
!8121 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8116, file: !8117, line: 221, type: !8096)
!8122 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8116, file: !8117, line: 221, type: !2127)
!8123 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8116, file: !8117, line: 222, type: !7297)
!8124 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8116, file: !8117, line: 223, type: !7297)
!8125 = !DILocalVariable(name: "mpu_reg_index", scope: !8116, file: !8117, line: 225, type: !108)
!8126 = !DILocation(line: 0, scope: !8116)
!8127 = !DILocation(line: 225, column: 22, scope: !8116)
!8128 = !DILocation(line: 233, column: 18, scope: !8116)
!8129 = !DILocation(line: 236, column: 23, scope: !8116)
!8130 = !DILocation(line: 236, column: 21, scope: !8116)
!8131 = !DILocation(line: 238, column: 2, scope: !8116)
!8132 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !816, file: !816, line: 105, type: !8133, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8135)
!8133 = !DISubroutineType(types: !8134)
!8134 = !{!108, !8096, !164, !164, !422}
!8135 = !{!8136, !8137, !8138, !8139, !8140, !8141}
!8136 = !DILocalVariable(name: "regions", arg: 1, scope: !8132, file: !816, line: 106, type: !8096)
!8137 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8132, file: !816, line: 106, type: !164)
!8138 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8132, file: !816, line: 106, type: !164)
!8139 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8132, file: !816, line: 107, type: !422)
!8140 = !DILocalVariable(name: "i", scope: !8132, file: !816, line: 109, type: !108)
!8141 = !DILocalVariable(name: "reg_index", scope: !8132, file: !816, line: 110, type: !108)
!8142 = !DILocation(line: 0, scope: !8132)
!8143 = !DILocation(line: 110, column: 18, scope: !8132)
!8144 = !DILocation(line: 112, column: 16, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8146, file: !816, line: 112, column: 2)
!8146 = distinct !DILexicalBlock(scope: !8132, file: !816, line: 112, column: 2)
!8147 = !DILocation(line: 112, column: 2, scope: !8146)
!8148 = !DILocation(line: 113, column: 7, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !816, line: 113, column: 7)
!8150 = distinct !DILexicalBlock(scope: !8145, file: !816, line: 112, column: 36)
!8151 = !DILocation(line: 113, column: 18, scope: !8149)
!8152 = !DILocation(line: 113, column: 23, scope: !8149)
!8153 = !DILocation(line: 113, column: 7, scope: !8150)
!8154 = !DILocation(line: 118, column: 23, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !816, line: 118, column: 7)
!8156 = !DILocation(line: 119, column: 7, scope: !8155)
!8157 = !DILocation(line: 118, column: 7, scope: !8150)
!8158 = !DILocation(line: 120, column: 4, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !816, line: 120, column: 4)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !816, line: 120, column: 4)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !816, line: 120, column: 4)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !816, line: 120, column: 4)
!8163 = distinct !DILexicalBlock(scope: !8155, file: !816, line: 119, column: 45)
!8164 = !DILocation(line: 121, column: 4, scope: !8163)
!8165 = !DILocation(line: 124, column: 36, scope: !8150)
!8166 = !DILocation(line: 124, column: 15, scope: !8150)
!8167 = !DILocation(line: 126, column: 17, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8150, file: !816, line: 126, column: 7)
!8169 = !DILocation(line: 126, column: 7, scope: !8150)
!8170 = !DILocation(line: 131, column: 12, scope: !8150)
!8171 = !DILocation(line: 132, column: 2, scope: !8150)
!8172 = !DILocation(line: 112, column: 32, scope: !8145)
!8173 = distinct !{!8173, !8147, !8174}
!8174 = !DILocation(line: 132, column: 2, scope: !8146)
!8175 = !DILocation(line: 135, column: 1, scope: !8132)
!8176 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8117, file: !8117, line: 63, type: !8177, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8179)
!8177 = !DISubroutineType(types: !8178)
!8178 = !{!108, !8096}
!8179 = !{!8180, !8181}
!8180 = !DILocalVariable(name: "part", arg: 1, scope: !8176, file: !8117, line: 63, type: !8096)
!8181 = !DILocalVariable(name: "partition_is_valid", scope: !8176, file: !8117, line: 70, type: !108)
!8182 = !DILocation(line: 0, scope: !8176)
!8183 = !DILocation(line: 71, column: 11, scope: !8176)
!8184 = !DILocation(line: 71, column: 37, scope: !8176)
!8185 = !{i32 0, i32 33}
!8186 = !DILocation(line: 72, column: 3, scope: !8176)
!8187 = !DILocation(line: 71, column: 30, scope: !8176)
!8188 = !DILocation(line: 75, column: 11, scope: !8176)
!8189 = !DILocation(line: 75, column: 17, scope: !8176)
!8190 = !DILocation(line: 75, column: 38, scope: !8176)
!8191 = !DILocation(line: 77, column: 2, scope: !8176)
!8192 = distinct !DISubprogram(name: "mpu_configure_region", scope: !816, file: !816, line: 79, type: !8193, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8195)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{!108, !2127, !8096}
!8195 = !{!8196, !8197, !8198}
!8196 = !DILocalVariable(name: "index", arg: 1, scope: !8192, file: !816, line: 79, type: !2127)
!8197 = !DILocalVariable(name: "new_region", arg: 2, scope: !8192, file: !816, line: 80, type: !8096)
!8198 = !DILocalVariable(name: "region_conf", scope: !8192, file: !816, line: 82, type: !805)
!8199 = !DILocation(line: 0, scope: !8192)
!8200 = !DILocation(line: 82, column: 2, scope: !8192)
!8201 = !DILocation(line: 82, column: 24, scope: !8192)
!8202 = !DILocation(line: 87, column: 33, scope: !8192)
!8203 = !DILocation(line: 87, column: 14, scope: !8192)
!8204 = !DILocation(line: 87, column: 19, scope: !8192)
!8205 = !DILocation(line: 91, column: 55, scope: !8192)
!8206 = !DILocation(line: 92, column: 16, scope: !8192)
!8207 = !DILocation(line: 92, column: 53, scope: !8192)
!8208 = !DILocation(line: 91, column: 2, scope: !8192)
!8209 = !DILocation(line: 95, column: 9, scope: !8192)
!8210 = !DILocation(line: 97, column: 1, scope: !8192)
!8211 = !DILocation(line: 95, column: 2, scope: !8192)
!8212 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8117, file: !8117, line: 113, type: !8213, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8218)
!8213 = !DISubroutineType(types: !8214)
!8214 = !{null, !8215, !8216, !113, !113}
!8215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!8216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8217, size: 32)
!8217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8103)
!8218 = !{!8219, !8220, !8221, !8222}
!8219 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8212, file: !8117, line: 114, type: !8215)
!8220 = !DILocalVariable(name: "attr", arg: 2, scope: !8212, file: !8117, line: 115, type: !8216)
!8221 = !DILocalVariable(name: "base", arg: 3, scope: !8212, file: !8117, line: 115, type: !113)
!8222 = !DILocalVariable(name: "size", arg: 4, scope: !8212, file: !8117, line: 115, type: !113)
!8223 = !DILocation(line: 0, scope: !8212)
!8224 = !DILocation(line: 127, column: 23, scope: !8212)
!8225 = !DILocation(line: 127, column: 35, scope: !8212)
!8226 = !DILocation(line: 127, column: 33, scope: !8212)
!8227 = !DILocation(line: 127, column: 10, scope: !8212)
!8228 = !DILocation(line: 127, column: 15, scope: !8212)
!8229 = !DILocation(line: 129, column: 1, scope: !8212)
!8230 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !816, file: !816, line: 57, type: !8231, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8233)
!8231 = !DISubroutineType(types: !8232)
!8232 = !{!108, !2127, !803}
!8233 = !{!8234, !8235}
!8234 = !DILocalVariable(name: "index", arg: 1, scope: !8230, file: !816, line: 57, type: !2127)
!8235 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8230, file: !816, line: 58, type: !803)
!8236 = !DILocation(line: 0, scope: !8230)
!8237 = !DILocation(line: 61, column: 6, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8230, file: !816, line: 61, column: 6)
!8239 = !DILocation(line: 61, column: 12, scope: !8238)
!8240 = !DILocation(line: 61, column: 6, scope: !8230)
!8241 = !DILocation(line: 64, column: 3, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !816, line: 64, column: 3)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !816, line: 64, column: 3)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !816, line: 64, column: 3)
!8245 = distinct !DILexicalBlock(scope: !8246, file: !816, line: 64, column: 3)
!8246 = distinct !DILexicalBlock(scope: !8238, file: !816, line: 61, column: 40)
!8247 = !DILocation(line: 65, column: 3, scope: !8246)
!8248 = !DILocation(line: 71, column: 2, scope: !8230)
!8249 = !DILocation(line: 73, column: 2, scope: !8230)
!8250 = !DILocation(line: 74, column: 1, scope: !8230)
!8251 = distinct !DISubprogram(name: "region_init", scope: !8117, file: !8117, line: 29, type: !8252, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8254)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{null, !7297, !803}
!8254 = !{!8255, !8256}
!8255 = !DILocalVariable(name: "index", arg: 1, scope: !8251, file: !8117, line: 29, type: !7297)
!8256 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8251, file: !8117, line: 30, type: !803)
!8257 = !DILocation(line: 0, scope: !8251)
!8258 = !DILocation(line: 33, column: 2, scope: !8251)
!8259 = !DILocation(line: 47, column: 28, scope: !8251)
!8260 = !DILocation(line: 47, column: 33, scope: !8251)
!8261 = !DILocation(line: 48, column: 26, scope: !8251)
!8262 = !DILocation(line: 47, column: 12, scope: !8251)
!8263 = !DILocation(line: 49, column: 32, scope: !8251)
!8264 = !DILocation(line: 49, column: 37, scope: !8251)
!8265 = !DILocation(line: 49, column: 12, scope: !8251)
!8266 = !DILocation(line: 53, column: 1, scope: !8251)
!8267 = distinct !DISubprogram(name: "set_region_number", scope: !8268, file: !8268, line: 32, type: !7120, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8269)
!8268 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8269 = !{!8270}
!8270 = !DILocalVariable(name: "index", arg: 1, scope: !8267, file: !8268, line: 32, type: !113)
!8271 = !DILocation(line: 0, scope: !8267)
!8272 = !DILocation(line: 34, column: 11, scope: !8267)
!8273 = !DILocation(line: 35, column: 1, scope: !8267)
!8274 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8117, file: !8117, line: 88, type: !8275, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8277)
!8275 = !DISubroutineType(types: !8276)
!8276 = !{!113, !113}
!8277 = !{!8278}
!8278 = !DILocalVariable(name: "size", arg: 1, scope: !8274, file: !8117, line: 88, type: !113)
!8279 = !DILocation(line: 0, scope: !8274)
!8280 = !DILocation(line: 91, column: 11, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8274, file: !8117, line: 91, column: 6)
!8282 = !DILocation(line: 91, column: 6, scope: !8274)
!8283 = !DILocation(line: 100, column: 11, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8274, file: !8117, line: 100, column: 6)
!8285 = !DILocation(line: 100, column: 6, scope: !8274)
!8286 = !DILocation(line: 104, column: 35, scope: !8274)
!8287 = !DILocation(line: 104, column: 16, scope: !8274)
!8288 = !DILocation(line: 104, column: 50, scope: !8274)
!8289 = !DILocation(line: 104, column: 72, scope: !8274)
!8290 = !DILocation(line: 104, column: 2, scope: !8274)
!8291 = !DILocation(line: 106, column: 1, scope: !8274)
!8292 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !816, file: !816, line: 307, type: !8293, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8295)
!8293 = !DISubroutineType(types: !8294)
!8294 = !{null, !8096, !164}
!8295 = !{!8296, !8297}
!8296 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8292, file: !816, line: 308, type: !8096)
!8297 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8292, file: !816, line: 308, type: !164)
!8298 = !DILocation(line: 0, scope: !8292)
!8299 = !DILocation(line: 310, column: 6, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8292, file: !816, line: 310, column: 6)
!8301 = !DILocation(line: 316, column: 1, scope: !8292)
!8302 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8117, file: !8117, line: 249, type: !8303, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8305)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!108, !8096, !164}
!8305 = !{!8306, !8307, !8308, !8309}
!8306 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8302, file: !8117, line: 250, type: !8096)
!8307 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8302, file: !8117, line: 250, type: !164)
!8308 = !DILocalVariable(name: "mpu_reg_index", scope: !8302, file: !8117, line: 252, type: !108)
!8309 = !DILocalVariable(name: "i", scope: !8310, file: !8117, line: 264, type: !108)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !8117, line: 264, column: 3)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !8117, line: 261, column: 32)
!8312 = distinct !DILexicalBlock(scope: !8302, file: !8117, line: 261, column: 6)
!8313 = !DILocation(line: 0, scope: !8302)
!8314 = !DILocation(line: 252, column: 22, scope: !8302)
!8315 = !DILocation(line: 258, column: 18, scope: !8302)
!8316 = !DILocation(line: 261, column: 20, scope: !8312)
!8317 = !DILocation(line: 261, column: 6, scope: !8302)
!8318 = !DILocation(line: 0, scope: !8310)
!8319 = !DILocation(line: 265, column: 4, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !8117, line: 264, column: 59)
!8321 = distinct !DILexicalBlock(scope: !8310, file: !8117, line: 264, column: 3)
!8322 = !DILocation(line: 264, column: 55, scope: !8321)
!8323 = !DILocation(line: 264, column: 33, scope: !8321)
!8324 = !DILocation(line: 264, column: 3, scope: !8310)
!8325 = distinct !{!8325, !8324, !8326}
!8326 = !DILocation(line: 266, column: 3, scope: !8310)
!8327 = !DILocation(line: 269, column: 2, scope: !8302)
!8328 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8329, file: !8329, line: 218, type: !7120, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8330)
!8329 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8330 = !{!8331}
!8331 = !DILocalVariable(name: "rnr", arg: 1, scope: !8328, file: !8329, line: 218, type: !113)
!8332 = !DILocation(line: 0, scope: !8328)
!8333 = !DILocation(line: 220, column: 12, scope: !8328)
!8334 = !DILocation(line: 221, column: 13, scope: !8328)
!8335 = !DILocation(line: 222, column: 1, scope: !8328)
!8336 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !816, file: !816, line: 326, type: !8337, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{!108}
!8339 = !{!8340}
!8340 = !DILocalVariable(name: "r_index", scope: !8336, file: !816, line: 328, type: !113)
!8341 = !DILocation(line: 330, column: 17, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8336, file: !816, line: 330, column: 6)
!8343 = !DILocation(line: 330, column: 29, scope: !8342)
!8344 = !DILocation(line: 330, column: 6, scope: !8336)
!8345 = !DILocation(line: 347, column: 2, scope: !8336)
!8346 = !DILocation(line: 0, scope: !8336)
!8347 = !DILocation(line: 364, column: 29, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !816, line: 364, column: 2)
!8349 = distinct !DILexicalBlock(scope: !8336, file: !816, line: 364, column: 2)
!8350 = !DILocation(line: 364, column: 2, scope: !8349)
!8351 = !DILocation(line: 365, column: 25, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8348, file: !816, line: 364, column: 66)
!8353 = !DILocation(line: 365, column: 3, scope: !8352)
!8354 = !DILocation(line: 364, column: 62, scope: !8348)
!8355 = distinct !{!8355, !8350, !8356}
!8356 = !DILocation(line: 366, column: 2, scope: !8349)
!8357 = !DILocation(line: 369, column: 23, scope: !8336)
!8358 = !DILocation(line: 369, column: 21, scope: !8336)
!8359 = !DILocation(line: 372, column: 2, scope: !8336)
!8360 = !DILocation(line: 443, column: 2, scope: !8336)
!8361 = !DILocation(line: 444, column: 1, scope: !8336)
!8362 = distinct !DISubprogram(name: "strcpy", scope: !8363, file: !8363, line: 20, type: !8364, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8368)
!8363 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8364 = !DISubroutineType(types: !8365)
!8365 = !{!443, !8366, !8367}
!8366 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !443)
!8367 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !105)
!8368 = !{!8369, !8370, !8371}
!8369 = !DILocalVariable(name: "d", arg: 1, scope: !8362, file: !8363, line: 20, type: !8366)
!8370 = !DILocalVariable(name: "s", arg: 2, scope: !8362, file: !8363, line: 20, type: !8367)
!8371 = !DILocalVariable(name: "dest", scope: !8362, file: !8363, line: 22, type: !443)
!8372 = !DILocation(line: 0, scope: !8362)
!8373 = !DILocation(line: 24, column: 9, scope: !8362)
!8374 = !DILocation(line: 24, column: 12, scope: !8362)
!8375 = !DILocation(line: 24, column: 2, scope: !8362)
!8376 = !DILocation(line: 25, column: 6, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8362, file: !8363, line: 24, column: 21)
!8378 = !DILocation(line: 26, column: 4, scope: !8377)
!8379 = !DILocation(line: 27, column: 4, scope: !8377)
!8380 = distinct !{!8380, !8375, !8381}
!8381 = !DILocation(line: 28, column: 2, scope: !8362)
!8382 = !DILocation(line: 30, column: 5, scope: !8362)
!8383 = !DILocation(line: 32, column: 2, scope: !8362)
!8384 = distinct !DISubprogram(name: "strncpy", scope: !8363, file: !8363, line: 42, type: !8385, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8387)
!8385 = !DISubroutineType(types: !8386)
!8386 = !{!443, !8366, !8367, !439}
!8387 = !{!8388, !8389, !8390, !8391}
!8388 = !DILocalVariable(name: "d", arg: 1, scope: !8384, file: !8363, line: 42, type: !8366)
!8389 = !DILocalVariable(name: "s", arg: 2, scope: !8384, file: !8363, line: 42, type: !8367)
!8390 = !DILocalVariable(name: "n", arg: 3, scope: !8384, file: !8363, line: 42, type: !439)
!8391 = !DILocalVariable(name: "dest", scope: !8384, file: !8363, line: 44, type: !443)
!8392 = !DILocation(line: 0, scope: !8384)
!8393 = !DILocation(line: 46, column: 12, scope: !8384)
!8394 = !DILocation(line: 46, column: 17, scope: !8384)
!8395 = !DILocation(line: 46, column: 20, scope: !8384)
!8396 = !DILocation(line: 46, column: 23, scope: !8384)
!8397 = !DILocation(line: 46, column: 2, scope: !8384)
!8398 = !DILocation(line: 47, column: 6, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8384, file: !8363, line: 46, column: 32)
!8400 = !DILocation(line: 48, column: 4, scope: !8399)
!8401 = !DILocation(line: 49, column: 4, scope: !8399)
!8402 = !DILocation(line: 50, column: 4, scope: !8399)
!8403 = distinct !{!8403, !8397, !8404}
!8404 = !DILocation(line: 51, column: 2, scope: !8384)
!8405 = !DILocation(line: 54, column: 6, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8384, file: !8363, line: 53, column: 16)
!8407 = !DILocation(line: 55, column: 4, scope: !8406)
!8408 = !DILocation(line: 56, column: 4, scope: !8406)
!8409 = !DILocation(line: 53, column: 11, scope: !8384)
!8410 = !DILocation(line: 53, column: 2, scope: !8384)
!8411 = distinct !{!8411, !8410, !8412}
!8412 = !DILocation(line: 57, column: 2, scope: !8384)
!8413 = !DILocation(line: 59, column: 2, scope: !8384)
!8414 = distinct !DISubprogram(name: "strchr", scope: !8363, file: !8363, line: 69, type: !8415, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8417)
!8415 = !DISubroutineType(types: !8416)
!8416 = !{!443, !105, !108}
!8417 = !{!8418, !8419, !8420}
!8418 = !DILocalVariable(name: "s", arg: 1, scope: !8414, file: !8363, line: 69, type: !105)
!8419 = !DILocalVariable(name: "c", arg: 2, scope: !8414, file: !8363, line: 69, type: !108)
!8420 = !DILocalVariable(name: "tmp", scope: !8414, file: !8363, line: 71, type: !107)
!8421 = !DILocation(line: 0, scope: !8414)
!8422 = !DILocation(line: 73, column: 2, scope: !8414)
!8423 = !DILocation(line: 73, column: 10, scope: !8414)
!8424 = !DILocation(line: 73, column: 13, scope: !8414)
!8425 = !DILocation(line: 73, column: 21, scope: !8414)
!8426 = !DILocation(line: 74, column: 4, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8414, file: !8363, line: 73, column: 38)
!8428 = distinct !{!8428, !8422, !8429}
!8429 = !DILocation(line: 75, column: 2, scope: !8414)
!8430 = !DILocation(line: 77, column: 9, scope: !8414)
!8431 = !DILocation(line: 77, column: 2, scope: !8414)
!8432 = distinct !DISubprogram(name: "strrchr", scope: !8363, file: !8363, line: 87, type: !8415, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8433)
!8433 = !{!8434, !8435, !8436}
!8434 = !DILocalVariable(name: "s", arg: 1, scope: !8432, file: !8363, line: 87, type: !105)
!8435 = !DILocalVariable(name: "c", arg: 2, scope: !8432, file: !8363, line: 87, type: !108)
!8436 = !DILocalVariable(name: "match", scope: !8432, file: !8363, line: 89, type: !443)
!8437 = !DILocation(line: 0, scope: !8432)
!8438 = !DILocation(line: 91, column: 2, scope: !8432)
!8439 = !DILocation(line: 92, column: 7, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !8363, line: 92, column: 7)
!8441 = distinct !DILexicalBlock(scope: !8432, file: !8363, line: 91, column: 5)
!8442 = !DILocation(line: 92, column: 10, scope: !8440)
!8443 = !DILocation(line: 92, column: 7, scope: !8441)
!8444 = !DILocation(line: 95, column: 13, scope: !8432)
!8445 = !DILocation(line: 95, column: 2, scope: !8441)
!8446 = distinct !{!8446, !8438, !8447}
!8447 = !DILocation(line: 95, column: 15, scope: !8432)
!8448 = !DILocation(line: 97, column: 2, scope: !8432)
!8449 = distinct !DISubprogram(name: "strlen", scope: !8363, file: !8363, line: 107, type: !8450, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8452)
!8450 = !DISubroutineType(types: !8451)
!8451 = !{!439, !105}
!8452 = !{!8453, !8454}
!8453 = !DILocalVariable(name: "s", arg: 1, scope: !8449, file: !8363, line: 107, type: !105)
!8454 = !DILocalVariable(name: "n", scope: !8449, file: !8363, line: 109, type: !439)
!8455 = !DILocation(line: 0, scope: !8449)
!8456 = !DILocation(line: 111, column: 9, scope: !8449)
!8457 = !DILocation(line: 111, column: 12, scope: !8449)
!8458 = !DILocation(line: 111, column: 2, scope: !8449)
!8459 = !DILocation(line: 112, column: 4, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8449, file: !8363, line: 111, column: 21)
!8461 = !DILocation(line: 113, column: 4, scope: !8460)
!8462 = distinct !{!8462, !8458, !8463}
!8463 = !DILocation(line: 114, column: 2, scope: !8449)
!8464 = !DILocation(line: 116, column: 2, scope: !8449)
!8465 = distinct !DISubprogram(name: "strnlen", scope: !8363, file: !8363, line: 126, type: !8466, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8468)
!8466 = !DISubroutineType(types: !8467)
!8467 = !{!439, !105, !439}
!8468 = !{!8469, !8470, !8471}
!8469 = !DILocalVariable(name: "s", arg: 1, scope: !8465, file: !8363, line: 126, type: !105)
!8470 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8465, file: !8363, line: 126, type: !439)
!8471 = !DILocalVariable(name: "n", scope: !8465, file: !8363, line: 128, type: !439)
!8472 = !DILocation(line: 0, scope: !8465)
!8473 = !DILocation(line: 130, column: 9, scope: !8465)
!8474 = !DILocation(line: 130, column: 12, scope: !8465)
!8475 = !DILocation(line: 130, column: 20, scope: !8465)
!8476 = !DILocation(line: 130, column: 2, scope: !8465)
!8477 = !DILocation(line: 131, column: 4, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8465, file: !8363, line: 130, column: 35)
!8479 = !DILocation(line: 132, column: 4, scope: !8478)
!8480 = distinct !{!8480, !8476, !8481}
!8481 = !DILocation(line: 133, column: 2, scope: !8465)
!8482 = !DILocation(line: 135, column: 2, scope: !8465)
!8483 = distinct !DISubprogram(name: "strcmp", scope: !8363, file: !8363, line: 145, type: !8484, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8486)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{!108, !105, !105}
!8486 = !{!8487, !8488}
!8487 = !DILocalVariable(name: "s1", arg: 1, scope: !8483, file: !8363, line: 145, type: !105)
!8488 = !DILocalVariable(name: "s2", arg: 2, scope: !8483, file: !8363, line: 145, type: !105)
!8489 = !DILocation(line: 0, scope: !8483)
!8490 = !DILocation(line: 147, column: 10, scope: !8483)
!8491 = !DILocation(line: 147, column: 17, scope: !8483)
!8492 = !DILocation(line: 147, column: 14, scope: !8483)
!8493 = !DILocation(line: 147, column: 22, scope: !8483)
!8494 = !DILocation(line: 148, column: 5, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8483, file: !8363, line: 147, column: 40)
!8496 = !DILocation(line: 149, column: 5, scope: !8495)
!8497 = distinct !{!8497, !8498, !8499}
!8498 = !DILocation(line: 147, column: 2, scope: !8483)
!8499 = !DILocation(line: 150, column: 2, scope: !8483)
!8500 = !DILocation(line: 152, column: 9, scope: !8483)
!8501 = !DILocation(line: 152, column: 15, scope: !8483)
!8502 = !DILocation(line: 152, column: 13, scope: !8483)
!8503 = !DILocation(line: 152, column: 2, scope: !8483)
!8504 = distinct !DISubprogram(name: "strncmp", scope: !8363, file: !8363, line: 162, type: !8505, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8507)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{!108, !105, !105, !439}
!8507 = !{!8508, !8509, !8510}
!8508 = !DILocalVariable(name: "s1", arg: 1, scope: !8504, file: !8363, line: 162, type: !105)
!8509 = !DILocalVariable(name: "s2", arg: 2, scope: !8504, file: !8363, line: 162, type: !105)
!8510 = !DILocalVariable(name: "n", arg: 3, scope: !8504, file: !8363, line: 162, type: !439)
!8511 = !DILocation(line: 0, scope: !8504)
!8512 = !DILocation(line: 164, column: 17, scope: !8504)
!8513 = !DILocation(line: 164, column: 21, scope: !8504)
!8514 = !DILocation(line: 164, column: 28, scope: !8504)
!8515 = !DILocation(line: 164, column: 25, scope: !8504)
!8516 = !DILocation(line: 164, column: 33, scope: !8504)
!8517 = !DILocation(line: 165, column: 5, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8504, file: !8363, line: 164, column: 51)
!8519 = !DILocation(line: 166, column: 5, scope: !8518)
!8520 = !DILocation(line: 167, column: 4, scope: !8518)
!8521 = distinct !{!8521, !8522, !8523}
!8522 = !DILocation(line: 164, column: 2, scope: !8504)
!8523 = !DILocation(line: 168, column: 2, scope: !8504)
!8524 = !DILocation(line: 170, column: 25, scope: !8504)
!8525 = !DILocation(line: 170, column: 31, scope: !8504)
!8526 = !DILocation(line: 170, column: 29, scope: !8504)
!8527 = !DILocation(line: 170, column: 9, scope: !8504)
!8528 = !DILocation(line: 170, column: 2, scope: !8504)
!8529 = distinct !DISubprogram(name: "strtok_r", scope: !8363, file: !8363, line: 180, type: !8530, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8532)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{!443, !443, !105, !541}
!8532 = !{!8533, !8534, !8535, !8536, !8537}
!8533 = !DILocalVariable(name: "str", arg: 1, scope: !8529, file: !8363, line: 180, type: !443)
!8534 = !DILocalVariable(name: "sep", arg: 2, scope: !8529, file: !8363, line: 180, type: !105)
!8535 = !DILocalVariable(name: "state", arg: 3, scope: !8529, file: !8363, line: 180, type: !541)
!8536 = !DILocalVariable(name: "start", scope: !8529, file: !8363, line: 182, type: !443)
!8537 = !DILocalVariable(name: "end", scope: !8529, file: !8363, line: 182, type: !443)
!8538 = !DILocation(line: 0, scope: !8529)
!8539 = !DILocation(line: 184, column: 10, scope: !8529)
!8540 = !DILocation(line: 184, column: 22, scope: !8529)
!8541 = !DILocation(line: 187, column: 9, scope: !8529)
!8542 = !DILocation(line: 187, column: 16, scope: !8529)
!8543 = !DILocation(line: 187, column: 19, scope: !8529)
!8544 = !DILocation(line: 187, column: 2, scope: !8529)
!8545 = !DILocation(line: 188, column: 8, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8529, file: !8363, line: 187, column: 40)
!8547 = distinct !{!8547, !8544, !8548}
!8548 = !DILocation(line: 189, column: 2, scope: !8529)
!8549 = !DILocation(line: 198, column: 9, scope: !8529)
!8550 = !DILocation(line: 198, column: 18, scope: !8529)
!8551 = !DILocation(line: 198, column: 17, scope: !8529)
!8552 = !DILocation(line: 198, column: 2, scope: !8529)
!8553 = !DILocation(line: 199, column: 6, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8529, file: !8363, line: 198, column: 37)
!8555 = !DILocation(line: 198, column: 14, scope: !8529)
!8556 = distinct !{!8556, !8552, !8557}
!8557 = !DILocation(line: 200, column: 2, scope: !8529)
!8558 = !DILocation(line: 203, column: 8, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !8363, line: 202, column: 20)
!8560 = distinct !DILexicalBlock(scope: !8529, file: !8363, line: 202, column: 6)
!8561 = !DILocation(line: 204, column: 16, scope: !8559)
!8562 = !DILocation(line: 205, column: 2, scope: !8559)
!8563 = !DILocation(line: 210, column: 1, scope: !8529)
!8564 = distinct !DISubprogram(name: "strcat", scope: !8363, file: !8363, line: 212, type: !8364, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8565)
!8565 = !{!8566, !8567}
!8566 = !DILocalVariable(name: "dest", arg: 1, scope: !8564, file: !8363, line: 212, type: !8366)
!8567 = !DILocalVariable(name: "src", arg: 2, scope: !8564, file: !8363, line: 212, type: !8367)
!8568 = !DILocation(line: 0, scope: !8564)
!8569 = !DILocation(line: 214, column: 16, scope: !8564)
!8570 = !DILocation(line: 214, column: 14, scope: !8564)
!8571 = !DILocation(line: 214, column: 2, scope: !8564)
!8572 = !DILocation(line: 215, column: 2, scope: !8564)
!8573 = distinct !DISubprogram(name: "strncat", scope: !8363, file: !8363, line: 218, type: !8385, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8574)
!8574 = !{!8575, !8576, !8577, !8578, !8579}
!8575 = !DILocalVariable(name: "dest", arg: 1, scope: !8573, file: !8363, line: 218, type: !8366)
!8576 = !DILocalVariable(name: "src", arg: 2, scope: !8573, file: !8363, line: 218, type: !8367)
!8577 = !DILocalVariable(name: "n", arg: 3, scope: !8573, file: !8363, line: 219, type: !439)
!8578 = !DILocalVariable(name: "orig_dest", scope: !8573, file: !8363, line: 221, type: !443)
!8579 = !DILocalVariable(name: "len", scope: !8573, file: !8363, line: 222, type: !439)
!8580 = !DILocation(line: 0, scope: !8573)
!8581 = !DILocation(line: 222, column: 15, scope: !8573)
!8582 = !DILocation(line: 224, column: 7, scope: !8573)
!8583 = !DILocation(line: 225, column: 14, scope: !8573)
!8584 = !DILocation(line: 225, column: 19, scope: !8573)
!8585 = !DILocation(line: 225, column: 11, scope: !8573)
!8586 = !DILocation(line: 225, column: 23, scope: !8573)
!8587 = !DILocation(line: 225, column: 28, scope: !8573)
!8588 = !DILocation(line: 225, column: 2, scope: !8573)
!8589 = !DILocation(line: 226, column: 17, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8573, file: !8363, line: 225, column: 38)
!8591 = !DILocation(line: 226, column: 8, scope: !8590)
!8592 = !DILocation(line: 226, column: 11, scope: !8590)
!8593 = distinct !{!8593, !8588, !8594}
!8594 = !DILocation(line: 227, column: 2, scope: !8573)
!8595 = !DILocation(line: 228, column: 8, scope: !8573)
!8596 = !DILocation(line: 230, column: 2, scope: !8573)
!8597 = distinct !DISubprogram(name: "memcmp", scope: !8363, file: !8363, line: 239, type: !8598, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8600)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{!108, !13, !13, !439}
!8600 = !{!8601, !8602, !8603, !8604, !8605}
!8601 = !DILocalVariable(name: "m1", arg: 1, scope: !8597, file: !8363, line: 239, type: !13)
!8602 = !DILocalVariable(name: "m2", arg: 2, scope: !8597, file: !8363, line: 239, type: !13)
!8603 = !DILocalVariable(name: "n", arg: 3, scope: !8597, file: !8363, line: 239, type: !439)
!8604 = !DILocalVariable(name: "c1", scope: !8597, file: !8363, line: 241, type: !105)
!8605 = !DILocalVariable(name: "c2", scope: !8597, file: !8363, line: 242, type: !105)
!8606 = !DILocation(line: 0, scope: !8597)
!8607 = !DILocation(line: 244, column: 7, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8597, file: !8363, line: 244, column: 6)
!8609 = !DILocation(line: 244, column: 6, scope: !8597)
!8610 = !DILocation(line: 248, column: 10, scope: !8597)
!8611 = !DILocation(line: 248, column: 14, scope: !8597)
!8612 = !DILocation(line: 248, column: 19, scope: !8597)
!8613 = !DILocation(line: 248, column: 2, scope: !8597)
!8614 = !DILocation(line: 248, column: 23, scope: !8597)
!8615 = !DILocation(line: 248, column: 30, scope: !8597)
!8616 = !DILocation(line: 248, column: 27, scope: !8597)
!8617 = !DILocation(line: 249, column: 5, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8597, file: !8363, line: 248, column: 36)
!8619 = !DILocation(line: 250, column: 5, scope: !8618)
!8620 = distinct !{!8620, !8613, !8621}
!8621 = !DILocation(line: 251, column: 2, scope: !8597)
!8622 = !DILocation(line: 253, column: 9, scope: !8597)
!8623 = !DILocation(line: 253, column: 15, scope: !8597)
!8624 = !DILocation(line: 253, column: 13, scope: !8597)
!8625 = !DILocation(line: 253, column: 2, scope: !8597)
!8626 = !DILocation(line: 254, column: 1, scope: !8597)
!8627 = distinct !DISubprogram(name: "memmove", scope: !8363, file: !8363, line: 263, type: !8628, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8630)
!8628 = !DISubroutineType(types: !8629)
!8629 = !{!104, !104, !13, !439}
!8630 = !{!8631, !8632, !8633, !8634, !8635}
!8631 = !DILocalVariable(name: "d", arg: 1, scope: !8627, file: !8363, line: 263, type: !104)
!8632 = !DILocalVariable(name: "s", arg: 2, scope: !8627, file: !8363, line: 263, type: !13)
!8633 = !DILocalVariable(name: "n", arg: 3, scope: !8627, file: !8363, line: 263, type: !439)
!8634 = !DILocalVariable(name: "dest", scope: !8627, file: !8363, line: 265, type: !443)
!8635 = !DILocalVariable(name: "src", scope: !8627, file: !8363, line: 266, type: !105)
!8636 = !DILocation(line: 0, scope: !8627)
!8637 = !DILocation(line: 268, column: 21, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8627, file: !8363, line: 268, column: 6)
!8639 = !DILocation(line: 268, column: 28, scope: !8638)
!8640 = !DILocation(line: 268, column: 6, scope: !8627)
!8641 = !DILocation(line: 280, column: 12, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8638, file: !8363, line: 278, column: 9)
!8643 = !DILocation(line: 280, column: 3, scope: !8642)
!8644 = !DILocation(line: 275, column: 5, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8646, file: !8363, line: 274, column: 17)
!8646 = distinct !DILexicalBlock(scope: !8638, file: !8363, line: 268, column: 33)
!8647 = !DILocation(line: 276, column: 14, scope: !8645)
!8648 = !DILocation(line: 276, column: 4, scope: !8645)
!8649 = !DILocation(line: 276, column: 12, scope: !8645)
!8650 = !DILocation(line: 274, column: 12, scope: !8646)
!8651 = !DILocation(line: 274, column: 3, scope: !8646)
!8652 = distinct !{!8652, !8651, !8653}
!8653 = !DILocation(line: 277, column: 3, scope: !8646)
!8654 = !DILocation(line: 281, column: 12, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8642, file: !8363, line: 280, column: 17)
!8656 = !DILocation(line: 281, column: 10, scope: !8655)
!8657 = !DILocation(line: 282, column: 8, scope: !8655)
!8658 = !DILocation(line: 283, column: 7, scope: !8655)
!8659 = !DILocation(line: 284, column: 5, scope: !8655)
!8660 = distinct !{!8660, !8643, !8661}
!8661 = !DILocation(line: 285, column: 3, scope: !8642)
!8662 = !DILocation(line: 288, column: 2, scope: !8627)
!8663 = distinct !DISubprogram(name: "memcpy", scope: !8363, file: !8363, line: 298, type: !8664, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8668)
!8664 = !DISubroutineType(types: !8665)
!8665 = !{!104, !8666, !8667, !439}
!8666 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8667 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8668 = !{!8669, !8670, !8671, !8672, !8673}
!8669 = !DILocalVariable(name: "d", arg: 1, scope: !8663, file: !8363, line: 298, type: !8666)
!8670 = !DILocalVariable(name: "s", arg: 2, scope: !8663, file: !8363, line: 298, type: !8667)
!8671 = !DILocalVariable(name: "n", arg: 3, scope: !8663, file: !8363, line: 298, type: !439)
!8672 = !DILocalVariable(name: "d_byte", scope: !8663, file: !8363, line: 302, type: !1316)
!8673 = !DILocalVariable(name: "s_byte", scope: !8663, file: !8363, line: 303, type: !3155)
!8674 = !DILocation(line: 0, scope: !8663)
!8675 = !DILocation(line: 337, column: 11, scope: !8663)
!8676 = !DILocation(line: 337, column: 2, scope: !8663)
!8677 = !DILocation(line: 338, column: 25, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8663, file: !8363, line: 337, column: 16)
!8679 = !DILocation(line: 338, column: 17, scope: !8678)
!8680 = !DILocation(line: 338, column: 11, scope: !8678)
!8681 = !DILocation(line: 338, column: 15, scope: !8678)
!8682 = !DILocation(line: 339, column: 4, scope: !8678)
!8683 = distinct !{!8683, !8676, !8684}
!8684 = !DILocation(line: 340, column: 2, scope: !8663)
!8685 = !DILocation(line: 342, column: 2, scope: !8663)
!8686 = distinct !DISubprogram(name: "memset", scope: !8363, file: !8363, line: 352, type: !8687, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8689)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{!104, !104, !108, !439}
!8689 = !{!8690, !8691, !8692, !8693, !8694}
!8690 = !DILocalVariable(name: "buf", arg: 1, scope: !8686, file: !8363, line: 352, type: !104)
!8691 = !DILocalVariable(name: "c", arg: 2, scope: !8686, file: !8363, line: 352, type: !108)
!8692 = !DILocalVariable(name: "n", arg: 3, scope: !8686, file: !8363, line: 352, type: !439)
!8693 = !DILocalVariable(name: "d_byte", scope: !8686, file: !8363, line: 356, type: !1316)
!8694 = !DILocalVariable(name: "c_byte", scope: !8686, file: !8363, line: 357, type: !165)
!8695 = !DILocation(line: 0, scope: !8686)
!8696 = !DILocation(line: 357, column: 25, scope: !8686)
!8697 = !DILocation(line: 389, column: 11, scope: !8686)
!8698 = !DILocation(line: 389, column: 2, scope: !8686)
!8699 = !DILocation(line: 390, column: 11, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8686, file: !8363, line: 389, column: 16)
!8701 = !DILocation(line: 390, column: 15, scope: !8700)
!8702 = !DILocation(line: 391, column: 4, scope: !8700)
!8703 = distinct !{!8703, !8698, !8704}
!8704 = !DILocation(line: 392, column: 2, scope: !8686)
!8705 = !DILocation(line: 394, column: 2, scope: !8686)
!8706 = distinct !DISubprogram(name: "memchr", scope: !8363, file: !8363, line: 404, type: !8707, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !8709)
!8707 = !DISubroutineType(types: !8708)
!8708 = !{!104, !13, !108, !439}
!8709 = !{!8710, !8711, !8712, !8713}
!8710 = !DILocalVariable(name: "s", arg: 1, scope: !8706, file: !8363, line: 404, type: !13)
!8711 = !DILocalVariable(name: "c", arg: 2, scope: !8706, file: !8363, line: 404, type: !108)
!8712 = !DILocalVariable(name: "n", arg: 3, scope: !8706, file: !8363, line: 404, type: !439)
!8713 = !DILocalVariable(name: "p", scope: !8714, file: !8363, line: 407, type: !3155)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !8363, line: 406, column: 14)
!8715 = distinct !DILexicalBlock(scope: !8706, file: !8363, line: 406, column: 6)
!8716 = !DILocation(line: 0, scope: !8706)
!8717 = !DILocation(line: 406, column: 8, scope: !8715)
!8718 = !DILocation(line: 406, column: 6, scope: !8706)
!8719 = !DILocation(line: 409, column: 3, scope: !8714)
!8720 = !DILocation(line: 0, scope: !8714)
!8721 = !DILocation(line: 410, column: 8, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !8363, line: 410, column: 8)
!8723 = distinct !DILexicalBlock(scope: !8714, file: !8363, line: 409, column: 6)
!8724 = !DILocation(line: 410, column: 13, scope: !8722)
!8725 = !DILocation(line: 410, column: 8, scope: !8723)
!8726 = distinct !{!8726, !8719, !8727}
!8727 = !DILocation(line: 414, column: 20, scope: !8714)
!8728 = !DILocation(line: 417, column: 2, scope: !8706)
!8729 = !DILocation(line: 418, column: 1, scope: !8706)
!8730 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !826, file: !826, line: 23, type: !4979, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8731)
!8731 = !{!8732}
!8732 = !DILocalVariable(name: "hook", arg: 1, scope: !8730, file: !826, line: 23, type: !556)
!8733 = !DILocation(line: 0, scope: !8730)
!8734 = !DILocation(line: 25, column: 15, scope: !8730)
!8735 = !DILocation(line: 26, column: 1, scope: !8730)
!8736 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !826, file: !826, line: 14, type: !557, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8737)
!8737 = !{!8738}
!8738 = !DILocalVariable(name: "c", arg: 1, scope: !8736, file: !826, line: 14, type: !108)
!8739 = !DILocation(line: 0, scope: !8736)
!8740 = !DILocation(line: 18, column: 2, scope: !8736)
!8741 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !826, file: !826, line: 28, type: !8742, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8744)
!8742 = !DISubroutineType(types: !8743)
!8743 = !{!108, !108, !822}
!8744 = !{!8745, !8746}
!8745 = !DILocalVariable(name: "c", arg: 1, scope: !8741, file: !826, line: 28, type: !108)
!8746 = !DILocalVariable(name: "stream", arg: 2, scope: !8741, file: !826, line: 28, type: !822)
!8747 = !DILocation(line: 0, scope: !8741)
!8748 = !DILocation(line: 30, column: 27, scope: !8741)
!8749 = !DILocation(line: 30, column: 50, scope: !8741)
!8750 = !DILocation(line: 30, column: 9, scope: !8741)
!8751 = !DILocation(line: 30, column: 2, scope: !8741)
!8752 = distinct !DISubprogram(name: "fputc", scope: !826, file: !826, line: 41, type: !8742, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8753)
!8753 = !{!8754, !8755}
!8754 = !DILocalVariable(name: "c", arg: 1, scope: !8752, file: !826, line: 41, type: !108)
!8755 = !DILocalVariable(name: "stream", arg: 2, scope: !8752, file: !826, line: 41, type: !822)
!8756 = !DILocation(line: 0, scope: !8752)
!8757 = !DILocation(line: 43, column: 9, scope: !8752)
!8758 = !DILocation(line: 43, column: 2, scope: !8752)
!8759 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8760, file: !8760, line: 72, type: !8742, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8761)
!8760 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!8761 = !{!8762, !8763}
!8762 = !DILocalVariable(name: "c", arg: 1, scope: !8759, file: !8760, line: 72, type: !108)
!8763 = !DILocalVariable(name: "stream", arg: 2, scope: !8759, file: !8760, line: 72, type: !822)
!8764 = !DILocation(line: 0, scope: !8759)
!8765 = !DILocation(line: 81, column: 2, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8759, file: !8760, line: 81, column: 2)
!8767 = !{i64 2154144111}
!8768 = !DILocation(line: 82, column: 9, scope: !8759)
!8769 = !DILocation(line: 82, column: 2, scope: !8759)
!8770 = distinct !DISubprogram(name: "fputs", scope: !826, file: !826, line: 46, type: !8771, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8774)
!8771 = !DISubroutineType(types: !8772)
!8772 = !{!108, !8367, !8773}
!8773 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !822)
!8774 = !{!8775, !8776, !8777, !8778}
!8775 = !DILocalVariable(name: "s", arg: 1, scope: !8770, file: !826, line: 46, type: !8367)
!8776 = !DILocalVariable(name: "stream", arg: 2, scope: !8770, file: !826, line: 46, type: !8773)
!8777 = !DILocalVariable(name: "len", scope: !8770, file: !826, line: 48, type: !108)
!8778 = !DILocalVariable(name: "ret", scope: !8770, file: !826, line: 49, type: !108)
!8779 = !DILocation(line: 0, scope: !8770)
!8780 = !DILocation(line: 48, column: 12, scope: !8770)
!8781 = !DILocation(line: 51, column: 8, scope: !8770)
!8782 = !DILocation(line: 53, column: 13, scope: !8770)
!8783 = !DILocation(line: 53, column: 9, scope: !8770)
!8784 = !DILocation(line: 53, column: 2, scope: !8770)
!8785 = distinct !DISubprogram(name: "fwrite", scope: !826, file: !826, line: 99, type: !8786, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8788)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!439, !8667, !439, !439, !8773}
!8788 = !{!8789, !8790, !8791, !8792}
!8789 = !DILocalVariable(name: "ptr", arg: 1, scope: !8785, file: !826, line: 99, type: !8667)
!8790 = !DILocalVariable(name: "size", arg: 2, scope: !8785, file: !826, line: 99, type: !439)
!8791 = !DILocalVariable(name: "nitems", arg: 3, scope: !8785, file: !826, line: 99, type: !439)
!8792 = !DILocalVariable(name: "stream", arg: 4, scope: !8785, file: !826, line: 100, type: !8773)
!8793 = !DILocation(line: 0, scope: !8785)
!8794 = !DILocation(line: 102, column: 9, scope: !8785)
!8795 = !DILocation(line: 102, column: 2, scope: !8785)
!8796 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8760, file: !8760, line: 96, type: !8786, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8797)
!8797 = !{!8798, !8799, !8800, !8801}
!8798 = !DILocalVariable(name: "ptr", arg: 1, scope: !8796, file: !8760, line: 96, type: !8667)
!8799 = !DILocalVariable(name: "size", arg: 2, scope: !8796, file: !8760, line: 96, type: !439)
!8800 = !DILocalVariable(name: "nitems", arg: 3, scope: !8796, file: !8760, line: 96, type: !439)
!8801 = !DILocalVariable(name: "stream", arg: 4, scope: !8796, file: !8760, line: 96, type: !8773)
!8802 = !DILocation(line: 0, scope: !8796)
!8803 = !DILocation(line: 107, column: 2, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8796, file: !8760, line: 107, column: 2)
!8805 = !{i64 2154144215}
!8806 = !DILocation(line: 108, column: 9, scope: !8796)
!8807 = !DILocation(line: 108, column: 2, scope: !8796)
!8808 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !826, file: !826, line: 56, type: !8786, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8809)
!8809 = !{!8810, !8811, !8812, !8813, !8814, !8815, !8816, !8817}
!8810 = !DILocalVariable(name: "ptr", arg: 1, scope: !8808, file: !826, line: 56, type: !8667)
!8811 = !DILocalVariable(name: "size", arg: 2, scope: !8808, file: !826, line: 56, type: !439)
!8812 = !DILocalVariable(name: "nitems", arg: 3, scope: !8808, file: !826, line: 57, type: !439)
!8813 = !DILocalVariable(name: "stream", arg: 4, scope: !8808, file: !826, line: 57, type: !8773)
!8814 = !DILocalVariable(name: "i", scope: !8808, file: !826, line: 59, type: !439)
!8815 = !DILocalVariable(name: "j", scope: !8808, file: !826, line: 60, type: !439)
!8816 = !DILocalVariable(name: "p", scope: !8808, file: !826, line: 61, type: !3155)
!8817 = !DILabel(scope: !8808, name: "done", file: !826, line: 82)
!8818 = !DILocation(line: 0, scope: !8808)
!8819 = !DILocation(line: 63, column: 14, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8808, file: !826, line: 63, column: 6)
!8821 = !DILocation(line: 63, column: 24, scope: !8820)
!8822 = !DILocation(line: 72, column: 3, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8808, file: !826, line: 70, column: 5)
!8824 = !DILocation(line: 0, scope: !8823)
!8825 = !DILocation(line: 73, column: 8, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !826, line: 73, column: 8)
!8827 = distinct !DILexicalBlock(scope: !8823, file: !826, line: 72, column: 6)
!8828 = !DILocation(line: 73, column: 29, scope: !8826)
!8829 = !DILocation(line: 73, column: 27, scope: !8826)
!8830 = !DILocation(line: 73, column: 21, scope: !8826)
!8831 = !DILocation(line: 73, column: 33, scope: !8826)
!8832 = !DILocation(line: 73, column: 8, scope: !8827)
!8833 = !DILocation(line: 76, column: 5, scope: !8827)
!8834 = !DILocation(line: 77, column: 14, scope: !8823)
!8835 = !DILocation(line: 77, column: 3, scope: !8827)
!8836 = distinct !{!8836, !8822, !8837}
!8837 = !DILocation(line: 77, column: 17, scope: !8823)
!8838 = !DILocation(line: 79, column: 4, scope: !8823)
!8839 = !DILocation(line: 80, column: 13, scope: !8808)
!8840 = !DILocation(line: 80, column: 2, scope: !8823)
!8841 = distinct !{!8841, !8842, !8843}
!8842 = !DILocation(line: 70, column: 2, scope: !8808)
!8843 = !DILocation(line: 80, column: 16, scope: !8808)
!8844 = !DILocation(line: 82, column: 1, scope: !8808)
!8845 = !DILocation(line: 83, column: 17, scope: !8808)
!8846 = !DILocation(line: 83, column: 2, scope: !8808)
!8847 = !DILocation(line: 84, column: 1, scope: !8808)
!8848 = distinct !DISubprogram(name: "puts", scope: !826, file: !826, line: 106, type: !8849, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8851)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!108, !105}
!8851 = !{!8852}
!8852 = !DILocalVariable(name: "s", arg: 1, scope: !8848, file: !826, line: 106, type: !105)
!8853 = !DILocation(line: 0, scope: !8848)
!8854 = !DILocation(line: 108, column: 6, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8848, file: !826, line: 108, column: 6)
!8856 = !DILocation(line: 108, column: 23, scope: !8855)
!8857 = !DILocation(line: 108, column: 6, scope: !8848)
!8858 = !DILocation(line: 112, column: 9, scope: !8848)
!8859 = !DILocation(line: 112, column: 29, scope: !8848)
!8860 = !DILocation(line: 112, column: 2, scope: !8848)
!8861 = !DILocation(line: 113, column: 1, scope: !8848)
!8862 = distinct !DISubprogram(name: "rtio_simple_submit", scope: !857, file: !857, line: 25, type: !8863, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8952)
!8863 = !DISubroutineType(types: !8864)
!8864 = !{!108, !8865}
!8865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8866, size: 32)
!8866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !8867)
!8867 = !{!8868, !8933, !8934, !8941}
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !8866, file: !125, line: 228, baseType: !8869, size: 32)
!8869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8870, size: 32)
!8870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !8871)
!8871 = !{!8872}
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8870, file: !125, line: 211, baseType: !8873, size: 32)
!8873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8874, size: 32)
!8874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8875)
!8875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !8876)
!8876 = !{!8877, !8879, !8932}
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8875, file: !125, line: 177, baseType: !8878, size: 32)
!8878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8863, size: 32)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !8875, file: !125, line: 182, baseType: !8880, size: 32, offset: 32)
!8880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8881, size: 32)
!8881 = !DISubroutineType(types: !8882)
!8882 = !{null, !8865, !8883, !108}
!8883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8884, size: 32)
!8884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8885)
!8885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !8886)
!8886 = !{!8887, !8888, !8889, !8890, !8923, !8924}
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !8885, file: !125, line: 110, baseType: !164, size: 8)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8885, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8885, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !8885, file: !125, line: 116, baseType: !8891, size: 32, offset: 32)
!8891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8892, size: 32)
!8892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8893)
!8893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !8894)
!8894 = !{!8895, !8904, !8922}
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8893, file: !125, line: 308, baseType: !8896, size: 32)
!8896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8897, size: 32)
!8897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8898)
!8898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !8899)
!8899 = !{!8900}
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8898, file: !125, line: 271, baseType: !8901, size: 32)
!8901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8902, size: 32)
!8902 = !DISubroutineType(types: !8903)
!8903 = !{null, !8883, !8865}
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !8893, file: !125, line: 311, baseType: !8905, size: 32, offset: 32)
!8905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8906, size: 32)
!8906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !8907)
!8907 = !{!8908, !8916}
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8906, file: !125, line: 299, baseType: !8909, size: 160)
!8909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !8910)
!8910 = !{!8911, !8912, !8913, !8914, !8915}
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !8909, file: !151, line: 60, baseType: !24, size: 32)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !8909, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !8909, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !8909, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8909, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8906, file: !125, line: 300, baseType: !8917, offset: 160)
!8917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8918, elements: !197)
!8918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !8919)
!8919 = !{!8920, !8921}
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !8918, file: !125, line: 289, baseType: !8883, size: 32)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !8918, file: !125, line: 290, baseType: !8865, size: 32, offset: 32)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8893, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8885, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!8924 = !DIDerivedType(tag: DW_TAG_member, scope: !8885, file: !125, line: 127, baseType: !8925, size: 64, offset: 96)
!8925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8885, file: !125, line: 127, size: 64, elements: !8926)
!8926 = !{!8927}
!8927 = !DIDerivedType(tag: DW_TAG_member, scope: !8925, file: !125, line: 128, baseType: !8928, size: 64)
!8928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8925, file: !125, line: 128, size: 64, elements: !8929)
!8929 = !{!8930, !8931}
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !8928, file: !125, line: 129, baseType: !113, size: 32)
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8928, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !8875, file: !125, line: 187, baseType: !8880, size: 32, offset: 64)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !8866, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !8866, file: !125, line: 254, baseType: !8935, size: 32, offset: 64)
!8935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8936, size: 32)
!8936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !8937)
!8937 = !{!8938, !8939}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8936, file: !125, line: 143, baseType: !8909, size: 160)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8936, file: !125, line: 144, baseType: !8940, offset: 160)
!8940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8885, elements: !197)
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !8866, file: !125, line: 257, baseType: !8942, size: 32, offset: 96)
!8942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8943, size: 32)
!8943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !8944)
!8944 = !{!8945, !8946}
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8943, file: !125, line: 162, baseType: !8909, size: 160)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8943, file: !125, line: 163, baseType: !8947, offset: 160)
!8947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8948, elements: !197)
!8948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !8949)
!8949 = !{!8950, !8951}
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !8948, file: !125, line: 151, baseType: !220, size: 32)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8948, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!8952 = !{!8953, !8954, !8956, !8958}
!8953 = !DILocalVariable(name: "r", arg: 1, scope: !8862, file: !857, line: 25, type: !8865)
!8954 = !DILocalVariable(name: "sqe", scope: !8862, file: !857, line: 30, type: !8955)
!8955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8885, size: 32)
!8956 = !DILocalVariable(name: "idx", scope: !8957, file: !857, line: 30, type: !24)
!8957 = distinct !DILexicalBlock(scope: !8862, file: !857, line: 30, column: 25)
!8958 = !DILocalVariable(name: "has_consumable", scope: !8957, file: !857, line: 30, type: !422)
!8959 = !DILocation(line: 0, scope: !8862)
!8960 = !DILocation(line: 30, column: 25, scope: !8957)
!8961 = !DILocation(line: 0, scope: !8957)
!8962 = !DILocation(line: 30, column: 25, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !857, line: 30, column: 25)
!8964 = distinct !DILexicalBlock(scope: !8957, file: !857, line: 30, column: 25)
!8965 = !DILocation(line: 33, column: 3, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !857, line: 32, column: 19)
!8967 = distinct !DILexicalBlock(scope: !8862, file: !857, line: 32, column: 6)
!8968 = !DILocation(line: 34, column: 2, scope: !8966)
!8969 = !DILocation(line: 36, column: 2, scope: !8862)
!8970 = distinct !DISubprogram(name: "atomic_get", scope: !3684, file: !3684, line: 159, type: !3685, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8971)
!8971 = !{!8972}
!8972 = !DILocalVariable(name: "target", arg: 1, scope: !8970, file: !3684, line: 159, type: !3688)
!8973 = !DILocation(line: 0, scope: !8970)
!8974 = !DILocation(line: 161, column: 9, scope: !8970)
!8975 = !DILocation(line: 161, column: 2, scope: !8970)
!8976 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !8902, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8977)
!8977 = !{!8978, !8979}
!8978 = !DILocalVariable(name: "sqe", arg: 1, scope: !8976, file: !125, line: 457, type: !8883)
!8979 = !DILocalVariable(name: "r", arg: 2, scope: !8976, file: !125, line: 457, type: !8865)
!8980 = !DILocation(line: 0, scope: !8976)
!8981 = !DILocation(line: 459, column: 7, scope: !8976)
!8982 = !DILocation(line: 459, column: 14, scope: !8976)
!8983 = !DILocation(line: 459, column: 19, scope: !8976)
!8984 = !DILocation(line: 459, column: 2, scope: !8976)
!8985 = !DILocation(line: 460, column: 1, scope: !8976)
!8986 = distinct !DISubprogram(name: "rtio_simple_ok", scope: !857, file: !857, line: 42, type: !8881, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8987)
!8987 = !{!8988, !8989, !8990, !8991}
!8988 = !DILocalVariable(name: "r", arg: 1, scope: !8986, file: !857, line: 42, type: !8865)
!8989 = !DILocalVariable(name: "sqe", arg: 2, scope: !8986, file: !857, line: 42, type: !8883)
!8990 = !DILocalVariable(name: "result", arg: 3, scope: !8986, file: !857, line: 42, type: !108)
!8991 = !DILocalVariable(name: "userdata", scope: !8986, file: !857, line: 44, type: !104)
!8992 = !DILocation(line: 0, scope: !8986)
!8993 = !DILocation(line: 44, column: 24, scope: !8986)
!8994 = !DILocation(line: 46, column: 2, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !857, line: 46, column: 2)
!8996 = distinct !DILexicalBlock(scope: !8986, file: !857, line: 46, column: 2)
!8997 = !DILocation(line: 46, column: 2, scope: !8996)
!8998 = !DILocation(line: 46, column: 2, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8995, file: !857, line: 46, column: 2)
!9000 = !DILocation(line: 47, column: 2, scope: !8986)
!9001 = !DILocation(line: 48, column: 2, scope: !8986)
!9002 = !DILocation(line: 49, column: 1, scope: !8986)
!9003 = distinct !DISubprogram(name: "atomic_add", scope: !3684, file: !3684, line: 86, type: !3720, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9004)
!9004 = !{!9005, !9006}
!9005 = !DILocalVariable(name: "target", arg: 1, scope: !9003, file: !3684, line: 86, type: !3722)
!9006 = !DILocalVariable(name: "value", arg: 2, scope: !9003, file: !3684, line: 86, type: !3687)
!9007 = !DILocation(line: 0, scope: !9003)
!9008 = !DILocation(line: 88, column: 9, scope: !9003)
!9009 = !DILocation(line: 88, column: 2, scope: !9003)
!9010 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9011, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9013)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{null, !8865, !108, !104}
!9013 = !{!9014, !9015, !9016, !9017, !9019, !9021}
!9014 = !DILocalVariable(name: "r", arg: 1, scope: !9010, file: !125, line: 607, type: !8865)
!9015 = !DILocalVariable(name: "result", arg: 2, scope: !9010, file: !125, line: 607, type: !108)
!9016 = !DILocalVariable(name: "userdata", arg: 3, scope: !9010, file: !125, line: 607, type: !104)
!9017 = !DILocalVariable(name: "cqe", scope: !9010, file: !125, line: 609, type: !9018)
!9018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8948, size: 32)
!9019 = !DILocalVariable(name: "idx", scope: !9020, file: !125, line: 609, type: !24)
!9020 = distinct !DILexicalBlock(scope: !9010, file: !125, line: 609, column: 25)
!9021 = !DILocalVariable(name: "acq", scope: !9020, file: !125, line: 609, type: !422)
!9022 = !DILocation(line: 0, scope: !9010)
!9023 = !DILocation(line: 609, column: 25, scope: !9020)
!9024 = !DILocation(line: 0, scope: !9020)
!9025 = !DILocation(line: 612, column: 18, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !125, line: 611, column: 19)
!9027 = distinct !DILexicalBlock(scope: !9010, file: !125, line: 611, column: 6)
!9028 = !DILocation(line: 612, column: 3, scope: !9026)
!9029 = !DILocation(line: 613, column: 2, scope: !9026)
!9030 = !DILocation(line: 609, column: 25, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9032, file: !125, line: 609, column: 25)
!9032 = distinct !DILexicalBlock(scope: !9020, file: !125, line: 609, column: 25)
!9033 = !DILocation(line: 614, column: 8, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9027, file: !125, line: 613, column: 9)
!9035 = !DILocation(line: 614, column: 15, scope: !9034)
!9036 = !DILocation(line: 615, column: 8, scope: !9034)
!9037 = !DILocation(line: 615, column: 17, scope: !9034)
!9038 = !DILocation(line: 616, column: 3, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !125, line: 616, column: 3)
!9040 = distinct !DILexicalBlock(scope: !9034, file: !125, line: 616, column: 3)
!9041 = !DILocation(line: 616, column: 3, scope: !9040)
!9042 = !DILocation(line: 616, column: 3, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9039, file: !125, line: 616, column: 3)
!9044 = !DILocation(line: 629, column: 1, scope: !9010)
!9045 = distinct !DISubprogram(name: "atomic_inc", scope: !3684, file: !3684, line: 123, type: !9046, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9048)
!9046 = !DISubroutineType(types: !9047)
!9047 = !{!3687, !3722}
!9048 = !{!9049}
!9049 = !DILocalVariable(name: "target", arg: 1, scope: !9045, file: !3684, line: 123, type: !3722)
!9050 = !DILocation(line: 0, scope: !9045)
!9051 = !DILocation(line: 125, column: 9, scope: !9045)
!9052 = !DILocation(line: 125, column: 2, scope: !9045)
!9053 = distinct !DISubprogram(name: "rtio_simple_err", scope: !857, file: !857, line: 54, type: !8881, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9054)
!9054 = !{!9055, !9056, !9057, !9058, !9059, !9060, !9061, !9065, !9066, !9069}
!9055 = !DILocalVariable(name: "r", arg: 1, scope: !9053, file: !857, line: 54, type: !8865)
!9056 = !DILocalVariable(name: "sqe", arg: 2, scope: !9053, file: !857, line: 54, type: !8883)
!9057 = !DILocalVariable(name: "result", arg: 3, scope: !9053, file: !857, line: 54, type: !108)
!9058 = !DILocalVariable(name: "nsqe", scope: !9053, file: !857, line: 56, type: !8955)
!9059 = !DILocalVariable(name: "userdata", scope: !9053, file: !857, line: 57, type: !104)
!9060 = !DILocalVariable(name: "chained", scope: !9053, file: !857, line: 58, type: !422)
!9061 = !DILocalVariable(name: "idx", scope: !9062, file: !857, line: 65, type: !24)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !857, line: 65, column: 10)
!9063 = distinct !DILexicalBlock(scope: !9064, file: !857, line: 63, column: 15)
!9064 = distinct !DILexicalBlock(scope: !9053, file: !857, line: 63, column: 6)
!9065 = !DILocalVariable(name: "has_consumable", scope: !9062, file: !857, line: 65, type: !422)
!9066 = !DILocalVariable(name: "idx", scope: !9067, file: !857, line: 70, type: !24)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !857, line: 70, column: 11)
!9068 = distinct !DILexicalBlock(scope: !9063, file: !857, line: 66, column: 58)
!9069 = !DILocalVariable(name: "has_consumable", scope: !9067, file: !857, line: 70, type: !422)
!9070 = !DILocation(line: 0, scope: !9053)
!9071 = !DILocation(line: 57, column: 24, scope: !9053)
!9072 = !DILocation(line: 58, column: 22, scope: !9053)
!9073 = !DILocation(line: 58, column: 28, scope: !9053)
!9074 = !DILocation(line: 58, column: 17, scope: !9053)
!9075 = !DILocation(line: 60, column: 2, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !857, line: 60, column: 2)
!9077 = distinct !DILexicalBlock(scope: !9053, file: !857, line: 60, column: 2)
!9078 = !DILocation(line: 60, column: 2, scope: !9077)
!9079 = !DILocation(line: 60, column: 2, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9076, file: !857, line: 60, column: 2)
!9081 = !DILocation(line: 61, column: 34, scope: !9053)
!9082 = !DILocation(line: 61, column: 2, scope: !9053)
!9083 = !DILocation(line: 63, column: 6, scope: !9053)
!9084 = !DILocation(line: 65, column: 10, scope: !9062)
!9085 = !DILocation(line: 0, scope: !9062)
!9086 = !DILocation(line: 0, scope: !9063)
!9087 = !DILocation(line: 66, column: 32, scope: !9063)
!9088 = !DILocation(line: 66, column: 38, scope: !9063)
!9089 = !DILocation(line: 66, column: 23, scope: !9063)
!9090 = !DILocation(line: 66, column: 3, scope: !9063)
!9091 = !DILocation(line: 67, column: 21, scope: !9068)
!9092 = !DILocation(line: 68, column: 4, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !857, line: 68, column: 4)
!9094 = distinct !DILexicalBlock(scope: !9068, file: !857, line: 68, column: 4)
!9095 = !DILocation(line: 68, column: 4, scope: !9094)
!9096 = !DILocation(line: 68, column: 4, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9093, file: !857, line: 68, column: 4)
!9098 = !DILocation(line: 69, column: 4, scope: !9068)
!9099 = !DILocation(line: 70, column: 11, scope: !9067)
!9100 = !DILocation(line: 0, scope: !9067)
!9101 = !DILocation(line: 74, column: 4, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !857, line: 73, column: 21)
!9103 = distinct !DILexicalBlock(scope: !9063, file: !857, line: 73, column: 7)
!9104 = !DILocation(line: 75, column: 3, scope: !9102)
!9105 = !DILocation(line: 79, column: 3, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9064, file: !857, line: 77, column: 9)
!9107 = !DILocation(line: 81, column: 1, scope: !9053)
!9108 = distinct !DISubprogram(name: "rtio_concurrent_submit", scope: !974, file: !974, line: 119, type: !882, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9109)
!9109 = !{!9110, !9111, !9112, !9113, !9114, !9119, !9123, !9124, !9127, !9128, !9130, !9133, !9134, !9136, !9137, !9140}
!9110 = !DILocalVariable(name: "r", arg: 1, scope: !9108, file: !974, line: 119, type: !884)
!9111 = !DILocalVariable(name: "exc", scope: !9108, file: !974, line: 124, type: !868)
!9112 = !DILocalVariable(name: "sqe", scope: !9108, file: !974, line: 126, type: !968)
!9113 = !DILocalVariable(name: "last_sqe", scope: !9108, file: !974, line: 127, type: !968)
!9114 = !DILocalVariable(name: "key", scope: !9108, file: !974, line: 128, type: !9115)
!9115 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !9116)
!9116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !9117)
!9117 = !{!9118}
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9116, file: !436, line: 33, baseType: !108, size: 32)
!9119 = !DILocalVariable(name: "idx", scope: !9120, file: !974, line: 137, type: !24)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !974, line: 137, column: 9)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !974, line: 136, column: 29)
!9122 = distinct !DILexicalBlock(scope: !9108, file: !974, line: 136, column: 6)
!9123 = !DILocalVariable(name: "has_consumable", scope: !9120, file: !974, line: 137, type: !422)
!9124 = !DILocalVariable(name: "idx", scope: !9125, file: !974, line: 140, type: !24)
!9125 = distinct !DILexicalBlock(scope: !9126, file: !974, line: 140, column: 9)
!9126 = distinct !DILexicalBlock(scope: !9122, file: !974, line: 138, column: 9)
!9127 = !DILocalVariable(name: "has_next", scope: !9125, file: !974, line: 140, type: !422)
!9128 = !DILocalVariable(name: "task_idx", scope: !9129, file: !974, line: 148, type: !168)
!9129 = distinct !DILexicalBlock(scope: !9108, file: !974, line: 144, column: 46)
!9130 = !DILocalVariable(name: "idx", scope: !9131, file: !974, line: 159, type: !24)
!9131 = distinct !DILexicalBlock(scope: !9132, file: !974, line: 159, column: 10)
!9132 = distinct !DILexicalBlock(scope: !9129, file: !974, line: 158, column: 58)
!9133 = !DILocalVariable(name: "has_next", scope: !9131, file: !974, line: 159, type: !422)
!9134 = !DILocalVariable(name: "idx", scope: !9135, file: !974, line: 167, type: !24)
!9135 = distinct !DILexicalBlock(scope: !9129, file: !974, line: 167, column: 9)
!9136 = !DILocalVariable(name: "has_next", scope: !9135, file: !974, line: 167, type: !422)
!9137 = !DILocalVariable(name: "idx", scope: !9138, file: !974, line: 181, type: !24)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !974, line: 181, column: 9)
!9139 = distinct !DILexicalBlock(scope: !9108, file: !974, line: 179, column: 22)
!9140 = !DILocalVariable(name: "has_next", scope: !9138, file: !974, line: 181, type: !422)
!9141 = !DILocation(line: 0, scope: !9108)
!9142 = !DILocation(line: 122, column: 2, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9144, file: !974, line: 122, column: 2)
!9144 = distinct !DILexicalBlock(scope: !9145, file: !974, line: 122, column: 2)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !974, line: 122, column: 2)
!9146 = distinct !DILexicalBlock(scope: !9108, file: !974, line: 122, column: 2)
!9147 = !DILocation(line: 125, column: 41, scope: !9108)
!9148 = !DILocalVariable(name: "l", arg: 1, scope: !9149, file: !436, line: 136, type: !9152)
!9149 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !9150, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9153)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!9115, !9152}
!9152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!9153 = !{!9148, !9154}
!9154 = !DILocalVariable(name: "k", scope: !9149, file: !436, line: 139, type: !9115)
!9155 = !DILocation(line: 0, scope: !9149, inlinedAt: !9156)
!9156 = distinct !DILocation(line: 130, column: 8, scope: !9108)
!9157 = !DILocation(line: 55, column: 2, scope: !9158, inlinedAt: !9162)
!9158 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9159)
!9159 = !{!9160, !9161}
!9160 = !DILocalVariable(name: "key", scope: !9158, file: !4063, line: 44, type: !32)
!9161 = !DILocalVariable(name: "tmp", scope: !9158, file: !4063, line: 53, type: !32)
!9162 = distinct !DILocation(line: 145, column: 10, scope: !9149, inlinedAt: !9156)
!9163 = !{i64 1697393}
!9164 = !DILocation(line: 0, scope: !9158, inlinedAt: !9162)
!9165 = !DILocation(line: 136, column: 11, scope: !9122)
!9166 = !DILocation(line: 136, column: 20, scope: !9122)
!9167 = !DILocation(line: 0, scope: !9122)
!9168 = !DILocation(line: 136, column: 6, scope: !9108)
!9169 = !DILocation(line: 137, column: 9, scope: !9120)
!9170 = !DILocation(line: 0, scope: !9120)
!9171 = !DILocation(line: 140, column: 9, scope: !9125)
!9172 = !DILocation(line: 0, scope: !9125)
!9173 = !DILocation(line: 173, column: 7, scope: !9108)
!9174 = !DILocation(line: 173, column: 19, scope: !9108)
!9175 = !DILocation(line: 179, column: 2, scope: !9108)
!9176 = !DILocation(line: 144, column: 24, scope: !9108)
!9177 = !DILocation(line: 144, column: 2, scope: !9108)
!9178 = !DILocation(line: 145, column: 3, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !974, line: 145, column: 3)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !974, line: 145, column: 3)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !974, line: 145, column: 3)
!9182 = distinct !DILexicalBlock(scope: !9129, file: !974, line: 145, column: 3)
!9183 = !DILocation(line: 148, column: 23, scope: !9129)
!9184 = !DILocation(line: 0, scope: !9129)
!9185 = !DILocation(line: 150, column: 3, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9187, file: !974, line: 150, column: 3)
!9187 = distinct !DILexicalBlock(scope: !9188, file: !974, line: 150, column: 3)
!9188 = distinct !DILexicalBlock(scope: !9189, file: !974, line: 150, column: 3)
!9189 = distinct !DILexicalBlock(scope: !9129, file: !974, line: 150, column: 3)
!9190 = !DILocation(line: 153, column: 8, scope: !9129)
!9191 = !DILocation(line: 153, column: 3, scope: !9129)
!9192 = !DILocation(line: 153, column: 27, scope: !9129)
!9193 = !DILocation(line: 154, column: 8, scope: !9129)
!9194 = !DILocation(line: 154, column: 3, scope: !9129)
!9195 = !DILocation(line: 154, column: 30, scope: !9129)
!9196 = !DILocation(line: 156, column: 3, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9198, file: !974, line: 156, column: 3)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !974, line: 156, column: 3)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !974, line: 156, column: 3)
!9200 = distinct !DILexicalBlock(scope: !9129, file: !974, line: 156, column: 3)
!9201 = !DILocation(line: 158, column: 22, scope: !9129)
!9202 = !DILocation(line: 158, column: 31, scope: !9129)
!9203 = !DILocation(line: 158, column: 37, scope: !9129)
!9204 = !DILocation(line: 158, column: 3, scope: !9129)
!9205 = !DILocation(line: 159, column: 10, scope: !9131)
!9206 = !DILocation(line: 0, scope: !9131)
!9207 = !DILocation(line: 162, column: 3, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !974, line: 162, column: 3)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !974, line: 162, column: 3)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !974, line: 162, column: 3)
!9211 = distinct !DILexicalBlock(scope: !9129, file: !974, line: 162, column: 3)
!9212 = !DILocation(line: 167, column: 9, scope: !9135)
!9213 = !DILocation(line: 0, scope: !9135)
!9214 = !DILocation(line: 144, column: 21, scope: !9108)
!9215 = !DILocation(line: 179, column: 13, scope: !9108)
!9216 = !DILocation(line: 181, column: 9, scope: !9138)
!9217 = !DILocation(line: 0, scope: !9138)
!9218 = !DILocation(line: 185, column: 16, scope: !9108)
!9219 = !DILocation(line: 188, column: 2, scope: !9108)
!9220 = !DILocalVariable(name: "key", arg: 2, scope: !9221, file: !436, line: 190, type: !9115)
!9221 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !9222, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9224)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{null, !9152, !9115}
!9224 = !{!9225, !9220}
!9225 = !DILocalVariable(name: "l", arg: 1, scope: !9221, file: !436, line: 189, type: !9152)
!9226 = !DILocation(line: 0, scope: !9221, inlinedAt: !9227)
!9227 = distinct !DILocation(line: 190, column: 2, scope: !9108)
!9228 = !DILocalVariable(name: "key", arg: 1, scope: !9229, file: !4063, line: 84, type: !32)
!9229 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9230)
!9230 = !{!9228}
!9231 = !DILocation(line: 0, scope: !9229, inlinedAt: !9232)
!9232 = distinct !DILocation(line: 215, column: 2, scope: !9221, inlinedAt: !9227)
!9233 = !DILocation(line: 95, column: 2, scope: !9229, inlinedAt: !9232)
!9234 = !{i64 1698210}
!9235 = !DILocation(line: 192, column: 2, scope: !9108)
!9236 = distinct !DISubprogram(name: "atomic_get", scope: !3684, file: !3684, line: 159, type: !3685, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9237)
!9237 = !{!9238}
!9238 = !DILocalVariable(name: "target", arg: 1, scope: !9236, file: !3684, line: 159, type: !3688)
!9239 = !DILocation(line: 0, scope: !9236)
!9240 = !DILocation(line: 161, column: 9, scope: !9236)
!9241 = !DILocation(line: 161, column: 2, scope: !9236)
!9242 = distinct !DISubprogram(name: "conex_task_free", scope: !974, file: !974, line: 39, type: !9243, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9245)
!9243 = !DISubroutineType(types: !9244)
!9244 = !{!422, !868}
!9245 = !{!9246}
!9246 = !DILocalVariable(name: "exc", arg: 1, scope: !9242, file: !974, line: 39, type: !868)
!9247 = !DILocation(line: 0, scope: !9242)
!9248 = !DILocation(line: 41, column: 15, scope: !9242)
!9249 = !DILocation(line: 41, column: 10, scope: !9242)
!9250 = !DILocation(line: 41, column: 30, scope: !9242)
!9251 = !DILocation(line: 41, column: 25, scope: !9242)
!9252 = !DILocation(line: 41, column: 23, scope: !9242)
!9253 = !DILocation(line: 41, column: 48, scope: !9242)
!9254 = !DILocation(line: 41, column: 43, scope: !9242)
!9255 = !DILocation(line: 41, column: 40, scope: !9242)
!9256 = !DILocation(line: 41, column: 2, scope: !9242)
!9257 = distinct !DISubprogram(name: "conex_task_next", scope: !974, file: !974, line: 47, type: !9258, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9260)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!168, !868}
!9260 = !{!9261, !9262}
!9261 = !DILocalVariable(name: "exc", arg: 1, scope: !9257, file: !974, line: 47, type: !868)
!9262 = !DILocalVariable(name: "task_id", scope: !9257, file: !974, line: 49, type: !168)
!9263 = !DILocation(line: 0, scope: !9257)
!9264 = !DILocation(line: 49, column: 26, scope: !9257)
!9265 = !DILocation(line: 51, column: 14, scope: !9257)
!9266 = !DILocation(line: 52, column: 2, scope: !9257)
!9267 = distinct !DISubprogram(name: "conex_resume", scope: !974, file: !974, line: 94, type: !9268, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9270)
!9268 = !DISubroutineType(types: !9269)
!9269 = !{null, !884, !868}
!9270 = !{!9271, !9272, !9273}
!9271 = !DILocalVariable(name: "r", arg: 1, scope: !9267, file: !974, line: 94, type: !884)
!9272 = !DILocalVariable(name: "exc", arg: 2, scope: !9267, file: !974, line: 94, type: !868)
!9273 = !DILocalVariable(name: "task_id", scope: !9274, file: !974, line: 97, type: !168)
!9274 = distinct !DILexicalBlock(scope: !9267, file: !974, line: 97, column: 2)
!9275 = !DILocation(line: 0, scope: !9267)
!9276 = !DILocation(line: 97, column: 31, scope: !9274)
!9277 = !DILocation(line: 0, scope: !9274)
!9278 = !DILocation(line: 97, column: 56, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9274, file: !974, line: 97, column: 2)
!9280 = !DILocation(line: 97, column: 49, scope: !9279)
!9281 = !DILocation(line: 97, column: 2, scope: !9274)
!9282 = !DILocation(line: 104, column: 1, scope: !9267)
!9283 = !DILocation(line: 98, column: 12, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9285, file: !974, line: 98, column: 7)
!9285 = distinct !DILexicalBlock(scope: !9279, file: !974, line: 97, column: 76)
!9286 = !DILocation(line: 98, column: 39, scope: !9284)
!9287 = !DILocation(line: 98, column: 32, scope: !9284)
!9288 = !DILocation(line: 98, column: 7, scope: !9284)
!9289 = !DILocation(line: 98, column: 50, scope: !9284)
!9290 = !DILocation(line: 98, column: 7, scope: !9285)
!9291 = !DILocation(line: 99, column: 4, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !974, line: 99, column: 4)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !974, line: 99, column: 4)
!9294 = distinct !DILexicalBlock(scope: !9295, file: !974, line: 99, column: 4)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !974, line: 99, column: 4)
!9296 = distinct !DILexicalBlock(scope: !9284, file: !974, line: 98, column: 74)
!9297 = !DILocation(line: 100, column: 9, scope: !9296)
!9298 = !DILocation(line: 100, column: 4, scope: !9296)
!9299 = !DILocation(line: 100, column: 30, scope: !9296)
!9300 = !DILocation(line: 101, column: 27, scope: !9296)
!9301 = !DILocation(line: 101, column: 22, scope: !9296)
!9302 = !DILocation(line: 101, column: 4, scope: !9296)
!9303 = !DILocation(line: 102, column: 3, scope: !9296)
!9304 = !DILocation(line: 97, column: 72, scope: !9279)
!9305 = distinct !{!9305, !9281, !9306}
!9306 = !DILocation(line: 103, column: 2, scope: !9274)
!9307 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !921, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9308)
!9308 = !{!9309, !9310}
!9309 = !DILocalVariable(name: "sqe", arg: 1, scope: !9307, file: !125, line: 457, type: !923)
!9310 = !DILocalVariable(name: "r", arg: 2, scope: !9307, file: !125, line: 457, type: !884)
!9311 = !DILocation(line: 0, scope: !9307)
!9312 = !DILocation(line: 459, column: 7, scope: !9307)
!9313 = !DILocation(line: 459, column: 14, scope: !9307)
!9314 = !DILocation(line: 459, column: 19, scope: !9307)
!9315 = !DILocation(line: 459, column: 2, scope: !9307)
!9316 = !DILocation(line: 460, column: 1, scope: !9307)
!9317 = distinct !DISubprogram(name: "rtio_concurrent_ok", scope: !974, file: !974, line: 198, type: !959, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9318)
!9318 = !{!9319, !9320, !9321, !9322, !9323, !9324, !9325, !9326, !9330}
!9319 = !DILocalVariable(name: "r", arg: 1, scope: !9317, file: !974, line: 198, type: !884)
!9320 = !DILocalVariable(name: "sqe", arg: 2, scope: !9317, file: !974, line: 198, type: !923)
!9321 = !DILocalVariable(name: "result", arg: 3, scope: !9317, file: !974, line: 198, type: !108)
!9322 = !DILocalVariable(name: "next_sqe", scope: !9317, file: !974, line: 200, type: !968)
!9323 = !DILocalVariable(name: "key", scope: !9317, file: !974, line: 201, type: !9115)
!9324 = !DILocalVariable(name: "exc", scope: !9317, file: !974, line: 202, type: !868)
!9325 = !DILocalVariable(name: "task_id", scope: !9317, file: !974, line: 216, type: !168)
!9326 = !DILocalVariable(name: "idx", scope: !9327, file: !974, line: 219, type: !24)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !974, line: 219, column: 14)
!9328 = distinct !DILexicalBlock(scope: !9329, file: !974, line: 218, column: 37)
!9329 = distinct !DILexicalBlock(scope: !9317, file: !974, line: 218, column: 6)
!9330 = !DILocalVariable(name: "has_next", scope: !9327, file: !974, line: 219, type: !422)
!9331 = !DILocation(line: 0, scope: !9317)
!9332 = !DILocation(line: 202, column: 79, scope: !9317)
!9333 = !DILocation(line: 0, scope: !9149, inlinedAt: !9334)
!9334 = distinct !DILocation(line: 211, column: 8, scope: !9317)
!9335 = !DILocation(line: 55, column: 2, scope: !9158, inlinedAt: !9336)
!9336 = distinct !DILocation(line: 145, column: 10, scope: !9149, inlinedAt: !9334)
!9337 = !DILocation(line: 0, scope: !9158, inlinedAt: !9336)
!9338 = !DILocation(line: 213, column: 34, scope: !9317)
!9339 = !DILocation(line: 213, column: 2, scope: !9317)
!9340 = !DILocation(line: 216, column: 21, scope: !9317)
!9341 = !DILocation(line: 218, column: 11, scope: !9329)
!9342 = !DILocation(line: 218, column: 17, scope: !9329)
!9343 = !DILocation(line: 218, column: 6, scope: !9317)
!9344 = !DILocation(line: 219, column: 14, scope: !9327)
!9345 = !DILocation(line: 0, scope: !9327)
!9346 = !DILocation(line: 221, column: 3, scope: !9328)
!9347 = !DILocation(line: 223, column: 8, scope: !9328)
!9348 = !DILocation(line: 223, column: 3, scope: !9328)
!9349 = !DILocation(line: 223, column: 26, scope: !9328)
!9350 = !DILocation(line: 224, column: 2, scope: !9328)
!9351 = !DILocation(line: 225, column: 8, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9329, file: !974, line: 224, column: 9)
!9353 = !DILocation(line: 225, column: 3, scope: !9352)
!9354 = !DILocation(line: 225, column: 30, scope: !9352)
!9355 = !DILocation(line: 233, column: 2, scope: !9317)
!9356 = !DILocation(line: 0, scope: !9221, inlinedAt: !9357)
!9357 = distinct !DILocation(line: 235, column: 2, scope: !9317)
!9358 = !DILocation(line: 0, scope: !9229, inlinedAt: !9359)
!9359 = distinct !DILocation(line: 215, column: 2, scope: !9221, inlinedAt: !9357)
!9360 = !DILocation(line: 95, column: 2, scope: !9229, inlinedAt: !9359)
!9361 = !DILocation(line: 236, column: 1, scope: !9317)
!9362 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9363, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9365)
!9363 = !DISubroutineType(types: !9364)
!9364 = !{null, !884, !108, !104}
!9365 = !{!9366, !9367, !9368, !9369, !9371, !9373}
!9366 = !DILocalVariable(name: "r", arg: 1, scope: !9362, file: !125, line: 607, type: !884)
!9367 = !DILocalVariable(name: "result", arg: 2, scope: !9362, file: !125, line: 607, type: !108)
!9368 = !DILocalVariable(name: "userdata", arg: 3, scope: !9362, file: !125, line: 607, type: !104)
!9369 = !DILocalVariable(name: "cqe", scope: !9362, file: !125, line: 609, type: !9370)
!9370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!9371 = !DILocalVariable(name: "idx", scope: !9372, file: !125, line: 609, type: !24)
!9372 = distinct !DILexicalBlock(scope: !9362, file: !125, line: 609, column: 25)
!9373 = !DILocalVariable(name: "acq", scope: !9372, file: !125, line: 609, type: !422)
!9374 = !DILocation(line: 0, scope: !9362)
!9375 = !DILocation(line: 609, column: 25, scope: !9372)
!9376 = !DILocation(line: 0, scope: !9372)
!9377 = !DILocation(line: 612, column: 18, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !125, line: 611, column: 19)
!9379 = distinct !DILexicalBlock(scope: !9362, file: !125, line: 611, column: 6)
!9380 = !DILocation(line: 612, column: 3, scope: !9378)
!9381 = !DILocation(line: 613, column: 2, scope: !9378)
!9382 = !DILocation(line: 609, column: 25, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !125, line: 609, column: 25)
!9384 = distinct !DILexicalBlock(scope: !9372, file: !125, line: 609, column: 25)
!9385 = !DILocation(line: 614, column: 8, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9379, file: !125, line: 613, column: 9)
!9387 = !DILocation(line: 614, column: 15, scope: !9386)
!9388 = !DILocation(line: 615, column: 8, scope: !9386)
!9389 = !DILocation(line: 615, column: 17, scope: !9386)
!9390 = !DILocation(line: 616, column: 3, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9392, file: !125, line: 616, column: 3)
!9392 = distinct !DILexicalBlock(scope: !9386, file: !125, line: 616, column: 3)
!9393 = !DILocation(line: 616, column: 3, scope: !9392)
!9394 = !DILocation(line: 616, column: 3, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9391, file: !125, line: 616, column: 3)
!9396 = !DILocation(line: 629, column: 1, scope: !9362)
!9397 = distinct !DISubprogram(name: "conex_task_id", scope: !974, file: !974, line: 55, type: !9398, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9400)
!9398 = !DISubroutineType(types: !9399)
!9399 = !{!168, !868, !923}
!9400 = !{!9401, !9402, !9403}
!9401 = !DILocalVariable(name: "exc", arg: 1, scope: !9397, file: !974, line: 55, type: !868)
!9402 = !DILocalVariable(name: "sqe", arg: 2, scope: !9397, file: !974, line: 56, type: !923)
!9403 = !DILocalVariable(name: "task_id", scope: !9397, file: !974, line: 58, type: !168)
!9404 = !DILocation(line: 0, scope: !9397)
!9405 = !DILocation(line: 58, column: 26, scope: !9397)
!9406 = !DILocation(line: 60, column: 17, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9408, file: !974, line: 60, column: 2)
!9408 = distinct !DILexicalBlock(scope: !9397, file: !974, line: 60, column: 2)
!9409 = !DILocation(line: 60, column: 2, scope: !9408)
!9410 = !DILocation(line: 61, column: 12, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9412, file: !974, line: 61, column: 7)
!9412 = distinct !DILexicalBlock(scope: !9407, file: !974, line: 60, column: 44)
!9413 = !DILocation(line: 61, column: 29, scope: !9411)
!9414 = !DILocation(line: 61, column: 7, scope: !9411)
!9415 = !DILocation(line: 61, column: 47, scope: !9411)
!9416 = !DILocation(line: 61, column: 7, scope: !9412)
!9417 = !DILocation(line: 60, column: 40, scope: !9407)
!9418 = distinct !{!9418, !9409, !9419}
!9419 = !DILocation(line: 64, column: 2, scope: !9408)
!9420 = !DILocation(line: 65, column: 2, scope: !9397)
!9421 = distinct !DISubprogram(name: "conex_sweep_resume", scope: !974, file: !974, line: 106, type: !9268, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9422)
!9422 = !{!9423, !9424}
!9423 = !DILocalVariable(name: "r", arg: 1, scope: !9421, file: !974, line: 106, type: !884)
!9424 = !DILocalVariable(name: "exc", arg: 2, scope: !9421, file: !974, line: 106, type: !868)
!9425 = !DILocation(line: 0, scope: !9421)
!9426 = !DILocation(line: 108, column: 2, scope: !9421)
!9427 = !DILocation(line: 109, column: 2, scope: !9421)
!9428 = !DILocation(line: 110, column: 1, scope: !9421)
!9429 = distinct !DISubprogram(name: "conex_sweep", scope: !974, file: !974, line: 80, type: !9268, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9430)
!9430 = !{!9431, !9432, !9433}
!9431 = !DILocalVariable(name: "r", arg: 1, scope: !9429, file: !974, line: 80, type: !884)
!9432 = !DILocalVariable(name: "exc", arg: 2, scope: !9429, file: !974, line: 80, type: !868)
!9433 = !DILocalVariable(name: "task_id", scope: !9434, file: !974, line: 83, type: !168)
!9434 = distinct !DILexicalBlock(scope: !9429, file: !974, line: 83, column: 2)
!9435 = !DILocation(line: 0, scope: !9429)
!9436 = !DILocation(line: 83, column: 31, scope: !9434)
!9437 = !DILocation(line: 0, scope: !9434)
!9438 = !DILocation(line: 84, column: 12, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9440, file: !974, line: 84, column: 7)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !974, line: 83, column: 76)
!9441 = distinct !DILexicalBlock(scope: !9434, file: !974, line: 83, column: 2)
!9442 = !DILocation(line: 83, column: 56, scope: !9441)
!9443 = !DILocation(line: 83, column: 49, scope: !9441)
!9444 = !DILocation(line: 83, column: 2, scope: !9434)
!9445 = !DILocation(line: 84, column: 39, scope: !9439)
!9446 = !DILocation(line: 84, column: 32, scope: !9439)
!9447 = !DILocation(line: 84, column: 7, scope: !9439)
!9448 = !DILocation(line: 84, column: 50, scope: !9439)
!9449 = !DILocation(line: 84, column: 7, scope: !9440)
!9450 = !DILocation(line: 85, column: 4, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !974, line: 85, column: 4)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !974, line: 85, column: 4)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !974, line: 85, column: 4)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !974, line: 85, column: 4)
!9455 = distinct !DILexicalBlock(scope: !9439, file: !974, line: 84, column: 73)
!9456 = !DILocation(line: 86, column: 4, scope: !9455)
!9457 = !DILocation(line: 87, column: 17, scope: !9455)
!9458 = !DILocation(line: 83, column: 72, scope: !9441)
!9459 = distinct !{!9459, !9444, !9460}
!9460 = !DILocation(line: 91, column: 2, scope: !9434)
!9461 = !DILocation(line: 92, column: 1, scope: !9429)
!9462 = distinct !DISubprogram(name: "conex_sweep_task", scope: !974, file: !974, line: 68, type: !9268, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9463)
!9463 = !{!9464, !9465, !9466, !9467, !9469, !9470, !9473}
!9464 = !DILocalVariable(name: "r", arg: 1, scope: !9462, file: !974, line: 68, type: !884)
!9465 = !DILocalVariable(name: "exc", arg: 2, scope: !9462, file: !974, line: 68, type: !868)
!9466 = !DILocalVariable(name: "sqe", scope: !9462, file: !974, line: 70, type: !968)
!9467 = !DILocalVariable(name: "idx", scope: !9468, file: !974, line: 70, type: !24)
!9468 = distinct !DILexicalBlock(scope: !9462, file: !974, line: 70, column: 25)
!9469 = !DILocalVariable(name: "has_consumable", scope: !9468, file: !974, line: 70, type: !422)
!9470 = !DILocalVariable(name: "idx", scope: !9471, file: !974, line: 74, type: !24)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !974, line: 74, column: 9)
!9472 = distinct !DILexicalBlock(scope: !9462, file: !974, line: 72, column: 55)
!9473 = !DILocalVariable(name: "has_consumable", scope: !9471, file: !974, line: 74, type: !422)
!9474 = !DILocation(line: 0, scope: !9462)
!9475 = !DILocation(line: 70, column: 25, scope: !9468)
!9476 = !DILocation(line: 0, scope: !9468)
!9477 = !DILocation(line: 72, column: 29, scope: !9462)
!9478 = !DILocation(line: 72, column: 35, scope: !9462)
!9479 = !DILocation(line: 72, column: 21, scope: !9462)
!9480 = !DILocation(line: 72, column: 2, scope: !9462)
!9481 = !DILocation(line: 73, column: 3, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !974, line: 73, column: 3)
!9483 = distinct !DILexicalBlock(scope: !9472, file: !974, line: 73, column: 3)
!9484 = !DILocation(line: 73, column: 3, scope: !9483)
!9485 = !DILocation(line: 73, column: 3, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9482, file: !974, line: 73, column: 3)
!9487 = !DILocation(line: 74, column: 9, scope: !9471)
!9488 = !DILocation(line: 0, scope: !9471)
!9489 = !DILocation(line: 77, column: 2, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !974, line: 77, column: 2)
!9491 = distinct !DILexicalBlock(scope: !9462, file: !974, line: 77, column: 2)
!9492 = !DILocation(line: 77, column: 2, scope: !9491)
!9493 = !DILocation(line: 77, column: 2, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9490, file: !974, line: 77, column: 2)
!9495 = !DILocation(line: 78, column: 1, scope: !9462)
!9496 = distinct !DISubprogram(name: "atomic_add", scope: !3684, file: !3684, line: 86, type: !3720, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9497)
!9497 = !{!9498, !9499}
!9498 = !DILocalVariable(name: "target", arg: 1, scope: !9496, file: !3684, line: 86, type: !3722)
!9499 = !DILocalVariable(name: "value", arg: 2, scope: !9496, file: !3684, line: 86, type: !3687)
!9500 = !DILocation(line: 0, scope: !9496)
!9501 = !DILocation(line: 88, column: 9, scope: !9496)
!9502 = !DILocation(line: 88, column: 2, scope: !9496)
!9503 = distinct !DISubprogram(name: "atomic_inc", scope: !3684, file: !3684, line: 123, type: !9046, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9504)
!9504 = !{!9505}
!9505 = !DILocalVariable(name: "target", arg: 1, scope: !9503, file: !3684, line: 123, type: !3722)
!9506 = !DILocation(line: 0, scope: !9503)
!9507 = !DILocation(line: 125, column: 9, scope: !9503)
!9508 = !DILocation(line: 125, column: 2, scope: !9503)
!9509 = distinct !DISubprogram(name: "rtio_concurrent_err", scope: !974, file: !974, line: 241, type: !959, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9510)
!9510 = !{!9511, !9512, !9513, !9514, !9515, !9516, !9517, !9518, !9522, !9523, !9526}
!9511 = !DILocalVariable(name: "r", arg: 1, scope: !9509, file: !974, line: 241, type: !884)
!9512 = !DILocalVariable(name: "sqe", arg: 2, scope: !9509, file: !974, line: 241, type: !923)
!9513 = !DILocalVariable(name: "result", arg: 3, scope: !9509, file: !974, line: 241, type: !108)
!9514 = !DILocalVariable(name: "nsqe", scope: !9509, file: !974, line: 243, type: !968)
!9515 = !DILocalVariable(name: "key", scope: !9509, file: !974, line: 244, type: !9115)
!9516 = !DILocalVariable(name: "exc", scope: !9509, file: !974, line: 245, type: !868)
!9517 = !DILocalVariable(name: "task_id", scope: !9509, file: !974, line: 260, type: !168)
!9518 = !DILocalVariable(name: "idx", scope: !9519, file: !974, line: 265, type: !24)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !974, line: 265, column: 10)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !974, line: 264, column: 37)
!9521 = distinct !DILexicalBlock(scope: !9509, file: !974, line: 264, column: 6)
!9522 = !DILocalVariable(name: "has_next", scope: !9519, file: !974, line: 265, type: !422)
!9523 = !DILocalVariable(name: "idx", scope: !9524, file: !974, line: 268, type: !24)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !974, line: 268, column: 11)
!9525 = distinct !DILexicalBlock(scope: !9520, file: !974, line: 266, column: 58)
!9526 = !DILocalVariable(name: "has_next", scope: !9524, file: !974, line: 268, type: !422)
!9527 = !DILocation(line: 0, scope: !9509)
!9528 = !DILocation(line: 245, column: 79, scope: !9509)
!9529 = !DILocation(line: 0, scope: !9149, inlinedAt: !9530)
!9530 = distinct !DILocation(line: 255, column: 8, scope: !9509)
!9531 = !DILocation(line: 55, column: 2, scope: !9158, inlinedAt: !9532)
!9532 = distinct !DILocation(line: 145, column: 10, scope: !9149, inlinedAt: !9530)
!9533 = !DILocation(line: 0, scope: !9158, inlinedAt: !9532)
!9534 = !DILocation(line: 257, column: 34, scope: !9509)
!9535 = !DILocation(line: 257, column: 2, scope: !9509)
!9536 = !DILocation(line: 260, column: 21, scope: !9509)
!9537 = !DILocation(line: 264, column: 11, scope: !9521)
!9538 = !DILocation(line: 264, column: 17, scope: !9521)
!9539 = !DILocation(line: 264, column: 6, scope: !9509)
!9540 = !DILocation(line: 265, column: 10, scope: !9519)
!9541 = !DILocation(line: 0, scope: !9519)
!9542 = !DILocation(line: 266, column: 23, scope: !9520)
!9543 = !DILocation(line: 266, column: 3, scope: !9520)
!9544 = !DILocation(line: 266, column: 32, scope: !9520)
!9545 = !DILocation(line: 266, column: 38, scope: !9520)
!9546 = !DILocation(line: 267, column: 41, scope: !9525)
!9547 = !DILocation(line: 267, column: 4, scope: !9525)
!9548 = !DILocation(line: 268, column: 11, scope: !9524)
!9549 = !DILocation(line: 0, scope: !9524)
!9550 = !DILocation(line: 273, column: 7, scope: !9509)
!9551 = !DILocation(line: 273, column: 2, scope: !9509)
!9552 = !DILocation(line: 273, column: 28, scope: !9509)
!9553 = !DILocation(line: 275, column: 2, scope: !9509)
!9554 = !DILocation(line: 0, scope: !9221, inlinedAt: !9555)
!9555 = distinct !DILocation(line: 277, column: 2, scope: !9509)
!9556 = !DILocation(line: 0, scope: !9229, inlinedAt: !9557)
!9557 = distinct !DILocation(line: 215, column: 2, scope: !9221, inlinedAt: !9555)
!9558 = !DILocation(line: 95, column: 2, scope: !9229, inlinedAt: !9557)
!9559 = !DILocation(line: 278, column: 1, scope: !9509)
!9560 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1066, file: !1066, line: 368, type: !1116, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9561)
!9561 = !{!9562}
!9562 = !DILocalVariable(name: "dev", arg: 1, scope: !9560, file: !1066, line: 368, type: !1092)
!9563 = !DILocation(line: 0, scope: !9560)
!9564 = !DILocation(line: 370, column: 2, scope: !9560)
!9565 = !DILocation(line: 371, column: 1, scope: !9560)
!9566 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1066, file: !1066, line: 243, type: !9567, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9569)
!9567 = !DISubroutineType(types: !9568)
!9568 = !{null, !108, !108, !1092}
!9569 = !{!9570, !9571, !9572, !9573, !9575}
!9570 = !DILocalVariable(name: "min", arg: 1, scope: !9566, file: !1066, line: 243, type: !108)
!9571 = !DILocalVariable(name: "max", arg: 2, scope: !9566, file: !1066, line: 243, type: !108)
!9572 = !DILocalVariable(name: "dev", arg: 3, scope: !9566, file: !1066, line: 243, type: !1092)
!9573 = !DILocalVariable(name: "data", scope: !9566, file: !1066, line: 245, type: !9574)
!9574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!9575 = !DILocalVariable(name: "line", scope: !9566, file: !1066, line: 246, type: !108)
!9576 = !DILocation(line: 0, scope: !9566)
!9577 = !DILocation(line: 245, column: 38, scope: !9566)
!9578 = !DILocation(line: 249, column: 24, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !1066, line: 249, column: 2)
!9580 = distinct !DILexicalBlock(scope: !9566, file: !1066, line: 249, column: 2)
!9581 = !DILocation(line: 249, column: 2, scope: !9580)
!9582 = !DILocation(line: 251, column: 7, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !1066, line: 251, column: 7)
!9584 = distinct !DILexicalBlock(scope: !9579, file: !1066, line: 249, column: 39)
!9585 = !DILocation(line: 251, column: 7, scope: !9584)
!9586 = !DILocation(line: 253, column: 4, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9583, file: !1066, line: 251, column: 36)
!9588 = !DILocation(line: 256, column: 24, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9587, file: !1066, line: 256, column: 8)
!9590 = !DILocation(line: 256, column: 9, scope: !9589)
!9591 = !DILocation(line: 256, column: 8, scope: !9587)
!9592 = !DILocation(line: 260, column: 43, scope: !9587)
!9593 = !DILocation(line: 260, column: 4, scope: !9587)
!9594 = !DILocation(line: 261, column: 3, scope: !9587)
!9595 = !DILocation(line: 249, column: 35, scope: !9579)
!9596 = distinct !{!9596, !9581, !9597}
!9597 = !DILocation(line: 262, column: 2, scope: !9580)
!9598 = !DILocation(line: 263, column: 1, scope: !9566)
!9599 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1066, file: !1066, line: 158, type: !557, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9600)
!9600 = !{!9601}
!9601 = !DILocalVariable(name: "line", arg: 1, scope: !9599, file: !1066, line: 158, type: !108)
!9602 = !DILocation(line: 0, scope: !9599)
!9603 = !DILocation(line: 170, column: 38, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !1066, line: 160, column: 17)
!9605 = distinct !DILexicalBlock(scope: !9599, file: !1066, line: 160, column: 6)
!9606 = !DILocation(line: 170, column: 10, scope: !9604)
!9607 = !DILocation(line: 176, column: 1, scope: !9599)
!9608 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1066, file: !1066, line: 183, type: !9609, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9611)
!9609 = !DISubroutineType(types: !9610)
!9610 = !{null, !108}
!9611 = !{!9612}
!9612 = !DILocalVariable(name: "line", arg: 1, scope: !9608, file: !1066, line: 183, type: !108)
!9613 = !DILocation(line: 0, scope: !9608)
!9614 = !DILocation(line: 195, column: 28, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9616, file: !1066, line: 185, column: 17)
!9616 = distinct !DILexicalBlock(scope: !9608, file: !1066, line: 185, column: 6)
!9617 = !DILocation(line: 195, column: 3, scope: !9615)
!9618 = !DILocation(line: 200, column: 1, scope: !9608)
!9619 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9620, file: !9620, line: 910, type: !7120, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9621)
!9620 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9621 = !{!9622}
!9622 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9619, file: !9620, line: 910, type: !113)
!9623 = !DILocation(line: 0, scope: !9619)
!9624 = !DILocation(line: 912, column: 3, scope: !9619)
!9625 = !DILocation(line: 913, column: 1, scope: !9619)
!9626 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9620, file: !9620, line: 834, type: !8275, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9627)
!9627 = !{!9628}
!9628 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9626, file: !9620, line: 834, type: !113)
!9629 = !DILocation(line: 0, scope: !9626)
!9630 = !DILocation(line: 836, column: 11, scope: !9626)
!9631 = !DILocation(line: 836, column: 40, scope: !9626)
!9632 = !DILocation(line: 836, column: 3, scope: !9626)
!9633 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1066, file: !1066, line: 304, type: !1116, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9634)
!9634 = !{!9635}
!9635 = !DILocalVariable(name: "dev", arg: 1, scope: !9633, file: !1066, line: 304, type: !1092)
!9636 = !DILocation(line: 0, scope: !9633)
!9637 = !DILocation(line: 306, column: 2, scope: !9633)
!9638 = !DILocation(line: 307, column: 1, scope: !9633)
!9639 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1066, file: !1066, line: 299, type: !1116, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9640)
!9640 = !{!9641}
!9641 = !DILocalVariable(name: "dev", arg: 1, scope: !9639, file: !1066, line: 299, type: !1092)
!9642 = !DILocation(line: 0, scope: !9639)
!9643 = !DILocation(line: 301, column: 2, scope: !9639)
!9644 = !DILocation(line: 302, column: 1, scope: !9639)
!9645 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1066, file: !1066, line: 294, type: !1116, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9646)
!9646 = !{!9647}
!9647 = !DILocalVariable(name: "dev", arg: 1, scope: !9645, file: !1066, line: 294, type: !1092)
!9648 = !DILocation(line: 0, scope: !9645)
!9649 = !DILocation(line: 296, column: 2, scope: !9645)
!9650 = !DILocation(line: 297, column: 1, scope: !9645)
!9651 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1066, file: !1066, line: 397, type: !1116, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9652)
!9652 = !{!9653}
!9653 = !DILocalVariable(name: "dev", arg: 1, scope: !9651, file: !1066, line: 397, type: !1092)
!9654 = !DILocation(line: 0, scope: !9651)
!9655 = !DILocation(line: 399, column: 2, scope: !9651)
!9656 = !DILocation(line: 400, column: 1, scope: !9651)
!9657 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1066, file: !1066, line: 392, type: !1116, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9658)
!9658 = !{!9659}
!9659 = !DILocalVariable(name: "dev", arg: 1, scope: !9657, file: !1066, line: 392, type: !1092)
!9660 = !DILocation(line: 0, scope: !9657)
!9661 = !DILocation(line: 394, column: 2, scope: !9657)
!9662 = !DILocation(line: 395, column: 1, scope: !9657)
!9663 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1066, file: !1066, line: 289, type: !1116, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9664)
!9664 = !{!9665}
!9665 = !DILocalVariable(name: "dev", arg: 1, scope: !9663, file: !1066, line: 289, type: !1092)
!9666 = !DILocation(line: 0, scope: !9663)
!9667 = !DILocation(line: 291, column: 2, scope: !9663)
!9668 = !DILocation(line: 292, column: 1, scope: !9663)
!9669 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1066, file: !1066, line: 387, type: !1116, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9670)
!9670 = !{!9671}
!9671 = !DILocalVariable(name: "dev", arg: 1, scope: !9669, file: !1066, line: 387, type: !1092)
!9672 = !DILocation(line: 0, scope: !9669)
!9673 = !DILocation(line: 389, column: 2, scope: !9669)
!9674 = !DILocation(line: 390, column: 1, scope: !9669)
!9675 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1066, file: !1066, line: 382, type: !1116, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9676)
!9676 = !{!9677}
!9677 = !DILocalVariable(name: "dev", arg: 1, scope: !9675, file: !1066, line: 382, type: !1092)
!9678 = !DILocation(line: 0, scope: !9675)
!9679 = !DILocation(line: 384, column: 2, scope: !9675)
!9680 = !DILocation(line: 385, column: 1, scope: !9675)
!9681 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1066, file: !1066, line: 373, type: !1116, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9682)
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "dev", arg: 1, scope: !9681, file: !1066, line: 373, type: !1092)
!9684 = !DILocation(line: 0, scope: !9681)
!9685 = !DILocation(line: 375, column: 2, scope: !9681)
!9686 = !DILocation(line: 376, column: 1, scope: !9681)
!9687 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1066, file: !1066, line: 284, type: !1116, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9688)
!9688 = !{!9689}
!9689 = !DILocalVariable(name: "dev", arg: 1, scope: !9687, file: !1066, line: 284, type: !1092)
!9690 = !DILocation(line: 0, scope: !9687)
!9691 = !DILocation(line: 286, column: 2, scope: !9687)
!9692 = !DILocation(line: 287, column: 1, scope: !9687)
!9693 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1066, file: !1066, line: 416, type: !1090, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9694)
!9694 = !{!9695}
!9695 = !DILocalVariable(name: "dev", arg: 1, scope: !9693, file: !1066, line: 416, type: !1092)
!9696 = !DILocation(line: 0, scope: !9693)
!9697 = !DILocation(line: 418, column: 2, scope: !9693)
!9698 = !DILocation(line: 420, column: 2, scope: !9693)
!9699 = !DILocation(line: 0, scope: !1115)
!9700 = !DILocation(line: 493, column: 2, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 493, column: 2)
!9702 = !DILocation(line: 497, column: 2, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 497, column: 2)
!9704 = !DILocation(line: 507, column: 2, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 507, column: 2)
!9706 = !DILocation(line: 512, column: 2, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 512, column: 2)
!9708 = !DILocation(line: 516, column: 2, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 516, column: 2)
!9710 = !DILocation(line: 523, column: 2, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 523, column: 2)
!9712 = !DILocation(line: 527, column: 2, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 527, column: 2)
!9714 = !DILocation(line: 581, column: 2, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 581, column: 2)
!9716 = !DILocation(line: 586, column: 2, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 586, column: 2)
!9718 = !DILocation(line: 591, column: 2, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 591, column: 2)
!9720 = !DILocation(line: 595, column: 2, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !1115, file: !1066, line: 595, column: 2)
!9722 = !DILocation(line: 607, column: 1, scope: !1115)
!9723 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1066, file: !1066, line: 112, type: !9609, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9724)
!9724 = !{!9725, !9726}
!9725 = !DILocalVariable(name: "line", arg: 1, scope: !9723, file: !1066, line: 112, type: !108)
!9726 = !DILocalVariable(name: "irqnum", scope: !9723, file: !1066, line: 114, type: !108)
!9727 = !DILocation(line: 0, scope: !9723)
!9728 = !DILocation(line: 121, column: 11, scope: !9723)
!9729 = !DILocation(line: 130, column: 26, scope: !9723)
!9730 = !DILocation(line: 130, column: 2, scope: !9723)
!9731 = !DILocation(line: 134, column: 2, scope: !9723)
!9732 = !DILocation(line: 135, column: 1, scope: !9723)
!9733 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9620, file: !9620, line: 268, type: !7120, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9734)
!9734 = !{!9735}
!9735 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9733, file: !9620, line: 268, type: !113)
!9736 = !DILocation(line: 0, scope: !9733)
!9737 = !DILocation(line: 270, column: 3, scope: !9733)
!9738 = !DILocation(line: 271, column: 1, scope: !9733)
!9739 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1066, file: !1066, line: 137, type: !9609, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9740)
!9740 = !{!9741}
!9741 = !DILocalVariable(name: "line", arg: 1, scope: !9739, file: !1066, line: 137, type: !108)
!9742 = !DILocation(line: 0, scope: !9739)
!9743 = !DILocation(line: 141, column: 11, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9739, file: !1066, line: 141, column: 6)
!9745 = !DILocation(line: 141, column: 6, scope: !9739)
!9746 = !DILocation(line: 145, column: 28, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9744, file: !1066, line: 141, column: 17)
!9748 = !DILocation(line: 145, column: 3, scope: !9747)
!9749 = !DILocation(line: 147, column: 2, scope: !9747)
!9750 = !DILocation(line: 151, column: 1, scope: !9739)
!9751 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9620, file: !9620, line: 309, type: !7120, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9752)
!9752 = !{!9753}
!9753 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9751, file: !9620, line: 309, type: !113)
!9754 = !DILocation(line: 0, scope: !9751)
!9755 = !DILocation(line: 311, column: 3, scope: !9751)
!9756 = !DILocation(line: 312, column: 1, scope: !9751)
!9757 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1066, file: !1066, line: 202, type: !9758, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9760)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{null, !108, !108}
!9760 = !{!9761, !9762}
!9761 = !DILocalVariable(name: "line", arg: 1, scope: !9757, file: !1066, line: 202, type: !108)
!9762 = !DILocalVariable(name: "trigger", arg: 2, scope: !9757, file: !1066, line: 202, type: !108)
!9763 = !DILocation(line: 0, scope: !9757)
!9764 = !DILocation(line: 211, column: 2, scope: !9757)
!9765 = !DILocation(line: 213, column: 36, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9757, file: !1066, line: 211, column: 19)
!9767 = !DILocation(line: 213, column: 3, scope: !9766)
!9768 = !DILocation(line: 214, column: 3, scope: !9766)
!9769 = !DILocation(line: 215, column: 3, scope: !9766)
!9770 = !DILocation(line: 217, column: 35, scope: !9766)
!9771 = !DILocation(line: 217, column: 3, scope: !9766)
!9772 = !DILocation(line: 218, column: 3, scope: !9766)
!9773 = !DILocation(line: 219, column: 3, scope: !9766)
!9774 = !DILocation(line: 221, column: 36, scope: !9766)
!9775 = !DILocation(line: 221, column: 3, scope: !9766)
!9776 = !DILocation(line: 222, column: 3, scope: !9766)
!9777 = !DILocation(line: 223, column: 3, scope: !9766)
!9778 = !DILocation(line: 225, column: 35, scope: !9766)
!9779 = !DILocation(line: 225, column: 3, scope: !9766)
!9780 = !DILocation(line: 226, column: 3, scope: !9766)
!9781 = !DILocation(line: 227, column: 3, scope: !9766)
!9782 = !DILocation(line: 232, column: 1, scope: !9757)
!9783 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9620, file: !9620, line: 573, type: !7120, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9784)
!9784 = !{!9785}
!9785 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9783, file: !9620, line: 573, type: !113)
!9786 = !DILocation(line: 0, scope: !9783)
!9787 = !DILocation(line: 575, column: 3, scope: !9783)
!9788 = !DILocation(line: 577, column: 1, scope: !9783)
!9789 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9620, file: !9620, line: 703, type: !7120, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9790)
!9790 = !{!9791}
!9791 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9789, file: !9620, line: 703, type: !113)
!9792 = !DILocation(line: 0, scope: !9789)
!9793 = !DILocation(line: 705, column: 3, scope: !9789)
!9794 = !DILocation(line: 706, column: 1, scope: !9789)
!9795 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9620, file: !9620, line: 529, type: !7120, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9796)
!9796 = !{!9797}
!9797 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9795, file: !9620, line: 529, type: !113)
!9798 = !DILocation(line: 0, scope: !9795)
!9799 = !DILocation(line: 531, column: 3, scope: !9795)
!9800 = !DILocation(line: 533, column: 1, scope: !9795)
!9801 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9620, file: !9620, line: 661, type: !7120, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9802)
!9802 = !{!9803}
!9803 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9801, file: !9620, line: 661, type: !113)
!9804 = !DILocation(line: 0, scope: !9801)
!9805 = !DILocation(line: 663, column: 3, scope: !9801)
!9806 = !DILocation(line: 664, column: 1, scope: !9801)
!9807 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1066, file: !1066, line: 433, type: !9808, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9810)
!9808 = !DISubroutineType(types: !9809)
!9809 = !{!108, !108, !1103, !104}
!9810 = !{!9811, !9812, !9813, !9814, !9816}
!9811 = !DILocalVariable(name: "line", arg: 1, scope: !9807, file: !1066, line: 433, type: !108)
!9812 = !DILocalVariable(name: "cb", arg: 2, scope: !9807, file: !1066, line: 433, type: !1103)
!9813 = !DILocalVariable(name: "arg", arg: 3, scope: !9807, file: !1066, line: 433, type: !104)
!9814 = !DILocalVariable(name: "dev", scope: !9807, file: !1066, line: 435, type: !9815)
!9815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1092)
!9816 = !DILocalVariable(name: "data", scope: !9807, file: !1066, line: 436, type: !9574)
!9817 = !DILocation(line: 0, scope: !9807)
!9818 = !DILocation(line: 438, column: 21, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9807, file: !1066, line: 438, column: 6)
!9820 = !DILocation(line: 438, column: 6, scope: !9819)
!9821 = !DILocation(line: 438, column: 6, scope: !9807)
!9822 = !DILocation(line: 442, column: 20, scope: !9807)
!9823 = !DILocation(line: 443, column: 17, scope: !9807)
!9824 = !DILocation(line: 443, column: 22, scope: !9807)
!9825 = !DILocation(line: 445, column: 2, scope: !9807)
!9826 = !DILocation(line: 446, column: 1, scope: !9807)
!9827 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1066, file: !1066, line: 448, type: !9609, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9828)
!9828 = !{!9829, !9830, !9831}
!9829 = !DILocalVariable(name: "line", arg: 1, scope: !9827, file: !1066, line: 448, type: !108)
!9830 = !DILocalVariable(name: "dev", scope: !9827, file: !1066, line: 450, type: !9815)
!9831 = !DILocalVariable(name: "data", scope: !9827, file: !1066, line: 451, type: !9574)
!9832 = !DILocation(line: 0, scope: !9827)
!9833 = !DILocation(line: 453, column: 17, scope: !9827)
!9834 = !DILocation(line: 453, column: 20, scope: !9827)
!9835 = !DILocation(line: 454, column: 17, scope: !9827)
!9836 = !DILocation(line: 454, column: 22, scope: !9827)
!9837 = !DILocation(line: 455, column: 1, scope: !9827)
!9838 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1215, file: !1215, line: 183, type: !1253, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9839)
!9839 = !{!9840, !9841, !9842, !9843, !9844}
!9840 = !DILocalVariable(name: "dev", arg: 1, scope: !9838, file: !1215, line: 183, type: !1244)
!9841 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9838, file: !1215, line: 184, type: !1255)
!9842 = !DILocalVariable(name: "pclken", scope: !9838, file: !1215, line: 186, type: !1205)
!9843 = !DILocalVariable(name: "reg", scope: !9838, file: !1215, line: 187, type: !1793)
!9844 = !DILocalVariable(name: "reg_val", scope: !9838, file: !1215, line: 188, type: !113)
!9845 = !DILocation(line: 0, scope: !9838)
!9846 = !DILocation(line: 192, column: 6, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9838, file: !1215, line: 192, column: 6)
!9848 = !DILocation(line: 192, column: 6, scope: !9838)
!9849 = !DILocation(line: 197, column: 52, scope: !9838)
!9850 = !DILocation(line: 197, column: 8, scope: !9838)
!9851 = !DILocation(line: 198, column: 12, scope: !9838)
!9852 = !DILocation(line: 199, column: 21, scope: !9838)
!9853 = !DILocation(line: 199, column: 10, scope: !9838)
!9854 = !DILocation(line: 200, column: 7, scope: !9838)
!9855 = !DILocation(line: 202, column: 2, scope: !9838)
!9856 = !DILocation(line: 203, column: 1, scope: !9838)
!9857 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1215, file: !1215, line: 205, type: !1253, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9858)
!9858 = !{!9859, !9860, !9861, !9862, !9863}
!9859 = !DILocalVariable(name: "dev", arg: 1, scope: !9857, file: !1215, line: 205, type: !1244)
!9860 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9857, file: !1215, line: 206, type: !1255)
!9861 = !DILocalVariable(name: "pclken", scope: !9857, file: !1215, line: 208, type: !1205)
!9862 = !DILocalVariable(name: "reg", scope: !9857, file: !1215, line: 209, type: !1793)
!9863 = !DILocalVariable(name: "reg_val", scope: !9857, file: !1215, line: 210, type: !113)
!9864 = !DILocation(line: 0, scope: !9857)
!9865 = !DILocation(line: 214, column: 6, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9857, file: !1215, line: 214, column: 6)
!9867 = !DILocation(line: 214, column: 6, scope: !9857)
!9868 = !DILocation(line: 219, column: 52, scope: !9857)
!9869 = !DILocation(line: 219, column: 8, scope: !9857)
!9870 = !DILocation(line: 220, column: 12, scope: !9857)
!9871 = !DILocation(line: 221, column: 22, scope: !9857)
!9872 = !DILocation(line: 221, column: 13, scope: !9857)
!9873 = !DILocation(line: 221, column: 10, scope: !9857)
!9874 = !DILocation(line: 222, column: 7, scope: !9857)
!9875 = !DILocation(line: 224, column: 2, scope: !9857)
!9876 = !DILocation(line: 225, column: 1, scope: !9857)
!9877 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1215, file: !1215, line: 262, type: !1269, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9878)
!9878 = !{!9879, !9880, !9881, !9882, !9883, !9884, !9885, !9886}
!9879 = !DILocalVariable(name: "clock", arg: 1, scope: !9877, file: !1215, line: 262, type: !1244)
!9880 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9877, file: !1215, line: 263, type: !1255)
!9881 = !DILocalVariable(name: "rate", arg: 3, scope: !9877, file: !1215, line: 264, type: !1211)
!9882 = !DILocalVariable(name: "pclken", scope: !9877, file: !1215, line: 266, type: !1205)
!9883 = !DILocalVariable(name: "ahb_clock", scope: !9877, file: !1215, line: 273, type: !113)
!9884 = !DILocalVariable(name: "apb1_clock", scope: !9877, file: !1215, line: 274, type: !113)
!9885 = !DILocalVariable(name: "apb2_clock", scope: !9877, file: !1215, line: 276, type: !113)
!9886 = !DILocalVariable(name: "ahb3_clock", scope: !9877, file: !1215, line: 286, type: !113)
!9887 = !DILocation(line: 0, scope: !9877)
!9888 = !DILocation(line: 273, column: 23, scope: !9877)
!9889 = !DILocation(line: 299, column: 18, scope: !9877)
!9890 = !DILocation(line: 299, column: 2, scope: !9877)
!9891 = !DILocation(line: 274, column: 24, scope: !9877)
!9892 = !DILocation(line: 319, column: 3, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9877, file: !1215, line: 299, column: 23)
!9894 = !DILocation(line: 276, column: 24, scope: !9877)
!9895 = !DILocation(line: 323, column: 3, scope: !9893)
!9896 = !DILocation(line: 346, column: 33, scope: !9893)
!9897 = !DILocation(line: 346, column: 11, scope: !9893)
!9898 = !DILocation(line: 350, column: 3, scope: !9893)
!9899 = !DILocation(line: 374, column: 3, scope: !9893)
!9900 = !DILocation(line: 379, column: 3, scope: !9893)
!9901 = !DILocation(line: 0, scope: !9893)
!9902 = !DILocation(line: 396, column: 1, scope: !9877)
!9903 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1215, file: !1215, line: 227, type: !1285, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9904)
!9904 = !{!9905, !9906, !9907, !9908, !9909, !9910, !9911, !9912}
!9905 = !DILocalVariable(name: "dev", arg: 1, scope: !9903, file: !1215, line: 227, type: !1244)
!9906 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9903, file: !1215, line: 228, type: !1255)
!9907 = !DILocalVariable(name: "data", arg: 3, scope: !9903, file: !1215, line: 229, type: !104)
!9908 = !DILocalVariable(name: "pclken", scope: !9903, file: !1215, line: 233, type: !1205)
!9909 = !DILocalVariable(name: "reg", scope: !9903, file: !1215, line: 234, type: !1793)
!9910 = !DILocalVariable(name: "reg_val", scope: !9903, file: !1215, line: 235, type: !113)
!9911 = !DILocalVariable(name: "dt_val", scope: !9903, file: !1215, line: 235, type: !113)
!9912 = !DILocalVariable(name: "err", scope: !9903, file: !1215, line: 236, type: !108)
!9913 = !DILocation(line: 0, scope: !9903)
!9914 = !DILocation(line: 241, column: 30, scope: !9903)
!9915 = !DILocation(line: 241, column: 8, scope: !9903)
!9916 = !DILocation(line: 242, column: 10, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9903, file: !1215, line: 242, column: 6)
!9918 = !DILocation(line: 242, column: 6, scope: !9903)
!9919 = !DILocation(line: 247, column: 11, scope: !9903)
!9920 = !DILocation(line: 248, column: 6, scope: !9903)
!9921 = !DILocation(line: 247, column: 44, scope: !9903)
!9922 = !DILocation(line: 250, column: 6, scope: !9903)
!9923 = !DILocation(line: 249, column: 52, scope: !9903)
!9924 = !DILocation(line: 249, column: 8, scope: !9903)
!9925 = !DILocation(line: 251, column: 12, scope: !9903)
!9926 = !DILocation(line: 252, column: 10, scope: !9903)
!9927 = !DILocation(line: 253, column: 7, scope: !9903)
!9928 = !DILocation(line: 255, column: 2, scope: !9903)
!9929 = !DILocation(line: 260, column: 1, scope: !9903)
!9930 = distinct !DISubprogram(name: "enabled_clock", scope: !1215, file: !1215, line: 100, type: !9931, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9933)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{!108, !113}
!9933 = !{!9934, !9935}
!9934 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9930, file: !1215, line: 100, type: !113)
!9935 = !DILocalVariable(name: "r", scope: !9930, file: !1215, line: 102, type: !108)
!9936 = !DILocation(line: 0, scope: !9930)
!9937 = !DILocation(line: 104, column: 2, scope: !9930)
!9938 = !DILocation(line: 180, column: 2, scope: !9930)
!9939 = !DILocation(line: 181, column: 1, scope: !9930)
!9940 = distinct !DISubprogram(name: "get_bus_clock", scope: !1215, file: !1215, line: 79, type: !9941, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9943)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{!113, !113, !113}
!9943 = !{!9944, !9945}
!9944 = !DILocalVariable(name: "clock", arg: 1, scope: !9940, file: !1215, line: 79, type: !113)
!9945 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9940, file: !1215, line: 79, type: !113)
!9946 = !DILocation(line: 0, scope: !9940)
!9947 = !DILocation(line: 81, column: 15, scope: !9940)
!9948 = !DILocation(line: 81, column: 2, scope: !9940)
!9949 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1215, file: !1215, line: 68, type: !9950, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9952)
!9950 = !DISubroutineType(types: !9951)
!9951 = !{!113, !113, !108, !108, !108}
!9952 = !{!9953, !9954, !9955, !9956}
!9953 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9949, file: !1215, line: 68, type: !113)
!9954 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9949, file: !1215, line: 69, type: !108)
!9955 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9949, file: !1215, line: 70, type: !108)
!9956 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9949, file: !1215, line: 71, type: !108)
!9957 = !DILocation(line: 0, scope: !9949)
!9958 = !DILocation(line: 75, column: 22, scope: !9949)
!9959 = !DILocation(line: 75, column: 34, scope: !9949)
!9960 = !DILocation(line: 75, column: 2, scope: !9949)
!9961 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1215, file: !1215, line: 641, type: !1242, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9962)
!9962 = !{!9963, !9964, !9965}
!9963 = !DILocalVariable(name: "dev", arg: 1, scope: !9961, file: !1215, line: 641, type: !1244)
!9964 = !DILocalVariable(name: "old_flash_freq", scope: !9961, file: !1215, line: 664, type: !113)
!9965 = !DILocalVariable(name: "new_flash_freq", scope: !9961, file: !1215, line: 665, type: !113)
!9966 = !DILocation(line: 0, scope: !9961)
!9967 = !DILocation(line: 646, column: 2, scope: !9961)
!9968 = !DILocation(line: 667, column: 19, scope: !9961)
!9969 = !DILocation(line: 674, column: 21, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9961, file: !1215, line: 674, column: 6)
!9971 = !DILocation(line: 674, column: 6, scope: !9961)
!9972 = !DILocation(line: 675, column: 3, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9970, file: !1215, line: 674, column: 59)
!9974 = !DILocation(line: 676, column: 2, scope: !9973)
!9975 = !DILocation(line: 680, column: 2, scope: !9961)
!9976 = !DILocation(line: 683, column: 2, scope: !9961)
!9977 = !DILocation(line: 690, column: 3, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !1215, line: 689, column: 9)
!9979 = distinct !DILexicalBlock(scope: !9961, file: !1215, line: 685, column: 6)
!9980 = !DILocation(line: 695, column: 2, scope: !9961)
!9981 = !DILocation(line: 696, column: 2, scope: !9961)
!9982 = !DILocation(line: 696, column: 9, scope: !9961)
!9983 = !DILocation(line: 696, column: 34, scope: !9961)
!9984 = distinct !{!9984, !9981, !9985}
!9985 = !DILocation(line: 697, column: 2, scope: !9961)
!9986 = !DILocation(line: 720, column: 21, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9961, file: !1215, line: 720, column: 6)
!9988 = !DILocation(line: 720, column: 6, scope: !9961)
!9989 = !DILocation(line: 721, column: 3, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9987, file: !1215, line: 720, column: 60)
!9991 = !DILocation(line: 722, column: 2, scope: !9990)
!9992 = !DILocation(line: 725, column: 18, scope: !9961)
!9993 = !DILocation(line: 728, column: 2, scope: !9961)
!9994 = !DILocation(line: 730, column: 2, scope: !9961)
!9995 = !DILocation(line: 745, column: 2, scope: !9961)
!9996 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9997, file: !9997, line: 3275, type: !7110, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!9997 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9998 = !DILocation(line: 3277, column: 21, scope: !9996)
!9999 = !DILocation(line: 3277, column: 3, scope: !9996)
!10000 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1215, file: !1215, line: 507, type: !3389, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10001 = !DILocation(line: 534, column: 7, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !10003, file: !1215, line: 534, column: 7)
!10003 = distinct !DILexicalBlock(scope: !10004, file: !1215, line: 532, column: 37)
!10004 = distinct !DILexicalBlock(scope: !10000, file: !1215, line: 532, column: 6)
!10005 = !DILocation(line: 534, column: 28, scope: !10002)
!10006 = !DILocation(line: 534, column: 7, scope: !10003)
!10007 = !DILocation(line: 536, column: 4, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10002, file: !1215, line: 534, column: 34)
!10009 = !DILocation(line: 537, column: 4, scope: !10008)
!10010 = !DILocation(line: 537, column: 11, scope: !10008)
!10011 = !DILocation(line: 537, column: 32, scope: !10008)
!10012 = distinct !{!10012, !10009, !10013}
!10013 = !DILocation(line: 539, column: 4, scope: !10008)
!10014 = !DILocation(line: 583, column: 3, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !1215, line: 577, column: 37)
!10016 = distinct !DILexicalBlock(scope: !10000, file: !1215, line: 577, column: 6)
!10017 = !DILocation(line: 584, column: 3, scope: !10015)
!10018 = !DILocation(line: 584, column: 10, scope: !10015)
!10019 = !DILocation(line: 584, column: 31, scope: !10015)
!10020 = distinct !{!10020, !10017, !10021}
!10021 = !DILocation(line: 585, column: 3, scope: !10015)
!10022 = !DILocation(line: 627, column: 1, scope: !10000)
!10023 = distinct !DISubprogram(name: "set_up_plls", scope: !1215, file: !1215, line: 448, type: !3389, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10024 = !DILocation(line: 460, column: 6, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10023, file: !1215, line: 460, column: 6)
!10026 = !DILocation(line: 460, column: 31, scope: !10025)
!10027 = !DILocation(line: 460, column: 6, scope: !10023)
!10028 = !DILocation(line: 461, column: 3, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10025, file: !1215, line: 460, column: 67)
!10030 = !DILocation(line: 462, column: 3, scope: !10029)
!10031 = !DILocation(line: 463, column: 2, scope: !10029)
!10032 = !DILocation(line: 464, column: 2, scope: !10023)
!10033 = !DILocation(line: 488, column: 2, scope: !10023)
!10034 = !DILocation(line: 496, column: 2, scope: !10023)
!10035 = !DILocation(line: 499, column: 2, scope: !10023)
!10036 = !DILocation(line: 500, column: 2, scope: !10023)
!10037 = !DILocation(line: 500, column: 9, scope: !10023)
!10038 = !DILocation(line: 500, column: 30, scope: !10023)
!10039 = distinct !{!10039, !10036, !10040}
!10040 = !DILocation(line: 502, column: 2, scope: !10023)
!10041 = !DILocation(line: 505, column: 1, scope: !10023)
!10042 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9997, file: !9997, line: 3224, type: !7120, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10043)
!10043 = !{!10044}
!10044 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10042, file: !9997, line: 3224, type: !113)
!10045 = !DILocation(line: 0, scope: !10042)
!10046 = !DILocation(line: 3226, column: 3, scope: !10042)
!10047 = !DILocation(line: 3227, column: 1, scope: !10042)
!10048 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9997, file: !9997, line: 3188, type: !7120, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10049)
!10049 = !{!10050}
!10050 = !DILocalVariable(name: "Source", arg: 1, scope: !10048, file: !9997, line: 3188, type: !113)
!10051 = !DILocation(line: 0, scope: !10048)
!10052 = !DILocation(line: 3190, column: 3, scope: !10048)
!10053 = !DILocation(line: 3191, column: 1, scope: !10048)
!10054 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9997, file: !9997, line: 3204, type: !7110, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10055 = !DILocation(line: 3206, column: 21, scope: !10054)
!10056 = !DILocation(line: 3206, column: 3, scope: !10054)
!10057 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9997, file: !9997, line: 3240, type: !7120, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10058)
!10058 = !{!10059}
!10059 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10057, file: !9997, line: 3240, type: !113)
!10060 = !DILocation(line: 0, scope: !10057)
!10061 = !DILocation(line: 3242, column: 3, scope: !10057)
!10062 = !DILocation(line: 3243, column: 1, scope: !10057)
!10063 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9997, file: !9997, line: 3256, type: !7120, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10064)
!10064 = !{!10065}
!10065 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10063, file: !9997, line: 3256, type: !113)
!10066 = !DILocation(line: 0, scope: !10063)
!10067 = !DILocation(line: 3258, column: 3, scope: !10063)
!10068 = !DILocation(line: 3259, column: 1, scope: !10063)
!10069 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1215, file: !1215, line: 409, type: !3389, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10070 = !DILocation(line: 412, column: 6, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10069, file: !1215, line: 412, column: 6)
!10072 = !DILocation(line: 412, column: 27, scope: !10071)
!10073 = !DILocation(line: 412, column: 6, scope: !10069)
!10074 = !DILocation(line: 414, column: 3, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10071, file: !1215, line: 412, column: 33)
!10076 = !DILocation(line: 415, column: 3, scope: !10075)
!10077 = !DILocation(line: 415, column: 10, scope: !10075)
!10078 = !DILocation(line: 415, column: 31, scope: !10075)
!10079 = distinct !{!10079, !10076, !10080}
!10080 = !DILocation(line: 417, column: 3, scope: !10075)
!10081 = !DILocation(line: 421, column: 2, scope: !10069)
!10082 = !DILocation(line: 422, column: 2, scope: !10069)
!10083 = !DILocation(line: 422, column: 9, scope: !10069)
!10084 = !DILocation(line: 422, column: 34, scope: !10069)
!10085 = distinct !{!10085, !10082, !10086}
!10086 = !DILocation(line: 423, column: 2, scope: !10069)
!10087 = !DILocation(line: 424, column: 1, scope: !10069)
!10088 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9997, file: !9997, line: 4195, type: !3389, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10089 = !DILocation(line: 4197, column: 3, scope: !10088)
!10090 = !DILocation(line: 4198, column: 1, scope: !10088)
!10091 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9997, file: !9997, line: 4184, type: !3389, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10092 = !DILocation(line: 4186, column: 3, scope: !10091)
!10093 = !DILocation(line: 4187, column: 1, scope: !10091)
!10094 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9997, file: !9997, line: 4205, type: !7110, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10095 = !DILocation(line: 4207, column: 11, scope: !10094)
!10096 = !DILocation(line: 4207, column: 44, scope: !10094)
!10097 = !DILocation(line: 4207, column: 3, scope: !10094)
!10098 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9997, file: !9997, line: 3007, type: !7110, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10099 = !DILocation(line: 3009, column: 11, scope: !10098)
!10100 = !DILocation(line: 3009, column: 44, scope: !10098)
!10101 = !DILocation(line: 3009, column: 3, scope: !10098)
!10102 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9997, file: !9997, line: 2987, type: !3389, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10103 = !DILocation(line: 2989, column: 3, scope: !10102)
!10104 = !DILocation(line: 2990, column: 1, scope: !10102)
!10105 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9997, file: !9997, line: 3143, type: !3389, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10106 = !DILocation(line: 3145, column: 3, scope: !10105)
!10107 = !DILocation(line: 3146, column: 1, scope: !10105)
!10108 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9997, file: !9997, line: 3163, type: !7110, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !437)
!10109 = !DILocation(line: 3165, column: 11, scope: !10108)
!10110 = !DILocation(line: 3165, column: 46, scope: !10108)
!10111 = !DILocation(line: 3165, column: 3, scope: !10108)
!10112 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10113, file: !10113, line: 40, type: !7110, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !437)
!10113 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10114 = !DILocation(line: 43, column: 3, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !10113, line: 42, column: 37)
!10116 = distinct !DILexicalBlock(scope: !10112, file: !10113, line: 42, column: 6)
!10117 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10113, file: !10113, line: 56, type: !3389, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !437)
!10118 = !DILocation(line: 58, column: 2, scope: !10117)
!10119 = !DILocation(line: 62, column: 1, scope: !10117)
!10120 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9997, file: !9997, line: 4304, type: !10121, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !10123)
!10121 = !DISubroutineType(types: !10122)
!10122 = !{null, !113, !113, !113, !113}
!10123 = !{!10124, !10125, !10126, !10127}
!10124 = !DILocalVariable(name: "Source", arg: 1, scope: !10120, file: !9997, line: 4304, type: !113)
!10125 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10120, file: !9997, line: 4304, type: !113)
!10126 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10120, file: !9997, line: 4304, type: !113)
!10127 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10120, file: !9997, line: 4304, type: !113)
!10128 = !DILocation(line: 0, scope: !10120)
!10129 = !DILocation(line: 4306, column: 3, scope: !10120)
!10130 = !DILocation(line: 4308, column: 3, scope: !10120)
!10131 = !DILocation(line: 4312, column: 1, scope: !10120)
!10132 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10113, file: !10113, line: 69, type: !3389, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !437)
!10133 = !DILocation(line: 72, column: 2, scope: !10132)
!10134 = !DILocation(line: 73, column: 1, scope: !10132)
!10135 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10136, file: !10136, line: 1185, type: !7120, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !10137)
!10136 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10137 = !{!10138, !10139}
!10138 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10135, file: !10136, line: 1185, type: !113)
!10139 = !DILocalVariable(name: "tmpreg", scope: !10135, file: !10136, line: 1187, type: !570)
!10140 = !DILocation(line: 0, scope: !10135)
!10141 = !DILocation(line: 1187, column: 3, scope: !10135)
!10142 = !DILocation(line: 1187, column: 17, scope: !10135)
!10143 = !DILocation(line: 1188, column: 3, scope: !10135)
!10144 = !DILocation(line: 1190, column: 12, scope: !10135)
!10145 = !DILocation(line: 1190, column: 10, scope: !10135)
!10146 = !DILocation(line: 1191, column: 9, scope: !10135)
!10147 = !DILocation(line: 1192, column: 1, scope: !10135)
!10148 = distinct !DISubprogram(name: "uart_console_init", scope: !1346, file: !1346, line: 588, type: !1323, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1289, retainedNodes: !10149)
!10149 = !{!10150}
!10150 = !DILocalVariable(name: "arg", arg: 1, scope: !10148, file: !1346, line: 588, type: !1301)
!10151 = !DILocation(line: 0, scope: !10148)
!10152 = !DILocation(line: 593, column: 7, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10148, file: !1346, line: 593, column: 6)
!10154 = !DILocation(line: 593, column: 6, scope: !10148)
!10155 = !DILocation(line: 597, column: 2, scope: !10148)
!10156 = !DILocation(line: 599, column: 2, scope: !10148)
!10157 = !DILocation(line: 600, column: 1, scope: !10148)
!10158 = distinct !DISubprogram(name: "device_is_ready", scope: !10159, file: !10159, line: 47, type: !10160, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1289, retainedNodes: !10162)
!10159 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!10160 = !DISubroutineType(types: !10161)
!10161 = !{!422, !1301}
!10162 = !{!10163}
!10163 = !DILocalVariable(name: "dev", arg: 1, scope: !10158, file: !10159, line: 47, type: !1301)
!10164 = !DILocation(line: 0, scope: !10158)
!10165 = !DILocation(line: 55, column: 2, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10158, file: !10159, line: 55, column: 2)
!10167 = !{i64 2154284545}
!10168 = !DILocation(line: 56, column: 9, scope: !10158)
!10169 = !DILocation(line: 56, column: 2, scope: !10158)
!10170 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1346, file: !1346, line: 573, type: !3389, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1289, retainedNodes: !437)
!10171 = !DILocation(line: 576, column: 2, scope: !10170)
!10172 = !DILocation(line: 579, column: 2, scope: !10170)
!10173 = !DILocation(line: 581, column: 1, scope: !10170)
!10174 = distinct !DISubprogram(name: "console_out", scope: !1346, file: !1346, line: 77, type: !557, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1289, retainedNodes: !10175)
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "c", arg: 1, scope: !10174, file: !1346, line: 77, type: !108)
!10177 = !DILocation(line: 0, scope: !10174)
!10178 = !DILocation(line: 89, column: 11, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10174, file: !1346, line: 89, column: 6)
!10180 = !DILocation(line: 89, column: 6, scope: !10174)
!10181 = !DILocation(line: 90, column: 3, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10179, file: !1346, line: 89, column: 17)
!10183 = !DILocation(line: 91, column: 2, scope: !10182)
!10184 = !DILocation(line: 92, column: 34, scope: !10174)
!10185 = !DILocation(line: 92, column: 2, scope: !10174)
!10186 = !DILocation(line: 94, column: 2, scope: !10174)
!10187 = distinct !DISubprogram(name: "uart_poll_out", scope: !10188, file: !10188, line: 95, type: !1319, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1289, retainedNodes: !10189)
!10188 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/sensor_batch_processing")
!10189 = !{!10190, !10191}
!10190 = !DILocalVariable(name: "dev", arg: 1, scope: !10187, file: !10188, line: 95, type: !1301)
!10191 = !DILocalVariable(name: "out_char", arg: 2, scope: !10187, file: !10188, line: 95, type: !165)
!10192 = !DILocation(line: 0, scope: !10187)
!10193 = !DILocation(line: 105, column: 2, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10187, file: !10188, line: 105, column: 2)
!10195 = !{i64 2154367936}
!10196 = !DILocation(line: 106, column: 2, scope: !10187)
!10197 = !DILocation(line: 107, column: 1, scope: !10187)
!10198 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1295, file: !1295, line: 574, type: !1319, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1289, retainedNodes: !10199)
!10199 = !{!10200, !10201, !10202}
!10200 = !DILocalVariable(name: "dev", arg: 1, scope: !10198, file: !1295, line: 574, type: !1301)
!10201 = !DILocalVariable(name: "out_char", arg: 2, scope: !10198, file: !1295, line: 575, type: !165)
!10202 = !DILocalVariable(name: "api", scope: !10198, file: !1295, line: 577, type: !1292)
!10203 = !DILocation(line: 0, scope: !10198)
!10204 = !DILocation(line: 578, column: 40, scope: !10198)
!10205 = !DILocation(line: 580, column: 7, scope: !10198)
!10206 = !DILocation(line: 580, column: 2, scope: !10198)
!10207 = !DILocation(line: 581, column: 1, scope: !10198)
!10208 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10160, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1289, retainedNodes: !10209)
!10209 = !{!10210}
!10210 = !DILocalVariable(name: "dev", arg: 1, scope: !10208, file: !411, line: 730, type: !1301)
!10211 = !DILocation(line: 0, scope: !10208)
!10212 = !DILocation(line: 732, column: 9, scope: !10208)
!10213 = !DILocation(line: 732, column: 2, scope: !10208)
!10214 = distinct !DISubprogram(name: "uart_register_input", scope: !1346, file: !1346, line: 560, type: !10215, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1289, retainedNodes: !10260)
!10215 = !DISubroutineType(types: !10216)
!10216 = !{null, !10217, !10217, !10257}
!10217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10218, size: 32)
!10218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !359, line: 2208, size: 128, elements: !10219)
!10219 = !{!10220}
!10220 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10218, file: !359, line: 2209, baseType: !10221, size: 128)
!10221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !359, line: 1709, size: 128, elements: !10222)
!10222 = !{!10223, !10236, !10238}
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10221, file: !359, line: 1710, baseType: !10224, size: 64)
!10224 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10225, line: 46, baseType: !10226)
!10225 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10225, line: 41, size: 64, elements: !10227)
!10227 = !{!10228, !10235}
!10228 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10226, file: !10225, line: 42, baseType: !10229, size: 32)
!10229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10230, size: 32)
!10230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10225, line: 39, baseType: !10231)
!10231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10225, line: 35, size: 32, elements: !10232)
!10232 = !{!10233}
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10231, file: !10225, line: 36, baseType: !10234, size: 32)
!10234 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10225, line: 32, baseType: !113)
!10235 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10226, file: !10225, line: 43, baseType: !10229, size: 32, offset: 32)
!10236 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10221, file: !359, line: 1711, baseType: !10237, offset: 64)
!10237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10221, file: !359, line: 1712, baseType: !10239, size: 64, offset: 64)
!10239 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !10240)
!10240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !10241)
!10241 = !{!10242}
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10240, file: !363, line: 232, baseType: !10243, size: 64)
!10243 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !10244)
!10244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !10245)
!10245 = !{!10246, !10252}
!10246 = !DIDerivedType(tag: DW_TAG_member, scope: !10244, file: !367, line: 38, baseType: !10247, size: 32)
!10247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10244, file: !367, line: 38, size: 32, elements: !10248)
!10248 = !{!10249, !10251}
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10247, file: !367, line: 39, baseType: !10250, size: 32)
!10250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10244, size: 32)
!10251 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10247, file: !367, line: 40, baseType: !10250, size: 32)
!10252 = !DIDerivedType(tag: DW_TAG_member, scope: !10244, file: !367, line: 42, baseType: !10253, size: 32, offset: 32)
!10253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10244, file: !367, line: 42, size: 32, elements: !10254)
!10254 = !{!10255, !10256}
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10253, file: !367, line: 43, baseType: !10250, size: 32)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10253, file: !367, line: 44, baseType: !10250, size: 32)
!10257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10258, size: 32)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{!164, !443, !164}
!10260 = !{!10261, !10262, !10263}
!10261 = !DILocalVariable(name: "avail", arg: 1, scope: !10214, file: !1346, line: 560, type: !10217)
!10262 = !DILocalVariable(name: "lines", arg: 2, scope: !10214, file: !1346, line: 560, type: !10217)
!10263 = !DILocalVariable(name: "completion", arg: 3, scope: !10214, file: !1346, line: 561, type: !10257)
!10264 = !DILocation(line: 0, scope: !10214)
!10265 = !DILocation(line: 566, column: 1, scope: !10214)
!10266 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1524, file: !1524, line: 523, type: !1382, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10267)
!10267 = !{!10268, !10269, !10270, !10271, !10272}
!10268 = !DILocalVariable(name: "dev", arg: 1, scope: !10266, file: !1524, line: 523, type: !1384)
!10269 = !DILocalVariable(name: "pin", arg: 2, scope: !10266, file: !1524, line: 524, type: !1399)
!10270 = !DILocalVariable(name: "flags", arg: 3, scope: !10266, file: !1524, line: 524, type: !1400)
!10271 = !DILocalVariable(name: "err", scope: !10266, file: !1524, line: 526, type: !108)
!10272 = !DILocalVariable(name: "pincfg", scope: !10266, file: !1524, line: 527, type: !108)
!10273 = !DILocation(line: 0, scope: !10266)
!10274 = !DILocation(line: 527, column: 2, scope: !10266)
!10275 = !DILocation(line: 532, column: 8, scope: !10266)
!10276 = !DILocation(line: 533, column: 10, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10266, file: !1524, line: 533, column: 6)
!10278 = !DILocation(line: 533, column: 6, scope: !10266)
!10279 = !DILocation(line: 543, column: 13, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10266, file: !1524, line: 543, column: 6)
!10281 = !DILocation(line: 543, column: 28, scope: !10280)
!10282 = !DILocation(line: 543, column: 6, scope: !10266)
!10283 = !DILocation(line: 544, column: 14, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !1524, line: 544, column: 7)
!10285 = distinct !DILexicalBlock(scope: !10280, file: !1524, line: 543, column: 34)
!10286 = !DILocation(line: 544, column: 39, scope: !10284)
!10287 = !DILocation(line: 544, column: 7, scope: !10285)
!10288 = !DILocation(line: 545, column: 38, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10284, file: !1524, line: 544, column: 45)
!10290 = !DILocation(line: 545, column: 4, scope: !10289)
!10291 = !DILocation(line: 546, column: 3, scope: !10289)
!10292 = !DILocation(line: 546, column: 21, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10284, file: !1524, line: 546, column: 14)
!10294 = !DILocation(line: 546, column: 45, scope: !10293)
!10295 = !DILocation(line: 546, column: 14, scope: !10284)
!10296 = !DILocation(line: 547, column: 40, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10293, file: !1524, line: 546, column: 51)
!10298 = !DILocation(line: 547, column: 4, scope: !10297)
!10299 = !DILocation(line: 548, column: 3, scope: !10297)
!10300 = !DILocation(line: 551, column: 32, scope: !10266)
!10301 = !DILocation(line: 551, column: 37, scope: !10266)
!10302 = !DILocation(line: 551, column: 2, scope: !10266)
!10303 = !DILocation(line: 554, column: 6, scope: !10266)
!10304 = !DILocation(line: 562, column: 1, scope: !10266)
!10305 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1524, file: !1524, line: 410, type: !10306, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10308)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{!108, !1384, !1211}
!10308 = !{!10309, !10310, !10311, !10313}
!10309 = !DILocalVariable(name: "dev", arg: 1, scope: !10305, file: !1524, line: 410, type: !1384)
!10310 = !DILocalVariable(name: "value", arg: 2, scope: !10305, file: !1524, line: 410, type: !1211)
!10311 = !DILocalVariable(name: "cfg", scope: !10305, file: !1524, line: 412, type: !10312)
!10312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!10313 = !DILocalVariable(name: "gpio", scope: !10305, file: !1524, line: 413, type: !1457)
!10314 = !DILocation(line: 0, scope: !10305)
!10315 = !DILocation(line: 412, column: 45, scope: !10305)
!10316 = !DILocation(line: 413, column: 44, scope: !10305)
!10317 = !DILocation(line: 415, column: 11, scope: !10305)
!10318 = !DILocation(line: 415, column: 9, scope: !10305)
!10319 = !DILocation(line: 417, column: 2, scope: !10305)
!10320 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1524, file: !1524, line: 420, type: !1409, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10321)
!10321 = !{!10322, !10323, !10324, !10325, !10326, !10327}
!10322 = !DILocalVariable(name: "dev", arg: 1, scope: !10320, file: !1524, line: 420, type: !1384)
!10323 = !DILocalVariable(name: "mask", arg: 2, scope: !10320, file: !1524, line: 421, type: !1411)
!10324 = !DILocalVariable(name: "value", arg: 3, scope: !10320, file: !1524, line: 422, type: !1406)
!10325 = !DILocalVariable(name: "cfg", scope: !10320, file: !1524, line: 424, type: !10312)
!10326 = !DILocalVariable(name: "gpio", scope: !10320, file: !1524, line: 425, type: !1457)
!10327 = !DILocalVariable(name: "port_value", scope: !10320, file: !1524, line: 426, type: !113)
!10328 = !DILocation(line: 0, scope: !10320)
!10329 = !DILocation(line: 424, column: 45, scope: !10320)
!10330 = !DILocation(line: 425, column: 44, scope: !10320)
!10331 = !DILocation(line: 430, column: 15, scope: !10320)
!10332 = !DILocation(line: 431, column: 46, scope: !10320)
!10333 = !DILocation(line: 431, column: 44, scope: !10320)
!10334 = !DILocation(line: 431, column: 61, scope: !10320)
!10335 = !DILocation(line: 431, column: 53, scope: !10320)
!10336 = !DILocation(line: 431, column: 2, scope: !10320)
!10337 = !DILocation(line: 435, column: 2, scope: !10320)
!10338 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1524, file: !1524, line: 438, type: !1414, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10339)
!10339 = !{!10340, !10341, !10342, !10343}
!10340 = !DILocalVariable(name: "dev", arg: 1, scope: !10338, file: !1524, line: 438, type: !1384)
!10341 = !DILocalVariable(name: "pins", arg: 2, scope: !10338, file: !1524, line: 439, type: !1411)
!10342 = !DILocalVariable(name: "cfg", scope: !10338, file: !1524, line: 441, type: !10312)
!10343 = !DILocalVariable(name: "gpio", scope: !10338, file: !1524, line: 442, type: !1457)
!10344 = !DILocation(line: 0, scope: !10338)
!10345 = !DILocation(line: 441, column: 45, scope: !10338)
!10346 = !DILocation(line: 442, column: 44, scope: !10338)
!10347 = !DILocation(line: 448, column: 2, scope: !10338)
!10348 = !DILocation(line: 450, column: 2, scope: !10338)
!10349 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1524, file: !1524, line: 453, type: !1414, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10350)
!10350 = !{!10351, !10352, !10353, !10354}
!10351 = !DILocalVariable(name: "dev", arg: 1, scope: !10349, file: !1524, line: 453, type: !1384)
!10352 = !DILocalVariable(name: "pins", arg: 2, scope: !10349, file: !1524, line: 454, type: !1411)
!10353 = !DILocalVariable(name: "cfg", scope: !10349, file: !1524, line: 456, type: !10312)
!10354 = !DILocalVariable(name: "gpio", scope: !10349, file: !1524, line: 457, type: !1457)
!10355 = !DILocation(line: 0, scope: !10349)
!10356 = !DILocation(line: 456, column: 45, scope: !10349)
!10357 = !DILocation(line: 457, column: 44, scope: !10349)
!10358 = !DILocation(line: 467, column: 2, scope: !10349)
!10359 = !DILocation(line: 470, column: 2, scope: !10349)
!10360 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1524, file: !1524, line: 473, type: !1414, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10361)
!10361 = !{!10362, !10363, !10364, !10365}
!10362 = !DILocalVariable(name: "dev", arg: 1, scope: !10360, file: !1524, line: 473, type: !1384)
!10363 = !DILocalVariable(name: "pins", arg: 2, scope: !10360, file: !1524, line: 474, type: !1411)
!10364 = !DILocalVariable(name: "cfg", scope: !10360, file: !1524, line: 476, type: !10312)
!10365 = !DILocalVariable(name: "gpio", scope: !10360, file: !1524, line: 477, type: !1457)
!10366 = !DILocation(line: 0, scope: !10360)
!10367 = !DILocation(line: 476, column: 45, scope: !10360)
!10368 = !DILocation(line: 477, column: 44, scope: !10360)
!10369 = !DILocation(line: 484, column: 2, scope: !10360)
!10370 = !DILocation(line: 487, column: 2, scope: !10360)
!10371 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1524, file: !1524, line: 594, type: !1420, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10372)
!10372 = !{!10373, !10374, !10375, !10376, !10377, !10378, !10380, !10381, !10382}
!10373 = !DILocalVariable(name: "dev", arg: 1, scope: !10371, file: !1524, line: 594, type: !1384)
!10374 = !DILocalVariable(name: "pin", arg: 2, scope: !10371, file: !1524, line: 595, type: !1399)
!10375 = !DILocalVariable(name: "mode", arg: 3, scope: !10371, file: !1524, line: 596, type: !1358)
!10376 = !DILocalVariable(name: "trig", arg: 4, scope: !10371, file: !1524, line: 597, type: !1364)
!10377 = !DILocalVariable(name: "cfg", scope: !10371, file: !1524, line: 599, type: !10312)
!10378 = !DILocalVariable(name: "data", scope: !10371, file: !1524, line: 600, type: !10379)
!10379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!10380 = !DILocalVariable(name: "edge", scope: !10371, file: !1524, line: 601, type: !108)
!10381 = !DILocalVariable(name: "err", scope: !10371, file: !1524, line: 602, type: !108)
!10382 = !DILabel(scope: !10371, name: "exit", file: !1524, line: 643)
!10383 = !DILocation(line: 0, scope: !10371)
!10384 = !DILocation(line: 599, column: 45, scope: !10371)
!10385 = !DILocation(line: 604, column: 6, scope: !10371)
!10386 = !DILocation(line: 605, column: 34, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10388, file: !1524, line: 605, column: 7)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !1524, line: 604, column: 38)
!10389 = distinct !DILexicalBlock(scope: !10371, file: !1524, line: 604, column: 6)
!10390 = !DILocation(line: 605, column: 7, scope: !10387)
!10391 = !DILocation(line: 605, column: 47, scope: !10387)
!10392 = !DILocation(line: 605, column: 39, scope: !10387)
!10393 = !DILocation(line: 605, column: 7, scope: !10388)
!10394 = !DILocation(line: 606, column: 4, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10387, file: !1524, line: 605, column: 53)
!10396 = !DILocation(line: 607, column: 4, scope: !10395)
!10397 = !DILocation(line: 608, column: 4, scope: !10395)
!10398 = !DILocation(line: 609, column: 3, scope: !10395)
!10399 = !DILocation(line: 600, column: 38, scope: !10371)
!10400 = !DILocation(line: 620, column: 30, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10371, file: !1524, line: 620, column: 6)
!10402 = !DILocation(line: 620, column: 6, scope: !10401)
!10403 = !DILocation(line: 620, column: 57, scope: !10401)
!10404 = !DILocation(line: 620, column: 6, scope: !10371)
!10405 = !DILocation(line: 625, column: 29, scope: !10371)
!10406 = !DILocation(line: 625, column: 2, scope: !10371)
!10407 = !DILocation(line: 627, column: 2, scope: !10371)
!10408 = !DILocation(line: 630, column: 3, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10371, file: !1524, line: 627, column: 16)
!10410 = !DILocation(line: 633, column: 3, scope: !10409)
!10411 = !DILocation(line: 636, column: 3, scope: !10409)
!10412 = !DILocation(line: 639, column: 2, scope: !10371)
!10413 = !DILocation(line: 641, column: 2, scope: !10371)
!10414 = !DILocation(line: 643, column: 1, scope: !10371)
!10415 = !DILocation(line: 644, column: 2, scope: !10371)
!10416 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1524, file: !1524, line: 647, type: !1424, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10417)
!10417 = !{!10418, !10419, !10420, !10421}
!10418 = !DILocalVariable(name: "dev", arg: 1, scope: !10416, file: !1524, line: 647, type: !1384)
!10419 = !DILocalVariable(name: "callback", arg: 2, scope: !10416, file: !1524, line: 648, type: !1426)
!10420 = !DILocalVariable(name: "set", arg: 3, scope: !10416, file: !1524, line: 649, type: !422)
!10421 = !DILocalVariable(name: "data", scope: !10416, file: !1524, line: 651, type: !10379)
!10422 = !DILocation(line: 0, scope: !10416)
!10423 = !DILocation(line: 651, column: 38, scope: !10416)
!10424 = !DILocation(line: 653, column: 37, scope: !10416)
!10425 = !DILocation(line: 653, column: 9, scope: !10416)
!10426 = !DILocation(line: 653, column: 2, scope: !10416)
!10427 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10428, file: !10428, line: 38, type: !10429, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10432)
!10428 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10429 = !DISubroutineType(types: !10430)
!10430 = !{!108, !10431, !1426, !422}
!10431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!10432 = !{!10433, !10434, !10435}
!10433 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10427, file: !10428, line: 38, type: !10431)
!10434 = !DILocalVariable(name: "callback", arg: 2, scope: !10427, file: !10428, line: 39, type: !1426)
!10435 = !DILocalVariable(name: "set", arg: 3, scope: !10427, file: !10428, line: 40, type: !422)
!10436 = !DILocation(line: 0, scope: !10427)
!10437 = !DILocation(line: 45, column: 7, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10427, file: !10428, line: 45, column: 6)
!10439 = !DILocation(line: 45, column: 6, scope: !10427)
!10440 = !DILocation(line: 46, column: 56, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10442, file: !10428, line: 46, column: 7)
!10442 = distinct !DILexicalBlock(scope: !10438, file: !10428, line: 45, column: 38)
!10443 = !DILocation(line: 46, column: 8, scope: !10441)
!10444 = !DILocation(line: 46, column: 7, scope: !10442)
!10445 = !DILocation(line: 51, column: 13, scope: !10438)
!10446 = !DILocation(line: 56, column: 43, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10448, file: !10428, line: 55, column: 11)
!10448 = distinct !DILexicalBlock(scope: !10427, file: !10428, line: 55, column: 6)
!10449 = !DILocation(line: 56, column: 3, scope: !10447)
!10450 = !DILocation(line: 57, column: 2, scope: !10447)
!10451 = !DILocation(line: 60, column: 1, scope: !10427)
!10452 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1431, file: !1431, line: 261, type: !10453, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10455)
!10453 = !DISubroutineType(types: !10454)
!10454 = !{!422, !10431}
!10455 = !{!10456}
!10456 = !DILocalVariable(name: "list", arg: 1, scope: !10452, file: !1431, line: 261, type: !10431)
!10457 = !DILocation(line: 0, scope: !10452)
!10458 = !DILocation(line: 261, column: 1, scope: !10452)
!10459 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1431, file: !1431, line: 417, type: !10460, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10462)
!10460 = !DISubroutineType(types: !10461)
!10461 = !{!422, !10431, !1597}
!10462 = !{!10463, !10464, !10465, !10466}
!10463 = !DILocalVariable(name: "list", arg: 1, scope: !10459, file: !1431, line: 417, type: !10431)
!10464 = !DILocalVariable(name: "node", arg: 2, scope: !10459, file: !1431, line: 417, type: !1597)
!10465 = !DILocalVariable(name: "prev", scope: !10459, file: !1431, line: 417, type: !1597)
!10466 = !DILocalVariable(name: "test", scope: !10459, file: !1431, line: 417, type: !1597)
!10467 = !DILocation(line: 0, scope: !10459)
!10468 = !DILocation(line: 417, column: 1, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10459, file: !1431, line: 417, column: 1)
!10470 = !DILocation(line: 417, column: 1, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10469, file: !1431, line: 417, column: 1)
!10472 = !DILocation(line: 417, column: 1, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !1431, line: 417, column: 1)
!10474 = distinct !DILexicalBlock(scope: !10471, file: !1431, line: 417, column: 1)
!10475 = !DILocation(line: 417, column: 1, scope: !10474)
!10476 = distinct !{!10476, !10468, !10468}
!10477 = !DILocation(line: 417, column: 1, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10473, file: !1431, line: 417, column: 1)
!10479 = !DILocation(line: 417, column: 1, scope: !10459)
!10480 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1431, file: !1431, line: 298, type: !10481, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10483)
!10481 = !DISubroutineType(types: !10482)
!10482 = !{null, !10431, !1597}
!10483 = !{!10484, !10485}
!10484 = !DILocalVariable(name: "list", arg: 1, scope: !10480, file: !1431, line: 298, type: !10431)
!10485 = !DILocalVariable(name: "node", arg: 2, scope: !10480, file: !1431, line: 298, type: !1597)
!10486 = !DILocation(line: 0, scope: !10480)
!10487 = !DILocation(line: 298, column: 1, scope: !10480)
!10488 = !DILocation(line: 298, column: 1, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10480, file: !1431, line: 298, column: 1)
!10490 = !DILocation(line: 298, column: 1, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10489, file: !1431, line: 298, column: 1)
!10492 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1431, file: !1431, line: 231, type: !10493, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10495)
!10493 = !DISubroutineType(types: !10494)
!10494 = !{!1597, !10431}
!10495 = !{!10496}
!10496 = !DILocalVariable(name: "list", arg: 1, scope: !10492, file: !1431, line: 231, type: !10431)
!10497 = !DILocation(line: 0, scope: !10492)
!10498 = !DILocation(line: 233, column: 15, scope: !10492)
!10499 = !DILocation(line: 233, column: 2, scope: !10492)
!10500 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1431, file: !1431, line: 209, type: !10501, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10503)
!10501 = !DISubroutineType(types: !10502)
!10502 = !{null, !1597, !1597}
!10503 = !{!10504, !10505}
!10504 = !DILocalVariable(name: "parent", arg: 1, scope: !10500, file: !1431, line: 209, type: !1597)
!10505 = !DILocalVariable(name: "child", arg: 2, scope: !10500, file: !1431, line: 209, type: !1597)
!10506 = !DILocation(line: 0, scope: !10500)
!10507 = !DILocation(line: 211, column: 10, scope: !10500)
!10508 = !DILocation(line: 211, column: 15, scope: !10500)
!10509 = !DILocation(line: 212, column: 1, scope: !10500)
!10510 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1431, file: !1431, line: 214, type: !10481, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10511)
!10511 = !{!10512, !10513}
!10512 = !DILocalVariable(name: "list", arg: 1, scope: !10510, file: !1431, line: 214, type: !10431)
!10513 = !DILocalVariable(name: "node", arg: 2, scope: !10510, file: !1431, line: 214, type: !1597)
!10514 = !DILocation(line: 0, scope: !10510)
!10515 = !DILocation(line: 216, column: 8, scope: !10510)
!10516 = !DILocation(line: 216, column: 13, scope: !10510)
!10517 = !DILocation(line: 217, column: 1, scope: !10510)
!10518 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1431, file: !1431, line: 243, type: !10493, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10519)
!10519 = !{!10520}
!10520 = !DILocalVariable(name: "list", arg: 1, scope: !10518, file: !1431, line: 243, type: !10431)
!10521 = !DILocation(line: 0, scope: !10518)
!10522 = !DILocation(line: 245, column: 15, scope: !10518)
!10523 = !DILocation(line: 245, column: 2, scope: !10518)
!10524 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1431, file: !1431, line: 219, type: !10481, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10525)
!10525 = !{!10526, !10527}
!10526 = !DILocalVariable(name: "list", arg: 1, scope: !10524, file: !1431, line: 219, type: !10431)
!10527 = !DILocalVariable(name: "node", arg: 2, scope: !10524, file: !1431, line: 219, type: !1597)
!10528 = !DILocation(line: 0, scope: !10524)
!10529 = !DILocation(line: 221, column: 8, scope: !10524)
!10530 = !DILocation(line: 221, column: 13, scope: !10524)
!10531 = !DILocation(line: 222, column: 1, scope: !10524)
!10532 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1431, file: !1431, line: 401, type: !10533, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10535)
!10533 = !DISubroutineType(types: !10534)
!10534 = !{null, !10431, !1597, !1597}
!10535 = !{!10536, !10537, !10538}
!10536 = !DILocalVariable(name: "list", arg: 1, scope: !10532, file: !1431, line: 401, type: !10431)
!10537 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10532, file: !1431, line: 401, type: !1597)
!10538 = !DILocalVariable(name: "node", arg: 3, scope: !10532, file: !1431, line: 401, type: !1597)
!10539 = !DILocation(line: 0, scope: !10532)
!10540 = !DILocation(line: 401, column: 1, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10532, file: !1431, line: 401, column: 1)
!10542 = !DILocation(line: 0, scope: !10541)
!10543 = !DILocation(line: 401, column: 1, scope: !10532)
!10544 = !DILocation(line: 401, column: 1, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10541, file: !1431, line: 401, column: 1)
!10546 = !DILocation(line: 401, column: 1, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10545, file: !1431, line: 401, column: 1)
!10548 = !DILocation(line: 401, column: 1, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10547, file: !1431, line: 401, column: 1)
!10550 = !DILocation(line: 401, column: 1, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10541, file: !1431, line: 401, column: 1)
!10552 = !DILocation(line: 401, column: 1, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10551, file: !1431, line: 401, column: 1)
!10554 = !DILocation(line: 401, column: 1, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10553, file: !1431, line: 401, column: 1)
!10556 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1431, file: !1431, line: 285, type: !10557, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10559)
!10557 = !DISubroutineType(types: !10558)
!10558 = !{!1597, !1597}
!10559 = !{!10560}
!10560 = !DILocalVariable(name: "node", arg: 1, scope: !10556, file: !1431, line: 285, type: !1597)
!10561 = !DILocation(line: 0, scope: !10556)
!10562 = !DILocation(line: 285, column: 1, scope: !10556)
!10563 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1431, file: !1431, line: 274, type: !10557, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10564)
!10564 = !{!10565}
!10565 = !DILocalVariable(name: "node", arg: 1, scope: !10563, file: !1431, line: 274, type: !1597)
!10566 = !DILocation(line: 0, scope: !10563)
!10567 = !DILocation(line: 274, column: 1, scope: !10563)
!10568 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1431, file: !1431, line: 204, type: !10557, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10569)
!10569 = !{!10570}
!10570 = !DILocalVariable(name: "node", arg: 1, scope: !10568, file: !1431, line: 204, type: !1597)
!10571 = !DILocation(line: 0, scope: !10568)
!10572 = !DILocation(line: 206, column: 15, scope: !10568)
!10573 = !DILocation(line: 206, column: 2, scope: !10568)
!10574 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1524, file: !1524, line: 342, type: !557, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10575)
!10575 = !{!10576, !10577, !10578}
!10576 = !DILocalVariable(name: "pin", arg: 1, scope: !10574, file: !1524, line: 342, type: !108)
!10577 = !DILocalVariable(name: "line", scope: !10574, file: !1524, line: 344, type: !113)
!10578 = !DILocalVariable(name: "port", scope: !10574, file: !1524, line: 345, type: !108)
!10579 = !DILocation(line: 0, scope: !10574)
!10580 = !DILocation(line: 344, column: 18, scope: !10574)
!10581 = !{i32 983040, i32 0}
!10582 = !DILocation(line: 356, column: 9, scope: !10574)
!10583 = !DILocation(line: 370, column: 2, scope: !10574)
!10584 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1524, file: !1524, line: 37, type: !1106, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10585)
!10585 = !{!10586, !10587, !10588}
!10586 = !DILocalVariable(name: "line", arg: 1, scope: !10584, file: !1524, line: 37, type: !108)
!10587 = !DILocalVariable(name: "arg", arg: 2, scope: !10584, file: !1524, line: 37, type: !104)
!10588 = !DILocalVariable(name: "data", scope: !10584, file: !1524, line: 39, type: !10379)
!10589 = !DILocation(line: 0, scope: !10584)
!10590 = !DILocation(line: 41, column: 29, scope: !10584)
!10591 = !DILocation(line: 41, column: 39, scope: !10584)
!10592 = !DILocation(line: 41, column: 44, scope: !10584)
!10593 = !DILocation(line: 41, column: 2, scope: !10584)
!10594 = !DILocation(line: 42, column: 1, scope: !10584)
!10595 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1524, file: !1524, line: 376, type: !10596, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10598)
!10596 = !DISubroutineType(types: !10597)
!10597 = !{!108, !108, !108}
!10598 = !{!10599, !10600, !10601, !10603, !10604}
!10599 = !DILocalVariable(name: "port", arg: 1, scope: !10595, file: !1524, line: 376, type: !108)
!10600 = !DILocalVariable(name: "pin", arg: 2, scope: !10595, file: !1524, line: 376, type: !108)
!10601 = !DILocalVariable(name: "clk", scope: !10595, file: !1524, line: 386, type: !10602)
!10602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!10603 = !DILocalVariable(name: "pclken", scope: !10595, file: !1524, line: 387, type: !1640)
!10604 = !DILocalVariable(name: "ret", scope: !10595, file: !1524, line: 396, type: !108)
!10605 = !DILocation(line: 0, scope: !10595)
!10606 = !DILocation(line: 387, column: 2, scope: !10595)
!10607 = !DILocation(line: 387, column: 22, scope: !10595)
!10608 = !DILocation(line: 399, column: 8, scope: !10595)
!10609 = !DILocation(line: 400, column: 10, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10595, file: !1524, line: 400, column: 6)
!10611 = !DILocation(line: 400, column: 6, scope: !10595)
!10612 = !DILocation(line: 405, column: 2, scope: !10595)
!10613 = !DILocation(line: 407, column: 2, scope: !10595)
!10614 = !DILocation(line: 408, column: 1, scope: !10595)
!10615 = distinct !DISubprogram(name: "clock_control_on", scope: !1160, file: !1160, line: 123, type: !1489, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10616)
!10616 = !{!10617, !10618, !10619}
!10617 = !DILocalVariable(name: "dev", arg: 1, scope: !10615, file: !1160, line: 123, type: !1384)
!10618 = !DILocalVariable(name: "sys", arg: 2, scope: !10615, file: !1160, line: 124, type: !1255)
!10619 = !DILocalVariable(name: "api", scope: !10615, file: !1160, line: 126, type: !1482)
!10620 = !DILocation(line: 0, scope: !10615)
!10621 = !DILocation(line: 127, column: 49, scope: !10615)
!10622 = !DILocation(line: 129, column: 14, scope: !10615)
!10623 = !DILocation(line: 129, column: 9, scope: !10615)
!10624 = !DILocation(line: 129, column: 2, scope: !10615)
!10625 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1524, file: !1524, line: 311, type: !9758, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10626)
!10626 = !{!10627, !10628, !10629}
!10627 = !DILocalVariable(name: "port", arg: 1, scope: !10625, file: !1524, line: 311, type: !108)
!10628 = !DILocalVariable(name: "pin", arg: 2, scope: !10625, file: !1524, line: 311, type: !108)
!10629 = !DILocalVariable(name: "line", scope: !10625, file: !1524, line: 313, type: !113)
!10630 = !DILocation(line: 0, scope: !10625)
!10631 = !DILocation(line: 313, column: 18, scope: !10625)
!10632 = !DILocation(line: 337, column: 2, scope: !10625)
!10633 = !DILocation(line: 340, column: 1, scope: !10625)
!10634 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1524, file: !1524, line: 295, type: !10635, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10637)
!10635 = !DISubroutineType(types: !10636)
!10636 = !{!113, !108}
!10637 = !{!10638}
!10638 = !DILocalVariable(name: "pin", arg: 1, scope: !10634, file: !1524, line: 295, type: !108)
!10639 = !DILocation(line: 0, scope: !10634)
!10640 = !DILocation(line: 307, column: 46, scope: !10634)
!10641 = !DILocation(line: 307, column: 27, scope: !10634)
!10642 = !DILocation(line: 307, column: 32, scope: !10634)
!10643 = !DILocation(line: 307, column: 14, scope: !10634)
!10644 = !DILocation(line: 307, column: 39, scope: !10634)
!10645 = !DILocation(line: 307, column: 2, scope: !10634)
!10646 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6732, file: !6732, line: 671, type: !10647, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{null, !113, !113}
!10649 = !{!10650, !10651}
!10650 = !DILocalVariable(name: "Port", arg: 1, scope: !10646, file: !6732, line: 671, type: !113)
!10651 = !DILocalVariable(name: "Line", arg: 2, scope: !10646, file: !6732, line: 671, type: !113)
!10652 = !DILocation(line: 0, scope: !10646)
!10653 = !DILocation(line: 673, column: 3, scope: !10646)
!10654 = !DILocalVariable(name: "value", arg: 1, scope: !10655, file: !7029, line: 373, type: !113)
!10655 = distinct !DISubprogram(name: "__RBIT", scope: !7029, file: !7029, line: 373, type: !8275, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10656)
!10656 = !{!10654, !10657}
!10657 = !DILocalVariable(name: "result", scope: !10655, file: !7029, line: 375, type: !113)
!10658 = !DILocation(line: 0, scope: !10655, inlinedAt: !10659)
!10659 = distinct !DILocation(line: 673, column: 3, scope: !10646)
!10660 = !DILocation(line: 380, column: 4, scope: !10655, inlinedAt: !10659)
!10661 = !{i64 2849122}
!10662 = !DILocalVariable(name: "value", arg: 1, scope: !10663, file: !7029, line: 403, type: !113)
!10663 = distinct !DISubprogram(name: "__CLZ", scope: !7029, file: !7029, line: 403, type: !10664, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10666)
!10664 = !DISubroutineType(types: !10665)
!10665 = !{!164, !113}
!10666 = !{!10662}
!10667 = !DILocation(line: 0, scope: !10663, inlinedAt: !10668)
!10668 = distinct !DILocation(line: 673, column: 3, scope: !10646)
!10669 = !DILocation(line: 414, column: 7, scope: !10663, inlinedAt: !10668)
!10670 = !DILocation(line: 674, column: 1, scope: !10646)
!10671 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10428, file: !10428, line: 69, type: !10672, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10674)
!10672 = !DISubroutineType(types: !10673)
!10673 = !{null, !10431, !1384, !113}
!10674 = !{!10675, !10676, !10677, !10678, !10679}
!10675 = !DILocalVariable(name: "list", arg: 1, scope: !10671, file: !10428, line: 69, type: !10431)
!10676 = !DILocalVariable(name: "port", arg: 2, scope: !10671, file: !10428, line: 70, type: !1384)
!10677 = !DILocalVariable(name: "pins", arg: 3, scope: !10671, file: !10428, line: 71, type: !113)
!10678 = !DILocalVariable(name: "cb", scope: !10671, file: !10428, line: 73, type: !1426)
!10679 = !DILocalVariable(name: "tmp", scope: !10671, file: !10428, line: 73, type: !1426)
!10680 = !DILocation(line: 0, scope: !10671)
!10681 = !DILocation(line: 75, column: 2, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10671, file: !10428, line: 75, column: 2)
!10683 = !DILocation(line: 0, scope: !10682)
!10684 = !DILocation(line: 76, column: 11, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !10428, line: 76, column: 7)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !10428, line: 75, column: 57)
!10687 = distinct !DILexicalBlock(scope: !10682, file: !10428, line: 75, column: 2)
!10688 = !DILocation(line: 76, column: 20, scope: !10685)
!10689 = !DILocation(line: 76, column: 7, scope: !10686)
!10690 = !DILocation(line: 78, column: 8, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10685, file: !10428, line: 76, column: 28)
!10692 = !DILocation(line: 78, column: 4, scope: !10691)
!10693 = !DILocation(line: 79, column: 3, scope: !10691)
!10694 = !DILocation(line: 75, column: 2, scope: !10687)
!10695 = !DILocation(line: 81, column: 1, scope: !10671)
!10696 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6732, file: !6732, line: 710, type: !8275, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10697)
!10697 = !{!10698}
!10698 = !DILocalVariable(name: "Line", arg: 1, scope: !10696, file: !6732, line: 710, type: !113)
!10699 = !DILocation(line: 0, scope: !10696)
!10700 = !DILocation(line: 712, column: 21, scope: !10696)
!10701 = !DILocation(line: 0, scope: !10655, inlinedAt: !10702)
!10702 = distinct !DILocation(line: 712, column: 76, scope: !10696)
!10703 = !DILocation(line: 380, column: 4, scope: !10655, inlinedAt: !10702)
!10704 = !DILocation(line: 0, scope: !10663, inlinedAt: !10705)
!10705 = distinct !DILocation(line: 712, column: 76, scope: !10696)
!10706 = !DILocation(line: 414, column: 7, scope: !10663, inlinedAt: !10705)
!10707 = !DILocation(line: 712, column: 73, scope: !10696)
!10708 = !DILocation(line: 712, column: 3, scope: !10696)
!10709 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10710, file: !10710, line: 910, type: !10711, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10713)
!10710 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10711 = !DISubroutineType(types: !10712)
!10712 = !{null, !1457, !113}
!10713 = !{!10714, !10715}
!10714 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10709, file: !10710, line: 910, type: !1457)
!10715 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10709, file: !10710, line: 910, type: !113)
!10716 = !DILocation(line: 0, scope: !10709)
!10717 = !DILocation(line: 912, column: 3, scope: !10709)
!10718 = !DILocation(line: 913, column: 1, scope: !10709)
!10719 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10710, file: !10710, line: 823, type: !10720, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10722)
!10720 = !DISubroutineType(types: !10721)
!10721 = !{!113, !1457}
!10722 = !{!10723}
!10723 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10719, file: !10710, line: 823, type: !1457)
!10724 = !DILocation(line: 0, scope: !10719)
!10725 = !DILocation(line: 825, column: 21, scope: !10719)
!10726 = !DILocation(line: 825, column: 3, scope: !10719)
!10727 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10710, file: !10710, line: 812, type: !10711, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10728)
!10728 = !{!10729, !10730}
!10729 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10727, file: !10710, line: 812, type: !1457)
!10730 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10727, file: !10710, line: 812, type: !113)
!10731 = !DILocation(line: 0, scope: !10727)
!10732 = !DILocation(line: 814, column: 3, scope: !10727)
!10733 = !DILocation(line: 815, column: 1, scope: !10727)
!10734 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10710, file: !10710, line: 771, type: !10720, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10735)
!10735 = !{!10736}
!10736 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10734, file: !10710, line: 771, type: !1457)
!10737 = !DILocation(line: 0, scope: !10734)
!10738 = !DILocation(line: 773, column: 21, scope: !10734)
!10739 = !DILocation(line: 773, column: 3, scope: !10734)
!10740 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1524, file: !1524, line: 47, type: !10741, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10743)
!10741 = !DISubroutineType(types: !10742)
!10742 = !{!108, !1400, !538}
!10743 = !{!10744, !10745}
!10744 = !DILocalVariable(name: "flags", arg: 1, scope: !10740, file: !1524, line: 47, type: !1400)
!10745 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10740, file: !1524, line: 47, type: !538)
!10746 = !DILocation(line: 0, scope: !10740)
!10747 = !DILocation(line: 50, column: 13, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10740, file: !1524, line: 50, column: 6)
!10749 = !DILocation(line: 50, column: 28, scope: !10748)
!10750 = !DILocation(line: 50, column: 6, scope: !10740)
!10751 = !DILocation(line: 53, column: 11, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10748, file: !1524, line: 50, column: 34)
!10753 = !DILocation(line: 55, column: 14, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10752, file: !1524, line: 55, column: 7)
!10755 = !DILocation(line: 55, column: 35, scope: !10754)
!10756 = !DILocation(line: 55, column: 7, scope: !10752)
!10757 = !DILocation(line: 56, column: 14, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10759, file: !1524, line: 56, column: 8)
!10759 = distinct !DILexicalBlock(scope: !10754, file: !1524, line: 55, column: 41)
!10760 = !DILocation(line: 56, column: 8, scope: !10759)
!10761 = !DILocation(line: 0, scope: !10754)
!10762 = !DILocation(line: 66, column: 14, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10752, file: !1524, line: 66, column: 7)
!10764 = !DILocation(line: 66, column: 30, scope: !10763)
!10765 = !DILocation(line: 66, column: 7, scope: !10752)
!10766 = !DILocation(line: 67, column: 12, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10763, file: !1524, line: 66, column: 36)
!10768 = !DILocation(line: 68, column: 3, scope: !10767)
!10769 = !DILocation(line: 68, column: 21, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10763, file: !1524, line: 68, column: 14)
!10771 = !DILocation(line: 68, column: 39, scope: !10770)
!10772 = !DILocation(line: 68, column: 14, scope: !10763)
!10773 = !DILocation(line: 69, column: 12, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10770, file: !1524, line: 68, column: 45)
!10775 = !DILocation(line: 70, column: 3, scope: !10774)
!10776 = !DILocation(line: 72, column: 21, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10748, file: !1524, line: 72, column: 14)
!10778 = !DILocation(line: 72, column: 35, scope: !10777)
!10779 = !DILocation(line: 72, column: 14, scope: !10748)
!10780 = !DILocation(line: 77, column: 14, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10782, file: !1524, line: 77, column: 7)
!10782 = distinct !DILexicalBlock(scope: !10777, file: !1524, line: 72, column: 41)
!10783 = !DILocation(line: 77, column: 30, scope: !10781)
!10784 = !DILocation(line: 77, column: 7, scope: !10782)
!10785 = !DILocation(line: 0, scope: !10748)
!10786 = !DILocation(line: 90, column: 1, scope: !10740)
!10787 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1524, file: !1524, line: 157, type: !10788, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10790)
!10788 = !DISubroutineType(types: !10789)
!10789 = !{null, !1384, !108, !108, !108}
!10790 = !{!10791, !10792, !10793, !10794, !10795, !10796, !10797, !10798, !10799, !10800, !10801}
!10791 = !DILocalVariable(name: "dev", arg: 1, scope: !10787, file: !1524, line: 157, type: !1384)
!10792 = !DILocalVariable(name: "pin", arg: 2, scope: !10787, file: !1524, line: 157, type: !108)
!10793 = !DILocalVariable(name: "conf", arg: 3, scope: !10787, file: !1524, line: 158, type: !108)
!10794 = !DILocalVariable(name: "func", arg: 4, scope: !10787, file: !1524, line: 158, type: !108)
!10795 = !DILocalVariable(name: "cfg", scope: !10787, file: !1524, line: 160, type: !10312)
!10796 = !DILocalVariable(name: "gpio", scope: !10787, file: !1524, line: 161, type: !1457)
!10797 = !DILocalVariable(name: "pin_ll", scope: !10787, file: !1524, line: 163, type: !108)
!10798 = !DILocalVariable(name: "mode", scope: !10787, file: !1524, line: 227, type: !32)
!10799 = !DILocalVariable(name: "otype", scope: !10787, file: !1524, line: 227, type: !32)
!10800 = !DILocalVariable(name: "ospeed", scope: !10787, file: !1524, line: 227, type: !32)
!10801 = !DILocalVariable(name: "pupd", scope: !10787, file: !1524, line: 227, type: !32)
!10802 = !DILocation(line: 0, scope: !10787)
!10803 = !DILocation(line: 160, column: 45, scope: !10787)
!10804 = !DILocation(line: 161, column: 44, scope: !10787)
!10805 = !DILocation(line: 163, column: 15, scope: !10787)
!10806 = !DILocation(line: 229, column: 14, scope: !10787)
!10807 = !DILocation(line: 246, column: 47, scope: !10787)
!10808 = !DILocation(line: 246, column: 2, scope: !10787)
!10809 = !DILocation(line: 248, column: 43, scope: !10787)
!10810 = !DILocation(line: 248, column: 2, scope: !10787)
!10811 = !DILocation(line: 250, column: 40, scope: !10787)
!10812 = !DILocation(line: 250, column: 2, scope: !10787)
!10813 = !DILocation(line: 252, column: 11, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10787, file: !1524, line: 252, column: 6)
!10815 = !DILocation(line: 252, column: 6, scope: !10787)
!10816 = !DILocation(line: 253, column: 11, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !1524, line: 253, column: 7)
!10818 = distinct !DILexicalBlock(scope: !10814, file: !1524, line: 252, column: 36)
!10819 = !DILocation(line: 253, column: 7, scope: !10818)
!10820 = !DILocation(line: 254, column: 4, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10817, file: !1524, line: 253, column: 16)
!10822 = !DILocation(line: 255, column: 3, scope: !10821)
!10823 = !DILocation(line: 256, column: 4, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10817, file: !1524, line: 255, column: 10)
!10825 = !DILocation(line: 260, column: 40, scope: !10787)
!10826 = !DILocation(line: 260, column: 2, scope: !10787)
!10827 = !DILocation(line: 265, column: 1, scope: !10787)
!10828 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1524, file: !1524, line: 137, type: !10635, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10829)
!10829 = !{!10830, !10831}
!10830 = !DILocalVariable(name: "pin", arg: 1, scope: !10828, file: !1524, line: 137, type: !108)
!10831 = !DILocalVariable(name: "pinval", scope: !10828, file: !1524, line: 139, type: !113)
!10832 = !DILocation(line: 0, scope: !10828)
!10833 = !DILocation(line: 149, column: 13, scope: !10828)
!10834 = !DILocation(line: 151, column: 2, scope: !10828)
!10835 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10710, file: !10710, line: 342, type: !10836, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10838)
!10836 = !DISubroutineType(types: !10837)
!10837 = !{null, !1457, !113, !113}
!10838 = !{!10839, !10840, !10841}
!10839 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10835, file: !10710, line: 342, type: !1457)
!10840 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10835, file: !10710, line: 342, type: !113)
!10841 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10835, file: !10710, line: 342, type: !113)
!10842 = !DILocation(line: 0, scope: !10835)
!10843 = !DILocation(line: 344, column: 3, scope: !10835)
!10844 = !DILocation(line: 345, column: 1, scope: !10835)
!10845 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10710, file: !10710, line: 413, type: !10836, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10846)
!10846 = !{!10847, !10848, !10849}
!10847 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10845, file: !10710, line: 413, type: !1457)
!10848 = !DILocalVariable(name: "Pin", arg: 2, scope: !10845, file: !10710, line: 413, type: !113)
!10849 = !DILocalVariable(name: "Speed", arg: 3, scope: !10845, file: !10710, line: 413, type: !113)
!10850 = !DILocation(line: 0, scope: !10845)
!10851 = !DILocation(line: 415, column: 3, scope: !10845)
!10852 = !DILocation(line: 0, scope: !10655, inlinedAt: !10853)
!10853 = distinct !DILocation(line: 415, column: 3, scope: !10845)
!10854 = !DILocation(line: 380, column: 4, scope: !10655, inlinedAt: !10853)
!10855 = !DILocation(line: 0, scope: !10663, inlinedAt: !10856)
!10856 = distinct !DILocation(line: 415, column: 3, scope: !10845)
!10857 = !DILocation(line: 414, column: 7, scope: !10663, inlinedAt: !10856)
!10858 = !DILocation(line: 0, scope: !10655, inlinedAt: !10859)
!10859 = distinct !DILocation(line: 415, column: 3, scope: !10845)
!10860 = !DILocation(line: 0, scope: !10663, inlinedAt: !10861)
!10861 = distinct !DILocation(line: 415, column: 3, scope: !10845)
!10862 = !DILocation(line: 417, column: 1, scope: !10845)
!10863 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10710, file: !10710, line: 484, type: !10836, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10864)
!10864 = !{!10865, !10866, !10867}
!10865 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10863, file: !10710, line: 484, type: !1457)
!10866 = !DILocalVariable(name: "Pin", arg: 2, scope: !10863, file: !10710, line: 484, type: !113)
!10867 = !DILocalVariable(name: "Pull", arg: 3, scope: !10863, file: !10710, line: 484, type: !113)
!10868 = !DILocation(line: 0, scope: !10863)
!10869 = !DILocation(line: 486, column: 3, scope: !10863)
!10870 = !DILocation(line: 0, scope: !10655, inlinedAt: !10871)
!10871 = distinct !DILocation(line: 486, column: 3, scope: !10863)
!10872 = !DILocation(line: 380, column: 4, scope: !10655, inlinedAt: !10871)
!10873 = !DILocation(line: 0, scope: !10663, inlinedAt: !10874)
!10874 = distinct !DILocation(line: 486, column: 3, scope: !10863)
!10875 = !DILocation(line: 414, column: 7, scope: !10663, inlinedAt: !10874)
!10876 = !DILocation(line: 0, scope: !10655, inlinedAt: !10877)
!10877 = distinct !DILocation(line: 486, column: 3, scope: !10863)
!10878 = !DILocation(line: 0, scope: !10663, inlinedAt: !10879)
!10879 = distinct !DILocation(line: 486, column: 3, scope: !10863)
!10880 = !DILocation(line: 487, column: 1, scope: !10863)
!10881 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10710, file: !10710, line: 556, type: !10836, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10882)
!10882 = !{!10883, !10884, !10885}
!10883 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10881, file: !10710, line: 556, type: !1457)
!10884 = !DILocalVariable(name: "Pin", arg: 2, scope: !10881, file: !10710, line: 556, type: !113)
!10885 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10881, file: !10710, line: 556, type: !113)
!10886 = !DILocation(line: 0, scope: !10881)
!10887 = !DILocation(line: 558, column: 3, scope: !10881)
!10888 = !DILocation(line: 0, scope: !10655, inlinedAt: !10889)
!10889 = distinct !DILocation(line: 558, column: 3, scope: !10881)
!10890 = !DILocation(line: 380, column: 4, scope: !10655, inlinedAt: !10889)
!10891 = !DILocation(line: 0, scope: !10663, inlinedAt: !10892)
!10892 = distinct !DILocation(line: 558, column: 3, scope: !10881)
!10893 = !DILocation(line: 414, column: 7, scope: !10663, inlinedAt: !10892)
!10894 = !DILocation(line: 0, scope: !10655, inlinedAt: !10895)
!10895 = distinct !DILocation(line: 558, column: 3, scope: !10881)
!10896 = !DILocation(line: 0, scope: !10663, inlinedAt: !10897)
!10897 = distinct !DILocation(line: 558, column: 3, scope: !10881)
!10898 = !DILocation(line: 560, column: 1, scope: !10881)
!10899 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10710, file: !10710, line: 633, type: !10836, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10900)
!10900 = !{!10901, !10902, !10903}
!10901 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10899, file: !10710, line: 633, type: !1457)
!10902 = !DILocalVariable(name: "Pin", arg: 2, scope: !10899, file: !10710, line: 633, type: !113)
!10903 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10899, file: !10710, line: 633, type: !113)
!10904 = !DILocation(line: 0, scope: !10899)
!10905 = !DILocation(line: 635, column: 3, scope: !10899)
!10906 = !DILocation(line: 0, scope: !10655, inlinedAt: !10907)
!10907 = distinct !DILocation(line: 635, column: 3, scope: !10899)
!10908 = !DILocation(line: 380, column: 4, scope: !10655, inlinedAt: !10907)
!10909 = !DILocation(line: 0, scope: !10663, inlinedAt: !10910)
!10910 = distinct !DILocation(line: 635, column: 3, scope: !10899)
!10911 = !DILocation(line: 414, column: 7, scope: !10663, inlinedAt: !10910)
!10912 = !DILocation(line: 0, scope: !10655, inlinedAt: !10913)
!10913 = distinct !DILocation(line: 635, column: 3, scope: !10899)
!10914 = !DILocation(line: 0, scope: !10663, inlinedAt: !10915)
!10915 = distinct !DILocation(line: 635, column: 3, scope: !10899)
!10916 = !DILocation(line: 637, column: 1, scope: !10899)
!10917 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10710, file: !10710, line: 273, type: !10836, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10918)
!10918 = !{!10919, !10920, !10921}
!10919 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10917, file: !10710, line: 273, type: !1457)
!10920 = !DILocalVariable(name: "Pin", arg: 2, scope: !10917, file: !10710, line: 273, type: !113)
!10921 = !DILocalVariable(name: "Mode", arg: 3, scope: !10917, file: !10710, line: 273, type: !113)
!10922 = !DILocation(line: 0, scope: !10917)
!10923 = !DILocation(line: 275, column: 3, scope: !10917)
!10924 = !DILocation(line: 0, scope: !10655, inlinedAt: !10925)
!10925 = distinct !DILocation(line: 275, column: 3, scope: !10917)
!10926 = !DILocation(line: 380, column: 4, scope: !10655, inlinedAt: !10925)
!10927 = !DILocation(line: 0, scope: !10663, inlinedAt: !10928)
!10928 = distinct !DILocation(line: 275, column: 3, scope: !10917)
!10929 = !DILocation(line: 414, column: 7, scope: !10663, inlinedAt: !10928)
!10930 = !DILocation(line: 0, scope: !10655, inlinedAt: !10931)
!10931 = distinct !DILocation(line: 275, column: 3, scope: !10917)
!10932 = !DILocation(line: 0, scope: !10663, inlinedAt: !10933)
!10933 = distinct !DILocation(line: 275, column: 3, scope: !10917)
!10934 = !DILocation(line: 276, column: 1, scope: !10917)
!10935 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1524, file: !1524, line: 698, type: !1537, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10936)
!10936 = !{!10937, !10938, !10939}
!10937 = !DILocalVariable(name: "dev", arg: 1, scope: !10935, file: !1524, line: 698, type: !1384)
!10938 = !DILocalVariable(name: "data", scope: !10935, file: !1524, line: 700, type: !10379)
!10939 = !DILocalVariable(name: "ret", scope: !10935, file: !1524, line: 701, type: !108)
!10940 = !DILocation(line: 0, scope: !10935)
!10941 = !DILocation(line: 700, column: 38, scope: !10935)
!10942 = !DILocation(line: 703, column: 8, scope: !10935)
!10943 = !DILocation(line: 703, column: 12, scope: !10935)
!10944 = !DILocation(line: 705, column: 7, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10935, file: !1524, line: 705, column: 6)
!10946 = !DILocation(line: 705, column: 6, scope: !10935)
!10947 = !DILocation(line: 722, column: 8, scope: !10935)
!10948 = !DILocation(line: 723, column: 10, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10935, file: !1524, line: 723, column: 6)
!10950 = !DILocation(line: 723, column: 6, scope: !10935)
!10951 = !DILocation(line: 731, column: 1, scope: !10935)
!10952 = distinct !DISubprogram(name: "device_is_ready", scope: !10159, file: !10159, line: 47, type: !10953, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10955)
!10953 = !DISubroutineType(types: !10954)
!10954 = !{!422, !1384}
!10955 = !{!10956}
!10956 = !DILocalVariable(name: "dev", arg: 1, scope: !10952, file: !10159, line: 47, type: !1384)
!10957 = !DILocation(line: 0, scope: !10952)
!10958 = !DILocation(line: 55, column: 2, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10952, file: !10159, line: 55, column: 2)
!10960 = !{i64 2154275752}
!10961 = !DILocation(line: 56, column: 9, scope: !10952)
!10962 = !DILocation(line: 56, column: 2, scope: !10952)
!10963 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1524, file: !1524, line: 270, type: !10964, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10966)
!10964 = !DISubroutineType(types: !10965)
!10965 = !{!108, !1384, !422}
!10966 = !{!10967, !10968, !10969, !10970, !10971}
!10967 = !DILocalVariable(name: "dev", arg: 1, scope: !10963, file: !1524, line: 270, type: !1384)
!10968 = !DILocalVariable(name: "on", arg: 2, scope: !10963, file: !1524, line: 270, type: !422)
!10969 = !DILocalVariable(name: "cfg", scope: !10963, file: !1524, line: 272, type: !10312)
!10970 = !DILocalVariable(name: "ret", scope: !10963, file: !1524, line: 273, type: !108)
!10971 = !DILocalVariable(name: "clk", scope: !10963, file: !1524, line: 278, type: !10602)
!10972 = !DILocation(line: 0, scope: !10963)
!10973 = !DILocation(line: 272, column: 45, scope: !10963)
!10974 = !DILocation(line: 282, column: 38, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !1524, line: 280, column: 10)
!10976 = distinct !DILexicalBlock(scope: !10963, file: !1524, line: 280, column: 6)
!10977 = !DILocation(line: 282, column: 6, scope: !10975)
!10978 = !DILocation(line: 281, column: 9, scope: !10975)
!10979 = !DILocation(line: 293, column: 1, scope: !10963)
!10980 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10953, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10981)
!10981 = !{!10982}
!10982 = !DILocalVariable(name: "dev", arg: 1, scope: !10980, file: !411, line: 730, type: !1384)
!10983 = !DILocation(line: 0, scope: !10980)
!10984 = !DILocation(line: 732, column: 9, scope: !10980)
!10985 = !DILocation(line: 732, column: 2, scope: !10980)
!10986 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1524, file: !1524, line: 496, type: !10987, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1355, retainedNodes: !10989)
!10987 = !DISubroutineType(types: !10988)
!10988 = !{!108, !1384, !108, !108, !108}
!10989 = !{!10990, !10991, !10992, !10993, !10994, !10995}
!10990 = !DILocalVariable(name: "dev", arg: 1, scope: !10986, file: !1524, line: 496, type: !1384)
!10991 = !DILocalVariable(name: "pin", arg: 2, scope: !10986, file: !1524, line: 496, type: !108)
!10992 = !DILocalVariable(name: "conf", arg: 3, scope: !10986, file: !1524, line: 496, type: !108)
!10993 = !DILocalVariable(name: "func", arg: 4, scope: !10986, file: !1524, line: 496, type: !108)
!10994 = !DILocalVariable(name: "ret", scope: !10986, file: !1524, line: 498, type: !108)
!10995 = !DILocalVariable(name: "gpio_out", scope: !10996, file: !1524, line: 508, type: !113)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !1524, line: 507, column: 27)
!10997 = distinct !DILexicalBlock(scope: !10986, file: !1524, line: 507, column: 6)
!10998 = !DILocation(line: 0, scope: !10986)
!10999 = !DILocation(line: 505, column: 2, scope: !10986)
!11000 = !DILocation(line: 507, column: 11, scope: !10997)
!11001 = !DILocation(line: 507, column: 6, scope: !10986)
!11002 = !DILocation(line: 508, column: 28, scope: !10996)
!11003 = !DILocation(line: 0, scope: !10996)
!11004 = !DILocation(line: 510, column: 16, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10996, file: !1524, line: 510, column: 7)
!11006 = !DILocation(line: 0, scope: !11005)
!11007 = !DILocation(line: 510, column: 7, scope: !10996)
!11008 = !DILocation(line: 511, column: 4, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11005, file: !1524, line: 510, column: 32)
!11010 = !DILocation(line: 512, column: 3, scope: !11009)
!11011 = !DILocation(line: 513, column: 4, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11013, file: !1524, line: 512, column: 39)
!11013 = distinct !DILexicalBlock(scope: !11005, file: !1524, line: 512, column: 14)
!11014 = !DILocation(line: 514, column: 3, scope: !11012)
!11015 = !DILocation(line: 518, column: 1, scope: !10986)
!11016 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1797, file: !1797, line: 526, type: !1700, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11017)
!11017 = !{!11018, !11019, !11020}
!11018 = !DILocalVariable(name: "dev", arg: 1, scope: !11016, file: !1797, line: 526, type: !1702)
!11019 = !DILocalVariable(name: "c", arg: 2, scope: !11016, file: !1797, line: 526, type: !1316)
!11020 = !DILocalVariable(name: "config", scope: !11016, file: !1797, line: 528, type: !11021)
!11021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 32)
!11022 = !DILocation(line: 0, scope: !11016)
!11023 = !DILocation(line: 528, column: 48, scope: !11016)
!11024 = !DILocation(line: 531, column: 40, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11016, file: !1797, line: 531, column: 6)
!11026 = !DILocation(line: 531, column: 6, scope: !11025)
!11027 = !DILocation(line: 531, column: 6, scope: !11016)
!11028 = !DILocation(line: 532, column: 34, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11025, file: !1797, line: 531, column: 48)
!11030 = !DILocation(line: 532, column: 3, scope: !11029)
!11031 = !DILocation(line: 533, column: 2, scope: !11029)
!11032 = !DILocation(line: 539, column: 42, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11016, file: !1797, line: 539, column: 6)
!11034 = !DILocation(line: 539, column: 7, scope: !11033)
!11035 = !DILocation(line: 539, column: 6, scope: !11016)
!11036 = !DILocation(line: 543, column: 52, scope: !11016)
!11037 = !DILocation(line: 543, column: 22, scope: !11016)
!11038 = !DILocation(line: 543, column: 5, scope: !11016)
!11039 = !DILocation(line: 545, column: 2, scope: !11016)
!11040 = !DILocation(line: 546, column: 1, scope: !11016)
!11041 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1797, file: !1797, line: 548, type: !1719, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11042)
!11042 = !{!11043, !11044, !11045, !11046}
!11043 = !DILocalVariable(name: "dev", arg: 1, scope: !11041, file: !1797, line: 548, type: !1702)
!11044 = !DILocalVariable(name: "c", arg: 2, scope: !11041, file: !1797, line: 549, type: !165)
!11045 = !DILocalVariable(name: "config", scope: !11041, file: !1797, line: 551, type: !11021)
!11046 = !DILocalVariable(name: "key", scope: !11041, file: !1797, line: 555, type: !32)
!11047 = !DILocation(line: 0, scope: !11041)
!11048 = !DILocation(line: 551, column: 48, scope: !11041)
!11049 = !DILocation(line: 562, column: 2, scope: !11041)
!11050 = !DILocation(line: 563, column: 41, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !1797, line: 563, column: 7)
!11052 = distinct !DILexicalBlock(scope: !11041, file: !1797, line: 562, column: 12)
!11053 = !DILocation(line: 563, column: 7, scope: !11051)
!11054 = !DILocation(line: 563, column: 7, scope: !11052)
!11055 = !DILocation(line: 55, column: 2, scope: !11056, inlinedAt: !11060)
!11056 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11057)
!11057 = !{!11058, !11059}
!11058 = !DILocalVariable(name: "key", scope: !11056, file: !4063, line: 44, type: !32)
!11059 = !DILocalVariable(name: "tmp", scope: !11056, file: !4063, line: 53, type: !32)
!11060 = distinct !DILocation(line: 564, column: 10, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11051, file: !1797, line: 563, column: 49)
!11062 = !{i64 2014667}
!11063 = !DILocation(line: 0, scope: !11056, inlinedAt: !11060)
!11064 = !DILocation(line: 565, column: 42, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11061, file: !1797, line: 565, column: 8)
!11066 = !DILocation(line: 565, column: 8, scope: !11065)
!11067 = !DILocation(line: 565, column: 8, scope: !11061)
!11068 = !DILocalVariable(name: "key", arg: 1, scope: !11069, file: !4063, line: 84, type: !32)
!11069 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11070)
!11070 = !{!11068}
!11071 = !DILocation(line: 0, scope: !11069, inlinedAt: !11072)
!11072 = distinct !DILocation(line: 568, column: 4, scope: !11061)
!11073 = !DILocation(line: 95, column: 2, scope: !11069, inlinedAt: !11072)
!11074 = !{i64 2015484}
!11075 = !DILocation(line: 569, column: 3, scope: !11061)
!11076 = distinct !{!11076, !11049, !11077}
!11077 = !DILocation(line: 570, column: 2, scope: !11041)
!11078 = !DILocation(line: 592, column: 33, scope: !11041)
!11079 = !DILocation(line: 592, column: 2, scope: !11041)
!11080 = !DILocation(line: 0, scope: !11069, inlinedAt: !11081)
!11081 = distinct !DILocation(line: 593, column: 2, scope: !11041)
!11082 = !DILocation(line: 95, column: 2, scope: !11069, inlinedAt: !11081)
!11083 = !DILocation(line: 594, column: 1, scope: !11041)
!11084 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1797, file: !1797, line: 596, type: !1723, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11085)
!11085 = !{!11086, !11087, !11088}
!11086 = !DILocalVariable(name: "dev", arg: 1, scope: !11084, file: !1797, line: 596, type: !1702)
!11087 = !DILocalVariable(name: "config", scope: !11084, file: !1797, line: 598, type: !11021)
!11088 = !DILocalVariable(name: "err", scope: !11084, file: !1797, line: 599, type: !113)
!11089 = !DILocation(line: 0, scope: !11084)
!11090 = !DILocation(line: 598, column: 48, scope: !11084)
!11091 = !DILocation(line: 606, column: 40, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11084, file: !1797, line: 606, column: 6)
!11093 = !DILocation(line: 606, column: 6, scope: !11092)
!11094 = !DILocation(line: 606, column: 6, scope: !11084)
!11095 = !DILocation(line: 610, column: 39, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11084, file: !1797, line: 610, column: 6)
!11097 = !DILocation(line: 610, column: 6, scope: !11096)
!11098 = !DILocation(line: 610, column: 6, scope: !11084)
!11099 = !DILocation(line: 614, column: 39, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11084, file: !1797, line: 614, column: 6)
!11101 = !DILocation(line: 614, column: 6, scope: !11100)
!11102 = !DILocation(line: 614, column: 6, scope: !11084)
!11103 = !DILocation(line: 619, column: 40, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11084, file: !1797, line: 619, column: 6)
!11105 = !DILocation(line: 619, column: 6, scope: !11104)
!11106 = !DILocation(line: 619, column: 6, scope: !11084)
!11107 = !DILocation(line: 623, column: 10, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11084, file: !1797, line: 623, column: 6)
!11109 = !DILocation(line: 623, column: 6, scope: !11084)
!11110 = !DILocation(line: 624, column: 34, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11108, file: !1797, line: 623, column: 24)
!11112 = !DILocation(line: 624, column: 3, scope: !11111)
!11113 = !DILocation(line: 625, column: 2, scope: !11111)
!11114 = !DILocation(line: 632, column: 10, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11084, file: !1797, line: 632, column: 6)
!11116 = !DILocation(line: 632, column: 6, scope: !11084)
!11117 = !DILocation(line: 633, column: 34, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11115, file: !1797, line: 632, column: 32)
!11119 = !DILocation(line: 633, column: 3, scope: !11118)
!11120 = !DILocation(line: 634, column: 2, scope: !11118)
!11121 = !DILocation(line: 636, column: 10, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11084, file: !1797, line: 636, column: 6)
!11123 = !DILocation(line: 636, column: 6, scope: !11084)
!11124 = !DILocation(line: 637, column: 33, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11122, file: !1797, line: 636, column: 31)
!11126 = !DILocation(line: 637, column: 3, scope: !11125)
!11127 = !DILocation(line: 638, column: 2, scope: !11125)
!11128 = !DILocation(line: 640, column: 10, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11084, file: !1797, line: 640, column: 6)
!11130 = !DILocation(line: 640, column: 6, scope: !11084)
!11131 = !DILocation(line: 641, column: 33, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11129, file: !1797, line: 640, column: 32)
!11133 = !DILocation(line: 641, column: 3, scope: !11132)
!11134 = !DILocation(line: 642, column: 2, scope: !11132)
!11135 = !DILocation(line: 646, column: 32, scope: !11084)
!11136 = !DILocation(line: 646, column: 2, scope: !11084)
!11137 = !DILocation(line: 648, column: 2, scope: !11084)
!11138 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1797, file: !1797, line: 419, type: !1727, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11139)
!11139 = !{!11140, !11141, !11142, !11143, !11145, !11146, !11147, !11148}
!11140 = !DILocalVariable(name: "dev", arg: 1, scope: !11138, file: !1797, line: 419, type: !1702)
!11141 = !DILocalVariable(name: "cfg", arg: 2, scope: !11138, file: !1797, line: 420, type: !1729)
!11142 = !DILocalVariable(name: "config", scope: !11138, file: !1797, line: 422, type: !11021)
!11143 = !DILocalVariable(name: "data", scope: !11138, file: !1797, line: 423, type: !11144)
!11144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!11145 = !DILocalVariable(name: "parity", scope: !11138, file: !1797, line: 424, type: !7297)
!11146 = !DILocalVariable(name: "stopbits", scope: !11138, file: !1797, line: 425, type: !7297)
!11147 = !DILocalVariable(name: "databits", scope: !11138, file: !1797, line: 426, type: !7297)
!11148 = !DILocalVariable(name: "flowctrl", scope: !11138, file: !1797, line: 428, type: !7297)
!11149 = !DILocation(line: 0, scope: !11138)
!11150 = !DILocation(line: 422, column: 48, scope: !11138)
!11151 = !DILocation(line: 423, column: 38, scope: !11138)
!11152 = !DILocation(line: 424, column: 56, scope: !11138)
!11153 = !DILocation(line: 424, column: 51, scope: !11138)
!11154 = !DILocation(line: 424, column: 26, scope: !11138)
!11155 = !DILocation(line: 425, column: 60, scope: !11138)
!11156 = !DILocation(line: 425, column: 55, scope: !11138)
!11157 = !DILocation(line: 425, column: 28, scope: !11138)
!11158 = !DILocation(line: 426, column: 60, scope: !11138)
!11159 = !DILocation(line: 426, column: 55, scope: !11138)
!11160 = !DILocation(line: 426, column: 28, scope: !11138)
!11161 = !DILocation(line: 428, column: 58, scope: !11138)
!11162 = !DILocation(line: 428, column: 53, scope: !11138)
!11163 = !DILocation(line: 428, column: 28, scope: !11138)
!11164 = !DILocation(line: 431, column: 44, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 431, column: 6)
!11166 = !DILocation(line: 438, column: 22, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 437, column: 6)
!11168 = !DILocation(line: 437, column: 6, scope: !11138)
!11169 = !DILocation(line: 448, column: 6, scope: !11138)
!11170 = !DILocation(line: 465, column: 47, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 465, column: 6)
!11172 = !DILocation(line: 475, column: 21, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 475, column: 6)
!11174 = !DILocation(line: 475, column: 6, scope: !11138)
!11175 = !DILocation(line: 476, column: 8, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11177, file: !1797, line: 476, column: 7)
!11177 = distinct !DILexicalBlock(scope: !11173, file: !1797, line: 475, column: 49)
!11178 = !DILocation(line: 477, column: 34, scope: !11176)
!11179 = !DILocation(line: 476, column: 7, scope: !11177)
!11180 = !DILocation(line: 482, column: 27, scope: !11138)
!11181 = !DILocation(line: 482, column: 2, scope: !11138)
!11182 = !DILocation(line: 484, column: 16, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 484, column: 6)
!11184 = !DILocation(line: 484, column: 13, scope: !11183)
!11185 = !DILocation(line: 484, column: 6, scope: !11138)
!11186 = !DILocation(line: 485, column: 3, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11183, file: !1797, line: 484, column: 44)
!11188 = !DILocation(line: 486, column: 2, scope: !11187)
!11189 = !DILocation(line: 488, column: 18, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 488, column: 6)
!11191 = !DILocation(line: 488, column: 15, scope: !11190)
!11192 = !DILocation(line: 488, column: 6, scope: !11138)
!11193 = !DILocation(line: 489, column: 3, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11190, file: !1797, line: 488, column: 48)
!11195 = !DILocation(line: 490, column: 2, scope: !11194)
!11196 = !DILocation(line: 492, column: 18, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 492, column: 6)
!11198 = !DILocation(line: 492, column: 15, scope: !11197)
!11199 = !DILocation(line: 492, column: 6, scope: !11138)
!11200 = !DILocation(line: 493, column: 3, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11197, file: !1797, line: 492, column: 48)
!11202 = !DILocation(line: 494, column: 2, scope: !11201)
!11203 = !DILocation(line: 496, column: 18, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 496, column: 6)
!11205 = !DILocation(line: 496, column: 15, scope: !11204)
!11206 = !DILocation(line: 496, column: 6, scope: !11138)
!11207 = !DILocation(line: 497, column: 3, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11204, file: !1797, line: 496, column: 46)
!11209 = !DILocation(line: 498, column: 2, scope: !11208)
!11210 = !DILocation(line: 500, column: 11, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11138, file: !1797, line: 500, column: 6)
!11212 = !DILocation(line: 500, column: 29, scope: !11211)
!11213 = !DILocation(line: 500, column: 20, scope: !11211)
!11214 = !DILocation(line: 500, column: 6, scope: !11138)
!11215 = !DILocation(line: 501, column: 3, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11211, file: !1797, line: 500, column: 40)
!11217 = !DILocation(line: 502, column: 26, scope: !11216)
!11218 = !DILocation(line: 502, column: 19, scope: !11216)
!11219 = !DILocation(line: 503, column: 2, scope: !11216)
!11220 = !DILocation(line: 505, column: 26, scope: !11138)
!11221 = !DILocation(line: 505, column: 2, scope: !11138)
!11222 = !DILocation(line: 506, column: 2, scope: !11138)
!11223 = !DILocation(line: 507, column: 1, scope: !11138)
!11224 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1797, file: !1797, line: 509, type: !1740, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11225)
!11225 = !{!11226, !11227, !11228}
!11226 = !DILocalVariable(name: "dev", arg: 1, scope: !11224, file: !1797, line: 509, type: !1702)
!11227 = !DILocalVariable(name: "cfg", arg: 2, scope: !11224, file: !1797, line: 510, type: !1742)
!11228 = !DILocalVariable(name: "data", scope: !11224, file: !1797, line: 512, type: !11144)
!11229 = !DILocation(line: 0, scope: !11224)
!11230 = !DILocation(line: 512, column: 38, scope: !11224)
!11231 = !DILocation(line: 514, column: 24, scope: !11224)
!11232 = !DILocation(line: 514, column: 7, scope: !11224)
!11233 = !DILocation(line: 514, column: 16, scope: !11224)
!11234 = !DILocation(line: 515, column: 41, scope: !11224)
!11235 = !{i32 0, i32 1537}
!11236 = !DILocation(line: 515, column: 16, scope: !11224)
!11237 = !DILocation(line: 515, column: 7, scope: !11224)
!11238 = !DILocation(line: 515, column: 14, scope: !11224)
!11239 = !DILocation(line: 517, column: 3, scope: !11224)
!11240 = !{i32 0, i32 12289}
!11241 = !DILocation(line: 516, column: 19, scope: !11224)
!11242 = !DILocation(line: 516, column: 7, scope: !11224)
!11243 = !DILocation(line: 516, column: 17, scope: !11224)
!11244 = !DILocation(line: 519, column: 3, scope: !11224)
!11245 = !DILocation(line: 519, column: 33, scope: !11224)
!11246 = !DILocation(line: 518, column: 19, scope: !11224)
!11247 = !DILocation(line: 518, column: 7, scope: !11224)
!11248 = !DILocation(line: 518, column: 17, scope: !11224)
!11249 = !DILocation(line: 521, column: 3, scope: !11224)
!11250 = !{i32 0, i32 769}
!11251 = !DILocation(line: 520, column: 19, scope: !11224)
!11252 = !DILocation(line: 520, column: 7, scope: !11224)
!11253 = !DILocation(line: 520, column: 17, scope: !11224)
!11254 = !DILocation(line: 522, column: 2, scope: !11224)
!11255 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1797, file: !1797, line: 205, type: !11256, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11258)
!11256 = !DISubroutineType(types: !11257)
!11257 = !{!113, !1702}
!11258 = !{!11259, !11260}
!11259 = !DILocalVariable(name: "dev", arg: 1, scope: !11255, file: !1797, line: 205, type: !1702)
!11260 = !DILocalVariable(name: "config", scope: !11255, file: !1797, line: 207, type: !11021)
!11261 = !DILocation(line: 0, scope: !11255)
!11262 = !DILocation(line: 207, column: 48, scope: !11255)
!11263 = !DILocation(line: 209, column: 36, scope: !11255)
!11264 = !DILocation(line: 209, column: 9, scope: !11255)
!11265 = !DILocation(line: 209, column: 2, scope: !11255)
!11266 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1797, file: !1797, line: 270, type: !11267, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11269)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{!1668, !113}
!11269 = !{!11270}
!11270 = !DILocalVariable(name: "parity", arg: 1, scope: !11266, file: !1797, line: 270, type: !113)
!11271 = !DILocation(line: 0, scope: !11266)
!11272 = !DILocation(line: 272, column: 2, scope: !11266)
!11273 = !DILocation(line: 281, column: 1, scope: !11266)
!11274 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1797, file: !1797, line: 220, type: !11256, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11275)
!11275 = !{!11276, !11277}
!11276 = !DILocalVariable(name: "dev", arg: 1, scope: !11274, file: !1797, line: 220, type: !1702)
!11277 = !DILocalVariable(name: "config", scope: !11274, file: !1797, line: 222, type: !11021)
!11278 = !DILocation(line: 0, scope: !11274)
!11279 = !DILocation(line: 222, column: 48, scope: !11274)
!11280 = !DILocation(line: 224, column: 44, scope: !11274)
!11281 = !DILocation(line: 224, column: 9, scope: !11274)
!11282 = !DILocation(line: 224, column: 2, scope: !11274)
!11283 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1797, file: !1797, line: 304, type: !11284, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11286)
!11284 = !DISubroutineType(types: !11285)
!11285 = !{!1682, !113}
!11286 = !{!11287}
!11287 = !DILocalVariable(name: "sb", arg: 1, scope: !11283, file: !1797, line: 304, type: !113)
!11288 = !DILocation(line: 0, scope: !11283)
!11289 = !DILocation(line: 306, column: 2, scope: !11283)
!11290 = !DILocation(line: 0, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11283, file: !1797, line: 306, column: 14)
!11292 = !DILocation(line: 323, column: 1, scope: !11283)
!11293 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1797, file: !1797, line: 235, type: !11256, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11294)
!11294 = !{!11295, !11296}
!11295 = !DILocalVariable(name: "dev", arg: 1, scope: !11293, file: !1797, line: 235, type: !1702)
!11296 = !DILocalVariable(name: "config", scope: !11293, file: !1797, line: 237, type: !11021)
!11297 = !DILocation(line: 0, scope: !11293)
!11298 = !DILocation(line: 237, column: 48, scope: !11293)
!11299 = !DILocation(line: 239, column: 39, scope: !11293)
!11300 = !DILocation(line: 239, column: 9, scope: !11293)
!11301 = !DILocation(line: 239, column: 2, scope: !11293)
!11302 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1797, file: !1797, line: 355, type: !11303, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11305)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!1675, !113, !113}
!11305 = !{!11306, !11307}
!11306 = !DILocalVariable(name: "db", arg: 1, scope: !11302, file: !1797, line: 355, type: !113)
!11307 = !DILocalVariable(name: "p", arg: 2, scope: !11302, file: !1797, line: 356, type: !113)
!11308 = !DILocation(line: 0, scope: !11302)
!11309 = !DILocation(line: 358, column: 2, scope: !11302)
!11310 = !DILocation(line: 384, column: 1, scope: !11302)
!11311 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1797, file: !1797, line: 250, type: !11256, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11312)
!11312 = !{!11313, !11314}
!11313 = !DILocalVariable(name: "dev", arg: 1, scope: !11311, file: !1797, line: 250, type: !1702)
!11314 = !DILocalVariable(name: "config", scope: !11311, file: !1797, line: 252, type: !11021)
!11315 = !DILocation(line: 0, scope: !11311)
!11316 = !DILocation(line: 252, column: 48, scope: !11311)
!11317 = !DILocation(line: 254, column: 40, scope: !11311)
!11318 = !DILocation(line: 254, column: 9, scope: !11311)
!11319 = !DILocation(line: 254, column: 2, scope: !11311)
!11320 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1797, file: !1797, line: 409, type: !11321, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11323)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{!1688, !113}
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "fc", arg: 1, scope: !11320, file: !1797, line: 409, type: !113)
!11325 = !DILocation(line: 0, scope: !11320)
!11326 = !DILocation(line: 411, column: 9, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11320, file: !1797, line: 411, column: 6)
!11328 = !DILocation(line: 416, column: 1, scope: !11320)
!11329 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11330, file: !11330, line: 967, type: !11331, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11333)
!11330 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11331 = !DISubroutineType(types: !11332)
!11332 = !{!113, !1743}
!11333 = !{!11334}
!11334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11329, file: !11330, line: 967, type: !1743)
!11335 = !DILocation(line: 0, scope: !11329)
!11336 = !DILocation(line: 969, column: 21, scope: !11329)
!11337 = !DILocation(line: 969, column: 3, scope: !11329)
!11338 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11330, file: !11330, line: 601, type: !11331, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11339)
!11339 = !{!11340}
!11340 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11338, file: !11330, line: 601, type: !1743)
!11341 = !DILocation(line: 0, scope: !11338)
!11342 = !DILocation(line: 603, column: 21, scope: !11338)
!11343 = !DILocation(line: 603, column: 3, scope: !11338)
!11344 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11330, file: !11330, line: 820, type: !11331, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11345)
!11345 = !{!11346}
!11346 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11344, file: !11330, line: 820, type: !1743)
!11347 = !DILocation(line: 0, scope: !11344)
!11348 = !DILocation(line: 822, column: 21, scope: !11344)
!11349 = !DILocation(line: 822, column: 3, scope: !11344)
!11350 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11330, file: !11330, line: 547, type: !11331, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11351)
!11351 = !{!11352}
!11352 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11350, file: !11330, line: 547, type: !1743)
!11353 = !DILocation(line: 0, scope: !11350)
!11354 = !DILocation(line: 549, column: 21, scope: !11350)
!11355 = !DILocation(line: 549, column: 3, scope: !11350)
!11356 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1797, file: !1797, line: 257, type: !11357, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11359)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{!113, !1668}
!11359 = !{!11360}
!11360 = !DILocalVariable(name: "parity", arg: 1, scope: !11356, file: !1797, line: 257, type: !1668)
!11361 = !DILocation(line: 0, scope: !11356)
!11362 = !DILocation(line: 259, column: 2, scope: !11356)
!11363 = !DILocation(line: 268, column: 1, scope: !11356)
!11364 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1797, file: !1797, line: 283, type: !11365, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11367)
!11365 = !DISubroutineType(types: !11366)
!11366 = !{!113, !1682}
!11367 = !{!11368}
!11368 = !DILocalVariable(name: "sb", arg: 1, scope: !11364, file: !1797, line: 283, type: !1682)
!11369 = !DILocation(line: 0, scope: !11364)
!11370 = !DILocation(line: 285, column: 2, scope: !11364)
!11371 = !DILocation(line: 0, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11364, file: !1797, line: 285, column: 14)
!11373 = !DILocation(line: 302, column: 1, scope: !11364)
!11374 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1797, file: !1797, line: 325, type: !11375, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11377)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{!113, !1675, !1668}
!11377 = !{!11378, !11379}
!11378 = !DILocalVariable(name: "db", arg: 1, scope: !11374, file: !1797, line: 325, type: !1675)
!11379 = !DILocalVariable(name: "p", arg: 2, scope: !11374, file: !1797, line: 326, type: !1668)
!11380 = !DILocation(line: 0, scope: !11374)
!11381 = !DILocation(line: 328, column: 2, scope: !11374)
!11382 = !DILocation(line: 353, column: 1, scope: !11374)
!11383 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1797, file: !1797, line: 393, type: !11384, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11386)
!11384 = !DISubroutineType(types: !11385)
!11385 = !{!113, !1688}
!11386 = !{!11387}
!11387 = !DILocalVariable(name: "fc", arg: 1, scope: !11383, file: !1797, line: 393, type: !1688)
!11388 = !DILocation(line: 0, scope: !11383)
!11389 = !DILocation(line: 395, column: 9, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11383, file: !1797, line: 395, column: 6)
!11391 = !DILocation(line: 400, column: 1, scope: !11383)
!11392 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11330, file: !11330, line: 424, type: !11393, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11395)
!11393 = !DISubroutineType(types: !11394)
!11394 = !{null, !1743}
!11395 = !{!11396}
!11396 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11392, file: !11330, line: 424, type: !1743)
!11397 = !DILocation(line: 0, scope: !11392)
!11398 = !DILocation(line: 426, column: 3, scope: !11392)
!11399 = !DILocation(line: 427, column: 1, scope: !11392)
!11400 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1797, file: !1797, line: 197, type: !11401, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11403)
!11401 = !DISubroutineType(types: !11402)
!11402 = !{null, !1702, !113}
!11403 = !{!11404, !11405, !11406}
!11404 = !DILocalVariable(name: "dev", arg: 1, scope: !11400, file: !1797, line: 197, type: !1702)
!11405 = !DILocalVariable(name: "parity", arg: 2, scope: !11400, file: !1797, line: 198, type: !113)
!11406 = !DILocalVariable(name: "config", scope: !11400, file: !1797, line: 200, type: !11021)
!11407 = !DILocation(line: 0, scope: !11400)
!11408 = !DILocation(line: 200, column: 48, scope: !11400)
!11409 = !DILocation(line: 202, column: 29, scope: !11400)
!11410 = !DILocation(line: 202, column: 2, scope: !11400)
!11411 = !DILocation(line: 203, column: 1, scope: !11400)
!11412 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1797, file: !1797, line: 212, type: !11401, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11413)
!11413 = !{!11414, !11415, !11416}
!11414 = !DILocalVariable(name: "dev", arg: 1, scope: !11412, file: !1797, line: 212, type: !1702)
!11415 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11412, file: !1797, line: 213, type: !113)
!11416 = !DILocalVariable(name: "config", scope: !11412, file: !1797, line: 215, type: !11021)
!11417 = !DILocation(line: 0, scope: !11412)
!11418 = !DILocation(line: 215, column: 48, scope: !11412)
!11419 = !DILocation(line: 217, column: 37, scope: !11412)
!11420 = !DILocation(line: 217, column: 2, scope: !11412)
!11421 = !DILocation(line: 218, column: 1, scope: !11412)
!11422 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1797, file: !1797, line: 227, type: !11401, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11423)
!11423 = !{!11424, !11425, !11426}
!11424 = !DILocalVariable(name: "dev", arg: 1, scope: !11422, file: !1797, line: 227, type: !1702)
!11425 = !DILocalVariable(name: "databits", arg: 2, scope: !11422, file: !1797, line: 228, type: !113)
!11426 = !DILocalVariable(name: "config", scope: !11422, file: !1797, line: 230, type: !11021)
!11427 = !DILocation(line: 0, scope: !11422)
!11428 = !DILocation(line: 230, column: 48, scope: !11422)
!11429 = !DILocation(line: 232, column: 32, scope: !11422)
!11430 = !DILocation(line: 232, column: 2, scope: !11422)
!11431 = !DILocation(line: 233, column: 1, scope: !11422)
!11432 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1797, file: !1797, line: 242, type: !11401, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11433)
!11433 = !{!11434, !11435, !11436}
!11434 = !DILocalVariable(name: "dev", arg: 1, scope: !11432, file: !1797, line: 242, type: !1702)
!11435 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11432, file: !1797, line: 243, type: !113)
!11436 = !DILocalVariable(name: "config", scope: !11432, file: !1797, line: 245, type: !11021)
!11437 = !DILocation(line: 0, scope: !11432)
!11438 = !DILocation(line: 245, column: 48, scope: !11432)
!11439 = !DILocation(line: 247, column: 33, scope: !11432)
!11440 = !DILocation(line: 247, column: 2, scope: !11432)
!11441 = !DILocation(line: 248, column: 1, scope: !11432)
!11442 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1797, file: !1797, line: 107, type: !11401, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11443)
!11443 = !{!11444, !11445, !11446, !11447, !11448}
!11444 = !DILocalVariable(name: "dev", arg: 1, scope: !11442, file: !1797, line: 107, type: !1702)
!11445 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11442, file: !1797, line: 107, type: !113)
!11446 = !DILocalVariable(name: "config", scope: !11442, file: !1797, line: 109, type: !11021)
!11447 = !DILocalVariable(name: "data", scope: !11442, file: !1797, line: 110, type: !11144)
!11448 = !DILocalVariable(name: "clock_rate", scope: !11442, file: !1797, line: 112, type: !113)
!11449 = !DILocation(line: 0, scope: !11442)
!11450 = !DILocation(line: 109, column: 48, scope: !11442)
!11451 = !DILocation(line: 110, column: 38, scope: !11442)
!11452 = !DILocation(line: 112, column: 2, scope: !11442)
!11453 = !DILocation(line: 123, column: 36, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11455, file: !1797, line: 123, column: 7)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !1797, line: 122, column: 9)
!11456 = distinct !DILexicalBlock(scope: !11442, file: !1797, line: 115, column: 6)
!11457 = !DILocation(line: 124, column: 42, scope: !11454)
!11458 = !DILocation(line: 123, column: 7, scope: !11454)
!11459 = !DILocation(line: 125, column: 22, scope: !11454)
!11460 = !DILocation(line: 123, column: 7, scope: !11455)
!11461 = !DILocation(line: 126, column: 4, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !1797, line: 126, column: 4)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !1797, line: 126, column: 4)
!11464 = distinct !DILexicalBlock(scope: !11465, file: !1797, line: 126, column: 4)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !1797, line: 126, column: 4)
!11466 = distinct !DILexicalBlock(scope: !11454, file: !1797, line: 125, column: 27)
!11467 = !DILocation(line: 127, column: 4, scope: !11466)
!11468 = !DILocation(line: 176, column: 36, scope: !11442)
!11469 = !DILocation(line: 176, column: 3, scope: !11442)
!11470 = !DILocation(line: 179, column: 32, scope: !11442)
!11471 = !DILocation(line: 180, column: 10, scope: !11442)
!11472 = !DILocation(line: 179, column: 3, scope: !11442)
!11473 = !DILocation(line: 195, column: 1, scope: !11442)
!11474 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11330, file: !11330, line: 410, type: !11393, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11475)
!11475 = !{!11476}
!11476 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11474, file: !11330, line: 410, type: !1743)
!11477 = !DILocation(line: 0, scope: !11474)
!11478 = !DILocation(line: 412, column: 3, scope: !11474)
!11479 = !DILocation(line: 413, column: 1, scope: !11474)
!11480 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1160, file: !1160, line: 216, type: !1776, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11481)
!11481 = !{!11482, !11483, !11484, !11485}
!11482 = !DILocalVariable(name: "dev", arg: 1, scope: !11480, file: !1160, line: 216, type: !1702)
!11483 = !DILocalVariable(name: "sys", arg: 2, scope: !11480, file: !1160, line: 217, type: !1255)
!11484 = !DILocalVariable(name: "rate", arg: 3, scope: !11480, file: !1160, line: 218, type: !1211)
!11485 = !DILocalVariable(name: "api", scope: !11480, file: !1160, line: 220, type: !1754)
!11486 = !DILocation(line: 0, scope: !11480)
!11487 = !DILocation(line: 221, column: 49, scope: !11480)
!11488 = !DILocation(line: 223, column: 11, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11480, file: !1160, line: 223, column: 6)
!11490 = !DILocation(line: 223, column: 20, scope: !11489)
!11491 = !DILocation(line: 223, column: 6, scope: !11480)
!11492 = !DILocation(line: 227, column: 9, scope: !11480)
!11493 = !DILocation(line: 227, column: 2, scope: !11480)
!11494 = !DILocation(line: 228, column: 1, scope: !11480)
!11495 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3675, file: !3675, line: 175, type: !3676, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11496)
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "level", arg: 1, scope: !11495, file: !3675, line: 175, type: !108)
!11498 = !DILocation(line: 0, scope: !11495)
!11499 = !DILocation(line: 177, column: 2, scope: !11495)
!11500 = !DILocation(line: 189, column: 1, scope: !11495)
!11501 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11330, file: !11330, line: 615, type: !11502, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11504)
!11502 = !DISubroutineType(types: !11503)
!11503 = !{null, !1743, !113}
!11504 = !{!11505, !11506}
!11505 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11501, file: !11330, line: 615, type: !1743)
!11506 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11501, file: !11330, line: 615, type: !113)
!11507 = !DILocation(line: 0, scope: !11501)
!11508 = !DILocation(line: 617, column: 3, scope: !11501)
!11509 = !DILocation(line: 618, column: 1, scope: !11501)
!11510 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11330, file: !11330, line: 1020, type: !11511, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11513)
!11511 = !DISubroutineType(types: !11512)
!11512 = !{null, !1743, !113, !113, !113}
!11513 = !{!11514, !11515, !11516, !11517}
!11514 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11510, file: !11330, line: 1020, type: !1743)
!11515 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11510, file: !11330, line: 1020, type: !113)
!11516 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11510, file: !11330, line: 1020, type: !113)
!11517 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11510, file: !11330, line: 1021, type: !113)
!11518 = !DILocation(line: 0, scope: !11510)
!11519 = !DILocation(line: 1029, column: 30, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !11330, line: 1028, column: 3)
!11521 = distinct !DILexicalBlock(scope: !11510, file: !11330, line: 1023, column: 7)
!11522 = !DILocation(line: 1029, column: 19, scope: !11520)
!11523 = !DILocation(line: 1029, column: 13, scope: !11520)
!11524 = !DILocation(line: 1029, column: 17, scope: !11520)
!11525 = !DILocation(line: 1031, column: 1, scope: !11510)
!11526 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11330, file: !11330, line: 949, type: !11502, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11527)
!11527 = !{!11528, !11529}
!11528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11526, file: !11330, line: 949, type: !1743)
!11529 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11526, file: !11330, line: 949, type: !113)
!11530 = !DILocation(line: 0, scope: !11526)
!11531 = !DILocation(line: 951, column: 3, scope: !11526)
!11532 = !DILocation(line: 952, column: 1, scope: !11526)
!11533 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11330, file: !11330, line: 588, type: !11502, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11534)
!11534 = !{!11535, !11536}
!11535 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11533, file: !11330, line: 588, type: !1743)
!11536 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11533, file: !11330, line: 588, type: !113)
!11537 = !DILocation(line: 0, scope: !11533)
!11538 = !DILocation(line: 590, column: 3, scope: !11533)
!11539 = !DILocation(line: 591, column: 1, scope: !11533)
!11540 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11330, file: !11330, line: 805, type: !11502, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11541)
!11541 = !{!11542, !11543}
!11542 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11540, file: !11330, line: 805, type: !1743)
!11543 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11540, file: !11330, line: 805, type: !113)
!11544 = !DILocation(line: 0, scope: !11540)
!11545 = !DILocation(line: 807, column: 3, scope: !11540)
!11546 = !DILocation(line: 808, column: 1, scope: !11540)
!11547 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11330, file: !11330, line: 532, type: !11502, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11548)
!11548 = !{!11549, !11550}
!11549 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11547, file: !11330, line: 532, type: !1743)
!11550 = !DILocalVariable(name: "Parity", arg: 2, scope: !11547, file: !11330, line: 532, type: !113)
!11551 = !DILocation(line: 0, scope: !11547)
!11552 = !DILocation(line: 534, column: 3, scope: !11547)
!11553 = !DILocation(line: 535, column: 1, scope: !11547)
!11554 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11330, file: !11330, line: 1770, type: !11331, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11555)
!11555 = !{!11556}
!11556 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11554, file: !11330, line: 1770, type: !1743)
!11557 = !DILocation(line: 0, scope: !11554)
!11558 = !DILocation(line: 1772, column: 11, scope: !11554)
!11559 = !DILocation(line: 1772, column: 46, scope: !11554)
!11560 = !DILocation(line: 1772, column: 3, scope: !11554)
!11561 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11330, file: !11330, line: 1737, type: !11331, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11562)
!11562 = !{!11563}
!11563 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11561, file: !11330, line: 1737, type: !1743)
!11564 = !DILocation(line: 0, scope: !11561)
!11565 = !DILocation(line: 1739, column: 11, scope: !11561)
!11566 = !DILocation(line: 1739, column: 3, scope: !11561)
!11567 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11330, file: !11330, line: 1748, type: !11331, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11568)
!11568 = !{!11569}
!11569 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11567, file: !11330, line: 1748, type: !1743)
!11570 = !DILocation(line: 0, scope: !11567)
!11571 = !DILocation(line: 1750, column: 11, scope: !11567)
!11572 = !DILocation(line: 1750, column: 45, scope: !11567)
!11573 = !DILocation(line: 1750, column: 3, scope: !11567)
!11574 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11330, file: !11330, line: 1827, type: !11331, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11575)
!11575 = !{!11576}
!11576 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11574, file: !11330, line: 1827, type: !1743)
!11577 = !DILocation(line: 0, scope: !11574)
!11578 = !DILocation(line: 1829, column: 11, scope: !11574)
!11579 = !DILocation(line: 1829, column: 46, scope: !11574)
!11580 = !DILocation(line: 1829, column: 3, scope: !11574)
!11581 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11330, file: !11330, line: 1992, type: !11393, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11582)
!11582 = !{!11583}
!11583 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11581, file: !11330, line: 1992, type: !1743)
!11584 = !DILocation(line: 0, scope: !11581)
!11585 = !DILocation(line: 1994, column: 3, scope: !11581)
!11586 = !DILocation(line: 1995, column: 1, scope: !11581)
!11587 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11330, file: !11330, line: 1934, type: !11393, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11588)
!11588 = !{!11589, !11590}
!11589 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11587, file: !11330, line: 1934, type: !1743)
!11590 = !DILocalVariable(name: "tmpreg", scope: !11587, file: !11330, line: 1936, type: !570)
!11591 = !DILocation(line: 0, scope: !11587)
!11592 = !DILocation(line: 1936, column: 3, scope: !11587)
!11593 = !DILocation(line: 1936, column: 17, scope: !11587)
!11594 = !DILocation(line: 1937, column: 20, scope: !11587)
!11595 = !DILocation(line: 1937, column: 10, scope: !11587)
!11596 = !DILocation(line: 1938, column: 10, scope: !11587)
!11597 = !DILocation(line: 1939, column: 20, scope: !11587)
!11598 = !DILocation(line: 1939, column: 10, scope: !11587)
!11599 = !DILocation(line: 1940, column: 10, scope: !11587)
!11600 = !DILocation(line: 1941, column: 1, scope: !11587)
!11601 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11330, file: !11330, line: 1877, type: !11393, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11602)
!11602 = !{!11603, !11604}
!11603 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11601, file: !11330, line: 1877, type: !1743)
!11604 = !DILocalVariable(name: "tmpreg", scope: !11601, file: !11330, line: 1879, type: !570)
!11605 = !DILocation(line: 0, scope: !11601)
!11606 = !DILocation(line: 1879, column: 3, scope: !11601)
!11607 = !DILocation(line: 1879, column: 17, scope: !11601)
!11608 = !DILocation(line: 1880, column: 20, scope: !11601)
!11609 = !DILocation(line: 1880, column: 10, scope: !11601)
!11610 = !DILocation(line: 1881, column: 10, scope: !11601)
!11611 = !DILocation(line: 1882, column: 20, scope: !11601)
!11612 = !DILocation(line: 1882, column: 10, scope: !11601)
!11613 = !DILocation(line: 1883, column: 10, scope: !11601)
!11614 = !DILocation(line: 1884, column: 1, scope: !11601)
!11615 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11330, file: !11330, line: 1896, type: !11393, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11616)
!11616 = !{!11617, !11618}
!11617 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11615, file: !11330, line: 1896, type: !1743)
!11618 = !DILocalVariable(name: "tmpreg", scope: !11615, file: !11330, line: 1898, type: !570)
!11619 = !DILocation(line: 0, scope: !11615)
!11620 = !DILocation(line: 1898, column: 3, scope: !11615)
!11621 = !DILocation(line: 1898, column: 17, scope: !11615)
!11622 = !DILocation(line: 1899, column: 20, scope: !11615)
!11623 = !DILocation(line: 1899, column: 10, scope: !11615)
!11624 = !DILocation(line: 1900, column: 10, scope: !11615)
!11625 = !DILocation(line: 1901, column: 20, scope: !11615)
!11626 = !DILocation(line: 1901, column: 10, scope: !11615)
!11627 = !DILocation(line: 1902, column: 10, scope: !11615)
!11628 = !DILocation(line: 1903, column: 1, scope: !11615)
!11629 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11330, file: !11330, line: 1915, type: !11393, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11630)
!11630 = !{!11631, !11632}
!11631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11629, file: !11330, line: 1915, type: !1743)
!11632 = !DILocalVariable(name: "tmpreg", scope: !11629, file: !11330, line: 1917, type: !570)
!11633 = !DILocation(line: 0, scope: !11629)
!11634 = !DILocation(line: 1917, column: 3, scope: !11629)
!11635 = !DILocation(line: 1917, column: 17, scope: !11629)
!11636 = !DILocation(line: 1918, column: 20, scope: !11629)
!11637 = !DILocation(line: 1918, column: 10, scope: !11629)
!11638 = !DILocation(line: 1919, column: 10, scope: !11629)
!11639 = !DILocation(line: 1920, column: 20, scope: !11629)
!11640 = !DILocation(line: 1920, column: 10, scope: !11629)
!11641 = !DILocation(line: 1921, column: 10, scope: !11629)
!11642 = !DILocation(line: 1922, column: 1, scope: !11629)
!11643 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11330, file: !11330, line: 1814, type: !11331, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11644)
!11644 = !{!11645}
!11645 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11643, file: !11330, line: 1814, type: !1743)
!11646 = !DILocation(line: 0, scope: !11643)
!11647 = !DILocation(line: 1816, column: 11, scope: !11643)
!11648 = !DILocation(line: 1816, column: 46, scope: !11643)
!11649 = !DILocation(line: 1816, column: 3, scope: !11643)
!11650 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11330, file: !11330, line: 2426, type: !11651, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11653)
!11651 = !DISubroutineType(types: !11652)
!11652 = !{null, !1743, !164}
!11653 = !{!11654, !11655}
!11654 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11650, file: !11330, line: 2426, type: !1743)
!11655 = !DILocalVariable(name: "Value", arg: 2, scope: !11650, file: !11330, line: 2426, type: !164)
!11656 = !DILocation(line: 0, scope: !11650)
!11657 = !DILocation(line: 2428, column: 16, scope: !11650)
!11658 = !DILocation(line: 2428, column: 11, scope: !11650)
!11659 = !DILocation(line: 2428, column: 14, scope: !11650)
!11660 = !DILocation(line: 2429, column: 1, scope: !11650)
!11661 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11330, file: !11330, line: 1792, type: !11331, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11662)
!11662 = !{!11663}
!11663 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11661, file: !11330, line: 1792, type: !1743)
!11664 = !DILocation(line: 0, scope: !11661)
!11665 = !DILocation(line: 1794, column: 11, scope: !11661)
!11666 = !DILocation(line: 1794, column: 47, scope: !11661)
!11667 = !DILocation(line: 1794, column: 3, scope: !11661)
!11668 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11330, file: !11330, line: 2403, type: !11669, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11671)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{!164, !1743}
!11671 = !{!11672}
!11672 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11668, file: !11330, line: 2403, type: !1743)
!11673 = !DILocation(line: 0, scope: !11668)
!11674 = !DILocation(line: 2405, column: 20, scope: !11668)
!11675 = !DILocation(line: 2405, column: 10, scope: !11668)
!11676 = !DILocation(line: 2405, column: 3, scope: !11668)
!11677 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1797, file: !1797, line: 1583, type: !1723, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11678)
!11678 = !{!11679, !11680, !11681, !11682, !11683, !11684}
!11679 = !DILocalVariable(name: "dev", arg: 1, scope: !11677, file: !1797, line: 1583, type: !1702)
!11680 = !DILocalVariable(name: "config", scope: !11677, file: !1797, line: 1585, type: !11021)
!11681 = !DILocalVariable(name: "data", scope: !11677, file: !1797, line: 1586, type: !11144)
!11682 = !DILocalVariable(name: "ll_parity", scope: !11677, file: !1797, line: 1587, type: !113)
!11683 = !DILocalVariable(name: "ll_datawidth", scope: !11677, file: !1797, line: 1588, type: !113)
!11684 = !DILocalVariable(name: "err", scope: !11677, file: !1797, line: 1589, type: !108)
!11685 = !DILocation(line: 0, scope: !11677)
!11686 = !DILocation(line: 1585, column: 48, scope: !11677)
!11687 = !DILocation(line: 1586, column: 38, scope: !11677)
!11688 = !DILocation(line: 1591, column: 2, scope: !11677)
!11689 = !DILocation(line: 1593, column: 29, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11677, file: !1797, line: 1593, column: 6)
!11691 = !DILocation(line: 1593, column: 7, scope: !11690)
!11692 = !DILocation(line: 1593, column: 6, scope: !11677)
!11693 = !DILocation(line: 1594, column: 3, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11695, file: !1797, line: 1594, column: 3)
!11695 = distinct !DILexicalBlock(scope: !11696, file: !1797, line: 1594, column: 3)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !1797, line: 1594, column: 3)
!11697 = distinct !DILexicalBlock(scope: !11698, file: !1797, line: 1594, column: 3)
!11698 = distinct !DILexicalBlock(scope: !11690, file: !1797, line: 1593, column: 37)
!11699 = !DILocation(line: 1595, column: 3, scope: !11698)
!11700 = !DILocation(line: 1599, column: 31, scope: !11677)
!11701 = !DILocation(line: 1599, column: 71, scope: !11677)
!11702 = !DILocation(line: 1599, column: 8, scope: !11677)
!11703 = !DILocation(line: 1600, column: 10, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11677, file: !1797, line: 1600, column: 6)
!11705 = !DILocation(line: 1600, column: 6, scope: !11677)
!11706 = !DILocation(line: 1601, column: 3, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !1797, line: 1601, column: 3)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !1797, line: 1601, column: 3)
!11709 = distinct !DILexicalBlock(scope: !11710, file: !1797, line: 1601, column: 3)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !1797, line: 1601, column: 3)
!11711 = distinct !DILexicalBlock(scope: !11704, file: !1797, line: 1600, column: 16)
!11712 = !DILocation(line: 1602, column: 3, scope: !11711)
!11713 = !DILocation(line: 1616, column: 36, scope: !11677)
!11714 = !DILocation(line: 1616, column: 8, scope: !11677)
!11715 = !DILocation(line: 1617, column: 10, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11677, file: !1797, line: 1617, column: 6)
!11717 = !DILocation(line: 1617, column: 6, scope: !11677)
!11718 = !DILocation(line: 1621, column: 27, scope: !11677)
!11719 = !DILocation(line: 1621, column: 2, scope: !11677)
!11720 = !DILocation(line: 1624, column: 40, scope: !11677)
!11721 = !DILocation(line: 1624, column: 2, scope: !11677)
!11722 = !DILocation(line: 1630, column: 14, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11677, file: !1797, line: 1630, column: 6)
!11724 = !DILocation(line: 1630, column: 6, scope: !11677)
!11725 = !DILocation(line: 1640, column: 4, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !1797, line: 1640, column: 4)
!11727 = distinct !DILexicalBlock(scope: !11728, file: !1797, line: 1640, column: 4)
!11728 = distinct !DILexicalBlock(scope: !11729, file: !1797, line: 1640, column: 4)
!11729 = distinct !DILexicalBlock(scope: !11730, file: !1797, line: 1640, column: 4)
!11730 = distinct !DILexicalBlock(scope: !11731, file: !1797, line: 1639, column: 28)
!11731 = distinct !DILexicalBlock(scope: !11732, file: !1797, line: 1639, column: 7)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !1797, line: 1638, column: 9)
!11733 = distinct !DILexicalBlock(scope: !11723, file: !1797, line: 1634, column: 13)
!11734 = !DILocation(line: 0, scope: !11723)
!11735 = !DILocation(line: 1649, column: 35, scope: !11677)
!11736 = !DILocation(line: 1649, column: 2, scope: !11677)
!11737 = !DILocation(line: 1654, column: 14, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11677, file: !1797, line: 1654, column: 6)
!11739 = !DILocation(line: 1654, column: 6, scope: !11677)
!11740 = !DILocation(line: 1655, column: 3, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11738, file: !1797, line: 1654, column: 31)
!11742 = !DILocation(line: 1656, column: 2, scope: !11741)
!11743 = !DILocation(line: 1659, column: 37, scope: !11677)
!11744 = !DILocation(line: 1659, column: 2, scope: !11677)
!11745 = !DILocation(line: 1662, column: 14, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11677, file: !1797, line: 1662, column: 6)
!11747 = !DILocation(line: 1662, column: 6, scope: !11677)
!11748 = !DILocation(line: 1663, column: 37, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11746, file: !1797, line: 1662, column: 27)
!11750 = !DILocation(line: 1663, column: 3, scope: !11749)
!11751 = !DILocation(line: 1664, column: 2, scope: !11749)
!11752 = !DILocation(line: 1684, column: 26, scope: !11677)
!11753 = !DILocation(line: 1684, column: 2, scope: !11677)
!11754 = !DILocation(line: 1722, column: 2, scope: !11677)
!11755 = !DILocation(line: 1724, column: 1, scope: !11677)
!11756 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1797, file: !1797, line: 651, type: !11757, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11759)
!11757 = !DISubroutineType(types: !11758)
!11758 = !{null, !1702}
!11759 = !{!11760, !11761, !11762}
!11760 = !DILocalVariable(name: "dev", arg: 1, scope: !11756, file: !1797, line: 651, type: !1702)
!11761 = !DILocalVariable(name: "data", scope: !11756, file: !1797, line: 653, type: !11144)
!11762 = !DILocalVariable(name: "clk", scope: !11756, file: !1797, line: 654, type: !11763)
!11763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!11764 = !DILocation(line: 0, scope: !11756)
!11765 = !DILocation(line: 653, column: 38, scope: !11756)
!11766 = !DILocation(line: 656, column: 8, scope: !11756)
!11767 = !DILocation(line: 656, column: 14, scope: !11756)
!11768 = !DILocation(line: 657, column: 1, scope: !11756)
!11769 = distinct !DISubprogram(name: "device_is_ready", scope: !10159, file: !10159, line: 47, type: !11770, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11772)
!11770 = !DISubroutineType(types: !11771)
!11771 = !{!422, !1702}
!11772 = !{!11773}
!11773 = !DILocalVariable(name: "dev", arg: 1, scope: !11769, file: !10159, line: 47, type: !1702)
!11774 = !DILocation(line: 0, scope: !11769)
!11775 = !DILocation(line: 55, column: 2, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11769, file: !10159, line: 55, column: 2)
!11777 = !{i64 2154366915}
!11778 = !DILocation(line: 56, column: 9, scope: !11769)
!11779 = !DILocation(line: 56, column: 2, scope: !11769)
!11780 = distinct !DISubprogram(name: "clock_control_on", scope: !1160, file: !1160, line: 123, type: !1761, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11781)
!11781 = !{!11782, !11783, !11784}
!11782 = !DILocalVariable(name: "dev", arg: 1, scope: !11780, file: !1160, line: 123, type: !1702)
!11783 = !DILocalVariable(name: "sys", arg: 2, scope: !11780, file: !1160, line: 124, type: !1255)
!11784 = !DILocalVariable(name: "api", scope: !11780, file: !1160, line: 126, type: !1754)
!11785 = !DILocation(line: 0, scope: !11780)
!11786 = !DILocation(line: 127, column: 49, scope: !11780)
!11787 = !DILocation(line: 129, column: 14, scope: !11780)
!11788 = !DILocation(line: 129, column: 9, scope: !11780)
!11789 = !DILocation(line: 129, column: 2, scope: !11780)
!11790 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1835, file: !1835, line: 342, type: !11791, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11793)
!11791 = !DISubroutineType(types: !11792)
!11792 = !{!108, !1832, !164}
!11793 = !{!11794, !11795, !11796, !11797}
!11794 = !DILocalVariable(name: "config", arg: 1, scope: !11790, file: !1835, line: 342, type: !1832)
!11795 = !DILocalVariable(name: "id", arg: 2, scope: !11790, file: !1835, line: 343, type: !164)
!11796 = !DILocalVariable(name: "ret", scope: !11790, file: !1835, line: 345, type: !108)
!11797 = !DILocalVariable(name: "state", scope: !11790, file: !1835, line: 346, type: !1838)
!11798 = !DILocation(line: 0, scope: !11790)
!11799 = !DILocation(line: 346, column: 2, scope: !11790)
!11800 = !DILocation(line: 348, column: 8, scope: !11790)
!11801 = !DILocation(line: 349, column: 10, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11790, file: !1835, line: 349, column: 6)
!11803 = !DILocation(line: 349, column: 6, scope: !11790)
!11804 = !DILocation(line: 353, column: 44, scope: !11790)
!11805 = !DILocation(line: 353, column: 9, scope: !11790)
!11806 = !DILocation(line: 353, column: 2, scope: !11790)
!11807 = !DILocation(line: 354, column: 1, scope: !11790)
!11808 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11330, file: !11330, line: 497, type: !11502, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11809)
!11809 = !{!11810, !11811, !11812}
!11810 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11808, file: !11330, line: 497, type: !1743)
!11811 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11808, file: !11330, line: 497, type: !113)
!11812 = !DILocalVariable(name: "val", scope: !11813, file: !11330, line: 499, type: !113)
!11813 = distinct !DILexicalBlock(scope: !11808, file: !11330, line: 499, column: 3)
!11814 = !DILocation(line: 0, scope: !11808)
!11815 = !DILocation(line: 499, column: 3, scope: !11813)
!11816 = !DILocalVariable(name: "addr", arg: 1, scope: !11817, file: !7029, line: 476, type: !1793)
!11817 = distinct !DISubprogram(name: "__LDREXW", scope: !7029, file: !7029, line: 476, type: !11818, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11820)
!11818 = !DISubroutineType(types: !11819)
!11819 = !{!113, !1793}
!11820 = !{!11816, !11821}
!11821 = !DILocalVariable(name: "result", scope: !11817, file: !7029, line: 478, type: !113)
!11822 = !DILocation(line: 0, scope: !11817, inlinedAt: !11823)
!11823 = distinct !DILocation(line: 499, column: 3, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11813, file: !11330, line: 499, column: 3)
!11825 = !DILocation(line: 480, column: 4, scope: !11817, inlinedAt: !11823)
!11826 = !{i64 2876729}
!11827 = !DILocation(line: 499, column: 3, scope: !11824)
!11828 = !DILocation(line: 0, scope: !11813)
!11829 = !DILocalVariable(name: "value", arg: 1, scope: !11830, file: !7029, line: 527, type: !113)
!11830 = distinct !DISubprogram(name: "__STREXW", scope: !7029, file: !7029, line: 527, type: !11831, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11833)
!11831 = !DISubroutineType(types: !11832)
!11832 = !{!113, !113, !1793}
!11833 = !{!11829, !11834, !11835}
!11834 = !DILocalVariable(name: "addr", arg: 2, scope: !11830, file: !7029, line: 527, type: !1793)
!11835 = !DILocalVariable(name: "result", scope: !11830, file: !7029, line: 529, type: !113)
!11836 = !DILocation(line: 0, scope: !11830, inlinedAt: !11837)
!11837 = distinct !DILocation(line: 499, column: 3, scope: !11813)
!11838 = !DILocation(line: 531, column: 4, scope: !11830, inlinedAt: !11837)
!11839 = !{i64 2878165}
!11840 = distinct !{!11840, !11815, !11815}
!11841 = !DILocation(line: 500, column: 1, scope: !11808)
!11842 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11330, file: !11330, line: 850, type: !11511, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11843)
!11843 = !{!11844, !11845, !11846, !11847}
!11844 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11842, file: !11330, line: 850, type: !1743)
!11845 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11842, file: !11330, line: 850, type: !113)
!11846 = !DILocalVariable(name: "Parity", arg: 3, scope: !11842, file: !11330, line: 850, type: !113)
!11847 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11842, file: !11330, line: 851, type: !113)
!11848 = !DILocation(line: 0, scope: !11842)
!11849 = !DILocation(line: 853, column: 3, scope: !11842)
!11850 = !DILocation(line: 854, column: 3, scope: !11842)
!11851 = !DILocation(line: 855, column: 1, scope: !11842)
!11852 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11330, file: !11330, line: 1337, type: !11393, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11853)
!11853 = !{!11854}
!11854 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11852, file: !11330, line: 1337, type: !1743)
!11855 = !DILocation(line: 0, scope: !11852)
!11856 = !DILocation(line: 1339, column: 3, scope: !11852)
!11857 = !DILocation(line: 1340, column: 1, scope: !11852)
!11858 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1835, file: !1835, line: 316, type: !11859, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!108, !1832, !1838}
!11861 = !{!11862, !11863, !11864}
!11862 = !DILocalVariable(name: "config", arg: 1, scope: !11858, file: !1835, line: 317, type: !1832)
!11863 = !DILocalVariable(name: "state", arg: 2, scope: !11858, file: !1835, line: 318, type: !1838)
!11864 = !DILocalVariable(name: "reg", scope: !11858, file: !1835, line: 320, type: !22)
!11865 = !DILocation(line: 0, scope: !11858)
!11866 = !DILocation(line: 329, column: 39, scope: !11858)
!11867 = !DILocation(line: 329, column: 52, scope: !11858)
!11868 = !DILocation(line: 329, column: 9, scope: !11858)
!11869 = !DILocation(line: 329, column: 2, scope: !11858)
!11870 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11770, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !11871)
!11871 = !{!11872}
!11872 = !DILocalVariable(name: "dev", arg: 1, scope: !11870, file: !411, line: 730, type: !1702)
!11873 = !DILocation(line: 0, scope: !11870)
!11874 = !DILocation(line: 732, column: 9, scope: !11870)
!11875 = !DILocation(line: 732, column: 2, scope: !11870)
!11876 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1956, file: !1956, line: 270, type: !1962, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11877)
!11877 = !{!11878}
!11878 = !DILocalVariable(name: "dev", arg: 1, scope: !11876, file: !1956, line: 270, type: !1964)
!11879 = !DILocation(line: 0, scope: !11876)
!11880 = !DILocation(line: 274, column: 2, scope: !11876)
!11881 = !DILocation(line: 275, column: 12, scope: !11876)
!11882 = !DILocation(line: 276, column: 15, scope: !11876)
!11883 = !DILocation(line: 277, column: 16, scope: !11876)
!11884 = !DILocation(line: 278, column: 15, scope: !11876)
!11885 = !DILocation(line: 279, column: 16, scope: !11876)
!11886 = !DILocation(line: 282, column: 2, scope: !11876)
!11887 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !788, file: !788, line: 1814, type: !7063, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11888)
!11888 = !{!11889, !11890}
!11889 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11887, file: !788, line: 1814, type: !1148)
!11890 = !DILocalVariable(name: "priority", arg: 2, scope: !11887, file: !788, line: 1814, type: !113)
!11891 = !DILocation(line: 0, scope: !11887)
!11892 = !DILocation(line: 1822, column: 46, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11894, file: !788, line: 1821, column: 3)
!11894 = distinct !DILexicalBlock(scope: !11887, file: !788, line: 1816, column: 7)
!11895 = !DILocation(line: 1824, column: 1, scope: !11887)
!11896 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1956, file: !1956, line: 118, type: !6966, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11897)
!11897 = !{!11898, !11899}
!11898 = !DILocalVariable(name: "arg", arg: 1, scope: !11896, file: !1956, line: 118, type: !104)
!11899 = !DILocalVariable(name: "dticks", scope: !11896, file: !1956, line: 121, type: !113)
!11900 = !DILocation(line: 0, scope: !11896)
!11901 = !DILocation(line: 124, column: 2, scope: !11896)
!11902 = !DILocation(line: 129, column: 17, scope: !11896)
!11903 = !DILocation(line: 129, column: 14, scope: !11896)
!11904 = !DILocation(line: 130, column: 15, scope: !11896)
!11905 = !DILocation(line: 145, column: 27, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !1956, line: 132, column: 16)
!11907 = distinct !DILexicalBlock(scope: !11896, file: !1956, line: 132, column: 6)
!11908 = !DILocation(line: 145, column: 25, scope: !11906)
!11909 = !DILocation(line: 145, column: 45, scope: !11906)
!11910 = !DILocation(line: 146, column: 30, scope: !11906)
!11911 = !DILocation(line: 146, column: 20, scope: !11906)
!11912 = !DILocation(line: 147, column: 3, scope: !11906)
!11913 = !DILocation(line: 151, column: 2, scope: !11896)
!11914 = !DILocation(line: 152, column: 1, scope: !11896)
!11915 = distinct !DISubprogram(name: "elapsed", scope: !1956, file: !1956, line: 85, type: !7110, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11916)
!11916 = !{!11917, !11918, !11919}
!11917 = !DILocalVariable(name: "val1", scope: !11915, file: !1956, line: 87, type: !113)
!11918 = !DILocalVariable(name: "ctrl", scope: !11915, file: !1956, line: 88, type: !113)
!11919 = !DILocalVariable(name: "val2", scope: !11915, file: !1956, line: 89, type: !113)
!11920 = !DILocation(line: 87, column: 27, scope: !11915)
!11921 = !DILocation(line: 0, scope: !11915)
!11922 = !DILocation(line: 88, column: 27, scope: !11915)
!11923 = !DILocation(line: 89, column: 27, scope: !11915)
!11924 = !DILocation(line: 105, column: 12, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11915, file: !1956, line: 105, column: 6)
!11926 = !DILocation(line: 106, column: 6, scope: !11925)
!11927 = !DILocation(line: 107, column: 16, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11925, file: !1956, line: 106, column: 24)
!11929 = !DILocation(line: 111, column: 18, scope: !11928)
!11930 = !DILocation(line: 112, column: 2, scope: !11928)
!11931 = !DILocation(line: 114, column: 20, scope: !11915)
!11932 = !DILocation(line: 114, column: 30, scope: !11915)
!11933 = !DILocation(line: 114, column: 28, scope: !11915)
!11934 = !DILocation(line: 114, column: 2, scope: !11915)
!11935 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1956, file: !1956, line: 154, type: !11936, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11938)
!11936 = !DISubroutineType(types: !11937)
!11937 = !{null, !220, !422}
!11938 = !{!11939, !11940, !11941, !11942, !11943, !11944, !11945, !11950, !11951}
!11939 = !DILocalVariable(name: "ticks", arg: 1, scope: !11935, file: !1956, line: 154, type: !220)
!11940 = !DILocalVariable(name: "idle", arg: 2, scope: !11935, file: !1956, line: 154, type: !422)
!11941 = !DILocalVariable(name: "delay", scope: !11935, file: !1956, line: 169, type: !113)
!11942 = !DILocalVariable(name: "val1", scope: !11935, file: !1956, line: 170, type: !113)
!11943 = !DILocalVariable(name: "val2", scope: !11935, file: !1956, line: 170, type: !113)
!11944 = !DILocalVariable(name: "last_load_", scope: !11935, file: !1956, line: 171, type: !113)
!11945 = !DILocalVariable(name: "key", scope: !11935, file: !1956, line: 176, type: !11946)
!11946 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !11947)
!11947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !11948)
!11948 = !{!11949}
!11949 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11947, file: !436, line: 33, baseType: !108, size: 32)
!11950 = !DILocalVariable(name: "pending", scope: !11935, file: !1956, line: 178, type: !113)
!11951 = !DILocalVariable(name: "unannounced", scope: !11935, file: !1956, line: 185, type: !113)
!11952 = !DILocation(line: 0, scope: !11935)
!11953 = !DILocation(line: 162, column: 49, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11935, file: !1956, line: 162, column: 6)
!11955 = !DILocation(line: 163, column: 17, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11954, file: !1956, line: 162, column: 78)
!11957 = !DILocation(line: 164, column: 13, scope: !11956)
!11958 = !DILocation(line: 165, column: 3, scope: !11956)
!11959 = !DILocation(line: 171, column: 24, scope: !11935)
!11960 = !DILocation(line: 173, column: 10, scope: !11935)
!11961 = !DILocation(line: 174, column: 10, scope: !11935)
!11962 = !DILocalVariable(name: "l", arg: 1, scope: !11963, file: !436, line: 136, type: !11966)
!11963 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !11964, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11967)
!11964 = !DISubroutineType(types: !11965)
!11965 = !{!11946, !11966}
!11966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!11967 = !{!11962, !11968}
!11968 = !DILocalVariable(name: "k", scope: !11963, file: !436, line: 139, type: !11946)
!11969 = !DILocation(line: 0, scope: !11963, inlinedAt: !11970)
!11970 = distinct !DILocation(line: 176, column: 25, scope: !11935)
!11971 = !DILocation(line: 55, column: 2, scope: !11972, inlinedAt: !11976)
!11972 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11973)
!11973 = !{!11974, !11975}
!11974 = !DILocalVariable(name: "key", scope: !11972, file: !4063, line: 44, type: !32)
!11975 = !DILocalVariable(name: "tmp", scope: !11972, file: !4063, line: 53, type: !32)
!11976 = distinct !DILocation(line: 145, column: 10, scope: !11963, inlinedAt: !11970)
!11977 = !{i64 1939556}
!11978 = !DILocation(line: 0, scope: !11972, inlinedAt: !11976)
!11979 = !DILocation(line: 178, column: 21, scope: !11935)
!11980 = !DILocation(line: 180, column: 18, scope: !11935)
!11981 = !DILocation(line: 182, column: 14, scope: !11935)
!11982 = !DILocation(line: 183, column: 15, scope: !11935)
!11983 = !DILocation(line: 185, column: 39, scope: !11935)
!11984 = !DILocation(line: 185, column: 37, scope: !11935)
!11985 = !DILocation(line: 187, column: 27, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11935, file: !1956, line: 187, column: 6)
!11987 = !DILocation(line: 187, column: 6, scope: !11935)
!11988 = !DILocation(line: 202, column: 27, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11986, file: !1956, line: 195, column: 9)
!11990 = !DILocation(line: 202, column: 48, scope: !11989)
!11991 = !DILocation(line: 203, column: 9, scope: !11989)
!11992 = !DILocation(line: 204, column: 11, scope: !11989)
!11993 = !DILocation(line: 205, column: 13, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11989, file: !1956, line: 205, column: 7)
!11995 = !DILocation(line: 205, column: 7, scope: !11989)
!11996 = !DILocation(line: 0, scope: !11986)
!11997 = !DILocation(line: 212, column: 18, scope: !11935)
!11998 = !DILocation(line: 214, column: 28, scope: !11935)
!11999 = !DILocation(line: 214, column: 16, scope: !11935)
!12000 = !DILocation(line: 215, column: 15, scope: !11935)
!12001 = !DILocation(line: 227, column: 11, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11935, file: !1956, line: 227, column: 6)
!12003 = !DILocation(line: 227, column: 6, scope: !11935)
!12004 = !DILocation(line: 228, column: 15, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12002, file: !1956, line: 227, column: 19)
!12006 = !DILocation(line: 228, column: 38, scope: !12005)
!12007 = !DILocation(line: 228, column: 24, scope: !12005)
!12008 = !DILocation(line: 229, column: 2, scope: !12005)
!12009 = !DILocation(line: 230, column: 24, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12002, file: !1956, line: 229, column: 9)
!12011 = !DILocation(line: 230, column: 15, scope: !12010)
!12012 = !DILocation(line: 0, scope: !12002)
!12013 = !DILocalVariable(name: "key", arg: 2, scope: !12014, file: !436, line: 190, type: !11946)
!12014 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !12015, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !12017)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{null, !11966, !11946}
!12017 = !{!12018, !12013}
!12018 = !DILocalVariable(name: "l", arg: 1, scope: !12014, file: !436, line: 189, type: !11966)
!12019 = !DILocation(line: 0, scope: !12014, inlinedAt: !12020)
!12020 = distinct !DILocation(line: 232, column: 2, scope: !11935)
!12021 = !DILocalVariable(name: "key", arg: 1, scope: !12022, file: !4063, line: 84, type: !32)
!12022 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !12023)
!12023 = !{!12021}
!12024 = !DILocation(line: 0, scope: !12022, inlinedAt: !12025)
!12025 = distinct !DILocation(line: 215, column: 2, scope: !12014, inlinedAt: !12020)
!12026 = !DILocation(line: 95, column: 2, scope: !12022, inlinedAt: !12025)
!12027 = !{i64 1940373}
!12028 = !DILocation(line: 234, column: 1, scope: !11935)
!12029 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1956, file: !1956, line: 236, type: !7110, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !12030)
!12030 = !{!12031, !12032}
!12031 = !DILocalVariable(name: "key", scope: !12029, file: !1956, line: 242, type: !11946)
!12032 = !DILocalVariable(name: "cyc", scope: !12029, file: !1956, line: 243, type: !113)
!12033 = !DILocation(line: 0, scope: !11963, inlinedAt: !12034)
!12034 = distinct !DILocation(line: 242, column: 25, scope: !12029)
!12035 = !DILocation(line: 55, column: 2, scope: !11972, inlinedAt: !12036)
!12036 = distinct !DILocation(line: 145, column: 10, scope: !11963, inlinedAt: !12034)
!12037 = !DILocation(line: 0, scope: !11972, inlinedAt: !12036)
!12038 = !DILocation(line: 0, scope: !12029)
!12039 = !DILocation(line: 243, column: 17, scope: !12029)
!12040 = !DILocation(line: 243, column: 29, scope: !12029)
!12041 = !DILocation(line: 243, column: 27, scope: !12029)
!12042 = !DILocation(line: 243, column: 43, scope: !12029)
!12043 = !DILocation(line: 243, column: 41, scope: !12029)
!12044 = !DILocation(line: 0, scope: !12014, inlinedAt: !12045)
!12045 = distinct !DILocation(line: 245, column: 2, scope: !12029)
!12046 = !DILocation(line: 0, scope: !12022, inlinedAt: !12047)
!12047 = distinct !DILocation(line: 215, column: 2, scope: !12014, inlinedAt: !12045)
!12048 = !DILocation(line: 95, column: 2, scope: !12022, inlinedAt: !12047)
!12049 = !DILocation(line: 246, column: 13, scope: !12029)
!12050 = !DILocation(line: 246, column: 2, scope: !12029)
!12051 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1956, file: !1956, line: 249, type: !7110, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !12052)
!12052 = !{!12053, !12054}
!12053 = !DILocalVariable(name: "key", scope: !12051, file: !1956, line: 251, type: !11946)
!12054 = !DILocalVariable(name: "ret", scope: !12051, file: !1956, line: 252, type: !113)
!12055 = !DILocation(line: 0, scope: !11963, inlinedAt: !12056)
!12056 = distinct !DILocation(line: 251, column: 25, scope: !12051)
!12057 = !DILocation(line: 55, column: 2, scope: !11972, inlinedAt: !12058)
!12058 = distinct !DILocation(line: 145, column: 10, scope: !11963, inlinedAt: !12056)
!12059 = !DILocation(line: 0, scope: !11972, inlinedAt: !12058)
!12060 = !DILocation(line: 0, scope: !12051)
!12061 = !DILocation(line: 252, column: 17, scope: !12051)
!12062 = !DILocation(line: 252, column: 29, scope: !12051)
!12063 = !DILocation(line: 252, column: 27, scope: !12051)
!12064 = !DILocation(line: 0, scope: !12014, inlinedAt: !12065)
!12065 = distinct !DILocation(line: 254, column: 2, scope: !12051)
!12066 = !DILocation(line: 0, scope: !12022, inlinedAt: !12067)
!12067 = distinct !DILocation(line: 215, column: 2, scope: !12014, inlinedAt: !12065)
!12068 = !DILocation(line: 95, column: 2, scope: !12022, inlinedAt: !12067)
!12069 = !DILocation(line: 255, column: 2, scope: !12051)
!12070 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1956, file: !1956, line: 258, type: !3389, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !437)
!12071 = !DILocation(line: 260, column: 6, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12070, file: !1956, line: 260, column: 6)
!12073 = !DILocation(line: 260, column: 16, scope: !12072)
!12074 = !DILocation(line: 260, column: 6, scope: !12070)
!12075 = !DILocation(line: 261, column: 17, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12072, file: !1956, line: 260, column: 34)
!12077 = !DILocation(line: 262, column: 2, scope: !12076)
!12078 = !DILocation(line: 263, column: 1, scope: !12070)
!12079 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1956, file: !1956, line: 265, type: !3389, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !437)
!12080 = !DILocation(line: 267, column: 16, scope: !12079)
!12081 = !DILocation(line: 268, column: 1, scope: !12079)
!12082 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12083, file: !12083, line: 9, type: !12084, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !12107)
!12083 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12084 = !DISubroutineType(types: !12085)
!12085 = !{!108, !12086, !164, !12106}
!12086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12087, size: 32)
!12087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12088)
!12088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1835, line: 60, size: 64, elements: !12089)
!12089 = !{!12090, !12105}
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12088, file: !1835, line: 69, baseType: !12091, size: 32)
!12091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12092, size: 32)
!12092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12093)
!12093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1835, line: 50, size: 64, elements: !12094)
!12094 = !{!12095, !12103, !12104}
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12093, file: !1835, line: 52, baseType: !12096, size: 32)
!12096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12097, size: 32)
!12097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12098)
!12098 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1846, line: 37, baseType: !12099)
!12099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1846, line: 32, size: 64, elements: !12100)
!12100 = !{!12101, !12102}
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12099, file: !1846, line: 34, baseType: !113, size: 32)
!12102 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12099, file: !1846, line: 36, baseType: !113, size: 32, offset: 32)
!12103 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12093, file: !1835, line: 54, baseType: !164, size: 8, offset: 32)
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12093, file: !1835, line: 56, baseType: !164, size: 8, offset: 40)
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12088, file: !1835, line: 71, baseType: !164, size: 8, offset: 32)
!12106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12091, size: 32)
!12107 = !{!12108, !12109, !12110}
!12108 = !DILocalVariable(name: "config", arg: 1, scope: !12082, file: !12083, line: 9, type: !12086)
!12109 = !DILocalVariable(name: "id", arg: 2, scope: !12082, file: !12083, line: 9, type: !164)
!12110 = !DILocalVariable(name: "state", arg: 3, scope: !12082, file: !12083, line: 10, type: !12106)
!12111 = !DILocation(line: 0, scope: !12082)
!12112 = !DILocation(line: 12, column: 20, scope: !12082)
!12113 = !DILocation(line: 13, column: 27, scope: !12082)
!12114 = !DILocation(line: 13, column: 42, scope: !12082)
!12115 = !DILocation(line: 13, column: 19, scope: !12082)
!12116 = !DILocation(line: 13, column: 16, scope: !12082)
!12117 = !DILocation(line: 13, column: 2, scope: !12082)
!12118 = distinct !{!12118, !12117, !12119}
!12119 = !DILocation(line: 19, column: 2, scope: !12082)
!12120 = !DILocation(line: 14, column: 23, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !12083, line: 14, column: 7)
!12122 = distinct !DILexicalBlock(scope: !12082, file: !12083, line: 13, column: 54)
!12123 = !DILocation(line: 14, column: 10, scope: !12121)
!12124 = !DILocation(line: 18, column: 11, scope: !12122)
!12125 = !DILocation(line: 14, column: 7, scope: !12122)
!12126 = !DILocation(line: 22, column: 1, scope: !12082)
!12127 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2073, file: !2073, line: 193, type: !12128, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1991, retainedNodes: !12137)
!12128 = !DISubroutineType(types: !12129)
!12129 = !{!108, !12130, !164, !22}
!12130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12131, size: 32)
!12131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12132)
!12132 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1846, line: 37, baseType: !12133)
!12133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1846, line: 32, size: 64, elements: !12134)
!12134 = !{!12135, !12136}
!12135 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12133, file: !1846, line: 34, baseType: !113, size: 32)
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12133, file: !1846, line: 36, baseType: !113, size: 32, offset: 32)
!12137 = !{!12138, !12139, !12140, !12141, !12142, !12143, !12144, !12145, !12147}
!12138 = !DILocalVariable(name: "pins", arg: 1, scope: !12127, file: !2073, line: 193, type: !12130)
!12139 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12127, file: !2073, line: 193, type: !164)
!12140 = !DILocalVariable(name: "reg", arg: 3, scope: !12127, file: !2073, line: 194, type: !22)
!12141 = !DILocalVariable(name: "pin", scope: !12127, file: !2073, line: 196, type: !113)
!12142 = !DILocalVariable(name: "mux", scope: !12127, file: !2073, line: 196, type: !113)
!12143 = !DILocalVariable(name: "pin_cgf", scope: !12127, file: !2073, line: 197, type: !113)
!12144 = !DILocalVariable(name: "ret", scope: !12127, file: !2073, line: 198, type: !108)
!12145 = !DILocalVariable(name: "i", scope: !12146, file: !2073, line: 209, type: !164)
!12146 = distinct !DILexicalBlock(scope: !12127, file: !2073, line: 209, column: 2)
!12147 = !DILocalVariable(name: "gpio_out", scope: !12148, file: !2073, line: 239, type: !113)
!12148 = distinct !DILexicalBlock(scope: !12149, file: !2073, line: 238, column: 55)
!12149 = distinct !DILexicalBlock(scope: !12150, file: !2073, line: 238, column: 14)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !2073, line: 236, column: 14)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !2073, line: 234, column: 7)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !2073, line: 209, column: 41)
!12153 = distinct !DILexicalBlock(scope: !12146, file: !2073, line: 209, column: 2)
!12154 = !DILocation(line: 0, scope: !12127)
!12155 = !DILocation(line: 0, scope: !12146)
!12156 = !DILocation(line: 209, column: 25, scope: !12153)
!12157 = !DILocation(line: 209, column: 2, scope: !12146)
!12158 = distinct !{!12158, !12157, !12159}
!12159 = !DILocation(line: 259, column: 2, scope: !12146)
!12160 = !DILocation(line: 210, column: 17, scope: !12152)
!12161 = !DILocation(line: 234, column: 7, scope: !12151)
!12162 = !DILocation(line: 234, column: 33, scope: !12151)
!12163 = !DILocation(line: 234, column: 7, scope: !12152)
!12164 = !DILocation(line: 235, column: 22, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12151, file: !2073, line: 234, column: 49)
!12166 = !DILocation(line: 235, column: 29, scope: !12165)
!12167 = !DILocation(line: 236, column: 3, scope: !12165)
!12168 = !DILocation(line: 236, column: 14, scope: !12151)
!12169 = !DILocation(line: 239, column: 32, scope: !12148)
!12170 = !DILocation(line: 0, scope: !12148)
!12171 = !DILocation(line: 241, column: 8, scope: !12148)
!12172 = !DILocation(line: 246, column: 3, scope: !12148)
!12173 = !DILocation(line: 252, column: 9, scope: !12152)
!12174 = !DILocation(line: 255, column: 9, scope: !12152)
!12175 = !DILocation(line: 256, column: 11, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12152, file: !2073, line: 256, column: 7)
!12177 = !DILocation(line: 209, column: 37, scope: !12153)
!12178 = !DILocation(line: 256, column: 7, scope: !12152)
!12179 = !DILocation(line: 262, column: 1, scope: !12127)
!12180 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2073, file: !2073, line: 176, type: !12181, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1991, retainedNodes: !12183)
!12181 = !DISubroutineType(types: !12182)
!12182 = !{!108, !113, !113, !113}
!12183 = !{!12184, !12185, !12186, !12187}
!12184 = !DILocalVariable(name: "pin", arg: 1, scope: !12180, file: !2073, line: 176, type: !113)
!12185 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12180, file: !2073, line: 176, type: !113)
!12186 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12180, file: !2073, line: 176, type: !113)
!12187 = !DILocalVariable(name: "port_device", scope: !12180, file: !2073, line: 178, type: !2003)
!12188 = !DILocation(line: 0, scope: !12180)
!12189 = !DILocation(line: 180, column: 22, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12180, file: !2073, line: 180, column: 6)
!12191 = !DILocation(line: 180, column: 6, scope: !12180)
!12192 = !DILocation(line: 180, column: 6, scope: !12190)
!12193 = !DILocation(line: 184, column: 16, scope: !12180)
!12194 = !DILocation(line: 186, column: 19, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12180, file: !2073, line: 186, column: 6)
!12196 = !DILocation(line: 186, column: 28, scope: !12195)
!12197 = !DILocation(line: 186, column: 33, scope: !12195)
!12198 = !DILocation(line: 186, column: 6, scope: !12180)
!12199 = !DILocation(line: 190, column: 43, scope: !12180)
!12200 = !DILocation(line: 190, column: 9, scope: !12180)
!12201 = !DILocation(line: 190, column: 2, scope: !12180)
!12202 = !DILocation(line: 191, column: 1, scope: !12180)
!12203 = distinct !DISubprogram(name: "device_is_ready", scope: !10159, file: !10159, line: 47, type: !12204, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1991, retainedNodes: !12206)
!12204 = !DISubroutineType(types: !12205)
!12205 = !{!422, !2003}
!12206 = !{!12207}
!12207 = !DILocalVariable(name: "dev", arg: 1, scope: !12203, file: !10159, line: 47, type: !2003)
!12208 = !DILocation(line: 0, scope: !12203)
!12209 = !DILocation(line: 55, column: 2, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12203, file: !10159, line: 55, column: 2)
!12211 = !{i64 2149173565}
!12212 = !DILocation(line: 56, column: 9, scope: !12203)
!12213 = !DILocation(line: 56, column: 2, scope: !12203)
!12214 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !12204, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1991, retainedNodes: !12215)
!12215 = !{!12216}
!12216 = !DILocalVariable(name: "dev", arg: 1, scope: !12214, file: !411, line: 730, type: !2003)
!12217 = !DILocation(line: 0, scope: !12214)
!12218 = !DILocation(line: 732, column: 9, scope: !12214)
!12219 = !DILocation(line: 732, column: 2, scope: !12214)
!12220 = distinct !DISubprogram(name: "SystemInit", scope: !2123, file: !2123, line: 167, type: !3389, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !437)
!12221 = !DILocation(line: 182, column: 1, scope: !12220)
!12222 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2123, file: !2123, line: 220, type: !3389, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !12223)
!12223 = !{!12224, !12225, !12226, !12227, !12228}
!12224 = !DILocalVariable(name: "tmp", scope: !12222, file: !2123, line: 222, type: !113)
!12225 = !DILocalVariable(name: "pllvco", scope: !12222, file: !2123, line: 222, type: !113)
!12226 = !DILocalVariable(name: "pllp", scope: !12222, file: !2123, line: 222, type: !113)
!12227 = !DILocalVariable(name: "pllsource", scope: !12222, file: !2123, line: 222, type: !113)
!12228 = !DILocalVariable(name: "pllm", scope: !12222, file: !2123, line: 222, type: !113)
!12229 = !DILocation(line: 0, scope: !12222)
!12230 = !DILocation(line: 225, column: 14, scope: !12222)
!12231 = !DILocation(line: 225, column: 19, scope: !12222)
!12232 = !DILocation(line: 227, column: 3, scope: !12222)
!12233 = !DILocation(line: 234, column: 7, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12222, file: !2123, line: 228, column: 3)
!12235 = !DILocation(line: 240, column: 25, scope: !12234)
!12236 = !DILocation(line: 241, column: 19, scope: !12234)
!12237 = !DILocation(line: 241, column: 27, scope: !12234)
!12238 = !DILocation(line: 243, column: 21, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12234, file: !2123, line: 243, column: 11)
!12240 = !DILocation(line: 0, scope: !12239)
!12241 = !DILocation(line: 254, column: 22, scope: !12234)
!12242 = !DILocation(line: 254, column: 62, scope: !12234)
!12243 = !DILocation(line: 255, column: 31, scope: !12234)
!12244 = !DILocation(line: 256, column: 7, scope: !12234)
!12245 = !DILocation(line: 0, scope: !12234)
!12246 = !DILocation(line: 263, column: 30, scope: !12222)
!12247 = !DILocation(line: 263, column: 52, scope: !12222)
!12248 = !DILocation(line: 263, column: 9, scope: !12222)
!12249 = !DILocation(line: 265, column: 19, scope: !12222)
!12250 = !DILocation(line: 266, column: 1, scope: !12222)
!12251 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12252, file: !12252, line: 200, type: !12253, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!12252 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12253 = !DISubroutineType(types: !12254)
!12254 = !{!12255}
!12255 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3202, line: 44, baseType: !3201)
!12256 = !DILocation(line: 202, column: 3, scope: !12251)
!12257 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12252, file: !12252, line: 219, type: !12258, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !12282)
!12258 = !DISubroutineType(types: !12259)
!12259 = !{!12255, !12260}
!12260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12261, size: 32)
!12261 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12262, line: 70, baseType: !12263)
!12262 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12262, line: 49, size: 384, elements: !12264)
!12264 = !{!12265, !12266, !12267, !12268, !12269, !12270, !12271}
!12265 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12263, file: !12262, line: 51, baseType: !113, size: 32)
!12266 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12263, file: !12262, line: 54, baseType: !113, size: 32, offset: 32)
!12267 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12263, file: !12262, line: 57, baseType: !113, size: 32, offset: 64)
!12268 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12263, file: !12262, line: 60, baseType: !113, size: 32, offset: 96)
!12269 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12263, file: !12262, line: 63, baseType: !113, size: 32, offset: 128)
!12270 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12263, file: !12262, line: 66, baseType: !113, size: 32, offset: 160)
!12271 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12263, file: !12262, line: 69, baseType: !12272, size: 192, offset: 192)
!12272 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12273, line: 73, baseType: !12274)
!12273 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12273, line: 45, size: 192, elements: !12275)
!12275 = !{!12276, !12277, !12278, !12279, !12280, !12281}
!12276 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12274, file: !12273, line: 47, baseType: !113, size: 32)
!12277 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12274, file: !12273, line: 50, baseType: !113, size: 32, offset: 32)
!12278 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12274, file: !12273, line: 53, baseType: !113, size: 32, offset: 64)
!12279 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12274, file: !12273, line: 56, baseType: !113, size: 32, offset: 96)
!12280 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12274, file: !12273, line: 60, baseType: !113, size: 32, offset: 128)
!12281 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12274, file: !12273, line: 63, baseType: !113, size: 32, offset: 160)
!12282 = !{!12283, !12284, !12285, !12286, !12290}
!12283 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12257, file: !12252, line: 219, type: !12260)
!12284 = !DILocalVariable(name: "tickstart", scope: !12257, file: !12252, line: 221, type: !113)
!12285 = !DILocalVariable(name: "pll_config", scope: !12257, file: !12252, line: 221, type: !113)
!12286 = !DILocalVariable(name: "pwrclkchanged", scope: !12287, file: !12252, line: 391, type: !12289)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !12252, line: 390, column: 3)
!12288 = distinct !DILexicalBlock(scope: !12257, file: !12252, line: 389, column: 6)
!12289 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1155, line: 188, baseType: !3208)
!12290 = !DILocalVariable(name: "tmpreg", scope: !12291, file: !12252, line: 400, type: !570)
!12291 = distinct !DILexicalBlock(scope: !12292, file: !12252, line: 400, column: 7)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !12252, line: 399, column: 5)
!12293 = distinct !DILexicalBlock(scope: !12287, file: !12252, line: 398, column: 8)
!12294 = !DILocation(line: 0, scope: !12257)
!12295 = !DILocation(line: 224, column: 24, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12257, file: !12252, line: 224, column: 6)
!12297 = !DILocation(line: 224, column: 6, scope: !12257)
!12298 = !DILocation(line: 232, column: 27, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12257, file: !12252, line: 232, column: 6)
!12300 = !DILocation(line: 232, column: 43, scope: !12299)
!12301 = !DILocation(line: 232, column: 69, scope: !12299)
!12302 = !DILocation(line: 232, column: 6, scope: !12257)
!12303 = !DILocation(line: 237, column: 9, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !12252, line: 237, column: 8)
!12305 = distinct !DILexicalBlock(scope: !12299, file: !12252, line: 233, column: 3)
!12306 = !DILocation(line: 237, column: 39, scope: !12304)
!12307 = !DILocation(line: 237, column: 60, scope: !12304)
!12308 = !DILocation(line: 238, column: 9, scope: !12304)
!12309 = !DILocation(line: 238, column: 39, scope: !12304)
!12310 = !DILocation(line: 238, column: 60, scope: !12304)
!12311 = !DILocation(line: 238, column: 70, scope: !12304)
!12312 = !DILocation(line: 238, column: 78, scope: !12304)
!12313 = !DILocation(line: 238, column: 100, scope: !12304)
!12314 = !DILocation(line: 237, column: 8, scope: !12305)
!12315 = !DILocation(line: 240, column: 11, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !12252, line: 240, column: 10)
!12317 = distinct !DILexicalBlock(scope: !12304, file: !12252, line: 239, column: 5)
!12318 = !DILocation(line: 240, column: 57, scope: !12316)
!12319 = !DILocation(line: 240, column: 80, scope: !12316)
!12320 = !DILocation(line: 240, column: 89, scope: !12316)
!12321 = !DILocation(line: 240, column: 10, scope: !12317)
!12322 = !DILocation(line: 248, column: 7, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12324, file: !12252, line: 248, column: 7)
!12324 = distinct !DILexicalBlock(scope: !12325, file: !12252, line: 248, column: 7)
!12325 = distinct !DILexicalBlock(scope: !12304, file: !12252, line: 246, column: 5)
!12326 = !DILocation(line: 248, column: 7, scope: !12324)
!12327 = !DILocation(line: 248, column: 7, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12323, file: !12252, line: 248, column: 7)
!12329 = !DILocation(line: 248, column: 7, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12331, file: !12252, line: 248, column: 7)
!12331 = distinct !DILexicalBlock(scope: !12323, file: !12252, line: 248, column: 7)
!12332 = !DILocation(line: 248, column: 7, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12331, file: !12252, line: 248, column: 7)
!12334 = !DILocation(line: 0, scope: !12323)
!12335 = !DILocation(line: 251, column: 30, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12325, file: !12252, line: 251, column: 10)
!12337 = !DILocation(line: 251, column: 40, scope: !12336)
!12338 = !DILocation(line: 0, scope: !12336)
!12339 = !DILocation(line: 251, column: 10, scope: !12325)
!12340 = !DILocation(line: 257, column: 15, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12336, file: !12252, line: 252, column: 7)
!12342 = !DILocation(line: 257, column: 51, scope: !12341)
!12343 = !DILocation(line: 257, column: 9, scope: !12341)
!12344 = !DILocation(line: 259, column: 15, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !12252, line: 259, column: 14)
!12346 = distinct !DILexicalBlock(scope: !12341, file: !12252, line: 258, column: 9)
!12347 = !DILocation(line: 259, column: 29, scope: !12345)
!12348 = !DILocation(line: 259, column: 43, scope: !12345)
!12349 = !DILocation(line: 259, column: 14, scope: !12346)
!12350 = distinct !{!12350, !12343, !12351}
!12351 = !DILocation(line: 263, column: 9, scope: !12341)
!12352 = !DILocation(line: 271, column: 15, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12336, file: !12252, line: 266, column: 7)
!12354 = !DILocation(line: 271, column: 9, scope: !12353)
!12355 = !DILocation(line: 273, column: 15, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12357, file: !12252, line: 273, column: 14)
!12357 = distinct !DILexicalBlock(scope: !12353, file: !12252, line: 272, column: 9)
!12358 = !DILocation(line: 273, column: 29, scope: !12356)
!12359 = !DILocation(line: 273, column: 43, scope: !12356)
!12360 = !DILocation(line: 273, column: 14, scope: !12357)
!12361 = distinct !{!12361, !12354, !12362}
!12362 = !DILocation(line: 277, column: 9, scope: !12353)
!12363 = !DILocation(line: 282, column: 27, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12257, file: !12252, line: 282, column: 6)
!12365 = !DILocation(line: 282, column: 43, scope: !12364)
!12366 = !DILocation(line: 282, column: 69, scope: !12364)
!12367 = !DILocation(line: 282, column: 6, scope: !12257)
!12368 = !DILocation(line: 289, column: 9, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !12252, line: 289, column: 8)
!12370 = distinct !DILexicalBlock(scope: !12364, file: !12252, line: 283, column: 3)
!12371 = !DILocation(line: 289, column: 39, scope: !12369)
!12372 = !DILocation(line: 289, column: 60, scope: !12369)
!12373 = !DILocation(line: 290, column: 9, scope: !12369)
!12374 = !DILocation(line: 290, column: 39, scope: !12369)
!12375 = !DILocation(line: 290, column: 60, scope: !12369)
!12376 = !DILocation(line: 290, column: 70, scope: !12369)
!12377 = !DILocation(line: 290, column: 78, scope: !12369)
!12378 = !DILocation(line: 290, column: 100, scope: !12369)
!12379 = !DILocation(line: 289, column: 8, scope: !12370)
!12380 = !DILocation(line: 293, column: 11, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12382, file: !12252, line: 293, column: 10)
!12382 = distinct !DILexicalBlock(scope: !12369, file: !12252, line: 291, column: 5)
!12383 = !DILocation(line: 293, column: 57, scope: !12381)
!12384 = !DILocation(line: 293, column: 80, scope: !12381)
!12385 = !DILocation(line: 293, column: 89, scope: !12381)
!12386 = !DILocation(line: 293, column: 10, scope: !12382)
!12387 = !DILocation(line: 307, column: 30, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12389, file: !12252, line: 307, column: 10)
!12389 = distinct !DILexicalBlock(scope: !12369, file: !12252, line: 305, column: 5)
!12390 = !DILocation(line: 307, column: 39, scope: !12388)
!12391 = !DILocation(line: 307, column: 10, scope: !12389)
!12392 = !DILocation(line: 310, column: 9, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12388, file: !12252, line: 308, column: 7)
!12394 = !DILocation(line: 313, column: 21, scope: !12393)
!12395 = !DILocation(line: 316, column: 9, scope: !12393)
!12396 = !DILocation(line: 316, column: 15, scope: !12393)
!12397 = !DILocation(line: 316, column: 51, scope: !12393)
!12398 = !DILocation(line: 318, column: 15, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12400, file: !12252, line: 318, column: 14)
!12400 = distinct !DILexicalBlock(scope: !12393, file: !12252, line: 317, column: 9)
!12401 = !DILocation(line: 318, column: 29, scope: !12399)
!12402 = !DILocation(line: 318, column: 43, scope: !12399)
!12403 = !DILocation(line: 318, column: 14, scope: !12400)
!12404 = distinct !{!12404, !12395, !12405}
!12405 = !DILocation(line: 322, column: 9, scope: !12393)
!12406 = !DILocation(line: 330, column: 9, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12388, file: !12252, line: 328, column: 7)
!12408 = !DILocation(line: 333, column: 21, scope: !12407)
!12409 = !DILocation(line: 336, column: 9, scope: !12407)
!12410 = !DILocation(line: 336, column: 15, scope: !12407)
!12411 = !DILocation(line: 338, column: 15, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12413, file: !12252, line: 338, column: 14)
!12413 = distinct !DILexicalBlock(scope: !12407, file: !12252, line: 337, column: 9)
!12414 = !DILocation(line: 338, column: 29, scope: !12412)
!12415 = !DILocation(line: 338, column: 43, scope: !12412)
!12416 = !DILocation(line: 338, column: 14, scope: !12413)
!12417 = distinct !{!12417, !12409, !12418}
!12418 = !DILocation(line: 342, column: 9, scope: !12407)
!12419 = !DILocation(line: 0, scope: !12369)
!12420 = !DILocation(line: 347, column: 27, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12257, file: !12252, line: 347, column: 6)
!12422 = !DILocation(line: 347, column: 43, scope: !12421)
!12423 = !DILocation(line: 347, column: 69, scope: !12421)
!12424 = !DILocation(line: 347, column: 6, scope: !12257)
!12425 = !DILocation(line: 353, column: 28, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12427, file: !12252, line: 353, column: 8)
!12427 = distinct !DILexicalBlock(scope: !12421, file: !12252, line: 348, column: 3)
!12428 = !DILocation(line: 353, column: 37, scope: !12426)
!12429 = !DILocation(line: 353, column: 8, scope: !12427)
!12430 = !DILocation(line: 356, column: 7, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12426, file: !12252, line: 354, column: 5)
!12432 = !DILocation(line: 359, column: 19, scope: !12431)
!12433 = !DILocation(line: 362, column: 7, scope: !12431)
!12434 = !DILocation(line: 362, column: 13, scope: !12431)
!12435 = !DILocation(line: 362, column: 49, scope: !12431)
!12436 = !DILocation(line: 364, column: 13, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !12252, line: 364, column: 12)
!12438 = distinct !DILexicalBlock(scope: !12431, file: !12252, line: 363, column: 7)
!12439 = !DILocation(line: 364, column: 27, scope: !12437)
!12440 = !DILocation(line: 364, column: 41, scope: !12437)
!12441 = !DILocation(line: 364, column: 12, scope: !12438)
!12442 = distinct !{!12442, !12433, !12443}
!12443 = !DILocation(line: 368, column: 7, scope: !12431)
!12444 = !DILocation(line: 373, column: 7, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12426, file: !12252, line: 371, column: 5)
!12446 = !DILocation(line: 376, column: 19, scope: !12445)
!12447 = !DILocation(line: 379, column: 7, scope: !12445)
!12448 = !DILocation(line: 379, column: 13, scope: !12445)
!12449 = !DILocation(line: 381, column: 13, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12451, file: !12252, line: 381, column: 12)
!12451 = distinct !DILexicalBlock(scope: !12445, file: !12252, line: 380, column: 7)
!12452 = !DILocation(line: 381, column: 27, scope: !12450)
!12453 = !DILocation(line: 381, column: 41, scope: !12450)
!12454 = !DILocation(line: 381, column: 12, scope: !12451)
!12455 = distinct !{!12455, !12447, !12456}
!12456 = !DILocation(line: 385, column: 7, scope: !12445)
!12457 = !DILocation(line: 389, column: 27, scope: !12288)
!12458 = !DILocation(line: 389, column: 43, scope: !12288)
!12459 = !DILocation(line: 389, column: 69, scope: !12288)
!12460 = !DILocation(line: 389, column: 6, scope: !12257)
!12461 = !DILocation(line: 0, scope: !12287)
!12462 = !DILocation(line: 398, column: 8, scope: !12293)
!12463 = !DILocation(line: 398, column: 8, scope: !12287)
!12464 = !DILocation(line: 400, column: 7, scope: !12291)
!12465 = !DILocation(line: 400, column: 7, scope: !12292)
!12466 = !DILocation(line: 402, column: 5, scope: !12292)
!12467 = !DILocation(line: 404, column: 8, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12287, file: !12252, line: 404, column: 8)
!12469 = !DILocation(line: 404, column: 8, scope: !12287)
!12470 = !DILocation(line: 407, column: 7, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12468, file: !12252, line: 405, column: 5)
!12472 = !DILocation(line: 410, column: 19, scope: !12471)
!12473 = !DILocation(line: 412, column: 7, scope: !12471)
!12474 = !DILocation(line: 412, column: 13, scope: !12471)
!12475 = !DILocation(line: 414, column: 13, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12477, file: !12252, line: 414, column: 12)
!12477 = distinct !DILexicalBlock(scope: !12471, file: !12252, line: 413, column: 7)
!12478 = !DILocation(line: 414, column: 27, scope: !12476)
!12479 = !DILocation(line: 414, column: 40, scope: !12476)
!12480 = !DILocation(line: 414, column: 12, scope: !12477)
!12481 = distinct !{!12481, !12473, !12482}
!12482 = !DILocation(line: 418, column: 7, scope: !12471)
!12483 = !DILocation(line: 422, column: 5, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12485, file: !12252, line: 422, column: 5)
!12485 = distinct !DILexicalBlock(scope: !12287, file: !12252, line: 422, column: 5)
!12486 = !DILocation(line: 422, column: 5, scope: !12485)
!12487 = !DILocation(line: 422, column: 5, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12484, file: !12252, line: 422, column: 5)
!12489 = !DILocation(line: 422, column: 5, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12491, file: !12252, line: 422, column: 5)
!12491 = distinct !DILexicalBlock(scope: !12484, file: !12252, line: 422, column: 5)
!12492 = !DILocation(line: 422, column: 5, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12491, file: !12252, line: 422, column: 5)
!12494 = !DILocation(line: 0, scope: !12484)
!12495 = !DILocation(line: 424, column: 28, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12287, file: !12252, line: 424, column: 8)
!12497 = !DILocation(line: 424, column: 38, scope: !12496)
!12498 = !DILocation(line: 0, scope: !12496)
!12499 = !DILocation(line: 424, column: 8, scope: !12287)
!12500 = !DILocation(line: 430, column: 13, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12496, file: !12252, line: 425, column: 5)
!12502 = !DILocation(line: 430, column: 49, scope: !12501)
!12503 = !DILocation(line: 430, column: 7, scope: !12501)
!12504 = !DILocation(line: 432, column: 13, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !12252, line: 432, column: 12)
!12506 = distinct !DILexicalBlock(scope: !12501, file: !12252, line: 431, column: 7)
!12507 = !DILocation(line: 432, column: 27, scope: !12505)
!12508 = !DILocation(line: 432, column: 41, scope: !12505)
!12509 = !DILocation(line: 432, column: 12, scope: !12506)
!12510 = distinct !{!12510, !12503, !12511}
!12511 = !DILocation(line: 436, column: 7, scope: !12501)
!12512 = !DILocation(line: 444, column: 13, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12496, file: !12252, line: 439, column: 5)
!12514 = !DILocation(line: 444, column: 7, scope: !12513)
!12515 = !DILocation(line: 446, column: 13, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !12252, line: 446, column: 12)
!12517 = distinct !DILexicalBlock(scope: !12513, file: !12252, line: 445, column: 7)
!12518 = !DILocation(line: 446, column: 27, scope: !12516)
!12519 = !DILocation(line: 446, column: 41, scope: !12516)
!12520 = !DILocation(line: 446, column: 12, scope: !12517)
!12521 = distinct !{!12521, !12514, !12522}
!12522 = !DILocation(line: 450, column: 7, scope: !12513)
!12523 = !DILocation(line: 454, column: 8, scope: !12287)
!12524 = !DILocation(line: 456, column: 7, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !12252, line: 455, column: 5)
!12526 = distinct !DILexicalBlock(scope: !12287, file: !12252, line: 454, column: 8)
!12527 = !DILocation(line: 457, column: 5, scope: !12525)
!12528 = !DILocation(line: 462, column: 31, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12257, file: !12252, line: 462, column: 7)
!12530 = !DILocation(line: 462, column: 41, scope: !12529)
!12531 = !DILocation(line: 462, column: 7, scope: !12257)
!12532 = !DILocation(line: 465, column: 8, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12534, file: !12252, line: 465, column: 8)
!12534 = distinct !DILexicalBlock(scope: !12529, file: !12252, line: 463, column: 3)
!12535 = !DILocation(line: 465, column: 38, scope: !12533)
!12536 = !DILocation(line: 465, column: 8, scope: !12534)
!12537 = !DILocation(line: 467, column: 44, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12539, file: !12252, line: 467, column: 10)
!12539 = distinct !DILexicalBlock(scope: !12533, file: !12252, line: 466, column: 5)
!12540 = !DILocation(line: 0, scope: !12538)
!12541 = !DILocation(line: 467, column: 10, scope: !12539)
!12542 = !DILocation(line: 483, column: 15, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12538, file: !12252, line: 468, column: 7)
!12544 = !DILocation(line: 483, column: 9, scope: !12543)
!12545 = !DILocation(line: 485, column: 15, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12547, file: !12252, line: 485, column: 14)
!12547 = distinct !DILexicalBlock(scope: !12543, file: !12252, line: 484, column: 9)
!12548 = !DILocation(line: 485, column: 29, scope: !12546)
!12549 = !DILocation(line: 485, column: 43, scope: !12546)
!12550 = !DILocation(line: 485, column: 14, scope: !12547)
!12551 = distinct !{!12551, !12544, !12552}
!12552 = !DILocation(line: 489, column: 9, scope: !12543)
!12553 = !DILocation(line: 492, column: 9, scope: !12543)
!12554 = !DILocation(line: 498, column: 9, scope: !12543)
!12555 = !DILocation(line: 501, column: 21, scope: !12543)
!12556 = !DILocation(line: 504, column: 9, scope: !12543)
!12557 = !DILocation(line: 504, column: 15, scope: !12543)
!12558 = !DILocation(line: 504, column: 51, scope: !12543)
!12559 = !DILocation(line: 506, column: 15, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !12252, line: 506, column: 14)
!12561 = distinct !DILexicalBlock(scope: !12543, file: !12252, line: 505, column: 9)
!12562 = !DILocation(line: 506, column: 29, scope: !12560)
!12563 = !DILocation(line: 506, column: 43, scope: !12560)
!12564 = !DILocation(line: 506, column: 14, scope: !12561)
!12565 = distinct !{!12565, !12556, !12566}
!12566 = !DILocation(line: 510, column: 9, scope: !12543)
!12567 = !DILocation(line: 521, column: 15, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12538, file: !12252, line: 513, column: 7)
!12569 = !DILocation(line: 521, column: 9, scope: !12568)
!12570 = !DILocation(line: 523, column: 15, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12572, file: !12252, line: 523, column: 14)
!12572 = distinct !DILexicalBlock(scope: !12568, file: !12252, line: 522, column: 9)
!12573 = !DILocation(line: 523, column: 29, scope: !12571)
!12574 = !DILocation(line: 523, column: 43, scope: !12571)
!12575 = !DILocation(line: 523, column: 14, scope: !12572)
!12576 = distinct !{!12576, !12569, !12577}
!12577 = !DILocation(line: 527, column: 9, scope: !12568)
!12578 = !DILocation(line: 533, column: 44, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12580, file: !12252, line: 533, column: 10)
!12580 = distinct !DILexicalBlock(scope: !12533, file: !12252, line: 531, column: 5)
!12581 = !DILocation(line: 533, column: 10, scope: !12580)
!12582 = !DILocation(line: 540, column: 27, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12579, file: !12252, line: 538, column: 7)
!12584 = !DILocation(line: 551, column: 14, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12583, file: !12252, line: 550, column: 13)
!12586 = !DILocation(line: 551, column: 81, scope: !12585)
!12587 = !DILocation(line: 551, column: 55, scope: !12585)
!12588 = !DILocation(line: 551, column: 92, scope: !12585)
!12589 = !DILocation(line: 552, column: 14, scope: !12585)
!12590 = !DILocation(line: 552, column: 80, scope: !12585)
!12591 = !DILocation(line: 552, column: 53, scope: !12585)
!12592 = !DILocation(line: 552, column: 111, scope: !12585)
!12593 = !DILocation(line: 553, column: 14, scope: !12585)
!12594 = !DILocation(line: 553, column: 80, scope: !12585)
!12595 = !DILocation(line: 553, column: 86, scope: !12585)
!12596 = !DILocation(line: 553, column: 53, scope: !12585)
!12597 = !DILocation(line: 553, column: 111, scope: !12585)
!12598 = !DILocation(line: 554, column: 14, scope: !12585)
!12599 = !DILocation(line: 554, column: 82, scope: !12585)
!12600 = !DILocation(line: 554, column: 101, scope: !12585)
!12601 = !DILocation(line: 554, column: 53, scope: !12585)
!12602 = !DILocation(line: 554, column: 126, scope: !12585)
!12603 = !DILocation(line: 555, column: 14, scope: !12585)
!12604 = !DILocation(line: 555, column: 80, scope: !12585)
!12605 = !DILocation(line: 555, column: 85, scope: !12585)
!12606 = !DILocation(line: 555, column: 53, scope: !12585)
!12607 = !DILocation(line: 550, column: 13, scope: !12583)
!12608 = !DILocation(line: 563, column: 3, scope: !12257)
!12609 = !DILocation(line: 564, column: 1, scope: !12257)
!12610 = !DISubprogram(name: "HAL_GetTick", scope: !12611, file: !12611, line: 234, type: !7110, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12611 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12612 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12252, file: !12252, line: 591, type: !12613, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !12624)
!12613 = !DISubroutineType(types: !12614)
!12614 = !{!12255, !12615, !113}
!12615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12616, size: 32)
!12616 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12262, line: 92, baseType: !12617)
!12617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12262, line: 75, size: 160, elements: !12618)
!12618 = !{!12619, !12620, !12621, !12622, !12623}
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12617, file: !12262, line: 77, baseType: !113, size: 32)
!12620 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12617, file: !12262, line: 80, baseType: !113, size: 32, offset: 32)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12617, file: !12262, line: 83, baseType: !113, size: 32, offset: 64)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12617, file: !12262, line: 86, baseType: !113, size: 32, offset: 96)
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12617, file: !12262, line: 89, baseType: !113, size: 32, offset: 128)
!12624 = !{!12625, !12626, !12627}
!12625 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12612, file: !12252, line: 591, type: !12615)
!12626 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12612, file: !12252, line: 591, type: !113)
!12627 = !DILocalVariable(name: "tickstart", scope: !12612, file: !12252, line: 593, type: !113)
!12628 = !DILocation(line: 0, scope: !12612)
!12629 = !DILocation(line: 596, column: 24, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12612, file: !12252, line: 596, column: 6)
!12631 = !DILocation(line: 596, column: 6, scope: !12612)
!12632 = !DILocation(line: 610, column: 17, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12612, file: !12252, line: 610, column: 6)
!12634 = !DILocation(line: 610, column: 15, scope: !12633)
!12635 = !DILocation(line: 610, column: 6, scope: !12612)
!12636 = !DILocation(line: 613, column: 5, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12633, file: !12252, line: 611, column: 3)
!12638 = !DILocation(line: 617, column: 8, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12637, file: !12252, line: 617, column: 8)
!12640 = !DILocation(line: 617, column: 34, scope: !12639)
!12641 = !DILocation(line: 617, column: 8, scope: !12637)
!12642 = !DILocation(line: 624, column: 27, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12612, file: !12252, line: 624, column: 6)
!12644 = !DILocation(line: 624, column: 38, scope: !12643)
!12645 = !DILocation(line: 624, column: 60, scope: !12643)
!12646 = !DILocation(line: 624, column: 6, scope: !12612)
!12647 = !DILocation(line: 628, column: 40, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12649, file: !12252, line: 628, column: 8)
!12649 = distinct !DILexicalBlock(scope: !12643, file: !12252, line: 625, column: 3)
!12650 = !DILocation(line: 628, column: 63, scope: !12648)
!12651 = !DILocation(line: 628, column: 8, scope: !12649)
!12652 = !DILocation(line: 630, column: 7, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12648, file: !12252, line: 629, column: 5)
!12654 = !DILocation(line: 633, column: 29, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12649, file: !12252, line: 633, column: 8)
!12656 = !DILocation(line: 631, column: 5, scope: !12653)
!12657 = !DILocation(line: 633, column: 40, scope: !12655)
!12658 = !DILocation(line: 633, column: 63, scope: !12655)
!12659 = !DILocation(line: 633, column: 8, scope: !12649)
!12660 = !DILocation(line: 635, column: 7, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12655, file: !12252, line: 634, column: 5)
!12662 = !DILocation(line: 636, column: 5, scope: !12661)
!12663 = !DILocation(line: 639, column: 5, scope: !12649)
!12664 = !DILocation(line: 643, column: 27, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12612, file: !12252, line: 643, column: 6)
!12666 = !DILocation(line: 640, column: 3, scope: !12649)
!12667 = !DILocation(line: 643, column: 38, scope: !12665)
!12668 = !DILocation(line: 643, column: 62, scope: !12665)
!12669 = !DILocation(line: 643, column: 6, scope: !12612)
!12670 = !DILocation(line: 648, column: 27, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !12252, line: 648, column: 8)
!12672 = distinct !DILexicalBlock(scope: !12665, file: !12252, line: 644, column: 3)
!12673 = !DILocation(line: 648, column: 8, scope: !12672)
!12674 = !DILocation(line: 651, column: 10, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !12252, line: 651, column: 10)
!12676 = distinct !DILexicalBlock(scope: !12671, file: !12252, line: 649, column: 5)
!12677 = !DILocation(line: 651, column: 46, scope: !12675)
!12678 = !DILocation(line: 651, column: 10, scope: !12676)
!12679 = !DILocation(line: 661, column: 10, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !12252, line: 661, column: 10)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !12252, line: 659, column: 5)
!12682 = distinct !DILexicalBlock(scope: !12671, file: !12252, line: 657, column: 13)
!12683 = !DILocation(line: 661, column: 46, scope: !12680)
!12684 = !DILocation(line: 661, column: 10, scope: !12681)
!12685 = !DILocation(line: 670, column: 10, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12687, file: !12252, line: 670, column: 10)
!12687 = distinct !DILexicalBlock(scope: !12682, file: !12252, line: 668, column: 5)
!12688 = !DILocation(line: 670, column: 46, scope: !12686)
!12689 = !DILocation(line: 670, column: 10, scope: !12687)
!12690 = !DILocation(line: 676, column: 5, scope: !12672)
!12691 = !DILocation(line: 679, column: 17, scope: !12672)
!12692 = !DILocation(line: 681, column: 5, scope: !12672)
!12693 = !DILocation(line: 681, column: 12, scope: !12672)
!12694 = !DILocation(line: 681, column: 65, scope: !12672)
!12695 = !DILocation(line: 681, column: 78, scope: !12672)
!12696 = !DILocation(line: 681, column: 42, scope: !12672)
!12697 = !DILocation(line: 683, column: 12, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12699, file: !12252, line: 683, column: 11)
!12699 = distinct !DILexicalBlock(scope: !12672, file: !12252, line: 682, column: 5)
!12700 = !DILocation(line: 683, column: 26, scope: !12698)
!12701 = !DILocation(line: 683, column: 39, scope: !12698)
!12702 = !DILocation(line: 683, column: 11, scope: !12699)
!12703 = distinct !{!12703, !12692, !12704}
!12704 = !DILocation(line: 687, column: 5, scope: !12672)
!12705 = !DILocation(line: 691, column: 17, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12612, file: !12252, line: 691, column: 6)
!12707 = !DILocation(line: 691, column: 15, scope: !12706)
!12708 = !DILocation(line: 691, column: 6, scope: !12612)
!12709 = !DILocation(line: 694, column: 5, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12706, file: !12252, line: 692, column: 3)
!12711 = !DILocation(line: 698, column: 8, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12710, file: !12252, line: 698, column: 8)
!12713 = !DILocation(line: 698, column: 34, scope: !12712)
!12714 = !DILocation(line: 698, column: 8, scope: !12710)
!12715 = !DILocation(line: 705, column: 27, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12612, file: !12252, line: 705, column: 6)
!12717 = !DILocation(line: 705, column: 38, scope: !12716)
!12718 = !DILocation(line: 705, column: 61, scope: !12716)
!12719 = !DILocation(line: 705, column: 6, scope: !12612)
!12720 = !DILocation(line: 708, column: 5, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12716, file: !12252, line: 706, column: 3)
!12722 = !DILocation(line: 712, column: 27, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12612, file: !12252, line: 712, column: 6)
!12724 = !DILocation(line: 709, column: 3, scope: !12721)
!12725 = !DILocation(line: 712, column: 38, scope: !12723)
!12726 = !DILocation(line: 712, column: 61, scope: !12723)
!12727 = !DILocation(line: 712, column: 6, scope: !12612)
!12728 = !DILocation(line: 715, column: 5, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12723, file: !12252, line: 713, column: 3)
!12730 = !DILocation(line: 716, column: 3, scope: !12729)
!12731 = !DILocation(line: 719, column: 21, scope: !12612)
!12732 = !DILocation(line: 719, column: 70, scope: !12612)
!12733 = !DILocation(line: 719, column: 91, scope: !12612)
!12734 = !DILocation(line: 719, column: 50, scope: !12612)
!12735 = !DILocation(line: 719, column: 47, scope: !12612)
!12736 = !DILocation(line: 719, column: 19, scope: !12612)
!12737 = !DILocation(line: 722, column: 17, scope: !12612)
!12738 = !DILocation(line: 722, column: 3, scope: !12612)
!12739 = !DILocation(line: 724, column: 3, scope: !12612)
!12740 = !DILocation(line: 725, column: 1, scope: !12612)
!12741 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12252, file: !12252, line: 885, type: !7110, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !12742)
!12742 = !{!12743, !12744, !12745, !12746}
!12743 = !DILocalVariable(name: "pllm", scope: !12741, file: !12252, line: 887, type: !113)
!12744 = !DILocalVariable(name: "pllvco", scope: !12741, file: !12252, line: 887, type: !113)
!12745 = !DILocalVariable(name: "pllp", scope: !12741, file: !12252, line: 887, type: !113)
!12746 = !DILocalVariable(name: "sysclockfreq", scope: !12741, file: !12252, line: 888, type: !113)
!12747 = !DILocation(line: 0, scope: !12741)
!12748 = !DILocation(line: 891, column: 16, scope: !12741)
!12749 = !DILocation(line: 891, column: 21, scope: !12741)
!12750 = !DILocation(line: 891, column: 3, scope: !12741)
!12751 = !DILocation(line: 901, column: 7, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12753, file: !12252, line: 899, column: 5)
!12753 = distinct !DILexicalBlock(scope: !12741, file: !12252, line: 892, column: 3)
!12754 = !DILocation(line: 907, column: 19, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12753, file: !12252, line: 904, column: 5)
!12756 = !DILocation(line: 907, column: 27, scope: !12755)
!12757 = !DILocation(line: 908, column: 10, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12755, file: !12252, line: 908, column: 10)
!12759 = !DILocation(line: 908, column: 40, scope: !12758)
!12760 = !DILocation(line: 0, scope: !12758)
!12761 = !DILocation(line: 908, column: 10, scope: !12755)
!12762 = !DILocation(line: 911, column: 53, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12758, file: !12252, line: 909, column: 7)
!12764 = !DILocation(line: 911, column: 130, scope: !12763)
!12765 = !DILocation(line: 912, column: 7, scope: !12763)
!12766 = !DILocation(line: 916, column: 56, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12758, file: !12252, line: 914, column: 7)
!12768 = !DILocation(line: 916, column: 53, scope: !12767)
!12769 = !DILocation(line: 916, column: 132, scope: !12767)
!12770 = !DILocation(line: 916, column: 130, scope: !12767)
!12771 = !DILocation(line: 916, column: 18, scope: !12767)
!12772 = !DILocation(line: 918, column: 23, scope: !12755)
!12773 = !DILocation(line: 918, column: 82, scope: !12755)
!12774 = !DILocation(line: 920, column: 28, scope: !12755)
!12775 = !DILocation(line: 921, column: 7, scope: !12755)
!12776 = !DILocation(line: 0, scope: !12753)
!12777 = !DILocation(line: 929, column: 3, scope: !12741)
!12778 = !DISubprogram(name: "HAL_InitTick", scope: !12611, file: !12611, line: 223, type: !12779, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12779 = !DISubroutineType(types: !12780)
!12780 = !{!12255, !113}
!12781 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12252, file: !12252, line: 775, type: !12782, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !12784)
!12782 = !DISubroutineType(types: !12783)
!12783 = !{null, !113, !113, !113}
!12784 = !{!12785, !12786, !12787, !12788, !12798, !12802}
!12785 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12781, file: !12252, line: 775, type: !113)
!12786 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12781, file: !12252, line: 775, type: !113)
!12787 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12781, file: !12252, line: 775, type: !113)
!12788 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12781, file: !12252, line: 777, type: !12789)
!12789 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12790, line: 62, baseType: !12791)
!12790 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12790, line: 46, size: 160, elements: !12792)
!12792 = !{!12793, !12794, !12795, !12796, !12797}
!12793 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12791, file: !12790, line: 48, baseType: !113, size: 32)
!12794 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12791, file: !12790, line: 51, baseType: !113, size: 32, offset: 32)
!12795 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12791, file: !12790, line: 54, baseType: !113, size: 32, offset: 64)
!12796 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12791, file: !12790, line: 57, baseType: !113, size: 32, offset: 96)
!12797 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12791, file: !12790, line: 60, baseType: !113, size: 32, offset: 128)
!12798 = !DILocalVariable(name: "tmpreg", scope: !12799, file: !12252, line: 787, type: !570)
!12799 = distinct !DILexicalBlock(scope: !12800, file: !12252, line: 787, column: 5)
!12800 = distinct !DILexicalBlock(scope: !12801, file: !12252, line: 783, column: 3)
!12801 = distinct !DILexicalBlock(scope: !12781, file: !12252, line: 782, column: 6)
!12802 = !DILocalVariable(name: "tmpreg", scope: !12803, file: !12252, line: 811, type: !570)
!12803 = distinct !DILexicalBlock(scope: !12804, file: !12252, line: 811, column: 5)
!12804 = distinct !DILexicalBlock(scope: !12801, file: !12252, line: 807, column: 3)
!12805 = !DILocation(line: 0, scope: !12781)
!12806 = !DILocation(line: 777, column: 3, scope: !12781)
!12807 = !DILocation(line: 777, column: 20, scope: !12781)
!12808 = !DILocation(line: 782, column: 15, scope: !12801)
!12809 = !DILocation(line: 782, column: 6, scope: !12781)
!12810 = !DILocation(line: 787, column: 5, scope: !12799)
!12811 = !DILocation(line: 787, column: 5, scope: !12800)
!12812 = !DILocation(line: 790, column: 21, scope: !12800)
!12813 = !DILocation(line: 790, column: 25, scope: !12800)
!12814 = !DILocation(line: 791, column: 21, scope: !12800)
!12815 = !DILocation(line: 791, column: 26, scope: !12800)
!12816 = !DILocation(line: 792, column: 21, scope: !12800)
!12817 = !DILocation(line: 792, column: 27, scope: !12800)
!12818 = !DILocation(line: 793, column: 21, scope: !12800)
!12819 = !DILocation(line: 793, column: 26, scope: !12800)
!12820 = !DILocation(line: 794, column: 21, scope: !12800)
!12821 = !DILocation(line: 794, column: 31, scope: !12800)
!12822 = !DILocation(line: 795, column: 5, scope: !12800)
!12823 = !DILocation(line: 798, column: 5, scope: !12800)
!12824 = !DILocation(line: 804, column: 3, scope: !12800)
!12825 = !DILocation(line: 811, column: 5, scope: !12803)
!12826 = !DILocation(line: 811, column: 5, scope: !12804)
!12827 = !DILocation(line: 814, column: 21, scope: !12804)
!12828 = !DILocation(line: 814, column: 25, scope: !12804)
!12829 = !DILocation(line: 815, column: 21, scope: !12804)
!12830 = !DILocation(line: 815, column: 26, scope: !12804)
!12831 = !DILocation(line: 816, column: 21, scope: !12804)
!12832 = !DILocation(line: 816, column: 27, scope: !12804)
!12833 = !DILocation(line: 817, column: 21, scope: !12804)
!12834 = !DILocation(line: 817, column: 26, scope: !12804)
!12835 = !DILocation(line: 818, column: 21, scope: !12804)
!12836 = !DILocation(line: 818, column: 31, scope: !12804)
!12837 = !DILocation(line: 819, column: 5, scope: !12804)
!12838 = !DILocation(line: 822, column: 5, scope: !12804)
!12839 = !DILocation(line: 0, scope: !12801)
!12840 = !DILocation(line: 830, column: 1, scope: !12781)
!12841 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12790, file: !12790, line: 224, type: !12842, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12842 = !DISubroutineType(types: !12843)
!12843 = !{null, !3271, !12844}
!12844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12789, size: 32)
!12845 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12252, file: !12252, line: 841, type: !3389, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!12846 = !DILocation(line: 843, column: 38, scope: !12845)
!12847 = !DILocation(line: 844, column: 1, scope: !12845)
!12848 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12252, file: !12252, line: 850, type: !3389, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!12849 = !DILocation(line: 852, column: 38, scope: !12848)
!12850 = !DILocation(line: 853, column: 1, scope: !12848)
!12851 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12252, file: !12252, line: 941, type: !7110, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!12852 = !DILocation(line: 943, column: 10, scope: !12851)
!12853 = !DILocation(line: 943, column: 3, scope: !12851)
!12854 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12252, file: !12252, line: 952, type: !7110, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!12855 = !DILocation(line: 955, column: 11, scope: !12854)
!12856 = !DILocation(line: 955, column: 56, scope: !12854)
!12857 = !DILocation(line: 955, column: 78, scope: !12854)
!12858 = !DILocation(line: 955, column: 36, scope: !12854)
!12859 = !DILocation(line: 955, column: 33, scope: !12854)
!12860 = !DILocation(line: 955, column: 3, scope: !12854)
!12861 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12252, file: !12252, line: 964, type: !7110, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!12862 = !DILocation(line: 967, column: 11, scope: !12861)
!12863 = !DILocation(line: 967, column: 55, scope: !12861)
!12864 = !DILocation(line: 967, column: 77, scope: !12861)
!12865 = !DILocation(line: 967, column: 35, scope: !12861)
!12866 = !DILocation(line: 967, column: 32, scope: !12861)
!12867 = !DILocation(line: 967, column: 3, scope: !12861)
!12868 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12252, file: !12252, line: 977, type: !12869, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !12871)
!12869 = !DISubroutineType(types: !12870)
!12870 = !{null, !12260}
!12871 = !{!12872}
!12872 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12868, file: !12252, line: 977, type: !12260)
!12873 = !DILocation(line: 0, scope: !12868)
!12874 = !DILocation(line: 980, column: 22, scope: !12868)
!12875 = !DILocation(line: 980, column: 37, scope: !12868)
!12876 = !DILocation(line: 983, column: 12, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12868, file: !12252, line: 983, column: 6)
!12878 = !DILocation(line: 983, column: 15, scope: !12877)
!12879 = !DILocation(line: 983, column: 31, scope: !12877)
!12880 = !DILocation(line: 983, column: 6, scope: !12868)
!12881 = !DILocation(line: 985, column: 24, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12877, file: !12252, line: 984, column: 3)
!12883 = !DILocation(line: 985, column: 33, scope: !12882)
!12884 = !DILocation(line: 986, column: 3, scope: !12882)
!12885 = !DILocation(line: 987, column: 17, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12877, file: !12252, line: 987, column: 11)
!12887 = !DILocation(line: 987, column: 20, scope: !12886)
!12888 = !DILocation(line: 987, column: 35, scope: !12886)
!12889 = !DILocation(line: 0, scope: !12886)
!12890 = !DILocation(line: 987, column: 11, scope: !12877)
!12891 = !DILocation(line: 989, column: 33, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12886, file: !12252, line: 988, column: 3)
!12893 = !DILocation(line: 990, column: 3, scope: !12892)
!12894 = !DILocation(line: 993, column: 33, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12886, file: !12252, line: 992, column: 3)
!12896 = !DILocation(line: 997, column: 12, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12868, file: !12252, line: 997, column: 6)
!12898 = !DILocation(line: 997, column: 15, scope: !12897)
!12899 = !DILocation(line: 1003, column: 24, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12897, file: !12252, line: 1002, column: 3)
!12901 = !DILocation(line: 1003, column: 33, scope: !12900)
!12902 = !DILocation(line: 1006, column: 61, scope: !12868)
!12903 = !DILocation(line: 1006, column: 81, scope: !12868)
!12904 = !DILocation(line: 1006, column: 22, scope: !12868)
!12905 = !DILocation(line: 1006, column: 42, scope: !12868)
!12906 = !DILocation(line: 1009, column: 12, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12868, file: !12252, line: 1009, column: 6)
!12908 = !DILocation(line: 1009, column: 17, scope: !12907)
!12909 = !DILocation(line: 1009, column: 35, scope: !12907)
!12910 = !DILocation(line: 1009, column: 6, scope: !12868)
!12911 = !DILocation(line: 1011, column: 24, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12907, file: !12252, line: 1010, column: 3)
!12913 = !DILocation(line: 1011, column: 33, scope: !12912)
!12914 = !DILocation(line: 1012, column: 3, scope: !12912)
!12915 = !DILocation(line: 1013, column: 17, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12907, file: !12252, line: 1013, column: 11)
!12917 = !DILocation(line: 1013, column: 22, scope: !12916)
!12918 = !DILocation(line: 1013, column: 39, scope: !12916)
!12919 = !DILocation(line: 0, scope: !12916)
!12920 = !DILocation(line: 1013, column: 11, scope: !12907)
!12921 = !DILocation(line: 1015, column: 33, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12916, file: !12252, line: 1014, column: 3)
!12923 = !DILocation(line: 1016, column: 3, scope: !12922)
!12924 = !DILocation(line: 1019, column: 33, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12916, file: !12252, line: 1018, column: 3)
!12926 = !DILocation(line: 1023, column: 12, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12868, file: !12252, line: 1023, column: 6)
!12928 = !DILocation(line: 1023, column: 16, scope: !12927)
!12929 = !DILocation(line: 1029, column: 24, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12927, file: !12252, line: 1028, column: 3)
!12931 = !DILocation(line: 1029, column: 33, scope: !12930)
!12932 = !DILocation(line: 1033, column: 12, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12868, file: !12252, line: 1033, column: 6)
!12934 = !DILocation(line: 1033, column: 15, scope: !12933)
!12935 = !DILocation(line: 1033, column: 30, scope: !12933)
!12936 = !DILocation(line: 1033, column: 6, scope: !12868)
!12937 = !DILocation(line: 1039, column: 28, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12933, file: !12252, line: 1038, column: 3)
!12939 = !DILocation(line: 1039, column: 37, scope: !12938)
!12940 = !DILocation(line: 1041, column: 54, scope: !12868)
!12941 = !DILocation(line: 1041, column: 62, scope: !12868)
!12942 = !DILocation(line: 1041, column: 26, scope: !12868)
!12943 = !DILocation(line: 1041, column: 36, scope: !12868)
!12944 = !DILocation(line: 1042, column: 49, scope: !12868)
!12945 = !DILocation(line: 1042, column: 57, scope: !12868)
!12946 = !DILocation(line: 1042, column: 26, scope: !12868)
!12947 = !DILocation(line: 1042, column: 31, scope: !12868)
!12948 = !DILocation(line: 1043, column: 50, scope: !12868)
!12949 = !DILocation(line: 1043, column: 78, scope: !12868)
!12950 = !DILocation(line: 1043, column: 26, scope: !12868)
!12951 = !DILocation(line: 1043, column: 31, scope: !12868)
!12952 = !DILocation(line: 1044, column: 52, scope: !12868)
!12953 = !DILocation(line: 1044, column: 102, scope: !12868)
!12954 = !DILocation(line: 1044, column: 109, scope: !12868)
!12955 = !DILocation(line: 1044, column: 26, scope: !12868)
!12956 = !DILocation(line: 1044, column: 31, scope: !12868)
!12957 = !DILocation(line: 1045, column: 50, scope: !12868)
!12958 = !DILocation(line: 1045, column: 78, scope: !12868)
!12959 = !DILocation(line: 1045, column: 26, scope: !12868)
!12960 = !DILocation(line: 1045, column: 31, scope: !12868)
!12961 = !DILocation(line: 1046, column: 1, scope: !12868)
!12962 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12252, file: !12252, line: 1056, type: !12963, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !12965)
!12963 = !DISubroutineType(types: !12964)
!12964 = !{null, !12615, !1211}
!12965 = !{!12966, !12967}
!12966 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12962, file: !12252, line: 1056, type: !12615)
!12967 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12962, file: !12252, line: 1056, type: !1211)
!12968 = !DILocation(line: 0, scope: !12962)
!12969 = !DILocation(line: 1059, column: 22, scope: !12962)
!12970 = !DILocation(line: 1059, column: 32, scope: !12962)
!12971 = !DILocation(line: 1062, column: 53, scope: !12962)
!12972 = !DILocation(line: 1062, column: 58, scope: !12962)
!12973 = !DILocation(line: 1062, column: 22, scope: !12962)
!12974 = !DILocation(line: 1062, column: 35, scope: !12962)
!12975 = !DILocation(line: 1065, column: 54, scope: !12962)
!12976 = !DILocation(line: 1065, column: 59, scope: !12962)
!12977 = !DILocation(line: 1065, column: 22, scope: !12962)
!12978 = !DILocation(line: 1065, column: 36, scope: !12962)
!12979 = !DILocation(line: 1068, column: 55, scope: !12962)
!12980 = !DILocation(line: 1068, column: 60, scope: !12962)
!12981 = !DILocation(line: 1068, column: 22, scope: !12962)
!12982 = !DILocation(line: 1068, column: 37, scope: !12962)
!12983 = !DILocation(line: 1071, column: 56, scope: !12962)
!12984 = !DILocation(line: 1071, column: 79, scope: !12962)
!12985 = !DILocation(line: 1071, column: 22, scope: !12962)
!12986 = !DILocation(line: 1071, column: 37, scope: !12962)
!12987 = !DILocation(line: 1074, column: 34, scope: !12962)
!12988 = !DILocation(line: 1074, column: 38, scope: !12962)
!12989 = !DILocation(line: 1074, column: 14, scope: !12962)
!12990 = !DILocation(line: 1075, column: 1, scope: !12962)
!12991 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12252, file: !12252, line: 1082, type: !3389, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!12992 = !DILocation(line: 1085, column: 6, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12991, file: !12252, line: 1085, column: 6)
!12994 = !DILocation(line: 1085, column: 6, scope: !12991)
!12995 = !DILocation(line: 1088, column: 5, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12993, file: !12252, line: 1086, column: 3)
!12997 = !DILocation(line: 1091, column: 5, scope: !12996)
!12998 = !DILocation(line: 1092, column: 3, scope: !12996)
!12999 = !DILocation(line: 1093, column: 1, scope: !12991)
!13000 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12252, file: !12252, line: 1099, type: !3389, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !437)
!13001 = !DILocation(line: 1104, column: 1, scope: !13000)
!13002 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13003, file: !13003, line: 257, type: !7120, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13004)
!13003 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13004 = !{!13005}
!13005 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13002, file: !13003, line: 257, type: !113)
!13006 = !DILocation(line: 0, scope: !13002)
!13007 = !DILocation(line: 260, column: 3, scope: !13002)
!13008 = !DILocation(line: 261, column: 1, scope: !13002)
!13009 = distinct !DISubprogram(name: "LL_InitTick", scope: !13010, file: !13010, line: 260, type: !10647, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13011)
!13010 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13011 = !{!13012, !13013}
!13012 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13009, file: !13010, line: 260, type: !113)
!13013 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13009, file: !13010, line: 260, type: !113)
!13014 = !DILocation(line: 0, scope: !13009)
!13015 = !DILocation(line: 263, column: 46, scope: !13009)
!13016 = !DILocation(line: 263, column: 55, scope: !13009)
!13017 = !DILocation(line: 263, column: 18, scope: !13009)
!13018 = !DILocation(line: 264, column: 18, scope: !13009)
!13019 = !DILocation(line: 265, column: 18, scope: !13009)
!13020 = !DILocation(line: 267, column: 1, scope: !13009)
!13021 = distinct !DISubprogram(name: "LL_mDelay", scope: !13003, file: !13003, line: 273, type: !7120, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13022)
!13022 = !{!13023, !13024}
!13023 = !DILocalVariable(name: "Delay", arg: 1, scope: !13021, file: !13003, line: 273, type: !113)
!13024 = !DILocalVariable(name: "tmp", scope: !13021, file: !13003, line: 275, type: !570)
!13025 = !DILocation(line: 0, scope: !13021)
!13026 = !DILocation(line: 275, column: 3, scope: !13021)
!13027 = !DILocation(line: 275, column: 18, scope: !13021)
!13028 = !DILocation(line: 275, column: 33, scope: !13021)
!13029 = !DILocation(line: 277, column: 10, scope: !13021)
!13030 = !DILocation(line: 280, column: 12, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13021, file: !13003, line: 280, column: 6)
!13032 = !DILocation(line: 285, column: 3, scope: !13021)
!13033 = !DILocation(line: 287, column: 18, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13035, file: !13003, line: 287, column: 8)
!13035 = distinct !DILexicalBlock(scope: !13021, file: !13003, line: 286, column: 3)
!13036 = !DILocation(line: 292, column: 1, scope: !13021)
!13037 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13003, file: !13003, line: 323, type: !7120, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13038)
!13038 = !{!13039}
!13039 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13037, file: !13003, line: 323, type: !113)
!13040 = !DILocation(line: 0, scope: !13037)
!13041 = !DILocation(line: 326, column: 19, scope: !13037)
!13042 = !DILocation(line: 327, column: 1, scope: !13037)
!13043 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13003, file: !13003, line: 338, type: !13044, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13047)
!13044 = !DISubroutineType(types: !13045)
!13045 = !{!13046, !113}
!13046 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1155, line: 201, baseType: !1154)
!13047 = !{!13048, !13049, !13050, !13051, !13052}
!13048 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13043, file: !13003, line: 338, type: !113)
!13049 = !DILocalVariable(name: "timeout", scope: !13043, file: !13003, line: 340, type: !113)
!13050 = !DILocalVariable(name: "getlatency", scope: !13043, file: !13003, line: 341, type: !113)
!13051 = !DILocalVariable(name: "latency", scope: !13043, file: !13003, line: 342, type: !113)
!13052 = !DILocalVariable(name: "status", scope: !13043, file: !13003, line: 343, type: !13046)
!13053 = !DILocation(line: 0, scope: !13043)
!13054 = !DILocation(line: 347, column: 21, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13043, file: !13003, line: 347, column: 6)
!13056 = !DILocation(line: 347, column: 6, scope: !13043)
!13057 = !DILocation(line: 353, column: 8, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13059, file: !13003, line: 353, column: 8)
!13059 = distinct !DILexicalBlock(scope: !13055, file: !13003, line: 352, column: 3)
!13060 = !DILocation(line: 353, column: 40, scope: !13058)
!13061 = !DILocation(line: 353, column: 8, scope: !13059)
!13062 = !DILocation(line: 374, column: 55, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13064, file: !13003, line: 374, column: 10)
!13064 = distinct !DILexicalBlock(scope: !13058, file: !13003, line: 354, column: 5)
!13065 = !DILocation(line: 368, column: 26, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13064, file: !13003, line: 368, column: 10)
!13067 = !DILocation(line: 368, column: 55, scope: !13066)
!13068 = !DILocation(line: 380, column: 57, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13070, file: !13003, line: 380, column: 12)
!13070 = distinct !DILexicalBlock(scope: !13063, file: !13003, line: 379, column: 7)
!13071 = !DILocation(line: 387, column: 8, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13059, file: !13003, line: 387, column: 8)
!13073 = !DILocation(line: 387, column: 40, scope: !13072)
!13074 = !DILocation(line: 387, column: 8, scope: !13059)
!13075 = !DILocation(line: 407, column: 26, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13077, file: !13003, line: 407, column: 10)
!13077 = distinct !DILexicalBlock(scope: !13072, file: !13003, line: 388, column: 5)
!13078 = !DILocation(line: 407, column: 55, scope: !13076)
!13079 = !DILocation(line: 413, column: 28, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13081, file: !13003, line: 413, column: 12)
!13081 = distinct !DILexicalBlock(scope: !13076, file: !13003, line: 412, column: 7)
!13082 = !DILocation(line: 413, column: 57, scope: !13080)
!13083 = !DILocation(line: 0, scope: !13059)
!13084 = !DILocation(line: 420, column: 8, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13059, file: !13003, line: 420, column: 8)
!13086 = !DILocation(line: 420, column: 40, scope: !13085)
!13087 = !DILocation(line: 420, column: 8, scope: !13059)
!13088 = !DILocation(line: 429, column: 26, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13090, file: !13003, line: 429, column: 10)
!13090 = distinct !DILexicalBlock(scope: !13085, file: !13003, line: 421, column: 5)
!13091 = !DILocation(line: 429, column: 55, scope: !13089)
!13092 = !DILocation(line: 435, column: 28, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13094, file: !13003, line: 435, column: 12)
!13094 = distinct !DILexicalBlock(scope: !13089, file: !13003, line: 434, column: 7)
!13095 = !DILocation(line: 435, column: 57, scope: !13093)
!13096 = !DILocation(line: 444, column: 5, scope: !13059)
!13097 = !DILocation(line: 448, column: 5, scope: !13059)
!13098 = !DILocation(line: 451, column: 18, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13059, file: !13003, line: 449, column: 5)
!13100 = !DILocation(line: 452, column: 12, scope: !13099)
!13101 = !DILocation(line: 453, column: 26, scope: !13059)
!13102 = !DILocation(line: 453, column: 38, scope: !13059)
!13103 = !DILocation(line: 453, column: 5, scope: !13099)
!13104 = distinct !{!13104, !13097, !13105}
!13105 = !DILocation(line: 453, column: 54, scope: !13059)
!13106 = !DILocation(line: 0, scope: !13055)
!13107 = !DILocation(line: 464, column: 3, scope: !13043)
!13108 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13109, file: !13109, line: 519, type: !7110, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13109 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13110 = !DILocation(line: 521, column: 21, scope: !13108)
!13111 = !DILocation(line: 521, column: 3, scope: !13108)
!13112 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6732, file: !6732, line: 1543, type: !7120, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13113)
!13113 = !{!13114}
!13114 = !DILocalVariable(name: "Latency", arg: 1, scope: !13112, file: !6732, line: 1543, type: !113)
!13115 = !DILocation(line: 0, scope: !13112)
!13116 = !DILocation(line: 1545, column: 3, scope: !13112)
!13117 = !DILocation(line: 1546, column: 1, scope: !13112)
!13118 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6732, file: !6732, line: 1569, type: !7110, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13119 = !DILocation(line: 1571, column: 21, scope: !13118)
!13120 = !DILocation(line: 1571, column: 3, scope: !13118)
!13121 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13003, file: !13003, line: 483, type: !13122, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13138)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{!13046, !13124, !13131}
!13124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13125, size: 32)
!13125 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13010, line: 114, baseType: !13126)
!13126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13010, line: 94, size: 96, elements: !13127)
!13127 = !{!13128, !13129, !13130}
!13128 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13126, file: !13010, line: 96, baseType: !113, size: 32)
!13129 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13126, file: !13010, line: 102, baseType: !113, size: 32, offset: 32)
!13130 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13126, file: !13010, line: 109, baseType: !113, size: 32, offset: 64)
!13131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13132, size: 32)
!13132 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13010, line: 139, baseType: !13133)
!13133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13010, line: 119, size: 96, elements: !13134)
!13134 = !{!13135, !13136, !13137}
!13135 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13133, file: !13010, line: 121, baseType: !113, size: 32)
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13133, file: !13010, line: 127, baseType: !113, size: 32, offset: 32)
!13137 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13133, file: !13010, line: 133, baseType: !113, size: 32, offset: 64)
!13138 = !{!13139, !13140, !13141, !13142}
!13139 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13121, file: !13003, line: 483, type: !13124)
!13140 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13121, file: !13003, line: 484, type: !13131)
!13141 = !DILocalVariable(name: "status", scope: !13121, file: !13003, line: 486, type: !13046)
!13142 = !DILocalVariable(name: "pllfreq", scope: !13121, file: !13003, line: 487, type: !113)
!13143 = !DILocation(line: 0, scope: !13121)
!13144 = !DILocation(line: 490, column: 6, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13121, file: !13003, line: 490, column: 6)
!13146 = !DILocation(line: 490, column: 25, scope: !13145)
!13147 = !DILocation(line: 490, column: 6, scope: !13121)
!13148 = !DILocation(line: 493, column: 15, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13145, file: !13003, line: 491, column: 3)
!13150 = !DILocation(line: 496, column: 8, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13149, file: !13003, line: 496, column: 8)
!13152 = !DILocation(line: 496, column: 29, scope: !13151)
!13153 = !DILocation(line: 496, column: 8, scope: !13149)
!13154 = !DILocation(line: 498, column: 7, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13151, file: !13003, line: 497, column: 5)
!13156 = !DILocation(line: 499, column: 7, scope: !13155)
!13157 = !DILocation(line: 499, column: 14, scope: !13155)
!13158 = !DILocation(line: 499, column: 35, scope: !13155)
!13159 = distinct !{!13159, !13156, !13160}
!13160 = !DILocation(line: 502, column: 7, scope: !13155)
!13161 = !DILocation(line: 506, column: 76, scope: !13149)
!13162 = !DILocation(line: 506, column: 103, scope: !13149)
!13163 = !DILocation(line: 507, column: 54, scope: !13149)
!13164 = !DILocation(line: 506, column: 5, scope: !13149)
!13165 = !DILocation(line: 510, column: 14, scope: !13149)
!13166 = !DILocation(line: 511, column: 3, scope: !13149)
!13167 = !DILocation(line: 0, scope: !13145)
!13168 = !DILocation(line: 518, column: 3, scope: !13121)
!13169 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13003, file: !13003, line: 642, type: !13170, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13172)
!13170 = !DISubroutineType(types: !13171)
!13171 = !{!13046}
!13172 = !{!13173}
!13173 = !DILocalVariable(name: "status", scope: !13169, file: !13003, line: 644, type: !13046)
!13174 = !DILocation(line: 0, scope: !13169)
!13175 = !DILocation(line: 647, column: 6, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13169, file: !13003, line: 647, column: 6)
!13177 = !DILocation(line: 647, column: 27, scope: !13176)
!13178 = !DILocation(line: 663, column: 6, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13169, file: !13003, line: 663, column: 6)
!13180 = !DILocation(line: 663, column: 30, scope: !13179)
!13181 = !DILocation(line: 663, column: 6, scope: !13169)
!13182 = !DILocation(line: 669, column: 3, scope: !13169)
!13183 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13003, file: !13003, line: 611, type: !13184, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13186)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{!113, !113, !13124}
!13186 = !{!13187, !13188, !13189}
!13187 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13183, file: !13003, line: 611, type: !113)
!13188 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13183, file: !13003, line: 611, type: !13124)
!13189 = !DILocalVariable(name: "pllfreq", scope: !13183, file: !13003, line: 613, type: !113)
!13190 = !DILocation(line: 0, scope: !13183)
!13191 = !DILocation(line: 622, column: 56, scope: !13183)
!13192 = !DILocation(line: 622, column: 61, scope: !13183)
!13193 = !DILocation(line: 622, column: 32, scope: !13183)
!13194 = !DILocation(line: 626, column: 45, scope: !13183)
!13195 = !DILocation(line: 626, column: 50, scope: !13183)
!13196 = !DILocation(line: 626, column: 21, scope: !13183)
!13197 = !DILocation(line: 630, column: 47, scope: !13183)
!13198 = !DILocation(line: 630, column: 82, scope: !13183)
!13199 = !DILocation(line: 630, column: 21, scope: !13183)
!13200 = !DILocation(line: 633, column: 3, scope: !13183)
!13201 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9997, file: !9997, line: 3007, type: !7110, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13202 = !DILocation(line: 3009, column: 11, scope: !13201)
!13203 = !DILocation(line: 3009, column: 44, scope: !13201)
!13204 = !DILocation(line: 3009, column: 3, scope: !13201)
!13205 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9997, file: !9997, line: 2987, type: !3389, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13206 = !DILocation(line: 2989, column: 3, scope: !13205)
!13207 = !DILocation(line: 2990, column: 1, scope: !13205)
!13208 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9997, file: !9997, line: 4304, type: !10121, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13209)
!13209 = !{!13210, !13211, !13212, !13213}
!13210 = !DILocalVariable(name: "Source", arg: 1, scope: !13208, file: !9997, line: 4304, type: !113)
!13211 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13208, file: !9997, line: 4304, type: !113)
!13212 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13208, file: !9997, line: 4304, type: !113)
!13213 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13208, file: !9997, line: 4304, type: !113)
!13214 = !DILocation(line: 0, scope: !13208)
!13215 = !DILocation(line: 4306, column: 3, scope: !13208)
!13216 = !DILocation(line: 4308, column: 3, scope: !13208)
!13217 = !DILocation(line: 4312, column: 1, scope: !13208)
!13218 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13003, file: !13003, line: 681, type: !13219, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13221)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{!13046, !113, !13131}
!13221 = !{!13222, !13223, !13224, !13225}
!13222 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13218, file: !13003, line: 681, type: !113)
!13223 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13218, file: !13003, line: 681, type: !13131)
!13224 = !DILocalVariable(name: "status", scope: !13218, file: !13003, line: 683, type: !13046)
!13225 = !DILocalVariable(name: "hclk_frequency", scope: !13218, file: !13003, line: 684, type: !113)
!13226 = !DILocation(line: 0, scope: !13218)
!13227 = !DILocation(line: 691, column: 20, scope: !13218)
!13228 = !DILocation(line: 694, column: 6, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13218, file: !13003, line: 694, column: 6)
!13230 = !DILocation(line: 694, column: 22, scope: !13229)
!13231 = !DILocation(line: 694, column: 6, scope: !13218)
!13232 = !DILocation(line: 697, column: 14, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13229, file: !13003, line: 695, column: 3)
!13234 = !DILocation(line: 701, column: 13, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13218, file: !13003, line: 701, column: 6)
!13236 = !DILocation(line: 701, column: 6, scope: !13218)
!13237 = !DILocation(line: 704, column: 5, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13235, file: !13003, line: 702, column: 3)
!13239 = !DILocation(line: 705, column: 5, scope: !13238)
!13240 = !DILocation(line: 705, column: 12, scope: !13238)
!13241 = !DILocation(line: 705, column: 33, scope: !13238)
!13242 = distinct !{!13242, !13239, !13243}
!13243 = !DILocation(line: 708, column: 5, scope: !13238)
!13244 = !DILocation(line: 711, column: 49, scope: !13238)
!13245 = !DILocation(line: 711, column: 5, scope: !13238)
!13246 = !DILocation(line: 712, column: 5, scope: !13238)
!13247 = !DILocation(line: 713, column: 5, scope: !13238)
!13248 = !DILocation(line: 713, column: 12, scope: !13238)
!13249 = !DILocation(line: 713, column: 37, scope: !13238)
!13250 = distinct !{!13250, !13247, !13251}
!13251 = !DILocation(line: 716, column: 5, scope: !13238)
!13252 = !DILocation(line: 719, column: 50, scope: !13238)
!13253 = !DILocation(line: 719, column: 5, scope: !13238)
!13254 = !DILocation(line: 720, column: 50, scope: !13238)
!13255 = !DILocation(line: 720, column: 5, scope: !13238)
!13256 = !DILocation(line: 721, column: 3, scope: !13238)
!13257 = !DILocation(line: 724, column: 6, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13218, file: !13003, line: 724, column: 6)
!13259 = !DILocation(line: 724, column: 22, scope: !13258)
!13260 = !DILocation(line: 724, column: 6, scope: !13218)
!13261 = !DILocation(line: 727, column: 14, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13258, file: !13003, line: 725, column: 3)
!13263 = !DILocation(line: 728, column: 3, scope: !13262)
!13264 = !DILocation(line: 731, column: 13, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13218, file: !13003, line: 731, column: 6)
!13266 = !DILocation(line: 731, column: 6, scope: !13218)
!13267 = !DILocation(line: 733, column: 5, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13265, file: !13003, line: 732, column: 3)
!13269 = !DILocation(line: 734, column: 3, scope: !13268)
!13270 = !DILocation(line: 736, column: 3, scope: !13218)
!13271 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9997, file: !9997, line: 4184, type: !3389, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13272 = !DILocation(line: 4186, column: 3, scope: !13271)
!13273 = !DILocation(line: 4187, column: 1, scope: !13271)
!13274 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9997, file: !9997, line: 4205, type: !7110, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13275 = !DILocation(line: 4207, column: 11, scope: !13274)
!13276 = !DILocation(line: 4207, column: 44, scope: !13274)
!13277 = !DILocation(line: 4207, column: 3, scope: !13274)
!13278 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9997, file: !9997, line: 3224, type: !7120, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13279)
!13279 = !{!13280}
!13280 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13278, file: !9997, line: 3224, type: !113)
!13281 = !DILocation(line: 0, scope: !13278)
!13282 = !DILocation(line: 3226, column: 3, scope: !13278)
!13283 = !DILocation(line: 3227, column: 1, scope: !13278)
!13284 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9997, file: !9997, line: 3188, type: !7120, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13285)
!13285 = !{!13286}
!13286 = !DILocalVariable(name: "Source", arg: 1, scope: !13284, file: !9997, line: 3188, type: !113)
!13287 = !DILocation(line: 0, scope: !13284)
!13288 = !DILocation(line: 3190, column: 3, scope: !13284)
!13289 = !DILocation(line: 3191, column: 1, scope: !13284)
!13290 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9997, file: !9997, line: 3204, type: !7110, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13291 = !DILocation(line: 3206, column: 21, scope: !13290)
!13292 = !DILocation(line: 3206, column: 3, scope: !13290)
!13293 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9997, file: !9997, line: 3240, type: !7120, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13294)
!13294 = !{!13295}
!13295 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13293, file: !9997, line: 3240, type: !113)
!13296 = !DILocation(line: 0, scope: !13293)
!13297 = !DILocation(line: 3242, column: 3, scope: !13293)
!13298 = !DILocation(line: 3243, column: 1, scope: !13293)
!13299 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9997, file: !9997, line: 3256, type: !7120, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13300)
!13300 = !{!13301}
!13301 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13299, file: !9997, line: 3256, type: !113)
!13302 = !DILocation(line: 0, scope: !13299)
!13303 = !DILocation(line: 3258, column: 3, scope: !13299)
!13304 = !DILocation(line: 3259, column: 1, scope: !13299)
!13305 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9997, file: !9997, line: 5153, type: !7110, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13306 = !DILocation(line: 5155, column: 11, scope: !13305)
!13307 = !DILocation(line: 5155, column: 47, scope: !13305)
!13308 = !DILocation(line: 5155, column: 3, scope: !13305)
!13309 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13003, file: !13003, line: 540, type: !13310, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !13312)
!13310 = !DISubroutineType(types: !13311)
!13311 = !{!13046, !113, !113, !13124, !13131}
!13312 = !{!13313, !13314, !13315, !13316, !13317, !13318}
!13313 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13309, file: !13003, line: 540, type: !113)
!13314 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13309, file: !13003, line: 540, type: !113)
!13315 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13309, file: !13003, line: 541, type: !13124)
!13316 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13309, file: !13003, line: 541, type: !13131)
!13317 = !DILocalVariable(name: "status", scope: !13309, file: !13003, line: 543, type: !13046)
!13318 = !DILocalVariable(name: "pllfreq", scope: !13309, file: !13003, line: 544, type: !113)
!13319 = !DILocation(line: 0, scope: !13309)
!13320 = !DILocation(line: 551, column: 6, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13309, file: !13003, line: 551, column: 6)
!13322 = !DILocation(line: 551, column: 25, scope: !13321)
!13323 = !DILocation(line: 551, column: 6, scope: !13309)
!13324 = !DILocation(line: 554, column: 15, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13321, file: !13003, line: 552, column: 3)
!13326 = !DILocation(line: 557, column: 8, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13325, file: !13003, line: 557, column: 8)
!13328 = !DILocation(line: 557, column: 29, scope: !13327)
!13329 = !DILocation(line: 557, column: 8, scope: !13325)
!13330 = !DILocation(line: 560, column: 20, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13332, file: !13003, line: 560, column: 10)
!13332 = distinct !DILexicalBlock(scope: !13327, file: !13003, line: 558, column: 5)
!13333 = !DILocation(line: 560, column: 10, scope: !13332)
!13334 = !DILocation(line: 562, column: 9, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13331, file: !13003, line: 561, column: 7)
!13336 = !DILocation(line: 563, column: 7, scope: !13335)
!13337 = !DILocation(line: 566, column: 9, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13331, file: !13003, line: 565, column: 7)
!13339 = !DILocation(line: 570, column: 7, scope: !13332)
!13340 = !DILocation(line: 571, column: 7, scope: !13332)
!13341 = !DILocation(line: 571, column: 14, scope: !13332)
!13342 = !DILocation(line: 571, column: 35, scope: !13332)
!13343 = distinct !{!13343, !13340, !13344}
!13344 = !DILocation(line: 574, column: 7, scope: !13332)
!13345 = !DILocation(line: 578, column: 76, scope: !13325)
!13346 = !DILocation(line: 578, column: 103, scope: !13325)
!13347 = !DILocation(line: 579, column: 54, scope: !13325)
!13348 = !DILocation(line: 578, column: 5, scope: !13325)
!13349 = !DILocation(line: 582, column: 14, scope: !13325)
!13350 = !DILocation(line: 583, column: 3, scope: !13325)
!13351 = !DILocation(line: 0, scope: !13321)
!13352 = !DILocation(line: 590, column: 3, scope: !13309)
!13353 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9997, file: !9997, line: 2969, type: !7110, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13354 = !DILocation(line: 2971, column: 11, scope: !13353)
!13355 = !DILocation(line: 2971, column: 44, scope: !13353)
!13356 = !DILocation(line: 2971, column: 3, scope: !13353)
!13357 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9997, file: !9997, line: 2929, type: !3389, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13358 = !DILocation(line: 2931, column: 3, scope: !13357)
!13359 = !DILocation(line: 2932, column: 1, scope: !13357)
!13360 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9997, file: !9997, line: 2939, type: !3389, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13361 = !DILocation(line: 2941, column: 3, scope: !13360)
!13362 = !DILocation(line: 2942, column: 1, scope: !13360)
!13363 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9997, file: !9997, line: 2949, type: !3389, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3284, retainedNodes: !437)
!13364 = !DILocation(line: 2951, column: 3, scope: !13363)
!13365 = !DILocation(line: 2952, column: 1, scope: !13363)
!13366 = distinct !DISubprogram(name: "z_device_state_init", scope: !13367, file: !13367, line: 23, type: !3389, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13368)
!13367 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13368 = !{!13369}
!13369 = !DILocalVariable(name: "dev", scope: !13366, file: !13367, line: 25, type: !13370)
!13370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13371, size: 32)
!13371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13372)
!13372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !13373)
!13373 = !{!13374, !13375, !13376, !13377, !13383, !13384}
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13372, file: !411, line: 380, baseType: !105, size: 32)
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13372, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13372, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13372, file: !411, line: 386, baseType: !13378, size: 32, offset: 96)
!13378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13379, size: 32)
!13379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !13380)
!13380 = !{!13381, !13382}
!13381 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13379, file: !411, line: 359, baseType: !164, size: 8)
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13379, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13383 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13372, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13372, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!13385 = !DILocation(line: 0, scope: !13366)
!13386 = !DILocation(line: 31, column: 1, scope: !13366)
!13387 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13367, file: !13367, line: 33, type: !13388, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13390)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{!13370, !105}
!13390 = !{!13391, !13392}
!13391 = !DILocalVariable(name: "name", arg: 1, scope: !13387, file: !13367, line: 33, type: !105)
!13392 = !DILocalVariable(name: "dev", scope: !13387, file: !13367, line: 35, type: !13370)
!13393 = !DILocation(line: 0, scope: !13387)
!13394 = !DILocation(line: 40, column: 12, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13387, file: !13367, line: 40, column: 6)
!13396 = !DILocation(line: 40, column: 21, scope: !13395)
!13397 = !DILocation(line: 40, column: 25, scope: !13395)
!13398 = !DILocation(line: 40, column: 33, scope: !13395)
!13399 = !DILocation(line: 40, column: 6, scope: !13387)
!13400 = !DILocation(line: 55, column: 2, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13387, file: !13367, line: 55, column: 2)
!13402 = !DILocation(line: 50, column: 7, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !13367, line: 50, column: 7)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !13367, line: 49, column: 57)
!13405 = distinct !DILexicalBlock(scope: !13406, file: !13367, line: 49, column: 2)
!13406 = distinct !DILexicalBlock(scope: !13387, file: !13367, line: 49, column: 2)
!13407 = !DILocation(line: 50, column: 30, scope: !13403)
!13408 = !DILocation(line: 50, column: 39, scope: !13403)
!13409 = !DILocation(line: 50, column: 44, scope: !13403)
!13410 = !DILocation(line: 50, column: 7, scope: !13404)
!13411 = !DILocation(line: 49, column: 53, scope: !13405)
!13412 = !DILocation(line: 49, column: 33, scope: !13405)
!13413 = !DILocation(line: 49, column: 2, scope: !13406)
!13414 = distinct !{!13414, !13413, !13415}
!13415 = !DILocation(line: 53, column: 2, scope: !13406)
!13416 = !DILocation(line: 56, column: 7, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !13367, line: 56, column: 7)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !13367, line: 55, column: 57)
!13419 = distinct !DILexicalBlock(scope: !13401, file: !13367, line: 55, column: 2)
!13420 = !DILocation(line: 56, column: 30, scope: !13417)
!13421 = !DILocation(line: 56, column: 52, scope: !13417)
!13422 = !DILocation(line: 56, column: 34, scope: !13417)
!13423 = !DILocation(line: 56, column: 58, scope: !13417)
!13424 = !DILocation(line: 56, column: 7, scope: !13418)
!13425 = !DILocation(line: 55, column: 53, scope: !13419)
!13426 = !DILocation(line: 55, column: 33, scope: !13419)
!13427 = distinct !{!13427, !13400, !13428}
!13428 = !DILocation(line: 59, column: 2, scope: !13401)
!13429 = !DILocation(line: 62, column: 1, scope: !13387)
!13430 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13367, file: !13367, line: 93, type: !13431, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13433)
!13431 = !DISubroutineType(types: !13432)
!13432 = !{!422, !13370}
!13433 = !{!13434}
!13434 = !DILocalVariable(name: "dev", arg: 1, scope: !13430, file: !13367, line: 93, type: !13370)
!13435 = !DILocation(line: 0, scope: !13430)
!13436 = !DILocation(line: 99, column: 10, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13430, file: !13367, line: 99, column: 6)
!13438 = !DILocation(line: 99, column: 6, scope: !13430)
!13439 = !DILocation(line: 103, column: 14, scope: !13430)
!13440 = !DILocation(line: 103, column: 21, scope: !13430)
!13441 = !DILocation(line: 103, column: 33, scope: !13430)
!13442 = !DILocation(line: 103, column: 49, scope: !13430)
!13443 = !DILocation(line: 103, column: 58, scope: !13430)
!13444 = !DILocation(line: 104, column: 1, scope: !13430)
!13445 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13367, file: !13367, line: 87, type: !13446, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13449)
!13446 = !DISubroutineType(types: !13447)
!13447 = !{!439, !13448}
!13448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13370, size: 32)
!13449 = !{!13450}
!13450 = !DILocalVariable(name: "devices", arg: 1, scope: !13445, file: !13367, line: 87, type: !13448)
!13451 = !DILocation(line: 0, scope: !13445)
!13452 = !DILocation(line: 89, column: 11, scope: !13445)
!13453 = !DILocation(line: 90, column: 2, scope: !13445)
!13454 = distinct !DISubprogram(name: "device_required_foreach", scope: !13367, file: !13367, line: 125, type: !13455, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13461)
!13455 = !DISubroutineType(types: !13456)
!13456 = !{!108, !13370, !13457, !104}
!13457 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !411, line: 471, baseType: !13458)
!13458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13459, size: 32)
!13459 = !DISubroutineType(types: !13460)
!13460 = !{!108, !13370, !104}
!13461 = !{!13462, !13463, !13464, !13465, !13466}
!13462 = !DILocalVariable(name: "dev", arg: 1, scope: !13454, file: !13367, line: 125, type: !13370)
!13463 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13454, file: !13367, line: 126, type: !13457)
!13464 = !DILocalVariable(name: "context", arg: 3, scope: !13454, file: !13367, line: 127, type: !104)
!13465 = !DILocalVariable(name: "handle_count", scope: !13454, file: !13367, line: 129, type: !439)
!13466 = !DILocalVariable(name: "handles", scope: !13454, file: !13367, line: 130, type: !425)
!13467 = !DILocation(line: 0, scope: !13454)
!13468 = !DILocation(line: 129, column: 2, scope: !13454)
!13469 = !DILocation(line: 129, column: 9, scope: !13454)
!13470 = !DILocation(line: 130, column: 35, scope: !13454)
!13471 = !DILocation(line: 132, column: 33, scope: !13454)
!13472 = !DILocation(line: 132, column: 9, scope: !13454)
!13473 = !DILocation(line: 133, column: 1, scope: !13454)
!13474 = !DILocation(line: 132, column: 2, scope: !13454)
!13475 = distinct !DISubprogram(name: "device_required_handles_get", scope: !411, file: !411, line: 493, type: !13476, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13478)
!13476 = !DISubroutineType(types: !13477)
!13477 = !{!425, !13370, !2841}
!13478 = !{!13479, !13480, !13481, !13482}
!13479 = !DILocalVariable(name: "dev", arg: 1, scope: !13475, file: !411, line: 493, type: !13370)
!13480 = !DILocalVariable(name: "count", arg: 2, scope: !13475, file: !411, line: 493, type: !2841)
!13481 = !DILocalVariable(name: "rv", scope: !13475, file: !411, line: 495, type: !425)
!13482 = !DILocalVariable(name: "i", scope: !13483, file: !411, line: 498, type: !439)
!13483 = distinct !DILexicalBlock(scope: !13484, file: !411, line: 497, column: 18)
!13484 = distinct !DILexicalBlock(scope: !13475, file: !411, line: 497, column: 6)
!13485 = !DILocation(line: 0, scope: !13475)
!13486 = !DILocation(line: 495, column: 35, scope: !13475)
!13487 = !DILocation(line: 497, column: 9, scope: !13484)
!13488 = !DILocation(line: 497, column: 6, scope: !13475)
!13489 = !DILocation(line: 0, scope: !13483)
!13490 = !DILocation(line: 500, column: 11, scope: !13483)
!13491 = !DILocation(line: 500, column: 40, scope: !13483)
!13492 = !DILocation(line: 502, column: 4, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13483, file: !411, line: 501, column: 40)
!13494 = distinct !{!13494, !13495, !13496}
!13495 = !DILocation(line: 500, column: 3, scope: !13483)
!13496 = !DILocation(line: 503, column: 3, scope: !13483)
!13497 = !DILocation(line: 504, column: 10, scope: !13483)
!13498 = !DILocation(line: 505, column: 2, scope: !13483)
!13499 = !DILocation(line: 507, column: 2, scope: !13475)
!13500 = distinct !DISubprogram(name: "device_visitor", scope: !13367, file: !13367, line: 106, type: !13501, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{!108, !425, !439, !13457, !104}
!13503 = !{!13504, !13505, !13506, !13507, !13508, !13510, !13513, !13514}
!13504 = !DILocalVariable(name: "handles", arg: 1, scope: !13500, file: !13367, line: 106, type: !425)
!13505 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13500, file: !13367, line: 107, type: !439)
!13506 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13500, file: !13367, line: 108, type: !13457)
!13507 = !DILocalVariable(name: "context", arg: 4, scope: !13500, file: !13367, line: 109, type: !104)
!13508 = !DILocalVariable(name: "i", scope: !13509, file: !13367, line: 112, type: !439)
!13509 = distinct !DILexicalBlock(scope: !13500, file: !13367, line: 112, column: 2)
!13510 = !DILocalVariable(name: "dh", scope: !13511, file: !13367, line: 113, type: !427)
!13511 = distinct !DILexicalBlock(scope: !13512, file: !13367, line: 112, column: 44)
!13512 = distinct !DILexicalBlock(scope: !13509, file: !13367, line: 112, column: 2)
!13513 = !DILocalVariable(name: "rdev", scope: !13511, file: !13367, line: 114, type: !13370)
!13514 = !DILocalVariable(name: "rc", scope: !13511, file: !13367, line: 115, type: !108)
!13515 = !DILocation(line: 0, scope: !13500)
!13516 = !DILocation(line: 0, scope: !13509)
!13517 = !DILocation(line: 112, column: 23, scope: !13512)
!13518 = !DILocation(line: 112, column: 2, scope: !13509)
!13519 = distinct !{!13519, !13518, !13520}
!13520 = !DILocation(line: 120, column: 2, scope: !13509)
!13521 = !DILocation(line: 113, column: 24, scope: !13511)
!13522 = !DILocation(line: 0, scope: !13511)
!13523 = !DILocation(line: 114, column: 31, scope: !13511)
!13524 = !DILocation(line: 115, column: 12, scope: !13511)
!13525 = !DILocation(line: 117, column: 10, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13511, file: !13367, line: 117, column: 7)
!13527 = !DILocation(line: 112, column: 39, scope: !13512)
!13528 = !DILocation(line: 123, column: 1, scope: !13500)
!13529 = distinct !DISubprogram(name: "device_from_handle", scope: !411, file: !411, line: 439, type: !13530, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13532)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{!13370, !427}
!13532 = !{!13533, !13534, !13535}
!13533 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13529, file: !411, line: 439, type: !427)
!13534 = !DILocalVariable(name: "dev", scope: !13529, file: !411, line: 443, type: !13370)
!13535 = !DILocalVariable(name: "numdev", scope: !13529, file: !411, line: 444, type: !439)
!13536 = !DILocation(line: 0, scope: !13529)
!13537 = !DILocation(line: 446, column: 7, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13529, file: !411, line: 446, column: 6)
!13539 = !DILocation(line: 446, column: 18, scope: !13538)
!13540 = !DILocation(line: 446, column: 23, scope: !13538)
!13541 = !DILocation(line: 450, column: 2, scope: !13529)
!13542 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13367, file: !13367, line: 135, type: !13455, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13543)
!13543 = !{!13544, !13545, !13546, !13547, !13548}
!13544 = !DILocalVariable(name: "dev", arg: 1, scope: !13542, file: !13367, line: 135, type: !13370)
!13545 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13542, file: !13367, line: 136, type: !13457)
!13546 = !DILocalVariable(name: "context", arg: 3, scope: !13542, file: !13367, line: 137, type: !104)
!13547 = !DILocalVariable(name: "handle_count", scope: !13542, file: !13367, line: 139, type: !439)
!13548 = !DILocalVariable(name: "handles", scope: !13542, file: !13367, line: 140, type: !425)
!13549 = !DILocation(line: 0, scope: !13542)
!13550 = !DILocation(line: 139, column: 2, scope: !13542)
!13551 = !DILocation(line: 139, column: 9, scope: !13542)
!13552 = !DILocation(line: 140, column: 35, scope: !13542)
!13553 = !DILocation(line: 142, column: 33, scope: !13542)
!13554 = !DILocation(line: 142, column: 9, scope: !13542)
!13555 = !DILocation(line: 143, column: 1, scope: !13542)
!13556 = !DILocation(line: 142, column: 2, scope: !13542)
!13557 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !411, file: !411, line: 573, type: !13476, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !13558)
!13558 = !{!13559, !13560, !13561, !13562, !13563}
!13559 = !DILocalVariable(name: "dev", arg: 1, scope: !13557, file: !411, line: 573, type: !13370)
!13560 = !DILocalVariable(name: "count", arg: 2, scope: !13557, file: !411, line: 573, type: !2841)
!13561 = !DILocalVariable(name: "rv", scope: !13557, file: !411, line: 575, type: !425)
!13562 = !DILocalVariable(name: "region", scope: !13557, file: !411, line: 576, type: !439)
!13563 = !DILocalVariable(name: "i", scope: !13557, file: !411, line: 577, type: !439)
!13564 = !DILocation(line: 0, scope: !13557)
!13565 = !DILocation(line: 575, column: 35, scope: !13557)
!13566 = !DILocation(line: 579, column: 9, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13557, file: !411, line: 579, column: 6)
!13568 = !DILocation(line: 579, column: 6, scope: !13557)
!13569 = !DILocation(line: 582, column: 8, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !411, line: 582, column: 8)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !411, line: 581, column: 23)
!13572 = distinct !DILexicalBlock(scope: !13567, file: !411, line: 579, column: 18)
!13573 = !DILocation(line: 582, column: 12, scope: !13570)
!13574 = !DILocation(line: 585, column: 6, scope: !13571)
!13575 = !DILocation(line: 0, scope: !13572)
!13576 = !DILocation(line: 581, column: 17, scope: !13572)
!13577 = !DILocation(line: 581, column: 3, scope: !13572)
!13578 = !DILocation(line: 588, column: 10, scope: !13572)
!13579 = !DILocation(line: 588, column: 16, scope: !13572)
!13580 = !DILocation(line: 589, column: 4, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13572, file: !411, line: 588, column: 39)
!13582 = !DILocation(line: 588, column: 3, scope: !13572)
!13583 = distinct !{!13583, !13582, !13584}
!13584 = !DILocation(line: 590, column: 3, scope: !13572)
!13585 = !DILocation(line: 591, column: 10, scope: !13572)
!13586 = !DILocation(line: 592, column: 2, scope: !13572)
!13587 = !DILocation(line: 575, column: 25, scope: !13557)
!13588 = !DILocation(line: 594, column: 2, scope: !13557)
!13589 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2135, file: !2135, line: 49, type: !13590, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2132, retainedNodes: !437)
!13590 = !DISubroutineType(types: !13591)
!13591 = !{!538}
!13592 = !DILocation(line: 51, column: 10, scope: !13589)
!13593 = !DILocation(line: 51, column: 20, scope: !13589)
!13594 = !DILocation(line: 51, column: 2, scope: !13589)
!13595 = distinct !DISubprogram(name: "coredump", scope: !3356, file: !3356, line: 209, type: !13596, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13742)
!13596 = !DISubroutineType(types: !13597)
!13597 = !{null, !32, !13598, !13642}
!13598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13599, size: 32)
!13599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13600)
!13600 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2969, line: 141, baseType: !13601)
!13601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2969, line: 97, size: 256, elements: !13602)
!13602 = !{!13603}
!13603 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13601, file: !2969, line: 107, baseType: !13604, size: 256)
!13604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2969, line: 98, size: 256, elements: !13605)
!13605 = !{!13606, !13611, !13616, !13621, !13626, !13631, !13636, !13641}
!13606 = !DIDerivedType(tag: DW_TAG_member, scope: !13604, file: !2969, line: 99, baseType: !13607, size: 32)
!13607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13604, file: !2969, line: 99, size: 32, elements: !13608)
!13608 = !{!13609, !13610}
!13609 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13607, file: !2969, line: 99, baseType: !113, size: 32)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13607, file: !2969, line: 99, baseType: !113, size: 32)
!13611 = !DIDerivedType(tag: DW_TAG_member, scope: !13604, file: !2969, line: 100, baseType: !13612, size: 32, offset: 32)
!13612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13604, file: !2969, line: 100, size: 32, elements: !13613)
!13613 = !{!13614, !13615}
!13614 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13612, file: !2969, line: 100, baseType: !113, size: 32)
!13615 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13612, file: !2969, line: 100, baseType: !113, size: 32)
!13616 = !DIDerivedType(tag: DW_TAG_member, scope: !13604, file: !2969, line: 101, baseType: !13617, size: 32, offset: 64)
!13617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13604, file: !2969, line: 101, size: 32, elements: !13618)
!13618 = !{!13619, !13620}
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13617, file: !2969, line: 101, baseType: !113, size: 32)
!13620 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13617, file: !2969, line: 101, baseType: !113, size: 32)
!13621 = !DIDerivedType(tag: DW_TAG_member, scope: !13604, file: !2969, line: 102, baseType: !13622, size: 32, offset: 96)
!13622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13604, file: !2969, line: 102, size: 32, elements: !13623)
!13623 = !{!13624, !13625}
!13624 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13622, file: !2969, line: 102, baseType: !113, size: 32)
!13625 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13622, file: !2969, line: 102, baseType: !113, size: 32)
!13626 = !DIDerivedType(tag: DW_TAG_member, scope: !13604, file: !2969, line: 103, baseType: !13627, size: 32, offset: 128)
!13627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13604, file: !2969, line: 103, size: 32, elements: !13628)
!13628 = !{!13629, !13630}
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13627, file: !2969, line: 103, baseType: !113, size: 32)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13627, file: !2969, line: 103, baseType: !113, size: 32)
!13631 = !DIDerivedType(tag: DW_TAG_member, scope: !13604, file: !2969, line: 104, baseType: !13632, size: 32, offset: 160)
!13632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13604, file: !2969, line: 104, size: 32, elements: !13633)
!13633 = !{!13634, !13635}
!13634 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13632, file: !2969, line: 104, baseType: !113, size: 32)
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13632, file: !2969, line: 104, baseType: !113, size: 32)
!13636 = !DIDerivedType(tag: DW_TAG_member, scope: !13604, file: !2969, line: 105, baseType: !13637, size: 32, offset: 192)
!13637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13604, file: !2969, line: 105, size: 32, elements: !13638)
!13638 = !{!13639, !13640}
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13637, file: !2969, line: 105, baseType: !113, size: 32)
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13637, file: !2969, line: 105, baseType: !113, size: 32)
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13604, file: !2969, line: 106, baseType: !113, size: 32, offset: 224)
!13642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13643, size: 32)
!13643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !13644)
!13644 = !{!13645, !13703, !13715, !13716, !13717, !13718, !13724, !13737}
!13645 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13643, file: !645, line: 247, baseType: !13646, size: 384)
!13646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !13647)
!13647 = !{!13648, !13672, !13679, !13680, !13681, !13690, !13691, !13692}
!13648 = !DIDerivedType(tag: DW_TAG_member, scope: !13646, file: !645, line: 60, baseType: !13649, size: 64)
!13649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13646, file: !645, line: 60, size: 64, elements: !13650)
!13650 = !{!13651, !13666}
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13649, file: !645, line: 61, baseType: !13652, size: 64)
!13652 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !13653)
!13653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !13654)
!13654 = !{!13655, !13661}
!13655 = !DIDerivedType(tag: DW_TAG_member, scope: !13653, file: !367, line: 38, baseType: !13656, size: 32)
!13656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13653, file: !367, line: 38, size: 32, elements: !13657)
!13657 = !{!13658, !13660}
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13656, file: !367, line: 39, baseType: !13659, size: 32)
!13659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13653, size: 32)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13656, file: !367, line: 40, baseType: !13659, size: 32)
!13661 = !DIDerivedType(tag: DW_TAG_member, scope: !13653, file: !367, line: 42, baseType: !13662, size: 32, offset: 32)
!13662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13653, file: !367, line: 42, size: 32, elements: !13663)
!13663 = !{!13664, !13665}
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13662, file: !367, line: 43, baseType: !13659, size: 32)
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13662, file: !367, line: 44, baseType: !13659, size: 32)
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13649, file: !645, line: 62, baseType: !13667, size: 64)
!13667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !13668)
!13668 = !{!13669}
!13669 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13667, file: !670, line: 50, baseType: !13670, size: 64)
!13670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13671, size: 64, elements: !675)
!13671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13667, size: 32)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13646, file: !645, line: 68, baseType: !13673, size: 32, offset: 64)
!13673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13674, size: 32)
!13674 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !13675)
!13675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !13676)
!13676 = !{!13677}
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13675, file: !363, line: 232, baseType: !13678, size: 64)
!13678 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !13653)
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13646, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13646, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!13681 = !DIDerivedType(tag: DW_TAG_member, scope: !13646, file: !645, line: 90, baseType: !13682, size: 16, offset: 112)
!13682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13646, file: !645, line: 90, size: 16, elements: !13683)
!13683 = !{!13684, !13689}
!13684 = !DIDerivedType(tag: DW_TAG_member, scope: !13682, file: !645, line: 91, baseType: !13685, size: 16)
!13685 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13682, file: !645, line: 91, size: 16, elements: !13686)
!13686 = !{!13687, !13688}
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13685, file: !645, line: 96, baseType: !693, size: 8)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13685, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13682, file: !645, line: 100, baseType: !168, size: 16)
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13646, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13646, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13646, file: !645, line: 131, baseType: !13693, size: 192, offset: 192)
!13693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !13694)
!13694 = !{!13695, !13696, !13702}
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13693, file: !363, line: 245, baseType: !13652, size: 64)
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13693, file: !363, line: 246, baseType: !13697, size: 32, offset: 64)
!13697 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !13698)
!13698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13699, size: 32)
!13699 = !DISubroutineType(types: !13700)
!13700 = !{null, !13701}
!13701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13693, size: 32)
!13702 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13693, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13643, file: !645, line: 250, baseType: !13704, size: 288, offset: 384)
!13704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !13705)
!13705 = !{!13706, !13707, !13708, !13709, !13710, !13711, !13712, !13713, !13714}
!13706 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13704, file: !712, line: 26, baseType: !113, size: 32)
!13707 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13704, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!13708 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13704, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!13709 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13704, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!13710 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13704, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13704, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!13712 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13704, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13704, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13704, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!13715 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13643, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!13716 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13643, file: !645, line: 256, baseType: !13674, size: 64, offset: 704)
!13717 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13643, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!13718 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13643, file: !645, line: 300, baseType: !13719, size: 96, offset: 800)
!13719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !13720)
!13720 = !{!13721, !13722, !13723}
!13721 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13719, file: !645, line: 153, baseType: !22, size: 32)
!13722 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13719, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!13723 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13719, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!13724 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13643, file: !645, line: 325, baseType: !13725, size: 32, offset: 896)
!13725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13726, size: 32)
!13726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !13727)
!13727 = !{!13728, !13734, !13735}
!13728 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13726, file: !359, line: 5074, baseType: !13729, size: 96)
!13729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !13730)
!13730 = !{!13731, !13732, !13733}
!13731 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13729, file: !738, line: 57, baseType: !741, size: 32)
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13729, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!13733 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13729, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!13734 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13726, file: !359, line: 5075, baseType: !13674, size: 64, offset: 96)
!13735 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13726, file: !359, line: 5076, baseType: !13736, offset: 160)
!13736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13643, file: !645, line: 343, baseType: !13738, size: 64, offset: 928)
!13738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !13739)
!13739 = !{!13740, !13741}
!13740 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13738, file: !712, line: 63, baseType: !113, size: 32)
!13741 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13738, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!13742 = !{!13743, !13744, !13745}
!13743 = !DILocalVariable(name: "reason", arg: 1, scope: !13595, file: !3356, line: 209, type: !32)
!13744 = !DILocalVariable(name: "esf", arg: 2, scope: !13595, file: !3356, line: 209, type: !13598)
!13745 = !DILocalVariable(name: "thread", arg: 3, scope: !13595, file: !3356, line: 210, type: !13642)
!13746 = !DILocation(line: 0, scope: !13595)
!13747 = !DILocation(line: 212, column: 1, scope: !13595)
!13748 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3356, file: !3356, line: 214, type: !13749, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13751)
!13749 = !DISubroutineType(types: !13750)
!13750 = !{null, !22, !22}
!13751 = !{!13752, !13753}
!13752 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13748, file: !3356, line: 214, type: !22)
!13753 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13748, file: !3356, line: 214, type: !22)
!13754 = !DILocation(line: 0, scope: !13748)
!13755 = !DILocation(line: 216, column: 1, scope: !13748)
!13756 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3356, file: !3356, line: 218, type: !13757, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13759)
!13757 = !DISubroutineType(types: !13758)
!13758 = !{null, !209, !439}
!13759 = !{!13760, !13761}
!13760 = !DILocalVariable(name: "buf", arg: 1, scope: !13756, file: !3356, line: 218, type: !209)
!13761 = !DILocalVariable(name: "buflen", arg: 2, scope: !13756, file: !3356, line: 218, type: !439)
!13762 = !DILocation(line: 0, scope: !13756)
!13763 = !DILocation(line: 220, column: 1, scope: !13756)
!13764 = distinct !DISubprogram(name: "coredump_query", scope: !3356, file: !3356, line: 222, type: !13765, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13767)
!13765 = !DISubroutineType(types: !13766)
!13766 = !{!108, !3355, !104}
!13767 = !{!13768, !13769}
!13768 = !DILocalVariable(name: "query_id", arg: 1, scope: !13764, file: !3356, line: 222, type: !3355)
!13769 = !DILocalVariable(name: "arg", arg: 2, scope: !13764, file: !3356, line: 222, type: !104)
!13770 = !DILocation(line: 0, scope: !13764)
!13771 = !DILocation(line: 224, column: 2, scope: !13764)
!13772 = distinct !DISubprogram(name: "coredump_cmd", scope: !3356, file: !3356, line: 227, type: !13773, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13775)
!13773 = !DISubroutineType(types: !13774)
!13774 = !{!108, !3362, !104}
!13775 = !{!13776, !13777}
!13776 = !DILocalVariable(name: "query_id", arg: 1, scope: !13772, file: !3356, line: 227, type: !3362)
!13777 = !DILocalVariable(name: "arg", arg: 2, scope: !13772, file: !3356, line: 227, type: !104)
!13778 = !DILocation(line: 0, scope: !13772)
!13779 = !DILocation(line: 229, column: 2, scope: !13772)
!13780 = distinct !DISubprogram(name: "arch_system_halt", scope: !13781, file: !13781, line: 23, type: !4076, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13782)
!13781 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13782 = !{!13783}
!13783 = !DILocalVariable(name: "reason", arg: 1, scope: !13780, file: !13781, line: 23, type: !32)
!13784 = !DILocation(line: 0, scope: !13780)
!13785 = !DILocation(line: 55, column: 2, scope: !13786, inlinedAt: !13790)
!13786 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13787)
!13787 = !{!13788, !13789}
!13788 = !DILocalVariable(name: "key", scope: !13786, file: !4063, line: 44, type: !32)
!13789 = !DILocalVariable(name: "tmp", scope: !13786, file: !4063, line: 53, type: !32)
!13790 = distinct !DILocation(line: 31, column: 8, scope: !13780)
!13791 = !{i64 1967227}
!13792 = !DILocation(line: 0, scope: !13786, inlinedAt: !13790)
!13793 = !DILocation(line: 32, column: 2, scope: !13780)
!13794 = !DILocation(line: 32, column: 2, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13796, file: !13781, line: 32, column: 2)
!13796 = distinct !DILexicalBlock(scope: !13780, file: !13781, line: 32, column: 2)
!13797 = distinct !{!13797, !13798, !13799}
!13798 = !DILocation(line: 32, column: 2, scope: !13796)
!13799 = !DILocation(line: 34, column: 2, scope: !13796)
!13800 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13781, file: !13781, line: 39, type: !13801, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13803)
!13801 = !DISubroutineType(types: !13802)
!13802 = !{null, !32, !13598}
!13803 = !{!13804, !13805}
!13804 = !DILocalVariable(name: "reason", arg: 1, scope: !13800, file: !13781, line: 39, type: !32)
!13805 = !DILocalVariable(name: "esf", arg: 2, scope: !13800, file: !13781, line: 40, type: !13598)
!13806 = !DILocation(line: 0, scope: !13800)
!13807 = !DILocation(line: 45, column: 2, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13809, file: !13781, line: 45, column: 2)
!13809 = distinct !DILexicalBlock(scope: !13810, file: !13781, line: 45, column: 2)
!13810 = distinct !DILexicalBlock(scope: !13811, file: !13781, line: 45, column: 2)
!13811 = distinct !DILexicalBlock(scope: !13800, file: !13781, line: 45, column: 2)
!13812 = !DILocation(line: 46, column: 2, scope: !13800)
!13813 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13781, file: !13781, line: 81, type: !4076, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13814)
!13814 = !{!13815}
!13815 = !DILocalVariable(name: "reason", arg: 1, scope: !13813, file: !13781, line: 81, type: !32)
!13816 = !DILocation(line: 0, scope: !13813)
!13817 = !DILocation(line: 83, column: 2, scope: !13813)
!13818 = distinct !DISubprogram(name: "z_fatal_error", scope: !13781, file: !13781, line: 96, type: !13801, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13819)
!13819 = !{!13820, !13821, !13822, !13823}
!13820 = !DILocalVariable(name: "reason", arg: 1, scope: !13818, file: !13781, line: 96, type: !32)
!13821 = !DILocalVariable(name: "esf", arg: 2, scope: !13818, file: !13781, line: 96, type: !13598)
!13822 = !DILocalVariable(name: "key", scope: !13818, file: !13781, line: 102, type: !32)
!13823 = !DILocalVariable(name: "thread", scope: !13818, file: !13781, line: 103, type: !13642)
!13824 = !DILocation(line: 0, scope: !13818)
!13825 = !DILocation(line: 55, column: 2, scope: !13786, inlinedAt: !13826)
!13826 = distinct !DILocation(line: 102, column: 21, scope: !13818)
!13827 = !DILocation(line: 0, scope: !13786, inlinedAt: !13826)
!13828 = !DILocation(line: 104, column: 4, scope: !13818)
!13829 = !DILocation(line: 109, column: 2, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13831, file: !13781, line: 109, column: 2)
!13831 = distinct !DILexicalBlock(scope: !13832, file: !13781, line: 109, column: 2)
!13832 = distinct !DILexicalBlock(scope: !13833, file: !13781, line: 109, column: 2)
!13833 = distinct !DILexicalBlock(scope: !13818, file: !13781, line: 109, column: 2)
!13834 = !DILocation(line: 119, column: 11, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13818, file: !13781, line: 119, column: 6)
!13836 = !DILocation(line: 119, column: 20, scope: !13835)
!13837 = !DILocalVariable(name: "esf", arg: 1, scope: !13838, file: !8047, line: 71, type: !13598)
!13838 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8047, file: !8047, line: 71, type: !13839, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13841)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{!422, !13598}
!13841 = !{!13837}
!13842 = !DILocation(line: 0, scope: !13838, inlinedAt: !13843)
!13843 = distinct !DILocation(line: 119, column: 23, scope: !13835)
!13844 = !DILocation(line: 73, column: 21, scope: !13838, inlinedAt: !13843)
!13845 = !DILocation(line: 73, column: 26, scope: !13838, inlinedAt: !13843)
!13846 = !DILocation(line: 73, column: 9, scope: !13838, inlinedAt: !13843)
!13847 = !DILocation(line: 119, column: 6, scope: !13818)
!13848 = !DILocation(line: 120, column: 3, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13850, file: !13781, line: 120, column: 3)
!13850 = distinct !DILexicalBlock(scope: !13851, file: !13781, line: 120, column: 3)
!13851 = distinct !DILexicalBlock(scope: !13852, file: !13781, line: 120, column: 3)
!13852 = distinct !DILexicalBlock(scope: !13853, file: !13781, line: 120, column: 3)
!13853 = distinct !DILexicalBlock(scope: !13835, file: !13781, line: 119, column: 57)
!13854 = !DILocation(line: 121, column: 2, scope: !13853)
!13855 = !DILocation(line: 124, column: 2, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13857, file: !13781, line: 124, column: 2)
!13857 = distinct !DILexicalBlock(scope: !13858, file: !13781, line: 124, column: 2)
!13858 = distinct !DILexicalBlock(scope: !13859, file: !13781, line: 124, column: 2)
!13859 = distinct !DILexicalBlock(scope: !13818, file: !13781, line: 124, column: 2)
!13860 = !DILocation(line: 131, column: 2, scope: !13818)
!13861 = !DILocation(line: 0, scope: !13838, inlinedAt: !13862)
!13862 = distinct !DILocation(line: 151, column: 24, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13864, file: !13781, line: 151, column: 7)
!13864 = distinct !DILexicalBlock(scope: !13865, file: !13781, line: 146, column: 32)
!13865 = distinct !DILexicalBlock(scope: !13818, file: !13781, line: 146, column: 6)
!13866 = !DILocation(line: 151, column: 7, scope: !13864)
!13867 = !DILocation(line: 151, column: 21, scope: !13863)
!13868 = !DILocalVariable(name: "key", arg: 1, scope: !13869, file: !4063, line: 84, type: !32)
!13869 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13870)
!13870 = !{!13868}
!13871 = !DILocation(line: 0, scope: !13869, inlinedAt: !13872)
!13872 = distinct !DILocation(line: 186, column: 2, scope: !13818)
!13873 = !DILocation(line: 95, column: 2, scope: !13869, inlinedAt: !13872)
!13874 = !{i64 1968044}
!13875 = !DILocation(line: 189, column: 3, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !13781, line: 188, column: 41)
!13877 = distinct !DILexicalBlock(scope: !13818, file: !13781, line: 188, column: 6)
!13878 = !DILocation(line: 191, column: 1, scope: !13818)
!13879 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !13880, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !437)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{!13882}
!13882 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !13642)
!13883 = !DILocation(line: 535, column: 9, scope: !13879)
!13884 = !DILocation(line: 535, column: 2, scope: !13879)
!13885 = distinct !DISubprogram(name: "reason_to_str", scope: !13781, file: !13781, line: 62, type: !13886, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13888)
!13886 = !DISubroutineType(types: !13887)
!13887 = !{!105, !32}
!13888 = !{!13889}
!13889 = !DILocalVariable(name: "reason", arg: 1, scope: !13885, file: !13781, line: 62, type: !32)
!13890 = !DILocation(line: 0, scope: !13885)
!13891 = !DILocation(line: 64, column: 2, scope: !13885)
!13892 = !DILocation(line: 0, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13885, file: !13781, line: 64, column: 18)
!13894 = !DILocation(line: 78, column: 1, scope: !13885)
!13895 = distinct !DISubprogram(name: "thread_name_get", scope: !13781, file: !13781, line: 51, type: !13896, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13898)
!13896 = !DISubroutineType(types: !13897)
!13897 = !{!105, !13642}
!13898 = !{!13899, !13900}
!13899 = !DILocalVariable(name: "thread", arg: 1, scope: !13895, file: !13781, line: 51, type: !13642)
!13900 = !DILocalVariable(name: "thread_name", scope: !13895, file: !13781, line: 53, type: !105)
!13901 = !DILocation(line: 0, scope: !13895)
!13902 = !DILocation(line: 53, column: 36, scope: !13895)
!13903 = !DILocation(line: 53, column: 28, scope: !13895)
!13904 = !DILocation(line: 53, column: 47, scope: !13895)
!13905 = !DILocation(line: 55, column: 19, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13895, file: !13781, line: 55, column: 6)
!13907 = !DILocation(line: 55, column: 28, scope: !13906)
!13908 = !DILocation(line: 55, column: 32, scope: !13906)
!13909 = !DILocation(line: 55, column: 47, scope: !13906)
!13910 = !DILocation(line: 55, column: 6, scope: !13895)
!13911 = !DILocation(line: 57, column: 2, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13906, file: !13781, line: 55, column: 57)
!13913 = !DILocation(line: 59, column: 2, scope: !13895)
!13914 = distinct !DISubprogram(name: "k_thread_abort", scope: !3785, file: !3785, line: 188, type: !13915, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !13917)
!13915 = !DISubroutineType(types: !13916)
!13916 = !{null, !13882}
!13917 = !{!13918}
!13918 = !DILocalVariable(name: "thread", arg: 1, scope: !13914, file: !3785, line: 188, type: !13882)
!13919 = !DILocation(line: 0, scope: !13914)
!13920 = !DILocation(line: 197, column: 2, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13914, file: !3785, line: 197, column: 2)
!13922 = !{i64 2154082267}
!13923 = !DILocation(line: 198, column: 2, scope: !13914)
!13924 = !DILocation(line: 199, column: 1, scope: !13914)
!13925 = distinct !DISubprogram(name: "z_current_get", scope: !3785, file: !3785, line: 173, type: !13880, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3352, retainedNodes: !437)
!13926 = !DILocation(line: 180, column: 2, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13925, file: !3785, line: 180, column: 2)
!13928 = !{i64 2154082199}
!13929 = !DILocation(line: 181, column: 9, scope: !13925)
!13930 = !DILocation(line: 181, column: 2, scope: !13925)
!13931 = distinct !DISubprogram(name: "z_early_memset", scope: !2143, file: !2143, line: 108, type: !13932, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !13934)
!13932 = !DISubroutineType(types: !13933)
!13933 = !{null, !104, !108, !439}
!13934 = !{!13935, !13936, !13937}
!13935 = !DILocalVariable(name: "dst", arg: 1, scope: !13931, file: !2143, line: 108, type: !104)
!13936 = !DILocalVariable(name: "c", arg: 2, scope: !13931, file: !2143, line: 108, type: !108)
!13937 = !DILocalVariable(name: "n", arg: 3, scope: !13931, file: !2143, line: 108, type: !439)
!13938 = !DILocation(line: 0, scope: !13931)
!13939 = !DILocation(line: 110, column: 9, scope: !13931)
!13940 = !DILocation(line: 111, column: 1, scope: !13931)
!13941 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2143, file: !2143, line: 121, type: !13942, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !13944)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{null, !104, !13, !439}
!13944 = !{!13945, !13946, !13947}
!13945 = !DILocalVariable(name: "dst", arg: 1, scope: !13941, file: !2143, line: 121, type: !104)
!13946 = !DILocalVariable(name: "src", arg: 2, scope: !13941, file: !2143, line: 121, type: !13)
!13947 = !DILocalVariable(name: "n", arg: 3, scope: !13941, file: !2143, line: 121, type: !439)
!13948 = !DILocation(line: 0, scope: !13941)
!13949 = !DILocation(line: 123, column: 9, scope: !13941)
!13950 = !DILocation(line: 124, column: 1, scope: !13941)
!13951 = distinct !DISubprogram(name: "z_bss_zero", scope: !2143, file: !2143, line: 132, type: !3389, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !437)
!13952 = !DILocation(line: 143, column: 2, scope: !13951)
!13953 = !DILocation(line: 168, column: 1, scope: !13951)
!13954 = distinct !DISubprogram(name: "z_init_cpu", scope: !2143, file: !2143, line: 372, type: !9609, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !13955)
!13955 = !{!13956}
!13956 = !DILocalVariable(name: "id", arg: 1, scope: !13954, file: !2143, line: 372, type: !108)
!13957 = !DILocation(line: 0, scope: !13954)
!13958 = !DILocation(line: 374, column: 2, scope: !13954)
!13959 = !DILocation(line: 375, column: 34, scope: !13954)
!13960 = !DILocation(line: 375, column: 19, scope: !13954)
!13961 = !DILocation(line: 375, column: 31, scope: !13954)
!13962 = !DILocation(line: 376, column: 24, scope: !13954)
!13963 = !DILocation(line: 376, column: 19, scope: !13954)
!13964 = !DILocation(line: 376, column: 22, scope: !13954)
!13965 = !DILocation(line: 378, column: 26, scope: !13954)
!13966 = !DILocation(line: 378, column: 4, scope: !13954)
!13967 = !DILocation(line: 378, column: 50, scope: !13954)
!13968 = !DILocation(line: 377, column: 19, scope: !13954)
!13969 = !DILocation(line: 377, column: 29, scope: !13954)
!13970 = !DILocation(line: 384, column: 1, scope: !13954)
!13971 = distinct !DISubprogram(name: "init_idle_thread", scope: !2143, file: !2143, line: 343, type: !9609, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !13972)
!13972 = !{!13973, !13974, !13975, !13978}
!13973 = !DILocalVariable(name: "i", arg: 1, scope: !13971, file: !2143, line: 343, type: !108)
!13974 = !DILocalVariable(name: "thread", scope: !13971, file: !2143, line: 345, type: !2235)
!13975 = !DILocalVariable(name: "stack", scope: !13971, file: !2143, line: 346, type: !13976)
!13976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13977, size: 32)
!13977 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5156, line: 44, baseType: !2349)
!13978 = !DILocalVariable(name: "tname", scope: !13971, file: !2143, line: 358, type: !443)
!13979 = !DILocation(line: 0, scope: !13971)
!13980 = !DILocation(line: 345, column: 29, scope: !13971)
!13981 = !DILocation(line: 346, column: 28, scope: !13971)
!13982 = !DILocation(line: 362, column: 37, scope: !13971)
!13983 = !DILocation(line: 362, column: 36, scope: !13971)
!13984 = !DILocation(line: 361, column: 2, scope: !13971)
!13985 = !DILocation(line: 365, column: 2, scope: !13971)
!13986 = !DILocation(line: 370, column: 1, scope: !13971)
!13987 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2350, file: !2350, line: 331, type: !13988, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !13990)
!13988 = !DISubroutineType(types: !13989)
!13989 = !{!443, !13976}
!13990 = !{!13991}
!13991 = !DILocalVariable(name: "sym", arg: 1, scope: !13987, file: !2350, line: 331, type: !13976)
!13992 = !DILocation(line: 0, scope: !13987)
!13993 = !DILocation(line: 333, column: 21, scope: !13987)
!13994 = !DILocation(line: 333, column: 2, scope: !13987)
!13995 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13996, file: !13996, line: 155, type: !13997, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !13999)
!13996 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13997 = !DISubroutineType(types: !13998)
!13998 = !{null, !2235}
!13999 = !{!14000}
!14000 = !DILocalVariable(name: "thread", arg: 1, scope: !13995, file: !13996, line: 155, type: !2235)
!14001 = !DILocation(line: 0, scope: !13995)
!14002 = !DILocation(line: 157, column: 15, scope: !13995)
!14003 = !DILocation(line: 157, column: 28, scope: !13995)
!14004 = !DILocation(line: 158, column: 1, scope: !13995)
!14005 = distinct !DISubprogram(name: "z_cstart", scope: !2143, file: !2143, line: 501, type: !3389, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !14006)
!14006 = !{!14007}
!14007 = !DILocalVariable(name: "dummy_thread", scope: !14005, file: !2143, line: 518, type: !2236)
!14008 = !DILocation(line: 507, column: 2, scope: !14005)
!14009 = !DILocation(line: 43, column: 14, scope: !14010, inlinedAt: !14014)
!14010 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14011, file: !14011, line: 40, type: !3389, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !14012)
!14011 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14012 = !{!14013}
!14013 = !DILocalVariable(name: "msp", scope: !14010, file: !14011, line: 42, type: !113)
!14014 = distinct !DILocation(line: 44, column: 2, scope: !14015, inlinedAt: !14017)
!14015 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14016, file: !14016, line: 42, type: !3389, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !437)
!14016 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14017 = distinct !DILocation(line: 510, column: 2, scope: !14005)
!14018 = !DILocation(line: 43, column: 3, scope: !14010, inlinedAt: !14014)
!14019 = !DILocation(line: 43, column: 60, scope: !14010, inlinedAt: !14014)
!14020 = !DILocation(line: 0, scope: !14010, inlinedAt: !14014)
!14021 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14022, file: !7029, line: 1153, type: !113)
!14022 = distinct !DISubprogram(name: "__set_MSP", scope: !7029, file: !7029, line: 1153, type: !7120, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !14023)
!14023 = !{!14021}
!14024 = !DILocation(line: 0, scope: !14022, inlinedAt: !14025)
!14025 = distinct !DILocation(line: 46, column: 2, scope: !14010, inlinedAt: !14014)
!14026 = !DILocation(line: 1155, column: 3, scope: !14022, inlinedAt: !14025)
!14027 = !{i64 2864471}
!14028 = !DILocation(line: 62, column: 11, scope: !14010, inlinedAt: !14014)
!14029 = !DILocation(line: 102, column: 2, scope: !14030, inlinedAt: !14031)
!14030 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8047, file: !8047, line: 97, type: !3389, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !437)
!14031 = distinct !DILocation(line: 45, column: 2, scope: !14015, inlinedAt: !14017)
!14032 = !DILocation(line: 108, column: 2, scope: !14030, inlinedAt: !14031)
!14033 = !DILocation(line: 112, column: 2, scope: !14030, inlinedAt: !14031)
!14034 = !DILocation(line: 113, column: 2, scope: !14030, inlinedAt: !14031)
!14035 = !DILocation(line: 114, column: 2, scope: !14030, inlinedAt: !14031)
!14036 = !DILocation(line: 116, column: 2, scope: !14030, inlinedAt: !14031)
!14037 = !DILocation(line: 123, column: 13, scope: !14030, inlinedAt: !14031)
!14038 = !DILocation(line: 46, column: 2, scope: !14015, inlinedAt: !14017)
!14039 = !DILocation(line: 47, column: 2, scope: !14015, inlinedAt: !14017)
!14040 = !DILocation(line: 174, column: 12, scope: !14041, inlinedAt: !14042)
!14041 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8047, file: !8047, line: 169, type: !3389, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !437)
!14042 = distinct !DILocation(line: 48, column: 2, scope: !14015, inlinedAt: !14017)
!14043 = !DILocation(line: 179, column: 12, scope: !14041, inlinedAt: !14042)
!14044 = !DILocation(line: 50, column: 2, scope: !14015, inlinedAt: !14017)
!14045 = !DILocation(line: 57, column: 2, scope: !14015, inlinedAt: !14017)
!14046 = !DILocation(line: 518, column: 2, scope: !14005)
!14047 = !DILocation(line: 518, column: 18, scope: !14005)
!14048 = !DILocation(line: 520, column: 2, scope: !14005)
!14049 = !DILocation(line: 523, column: 2, scope: !14005)
!14050 = !DILocation(line: 526, column: 2, scope: !14005)
!14051 = !DILocation(line: 527, column: 2, scope: !14005)
!14052 = !DILocation(line: 543, column: 24, scope: !14005)
!14053 = !DILocation(line: 543, column: 2, scope: !14005)
!14054 = !DILocation(line: 0, scope: !2374)
!14055 = !DILocation(line: 246, column: 15, scope: !2392)
!14056 = !DILocation(line: 246, column: 36, scope: !2391)
!14057 = !DILocation(line: 246, column: 2, scope: !2392)
!14058 = !DILocation(line: 247, column: 37, scope: !2390)
!14059 = !DILocation(line: 0, scope: !2390)
!14060 = !DILocation(line: 248, column: 19, scope: !2390)
!14061 = !DILocation(line: 248, column: 12, scope: !2390)
!14062 = !DILocation(line: 250, column: 11, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !2390, file: !2143, line: 250, column: 7)
!14064 = !DILocation(line: 250, column: 7, scope: !2390)
!14065 = !DILocation(line: 254, column: 11, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14067, file: !2143, line: 254, column: 8)
!14067 = distinct !DILexicalBlock(scope: !14063, file: !2143, line: 250, column: 20)
!14068 = !DILocation(line: 254, column: 8, scope: !14067)
!14069 = !DILocation(line: 255, column: 9, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14066, file: !2143, line: 254, column: 17)
!14071 = !DILocation(line: 258, column: 9, scope: !14070)
!14072 = !DILocation(line: 261, column: 28, scope: !14070)
!14073 = !DILocation(line: 261, column: 10, scope: !14070)
!14074 = !DILocation(line: 261, column: 17, scope: !14070)
!14075 = !DILocation(line: 261, column: 26, scope: !14070)
!14076 = !DILocation(line: 262, column: 4, scope: !14070)
!14077 = !DILocation(line: 263, column: 9, scope: !14067)
!14078 = !DILocation(line: 263, column: 16, scope: !14067)
!14079 = !DILocation(line: 263, column: 28, scope: !14067)
!14080 = !DILocation(line: 264, column: 3, scope: !14067)
!14081 = !DILocation(line: 246, column: 60, scope: !2391)
!14082 = distinct !{!14082, !14057, !14083}
!14083 = !DILocation(line: 265, column: 2, scope: !2392)
!14084 = !DILocation(line: 266, column: 1, scope: !2374)
!14085 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !788, file: !788, line: 1814, type: !7063, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !14086)
!14086 = !{!14087, !14088}
!14087 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14085, file: !788, line: 1814, type: !1148)
!14088 = !DILocalVariable(name: "priority", arg: 2, scope: !14085, file: !788, line: 1814, type: !113)
!14089 = !DILocation(line: 0, scope: !14085)
!14090 = !DILocation(line: 1822, column: 48, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !788, line: 1821, column: 3)
!14092 = distinct !DILexicalBlock(scope: !14085, file: !788, line: 1816, column: 7)
!14093 = !DILocation(line: 1822, column: 32, scope: !14091)
!14094 = !DILocation(line: 1822, column: 40, scope: !14091)
!14095 = !DILocation(line: 1822, column: 5, scope: !14091)
!14096 = !DILocation(line: 1822, column: 46, scope: !14091)
!14097 = !DILocation(line: 1824, column: 1, scope: !14085)
!14098 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14016, file: !14016, line: 32, type: !3389, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14099 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14100, file: !14100, line: 215, type: !13997, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !14101)
!14100 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14101 = !{!14102}
!14102 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14099, file: !14100, line: 215, type: !2235)
!14103 = !DILocation(line: 0, scope: !14099)
!14104 = !DILocation(line: 217, column: 21, scope: !14099)
!14105 = !DILocation(line: 217, column: 34, scope: !14099)
!14106 = !DILocation(line: 221, column: 21, scope: !14099)
!14107 = !DILocation(line: 221, column: 34, scope: !14099)
!14108 = !DILocation(line: 223, column: 27, scope: !14099)
!14109 = !DILocation(line: 223, column: 33, scope: !14099)
!14110 = !DILocation(line: 224, column: 27, scope: !14099)
!14111 = !DILocation(line: 224, column: 32, scope: !14099)
!14112 = !DILocation(line: 232, column: 16, scope: !14099)
!14113 = !DILocation(line: 232, column: 30, scope: !14099)
!14114 = !DILocation(line: 239, column: 24, scope: !14099)
!14115 = !DILocation(line: 240, column: 1, scope: !14099)
!14116 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2143, file: !2143, line: 399, type: !14117, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !14119)
!14117 = !DISubroutineType(types: !14118)
!14118 = !{!443}
!14119 = !{!14120}
!14120 = !DILocalVariable(name: "stack_ptr", scope: !14116, file: !2143, line: 401, type: !443)
!14121 = !DILocation(line: 404, column: 2, scope: !14116)
!14122 = !DILocation(line: 416, column: 24, scope: !14116)
!14123 = !DILocation(line: 418, column: 14, scope: !14116)
!14124 = !DILocation(line: 0, scope: !14116)
!14125 = !DILocation(line: 423, column: 2, scope: !14116)
!14126 = !DILocation(line: 424, column: 2, scope: !14116)
!14127 = !DILocation(line: 426, column: 2, scope: !14116)
!14128 = !DILocation(line: 428, column: 2, scope: !14116)
!14129 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2143, file: !2143, line: 432, type: !14130, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !14132)
!14130 = !DISubroutineType(types: !14131)
!14131 = !{null, !443}
!14132 = !{!14133}
!14133 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14129, file: !2143, line: 432, type: !443)
!14134 = !DILocation(line: 0, scope: !14129)
!14135 = !DILocation(line: 435, column: 2, scope: !14129)
!14136 = !DILocation(line: 445, column: 2, scope: !14129)
!14137 = distinct !DISubprogram(name: "bg_thread_main", scope: !2143, file: !2143, line: 277, type: !5158, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2139, retainedNodes: !14138)
!14138 = !{!14139, !14140, !14141}
!14139 = !DILocalVariable(name: "unused1", arg: 1, scope: !14137, file: !2143, line: 277, type: !104)
!14140 = !DILocalVariable(name: "unused2", arg: 2, scope: !14137, file: !2143, line: 277, type: !104)
!14141 = !DILocalVariable(name: "unused3", arg: 3, scope: !14137, file: !2143, line: 277, type: !104)
!14142 = !DILocation(line: 0, scope: !14137)
!14143 = !DILocation(line: 291, column: 20, scope: !14137)
!14144 = !DILocation(line: 293, column: 2, scope: !14137)
!14145 = !DILocation(line: 297, column: 2, scope: !14137)
!14146 = !DILocation(line: 305, column: 2, scope: !14137)
!14147 = !DILocation(line: 307, column: 2, scope: !14137)
!14148 = !DILocation(line: 330, column: 8, scope: !14137)
!14149 = !DILocation(line: 333, column: 34, scope: !14137)
!14150 = !DILocation(line: 339, column: 1, scope: !14137)
!14151 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2405, file: !2405, line: 45, type: !14152, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14160)
!14152 = !DISubroutineType(types: !14153)
!14153 = !{null, !14154, !104}
!14154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !359, line: 103, baseType: !14155)
!14155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14156, size: 32)
!14156 = !DISubroutineType(types: !14157)
!14157 = !{null, !14158, !104}
!14158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14159, size: 32)
!14159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2410)
!14160 = !{!14161, !14162}
!14161 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14151, file: !2405, line: 45, type: !14154)
!14162 = !DILocalVariable(name: "user_data", arg: 2, scope: !14151, file: !2405, line: 45, type: !104)
!14163 = !DILocation(line: 0, scope: !14151)
!14164 = !DILocation(line: 71, column: 1, scope: !14151)
!14165 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2405, file: !2405, line: 73, type: !14152, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14166)
!14166 = !{!14167, !14168}
!14167 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14165, file: !2405, line: 73, type: !14154)
!14168 = !DILocalVariable(name: "user_data", arg: 2, scope: !14165, file: !2405, line: 73, type: !104)
!14169 = !DILocation(line: 0, scope: !14165)
!14170 = !DILocation(line: 95, column: 1, scope: !14165)
!14171 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2405, file: !2405, line: 97, type: !8048, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !437)
!14172 = !DILocation(line: 1031, column: 3, scope: !14173, inlinedAt: !14176)
!14173 = distinct !DISubprogram(name: "__get_IPSR", scope: !7029, file: !7029, line: 1027, type: !7110, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14174)
!14174 = !{!14175}
!14175 = !DILocalVariable(name: "result", scope: !14173, file: !7029, line: 1029, type: !113)
!14176 = distinct !DILocation(line: 48, column: 10, scope: !14177, inlinedAt: !14178)
!14177 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8047, file: !8047, line: 46, type: !8048, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !437)
!14178 = distinct !DILocation(line: 99, column: 9, scope: !14171)
!14179 = !{i64 2870122}
!14180 = !DILocation(line: 0, scope: !14173, inlinedAt: !14176)
!14181 = !DILocation(line: 48, column: 9, scope: !14177, inlinedAt: !14178)
!14182 = !DILocation(line: 99, column: 2, scope: !14171)
!14183 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2405, file: !2405, line: 106, type: !3389, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !437)
!14184 = !DILocation(line: 108, column: 2, scope: !14183)
!14185 = !DILocation(line: 108, column: 17, scope: !14183)
!14186 = !DILocation(line: 108, column: 30, scope: !14183)
!14187 = !DILocation(line: 109, column: 1, scope: !14183)
!14188 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2405, file: !2405, line: 116, type: !3389, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !437)
!14189 = !DILocation(line: 118, column: 2, scope: !14188)
!14190 = !DILocation(line: 118, column: 17, scope: !14188)
!14191 = !DILocation(line: 118, column: 30, scope: !14188)
!14192 = !DILocation(line: 119, column: 1, scope: !14188)
!14193 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2405, file: !2405, line: 126, type: !8048, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !437)
!14194 = !DILocation(line: 128, column: 10, scope: !14193)
!14195 = !DILocation(line: 128, column: 25, scope: !14193)
!14196 = !DILocation(line: 128, column: 38, scope: !14193)
!14197 = !DILocation(line: 128, column: 53, scope: !14193)
!14198 = !DILocation(line: 128, column: 2, scope: !14193)
!14199 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2405, file: !2405, line: 187, type: !14200, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14202)
!14200 = !DISubroutineType(types: !14201)
!14201 = !{!108, !2409, !105}
!14202 = !{!14203, !14204}
!14203 = !DILocalVariable(name: "thread", arg: 1, scope: !14199, file: !2405, line: 187, type: !2409)
!14204 = !DILocalVariable(name: "value", arg: 2, scope: !14199, file: !2405, line: 187, type: !105)
!14205 = !DILocation(line: 0, scope: !14199)
!14206 = !DILocation(line: 206, column: 2, scope: !14199)
!14207 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2405, file: !2405, line: 238, type: !14208, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14210)
!14208 = !DISubroutineType(types: !14209)
!14209 = !{!105, !2409}
!14210 = !{!14211}
!14211 = !DILocalVariable(name: "thread", arg: 1, scope: !14207, file: !2405, line: 238, type: !2409)
!14212 = !DILocation(line: 0, scope: !14207)
!14213 = !DILocation(line: 244, column: 2, scope: !14207)
!14214 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2405, file: !2405, line: 248, type: !14215, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14217)
!14215 = !DISubroutineType(types: !14216)
!14216 = !{!108, !2408, !443, !439}
!14217 = !{!14218, !14219, !14220}
!14218 = !DILocalVariable(name: "thread", arg: 1, scope: !14214, file: !2405, line: 248, type: !2408)
!14219 = !DILocalVariable(name: "buf", arg: 2, scope: !14214, file: !2405, line: 248, type: !443)
!14220 = !DILocalVariable(name: "size", arg: 3, scope: !14214, file: !2405, line: 248, type: !439)
!14221 = !DILocation(line: 0, scope: !14214)
!14222 = !DILocation(line: 257, column: 2, scope: !14214)
!14223 = !DILocation(line: 0, scope: !2404)
!14224 = !DILocation(line: 281, column: 11, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !2404, file: !2405, line: 281, column: 6)
!14226 = !DILocation(line: 281, column: 20, scope: !14225)
!14227 = !DILocation(line: 275, column: 45, scope: !2404)
!14228 = !DILocation(line: 285, column: 10, scope: !2404)
!14229 = !DILocation(line: 0, scope: !2525)
!14230 = !DILocation(line: 293, column: 39, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !2525, file: !2405, line: 293, column: 2)
!14232 = !DILocation(line: 293, column: 2, scope: !2525)
!14233 = !DILocation(line: 273, column: 14, scope: !2404)
!14234 = !DILocation(line: 309, column: 2, scope: !2404)
!14235 = !DILocation(line: 309, column: 11, scope: !2404)
!14236 = !DILocation(line: 311, column: 2, scope: !2404)
!14237 = !DILocation(line: 293, column: 26, scope: !14231)
!14238 = !DILocation(line: 294, column: 9, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14231, file: !2405, line: 293, column: 54)
!14240 = !DILocation(line: 295, column: 21, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14239, file: !2405, line: 295, column: 7)
!14242 = !DILocation(line: 295, column: 28, scope: !14241)
!14243 = !DILocation(line: 295, column: 7, scope: !14239)
!14244 = !DILocation(line: 299, column: 25, scope: !14239)
!14245 = !DILocation(line: 299, column: 41, scope: !14239)
!14246 = !DILocation(line: 300, column: 7, scope: !14239)
!14247 = !DILocation(line: 300, column: 26, scope: !14239)
!14248 = !DILocation(line: 299, column: 10, scope: !14239)
!14249 = !DILocation(line: 299, column: 7, scope: !14239)
!14250 = !DILocation(line: 302, column: 16, scope: !14239)
!14251 = !DILocation(line: 304, column: 20, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14239, file: !2405, line: 304, column: 7)
!14253 = !DILocation(line: 304, column: 7, scope: !14239)
!14254 = !DILocation(line: 305, column: 26, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14252, file: !2405, line: 304, column: 26)
!14256 = !DILocation(line: 305, column: 42, scope: !14255)
!14257 = !DILocation(line: 305, column: 11, scope: !14255)
!14258 = !DILocation(line: 305, column: 8, scope: !14255)
!14259 = !DILocation(line: 306, column: 3, scope: !14255)
!14260 = !DILocation(line: 293, column: 50, scope: !14231)
!14261 = !DILocation(line: 312, column: 1, scope: !2404)
!14262 = distinct !DISubprogram(name: "copy_bytes", scope: !2405, file: !2405, line: 261, type: !14263, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14265)
!14263 = !DISubroutineType(types: !14264)
!14264 = !{!439, !443, !439, !105, !439}
!14265 = !{!14266, !14267, !14268, !14269, !14270}
!14266 = !DILocalVariable(name: "dest", arg: 1, scope: !14262, file: !2405, line: 261, type: !443)
!14267 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14262, file: !2405, line: 261, type: !439)
!14268 = !DILocalVariable(name: "src", arg: 3, scope: !14262, file: !2405, line: 261, type: !105)
!14269 = !DILocalVariable(name: "src_size", arg: 4, scope: !14262, file: !2405, line: 261, type: !439)
!14270 = !DILocalVariable(name: "bytes_to_copy", scope: !14262, file: !2405, line: 263, type: !439)
!14271 = !DILocation(line: 0, scope: !14262)
!14272 = !DILocation(line: 265, column: 18, scope: !14262)
!14273 = !DILocation(line: 266, column: 2, scope: !14262)
!14274 = !DILocation(line: 268, column: 2, scope: !14262)
!14275 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2405, file: !2405, line: 383, type: !14276, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14278)
!14276 = !DISubroutineType(types: !14277)
!14277 = !{null, !2409}
!14278 = !{!14279}
!14279 = !DILocalVariable(name: "thread", arg: 1, scope: !14275, file: !2405, line: 383, type: !2409)
!14280 = !DILocation(line: 0, scope: !14275)
!14281 = !DILocation(line: 387, column: 2, scope: !14275)
!14282 = !DILocation(line: 388, column: 1, scope: !14275)
!14283 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2405, file: !2405, line: 528, type: !14284, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14291)
!14284 = !DISubroutineType(types: !14285)
!14285 = !{!443, !2409, !14286, !439, !5155, !104, !104, !104, !108, !113, !105}
!14286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14287, size: 32)
!14287 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5156, line: 44, baseType: !14288)
!14288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2350, line: 47, size: 8, elements: !14289)
!14289 = !{!14290}
!14290 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14288, file: !2350, line: 48, baseType: !107, size: 8)
!14291 = !{!14292, !14293, !14294, !14295, !14296, !14297, !14298, !14299, !14300, !14301, !14302}
!14292 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14283, file: !2405, line: 528, type: !2409)
!14293 = !DILocalVariable(name: "stack", arg: 2, scope: !14283, file: !2405, line: 529, type: !14286)
!14294 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14283, file: !2405, line: 529, type: !439)
!14295 = !DILocalVariable(name: "entry", arg: 4, scope: !14283, file: !2405, line: 530, type: !5155)
!14296 = !DILocalVariable(name: "p1", arg: 5, scope: !14283, file: !2405, line: 531, type: !104)
!14297 = !DILocalVariable(name: "p2", arg: 6, scope: !14283, file: !2405, line: 531, type: !104)
!14298 = !DILocalVariable(name: "p3", arg: 7, scope: !14283, file: !2405, line: 531, type: !104)
!14299 = !DILocalVariable(name: "prio", arg: 8, scope: !14283, file: !2405, line: 532, type: !108)
!14300 = !DILocalVariable(name: "options", arg: 9, scope: !14283, file: !2405, line: 532, type: !113)
!14301 = !DILocalVariable(name: "name", arg: 10, scope: !14283, file: !2405, line: 532, type: !105)
!14302 = !DILocalVariable(name: "stack_ptr", scope: !14283, file: !2405, line: 534, type: !443)
!14303 = !DILocation(line: 0, scope: !14283)
!14304 = !DILocation(line: 550, column: 28, scope: !14283)
!14305 = !DILocation(line: 550, column: 2, scope: !14283)
!14306 = !DILocation(line: 553, column: 34, scope: !14283)
!14307 = !DILocation(line: 553, column: 2, scope: !14283)
!14308 = !DILocation(line: 554, column: 14, scope: !14283)
!14309 = !DILocation(line: 564, column: 2, scope: !14283)
!14310 = !DILocation(line: 567, column: 14, scope: !14283)
!14311 = !DILocation(line: 567, column: 24, scope: !14283)
!14312 = !DILocation(line: 612, column: 7, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14283, file: !2405, line: 612, column: 6)
!14314 = !DILocation(line: 612, column: 6, scope: !14283)
!14315 = !DILocation(line: 627, column: 40, scope: !14283)
!14316 = !DILocation(line: 637, column: 2, scope: !14283)
!14317 = !DILocation(line: 613, column: 15, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14313, file: !2405, line: 612, column: 17)
!14319 = !DILocation(line: 613, column: 29, scope: !14318)
!14320 = !DILocation(line: 638, column: 1, scope: !14283)
!14321 = distinct !DISubprogram(name: "z_waitq_init", scope: !14322, file: !14322, line: 47, type: !14323, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14325)
!14322 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14323 = !DISubroutineType(types: !14324)
!14324 = !{null, !2440}
!14325 = !{!14326}
!14326 = !DILocalVariable(name: "w", arg: 1, scope: !14321, file: !14322, line: 47, type: !2440)
!14327 = !DILocation(line: 0, scope: !14321)
!14328 = !DILocation(line: 49, column: 21, scope: !14321)
!14329 = !DILocation(line: 49, column: 2, scope: !14321)
!14330 = !DILocation(line: 50, column: 1, scope: !14321)
!14331 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2405, file: !2405, line: 791, type: !14332, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14335)
!14332 = !DISubroutineType(types: !14333)
!14333 = !{null, !14334, !108, !113, !32}
!14334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!14335 = !{!14336, !14337, !14338, !14339}
!14336 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14331, file: !2405, line: 791, type: !14334)
!14337 = !DILocalVariable(name: "priority", arg: 2, scope: !14331, file: !2405, line: 791, type: !108)
!14338 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14331, file: !2405, line: 792, type: !113)
!14339 = !DILocalVariable(name: "options", arg: 4, scope: !14331, file: !2405, line: 792, type: !32)
!14340 = !DILocation(line: 0, scope: !14331)
!14341 = !DILocation(line: 795, column: 15, scope: !14331)
!14342 = !DILocation(line: 795, column: 25, scope: !14331)
!14343 = !DILocation(line: 796, column: 30, scope: !14331)
!14344 = !DILocation(line: 796, column: 15, scope: !14331)
!14345 = !DILocation(line: 796, column: 28, scope: !14331)
!14346 = !DILocation(line: 797, column: 30, scope: !14331)
!14347 = !DILocation(line: 797, column: 15, scope: !14331)
!14348 = !DILocation(line: 797, column: 28, scope: !14331)
!14349 = !DILocation(line: 799, column: 22, scope: !14331)
!14350 = !DILocation(line: 799, column: 15, scope: !14331)
!14351 = !DILocation(line: 799, column: 20, scope: !14331)
!14352 = !DILocation(line: 801, column: 15, scope: !14331)
!14353 = !DILocation(line: 801, column: 28, scope: !14331)
!14354 = !DILocation(line: 814, column: 2, scope: !14331)
!14355 = !DILocation(line: 815, column: 1, scope: !14331)
!14356 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2405, file: !2405, line: 449, type: !14357, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14359)
!14357 = !DISubroutineType(types: !14358)
!14358 = !{!443, !2409, !14286, !439}
!14359 = !{!14360, !14361, !14362, !14363, !14364, !14365, !14366, !14367}
!14360 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14356, file: !2405, line: 449, type: !2409)
!14361 = !DILocalVariable(name: "stack", arg: 2, scope: !14356, file: !2405, line: 450, type: !14286)
!14362 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14356, file: !2405, line: 450, type: !439)
!14363 = !DILocalVariable(name: "stack_obj_size", scope: !14356, file: !2405, line: 452, type: !439)
!14364 = !DILocalVariable(name: "stack_buf_size", scope: !14356, file: !2405, line: 452, type: !439)
!14365 = !DILocalVariable(name: "stack_ptr", scope: !14356, file: !2405, line: 453, type: !443)
!14366 = !DILocalVariable(name: "stack_buf_start", scope: !14356, file: !2405, line: 453, type: !443)
!14367 = !DILocalVariable(name: "delta", scope: !14356, file: !2405, line: 454, type: !439)
!14368 = !DILocation(line: 0, scope: !14356)
!14369 = !DILocation(line: 465, column: 20, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14356, file: !2405, line: 463, column: 2)
!14371 = !DILocation(line: 466, column: 21, scope: !14370)
!14372 = !DILocation(line: 473, column: 28, scope: !14356)
!14373 = !DILocation(line: 514, column: 33, scope: !14356)
!14374 = !DILocation(line: 514, column: 25, scope: !14356)
!14375 = !DILocation(line: 514, column: 31, scope: !14356)
!14376 = !DILocation(line: 515, column: 25, scope: !14356)
!14377 = !DILocation(line: 515, column: 30, scope: !14356)
!14378 = !DILocation(line: 516, column: 25, scope: !14356)
!14379 = !DILocation(line: 516, column: 31, scope: !14356)
!14380 = !DILocation(line: 520, column: 2, scope: !14356)
!14381 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2350, file: !2350, line: 331, type: !14382, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14384)
!14382 = !DISubroutineType(types: !14383)
!14383 = !{!443, !14286}
!14384 = !{!14385}
!14385 = !DILocalVariable(name: "sym", arg: 1, scope: !14381, file: !2350, line: 331, type: !14286)
!14386 = !DILocation(line: 0, scope: !14381)
!14387 = !DILocation(line: 333, column: 21, scope: !14381)
!14388 = !DILocation(line: 333, column: 2, scope: !14381)
!14389 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14390, file: !14390, line: 40, type: !14391, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14393)
!14390 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14391 = !DISubroutineType(types: !14392)
!14392 = !{null, !14334}
!14393 = !{!14394}
!14394 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14389, file: !14390, line: 40, type: !14334)
!14395 = !DILocation(line: 0, scope: !14389)
!14396 = !DILocation(line: 42, column: 31, scope: !14389)
!14397 = !DILocation(line: 42, column: 2, scope: !14389)
!14398 = !DILocation(line: 43, column: 1, scope: !14389)
!14399 = distinct !DISubprogram(name: "z_init_timeout", scope: !14390, file: !14390, line: 25, type: !2466, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14400)
!14400 = !{!14401}
!14401 = !DILocalVariable(name: "to", arg: 1, scope: !14399, file: !14390, line: 25, type: !2468)
!14402 = !DILocation(line: 0, scope: !14399)
!14403 = !DILocation(line: 27, column: 22, scope: !14399)
!14404 = !DILocation(line: 27, column: 2, scope: !14399)
!14405 = !DILocation(line: 28, column: 1, scope: !14399)
!14406 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !14407, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14409)
!14407 = !DISubroutineType(types: !14408)
!14408 = !{null, !2512}
!14409 = !{!14410}
!14410 = !DILocalVariable(name: "node", arg: 1, scope: !14406, file: !367, line: 211, type: !2512)
!14411 = !DILocation(line: 0, scope: !14406)
!14412 = !DILocation(line: 213, column: 8, scope: !14406)
!14413 = !DILocation(line: 213, column: 13, scope: !14406)
!14414 = !DILocation(line: 214, column: 8, scope: !14406)
!14415 = !DILocation(line: 214, column: 13, scope: !14406)
!14416 = !DILocation(line: 215, column: 1, scope: !14406)
!14417 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !14418, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14421)
!14418 = !DISubroutineType(types: !14419)
!14419 = !{null, !14420}
!14420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!14421 = !{!14422}
!14422 = !DILocalVariable(name: "list", arg: 1, scope: !14417, file: !367, line: 197, type: !14420)
!14423 = !DILocation(line: 0, scope: !14417)
!14424 = !DILocation(line: 199, column: 8, scope: !14417)
!14425 = !DILocation(line: 199, column: 13, scope: !14417)
!14426 = !DILocation(line: 200, column: 8, scope: !14417)
!14427 = !DILocation(line: 200, column: 13, scope: !14417)
!14428 = !DILocation(line: 201, column: 1, scope: !14417)
!14429 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2405, file: !2405, line: 641, type: !14430, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14436)
!14430 = !DISubroutineType(types: !14431)
!14431 = !{!2408, !2409, !14286, !439, !5155, !104, !104, !104, !108, !113, !14432}
!14432 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !14433)
!14433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !14434)
!14434 = !{!14435}
!14435 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14433, file: !110, line: 66, baseType: !109, size: 64)
!14436 = !{!14437, !14438, !14439, !14440, !14441, !14442, !14443, !14444, !14445, !14446}
!14437 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14429, file: !2405, line: 641, type: !2409)
!14438 = !DILocalVariable(name: "stack", arg: 2, scope: !14429, file: !2405, line: 642, type: !14286)
!14439 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14429, file: !2405, line: 643, type: !439)
!14440 = !DILocalVariable(name: "entry", arg: 4, scope: !14429, file: !2405, line: 643, type: !5155)
!14441 = !DILocalVariable(name: "p1", arg: 5, scope: !14429, file: !2405, line: 644, type: !104)
!14442 = !DILocalVariable(name: "p2", arg: 6, scope: !14429, file: !2405, line: 644, type: !104)
!14443 = !DILocalVariable(name: "p3", arg: 7, scope: !14429, file: !2405, line: 644, type: !104)
!14444 = !DILocalVariable(name: "prio", arg: 8, scope: !14429, file: !2405, line: 645, type: !108)
!14445 = !DILocalVariable(name: "options", arg: 9, scope: !14429, file: !2405, line: 645, type: !113)
!14446 = !DILocalVariable(name: "delay", arg: 10, scope: !14429, file: !2405, line: 645, type: !14432)
!14447 = !DILocation(line: 0, scope: !14429)
!14448 = !DILocation(line: 649, column: 2, scope: !14429)
!14449 = !DILocation(line: 652, column: 7, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14429, file: !2405, line: 652, column: 6)
!14451 = !DILocation(line: 652, column: 6, scope: !14429)
!14452 = !DILocation(line: 653, column: 3, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14450, file: !2405, line: 652, column: 39)
!14454 = !DILocation(line: 654, column: 2, scope: !14453)
!14455 = !DILocation(line: 656, column: 2, scope: !14429)
!14456 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2405, file: !2405, line: 401, type: !14457, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14459)
!14457 = !DISubroutineType(types: !14458)
!14458 = !{null, !2409, !14432}
!14459 = !{!14460, !14461}
!14460 = !DILocalVariable(name: "thread", arg: 1, scope: !14456, file: !2405, line: 401, type: !2409)
!14461 = !DILocalVariable(name: "delay", arg: 2, scope: !14456, file: !2405, line: 401, type: !14432)
!14462 = !DILocation(line: 0, scope: !14456)
!14463 = !DILocation(line: 404, column: 6, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14456, file: !2405, line: 404, column: 6)
!14465 = !DILocation(line: 404, column: 6, scope: !14456)
!14466 = !DILocation(line: 405, column: 3, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14464, file: !2405, line: 404, column: 38)
!14468 = !DILocation(line: 406, column: 2, scope: !14467)
!14469 = !DILocation(line: 407, column: 3, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14464, file: !2405, line: 406, column: 9)
!14471 = !DILocation(line: 413, column: 1, scope: !14456)
!14472 = distinct !DISubprogram(name: "k_thread_start", scope: !3785, file: !3785, line: 205, type: !14473, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14475)
!14473 = !DISubroutineType(types: !14474)
!14474 = !{null, !2408}
!14475 = !{!14476}
!14476 = !DILocalVariable(name: "thread", arg: 1, scope: !14472, file: !3785, line: 205, type: !2408)
!14477 = !DILocation(line: 0, scope: !14472)
!14478 = !DILocation(line: 214, column: 2, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14472, file: !3785, line: 214, column: 2)
!14480 = !{i64 2154107491}
!14481 = !DILocation(line: 215, column: 2, scope: !14472)
!14482 = !DILocation(line: 216, column: 1, scope: !14472)
!14483 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14390, file: !14390, line: 47, type: !14457, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14484)
!14484 = !{!14485, !14486}
!14485 = !DILocalVariable(name: "thread", arg: 1, scope: !14483, file: !14390, line: 47, type: !2409)
!14486 = !DILocalVariable(name: "ticks", arg: 2, scope: !14483, file: !14390, line: 47, type: !14432)
!14487 = !DILocation(line: 0, scope: !14483)
!14488 = !DILocation(line: 49, column: 30, scope: !14483)
!14489 = !DILocation(line: 49, column: 2, scope: !14483)
!14490 = !DILocation(line: 50, column: 1, scope: !14483)
!14491 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2405, file: !2405, line: 748, type: !3389, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14492)
!14492 = !{!14493, !14511}
!14493 = !DILocalVariable(name: "thread_data", scope: !14494, file: !2405, line: 750, type: !14495)
!14494 = distinct !DILexicalBlock(scope: !14491, file: !2405, line: 750, column: 2)
!14495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14496, size: 32)
!14496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !359, line: 620, size: 384, elements: !14497)
!14497 = !{!14498, !14499, !14500, !14501, !14502, !14503, !14504, !14505, !14506, !14507, !14508, !14510}
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14496, file: !359, line: 621, baseType: !2409, size: 32)
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14496, file: !359, line: 622, baseType: !14286, size: 32, offset: 32)
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14496, file: !359, line: 623, baseType: !32, size: 32, offset: 64)
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14496, file: !359, line: 624, baseType: !5155, size: 32, offset: 96)
!14502 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14496, file: !359, line: 625, baseType: !104, size: 32, offset: 128)
!14503 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14496, file: !359, line: 626, baseType: !104, size: 32, offset: 160)
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14496, file: !359, line: 627, baseType: !104, size: 32, offset: 192)
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14496, file: !359, line: 628, baseType: !108, size: 32, offset: 224)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14496, file: !359, line: 629, baseType: !113, size: 32, offset: 256)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14496, file: !359, line: 630, baseType: !220, size: 32, offset: 288)
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14496, file: !359, line: 631, baseType: !14509, size: 32, offset: 320)
!14509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 32)
!14510 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14496, file: !359, line: 632, baseType: !105, size: 32, offset: 352)
!14511 = !DILocalVariable(name: "thread_data", scope: !14512, file: !2405, line: 781, type: !14495)
!14512 = distinct !DILexicalBlock(scope: !14491, file: !2405, line: 781, column: 2)
!14513 = !DILocation(line: 0, scope: !14494)
!14514 = !DILocation(line: 750, column: 2, scope: !14494)
!14515 = !DILocation(line: 780, column: 2, scope: !14491)
!14516 = !DILocation(line: 0, scope: !14512)
!14517 = !DILocation(line: 781, column: 2, scope: !14512)
!14518 = !DILocation(line: 752, column: 17, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14520, file: !2405, line: 750, column: 38)
!14520 = distinct !DILexicalBlock(scope: !14494, file: !2405, line: 750, column: 2)
!14521 = !DILocation(line: 753, column: 17, scope: !14519)
!14522 = !DILocation(line: 754, column: 17, scope: !14519)
!14523 = !DILocation(line: 755, column: 17, scope: !14519)
!14524 = !DILocation(line: 756, column: 17, scope: !14519)
!14525 = !DILocation(line: 757, column: 17, scope: !14519)
!14526 = !DILocation(line: 758, column: 17, scope: !14519)
!14527 = !DILocation(line: 759, column: 17, scope: !14519)
!14528 = !DILocation(line: 760, column: 17, scope: !14519)
!14529 = !DILocation(line: 751, column: 3, scope: !14519)
!14530 = !DILocation(line: 763, column: 16, scope: !14519)
!14531 = !DILocation(line: 763, column: 29, scope: !14519)
!14532 = !DILocation(line: 763, column: 39, scope: !14519)
!14533 = !DILocation(line: 750, column: 2, scope: !14520)
!14534 = !DILocation(line: 750, column: 2, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14520, file: !2405, line: 750, column: 2)
!14536 = distinct !{!14536, !14514, !14537}
!14537 = !DILocation(line: 764, column: 2, scope: !14494)
!14538 = !DILocation(line: 787, column: 2, scope: !14491)
!14539 = !DILocation(line: 788, column: 1, scope: !14491)
!14540 = !DILocation(line: 782, column: 20, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14542, file: !2405, line: 782, column: 7)
!14542 = distinct !DILexicalBlock(scope: !14543, file: !2405, line: 781, column: 38)
!14543 = distinct !DILexicalBlock(scope: !14512, file: !2405, line: 781, column: 2)
!14544 = !DILocation(line: 782, column: 31, scope: !14541)
!14545 = !DILocation(line: 782, column: 7, scope: !14542)
!14546 = !DILocation(line: 783, column: 37, scope: !14547)
!14547 = distinct !DILexicalBlock(scope: !14541, file: !2405, line: 782, column: 51)
!14548 = !DILocation(line: 784, column: 10, scope: !14547)
!14549 = !DILocation(line: 783, column: 4, scope: !14547)
!14550 = !DILocation(line: 785, column: 3, scope: !14547)
!14551 = !DILocation(line: 781, column: 2, scope: !14543)
!14552 = !DILocation(line: 781, column: 2, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14543, file: !2405, line: 781, column: 2)
!14554 = distinct !{!14554, !14517, !14555}
!14555 = !DILocation(line: 786, column: 2, scope: !14512)
!14556 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3752, file: !3752, line: 403, type: !3753, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14557)
!14557 = !{!14558}
!14558 = !DILocalVariable(name: "t", arg: 1, scope: !14556, file: !3752, line: 403, type: !114)
!14559 = !DILocation(line: 0, scope: !14556)
!14560 = !DILocalVariable(name: "t", arg: 1, scope: !14561, file: !3752, line: 102, type: !114)
!14561 = distinct !DISubprogram(name: "z_tmcvt", scope: !3752, file: !3752, line: 102, type: !3760, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14562)
!14562 = !{!14560, !14563, !14564, !14565, !14566, !14567, !14568, !14569, !14570, !14571, !14572}
!14563 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14561, file: !3752, line: 102, type: !113)
!14564 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14561, file: !3752, line: 103, type: !113)
!14565 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14561, file: !3752, line: 103, type: !422)
!14566 = !DILocalVariable(name: "result32", arg: 5, scope: !14561, file: !3752, line: 104, type: !422)
!14567 = !DILocalVariable(name: "round_up", arg: 6, scope: !14561, file: !3752, line: 104, type: !422)
!14568 = !DILocalVariable(name: "round_off", arg: 7, scope: !14561, file: !3752, line: 105, type: !422)
!14569 = !DILocalVariable(name: "mul_ratio", scope: !14561, file: !3752, line: 107, type: !422)
!14570 = !DILocalVariable(name: "div_ratio", scope: !14561, file: !3752, line: 109, type: !422)
!14571 = !DILocalVariable(name: "off", scope: !14561, file: !3752, line: 116, type: !114)
!14572 = !DILocalVariable(name: "rdivisor", scope: !14573, file: !3752, line: 119, type: !113)
!14573 = distinct !DILexicalBlock(scope: !14574, file: !3752, line: 118, column: 18)
!14574 = distinct !DILexicalBlock(scope: !14561, file: !3752, line: 118, column: 6)
!14575 = !DILocation(line: 0, scope: !14561, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 406, column: 9, scope: !14556)
!14577 = !DILocation(line: 145, column: 13, scope: !14578, inlinedAt: !14576)
!14578 = distinct !DILexicalBlock(scope: !14579, file: !3752, line: 144, column: 10)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !3752, line: 142, column: 7)
!14580 = distinct !DILexicalBlock(scope: !14581, file: !3752, line: 141, column: 24)
!14581 = distinct !DILexicalBlock(scope: !14582, file: !3752, line: 141, column: 13)
!14582 = distinct !DILexicalBlock(scope: !14561, file: !3752, line: 134, column: 6)
!14583 = !DILocation(line: 406, column: 2, scope: !14556)
!14584 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2405, file: !2405, line: 817, type: !5153, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14585)
!14585 = !{!14586, !14587, !14588, !14589}
!14586 = !DILocalVariable(name: "entry", arg: 1, scope: !14584, file: !2405, line: 817, type: !5155)
!14587 = !DILocalVariable(name: "p1", arg: 2, scope: !14584, file: !2405, line: 818, type: !104)
!14588 = !DILocalVariable(name: "p2", arg: 3, scope: !14584, file: !2405, line: 818, type: !104)
!14589 = !DILocalVariable(name: "p3", arg: 4, scope: !14584, file: !2405, line: 818, type: !104)
!14590 = !DILocation(line: 0, scope: !14584)
!14591 = !DILocation(line: 822, column: 2, scope: !14584)
!14592 = !DILocation(line: 822, column: 17, scope: !14584)
!14593 = !DILocation(line: 822, column: 30, scope: !14584)
!14594 = !DILocation(line: 823, column: 2, scope: !14584)
!14595 = !DILocation(line: 845, column: 2, scope: !14584)
!14596 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2405, file: !2405, line: 888, type: !14597, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14599)
!14597 = !DISubroutineType(types: !14598)
!14598 = !{!108, !2409}
!14599 = !{!14600}
!14600 = !DILocalVariable(name: "thread", arg: 1, scope: !14596, file: !2405, line: 888, type: !2409)
!14601 = !DILocation(line: 0, scope: !14596)
!14602 = !DILocation(line: 893, column: 2, scope: !14596)
!14603 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2405, file: !2405, line: 897, type: !14604, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14606)
!14604 = !DISubroutineType(types: !14605)
!14605 = !{!108, !2409, !32}
!14606 = !{!14607, !14608}
!14607 = !DILocalVariable(name: "thread", arg: 1, scope: !14603, file: !2405, line: 897, type: !2409)
!14608 = !DILocalVariable(name: "options", arg: 2, scope: !14603, file: !2405, line: 897, type: !32)
!14609 = !DILocation(line: 0, scope: !14603)
!14610 = !DILocation(line: 902, column: 2, scope: !14603)
!14611 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2405, file: !2405, line: 1072, type: !14612, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14617)
!14612 = !DISubroutineType(types: !14613)
!14613 = !{!108, !2408, !14614}
!14614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14615, size: 32)
!14615 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !645, line: 234, baseType: !14616)
!14616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !645, line: 192, elements: !437)
!14617 = !{!14618, !14619}
!14618 = !DILocalVariable(name: "thread", arg: 1, scope: !14611, file: !2405, line: 1072, type: !2408)
!14619 = !DILocalVariable(name: "stats", arg: 2, scope: !14611, file: !2405, line: 1073, type: !14614)
!14620 = !DILocation(line: 0, scope: !14611)
!14621 = !DILocation(line: 1075, column: 14, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14611, file: !2405, line: 1075, column: 6)
!14623 = !DILocation(line: 1075, column: 23, scope: !14622)
!14624 = !DILocation(line: 1086, column: 1, scope: !14611)
!14625 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2405, file: !2405, line: 1088, type: !14626, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !14628)
!14626 = !DISubroutineType(types: !14627)
!14627 = !{!108, !14614}
!14628 = !{!14629}
!14629 = !DILocalVariable(name: "stats", arg: 1, scope: !14625, file: !2405, line: 1088, type: !14614)
!14630 = !DILocation(line: 0, scope: !14625)
!14631 = !DILocation(line: 1094, column: 12, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14625, file: !2405, line: 1094, column: 6)
!14633 = !DILocation(line: 1120, column: 1, scope: !14625)
!14634 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14635, file: !14635, line: 20, type: !3389, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3370, retainedNodes: !437)
!14635 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14636 = !DILocation(line: 30, column: 2, scope: !14634)
!14637 = !DILocation(line: 31, column: 1, scope: !14634)
!14638 = distinct !DISubprogram(name: "idle", scope: !14635, file: !14635, line: 33, type: !5158, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3370, retainedNodes: !14639)
!14639 = !{!14640, !14641, !14642}
!14640 = !DILocalVariable(name: "unused1", arg: 1, scope: !14638, file: !14635, line: 33, type: !104)
!14641 = !DILocalVariable(name: "unused2", arg: 2, scope: !14638, file: !14635, line: 33, type: !104)
!14642 = !DILocalVariable(name: "unused3", arg: 3, scope: !14638, file: !14635, line: 33, type: !104)
!14643 = !DILocation(line: 0, scope: !14638)
!14644 = !DILocation(line: 41, column: 2, scope: !14638)
!14645 = !DILocation(line: 55, column: 2, scope: !14646, inlinedAt: !14650)
!14646 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3370, retainedNodes: !14647)
!14647 = !{!14648, !14649}
!14648 = !DILocalVariable(name: "key", scope: !14646, file: !4063, line: 44, type: !32)
!14649 = !DILocalVariable(name: "tmp", scope: !14646, file: !4063, line: 53, type: !32)
!14650 = distinct !DILocation(line: 62, column: 10, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14638, file: !14635, line: 41, column: 15)
!14652 = !{i64 1965569}
!14653 = !DILocation(line: 0, scope: !14646, inlinedAt: !14650)
!14654 = !DILocation(line: 86, column: 3, scope: !14651)
!14655 = distinct !{!14655, !14644, !14656}
!14656 = !DILocation(line: 105, column: 2, scope: !14638)
!14657 = distinct !DISubprogram(name: "k_cpu_idle", scope: !359, file: !359, line: 5627, type: !3389, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3370, retainedNodes: !437)
!14658 = !DILocation(line: 5629, column: 2, scope: !14657)
!14659 = !DILocation(line: 5630, column: 1, scope: !14657)
!14660 = !DISubprogram(name: "arch_cpu_idle", scope: !5156, file: !5156, line: 167, type: !3389, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14661 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2637, file: !2637, line: 93, type: !14662, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14664)
!14662 = !DISubroutineType(types: !14663)
!14663 = !{!220, !2532, !2532}
!14664 = !{!14665, !14666, !14667, !14668}
!14665 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14661, file: !2637, line: 93, type: !2532)
!14666 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14661, file: !2637, line: 94, type: !2532)
!14667 = !DILocalVariable(name: "b1", scope: !14661, file: !2637, line: 97, type: !220)
!14668 = !DILocalVariable(name: "b2", scope: !14661, file: !2637, line: 98, type: !220)
!14669 = !DILocation(line: 0, scope: !14661)
!14670 = !DILocation(line: 97, column: 30, scope: !14661)
!14671 = !DILocation(line: 98, column: 30, scope: !14661)
!14672 = !DILocation(line: 100, column: 9, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14661, file: !2637, line: 100, column: 6)
!14674 = !DILocation(line: 100, column: 6, scope: !14661)
!14675 = !DILocation(line: 125, column: 1, scope: !14661)
!14676 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2637, file: !2637, line: 428, type: !14677, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14679)
!14677 = !DISubroutineType(types: !14678)
!14678 = !{null, !2532}
!14679 = !{!14680}
!14680 = !DILocalVariable(name: "curr", arg: 1, scope: !14676, file: !2637, line: 428, type: !2532)
!14681 = !DILocation(line: 0, scope: !14676)
!14682 = !DILocation(line: 434, column: 6, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14676, file: !2637, line: 434, column: 6)
!14684 = !DILocation(line: 434, column: 23, scope: !14683)
!14685 = !DILocation(line: 434, column: 6, scope: !14676)
!14686 = !DILocation(line: 435, column: 50, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14683, file: !2637, line: 434, column: 29)
!14688 = !DILocation(line: 435, column: 48, scope: !14687)
!14689 = !DILocation(line: 435, column: 29, scope: !14687)
!14690 = !DILocation(line: 436, column: 24, scope: !14687)
!14691 = !DILocation(line: 436, column: 3, scope: !14687)
!14692 = !DILocation(line: 437, column: 2, scope: !14687)
!14693 = !DILocation(line: 438, column: 1, scope: !14676)
!14694 = distinct !DISubprogram(name: "slice_time", scope: !2637, file: !2637, line: 407, type: !14695, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14697)
!14695 = !DISubroutineType(types: !14696)
!14696 = !{!108, !2532}
!14697 = !{!14698, !14699}
!14698 = !DILocalVariable(name: "curr", arg: 1, scope: !14694, file: !2637, line: 407, type: !2532)
!14699 = !DILocalVariable(name: "ret", scope: !14694, file: !2637, line: 409, type: !108)
!14700 = !DILocation(line: 0, scope: !14694)
!14701 = !DILocation(line: 409, column: 12, scope: !14694)
!14702 = !DILocation(line: 416, column: 2, scope: !14694)
!14703 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2637, file: !2637, line: 440, type: !14704, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14706)
!14704 = !DISubroutineType(types: !14705)
!14705 = !{null, !220, !108}
!14706 = !{!14707, !14708, !14709, !14715}
!14707 = !DILocalVariable(name: "slice", arg: 1, scope: !14703, file: !2637, line: 440, type: !220)
!14708 = !DILocalVariable(name: "prio", arg: 2, scope: !14703, file: !2637, line: 440, type: !108)
!14709 = !DILocalVariable(name: "__i", scope: !14710, file: !2637, line: 442, type: !14711)
!14710 = distinct !DILexicalBlock(scope: !14703, file: !2637, line: 442, column: 2)
!14711 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !14712)
!14712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !14713)
!14713 = !{!14714}
!14714 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14712, file: !436, line: 33, baseType: !108, size: 32)
!14715 = !DILocalVariable(name: "__key", scope: !14710, file: !2637, line: 442, type: !14711)
!14716 = !DILocation(line: 0, scope: !14703)
!14717 = !DILocation(line: 0, scope: !14710)
!14718 = !DILocalVariable(name: "l", arg: 1, scope: !14719, file: !436, line: 136, type: !14722)
!14719 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !14720, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14723)
!14720 = !DISubroutineType(types: !14721)
!14721 = !{!14711, !14722}
!14722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!14723 = !{!14718, !14724}
!14724 = !DILocalVariable(name: "k", scope: !14719, file: !436, line: 139, type: !14711)
!14725 = !DILocation(line: 0, scope: !14719, inlinedAt: !14726)
!14726 = distinct !DILocation(line: 442, column: 2, scope: !14710)
!14727 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !14732)
!14728 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14729)
!14729 = !{!14730, !14731}
!14730 = !DILocalVariable(name: "key", scope: !14728, file: !4063, line: 44, type: !32)
!14731 = !DILocalVariable(name: "tmp", scope: !14728, file: !4063, line: 53, type: !32)
!14732 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !14726)
!14733 = !{i64 2009540}
!14734 = !DILocation(line: 0, scope: !14728, inlinedAt: !14732)
!14735 = !DILocation(line: 443, column: 29, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14737, file: !2637, line: 442, column: 26)
!14737 = distinct !DILexicalBlock(scope: !14710, file: !2637, line: 442, column: 2)
!14738 = !DILocation(line: 444, column: 17, scope: !14736)
!14739 = !DILocation(line: 445, column: 51, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14736, file: !2637, line: 445, column: 7)
!14741 = !DILocation(line: 445, column: 7, scope: !14736)
!14742 = !DILocation(line: 0, scope: !14736)
!14743 = !DILocation(line: 451, column: 18, scope: !14736)
!14744 = !DILocation(line: 452, column: 3, scope: !14736)
!14745 = !DILocalVariable(name: "key", arg: 2, scope: !14746, file: !436, line: 190, type: !14711)
!14746 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !14747, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14749)
!14747 = !DISubroutineType(types: !14748)
!14748 = !{null, !14722, !14711}
!14749 = !{!14750, !14745}
!14750 = !DILocalVariable(name: "l", arg: 1, scope: !14746, file: !436, line: 189, type: !14722)
!14751 = !DILocation(line: 0, scope: !14746, inlinedAt: !14752)
!14752 = distinct !DILocation(line: 442, column: 2, scope: !14737)
!14753 = !DILocalVariable(name: "key", arg: 1, scope: !14754, file: !4063, line: 84, type: !32)
!14754 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14755)
!14755 = !{!14753}
!14756 = !DILocation(line: 0, scope: !14754, inlinedAt: !14757)
!14757 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !14752)
!14758 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !14757)
!14759 = !{i64 2010357}
!14760 = !DILocation(line: 454, column: 1, scope: !14703)
!14761 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3752, file: !3752, line: 389, type: !8275, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14762)
!14762 = !{!14763}
!14763 = !DILocalVariable(name: "t", arg: 1, scope: !14761, file: !3752, line: 389, type: !113)
!14764 = !DILocation(line: 0, scope: !14761)
!14765 = !DILocalVariable(name: "t", arg: 1, scope: !14766, file: !3752, line: 102, type: !114)
!14766 = distinct !DISubprogram(name: "z_tmcvt", scope: !3752, file: !3752, line: 102, type: !3760, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14767)
!14767 = !{!14765, !14768, !14769, !14770, !14771, !14772, !14773, !14774, !14775, !14776, !14777}
!14768 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14766, file: !3752, line: 102, type: !113)
!14769 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14766, file: !3752, line: 103, type: !113)
!14770 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14766, file: !3752, line: 103, type: !422)
!14771 = !DILocalVariable(name: "result32", arg: 5, scope: !14766, file: !3752, line: 104, type: !422)
!14772 = !DILocalVariable(name: "round_up", arg: 6, scope: !14766, file: !3752, line: 104, type: !422)
!14773 = !DILocalVariable(name: "round_off", arg: 7, scope: !14766, file: !3752, line: 105, type: !422)
!14774 = !DILocalVariable(name: "mul_ratio", scope: !14766, file: !3752, line: 107, type: !422)
!14775 = !DILocalVariable(name: "div_ratio", scope: !14766, file: !3752, line: 109, type: !422)
!14776 = !DILocalVariable(name: "off", scope: !14766, file: !3752, line: 116, type: !114)
!14777 = !DILocalVariable(name: "rdivisor", scope: !14778, file: !3752, line: 119, type: !113)
!14778 = distinct !DILexicalBlock(scope: !14779, file: !3752, line: 118, column: 18)
!14779 = distinct !DILexicalBlock(scope: !14766, file: !3752, line: 118, column: 6)
!14780 = !DILocation(line: 0, scope: !14766, inlinedAt: !14781)
!14781 = distinct !DILocation(line: 392, column: 9, scope: !14761)
!14782 = !DILocation(line: 143, column: 25, scope: !14783, inlinedAt: !14781)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !3752, line: 142, column: 17)
!14784 = distinct !DILexicalBlock(scope: !14785, file: !3752, line: 142, column: 7)
!14785 = distinct !DILexicalBlock(scope: !14786, file: !3752, line: 141, column: 24)
!14786 = distinct !DILexicalBlock(scope: !14787, file: !3752, line: 141, column: 13)
!14787 = distinct !DILexicalBlock(scope: !14766, file: !3752, line: 134, column: 6)
!14788 = !DILocation(line: 392, column: 2, scope: !14761)
!14789 = distinct !DISubprogram(name: "z_time_slice", scope: !2637, file: !2637, line: 502, type: !9609, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14790)
!14790 = !{!14791, !14792}
!14791 = !DILocalVariable(name: "ticks", arg: 1, scope: !14789, file: !2637, line: 502, type: !108)
!14792 = !DILocalVariable(name: "key", scope: !14789, file: !2637, line: 511, type: !14711)
!14793 = !DILocation(line: 0, scope: !14789)
!14794 = !DILocation(line: 0, scope: !14719, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 511, column: 25, scope: !14789)
!14796 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !14797)
!14797 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !14795)
!14798 = !DILocation(line: 0, scope: !14728, inlinedAt: !14797)
!14799 = !DILocation(line: 514, column: 6, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14789, file: !2637, line: 514, column: 6)
!14801 = !DILocation(line: 514, column: 25, scope: !14800)
!14802 = !DILocation(line: 514, column: 22, scope: !14800)
!14803 = !DILocation(line: 514, column: 6, scope: !14789)
!14804 = !DILocation(line: 515, column: 3, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14800, file: !2637, line: 514, column: 35)
!14806 = !DILocation(line: 0, scope: !14746, inlinedAt: !14807)
!14807 = distinct !DILocation(line: 516, column: 3, scope: !14805)
!14808 = !DILocation(line: 0, scope: !14754, inlinedAt: !14809)
!14809 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !14807)
!14810 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !14809)
!14811 = !DILocation(line: 517, column: 3, scope: !14805)
!14812 = !DILocation(line: 519, column: 18, scope: !14789)
!14813 = !DILocation(line: 522, column: 6, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14789, file: !2637, line: 522, column: 6)
!14815 = !DILocation(line: 522, column: 27, scope: !14814)
!14816 = !DILocation(line: 522, column: 30, scope: !14814)
!14817 = !DILocation(line: 522, column: 6, scope: !14789)
!14818 = !DILocation(line: 523, column: 30, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14820, file: !2637, line: 523, column: 7)
!14820 = distinct !DILexicalBlock(scope: !14814, file: !2637, line: 522, column: 51)
!14821 = !DILocation(line: 523, column: 13, scope: !14819)
!14822 = !DILocation(line: 523, column: 7, scope: !14820)
!14823 = !DILocation(line: 530, column: 10, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14819, file: !2637, line: 523, column: 43)
!14825 = !DILocation(line: 531, column: 3, scope: !14824)
!14826 = !DILocation(line: 532, column: 30, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14819, file: !2637, line: 531, column: 10)
!14828 = !DILocation(line: 535, column: 29, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14814, file: !2637, line: 534, column: 9)
!14830 = !DILocation(line: 0, scope: !14746, inlinedAt: !14831)
!14831 = distinct !DILocation(line: 537, column: 2, scope: !14789)
!14832 = !DILocation(line: 0, scope: !14754, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !14831)
!14834 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !14833)
!14835 = !DILocation(line: 538, column: 1, scope: !14789)
!14836 = distinct !DISubprogram(name: "sliceable", scope: !2637, file: !2637, line: 468, type: !14837, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14839)
!14837 = !DISubroutineType(types: !14838)
!14838 = !{!422, !2532}
!14839 = !{!14840, !14841}
!14840 = !DILocalVariable(name: "thread", arg: 1, scope: !14836, file: !2637, line: 468, type: !2532)
!14841 = !DILocalVariable(name: "ret", scope: !14836, file: !2637, line: 470, type: !422)
!14842 = !DILocation(line: 0, scope: !14836)
!14843 = !DILocation(line: 470, column: 13, scope: !14836)
!14844 = !DILocation(line: 471, column: 3, scope: !14836)
!14845 = !DILocation(line: 471, column: 7, scope: !14836)
!14846 = !DILocation(line: 472, column: 3, scope: !14836)
!14847 = !DILocation(line: 472, column: 37, scope: !14836)
!14848 = !DILocation(line: 472, column: 24, scope: !14836)
!14849 = !DILocation(line: 472, column: 43, scope: !14836)
!14850 = !DILocation(line: 472, column: 7, scope: !14836)
!14851 = !DILocation(line: 473, column: 3, scope: !14836)
!14852 = !DILocation(line: 473, column: 7, scope: !14836)
!14853 = !DILocation(line: 473, column: 6, scope: !14836)
!14854 = !DILocation(line: 479, column: 2, scope: !14836)
!14855 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2637, file: !2637, line: 482, type: !14856, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14858)
!14856 = !DISubroutineType(types: !14857)
!14857 = !{!14711, !14711}
!14858 = !{!14859, !14860}
!14859 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14855, file: !2637, line: 482, type: !14711)
!14860 = !DILocalVariable(name: "curr", scope: !14855, file: !2637, line: 484, type: !2532)
!14861 = !DILocation(line: 0, scope: !14855)
!14862 = !DILocation(line: 484, column: 26, scope: !14855)
!14863 = !DILocation(line: 493, column: 7, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14855, file: !2637, line: 493, column: 6)
!14865 = !DILocation(line: 493, column: 6, scope: !14855)
!14866 = !DILocation(line: 494, column: 3, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14864, file: !2637, line: 493, column: 49)
!14868 = !DILocation(line: 495, column: 2, scope: !14867)
!14869 = !DILocation(line: 496, column: 2, scope: !14855)
!14870 = !DILocation(line: 499, column: 1, scope: !14855)
!14871 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13996, file: !13996, line: 106, type: !14837, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14872)
!14872 = !{!14873, !14874}
!14873 = !DILocalVariable(name: "thread", arg: 1, scope: !14871, file: !13996, line: 106, type: !2532)
!14874 = !DILocalVariable(name: "state", scope: !14871, file: !13996, line: 108, type: !164)
!14875 = !DILocation(line: 0, scope: !14871)
!14876 = !DILocation(line: 108, column: 31, scope: !14871)
!14877 = !DILocation(line: 110, column: 16, scope: !14871)
!14878 = !DILocation(line: 111, column: 41, scope: !14871)
!14879 = !DILocation(line: 110, column: 2, scope: !14871)
!14880 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2637, file: !2637, line: 393, type: !14677, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14881)
!14881 = !{!14882}
!14882 = !DILocalVariable(name: "thread", arg: 1, scope: !14880, file: !2637, line: 393, type: !2532)
!14883 = !DILocation(line: 0, scope: !14880)
!14884 = !DILocation(line: 395, column: 6, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14880, file: !2637, line: 395, column: 6)
!14886 = !DILocation(line: 395, column: 6, scope: !14880)
!14887 = !DILocalVariable(name: "thread", arg: 1, scope: !14888, file: !2637, line: 264, type: !2532)
!14888 = distinct !DISubprogram(name: "dequeue_thread", scope: !2637, file: !2637, line: 264, type: !14677, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14889)
!14889 = !{!14887}
!14890 = !DILocation(line: 0, scope: !14888, inlinedAt: !14891)
!14891 = distinct !DILocation(line: 396, column: 3, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14885, file: !2637, line: 395, column: 34)
!14893 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !14891)
!14894 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !14891)
!14895 = !DILocalVariable(name: "thread", arg: 1, scope: !14896, file: !2637, line: 232, type: !2532)
!14896 = distinct !DISubprogram(name: "runq_remove", scope: !2637, file: !2637, line: 232, type: !14677, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14897)
!14897 = !{!14895}
!14898 = !DILocation(line: 0, scope: !14896, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !14891)
!14900 = distinct !DILexicalBlock(scope: !14901, file: !2637, line: 267, column: 35)
!14901 = distinct !DILexicalBlock(scope: !14888, file: !2637, line: 267, column: 6)
!14902 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !14899)
!14903 = !DILocation(line: 397, column: 2, scope: !14892)
!14904 = !DILocalVariable(name: "thread", arg: 1, scope: !14905, file: !2637, line: 250, type: !2532)
!14905 = distinct !DISubprogram(name: "queue_thread", scope: !2637, file: !2637, line: 250, type: !14677, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14906)
!14906 = !{!14904}
!14907 = !DILocation(line: 0, scope: !14905, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 398, column: 2, scope: !14880)
!14909 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !14908)
!14910 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !14908)
!14911 = !DILocalVariable(name: "thread", arg: 1, scope: !14912, file: !2637, line: 227, type: !2532)
!14912 = distinct !DISubprogram(name: "runq_add", scope: !2637, file: !2637, line: 227, type: !14677, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14913)
!14913 = !{!14911}
!14914 = !DILocation(line: 0, scope: !14912, inlinedAt: !14915)
!14915 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !14908)
!14916 = distinct !DILexicalBlock(scope: !14917, file: !2637, line: 253, column: 35)
!14917 = distinct !DILexicalBlock(scope: !14905, file: !2637, line: 253, column: 6)
!14918 = !DILocalVariable(name: "pq", arg: 1, scope: !14919, file: !2637, line: 181, type: !14922)
!14919 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2637, file: !2637, line: 181, type: !14920, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14923)
!14920 = !DISubroutineType(types: !14921)
!14921 = !{null, !14922, !2532}
!14922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!14923 = !{!14918, !14924, !14925}
!14924 = !DILocalVariable(name: "thread", arg: 2, scope: !14919, file: !2637, line: 182, type: !2532)
!14925 = !DILocalVariable(name: "t", scope: !14919, file: !2637, line: 184, type: !2532)
!14926 = !DILocation(line: 0, scope: !14919, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !14915)
!14928 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !14927)
!14929 = distinct !DILexicalBlock(scope: !14919, file: !2637, line: 188, column: 2)
!14930 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !14927)
!14931 = distinct !DILexicalBlock(scope: !14929, file: !2637, line: 188, column: 2)
!14932 = !DILocation(line: 0, scope: !14929, inlinedAt: !14927)
!14933 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !14927)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !2637, line: 189, column: 7)
!14935 = distinct !DILexicalBlock(scope: !14931, file: !2637, line: 188, column: 56)
!14936 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !14927)
!14937 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !14927)
!14938 = !DILocation(line: 191, column: 21, scope: !14939, inlinedAt: !14927)
!14939 = distinct !DILexicalBlock(scope: !14934, file: !2637, line: 189, column: 40)
!14940 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !14927)
!14941 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !14927)
!14942 = distinct !{!14942, !14928, !14943}
!14943 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !14927)
!14944 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !14927)
!14945 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !14927)
!14946 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !14927)
!14947 = !DILocation(line: 399, column: 25, scope: !14880)
!14948 = !DILocation(line: 399, column: 22, scope: !14880)
!14949 = !DILocation(line: 399, column: 2, scope: !14880)
!14950 = !DILocation(line: 400, column: 1, scope: !14880)
!14951 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13996, file: !13996, line: 136, type: !14837, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14952)
!14952 = !{!14953}
!14953 = !DILocalVariable(name: "thread", arg: 1, scope: !14951, file: !13996, line: 136, type: !2532)
!14954 = !DILocation(line: 0, scope: !14951)
!14955 = !DILocation(line: 138, column: 9, scope: !14951)
!14956 = !DILocation(line: 138, column: 2, scope: !14951)
!14957 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2637, file: !2637, line: 1137, type: !14920, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14958)
!14958 = !{!14959, !14960}
!14959 = !DILocalVariable(name: "pq", arg: 1, scope: !14957, file: !2637, line: 1137, type: !14922)
!14960 = !DILocalVariable(name: "thread", arg: 2, scope: !14957, file: !2637, line: 1137, type: !2532)
!14961 = !DILocation(line: 0, scope: !14957)
!14962 = !DILocation(line: 1141, column: 33, scope: !14957)
!14963 = !DILocation(line: 1141, column: 2, scope: !14957)
!14964 = !DILocation(line: 1142, column: 1, scope: !14957)
!14965 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !14966, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14968)
!14966 = !DISubroutineType(types: !14967)
!14967 = !{!2633, !14922}
!14968 = !{!14969}
!14969 = !DILocalVariable(name: "list", arg: 1, scope: !14965, file: !367, line: 294, type: !14922)
!14970 = !DILocation(line: 0, scope: !14965)
!14971 = !DILocation(line: 296, column: 9, scope: !14965)
!14972 = !DILocation(line: 296, column: 49, scope: !14965)
!14973 = !DILocation(line: 296, column: 2, scope: !14965)
!14974 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !14975, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14977)
!14975 = !DISubroutineType(types: !14976)
!14976 = !{null, !2633, !2633}
!14977 = !{!14978, !14979, !14980}
!14978 = !DILocalVariable(name: "successor", arg: 1, scope: !14974, file: !367, line: 443, type: !2633)
!14979 = !DILocalVariable(name: "node", arg: 2, scope: !14974, file: !367, line: 443, type: !2633)
!14980 = !DILocalVariable(name: "prev", scope: !14974, file: !367, line: 445, type: !14981)
!14981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2633)
!14982 = !DILocation(line: 0, scope: !14974)
!14983 = !DILocation(line: 445, column: 39, scope: !14974)
!14984 = !DILocation(line: 447, column: 8, scope: !14974)
!14985 = !DILocation(line: 447, column: 13, scope: !14974)
!14986 = !DILocation(line: 448, column: 8, scope: !14974)
!14987 = !DILocation(line: 448, column: 13, scope: !14974)
!14988 = !DILocation(line: 449, column: 8, scope: !14974)
!14989 = !DILocation(line: 449, column: 13, scope: !14974)
!14990 = !DILocation(line: 450, column: 18, scope: !14974)
!14991 = !DILocation(line: 451, column: 1, scope: !14974)
!14992 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !14993, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14995)
!14993 = !DISubroutineType(types: !14994)
!14994 = !{!2633, !14922, !2633}
!14995 = !{!14996, !14997}
!14996 = !DILocalVariable(name: "list", arg: 1, scope: !14992, file: !367, line: 341, type: !14922)
!14997 = !DILocalVariable(name: "node", arg: 2, scope: !14992, file: !367, line: 342, type: !2633)
!14998 = !DILocation(line: 0, scope: !14992)
!14999 = !DILocation(line: 344, column: 15, scope: !14992)
!15000 = !DILocation(line: 344, column: 9, scope: !14992)
!15001 = !DILocation(line: 344, column: 26, scope: !14992)
!15002 = !DILocation(line: 344, column: 2, scope: !14992)
!15003 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !15004, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15006)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{null, !14922, !2633}
!15006 = !{!15007, !15008, !15009}
!15007 = !DILocalVariable(name: "list", arg: 1, scope: !15003, file: !367, line: 404, type: !14922)
!15008 = !DILocalVariable(name: "node", arg: 2, scope: !15003, file: !367, line: 404, type: !2633)
!15009 = !DILocalVariable(name: "tail", scope: !15003, file: !367, line: 406, type: !14981)
!15010 = !DILocation(line: 0, scope: !15003)
!15011 = !DILocation(line: 406, column: 34, scope: !15003)
!15012 = !DILocation(line: 408, column: 8, scope: !15003)
!15013 = !DILocation(line: 408, column: 13, scope: !15003)
!15014 = !DILocation(line: 409, column: 8, scope: !15003)
!15015 = !DILocation(line: 409, column: 13, scope: !15003)
!15016 = !DILocation(line: 411, column: 8, scope: !15003)
!15017 = !DILocation(line: 411, column: 13, scope: !15003)
!15018 = !DILocation(line: 412, column: 13, scope: !15003)
!15019 = !DILocation(line: 413, column: 1, scope: !15003)
!15020 = distinct !DISubprogram(name: "update_cache", scope: !2637, file: !2637, line: 559, type: !9609, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15021)
!15021 = !{!15022, !15023}
!15022 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15020, file: !2637, line: 559, type: !108)
!15023 = !DILocalVariable(name: "thread", scope: !15020, file: !2637, line: 562, type: !2532)
!15024 = !DILocation(line: 0, scope: !15020)
!15025 = !DILocation(line: 239, column: 9, scope: !15026, inlinedAt: !15029)
!15026 = distinct !DISubprogram(name: "runq_best", scope: !2637, file: !2637, line: 237, type: !15027, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{!2532}
!15029 = distinct !DILocation(line: 314, column: 28, scope: !15030, inlinedAt: !15033)
!15030 = distinct !DISubprogram(name: "next_up", scope: !2637, file: !2637, line: 312, type: !15027, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15031)
!15031 = !{!15032}
!15032 = !DILocalVariable(name: "thread", scope: !15030, file: !2637, line: 314, type: !2532)
!15033 = distinct !DILocation(line: 562, column: 28, scope: !15020)
!15034 = !DILocation(line: 0, scope: !15030, inlinedAt: !15033)
!15035 = !DILocation(line: 340, column: 17, scope: !15030, inlinedAt: !15033)
!15036 = !DILocation(line: 340, column: 9, scope: !15030, inlinedAt: !15033)
!15037 = !DILocalVariable(name: "thread", arg: 1, scope: !15038, file: !2637, line: 127, type: !2532)
!15038 = distinct !DISubprogram(name: "should_preempt", scope: !2637, file: !2637, line: 127, type: !15039, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15041)
!15039 = !DISubroutineType(types: !15040)
!15040 = !{!422, !2532, !108}
!15041 = !{!15037, !15042}
!15042 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15038, file: !2637, line: 128, type: !108)
!15043 = !DILocation(line: 0, scope: !15038, inlinedAt: !15044)
!15044 = distinct !DILocation(line: 564, column: 6, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15020, file: !2637, line: 564, column: 6)
!15046 = !DILocation(line: 133, column: 17, scope: !15047, inlinedAt: !15044)
!15047 = distinct !DILexicalBlock(scope: !15038, file: !2637, line: 133, column: 6)
!15048 = !DILocation(line: 0, scope: !15045)
!15049 = !DILocation(line: 133, column: 6, scope: !15038, inlinedAt: !15044)
!15050 = !DILocation(line: 140, column: 6, scope: !15051, inlinedAt: !15044)
!15051 = distinct !DILexicalBlock(scope: !15038, file: !2637, line: 140, column: 6)
!15052 = !DILocation(line: 140, column: 6, scope: !15038, inlinedAt: !15044)
!15053 = !DILocation(line: 150, column: 9, scope: !15054, inlinedAt: !15044)
!15054 = distinct !DILexicalBlock(scope: !15038, file: !2637, line: 149, column: 6)
!15055 = !DILocation(line: 149, column: 6, scope: !15038, inlinedAt: !15044)
!15056 = !DILocation(line: 157, column: 6, scope: !15057, inlinedAt: !15044)
!15057 = distinct !DILexicalBlock(scope: !15038, file: !2637, line: 157, column: 6)
!15058 = !DILocation(line: 564, column: 6, scope: !15020)
!15059 = !DILocation(line: 566, column: 14, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15061, file: !2637, line: 566, column: 7)
!15061 = distinct !DILexicalBlock(scope: !15045, file: !2637, line: 564, column: 42)
!15062 = !DILocation(line: 566, column: 7, scope: !15061)
!15063 = !DILocation(line: 567, column: 4, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15060, file: !2637, line: 566, column: 27)
!15065 = !DILocation(line: 568, column: 3, scope: !15064)
!15066 = !DILocation(line: 585, column: 1, scope: !15020)
!15067 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2637, file: !2637, line: 1144, type: !15068, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15070)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{!2532, !14922}
!15070 = !{!15071, !15072, !15073}
!15071 = !DILocalVariable(name: "pq", arg: 1, scope: !15067, file: !2637, line: 1144, type: !14922)
!15072 = !DILocalVariable(name: "thread", scope: !15067, file: !2637, line: 1146, type: !2532)
!15073 = !DILocalVariable(name: "n", scope: !15067, file: !2637, line: 1147, type: !2633)
!15074 = !DILocation(line: 0, scope: !15067)
!15075 = !DILocation(line: 1147, column: 19, scope: !15067)
!15076 = !DILocation(line: 1152, column: 2, scope: !15067)
!15077 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13996, file: !13996, line: 115, type: !14837, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15078)
!15078 = !{!15079}
!15079 = !DILocalVariable(name: "thread", arg: 1, scope: !15077, file: !13996, line: 115, type: !2532)
!15080 = !DILocation(line: 0, scope: !15077)
!15081 = !DILocation(line: 117, column: 46, scope: !15077)
!15082 = !DILocation(line: 117, column: 10, scope: !15077)
!15083 = !DILocation(line: 117, column: 9, scope: !15077)
!15084 = !DILocation(line: 117, column: 2, scope: !15077)
!15085 = distinct !DISubprogram(name: "is_preempt", scope: !2637, file: !2637, line: 62, type: !14695, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15086)
!15086 = !{!15087}
!15087 = !DILocalVariable(name: "thread", arg: 1, scope: !15085, file: !2637, line: 62, type: !2532)
!15088 = !DILocation(line: 0, scope: !15085)
!15089 = !DILocation(line: 65, column: 22, scope: !15085)
!15090 = !DILocation(line: 65, column: 30, scope: !15085)
!15091 = !DILocation(line: 65, column: 2, scope: !15085)
!15092 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14390, file: !14390, line: 35, type: !15093, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15097)
!15093 = !DISubroutineType(types: !15094)
!15094 = !{!422, !15095}
!15095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15096, size: 32)
!15096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2583)
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "to", arg: 1, scope: !15092, file: !14390, line: 35, type: !15095)
!15099 = !DILocation(line: 0, scope: !15092)
!15100 = !DILocation(line: 37, column: 35, scope: !15092)
!15101 = !DILocation(line: 37, column: 10, scope: !15092)
!15102 = !DILocation(line: 37, column: 9, scope: !15092)
!15103 = !DILocation(line: 37, column: 2, scope: !15092)
!15104 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !15105, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15109)
!15105 = !DISubroutineType(types: !15106)
!15106 = !{!422, !15107}
!15107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15108, size: 32)
!15108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2542)
!15109 = !{!15110}
!15110 = !DILocalVariable(name: "node", arg: 1, scope: !15104, file: !367, line: 225, type: !15107)
!15111 = !DILocation(line: 0, scope: !15104)
!15112 = !DILocation(line: 227, column: 15, scope: !15104)
!15113 = !DILocation(line: 227, column: 20, scope: !15104)
!15114 = !DILocation(line: 227, column: 2, scope: !15104)
!15115 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !14993, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15116)
!15116 = !{!15117, !15118}
!15117 = !DILocalVariable(name: "list", arg: 1, scope: !15115, file: !367, line: 325, type: !14922)
!15118 = !DILocalVariable(name: "node", arg: 2, scope: !15115, file: !367, line: 326, type: !2633)
!15119 = !DILocation(line: 0, scope: !15115)
!15120 = !DILocation(line: 328, column: 24, scope: !15115)
!15121 = !DILocation(line: 328, column: 15, scope: !15115)
!15122 = !DILocation(line: 328, column: 9, scope: !15115)
!15123 = !DILocation(line: 328, column: 45, scope: !15115)
!15124 = !DILocation(line: 328, column: 2, scope: !15115)
!15125 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !15126, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15128)
!15126 = !DISubroutineType(types: !15127)
!15127 = !{!422, !14922}
!15128 = !{!15129}
!15129 = !DILocalVariable(name: "list", arg: 1, scope: !15125, file: !367, line: 266, type: !14922)
!15130 = !DILocation(line: 0, scope: !15125)
!15131 = !DILocation(line: 268, column: 15, scope: !15125)
!15132 = !DILocation(line: 268, column: 20, scope: !15125)
!15133 = !DILocation(line: 268, column: 2, scope: !15125)
!15134 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !15135, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15137)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{null, !2633}
!15137 = !{!15138, !15139, !15140}
!15138 = !DILocalVariable(name: "node", arg: 1, scope: !15134, file: !367, line: 496, type: !2633)
!15139 = !DILocalVariable(name: "prev", scope: !15134, file: !367, line: 498, type: !14981)
!15140 = !DILocalVariable(name: "next", scope: !15134, file: !367, line: 499, type: !14981)
!15141 = !DILocation(line: 0, scope: !15134)
!15142 = !DILocation(line: 498, column: 34, scope: !15134)
!15143 = !DILocation(line: 499, column: 34, scope: !15134)
!15144 = !DILocation(line: 501, column: 8, scope: !15134)
!15145 = !DILocation(line: 501, column: 13, scope: !15134)
!15146 = !DILocation(line: 502, column: 8, scope: !15134)
!15147 = !DILocation(line: 502, column: 13, scope: !15134)
!15148 = !DILocation(line: 503, column: 2, scope: !15134)
!15149 = !DILocation(line: 504, column: 1, scope: !15134)
!15150 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !15135, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15151)
!15151 = !{!15152}
!15152 = !DILocalVariable(name: "node", arg: 1, scope: !15150, file: !367, line: 211, type: !2633)
!15153 = !DILocation(line: 0, scope: !15150)
!15154 = !DILocation(line: 213, column: 8, scope: !15150)
!15155 = !DILocation(line: 213, column: 13, scope: !15150)
!15156 = !DILocation(line: 214, column: 8, scope: !15150)
!15157 = !DILocation(line: 214, column: 13, scope: !15150)
!15158 = !DILocation(line: 215, column: 1, scope: !15150)
!15159 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13996, file: !13996, line: 131, type: !15160, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15162)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{!422, !2532, !113}
!15162 = !{!15163, !15164}
!15163 = !DILocalVariable(name: "thread", arg: 1, scope: !15159, file: !13996, line: 131, type: !2532)
!15164 = !DILocalVariable(name: "state", arg: 2, scope: !15159, file: !13996, line: 131, type: !113)
!15165 = !DILocation(line: 0, scope: !15159)
!15166 = !DILocation(line: 133, column: 23, scope: !15159)
!15167 = !DILocation(line: 133, column: 45, scope: !15159)
!15168 = !DILocation(line: 133, column: 2, scope: !15159)
!15169 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13996, file: !13996, line: 211, type: !15170, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15172)
!15170 = !DISubroutineType(types: !15171)
!15171 = !{!422, !108, !108}
!15172 = !{!15173, !15174}
!15173 = !DILocalVariable(name: "prio", arg: 1, scope: !15169, file: !13996, line: 211, type: !108)
!15174 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15169, file: !13996, line: 211, type: !108)
!15175 = !DILocation(line: 0, scope: !15169)
!15176 = !DILocation(line: 213, column: 9, scope: !15169)
!15177 = !DILocation(line: 213, column: 2, scope: !15169)
!15178 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13996, file: !13996, line: 83, type: !14837, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15179)
!15179 = !{!15180}
!15180 = !DILocalVariable(name: "thread", arg: 1, scope: !15178, file: !13996, line: 83, type: !2532)
!15181 = !DILocation(line: 0, scope: !15178)
!15182 = !DILocation(line: 89, column: 16, scope: !15178)
!15183 = !DILocation(line: 89, column: 2, scope: !15178)
!15184 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13996, file: !13996, line: 206, type: !15170, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15185)
!15185 = !{!15186, !15187}
!15186 = !DILocalVariable(name: "prio1", arg: 1, scope: !15184, file: !13996, line: 206, type: !108)
!15187 = !DILocalVariable(name: "prio2", arg: 2, scope: !15184, file: !13996, line: 206, type: !108)
!15188 = !DILocation(line: 0, scope: !15184)
!15189 = !DILocation(line: 208, column: 15, scope: !15184)
!15190 = !DILocation(line: 208, column: 2, scope: !15184)
!15191 = distinct !DISubprogram(name: "z_ready_thread", scope: !2637, file: !2637, line: 635, type: !14677, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15192)
!15192 = !{!15193, !15194, !15196}
!15193 = !DILocalVariable(name: "thread", arg: 1, scope: !15191, file: !2637, line: 635, type: !2532)
!15194 = !DILocalVariable(name: "__i", scope: !15195, file: !2637, line: 637, type: !14711)
!15195 = distinct !DILexicalBlock(scope: !15191, file: !2637, line: 637, column: 2)
!15196 = !DILocalVariable(name: "__key", scope: !15195, file: !2637, line: 637, type: !14711)
!15197 = !DILocation(line: 0, scope: !15191)
!15198 = !DILocation(line: 0, scope: !15195)
!15199 = !DILocation(line: 0, scope: !14719, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 637, column: 2, scope: !15195)
!15201 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15200)
!15203 = !DILocation(line: 0, scope: !14728, inlinedAt: !15202)
!15204 = !DILocation(line: 639, column: 4, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2637, line: 638, column: 41)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !2637, line: 638, column: 7)
!15207 = distinct !DILexicalBlock(scope: !15208, file: !2637, line: 637, column: 26)
!15208 = distinct !DILexicalBlock(scope: !15195, file: !2637, line: 637, column: 2)
!15209 = !DILocation(line: 0, scope: !14746, inlinedAt: !15210)
!15210 = distinct !DILocation(line: 637, column: 2, scope: !15208)
!15211 = !DILocation(line: 0, scope: !14754, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15210)
!15213 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15212)
!15214 = !DILocation(line: 642, column: 1, scope: !15191)
!15215 = distinct !DISubprogram(name: "ready_thread", scope: !2637, file: !2637, line: 617, type: !14677, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15216)
!15216 = !{!15217}
!15217 = !DILocalVariable(name: "thread", arg: 1, scope: !15215, file: !2637, line: 617, type: !2532)
!15218 = !DILocation(line: 0, scope: !15215)
!15219 = !DILocation(line: 626, column: 7, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15215, file: !2637, line: 626, column: 6)
!15221 = !DILocation(line: 626, column: 34, scope: !15220)
!15222 = !DILocation(line: 626, column: 37, scope: !15220)
!15223 = !DILocation(line: 626, column: 6, scope: !15215)
!15224 = !DILocation(line: 0, scope: !14905, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 629, column: 3, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15220, file: !2637, line: 626, column: 64)
!15227 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !15225)
!15228 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !15225)
!15229 = !DILocation(line: 0, scope: !14912, inlinedAt: !15230)
!15230 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !15225)
!15231 = !DILocation(line: 0, scope: !14919, inlinedAt: !15232)
!15232 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !15230)
!15233 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !15232)
!15234 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !15232)
!15235 = !DILocation(line: 0, scope: !14929, inlinedAt: !15232)
!15236 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15232)
!15237 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !15232)
!15238 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !15232)
!15239 = !DILocation(line: 191, column: 21, scope: !14939, inlinedAt: !15232)
!15240 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !15232)
!15241 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !15232)
!15242 = distinct !{!15242, !15233, !15243}
!15243 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !15232)
!15244 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !15232)
!15245 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !15232)
!15246 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !15232)
!15247 = !DILocation(line: 630, column: 3, scope: !15226)
!15248 = !DILocation(line: 632, column: 2, scope: !15226)
!15249 = !DILocation(line: 633, column: 1, scope: !15215)
!15250 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13996, file: !13996, line: 120, type: !14837, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15251)
!15251 = !{!15252}
!15252 = !DILocalVariable(name: "thread", arg: 1, scope: !15250, file: !13996, line: 120, type: !2532)
!15253 = !DILocation(line: 0, scope: !15250)
!15254 = !DILocation(line: 122, column: 12, scope: !15250)
!15255 = !DILocation(line: 122, column: 62, scope: !15250)
!15256 = !DILocation(line: 123, column: 4, scope: !15250)
!15257 = !DILocation(line: 122, column: 2, scope: !15250)
!15258 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2637, file: !2637, line: 644, type: !14677, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15259)
!15259 = !{!15260, !15261, !15263}
!15260 = !DILocalVariable(name: "thread", arg: 1, scope: !15258, file: !2637, line: 644, type: !2532)
!15261 = !DILocalVariable(name: "__i", scope: !15262, file: !2637, line: 646, type: !14711)
!15262 = distinct !DILexicalBlock(scope: !15258, file: !2637, line: 646, column: 2)
!15263 = !DILocalVariable(name: "__key", scope: !15262, file: !2637, line: 646, type: !14711)
!15264 = !DILocation(line: 0, scope: !15258)
!15265 = !DILocation(line: 0, scope: !15262)
!15266 = !DILocation(line: 0, scope: !14719, inlinedAt: !15267)
!15267 = distinct !DILocation(line: 646, column: 2, scope: !15262)
!15268 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15267)
!15270 = !DILocation(line: 0, scope: !14728, inlinedAt: !15269)
!15271 = !DILocation(line: 647, column: 3, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15273, file: !2637, line: 646, column: 26)
!15273 = distinct !DILexicalBlock(scope: !15262, file: !2637, line: 646, column: 2)
!15274 = !DILocation(line: 0, scope: !14746, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 646, column: 2, scope: !15273)
!15276 = !DILocation(line: 0, scope: !14754, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15275)
!15278 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15277)
!15279 = !DILocation(line: 649, column: 1, scope: !15258)
!15280 = distinct !DISubprogram(name: "z_sched_start", scope: !2637, file: !2637, line: 651, type: !14677, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15281)
!15281 = !{!15282, !15283}
!15282 = !DILocalVariable(name: "thread", arg: 1, scope: !15280, file: !2637, line: 651, type: !2532)
!15283 = !DILocalVariable(name: "key", scope: !15280, file: !2637, line: 653, type: !14711)
!15284 = !DILocation(line: 0, scope: !15280)
!15285 = !DILocation(line: 0, scope: !14719, inlinedAt: !15286)
!15286 = distinct !DILocation(line: 653, column: 25, scope: !15280)
!15287 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15288)
!15288 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15286)
!15289 = !DILocation(line: 0, scope: !14728, inlinedAt: !15288)
!15290 = !DILocation(line: 655, column: 6, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15280, file: !2637, line: 655, column: 6)
!15292 = !DILocation(line: 655, column: 6, scope: !15280)
!15293 = !DILocation(line: 0, scope: !14746, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 656, column: 3, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15291, file: !2637, line: 655, column: 36)
!15296 = !DILocation(line: 0, scope: !14754, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15294)
!15298 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15297)
!15299 = !DILocation(line: 657, column: 3, scope: !15295)
!15300 = !DILocation(line: 660, column: 2, scope: !15280)
!15301 = !DILocation(line: 661, column: 2, scope: !15280)
!15302 = !DILocation(line: 662, column: 2, scope: !15280)
!15303 = !DILocation(line: 663, column: 1, scope: !15280)
!15304 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13996, file: !13996, line: 126, type: !14837, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15305)
!15305 = !{!15306}
!15306 = !DILocalVariable(name: "thread", arg: 1, scope: !15304, file: !13996, line: 126, type: !2532)
!15307 = !DILocation(line: 0, scope: !15304)
!15308 = !DILocation(line: 128, column: 23, scope: !15304)
!15309 = !DILocation(line: 128, column: 36, scope: !15304)
!15310 = !DILocation(line: 128, column: 56, scope: !15304)
!15311 = !DILocation(line: 128, column: 2, scope: !15304)
!15312 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13996, file: !13996, line: 155, type: !14677, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15313)
!15313 = !{!15314}
!15314 = !DILocalVariable(name: "thread", arg: 1, scope: !15312, file: !13996, line: 155, type: !2532)
!15315 = !DILocation(line: 0, scope: !15312)
!15316 = !DILocation(line: 157, column: 15, scope: !15312)
!15317 = !DILocation(line: 157, column: 28, scope: !15312)
!15318 = !DILocation(line: 158, column: 1, scope: !15312)
!15319 = distinct !DISubprogram(name: "z_reschedule", scope: !2637, file: !2637, line: 967, type: !14747, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15320)
!15320 = !{!15321, !15322}
!15321 = !DILocalVariable(name: "lock", arg: 1, scope: !15319, file: !2637, line: 967, type: !14722)
!15322 = !DILocalVariable(name: "key", arg: 2, scope: !15319, file: !2637, line: 967, type: !14711)
!15323 = !DILocation(line: 0, scope: !15319)
!15324 = !DILocation(line: 969, column: 6, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15319, file: !2637, line: 969, column: 6)
!15326 = !DILocation(line: 969, column: 23, scope: !15325)
!15327 = !DILocation(line: 969, column: 26, scope: !15325)
!15328 = !DILocation(line: 969, column: 6, scope: !15319)
!15329 = !DILocalVariable(name: "key", arg: 2, scope: !15330, file: !14100, line: 193, type: !14711)
!15330 = distinct !DISubprogram(name: "z_swap", scope: !14100, file: !14100, line: 193, type: !15331, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15333)
!15331 = !DISubroutineType(types: !15332)
!15332 = !{!108, !14722, !14711}
!15333 = !{!15334, !15329}
!15334 = !DILocalVariable(name: "lock", arg: 1, scope: !15330, file: !14100, line: 193, type: !14722)
!15335 = !DILocation(line: 0, scope: !15330, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 970, column: 3, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15325, file: !2637, line: 969, column: 39)
!15338 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !15336)
!15339 = !DILocation(line: 971, column: 2, scope: !15337)
!15340 = !DILocation(line: 0, scope: !14746, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 972, column: 3, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15325, file: !2637, line: 971, column: 9)
!15343 = !DILocation(line: 0, scope: !14754, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15341)
!15345 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15344)
!15346 = !DILocation(line: 975, column: 1, scope: !15319)
!15347 = distinct !DISubprogram(name: "resched", scope: !2637, file: !2637, line: 940, type: !15348, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15350)
!15348 = !DISubroutineType(types: !15349)
!15349 = !{!422, !113}
!15350 = !{!15351}
!15351 = !DILocalVariable(name: "key", arg: 1, scope: !15347, file: !2637, line: 940, type: !113)
!15352 = !DILocation(line: 0, scope: !15347)
!15353 = !DILocalVariable(name: "key", arg: 1, scope: !15354, file: !4063, line: 112, type: !32)
!15354 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4063, file: !4063, line: 112, type: !15355, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15357)
!15355 = !DISubroutineType(types: !15356)
!15356 = !{!422, !32}
!15357 = !{!15353}
!15358 = !DILocation(line: 0, scope: !15354, inlinedAt: !15359)
!15359 = distinct !DILocation(line: 946, column: 9, scope: !15347)
!15360 = !DILocation(line: 115, column: 13, scope: !15354, inlinedAt: !15359)
!15361 = !DILocation(line: 946, column: 32, scope: !15347)
!15362 = !DILocation(line: 1031, column: 3, scope: !15363, inlinedAt: !15366)
!15363 = distinct !DISubprogram(name: "__get_IPSR", scope: !7029, file: !7029, line: 1027, type: !7110, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15364)
!15364 = !{!15365}
!15365 = !DILocalVariable(name: "result", scope: !15363, file: !7029, line: 1029, type: !113)
!15366 = distinct !DILocation(line: 48, column: 10, scope: !15367, inlinedAt: !15368)
!15367 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8047, file: !8047, line: 46, type: !8048, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!15368 = distinct !DILocation(line: 946, column: 36, scope: !15347)
!15369 = !{i64 2887279}
!15370 = !DILocation(line: 0, scope: !15363, inlinedAt: !15366)
!15371 = !DILocation(line: 48, column: 9, scope: !15367, inlinedAt: !15368)
!15372 = !DILocation(line: 946, column: 2, scope: !15347)
!15373 = distinct !DISubprogram(name: "need_swap", scope: !2637, file: !2637, line: 953, type: !8048, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15374)
!15374 = !{!15375}
!15375 = !DILocalVariable(name: "new_thread", scope: !15373, file: !2637, line: 959, type: !2532)
!15376 = !DILocation(line: 962, column: 31, scope: !15373)
!15377 = !DILocation(line: 0, scope: !15373)
!15378 = !DILocation(line: 963, column: 23, scope: !15373)
!15379 = !DILocation(line: 963, column: 20, scope: !15373)
!15380 = !DILocation(line: 963, column: 2, scope: !15373)
!15381 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14100, file: !14100, line: 181, type: !7039, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15382)
!15382 = !{!15383, !15384}
!15383 = !DILocalVariable(name: "key", arg: 1, scope: !15381, file: !14100, line: 181, type: !32)
!15384 = !DILocalVariable(name: "ret", scope: !15381, file: !14100, line: 183, type: !108)
!15385 = !DILocation(line: 0, scope: !15381)
!15386 = !DILocation(line: 185, column: 8, scope: !15381)
!15387 = !DILocation(line: 186, column: 2, scope: !15381)
!15388 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2637, file: !2637, line: 665, type: !14677, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15389)
!15389 = !{!15390, !15391, !15393}
!15390 = !DILocalVariable(name: "thread", arg: 1, scope: !15388, file: !2637, line: 665, type: !2532)
!15391 = !DILocalVariable(name: "__i", scope: !15392, file: !2637, line: 671, type: !14711)
!15392 = distinct !DILexicalBlock(scope: !15388, file: !2637, line: 671, column: 2)
!15393 = !DILocalVariable(name: "__key", scope: !15392, file: !2637, line: 671, type: !14711)
!15394 = !DILocation(line: 0, scope: !15388)
!15395 = !DILocation(line: 669, column: 8, scope: !15388)
!15396 = !DILocation(line: 0, scope: !15392)
!15397 = !DILocation(line: 0, scope: !14719, inlinedAt: !15398)
!15398 = distinct !DILocation(line: 671, column: 2, scope: !15392)
!15399 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15400)
!15400 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15398)
!15401 = !DILocation(line: 0, scope: !14728, inlinedAt: !15400)
!15402 = !DILocation(line: 672, column: 7, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15404, file: !2637, line: 672, column: 7)
!15404 = distinct !DILexicalBlock(scope: !15405, file: !2637, line: 671, column: 26)
!15405 = distinct !DILexicalBlock(scope: !15392, file: !2637, line: 671, column: 2)
!15406 = !DILocation(line: 672, column: 7, scope: !15404)
!15407 = !DILocation(line: 0, scope: !14888, inlinedAt: !15408)
!15408 = distinct !DILocation(line: 673, column: 4, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15403, file: !2637, line: 672, column: 35)
!15410 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !15408)
!15411 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !15408)
!15412 = !DILocation(line: 0, scope: !14896, inlinedAt: !15413)
!15413 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !15408)
!15414 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !15413)
!15415 = !DILocation(line: 674, column: 3, scope: !15409)
!15416 = !DILocation(line: 675, column: 3, scope: !15404)
!15417 = !DILocation(line: 676, column: 26, scope: !15404)
!15418 = !DILocation(line: 676, column: 23, scope: !15404)
!15419 = !DILocation(line: 676, column: 3, scope: !15404)
!15420 = !DILocation(line: 0, scope: !14746, inlinedAt: !15421)
!15421 = distinct !DILocation(line: 671, column: 2, scope: !15405)
!15422 = !DILocation(line: 0, scope: !14754, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15421)
!15424 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15423)
!15425 = !DILocation(line: 679, column: 16, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15388, file: !2637, line: 679, column: 6)
!15427 = !DILocation(line: 679, column: 13, scope: !15426)
!15428 = !DILocation(line: 679, column: 6, scope: !15388)
!15429 = !DILocation(line: 680, column: 3, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15426, file: !2637, line: 679, column: 26)
!15431 = !DILocation(line: 681, column: 2, scope: !15430)
!15432 = !DILocation(line: 684, column: 1, scope: !15388)
!15433 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14390, file: !14390, line: 52, type: !14695, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15434)
!15434 = !{!15435}
!15435 = !DILocalVariable(name: "thread", arg: 1, scope: !15433, file: !14390, line: 52, type: !2532)
!15436 = !DILocation(line: 0, scope: !15433)
!15437 = !DILocation(line: 54, column: 39, scope: !15433)
!15438 = !DILocation(line: 54, column: 9, scope: !15433)
!15439 = !DILocation(line: 54, column: 2, scope: !15433)
!15440 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13996, file: !13996, line: 141, type: !14677, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15441)
!15441 = !{!15442}
!15442 = !DILocalVariable(name: "thread", arg: 1, scope: !15440, file: !13996, line: 141, type: !2532)
!15443 = !DILocation(line: 0, scope: !15440)
!15444 = !DILocation(line: 143, column: 15, scope: !15440)
!15445 = !DILocation(line: 143, column: 28, scope: !15440)
!15446 = !DILocation(line: 146, column: 1, scope: !15440)
!15447 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13996, file: !13996, line: 73, type: !3389, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!15448 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15449)
!15449 = distinct !DILocation(line: 75, column: 30, scope: !15447)
!15450 = !DILocation(line: 0, scope: !14728, inlinedAt: !15449)
!15451 = !DILocation(line: 75, column: 9, scope: !15447)
!15452 = !DILocation(line: 76, column: 1, scope: !15447)
!15453 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2637, file: !2637, line: 977, type: !7120, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15454)
!15454 = !{!15455}
!15455 = !DILocalVariable(name: "key", arg: 1, scope: !15453, file: !2637, line: 977, type: !113)
!15456 = !DILocation(line: 0, scope: !15453)
!15457 = !DILocation(line: 979, column: 6, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15453, file: !2637, line: 979, column: 6)
!15459 = !DILocation(line: 979, column: 6, scope: !15453)
!15460 = !DILocation(line: 980, column: 3, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15458, file: !2637, line: 979, column: 20)
!15462 = !DILocation(line: 981, column: 2, scope: !15461)
!15463 = !DILocation(line: 0, scope: !14754, inlinedAt: !15464)
!15464 = distinct !DILocation(line: 982, column: 3, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15458, file: !2637, line: 981, column: 9)
!15466 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15464)
!15467 = !DILocation(line: 985, column: 1, scope: !15453)
!15468 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2637, file: !2637, line: 695, type: !14677, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15469)
!15469 = !{!15470, !15471}
!15470 = !DILocalVariable(name: "thread", arg: 1, scope: !15468, file: !2637, line: 695, type: !2532)
!15471 = !DILocalVariable(name: "key", scope: !15468, file: !2637, line: 699, type: !14711)
!15472 = !DILocation(line: 0, scope: !15468)
!15473 = !DILocation(line: 0, scope: !14719, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 699, column: 25, scope: !15468)
!15475 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15474)
!15477 = !DILocation(line: 0, scope: !14728, inlinedAt: !15476)
!15478 = !DILocation(line: 702, column: 7, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15468, file: !2637, line: 702, column: 6)
!15480 = !DILocation(line: 702, column: 6, scope: !15468)
!15481 = !DILocation(line: 0, scope: !14746, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 703, column: 3, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15479, file: !2637, line: 702, column: 38)
!15484 = !DILocation(line: 0, scope: !14754, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15482)
!15486 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15485)
!15487 = !DILocation(line: 704, column: 3, scope: !15483)
!15488 = !DILocation(line: 707, column: 2, scope: !15468)
!15489 = !DILocation(line: 708, column: 2, scope: !15468)
!15490 = !DILocation(line: 710, column: 2, scope: !15468)
!15491 = !DILocation(line: 713, column: 1, scope: !15468)
!15492 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13996, file: !13996, line: 96, type: !14837, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15493)
!15493 = !{!15494}
!15494 = !DILocalVariable(name: "thread", arg: 1, scope: !15492, file: !13996, line: 96, type: !2532)
!15495 = !DILocation(line: 0, scope: !15492)
!15496 = !DILocation(line: 98, column: 23, scope: !15492)
!15497 = !DILocation(line: 98, column: 36, scope: !15492)
!15498 = !DILocation(line: 98, column: 57, scope: !15492)
!15499 = !DILocation(line: 98, column: 2, scope: !15492)
!15500 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13996, file: !13996, line: 148, type: !14677, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15501)
!15501 = !{!15502}
!15502 = !DILocalVariable(name: "thread", arg: 1, scope: !15500, file: !13996, line: 148, type: !2532)
!15503 = !DILocation(line: 0, scope: !15500)
!15504 = !DILocation(line: 150, column: 15, scope: !15500)
!15505 = !DILocation(line: 150, column: 28, scope: !15500)
!15506 = !DILocation(line: 153, column: 1, scope: !15500)
!15507 = distinct !DISubprogram(name: "z_pend_thread", scope: !2637, file: !2637, line: 770, type: !15508, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15514)
!15508 = !DISubroutineType(types: !15509)
!15509 = !{null, !2532, !2563, !15510}
!15510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !15511)
!15511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !15512)
!15512 = !{!15513}
!15513 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15511, file: !110, line: 66, baseType: !109, size: 64)
!15514 = !{!15515, !15516, !15517, !15518, !15520}
!15515 = !DILocalVariable(name: "thread", arg: 1, scope: !15507, file: !2637, line: 770, type: !2532)
!15516 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15507, file: !2637, line: 770, type: !2563)
!15517 = !DILocalVariable(name: "timeout", arg: 3, scope: !15507, file: !2637, line: 771, type: !15510)
!15518 = !DILocalVariable(name: "__i", scope: !15519, file: !2637, line: 774, type: !14711)
!15519 = distinct !DILexicalBlock(scope: !15507, file: !2637, line: 774, column: 2)
!15520 = !DILocalVariable(name: "__key", scope: !15519, file: !2637, line: 774, type: !14711)
!15521 = !DILocation(line: 0, scope: !15507)
!15522 = !DILocation(line: 0, scope: !15519)
!15523 = !DILocation(line: 0, scope: !14719, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 774, column: 2, scope: !15519)
!15525 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15524)
!15527 = !DILocation(line: 0, scope: !14728, inlinedAt: !15526)
!15528 = !DILocation(line: 775, column: 3, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !2637, line: 774, column: 26)
!15530 = distinct !DILexicalBlock(scope: !15519, file: !2637, line: 774, column: 2)
!15531 = !DILocation(line: 0, scope: !14746, inlinedAt: !15532)
!15532 = distinct !DILocation(line: 774, column: 2, scope: !15530)
!15533 = !DILocation(line: 0, scope: !14754, inlinedAt: !15534)
!15534 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15532)
!15535 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15534)
!15536 = !DILocation(line: 777, column: 1, scope: !15507)
!15537 = distinct !DISubprogram(name: "pend_locked", scope: !2637, file: !2637, line: 760, type: !15508, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15538)
!15538 = !{!15539, !15540, !15541}
!15539 = !DILocalVariable(name: "thread", arg: 1, scope: !15537, file: !2637, line: 760, type: !2532)
!15540 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15537, file: !2637, line: 760, type: !2563)
!15541 = !DILocalVariable(name: "timeout", arg: 3, scope: !15537, file: !2637, line: 761, type: !15510)
!15542 = !DILocation(line: 0, scope: !15537)
!15543 = !DILocation(line: 766, column: 2, scope: !15537)
!15544 = !DILocation(line: 767, column: 2, scope: !15537)
!15545 = !DILocation(line: 768, column: 1, scope: !15537)
!15546 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2637, file: !2637, line: 740, type: !15547, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15549)
!15547 = !DISubroutineType(types: !15548)
!15548 = !{null, !2532, !2563}
!15549 = !{!15550, !15551}
!15550 = !DILocalVariable(name: "thread", arg: 1, scope: !15546, file: !2637, line: 740, type: !2532)
!15551 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15546, file: !2637, line: 740, type: !2563)
!15552 = !DILocation(line: 0, scope: !15546)
!15553 = !DILocation(line: 742, column: 2, scope: !15546)
!15554 = !DILocation(line: 743, column: 2, scope: !15546)
!15555 = !DILocation(line: 747, column: 13, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15546, file: !2637, line: 747, column: 6)
!15557 = !DILocation(line: 747, column: 6, scope: !15546)
!15558 = !DILocation(line: 748, column: 16, scope: !15559)
!15559 = distinct !DILexicalBlock(scope: !15556, file: !2637, line: 747, column: 22)
!15560 = !DILocation(line: 748, column: 26, scope: !15559)
!15561 = !DILocation(line: 749, column: 28, scope: !15559)
!15562 = !DILocation(line: 0, scope: !14919, inlinedAt: !15563)
!15563 = distinct !DILocation(line: 749, column: 3, scope: !15559)
!15564 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !15563)
!15565 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !15563)
!15566 = !DILocation(line: 0, scope: !14929, inlinedAt: !15563)
!15567 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15563)
!15568 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !15563)
!15569 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !15563)
!15570 = !DILocation(line: 191, column: 21, scope: !14939, inlinedAt: !15563)
!15571 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !15563)
!15572 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !15563)
!15573 = distinct !{!15573, !15564, !15574}
!15574 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !15563)
!15575 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !15563)
!15576 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !15563)
!15577 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !15563)
!15578 = !DILocation(line: 751, column: 1, scope: !15546)
!15579 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2637, file: !2637, line: 753, type: !15580, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15582)
!15580 = !DISubroutineType(types: !15581)
!15581 = !{null, !2532, !15510}
!15582 = !{!15583, !15584}
!15583 = !DILocalVariable(name: "thread", arg: 1, scope: !15579, file: !2637, line: 753, type: !2532)
!15584 = !DILocalVariable(name: "timeout", arg: 2, scope: !15579, file: !2637, line: 753, type: !15510)
!15585 = !DILocation(line: 0, scope: !15579)
!15586 = !DILocation(line: 755, column: 7, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15579, file: !2637, line: 755, column: 6)
!15588 = !DILocation(line: 755, column: 6, scope: !15579)
!15589 = !DILocation(line: 756, column: 3, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15587, file: !2637, line: 755, column: 41)
!15591 = !DILocation(line: 757, column: 2, scope: !15590)
!15592 = !DILocation(line: 758, column: 1, scope: !15579)
!15593 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14390, file: !14390, line: 47, type: !15580, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15594)
!15594 = !{!15595, !15596}
!15595 = !DILocalVariable(name: "thread", arg: 1, scope: !15593, file: !14390, line: 47, type: !2532)
!15596 = !DILocalVariable(name: "ticks", arg: 2, scope: !15593, file: !14390, line: 47, type: !15510)
!15597 = !DILocation(line: 0, scope: !15593)
!15598 = !DILocation(line: 49, column: 30, scope: !15593)
!15599 = !DILocation(line: 49, column: 2, scope: !15593)
!15600 = !DILocation(line: 50, column: 1, scope: !15593)
!15601 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2637, file: !2637, line: 795, type: !2589, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15602)
!15602 = !{!15603, !15604, !15605, !15607, !15608}
!15603 = !DILocalVariable(name: "timeout", arg: 1, scope: !15601, file: !2637, line: 795, type: !2591)
!15604 = !DILocalVariable(name: "thread", scope: !15601, file: !2637, line: 797, type: !2532)
!15605 = !DILocalVariable(name: "__i", scope: !15606, file: !2637, line: 800, type: !14711)
!15606 = distinct !DILexicalBlock(scope: !15601, file: !2637, line: 800, column: 2)
!15607 = !DILocalVariable(name: "__key", scope: !15606, file: !2637, line: 800, type: !14711)
!15608 = !DILocalVariable(name: "killed", scope: !15609, file: !2637, line: 801, type: !422)
!15609 = distinct !DILexicalBlock(scope: !15610, file: !2637, line: 800, column: 26)
!15610 = distinct !DILexicalBlock(scope: !15606, file: !2637, line: 800, column: 2)
!15611 = !DILocation(line: 0, scope: !15601)
!15612 = !DILocation(line: 797, column: 28, scope: !15601)
!15613 = !DILocation(line: 0, scope: !15606)
!15614 = !DILocation(line: 0, scope: !14719, inlinedAt: !15615)
!15615 = distinct !DILocation(line: 800, column: 2, scope: !15606)
!15616 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15615)
!15618 = !DILocation(line: 0, scope: !14728, inlinedAt: !15617)
!15619 = !DILocation(line: 801, column: 27, scope: !15609)
!15620 = !DILocation(line: 801, column: 32, scope: !15609)
!15621 = !DILocation(line: 801, column: 61, scope: !15609)
!15622 = !DILocation(line: 0, scope: !15609)
!15623 = !DILocation(line: 804, column: 7, scope: !15609)
!15624 = !DILocation(line: 805, column: 21, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15626, file: !2637, line: 805, column: 8)
!15626 = distinct !DILexicalBlock(scope: !15627, file: !2637, line: 804, column: 16)
!15627 = distinct !DILexicalBlock(scope: !15609, file: !2637, line: 804, column: 7)
!15628 = !DILocation(line: 805, column: 31, scope: !15625)
!15629 = !DILocation(line: 805, column: 8, scope: !15626)
!15630 = !DILocation(line: 806, column: 5, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15625, file: !2637, line: 805, column: 40)
!15632 = !DILocation(line: 807, column: 4, scope: !15631)
!15633 = !DILocation(line: 808, column: 4, scope: !15626)
!15634 = !DILocation(line: 809, column: 4, scope: !15626)
!15635 = !DILocation(line: 810, column: 4, scope: !15626)
!15636 = !DILocation(line: 811, column: 3, scope: !15626)
!15637 = !DILocation(line: 0, scope: !14746, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 800, column: 2, scope: !15610)
!15639 = !DILocation(line: 0, scope: !14754, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15638)
!15641 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15640)
!15642 = !DILocation(line: 813, column: 1, scope: !15601)
!15643 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2637, file: !2637, line: 779, type: !14677, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15644)
!15644 = !{!15645}
!15645 = !DILocalVariable(name: "thread", arg: 1, scope: !15643, file: !2637, line: 779, type: !2532)
!15646 = !DILocation(line: 0, scope: !15643)
!15647 = !DILocation(line: 781, column: 2, scope: !15643)
!15648 = !DILocation(line: 782, column: 2, scope: !15643)
!15649 = !DILocation(line: 783, column: 15, scope: !15643)
!15650 = !DILocation(line: 783, column: 25, scope: !15643)
!15651 = !DILocation(line: 784, column: 1, scope: !15643)
!15652 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13996, file: !13996, line: 165, type: !14677, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15653)
!15653 = !{!15654}
!15654 = !DILocalVariable(name: "thread", arg: 1, scope: !15652, file: !13996, line: 165, type: !2532)
!15655 = !DILocation(line: 0, scope: !15652)
!15656 = !DILocation(line: 167, column: 15, scope: !15652)
!15657 = !DILocation(line: 167, column: 28, scope: !15652)
!15658 = !DILocation(line: 168, column: 1, scope: !15652)
!15659 = distinct !DISubprogram(name: "unready_thread", scope: !2637, file: !2637, line: 731, type: !14677, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15660)
!15660 = !{!15661}
!15661 = !DILocalVariable(name: "thread", arg: 1, scope: !15659, file: !2637, line: 731, type: !2532)
!15662 = !DILocation(line: 0, scope: !15659)
!15663 = !DILocation(line: 733, column: 6, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15659, file: !2637, line: 733, column: 6)
!15665 = !DILocation(line: 733, column: 6, scope: !15659)
!15666 = !DILocation(line: 0, scope: !14888, inlinedAt: !15667)
!15667 = distinct !DILocation(line: 734, column: 3, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15664, file: !2637, line: 733, column: 34)
!15669 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !15667)
!15670 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !15667)
!15671 = !DILocation(line: 0, scope: !14896, inlinedAt: !15672)
!15672 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !15667)
!15673 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !15672)
!15674 = !DILocation(line: 735, column: 2, scope: !15668)
!15675 = !DILocation(line: 736, column: 25, scope: !15659)
!15676 = !DILocation(line: 736, column: 22, scope: !15659)
!15677 = !DILocation(line: 736, column: 2, scope: !15659)
!15678 = !DILocation(line: 737, column: 1, scope: !15659)
!15679 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13996, file: !13996, line: 160, type: !14677, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15680)
!15680 = !{!15681}
!15681 = !DILocalVariable(name: "thread", arg: 1, scope: !15679, file: !13996, line: 160, type: !2532)
!15682 = !DILocation(line: 0, scope: !15679)
!15683 = !DILocation(line: 162, column: 15, scope: !15679)
!15684 = !DILocation(line: 162, column: 28, scope: !15679)
!15685 = !DILocation(line: 163, column: 1, scope: !15679)
!15686 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2637, file: !2637, line: 786, type: !14677, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15687)
!15687 = !{!15688, !15689, !15691}
!15688 = !DILocalVariable(name: "thread", arg: 1, scope: !15686, file: !2637, line: 786, type: !2532)
!15689 = !DILocalVariable(name: "__i", scope: !15690, file: !2637, line: 788, type: !14711)
!15690 = distinct !DILexicalBlock(scope: !15686, file: !2637, line: 788, column: 2)
!15691 = !DILocalVariable(name: "__key", scope: !15690, file: !2637, line: 788, type: !14711)
!15692 = !DILocation(line: 0, scope: !15686)
!15693 = !DILocation(line: 0, scope: !15690)
!15694 = !DILocation(line: 0, scope: !14719, inlinedAt: !15695)
!15695 = distinct !DILocation(line: 788, column: 2, scope: !15690)
!15696 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15695)
!15698 = !DILocation(line: 0, scope: !14728, inlinedAt: !15697)
!15699 = !DILocation(line: 789, column: 3, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15701, file: !2637, line: 788, column: 26)
!15701 = distinct !DILexicalBlock(scope: !15690, file: !2637, line: 788, column: 2)
!15702 = !DILocation(line: 0, scope: !14746, inlinedAt: !15703)
!15703 = distinct !DILocation(line: 788, column: 2, scope: !15701)
!15704 = !DILocation(line: 0, scope: !14754, inlinedAt: !15705)
!15705 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15703)
!15706 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15705)
!15707 = !DILocation(line: 791, column: 1, scope: !15686)
!15708 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2637, file: !2637, line: 816, type: !15709, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15711)
!15709 = !DISubroutineType(types: !15710)
!15710 = !{!108, !113, !2563, !15510}
!15711 = !{!15712, !15713, !15714, !15715, !15716, !15718}
!15712 = !DILocalVariable(name: "key", arg: 1, scope: !15708, file: !2637, line: 816, type: !113)
!15713 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15708, file: !2637, line: 816, type: !2563)
!15714 = !DILocalVariable(name: "timeout", arg: 3, scope: !15708, file: !2637, line: 816, type: !15510)
!15715 = !DILocalVariable(name: "ret", scope: !15708, file: !2637, line: 828, type: !108)
!15716 = !DILocalVariable(name: "__i", scope: !15717, file: !2637, line: 829, type: !14711)
!15717 = distinct !DILexicalBlock(scope: !15708, file: !2637, line: 829, column: 2)
!15718 = !DILocalVariable(name: "__key", scope: !15717, file: !2637, line: 829, type: !14711)
!15719 = !DILocation(line: 0, scope: !15708)
!15720 = !DILocation(line: 823, column: 14, scope: !15708)
!15721 = !DILocation(line: 823, column: 2, scope: !15708)
!15722 = !DILocation(line: 826, column: 20, scope: !15708)
!15723 = !DILocation(line: 826, column: 18, scope: !15708)
!15724 = !DILocation(line: 828, column: 12, scope: !15708)
!15725 = !DILocation(line: 0, scope: !15717)
!15726 = !DILocation(line: 0, scope: !14719, inlinedAt: !15727)
!15727 = distinct !DILocation(line: 829, column: 2, scope: !15717)
!15728 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15729)
!15729 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15727)
!15730 = !DILocation(line: 0, scope: !14728, inlinedAt: !15729)
!15731 = !DILocation(line: 830, column: 7, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15733, file: !2637, line: 830, column: 7)
!15733 = distinct !DILexicalBlock(scope: !15734, file: !2637, line: 829, column: 26)
!15734 = distinct !DILexicalBlock(scope: !15717, file: !2637, line: 829, column: 2)
!15735 = !DILocation(line: 830, column: 26, scope: !15732)
!15736 = !DILocation(line: 830, column: 23, scope: !15732)
!15737 = !DILocation(line: 830, column: 7, scope: !15733)
!15738 = !DILocation(line: 831, column: 20, scope: !15739)
!15739 = distinct !DILexicalBlock(scope: !15732, file: !2637, line: 830, column: 36)
!15740 = !DILocation(line: 832, column: 3, scope: !15739)
!15741 = !DILocation(line: 0, scope: !14746, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 829, column: 2, scope: !15734)
!15743 = !DILocation(line: 0, scope: !14754, inlinedAt: !15744)
!15744 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15742)
!15745 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15744)
!15746 = !DILocation(line: 834, column: 2, scope: !15708)
!15747 = distinct !DISubprogram(name: "z_pend_curr", scope: !2637, file: !2637, line: 840, type: !15748, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15750)
!15748 = !DISubroutineType(types: !15749)
!15749 = !{!108, !14722, !14711, !2563, !15510}
!15750 = !{!15751, !15752, !15753, !15754}
!15751 = !DILocalVariable(name: "lock", arg: 1, scope: !15747, file: !2637, line: 840, type: !14722)
!15752 = !DILocalVariable(name: "key", arg: 2, scope: !15747, file: !2637, line: 840, type: !14711)
!15753 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15747, file: !2637, line: 841, type: !2563)
!15754 = !DILocalVariable(name: "timeout", arg: 4, scope: !15747, file: !2637, line: 841, type: !15510)
!15755 = !DILocation(line: 0, scope: !15747)
!15756 = !DILocation(line: 844, column: 20, scope: !15747)
!15757 = !DILocation(line: 844, column: 18, scope: !15747)
!15758 = !DILocation(line: 0, scope: !14719, inlinedAt: !15759)
!15759 = distinct !DILocation(line: 856, column: 9, scope: !15747)
!15760 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15761)
!15761 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15759)
!15762 = !DILocation(line: 0, scope: !14728, inlinedAt: !15761)
!15763 = !DILocation(line: 857, column: 14, scope: !15747)
!15764 = !DILocation(line: 857, column: 2, scope: !15747)
!15765 = !DILocation(line: 0, scope: !15330, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 859, column: 9, scope: !15747)
!15767 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !15766)
!15768 = !DILocation(line: 859, column: 2, scope: !15747)
!15769 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2637, file: !2637, line: 862, type: !15770, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15772)
!15770 = !DISubroutineType(types: !15771)
!15771 = !{!2532, !2563}
!15772 = !{!15773, !15774, !15775, !15777}
!15773 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15769, file: !2637, line: 862, type: !2563)
!15774 = !DILocalVariable(name: "thread", scope: !15769, file: !2637, line: 864, type: !2532)
!15775 = !DILocalVariable(name: "__i", scope: !15776, file: !2637, line: 866, type: !14711)
!15776 = distinct !DILexicalBlock(scope: !15769, file: !2637, line: 866, column: 2)
!15777 = !DILocalVariable(name: "__key", scope: !15776, file: !2637, line: 866, type: !14711)
!15778 = !DILocation(line: 0, scope: !15769)
!15779 = !DILocation(line: 0, scope: !15776)
!15780 = !DILocation(line: 0, scope: !14719, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 866, column: 2, scope: !15776)
!15782 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15783)
!15783 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15781)
!15784 = !DILocation(line: 0, scope: !14728, inlinedAt: !15783)
!15785 = !DILocation(line: 867, column: 12, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15787, file: !2637, line: 866, column: 26)
!15787 = distinct !DILexicalBlock(scope: !15776, file: !2637, line: 866, column: 2)
!15788 = !DILocation(line: 869, column: 14, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15786, file: !2637, line: 869, column: 7)
!15790 = !DILocation(line: 869, column: 7, scope: !15786)
!15791 = !DILocation(line: 870, column: 4, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15789, file: !2637, line: 869, column: 23)
!15793 = !DILocation(line: 871, column: 3, scope: !15792)
!15794 = !DILocation(line: 0, scope: !14746, inlinedAt: !15795)
!15795 = distinct !DILocation(line: 866, column: 2, scope: !15787)
!15796 = !DILocation(line: 0, scope: !14754, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15795)
!15798 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15797)
!15799 = !DILocation(line: 874, column: 2, scope: !15769)
!15800 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2637, file: !2637, line: 877, type: !15770, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15801)
!15801 = !{!15802, !15803, !15804, !15806}
!15802 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15800, file: !2637, line: 877, type: !2563)
!15803 = !DILocalVariable(name: "thread", scope: !15800, file: !2637, line: 879, type: !2532)
!15804 = !DILocalVariable(name: "__i", scope: !15805, file: !2637, line: 881, type: !14711)
!15805 = distinct !DILexicalBlock(scope: !15800, file: !2637, line: 881, column: 2)
!15806 = !DILocalVariable(name: "__key", scope: !15805, file: !2637, line: 881, type: !14711)
!15807 = !DILocation(line: 0, scope: !15800)
!15808 = !DILocation(line: 0, scope: !15805)
!15809 = !DILocation(line: 0, scope: !14719, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 881, column: 2, scope: !15805)
!15811 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15810)
!15813 = !DILocation(line: 0, scope: !14728, inlinedAt: !15812)
!15814 = !DILocation(line: 882, column: 12, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15816, file: !2637, line: 881, column: 26)
!15816 = distinct !DILexicalBlock(scope: !15805, file: !2637, line: 881, column: 2)
!15817 = !DILocation(line: 884, column: 14, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15815, file: !2637, line: 884, column: 7)
!15819 = !DILocation(line: 884, column: 7, scope: !15815)
!15820 = !DILocation(line: 885, column: 4, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15818, file: !2637, line: 884, column: 23)
!15822 = !DILocation(line: 886, column: 10, scope: !15821)
!15823 = !DILocation(line: 887, column: 3, scope: !15821)
!15824 = !DILocation(line: 0, scope: !14746, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 881, column: 2, scope: !15816)
!15826 = !DILocation(line: 0, scope: !14754, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15825)
!15828 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15827)
!15829 = !DILocation(line: 890, column: 2, scope: !15800)
!15830 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2637, file: !2637, line: 893, type: !14677, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15831)
!15831 = !{!15832}
!15832 = !DILocalVariable(name: "thread", arg: 1, scope: !15830, file: !2637, line: 893, type: !2532)
!15833 = !DILocation(line: 0, scope: !15830)
!15834 = !DILocation(line: 0, scope: !15686, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 895, column: 2, scope: !15830)
!15836 = !DILocation(line: 0, scope: !15690, inlinedAt: !15835)
!15837 = !DILocation(line: 0, scope: !14719, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 788, column: 2, scope: !15690, inlinedAt: !15835)
!15839 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15840)
!15840 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15838)
!15841 = !DILocation(line: 0, scope: !14728, inlinedAt: !15840)
!15842 = !DILocation(line: 789, column: 3, scope: !15700, inlinedAt: !15835)
!15843 = !DILocation(line: 0, scope: !14746, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 788, column: 2, scope: !15701, inlinedAt: !15835)
!15845 = !DILocation(line: 0, scope: !14754, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15844)
!15847 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15846)
!15848 = !DILocation(line: 896, column: 8, scope: !15830)
!15849 = !DILocation(line: 897, column: 1, scope: !15830)
!15850 = distinct !DISubprogram(name: "z_set_prio", scope: !2637, file: !2637, line: 902, type: !15039, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15851)
!15851 = !{!15852, !15853, !15854, !15855, !15857}
!15852 = !DILocalVariable(name: "thread", arg: 1, scope: !15850, file: !2637, line: 902, type: !2532)
!15853 = !DILocalVariable(name: "prio", arg: 2, scope: !15850, file: !2637, line: 902, type: !108)
!15854 = !DILocalVariable(name: "need_sched", scope: !15850, file: !2637, line: 904, type: !422)
!15855 = !DILocalVariable(name: "__i", scope: !15856, file: !2637, line: 906, type: !14711)
!15856 = distinct !DILexicalBlock(scope: !15850, file: !2637, line: 906, column: 2)
!15857 = !DILocalVariable(name: "__key", scope: !15856, file: !2637, line: 906, type: !14711)
!15858 = !DILocation(line: 0, scope: !15850)
!15859 = !DILocation(line: 0, scope: !15856)
!15860 = !DILocation(line: 0, scope: !14719, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 906, column: 2, scope: !15856)
!15862 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15861)
!15864 = !DILocation(line: 0, scope: !14728, inlinedAt: !15863)
!15865 = !DILocation(line: 907, column: 16, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15867, file: !2637, line: 906, column: 26)
!15867 = distinct !DILexicalBlock(scope: !15856, file: !2637, line: 906, column: 2)
!15868 = !DILocation(line: 909, column: 7, scope: !15866)
!15869 = !DILocation(line: 0, scope: !14888, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 912, column: 5, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15872, file: !2637, line: 911, column: 63)
!15872 = distinct !DILexicalBlock(scope: !15873, file: !2637, line: 911, column: 8)
!15873 = distinct !DILexicalBlock(scope: !15874, file: !2637, line: 909, column: 19)
!15874 = distinct !DILexicalBlock(scope: !15866, file: !2637, line: 909, column: 7)
!15875 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !15870)
!15876 = !DILocation(line: 0, scope: !14896, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !15870)
!15878 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !15877)
!15879 = !DILocation(line: 913, column: 23, scope: !15871)
!15880 = !DILocation(line: 0, scope: !14905, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 914, column: 5, scope: !15871)
!15882 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !15881)
!15883 = !DILocation(line: 0, scope: !14912, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !15881)
!15885 = !DILocation(line: 0, scope: !14919, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !15884)
!15887 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !15886)
!15888 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !15886)
!15889 = !DILocation(line: 0, scope: !14929, inlinedAt: !15886)
!15890 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15886)
!15891 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !15886)
!15892 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !15886)
!15893 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !15886)
!15894 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !15886)
!15895 = distinct !{!15895, !15887, !15896}
!15896 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !15886)
!15897 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !15886)
!15898 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !15886)
!15899 = !DILocation(line: 918, column: 4, scope: !15873)
!15900 = !DILocation(line: 919, column: 3, scope: !15873)
!15901 = !DILocation(line: 920, column: 22, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15874, file: !2637, line: 919, column: 10)
!15903 = !DILocation(line: 0, scope: !14746, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 906, column: 2, scope: !15867)
!15905 = !DILocation(line: 0, scope: !14754, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15904)
!15907 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15906)
!15908 = !DILocation(line: 926, column: 2, scope: !15850)
!15909 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2637, file: !2637, line: 929, type: !15910, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15912)
!15910 = !DISubroutineType(types: !15911)
!15911 = !{null, !2532, !108}
!15912 = !{!15913, !15914, !15915}
!15913 = !DILocalVariable(name: "thread", arg: 1, scope: !15909, file: !2637, line: 929, type: !2532)
!15914 = !DILocalVariable(name: "prio", arg: 2, scope: !15909, file: !2637, line: 929, type: !108)
!15915 = !DILocalVariable(name: "need_sched", scope: !15909, file: !2637, line: 931, type: !422)
!15916 = !DILocation(line: 0, scope: !15909)
!15917 = !DILocation(line: 931, column: 20, scope: !15909)
!15918 = !DILocation(line: 935, column: 17, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15909, file: !2637, line: 935, column: 6)
!15920 = !DILocation(line: 935, column: 20, scope: !15919)
!15921 = !DILocation(line: 935, column: 35, scope: !15919)
!15922 = !DILocation(line: 935, column: 48, scope: !15919)
!15923 = !DILocation(line: 935, column: 6, scope: !15909)
!15924 = !DILocation(line: 936, column: 3, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15919, file: !2637, line: 935, column: 55)
!15926 = !DILocation(line: 937, column: 2, scope: !15925)
!15927 = !DILocation(line: 938, column: 1, scope: !15909)
!15928 = distinct !DISubprogram(name: "k_sched_lock", scope: !2637, file: !2637, line: 987, type: !3389, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15929)
!15929 = !{!15930, !15932}
!15930 = !DILocalVariable(name: "__i", scope: !15931, file: !2637, line: 989, type: !14711)
!15931 = distinct !DILexicalBlock(scope: !15928, file: !2637, line: 989, column: 2)
!15932 = !DILocalVariable(name: "__key", scope: !15931, file: !2637, line: 989, type: !14711)
!15933 = !DILocation(line: 0, scope: !15931)
!15934 = !DILocation(line: 0, scope: !14719, inlinedAt: !15935)
!15935 = distinct !DILocation(line: 989, column: 2, scope: !15931)
!15936 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15937)
!15937 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15935)
!15938 = !DILocation(line: 0, scope: !14728, inlinedAt: !15937)
!15939 = !DILocation(line: 992, column: 3, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15941, file: !2637, line: 989, column: 26)
!15941 = distinct !DILexicalBlock(scope: !15931, file: !2637, line: 989, column: 2)
!15942 = !DILocation(line: 0, scope: !14746, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 989, column: 2, scope: !15941)
!15944 = !DILocation(line: 0, scope: !14754, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15943)
!15946 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15945)
!15947 = !DILocation(line: 994, column: 1, scope: !15928)
!15948 = distinct !DISubprogram(name: "z_sched_lock", scope: !13996, file: !13996, line: 251, type: !3389, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!15949 = !DILocation(line: 256, column: 4, scope: !15948)
!15950 = !DILocation(line: 256, column: 19, scope: !15948)
!15951 = !DILocation(line: 256, column: 2, scope: !15948)
!15952 = !DILocation(line: 258, column: 2, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15948, file: !13996, line: 258, column: 2)
!15954 = !{i64 2154206667}
!15955 = !DILocation(line: 259, column: 1, scope: !15948)
!15956 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2637, file: !2637, line: 996, type: !3389, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15957)
!15957 = !{!15958, !15960}
!15958 = !DILocalVariable(name: "__i", scope: !15959, file: !2637, line: 998, type: !14711)
!15959 = distinct !DILexicalBlock(scope: !15956, file: !2637, line: 998, column: 2)
!15960 = !DILocalVariable(name: "__key", scope: !15959, file: !2637, line: 998, type: !14711)
!15961 = !DILocation(line: 0, scope: !15959)
!15962 = !DILocation(line: 0, scope: !14719, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 998, column: 2, scope: !15959)
!15964 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15963)
!15966 = !DILocation(line: 0, scope: !14728, inlinedAt: !15965)
!15967 = !DILocation(line: 1002, column: 5, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15969, file: !2637, line: 998, column: 26)
!15969 = distinct !DILexicalBlock(scope: !15959, file: !2637, line: 998, column: 2)
!15970 = !DILocation(line: 1002, column: 20, scope: !15968)
!15971 = !DILocation(line: 1002, column: 3, scope: !15968)
!15972 = !DILocation(line: 1003, column: 3, scope: !15968)
!15973 = !DILocation(line: 0, scope: !14746, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 998, column: 2, scope: !15969)
!15975 = !DILocation(line: 0, scope: !14754, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15974)
!15977 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15976)
!15978 = !DILocation(line: 1011, column: 2, scope: !15956)
!15979 = !DILocation(line: 1012, column: 1, scope: !15956)
!15980 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2637, file: !2637, line: 1014, type: !15027, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!15981 = !DILocation(line: 1028, column: 25, scope: !15980)
!15982 = !DILocation(line: 1028, column: 2, scope: !15980)
!15983 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2637, file: !2637, line: 1155, type: !15984, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !15986)
!15984 = !DISubroutineType(types: !15985)
!15985 = !{!422, !2561, !2561}
!15986 = !{!15987, !15988, !15989, !15990, !15991}
!15987 = !DILocalVariable(name: "a", arg: 1, scope: !15983, file: !2637, line: 1155, type: !2561)
!15988 = !DILocalVariable(name: "b", arg: 2, scope: !15983, file: !2637, line: 1155, type: !2561)
!15989 = !DILocalVariable(name: "thread_a", scope: !15983, file: !2637, line: 1157, type: !2532)
!15990 = !DILocalVariable(name: "thread_b", scope: !15983, file: !2637, line: 1157, type: !2532)
!15991 = !DILocalVariable(name: "cmp", scope: !15983, file: !2637, line: 1158, type: !220)
!15992 = !DILocation(line: 0, scope: !15983)
!15993 = !DILocation(line: 1160, column: 13, scope: !15983)
!15994 = !DILocation(line: 1161, column: 13, scope: !15983)
!15995 = !DILocation(line: 1163, column: 8, scope: !15983)
!15996 = !DILocation(line: 1165, column: 10, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15983, file: !2637, line: 1165, column: 6)
!15998 = !DILocation(line: 1165, column: 6, scope: !15983)
!15999 = !DILocation(line: 1167, column: 17, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15997, file: !2637, line: 1167, column: 13)
!16001 = !DILocation(line: 1167, column: 13, scope: !15997)
!16002 = !DILocation(line: 1170, column: 25, scope: !16003)
!16003 = distinct !DILexicalBlock(scope: !16000, file: !2637, line: 1169, column: 9)
!16004 = !DILocation(line: 1170, column: 52, scope: !16003)
!16005 = !DILocation(line: 1170, column: 35, scope: !16003)
!16006 = !DILocation(line: 1170, column: 3, scope: !16003)
!16007 = !DILocation(line: 0, scope: !15997)
!16008 = !DILocation(line: 1173, column: 1, scope: !15983)
!16009 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2637, file: !2637, line: 1175, type: !16010, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16025)
!16010 = !DISubroutineType(types: !16011)
!16011 = !{null, !16012, !2532}
!16012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16013, size: 32)
!16013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16014, line: 37, size: 128, elements: !16015)
!16014 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16015 = !{!16016, !16024}
!16016 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16013, file: !16014, line: 38, baseType: !16017, size: 96)
!16017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !670, line: 83, size: 96, elements: !16018)
!16018 = !{!16019, !16020, !16023}
!16019 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16017, file: !670, line: 84, baseType: !2561, size: 32)
!16020 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16017, file: !670, line: 85, baseType: !16021, size: 32, offset: 32)
!16021 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !670, line: 81, baseType: !16022)
!16022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15984, size: 32)
!16023 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16017, file: !670, line: 86, baseType: !108, size: 32, offset: 64)
!16024 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16013, file: !16014, line: 39, baseType: !108, size: 32, offset: 96)
!16025 = !{!16026, !16027, !16028, !16029, !16038}
!16026 = !DILocalVariable(name: "pq", arg: 1, scope: !16009, file: !2637, line: 1175, type: !16012)
!16027 = !DILocalVariable(name: "thread", arg: 2, scope: !16009, file: !2637, line: 1175, type: !2532)
!16028 = !DILocalVariable(name: "t", scope: !16009, file: !2637, line: 1177, type: !2532)
!16029 = !DILocalVariable(name: "__f", scope: !16030, file: !2637, line: 1190, type: !16033)
!16030 = distinct !DILexicalBlock(scope: !16031, file: !2637, line: 1190, column: 3)
!16031 = distinct !DILexicalBlock(scope: !16032, file: !2637, line: 1189, column: 27)
!16032 = distinct !DILexicalBlock(scope: !16009, file: !2637, line: 1189, column: 6)
!16033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !670, line: 155, size: 96, elements: !16034)
!16034 = !{!16035, !16036, !16037}
!16035 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16033, file: !670, line: 156, baseType: !2632, size: 32)
!16036 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16033, file: !670, line: 157, baseType: !209, size: 32, offset: 32)
!16037 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16033, file: !670, line: 158, baseType: !220, size: 32, offset: 64)
!16038 = !DILocalVariable(name: "n", scope: !16039, file: !2637, line: 1190, type: !2561)
!16039 = distinct !DILexicalBlock(scope: !16040, file: !2637, line: 1190, column: 3)
!16040 = distinct !DILexicalBlock(scope: !16030, file: !2637, line: 1190, column: 3)
!16041 = !DILocation(line: 0, scope: !16009)
!16042 = !DILocation(line: 1181, column: 31, scope: !16009)
!16043 = !DILocation(line: 1181, column: 45, scope: !16009)
!16044 = !DILocation(line: 1181, column: 15, scope: !16009)
!16045 = !DILocation(line: 1181, column: 25, scope: !16009)
!16046 = !DILocation(line: 1189, column: 11, scope: !16032)
!16047 = !DILocation(line: 1189, column: 7, scope: !16032)
!16048 = !DILocation(line: 1189, column: 6, scope: !16009)
!16049 = !DILocation(line: 1190, column: 3, scope: !16030)
!16050 = !DILocation(line: 1190, column: 3, scope: !16039)
!16051 = !DILocation(line: 0, scope: !16039)
!16052 = !DILocation(line: 1190, column: 3, scope: !16040)
!16053 = !DILocation(line: 1193, column: 2, scope: !16031)
!16054 = !DILocation(line: 1191, column: 42, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16040, file: !2637, line: 1190, column: 54)
!16056 = !DILocation(line: 1191, column: 12, scope: !16055)
!16057 = !DILocation(line: 1191, column: 22, scope: !16055)
!16058 = distinct !{!16058, !16049, !16059}
!16059 = !DILocation(line: 1192, column: 3, scope: !16030)
!16060 = !DILocation(line: 1195, column: 17, scope: !16009)
!16061 = !DILocation(line: 1195, column: 37, scope: !16009)
!16062 = !DILocation(line: 1195, column: 2, scope: !16009)
!16063 = !DILocation(line: 1196, column: 1, scope: !16009)
!16064 = !DISubprogram(name: "z_rb_foreach_next", scope: !670, file: !670, line: 176, type: !16065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16065 = !DISubroutineType(types: !16066)
!16066 = !{!2561, !16067, !16068}
!16067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16017, size: 32)
!16068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16033, size: 32)
!16069 = !DISubprogram(name: "rb_insert", scope: !670, file: !670, line: 105, type: !16070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16070 = !DISubroutineType(types: !16071)
!16071 = !{null, !16067, !2561}
!16072 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2637, file: !2637, line: 1198, type: !16010, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16073)
!16073 = !{!16074, !16075}
!16074 = !DILocalVariable(name: "pq", arg: 1, scope: !16072, file: !2637, line: 1198, type: !16012)
!16075 = !DILocalVariable(name: "thread", arg: 2, scope: !16072, file: !2637, line: 1198, type: !2532)
!16076 = !DILocation(line: 0, scope: !16072)
!16077 = !DILocation(line: 1202, column: 17, scope: !16072)
!16078 = !DILocation(line: 1202, column: 37, scope: !16072)
!16079 = !DILocation(line: 1202, column: 2, scope: !16072)
!16080 = !DILocation(line: 1204, column: 16, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16072, file: !2637, line: 1204, column: 6)
!16082 = !DILocation(line: 1204, column: 7, scope: !16081)
!16083 = !DILocation(line: 1204, column: 6, scope: !16072)
!16084 = !DILocation(line: 1205, column: 7, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16081, file: !2637, line: 1204, column: 22)
!16086 = !DILocation(line: 1205, column: 22, scope: !16085)
!16087 = !DILocation(line: 1206, column: 2, scope: !16085)
!16088 = !DILocation(line: 1207, column: 1, scope: !16072)
!16089 = !DISubprogram(name: "rb_remove", scope: !670, file: !670, line: 110, type: !16070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16090 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2637, file: !2637, line: 1209, type: !16091, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16093)
!16091 = !DISubroutineType(types: !16092)
!16092 = !{!2532, !16012}
!16093 = !{!16094, !16095, !16096}
!16094 = !DILocalVariable(name: "pq", arg: 1, scope: !16090, file: !2637, line: 1209, type: !16012)
!16095 = !DILocalVariable(name: "thread", scope: !16090, file: !2637, line: 1211, type: !2532)
!16096 = !DILocalVariable(name: "n", scope: !16090, file: !2637, line: 1212, type: !2561)
!16097 = !DILocation(line: 0, scope: !16090)
!16098 = !DILocation(line: 1212, column: 37, scope: !16090)
!16099 = !DILocation(line: 1212, column: 21, scope: !16090)
!16100 = !DILocation(line: 1217, column: 2, scope: !16090)
!16101 = distinct !DISubprogram(name: "rb_get_min", scope: !670, file: !670, line: 115, type: !16102, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16104)
!16102 = !DISubroutineType(types: !16103)
!16103 = !{!2561, !16067}
!16104 = !{!16105}
!16105 = !DILocalVariable(name: "tree", arg: 1, scope: !16101, file: !670, line: 115, type: !16067)
!16106 = !DILocation(line: 0, scope: !16101)
!16107 = !DILocation(line: 117, column: 9, scope: !16101)
!16108 = !DILocation(line: 117, column: 2, scope: !16101)
!16109 = !DISubprogram(name: "z_rb_get_minmax", scope: !670, file: !670, line: 100, type: !16110, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16110 = !DISubroutineType(types: !16111)
!16111 = !{!2561, !16067, !164}
!16112 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2637, file: !2637, line: 1246, type: !16113, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16123)
!16113 = !DISubroutineType(types: !16114)
!16114 = !{!2532, !16115}
!16115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16116, size: 32)
!16116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16014, line: 53, size: 2080, elements: !16117)
!16117 = !{!16118, !16122}
!16118 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16116, file: !16014, line: 54, baseType: !16119, size: 2048)
!16119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2568, size: 2048, elements: !16120)
!16120 = !{!16121}
!16121 = !DISubrange(count: 32)
!16122 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16116, file: !16014, line: 55, baseType: !32, size: 32, offset: 2048)
!16123 = !{!16124, !16125, !16126, !16127}
!16124 = !DILocalVariable(name: "pq", arg: 1, scope: !16112, file: !2637, line: 1246, type: !16115)
!16125 = !DILocalVariable(name: "thread", scope: !16112, file: !2637, line: 1252, type: !2532)
!16126 = !DILocalVariable(name: "l", scope: !16112, file: !2637, line: 1253, type: !14922)
!16127 = !DILocalVariable(name: "n", scope: !16112, file: !2637, line: 1254, type: !2633)
!16128 = !DILocation(line: 0, scope: !16112)
!16129 = !DILocation(line: 1248, column: 11, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16112, file: !2637, line: 1248, column: 6)
!16131 = !DILocation(line: 1248, column: 7, scope: !16130)
!16132 = !DILocation(line: 1248, column: 6, scope: !16112)
!16133 = !DILocation(line: 1253, column: 31, scope: !16112)
!16134 = !DILocation(line: 1253, column: 20, scope: !16112)
!16135 = !DILocation(line: 1254, column: 19, scope: !16112)
!16136 = !DILocation(line: 1260, column: 1, scope: !16112)
!16137 = distinct !DISubprogram(name: "z_unpend_all", scope: !2637, file: !2637, line: 1262, type: !16138, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16140)
!16138 = !DISubroutineType(types: !16139)
!16139 = !{!108, !2563}
!16140 = !{!16141, !16142, !16143}
!16141 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16137, file: !2637, line: 1262, type: !2563)
!16142 = !DILocalVariable(name: "need_sched", scope: !16137, file: !2637, line: 1264, type: !108)
!16143 = !DILocalVariable(name: "thread", scope: !16137, file: !2637, line: 1265, type: !2532)
!16144 = !DILocation(line: 0, scope: !16137)
!16145 = !DILocation(line: 1267, column: 19, scope: !16137)
!16146 = !DILocation(line: 1267, column: 41, scope: !16137)
!16147 = !DILocation(line: 1267, column: 2, scope: !16137)
!16148 = !DILocation(line: 1268, column: 3, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16137, file: !2637, line: 1267, column: 50)
!16150 = !DILocation(line: 1269, column: 3, scope: !16149)
!16151 = distinct !{!16151, !16147, !16152}
!16152 = !DILocation(line: 1271, column: 2, scope: !16137)
!16153 = !DILocation(line: 1273, column: 2, scope: !16137)
!16154 = distinct !DISubprogram(name: "z_waitq_head", scope: !14322, file: !14322, line: 52, type: !15770, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16155)
!16155 = !{!16156}
!16156 = !DILocalVariable(name: "w", arg: 1, scope: !16154, file: !14322, line: 52, type: !2563)
!16157 = !DILocation(line: 0, scope: !16154)
!16158 = !DILocation(line: 54, column: 52, scope: !16154)
!16159 = !DILocation(line: 54, column: 28, scope: !16154)
!16160 = !DILocation(line: 54, column: 9, scope: !16154)
!16161 = !DILocation(line: 54, column: 2, scope: !16154)
!16162 = distinct !DISubprogram(name: "init_ready_q", scope: !2637, file: !2637, line: 1276, type: !16163, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16170)
!16163 = !DISubroutineType(types: !16164)
!16164 = !{null, !16165}
!16165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16166, size: 32)
!16166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !16167)
!16167 = !{!16168, !16169}
!16168 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16166, file: !363, line: 86, baseType: !2532, size: 32)
!16169 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16166, file: !363, line: 90, baseType: !2568, size: 64, offset: 32)
!16170 = !{!16171}
!16171 = !DILocalVariable(name: "rq", arg: 1, scope: !16162, file: !2637, line: 1276, type: !16165)
!16172 = !DILocation(line: 0, scope: !16162)
!16173 = !DILocation(line: 1289, column: 22, scope: !16162)
!16174 = !DILocation(line: 1289, column: 2, scope: !16162)
!16175 = !DILocation(line: 1291, column: 1, scope: !16162)
!16176 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !16177, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16179)
!16177 = !DISubroutineType(types: !16178)
!16178 = !{null, !14922}
!16179 = !{!16180}
!16180 = !DILocalVariable(name: "list", arg: 1, scope: !16176, file: !367, line: 197, type: !14922)
!16181 = !DILocation(line: 0, scope: !16176)
!16182 = !DILocation(line: 199, column: 8, scope: !16176)
!16183 = !DILocation(line: 199, column: 13, scope: !16176)
!16184 = !DILocation(line: 200, column: 8, scope: !16176)
!16185 = !DILocation(line: 200, column: 13, scope: !16176)
!16186 = !DILocation(line: 201, column: 1, scope: !16176)
!16187 = distinct !DISubprogram(name: "z_sched_init", scope: !2637, file: !2637, line: 1293, type: !3389, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!16188 = !DILocation(line: 1302, column: 2, scope: !16187)
!16189 = !DILocation(line: 1306, column: 2, scope: !16187)
!16190 = !DILocation(line: 1309, column: 1, scope: !16187)
!16191 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2637, file: !2637, line: 1311, type: !16192, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16195)
!16192 = !DISubroutineType(types: !16193)
!16193 = !{!108, !16194}
!16194 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !2532)
!16195 = !{!16196}
!16196 = !DILocalVariable(name: "thread", arg: 1, scope: !16191, file: !2637, line: 1311, type: !16194)
!16197 = !DILocation(line: 0, scope: !16191)
!16198 = !DILocation(line: 1313, column: 22, scope: !16191)
!16199 = !DILocation(line: 1313, column: 9, scope: !16191)
!16200 = !DILocation(line: 1313, column: 2, scope: !16191)
!16201 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2637, file: !2637, line: 1325, type: !16202, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16204)
!16202 = !DISubroutineType(types: !16203)
!16203 = !{null, !16194, !108}
!16204 = !{!16205, !16206, !16207}
!16205 = !DILocalVariable(name: "thread", arg: 1, scope: !16201, file: !2637, line: 1325, type: !16194)
!16206 = !DILocalVariable(name: "prio", arg: 2, scope: !16201, file: !2637, line: 1325, type: !108)
!16207 = !DILocalVariable(name: "th", scope: !16201, file: !2637, line: 1334, type: !2532)
!16208 = !DILocation(line: 0, scope: !16201)
!16209 = !DILocation(line: 1336, column: 2, scope: !16201)
!16210 = !DILocation(line: 1337, column: 1, scope: !16201)
!16211 = distinct !DISubprogram(name: "k_can_yield", scope: !2637, file: !2637, line: 1384, type: !8048, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!16212 = !DILocation(line: 1386, column: 11, scope: !16211)
!16213 = !DILocation(line: 1386, column: 29, scope: !16211)
!16214 = !DILocation(line: 1386, column: 32, scope: !16211)
!16215 = !DILocation(line: 1386, column: 46, scope: !16211)
!16216 = !DILocation(line: 1387, column: 28, scope: !16211)
!16217 = !DILocation(line: 1387, column: 4, scope: !16211)
!16218 = !DILocation(line: 1386, column: 2, scope: !16211)
!16219 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !359, file: !359, line: 989, type: !8048, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!16220 = !DILocation(line: 993, column: 10, scope: !16219)
!16221 = !DILocation(line: 993, column: 2, scope: !16219)
!16222 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2637, file: !2637, line: 1390, type: !3389, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16223)
!16223 = !{!16224}
!16224 = !DILocalVariable(name: "key", scope: !16222, file: !2637, line: 1396, type: !14711)
!16225 = !DILocation(line: 0, scope: !14719, inlinedAt: !16226)
!16226 = distinct !DILocation(line: 1396, column: 25, scope: !16222)
!16227 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16228)
!16228 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16226)
!16229 = !DILocation(line: 0, scope: !14728, inlinedAt: !16228)
!16230 = !DILocation(line: 0, scope: !16222)
!16231 = !DILocation(line: 1400, column: 18, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16233, file: !2637, line: 1399, column: 36)
!16233 = distinct !DILexicalBlock(scope: !16222, file: !2637, line: 1398, column: 6)
!16234 = !DILocation(line: 0, scope: !14888, inlinedAt: !16235)
!16235 = distinct !DILocation(line: 1400, column: 3, scope: !16232)
!16236 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !16235)
!16237 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !16235)
!16238 = !DILocation(line: 0, scope: !14896, inlinedAt: !16239)
!16239 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !16235)
!16240 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !16239)
!16241 = !DILocation(line: 1402, column: 15, scope: !16222)
!16242 = !DILocation(line: 0, scope: !14905, inlinedAt: !16243)
!16243 = distinct !DILocation(line: 1402, column: 2, scope: !16222)
!16244 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !16243)
!16245 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !16243)
!16246 = !DILocation(line: 0, scope: !14912, inlinedAt: !16247)
!16247 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !16243)
!16248 = !DILocation(line: 0, scope: !14919, inlinedAt: !16249)
!16249 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !16247)
!16250 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !16249)
!16251 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !16249)
!16252 = !DILocation(line: 0, scope: !14929, inlinedAt: !16249)
!16253 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !16249)
!16254 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !16249)
!16255 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !16249)
!16256 = !DILocation(line: 191, column: 21, scope: !14939, inlinedAt: !16249)
!16257 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !16249)
!16258 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !16249)
!16259 = distinct !{!16259, !16250, !16260}
!16260 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !16249)
!16261 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !16249)
!16262 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !16249)
!16263 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !16249)
!16264 = !DILocation(line: 1403, column: 2, scope: !16222)
!16265 = !DILocation(line: 0, scope: !15330, inlinedAt: !16266)
!16266 = distinct !DILocation(line: 1404, column: 2, scope: !16222)
!16267 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !16266)
!16268 = !DILocation(line: 1405, column: 1, scope: !16222)
!16269 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2637, file: !2637, line: 1459, type: !16270, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16272)
!16270 = !DISubroutineType(types: !16271)
!16271 = !{!220, !15510}
!16272 = !{!16273, !16274, !16275}
!16273 = !DILocalVariable(name: "timeout", arg: 1, scope: !16269, file: !2637, line: 1459, type: !15510)
!16274 = !DILocalVariable(name: "ticks", scope: !16269, file: !2637, line: 1461, type: !109)
!16275 = !DILocalVariable(name: "ret", scope: !16269, file: !2637, line: 1480, type: !220)
!16276 = !DILocation(line: 0, scope: !16269)
!16277 = !DILocation(line: 1468, column: 6, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16269, file: !2637, line: 1468, column: 6)
!16279 = !DILocation(line: 1468, column: 6, scope: !16269)
!16280 = !DILocation(line: 1469, column: 20, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16278, file: !2637, line: 1468, column: 40)
!16282 = !DILocation(line: 1469, column: 3, scope: !16281)
!16283 = !DILocation(line: 1473, column: 3, scope: !16281)
!16284 = !DILocation(line: 1478, column: 10, scope: !16269)
!16285 = !DILocation(line: 1480, column: 16, scope: !16269)
!16286 = !DILocation(line: 1485, column: 1, scope: !16269)
!16287 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3785, file: !3785, line: 310, type: !16288, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16290)
!16288 = !DISubroutineType(types: !16289)
!16289 = !{null, !16194}
!16290 = !{!16291}
!16291 = !DILocalVariable(name: "thread", arg: 1, scope: !16287, file: !3785, line: 310, type: !16194)
!16292 = !DILocation(line: 0, scope: !16287)
!16293 = !DILocation(line: 319, column: 2, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16287, file: !3785, line: 319, column: 2)
!16295 = !{i64 2154125056}
!16296 = !DILocation(line: 320, column: 2, scope: !16287)
!16297 = !DILocation(line: 321, column: 1, scope: !16287)
!16298 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2637, file: !2637, line: 1415, type: !16299, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16301)
!16299 = !DISubroutineType(types: !16300)
!16300 = !{!220, !109}
!16301 = !{!16302, !16303, !16304, !16305}
!16302 = !DILocalVariable(name: "ticks", arg: 1, scope: !16298, file: !2637, line: 1415, type: !109)
!16303 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16298, file: !2637, line: 1418, type: !113)
!16304 = !DILocalVariable(name: "timeout", scope: !16298, file: !2637, line: 1430, type: !15510)
!16305 = !DILocalVariable(name: "key", scope: !16298, file: !2637, line: 1437, type: !14711)
!16306 = !DILocation(line: 0, scope: !16298)
!16307 = !DILocation(line: 1425, column: 12, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16298, file: !2637, line: 1425, column: 6)
!16309 = !DILocation(line: 1425, column: 6, scope: !16298)
!16310 = !DILocation(line: 1426, column: 3, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16308, file: !2637, line: 1425, column: 18)
!16312 = !DILocation(line: 1427, column: 3, scope: !16311)
!16313 = !DILocation(line: 1431, column: 24, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16298, file: !2637, line: 1431, column: 6)
!16315 = !DILocation(line: 1431, column: 6, scope: !16298)
!16316 = !DILocation(line: 1432, column: 35, scope: !16317)
!16317 = distinct !DILexicalBlock(scope: !16314, file: !2637, line: 1431, column: 30)
!16318 = !DILocation(line: 1432, column: 27, scope: !16317)
!16319 = !DILocation(line: 1433, column: 2, scope: !16317)
!16320 = !DILocation(line: 1434, column: 27, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16314, file: !2637, line: 1433, column: 9)
!16322 = !DILocation(line: 0, scope: !16314)
!16323 = !DILocation(line: 0, scope: !14719, inlinedAt: !16324)
!16324 = distinct !DILocation(line: 1437, column: 25, scope: !16298)
!16325 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16326)
!16326 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16324)
!16327 = !DILocation(line: 0, scope: !14728, inlinedAt: !16326)
!16328 = !DILocation(line: 1440, column: 20, scope: !16298)
!16329 = !DILocation(line: 1440, column: 18, scope: !16298)
!16330 = !DILocation(line: 1442, column: 2, scope: !16298)
!16331 = !DILocation(line: 1443, column: 23, scope: !16298)
!16332 = !DILocation(line: 1443, column: 2, scope: !16298)
!16333 = !DILocation(line: 1444, column: 29, scope: !16298)
!16334 = !DILocation(line: 1444, column: 2, scope: !16298)
!16335 = !DILocation(line: 0, scope: !15330, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 1446, column: 8, scope: !16298)
!16337 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !16336)
!16338 = !DILocation(line: 1450, column: 10, scope: !16298)
!16339 = !DILocation(line: 1450, column: 45, scope: !16298)
!16340 = !DILocation(line: 1450, column: 43, scope: !16298)
!16341 = !DILocation(line: 1451, column: 6, scope: !16298)
!16342 = !DILocation(line: 1457, column: 1, scope: !16298)
!16343 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3752, file: !3752, line: 1103, type: !3753, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16344)
!16344 = !{!16345}
!16345 = !DILocalVariable(name: "t", arg: 1, scope: !16343, file: !3752, line: 1103, type: !114)
!16346 = !DILocation(line: 0, scope: !16343)
!16347 = !DILocation(line: 0, scope: !14766, inlinedAt: !16348)
!16348 = distinct !DILocation(line: 1106, column: 9, scope: !16343)
!16349 = !DILocation(line: 139, column: 13, scope: !16350, inlinedAt: !16348)
!16350 = distinct !DILexicalBlock(scope: !16351, file: !3752, line: 138, column: 10)
!16351 = distinct !DILexicalBlock(scope: !16352, file: !3752, line: 136, column: 7)
!16352 = distinct !DILexicalBlock(scope: !14787, file: !3752, line: 134, column: 17)
!16353 = !DILocation(line: 1106, column: 2, scope: !16343)
!16354 = distinct !DISubprogram(name: "k_yield", scope: !3785, file: !3785, line: 140, type: !3389, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!16355 = !DILocation(line: 148, column: 2, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16354, file: !3785, line: 148, column: 2)
!16357 = !{i64 2154124376}
!16358 = !DILocation(line: 149, column: 2, scope: !16354)
!16359 = !DILocation(line: 150, column: 1, scope: !16354)
!16360 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2637, file: !2637, line: 1495, type: !16361, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16363)
!16361 = !DISubroutineType(types: !16362)
!16362 = !{!220, !108}
!16363 = !{!16364, !16365}
!16364 = !DILocalVariable(name: "us", arg: 1, scope: !16360, file: !2637, line: 1495, type: !108)
!16365 = !DILocalVariable(name: "ticks", scope: !16360, file: !2637, line: 1497, type: !220)
!16366 = !DILocation(line: 0, scope: !16360)
!16367 = !DILocation(line: 1501, column: 31, scope: !16360)
!16368 = !DILocation(line: 1501, column: 10, scope: !16360)
!16369 = !DILocation(line: 1502, column: 23, scope: !16360)
!16370 = !DILocation(line: 1502, column: 10, scope: !16360)
!16371 = !DILocation(line: 1506, column: 31, scope: !16360)
!16372 = !DILocation(line: 1506, column: 9, scope: !16360)
!16373 = !DILocation(line: 1506, column: 2, scope: !16360)
!16374 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3752, file: !3752, line: 571, type: !3753, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16375)
!16375 = !{!16376}
!16376 = !DILocalVariable(name: "t", arg: 1, scope: !16374, file: !3752, line: 571, type: !114)
!16377 = !DILocation(line: 0, scope: !16374)
!16378 = !DILocation(line: 0, scope: !14766, inlinedAt: !16379)
!16379 = distinct !DILocation(line: 574, column: 9, scope: !16374)
!16380 = !DILocation(line: 135, column: 5, scope: !16352, inlinedAt: !16379)
!16381 = !DILocation(line: 139, column: 13, scope: !16350, inlinedAt: !16379)
!16382 = !DILocation(line: 574, column: 2, scope: !16374)
!16383 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3752, file: !3752, line: 1187, type: !3753, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16384)
!16384 = !{!16385}
!16385 = !DILocalVariable(name: "t", arg: 1, scope: !16383, file: !3752, line: 1187, type: !114)
!16386 = !DILocation(line: 0, scope: !16383)
!16387 = !DILocation(line: 0, scope: !14766, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 1190, column: 9, scope: !16383)
!16389 = !DILocation(line: 145, column: 13, scope: !16390, inlinedAt: !16388)
!16390 = distinct !DILexicalBlock(scope: !14784, file: !3752, line: 144, column: 10)
!16391 = !DILocation(line: 1190, column: 2, scope: !16383)
!16392 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2637, file: !2637, line: 1517, type: !16288, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16393)
!16393 = !{!16394}
!16394 = !DILocalVariable(name: "thread", arg: 1, scope: !16392, file: !2637, line: 1517, type: !16194)
!16395 = !DILocation(line: 0, scope: !16392)
!16396 = !DILocation(line: 1521, column: 6, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !16392, file: !2637, line: 1521, column: 6)
!16398 = !DILocation(line: 1521, column: 6, scope: !16392)
!16399 = !DILocation(line: 1525, column: 6, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16392, file: !2637, line: 1525, column: 6)
!16401 = !DILocation(line: 1525, column: 37, scope: !16400)
!16402 = !DILocation(line: 1525, column: 6, scope: !16392)
!16403 = !DILocation(line: 1527, column: 20, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16405, file: !2637, line: 1527, column: 7)
!16405 = distinct !DILexicalBlock(scope: !16400, file: !2637, line: 1525, column: 42)
!16406 = !DILocation(line: 1527, column: 33, scope: !16404)
!16407 = !DILocation(line: 1527, column: 7, scope: !16405)
!16408 = !DILocation(line: 1532, column: 2, scope: !16392)
!16409 = !DILocation(line: 1533, column: 2, scope: !16392)
!16410 = !DILocation(line: 1031, column: 3, scope: !15363, inlinedAt: !16411)
!16411 = distinct !DILocation(line: 48, column: 10, scope: !15367, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 1537, column: 7, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16392, file: !2637, line: 1537, column: 6)
!16414 = !DILocation(line: 0, scope: !15363, inlinedAt: !16411)
!16415 = !DILocation(line: 48, column: 9, scope: !15367, inlinedAt: !16412)
!16416 = !DILocation(line: 1537, column: 6, scope: !16392)
!16417 = !DILocation(line: 1538, column: 3, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16413, file: !2637, line: 1537, column: 25)
!16419 = !DILocation(line: 1539, column: 2, scope: !16418)
!16420 = !DILocation(line: 1540, column: 1, scope: !16392)
!16421 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13996, file: !13996, line: 101, type: !14837, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16422)
!16422 = !{!16423}
!16423 = !DILocalVariable(name: "thread", arg: 1, scope: !16421, file: !13996, line: 101, type: !2532)
!16424 = !DILocation(line: 0, scope: !16421)
!16425 = !DILocation(line: 103, column: 23, scope: !16421)
!16426 = !DILocation(line: 103, column: 36, scope: !16421)
!16427 = !DILocation(line: 103, column: 55, scope: !16421)
!16428 = !DILocation(line: 103, column: 2, scope: !16421)
!16429 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2637, file: !2637, line: 1567, type: !16430, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16432)
!16430 = !DISubroutineType(types: !16431)
!16431 = !{!16194}
!16432 = !{!16433}
!16433 = !DILocalVariable(name: "ret", scope: !16429, file: !2637, line: 1577, type: !16194)
!16434 = !DILocation(line: 1577, column: 30, scope: !16429)
!16435 = !DILocation(line: 0, scope: !16429)
!16436 = !DILocation(line: 1582, column: 2, scope: !16429)
!16437 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2637, file: !2637, line: 1593, type: !8337, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!16438 = !DILocation(line: 1031, column: 3, scope: !15363, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 48, column: 10, scope: !15367, inlinedAt: !16440)
!16440 = distinct !DILocation(line: 1595, column: 10, scope: !16437)
!16441 = !DILocation(line: 0, scope: !15363, inlinedAt: !16439)
!16442 = !DILocation(line: 48, column: 9, scope: !15367, inlinedAt: !16440)
!16443 = !DILocation(line: 1595, column: 27, scope: !16437)
!16444 = !DILocation(line: 1595, column: 41, scope: !16437)
!16445 = !DILocation(line: 1595, column: 30, scope: !16437)
!16446 = !DILocation(line: 1595, column: 2, scope: !16437)
!16447 = distinct !DISubprogram(name: "z_thread_abort", scope: !2637, file: !2637, line: 1725, type: !14677, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16448)
!16448 = !{!16449, !16450}
!16449 = !DILocalVariable(name: "thread", arg: 1, scope: !16447, file: !2637, line: 1725, type: !2532)
!16450 = !DILocalVariable(name: "key", scope: !16447, file: !2637, line: 1727, type: !14711)
!16451 = !DILocation(line: 0, scope: !16447)
!16452 = !DILocation(line: 0, scope: !14719, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 1727, column: 25, scope: !16447)
!16454 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16455)
!16455 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16453)
!16456 = !DILocation(line: 0, scope: !14728, inlinedAt: !16455)
!16457 = !DILocation(line: 1729, column: 20, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16447, file: !2637, line: 1729, column: 6)
!16459 = !DILocation(line: 1729, column: 33, scope: !16458)
!16460 = !DILocation(line: 1729, column: 48, scope: !16458)
!16461 = !DILocation(line: 1729, column: 6, scope: !16447)
!16462 = !DILocation(line: 0, scope: !14746, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 1730, column: 3, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16458, file: !2637, line: 1729, column: 54)
!16465 = !DILocation(line: 0, scope: !14754, inlinedAt: !16466)
!16466 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16463)
!16467 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16466)
!16468 = !DILocation(line: 1732, column: 3, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16464, file: !2637, line: 1732, column: 3)
!16470 = !{i64 2154860381, i64 2154860397, i64 2154860423, i64 2154860451, i64 2154860471}
!16471 = !DILocation(line: 1733, column: 3, scope: !16464)
!16472 = !DILocation(line: 1736, column: 20, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16447, file: !2637, line: 1736, column: 6)
!16474 = !DILocation(line: 1736, column: 33, scope: !16473)
!16475 = !DILocation(line: 1736, column: 49, scope: !16473)
!16476 = !DILocation(line: 1736, column: 6, scope: !16447)
!16477 = !DILocation(line: 0, scope: !14746, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 1737, column: 3, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16473, file: !2637, line: 1736, column: 56)
!16480 = !DILocation(line: 0, scope: !14754, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16478)
!16482 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16481)
!16483 = !DILocation(line: 1738, column: 3, scope: !16479)
!16484 = !DILocation(line: 1775, column: 2, scope: !16447)
!16485 = !DILocation(line: 1776, column: 16, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16447, file: !2637, line: 1776, column: 6)
!16487 = !DILocation(line: 1776, column: 13, scope: !16486)
!16488 = !DILocation(line: 1776, column: 25, scope: !16486)
!16489 = !DILocation(line: 1031, column: 3, scope: !15363, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 48, column: 10, scope: !15367, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 1776, column: 29, scope: !16486)
!16492 = !DILocation(line: 0, scope: !15363, inlinedAt: !16490)
!16493 = !DILocation(line: 48, column: 9, scope: !15367, inlinedAt: !16491)
!16494 = !DILocation(line: 1776, column: 6, scope: !16447)
!16495 = !DILocation(line: 0, scope: !15330, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 1777, column: 3, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16486, file: !2637, line: 1776, column: 47)
!16498 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !16496)
!16499 = !DILocation(line: 1779, column: 2, scope: !16497)
!16500 = !DILocation(line: 0, scope: !14746, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 1780, column: 2, scope: !16447)
!16502 = !DILocation(line: 0, scope: !14754, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16501)
!16504 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16503)
!16505 = !DILocation(line: 1781, column: 1, scope: !16447)
!16506 = distinct !DISubprogram(name: "end_thread", scope: !2637, file: !2637, line: 1690, type: !14677, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16507)
!16507 = !{!16508}
!16508 = !DILocalVariable(name: "thread", arg: 1, scope: !16506, file: !2637, line: 1690, type: !2532)
!16509 = !DILocation(line: 0, scope: !16506)
!16510 = !DILocation(line: 1695, column: 20, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16506, file: !2637, line: 1695, column: 6)
!16512 = !DILocation(line: 1695, column: 33, scope: !16511)
!16513 = !DILocation(line: 1695, column: 49, scope: !16511)
!16514 = !DILocation(line: 1695, column: 6, scope: !16506)
!16515 = !DILocation(line: 1697, column: 29, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16511, file: !2637, line: 1695, column: 56)
!16517 = !DILocation(line: 1698, column: 7, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16516, file: !2637, line: 1698, column: 7)
!16519 = !DILocation(line: 1698, column: 7, scope: !16516)
!16520 = !DILocation(line: 0, scope: !14888, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 1699, column: 4, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16518, file: !2637, line: 1698, column: 35)
!16523 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !16521)
!16524 = !DILocation(line: 0, scope: !14896, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !16521)
!16526 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !16525)
!16527 = !DILocation(line: 1700, column: 3, scope: !16522)
!16528 = !DILocation(line: 1701, column: 20, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16516, file: !2637, line: 1701, column: 7)
!16530 = !DILocation(line: 1701, column: 30, scope: !16529)
!16531 = !DILocation(line: 1701, column: 7, scope: !16516)
!16532 = !DILocation(line: 1702, column: 4, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16529, file: !2637, line: 1701, column: 39)
!16534 = !DILocation(line: 1703, column: 3, scope: !16533)
!16535 = !DILocation(line: 1704, column: 9, scope: !16516)
!16536 = !DILocation(line: 1705, column: 23, scope: !16516)
!16537 = !DILocation(line: 1705, column: 3, scope: !16516)
!16538 = !DILocation(line: 1706, column: 3, scope: !16516)
!16539 = !DILocation(line: 1722, column: 2, scope: !16516)
!16540 = !DILocation(line: 1723, column: 1, scope: !16506)
!16541 = distinct !DISubprogram(name: "unpend_all", scope: !2637, file: !2637, line: 1674, type: !16542, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16544)
!16542 = !DISubroutineType(types: !16543)
!16543 = !{null, !2563}
!16544 = !{!16545, !16546}
!16545 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16541, file: !2637, line: 1674, type: !2563)
!16546 = !DILocalVariable(name: "thread", scope: !16541, file: !2637, line: 1676, type: !2532)
!16547 = !DILocation(line: 0, scope: !16541)
!16548 = !DILocation(line: 1678, column: 19, scope: !16541)
!16549 = !DILocation(line: 1678, column: 41, scope: !16541)
!16550 = !DILocation(line: 1678, column: 2, scope: !16541)
!16551 = !DILocation(line: 1679, column: 3, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16541, file: !2637, line: 1678, column: 50)
!16553 = !DILocation(line: 1680, column: 9, scope: !16552)
!16554 = !DILocalVariable(name: "thread", arg: 1, scope: !16555, file: !14016, line: 65, type: !2532)
!16555 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14016, file: !14016, line: 65, type: !16556, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16558)
!16556 = !DISubroutineType(types: !16557)
!16557 = !{null, !2532, !32}
!16558 = !{!16554, !16559}
!16559 = !DILocalVariable(name: "value", arg: 2, scope: !16555, file: !14016, line: 65, type: !32)
!16560 = !DILocation(line: 0, scope: !16555, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 1681, column: 3, scope: !16552)
!16562 = !DILocation(line: 67, column: 15, scope: !16555, inlinedAt: !16561)
!16563 = !DILocation(line: 67, column: 33, scope: !16555, inlinedAt: !16561)
!16564 = !DILocation(line: 1682, column: 3, scope: !16552)
!16565 = distinct !{!16565, !16550, !16566}
!16566 = !DILocation(line: 1683, column: 2, scope: !16541)
!16567 = !DILocation(line: 1684, column: 1, scope: !16541)
!16568 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2637, file: !2637, line: 1794, type: !16569, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16571)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{!108, !2532, !15510}
!16571 = !{!16572, !16573, !16574, !16575}
!16572 = !DILocalVariable(name: "thread", arg: 1, scope: !16568, file: !2637, line: 1794, type: !2532)
!16573 = !DILocalVariable(name: "timeout", arg: 2, scope: !16568, file: !2637, line: 1794, type: !15510)
!16574 = !DILocalVariable(name: "key", scope: !16568, file: !2637, line: 1796, type: !14711)
!16575 = !DILocalVariable(name: "ret", scope: !16568, file: !2637, line: 1797, type: !108)
!16576 = !DILocation(line: 0, scope: !16568)
!16577 = !DILocation(line: 0, scope: !14719, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 1796, column: 25, scope: !16568)
!16579 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16578)
!16581 = !DILocation(line: 0, scope: !14728, inlinedAt: !16580)
!16582 = !DILocation(line: 1801, column: 20, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16568, file: !2637, line: 1801, column: 6)
!16584 = !DILocation(line: 1801, column: 33, scope: !16583)
!16585 = !DILocation(line: 1801, column: 49, scope: !16583)
!16586 = !DILocation(line: 1801, column: 6, scope: !16568)
!16587 = !DILocation(line: 1803, column: 13, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16583, file: !2637, line: 1803, column: 13)
!16589 = !DILocation(line: 1803, column: 13, scope: !16583)
!16590 = !DILocation(line: 1805, column: 24, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16588, file: !2637, line: 1805, column: 13)
!16592 = !DILocation(line: 1805, column: 21, scope: !16591)
!16593 = !DILocation(line: 1805, column: 34, scope: !16591)
!16594 = !DILocation(line: 1806, column: 20, scope: !16591)
!16595 = !DILocation(line: 1806, column: 44, scope: !16591)
!16596 = !DILocation(line: 1806, column: 30, scope: !16591)
!16597 = !DILocation(line: 1805, column: 13, scope: !16588)
!16598 = !DILocation(line: 1810, column: 42, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16591, file: !2637, line: 1808, column: 9)
!16600 = !DILocation(line: 1810, column: 3, scope: !16599)
!16601 = !DILocation(line: 1811, column: 22, scope: !16599)
!16602 = !DILocation(line: 1811, column: 3, scope: !16599)
!16603 = !DILocation(line: 0, scope: !15330, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 1814, column: 9, scope: !16599)
!16605 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !16604)
!16606 = !DILocation(line: 1817, column: 3, scope: !16599)
!16607 = !DILocation(line: 0, scope: !16583)
!16608 = !DILocation(line: 0, scope: !14746, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 1822, column: 2, scope: !16568)
!16610 = !DILocation(line: 0, scope: !14754, inlinedAt: !16611)
!16611 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16609)
!16612 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16611)
!16613 = !DILocation(line: 1823, column: 2, scope: !16568)
!16614 = !DILocation(line: 1824, column: 1, scope: !16568)
!16615 = distinct !DISubprogram(name: "z_sched_wake", scope: !2637, file: !2637, line: 1882, type: !16616, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16618)
!16616 = !DISubroutineType(types: !16617)
!16617 = !{!422, !2563, !108, !104}
!16618 = !{!16619, !16620, !16621, !16622, !16623, !16624, !16626}
!16619 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16615, file: !2637, line: 1882, type: !2563)
!16620 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16615, file: !2637, line: 1882, type: !108)
!16621 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16615, file: !2637, line: 1882, type: !104)
!16622 = !DILocalVariable(name: "thread", scope: !16615, file: !2637, line: 1884, type: !2532)
!16623 = !DILocalVariable(name: "ret", scope: !16615, file: !2637, line: 1885, type: !422)
!16624 = !DILocalVariable(name: "__i", scope: !16625, file: !2637, line: 1887, type: !14711)
!16625 = distinct !DILexicalBlock(scope: !16615, file: !2637, line: 1887, column: 2)
!16626 = !DILocalVariable(name: "__key", scope: !16625, file: !2637, line: 1887, type: !14711)
!16627 = !DILocation(line: 0, scope: !16615)
!16628 = !DILocation(line: 0, scope: !16625)
!16629 = !DILocation(line: 0, scope: !14719, inlinedAt: !16630)
!16630 = distinct !DILocation(line: 1887, column: 2, scope: !16625)
!16631 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16632)
!16632 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16630)
!16633 = !DILocation(line: 0, scope: !14728, inlinedAt: !16632)
!16634 = !DILocation(line: 1888, column: 12, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16636, file: !2637, line: 1887, column: 26)
!16636 = distinct !DILexicalBlock(scope: !16625, file: !2637, line: 1887, column: 2)
!16637 = !DILocation(line: 1890, column: 14, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !16635, file: !2637, line: 1890, column: 7)
!16639 = !DILocation(line: 1890, column: 7, scope: !16635)
!16640 = !DILocalVariable(name: "thread", arg: 1, scope: !16641, file: !16642, line: 134, type: !2532)
!16641 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16642, file: !16642, line: 134, type: !16643, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16645)
!16642 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16643 = !DISubroutineType(types: !16644)
!16644 = !{null, !2532, !32, !104}
!16645 = !{!16640, !16646, !16647}
!16646 = !DILocalVariable(name: "value", arg: 2, scope: !16641, file: !16642, line: 135, type: !32)
!16647 = !DILocalVariable(name: "data", arg: 3, scope: !16641, file: !16642, line: 136, type: !104)
!16648 = !DILocation(line: 0, scope: !16641, inlinedAt: !16649)
!16649 = distinct !DILocation(line: 1891, column: 4, scope: !16650)
!16650 = distinct !DILexicalBlock(scope: !16638, file: !2637, line: 1890, column: 23)
!16651 = !DILocation(line: 0, scope: !16555, inlinedAt: !16652)
!16652 = distinct !DILocation(line: 138, column: 2, scope: !16641, inlinedAt: !16649)
!16653 = !DILocation(line: 67, column: 15, scope: !16555, inlinedAt: !16652)
!16654 = !DILocation(line: 67, column: 33, scope: !16555, inlinedAt: !16652)
!16655 = !DILocation(line: 139, column: 15, scope: !16641, inlinedAt: !16649)
!16656 = !DILocation(line: 139, column: 25, scope: !16641, inlinedAt: !16649)
!16657 = !DILocation(line: 1894, column: 4, scope: !16650)
!16658 = !DILocation(line: 1895, column: 10, scope: !16650)
!16659 = !DILocation(line: 1896, column: 4, scope: !16650)
!16660 = !DILocation(line: 1898, column: 3, scope: !16650)
!16661 = !DILocation(line: 0, scope: !14746, inlinedAt: !16662)
!16662 = distinct !DILocation(line: 1887, column: 2, scope: !16636)
!16663 = !DILocation(line: 0, scope: !14754, inlinedAt: !16664)
!16664 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16662)
!16665 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16664)
!16666 = !DILocation(line: 1901, column: 2, scope: !16615)
!16667 = distinct !DISubprogram(name: "z_sched_wait", scope: !2637, file: !2637, line: 1904, type: !16668, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !16671)
!16668 = !DISubroutineType(types: !16669)
!16669 = !{!108, !14722, !14711, !2563, !15510, !16670}
!16670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!16671 = !{!16672, !16673, !16674, !16675, !16676, !16677}
!16672 = !DILocalVariable(name: "lock", arg: 1, scope: !16667, file: !2637, line: 1904, type: !14722)
!16673 = !DILocalVariable(name: "key", arg: 2, scope: !16667, file: !2637, line: 1904, type: !14711)
!16674 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16667, file: !2637, line: 1905, type: !2563)
!16675 = !DILocalVariable(name: "timeout", arg: 4, scope: !16667, file: !2637, line: 1905, type: !15510)
!16676 = !DILocalVariable(name: "data", arg: 5, scope: !16667, file: !2637, line: 1905, type: !16670)
!16677 = !DILocalVariable(name: "ret", scope: !16667, file: !2637, line: 1907, type: !108)
!16678 = !DILocation(line: 0, scope: !16667)
!16679 = !DILocation(line: 1907, column: 12, scope: !16667)
!16680 = !DILocation(line: 1909, column: 11, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16667, file: !2637, line: 1909, column: 6)
!16682 = !DILocation(line: 1909, column: 6, scope: !16667)
!16683 = !DILocation(line: 1910, column: 11, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16681, file: !2637, line: 1909, column: 20)
!16685 = !DILocation(line: 1910, column: 26, scope: !16684)
!16686 = !DILocation(line: 1910, column: 9, scope: !16684)
!16687 = !DILocation(line: 1911, column: 2, scope: !16684)
!16688 = !DILocation(line: 1912, column: 2, scope: !16667)
!16689 = distinct !DISubprogram(name: "z_data_copy", scope: !16690, file: !16690, line: 22, type: !3389, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3372, retainedNodes: !437)
!16690 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16691 = !DILocation(line: 24, column: 2, scope: !16689)
!16692 = !DILocation(line: 27, column: 2, scope: !16689)
!16693 = !DILocation(line: 71, column: 1, scope: !16689)
!16694 = distinct !DISubprogram(name: "z_add_timeout", scope: !2674, file: !2674, line: 88, type: !16695, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16701)
!16695 = !DISubroutineType(types: !16696)
!16696 = !{null, !2647, !2666, !16697}
!16697 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !16698)
!16698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !16699)
!16699 = !{!16700}
!16700 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16698, file: !110, line: 66, baseType: !109, size: 64)
!16701 = !{!16702, !16703, !16704, !16705, !16711, !16712, !16715, !16718}
!16702 = !DILocalVariable(name: "to", arg: 1, scope: !16694, file: !2674, line: 88, type: !2647)
!16703 = !DILocalVariable(name: "fn", arg: 2, scope: !16694, file: !2674, line: 88, type: !2666)
!16704 = !DILocalVariable(name: "timeout", arg: 3, scope: !16694, file: !2674, line: 89, type: !16697)
!16705 = !DILocalVariable(name: "__i", scope: !16706, file: !2674, line: 102, type: !16707)
!16706 = distinct !DILexicalBlock(scope: !16694, file: !2674, line: 102, column: 2)
!16707 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !16708)
!16708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !16709)
!16709 = !{!16710}
!16710 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16708, file: !436, line: 33, baseType: !108, size: 32)
!16711 = !DILocalVariable(name: "__key", scope: !16706, file: !2674, line: 102, type: !16707)
!16712 = !DILocalVariable(name: "t", scope: !16713, file: !2674, line: 103, type: !2647)
!16713 = distinct !DILexicalBlock(scope: !16714, file: !2674, line: 102, column: 24)
!16714 = distinct !DILexicalBlock(scope: !16706, file: !2674, line: 102, column: 2)
!16715 = !DILocalVariable(name: "ticks", scope: !16716, file: !2674, line: 107, type: !109)
!16716 = distinct !DILexicalBlock(scope: !16717, file: !2674, line: 106, column: 39)
!16717 = distinct !DILexicalBlock(scope: !16713, file: !2674, line: 105, column: 7)
!16718 = !DILocalVariable(name: "next_time", scope: !16719, file: !2674, line: 137, type: !220)
!16719 = distinct !DILexicalBlock(scope: !16720, file: !2674, line: 127, column: 22)
!16720 = distinct !DILexicalBlock(scope: !16713, file: !2674, line: 127, column: 7)
!16721 = !DILocation(line: 0, scope: !16694)
!16722 = !DILocation(line: 91, column: 6, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16694, file: !2674, line: 91, column: 6)
!16724 = !DILocation(line: 91, column: 6, scope: !16694)
!16725 = !DILocation(line: 100, column: 6, scope: !16694)
!16726 = !DILocation(line: 100, column: 9, scope: !16694)
!16727 = !DILocation(line: 0, scope: !16706)
!16728 = !DILocalVariable(name: "l", arg: 1, scope: !16729, file: !436, line: 136, type: !16732)
!16729 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !16730, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16733)
!16730 = !DISubroutineType(types: !16731)
!16731 = !{!16707, !16732}
!16732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!16733 = !{!16728, !16734}
!16734 = !DILocalVariable(name: "k", scope: !16729, file: !436, line: 139, type: !16707)
!16735 = !DILocation(line: 0, scope: !16729, inlinedAt: !16736)
!16736 = distinct !DILocation(line: 102, column: 2, scope: !16706)
!16737 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !16742)
!16738 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16739)
!16739 = !{!16740, !16741}
!16740 = !DILocalVariable(name: "key", scope: !16738, file: !4063, line: 44, type: !32)
!16741 = !DILocalVariable(name: "tmp", scope: !16738, file: !4063, line: 53, type: !32)
!16742 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !16736)
!16743 = !{i64 1971082}
!16744 = !DILocation(line: 0, scope: !16738, inlinedAt: !16742)
!16745 = !DILocation(line: 106, column: 33, scope: !16717)
!16746 = !DILocation(line: 105, column: 7, scope: !16713)
!16747 = !DILocation(line: 107, column: 50, scope: !16716)
!16748 = !DILocation(line: 107, column: 48, scope: !16716)
!16749 = !DILocation(line: 0, scope: !16716)
!16750 = !DILocation(line: 109, column: 17, scope: !16716)
!16751 = !DILocation(line: 110, column: 3, scope: !16716)
!16752 = !DILocation(line: 111, column: 31, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16717, file: !2674, line: 110, column: 10)
!16754 = !DILocation(line: 111, column: 37, scope: !16753)
!16755 = !DILocation(line: 111, column: 35, scope: !16753)
!16756 = !DILocation(line: 0, scope: !16717)
!16757 = !DILocation(line: 109, column: 8, scope: !16716)
!16758 = !DILocation(line: 109, column: 15, scope: !16716)
!16759 = !DILocation(line: 114, column: 12, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16713, file: !2674, line: 114, column: 3)
!16761 = !DILocation(line: 0, scope: !16713)
!16762 = !DILocation(line: 114, column: 3, scope: !16760)
!16763 = !DILocation(line: 115, column: 24, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16765, file: !2674, line: 115, column: 8)
!16765 = distinct !DILexicalBlock(scope: !16766, file: !2674, line: 114, column: 45)
!16766 = distinct !DILexicalBlock(scope: !16760, file: !2674, line: 114, column: 3)
!16767 = !DILocation(line: 115, column: 11, scope: !16764)
!16768 = !DILocation(line: 115, column: 18, scope: !16764)
!16769 = !DILocation(line: 115, column: 8, scope: !16765)
!16770 = !DILocation(line: 116, column: 15, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16764, file: !2674, line: 115, column: 32)
!16772 = !DILocation(line: 117, column: 26, scope: !16771)
!16773 = !DILocation(line: 117, column: 37, scope: !16771)
!16774 = !DILocation(line: 117, column: 5, scope: !16771)
!16775 = !DILocation(line: 123, column: 7, scope: !16713)
!16776 = !DILocation(line: 120, column: 15, scope: !16765)
!16777 = !DILocation(line: 114, column: 36, scope: !16766)
!16778 = distinct !{!16778, !16762, !16779}
!16779 = !DILocation(line: 121, column: 3, scope: !16760)
!16780 = !DILocation(line: 124, column: 41, scope: !16781)
!16781 = distinct !DILexicalBlock(scope: !16782, file: !2674, line: 123, column: 18)
!16782 = distinct !DILexicalBlock(scope: !16713, file: !2674, line: 123, column: 7)
!16783 = !DILocation(line: 124, column: 4, scope: !16781)
!16784 = !DILocation(line: 125, column: 3, scope: !16781)
!16785 = !DILocation(line: 127, column: 13, scope: !16720)
!16786 = !DILocation(line: 127, column: 10, scope: !16720)
!16787 = !DILocation(line: 127, column: 7, scope: !16713)
!16788 = !DILocation(line: 137, column: 24, scope: !16719)
!16789 = !DILocation(line: 0, scope: !16719)
!16790 = !DILocation(line: 139, column: 18, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16719, file: !2674, line: 139, column: 8)
!16792 = !DILocation(line: 139, column: 23, scope: !16791)
!16793 = !DILocation(line: 141, column: 5, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16791, file: !2674, line: 140, column: 48)
!16795 = !DILocation(line: 142, column: 4, scope: !16794)
!16796 = !DILocalVariable(name: "key", arg: 2, scope: !16797, file: !436, line: 190, type: !16707)
!16797 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !16798, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16800)
!16798 = !DISubroutineType(types: !16799)
!16799 = !{null, !16732, !16707}
!16800 = !{!16801, !16796}
!16801 = !DILocalVariable(name: "l", arg: 1, scope: !16797, file: !436, line: 189, type: !16732)
!16802 = !DILocation(line: 0, scope: !16797, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 102, column: 2, scope: !16714)
!16804 = !DILocalVariable(name: "key", arg: 1, scope: !16805, file: !4063, line: 84, type: !32)
!16805 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16806)
!16806 = !{!16804}
!16807 = !DILocation(line: 0, scope: !16805, inlinedAt: !16808)
!16808 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !16803)
!16809 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !16808)
!16810 = !{i64 1971899}
!16811 = !DILocation(line: 148, column: 1, scope: !16694)
!16812 = distinct !DISubprogram(name: "elapsed", scope: !2674, file: !2674, line: 62, type: !16813, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !437)
!16813 = !DISubroutineType(types: !16814)
!16814 = !{!220}
!16815 = !DILocation(line: 64, column: 9, scope: !16812)
!16816 = !DILocation(line: 64, column: 28, scope: !16812)
!16817 = !DILocation(line: 64, column: 35, scope: !16812)
!16818 = !DILocation(line: 64, column: 2, scope: !16812)
!16819 = distinct !DISubprogram(name: "first", scope: !2674, file: !2674, line: 39, type: !16820, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16822)
!16820 = !DISubroutineType(types: !16821)
!16821 = !{!2647}
!16822 = !{!16823}
!16823 = !DILocalVariable(name: "t", scope: !16819, file: !2674, line: 41, type: !16824)
!16824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!16825 = !DILocation(line: 41, column: 19, scope: !16819)
!16826 = !DILocation(line: 0, scope: !16819)
!16827 = !DILocation(line: 43, column: 9, scope: !16819)
!16828 = !DILocation(line: 43, column: 2, scope: !16819)
!16829 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !16830, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16832)
!16830 = !DISubroutineType(types: !16831)
!16831 = !{null, !16824, !16824}
!16832 = !{!16833, !16834, !16835}
!16833 = !DILocalVariable(name: "successor", arg: 1, scope: !16829, file: !367, line: 443, type: !16824)
!16834 = !DILocalVariable(name: "node", arg: 2, scope: !16829, file: !367, line: 443, type: !16824)
!16835 = !DILocalVariable(name: "prev", scope: !16829, file: !367, line: 445, type: !16836)
!16836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16824)
!16837 = !DILocation(line: 0, scope: !16829)
!16838 = !DILocation(line: 445, column: 39, scope: !16829)
!16839 = !DILocation(line: 447, column: 8, scope: !16829)
!16840 = !DILocation(line: 447, column: 13, scope: !16829)
!16841 = !DILocation(line: 448, column: 8, scope: !16829)
!16842 = !DILocation(line: 448, column: 13, scope: !16829)
!16843 = !DILocation(line: 449, column: 8, scope: !16829)
!16844 = !DILocation(line: 449, column: 13, scope: !16829)
!16845 = !DILocation(line: 450, column: 18, scope: !16829)
!16846 = !DILocation(line: 451, column: 1, scope: !16829)
!16847 = distinct !DISubprogram(name: "next", scope: !2674, file: !2674, line: 46, type: !16848, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16850)
!16848 = !DISubroutineType(types: !16849)
!16849 = !{!2647, !2647}
!16850 = !{!16851, !16852}
!16851 = !DILocalVariable(name: "t", arg: 1, scope: !16847, file: !2674, line: 46, type: !2647)
!16852 = !DILocalVariable(name: "n", scope: !16847, file: !2674, line: 48, type: !16824)
!16853 = !DILocation(line: 0, scope: !16847)
!16854 = !DILocation(line: 48, column: 58, scope: !16847)
!16855 = !DILocation(line: 48, column: 19, scope: !16847)
!16856 = !DILocation(line: 50, column: 9, scope: !16847)
!16857 = !DILocation(line: 50, column: 2, scope: !16847)
!16858 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !16859, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16862)
!16859 = !DISubroutineType(types: !16860)
!16860 = !{null, !16861, !16824}
!16861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 32)
!16862 = !{!16863, !16864, !16865}
!16863 = !DILocalVariable(name: "list", arg: 1, scope: !16858, file: !367, line: 404, type: !16861)
!16864 = !DILocalVariable(name: "node", arg: 2, scope: !16858, file: !367, line: 404, type: !16824)
!16865 = !DILocalVariable(name: "tail", scope: !16858, file: !367, line: 406, type: !16836)
!16866 = !DILocation(line: 0, scope: !16858)
!16867 = !DILocation(line: 406, column: 34, scope: !16858)
!16868 = !DILocation(line: 408, column: 8, scope: !16858)
!16869 = !DILocation(line: 408, column: 13, scope: !16858)
!16870 = !DILocation(line: 409, column: 8, scope: !16858)
!16871 = !DILocation(line: 409, column: 13, scope: !16858)
!16872 = !DILocation(line: 411, column: 8, scope: !16858)
!16873 = !DILocation(line: 411, column: 13, scope: !16858)
!16874 = !DILocation(line: 412, column: 13, scope: !16858)
!16875 = !DILocation(line: 413, column: 1, scope: !16858)
!16876 = distinct !DISubprogram(name: "next_timeout", scope: !2674, file: !2674, line: 67, type: !16813, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16877)
!16877 = !{!16878, !16879, !16880}
!16878 = !DILocalVariable(name: "to", scope: !16876, file: !2674, line: 69, type: !2647)
!16879 = !DILocalVariable(name: "ticks_elapsed", scope: !16876, file: !2674, line: 70, type: !220)
!16880 = !DILocalVariable(name: "ret", scope: !16876, file: !2674, line: 71, type: !220)
!16881 = !DILocation(line: 69, column: 24, scope: !16876)
!16882 = !DILocation(line: 0, scope: !16876)
!16883 = !DILocation(line: 70, column: 26, scope: !16876)
!16884 = !DILocation(line: 73, column: 10, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16876, file: !2674, line: 73, column: 6)
!16886 = !DILocation(line: 73, column: 19, scope: !16885)
!16887 = !DILocation(line: 74, column: 21, scope: !16885)
!16888 = !DILocation(line: 74, column: 30, scope: !16885)
!16889 = !DILocation(line: 74, column: 28, scope: !16885)
!16890 = !DILocation(line: 74, column: 45, scope: !16885)
!16891 = !DILocation(line: 73, column: 6, scope: !16876)
!16892 = !DILocation(line: 77, column: 9, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16885, file: !2674, line: 76, column: 9)
!16894 = !DILocation(line: 0, scope: !16885)
!16895 = !DILocation(line: 81, column: 20, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16876, file: !2674, line: 81, column: 6)
!16897 = !DILocation(line: 81, column: 6, scope: !16896)
!16898 = !DILocation(line: 81, column: 32, scope: !16896)
!16899 = !DILocation(line: 85, column: 2, scope: !16876)
!16900 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !16901, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16903)
!16901 = !DISubroutineType(types: !16902)
!16902 = !{!16824, !16861, !16824}
!16903 = !{!16904, !16905}
!16904 = !DILocalVariable(name: "list", arg: 1, scope: !16900, file: !367, line: 341, type: !16861)
!16905 = !DILocalVariable(name: "node", arg: 2, scope: !16900, file: !367, line: 342, type: !16824)
!16906 = !DILocation(line: 0, scope: !16900)
!16907 = !DILocation(line: 344, column: 15, scope: !16900)
!16908 = !DILocation(line: 344, column: 9, scope: !16900)
!16909 = !DILocation(line: 344, column: 26, scope: !16900)
!16910 = !DILocation(line: 344, column: 2, scope: !16900)
!16911 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !16901, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16912)
!16912 = !{!16913, !16914}
!16913 = !DILocalVariable(name: "list", arg: 1, scope: !16911, file: !367, line: 325, type: !16861)
!16914 = !DILocalVariable(name: "node", arg: 2, scope: !16911, file: !367, line: 326, type: !16824)
!16915 = !DILocation(line: 0, scope: !16911)
!16916 = !DILocation(line: 328, column: 24, scope: !16911)
!16917 = !DILocation(line: 328, column: 15, scope: !16911)
!16918 = !DILocation(line: 328, column: 9, scope: !16911)
!16919 = !DILocation(line: 328, column: 45, scope: !16911)
!16920 = !DILocation(line: 328, column: 2, scope: !16911)
!16921 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !16922, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16924)
!16922 = !DISubroutineType(types: !16923)
!16923 = !{!16824, !16861}
!16924 = !{!16925}
!16925 = !DILocalVariable(name: "list", arg: 1, scope: !16921, file: !367, line: 294, type: !16861)
!16926 = !DILocation(line: 0, scope: !16921)
!16927 = !DILocation(line: 296, column: 9, scope: !16921)
!16928 = !DILocation(line: 296, column: 2, scope: !16921)
!16929 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !16930, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16932)
!16930 = !DISubroutineType(types: !16931)
!16931 = !{!422, !16861}
!16932 = !{!16933}
!16933 = !DILocalVariable(name: "list", arg: 1, scope: !16929, file: !367, line: 266, type: !16861)
!16934 = !DILocation(line: 0, scope: !16929)
!16935 = !DILocation(line: 268, column: 15, scope: !16929)
!16936 = !DILocation(line: 268, column: 20, scope: !16929)
!16937 = !DILocation(line: 268, column: 2, scope: !16929)
!16938 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2674, file: !2674, line: 150, type: !16939, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16941)
!16939 = !DISubroutineType(types: !16940)
!16940 = !{!108, !2647}
!16941 = !{!16942, !16943, !16944, !16946}
!16942 = !DILocalVariable(name: "to", arg: 1, scope: !16938, file: !2674, line: 150, type: !2647)
!16943 = !DILocalVariable(name: "ret", scope: !16938, file: !2674, line: 152, type: !108)
!16944 = !DILocalVariable(name: "__i", scope: !16945, file: !2674, line: 154, type: !16707)
!16945 = distinct !DILexicalBlock(scope: !16938, file: !2674, line: 154, column: 2)
!16946 = !DILocalVariable(name: "__key", scope: !16945, file: !2674, line: 154, type: !16707)
!16947 = !DILocation(line: 0, scope: !16938)
!16948 = !DILocation(line: 0, scope: !16945)
!16949 = !DILocation(line: 0, scope: !16729, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 154, column: 2, scope: !16945)
!16951 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !16950)
!16953 = !DILocation(line: 0, scope: !16738, inlinedAt: !16952)
!16954 = !DILocation(line: 155, column: 7, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !2674, line: 155, column: 7)
!16956 = distinct !DILexicalBlock(scope: !16957, file: !2674, line: 154, column: 24)
!16957 = distinct !DILexicalBlock(scope: !16945, file: !2674, line: 154, column: 2)
!16958 = !DILocation(line: 155, column: 7, scope: !16956)
!16959 = !DILocation(line: 156, column: 4, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16955, file: !2674, line: 155, column: 39)
!16961 = !DILocation(line: 158, column: 3, scope: !16960)
!16962 = !DILocation(line: 0, scope: !16797, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 154, column: 2, scope: !16957)
!16964 = !DILocation(line: 0, scope: !16805, inlinedAt: !16965)
!16965 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !16963)
!16966 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !16965)
!16967 = !DILocation(line: 161, column: 2, scope: !16938)
!16968 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !16969, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16973)
!16969 = !DISubroutineType(types: !16970)
!16970 = !{!422, !16971}
!16971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16972, size: 32)
!16972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2651)
!16973 = !{!16974}
!16974 = !DILocalVariable(name: "node", arg: 1, scope: !16968, file: !367, line: 225, type: !16971)
!16975 = !DILocation(line: 0, scope: !16968)
!16976 = !DILocation(line: 227, column: 15, scope: !16968)
!16977 = !DILocation(line: 227, column: 20, scope: !16968)
!16978 = !DILocation(line: 227, column: 2, scope: !16968)
!16979 = distinct !DISubprogram(name: "remove_timeout", scope: !2674, file: !2674, line: 53, type: !2668, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16980)
!16980 = !{!16981}
!16981 = !DILocalVariable(name: "t", arg: 1, scope: !16979, file: !2674, line: 53, type: !2647)
!16982 = !DILocation(line: 0, scope: !16979)
!16983 = !DILocation(line: 55, column: 6, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16979, file: !2674, line: 55, column: 6)
!16985 = !DILocation(line: 55, column: 14, scope: !16984)
!16986 = !DILocation(line: 55, column: 6, scope: !16979)
!16987 = !DILocation(line: 56, column: 25, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16984, file: !2674, line: 55, column: 23)
!16989 = !DILocation(line: 56, column: 12, scope: !16988)
!16990 = !DILocation(line: 56, column: 19, scope: !16988)
!16991 = !DILocation(line: 57, column: 2, scope: !16988)
!16992 = !DILocation(line: 59, column: 23, scope: !16979)
!16993 = !DILocation(line: 59, column: 2, scope: !16979)
!16994 = !DILocation(line: 60, column: 1, scope: !16979)
!16995 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !16996, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !16998)
!16996 = !DISubroutineType(types: !16997)
!16997 = !{null, !16824}
!16998 = !{!16999, !17000, !17001}
!16999 = !DILocalVariable(name: "node", arg: 1, scope: !16995, file: !367, line: 496, type: !16824)
!17000 = !DILocalVariable(name: "prev", scope: !16995, file: !367, line: 498, type: !16836)
!17001 = !DILocalVariable(name: "next", scope: !16995, file: !367, line: 499, type: !16836)
!17002 = !DILocation(line: 0, scope: !16995)
!17003 = !DILocation(line: 498, column: 34, scope: !16995)
!17004 = !DILocation(line: 499, column: 34, scope: !16995)
!17005 = !DILocation(line: 501, column: 8, scope: !16995)
!17006 = !DILocation(line: 501, column: 13, scope: !16995)
!17007 = !DILocation(line: 502, column: 8, scope: !16995)
!17008 = !DILocation(line: 502, column: 13, scope: !16995)
!17009 = !DILocation(line: 503, column: 2, scope: !16995)
!17010 = !DILocation(line: 504, column: 1, scope: !16995)
!17011 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !16996, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17012)
!17012 = !{!17013}
!17013 = !DILocalVariable(name: "node", arg: 1, scope: !17011, file: !367, line: 211, type: !16824)
!17014 = !DILocation(line: 0, scope: !17011)
!17015 = !DILocation(line: 213, column: 8, scope: !17011)
!17016 = !DILocation(line: 213, column: 13, scope: !17011)
!17017 = !DILocation(line: 214, column: 8, scope: !17011)
!17018 = !DILocation(line: 214, column: 13, scope: !17011)
!17019 = !DILocation(line: 215, column: 1, scope: !17011)
!17020 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2674, file: !2674, line: 183, type: !17021, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17025)
!17021 = !DISubroutineType(types: !17022)
!17022 = !{!109, !17023}
!17023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17024, size: 32)
!17024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2648)
!17025 = !{!17026, !17027, !17028, !17030}
!17026 = !DILocalVariable(name: "timeout", arg: 1, scope: !17020, file: !2674, line: 183, type: !17023)
!17027 = !DILocalVariable(name: "ticks", scope: !17020, file: !2674, line: 185, type: !109)
!17028 = !DILocalVariable(name: "__i", scope: !17029, file: !2674, line: 187, type: !16707)
!17029 = distinct !DILexicalBlock(scope: !17020, file: !2674, line: 187, column: 2)
!17030 = !DILocalVariable(name: "__key", scope: !17029, file: !2674, line: 187, type: !16707)
!17031 = !DILocation(line: 0, scope: !17020)
!17032 = !DILocation(line: 0, scope: !17029)
!17033 = !DILocation(line: 0, scope: !16729, inlinedAt: !17034)
!17034 = distinct !DILocation(line: 187, column: 2, scope: !17029)
!17035 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17036)
!17036 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17034)
!17037 = !DILocation(line: 0, scope: !16738, inlinedAt: !17036)
!17038 = !DILocation(line: 188, column: 11, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17040, file: !2674, line: 187, column: 24)
!17040 = distinct !DILexicalBlock(scope: !17029, file: !2674, line: 187, column: 2)
!17041 = !DILocation(line: 0, scope: !16797, inlinedAt: !17042)
!17042 = distinct !DILocation(line: 187, column: 2, scope: !17040)
!17043 = !DILocation(line: 0, scope: !16805, inlinedAt: !17044)
!17044 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17042)
!17045 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17044)
!17046 = !DILocation(line: 191, column: 2, scope: !17020)
!17047 = distinct !DISubprogram(name: "timeout_rem", scope: !2674, file: !2674, line: 165, type: !17021, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17048)
!17048 = !{!17049, !17050, !17051}
!17049 = !DILocalVariable(name: "timeout", arg: 1, scope: !17047, file: !2674, line: 165, type: !17023)
!17050 = !DILocalVariable(name: "ticks", scope: !17047, file: !2674, line: 167, type: !109)
!17051 = !DILocalVariable(name: "t", scope: !17052, file: !2674, line: 173, type: !2647)
!17052 = distinct !DILexicalBlock(scope: !17047, file: !2674, line: 173, column: 2)
!17053 = !DILocation(line: 0, scope: !17047)
!17054 = !DILocation(line: 169, column: 6, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17047, file: !2674, line: 169, column: 6)
!17056 = !DILocation(line: 169, column: 6, scope: !17047)
!17057 = !DILocation(line: 173, column: 28, scope: !17052)
!17058 = !DILocation(line: 0, scope: !17052)
!17059 = !DILocation(line: 173, column: 39, scope: !17060)
!17060 = distinct !DILexicalBlock(scope: !17052, file: !2674, line: 173, column: 2)
!17061 = !DILocation(line: 173, column: 2, scope: !17052)
!17062 = !DILocation(line: 174, column: 15, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17060, file: !2674, line: 173, column: 61)
!17064 = !DILocation(line: 174, column: 9, scope: !17063)
!17065 = !DILocation(line: 175, column: 15, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17063, file: !2674, line: 175, column: 7)
!17067 = !DILocation(line: 175, column: 7, scope: !17063)
!17068 = !DILocation(line: 173, column: 52, scope: !17060)
!17069 = distinct !{!17069, !17061, !17070}
!17070 = !DILocation(line: 178, column: 2, scope: !17052)
!17071 = !DILocation(line: 180, column: 17, scope: !17047)
!17072 = !DILocation(line: 180, column: 15, scope: !17047)
!17073 = !DILocation(line: 180, column: 2, scope: !17047)
!17074 = !DILocation(line: 181, column: 1, scope: !17047)
!17075 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14390, file: !14390, line: 35, type: !17076, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17078)
!17076 = !DISubroutineType(types: !17077)
!17077 = !{!422, !17023}
!17078 = !{!17079}
!17079 = !DILocalVariable(name: "to", arg: 1, scope: !17075, file: !14390, line: 35, type: !17023)
!17080 = !DILocation(line: 0, scope: !17075)
!17081 = !DILocation(line: 37, column: 35, scope: !17075)
!17082 = !DILocation(line: 37, column: 10, scope: !17075)
!17083 = !DILocation(line: 37, column: 9, scope: !17075)
!17084 = !DILocation(line: 37, column: 2, scope: !17075)
!17085 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2674, file: !2674, line: 194, type: !17021, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17086)
!17086 = !{!17087, !17088, !17089, !17091}
!17087 = !DILocalVariable(name: "timeout", arg: 1, scope: !17085, file: !2674, line: 194, type: !17023)
!17088 = !DILocalVariable(name: "ticks", scope: !17085, file: !2674, line: 196, type: !109)
!17089 = !DILocalVariable(name: "__i", scope: !17090, file: !2674, line: 198, type: !16707)
!17090 = distinct !DILexicalBlock(scope: !17085, file: !2674, line: 198, column: 2)
!17091 = !DILocalVariable(name: "__key", scope: !17090, file: !2674, line: 198, type: !16707)
!17092 = !DILocation(line: 0, scope: !17085)
!17093 = !DILocation(line: 0, scope: !17090)
!17094 = !DILocation(line: 0, scope: !16729, inlinedAt: !17095)
!17095 = distinct !DILocation(line: 198, column: 2, scope: !17090)
!17096 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17097)
!17097 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17095)
!17098 = !DILocation(line: 0, scope: !16738, inlinedAt: !17097)
!17099 = !DILocation(line: 199, column: 11, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17101, file: !2674, line: 198, column: 24)
!17101 = distinct !DILexicalBlock(scope: !17090, file: !2674, line: 198, column: 2)
!17102 = !DILocation(line: 199, column: 23, scope: !17100)
!17103 = !DILocation(line: 0, scope: !16797, inlinedAt: !17104)
!17104 = distinct !DILocation(line: 198, column: 2, scope: !17101)
!17105 = !DILocation(line: 0, scope: !16805, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17104)
!17107 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17106)
!17108 = !DILocation(line: 199, column: 21, scope: !17100)
!17109 = !DILocation(line: 202, column: 2, scope: !17085)
!17110 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2674, file: !2674, line: 205, type: !16813, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17111)
!17111 = !{!17112, !17113, !17115}
!17112 = !DILocalVariable(name: "ret", scope: !17110, file: !2674, line: 207, type: !220)
!17113 = !DILocalVariable(name: "__i", scope: !17114, file: !2674, line: 209, type: !16707)
!17114 = distinct !DILexicalBlock(scope: !17110, file: !2674, line: 209, column: 2)
!17115 = !DILocalVariable(name: "__key", scope: !17114, file: !2674, line: 209, type: !16707)
!17116 = !DILocation(line: 0, scope: !17110)
!17117 = !DILocation(line: 0, scope: !17114)
!17118 = !DILocation(line: 0, scope: !16729, inlinedAt: !17119)
!17119 = distinct !DILocation(line: 209, column: 2, scope: !17114)
!17120 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17121)
!17121 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17119)
!17122 = !DILocation(line: 0, scope: !16738, inlinedAt: !17121)
!17123 = !DILocation(line: 210, column: 9, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17125, file: !2674, line: 209, column: 24)
!17125 = distinct !DILexicalBlock(scope: !17114, file: !2674, line: 209, column: 2)
!17126 = !DILocation(line: 0, scope: !16797, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 209, column: 2, scope: !17125)
!17128 = !DILocation(line: 0, scope: !16805, inlinedAt: !17129)
!17129 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17127)
!17130 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17129)
!17131 = !DILocation(line: 212, column: 2, scope: !17110)
!17132 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2674, file: !2674, line: 215, type: !11936, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17133)
!17133 = !{!17134, !17135, !17136, !17138, !17139, !17142, !17143}
!17134 = !DILocalVariable(name: "ticks", arg: 1, scope: !17132, file: !2674, line: 215, type: !220)
!17135 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17132, file: !2674, line: 215, type: !422)
!17136 = !DILocalVariable(name: "__i", scope: !17137, file: !2674, line: 217, type: !16707)
!17137 = distinct !DILexicalBlock(scope: !17132, file: !2674, line: 217, column: 2)
!17138 = !DILocalVariable(name: "__key", scope: !17137, file: !2674, line: 217, type: !16707)
!17139 = !DILocalVariable(name: "next_to", scope: !17140, file: !2674, line: 218, type: !108)
!17140 = distinct !DILexicalBlock(scope: !17141, file: !2674, line: 217, column: 24)
!17141 = distinct !DILexicalBlock(scope: !17137, file: !2674, line: 217, column: 2)
!17142 = !DILocalVariable(name: "sooner", scope: !17140, file: !2674, line: 219, type: !422)
!17143 = !DILocalVariable(name: "imminent", scope: !17140, file: !2674, line: 221, type: !422)
!17144 = !DILocation(line: 0, scope: !17132)
!17145 = !DILocation(line: 0, scope: !17137)
!17146 = !DILocation(line: 0, scope: !16729, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 217, column: 2, scope: !17137)
!17148 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17149)
!17149 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17147)
!17150 = !DILocation(line: 0, scope: !16738, inlinedAt: !17149)
!17151 = !DILocation(line: 218, column: 17, scope: !17140)
!17152 = !DILocation(line: 0, scope: !17140)
!17153 = !DILocation(line: 221, column: 27, scope: !17140)
!17154 = !DILocation(line: 233, column: 17, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17140, file: !2674, line: 233, column: 7)
!17156 = !DILocation(line: 234, column: 26, scope: !17157)
!17157 = distinct !DILexicalBlock(scope: !17155, file: !2674, line: 233, column: 56)
!17158 = !DILocation(line: 234, column: 4, scope: !17157)
!17159 = !DILocation(line: 235, column: 3, scope: !17157)
!17160 = !DILocation(line: 0, scope: !16797, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 217, column: 2, scope: !17141)
!17162 = !DILocation(line: 0, scope: !16805, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17161)
!17164 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17163)
!17165 = !DILocation(line: 237, column: 1, scope: !17132)
!17166 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2674, file: !2674, line: 239, type: !17167, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17169)
!17167 = !DISubroutineType(types: !17168)
!17168 = !{null, !220}
!17169 = !{!17170, !17171, !17172, !17174}
!17170 = !DILocalVariable(name: "ticks", arg: 1, scope: !17166, file: !2674, line: 239, type: !220)
!17171 = !DILocalVariable(name: "key", scope: !17166, file: !2674, line: 245, type: !16707)
!17172 = !DILocalVariable(name: "t", scope: !17173, file: !2674, line: 262, type: !2647)
!17173 = distinct !DILexicalBlock(scope: !17166, file: !2674, line: 261, column: 67)
!17174 = !DILocalVariable(name: "dt", scope: !17173, file: !2674, line: 263, type: !108)
!17175 = !DILocation(line: 0, scope: !17166)
!17176 = !DILocation(line: 242, column: 2, scope: !17166)
!17177 = !DILocation(line: 0, scope: !16729, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 245, column: 25, scope: !17166)
!17179 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17178)
!17181 = !DILocation(line: 0, scope: !16738, inlinedAt: !17180)
!17182 = !DILocation(line: 261, column: 9, scope: !17166)
!17183 = !DILocation(line: 261, column: 17, scope: !17166)
!17184 = !DILocation(line: 261, column: 25, scope: !17166)
!17185 = !DILocation(line: 261, column: 37, scope: !17166)
!17186 = !DILocation(line: 261, column: 47, scope: !17166)
!17187 = !DILocation(line: 261, column: 44, scope: !17166)
!17188 = !DILocation(line: 261, column: 2, scope: !17166)
!17189 = !DILocation(line: 0, scope: !17173)
!17190 = !DILocation(line: 263, column: 12, scope: !17173)
!17191 = !DILocation(line: 265, column: 16, scope: !17173)
!17192 = !DILocation(line: 265, column: 13, scope: !17173)
!17193 = !DILocation(line: 266, column: 13, scope: !17173)
!17194 = !DILocation(line: 267, column: 3, scope: !17173)
!17195 = !DILocation(line: 0, scope: !16797, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 269, column: 3, scope: !17173)
!17197 = !DILocation(line: 0, scope: !16805, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17196)
!17199 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17198)
!17200 = !DILocation(line: 270, column: 6, scope: !17173)
!17201 = !DILocation(line: 270, column: 3, scope: !17173)
!17202 = !DILocation(line: 0, scope: !16729, inlinedAt: !17203)
!17203 = distinct !DILocation(line: 271, column: 9, scope: !17173)
!17204 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17203)
!17206 = !DILocation(line: 0, scope: !16738, inlinedAt: !17205)
!17207 = !DILocation(line: 272, column: 22, scope: !17173)
!17208 = distinct !{!17208, !17188, !17209}
!17209 = !DILocation(line: 273, column: 2, scope: !17166)
!17210 = !DILocation(line: 276, column: 19, scope: !17211)
!17211 = distinct !DILexicalBlock(scope: !17212, file: !2674, line: 275, column: 23)
!17212 = distinct !DILexicalBlock(scope: !17166, file: !2674, line: 275, column: 6)
!17213 = !DILocation(line: 277, column: 2, scope: !17211)
!17214 = !DILocation(line: 279, column: 15, scope: !17166)
!17215 = !DILocation(line: 279, column: 12, scope: !17166)
!17216 = !DILocation(line: 280, column: 21, scope: !17166)
!17217 = !DILocation(line: 282, column: 24, scope: !17166)
!17218 = !DILocation(line: 282, column: 2, scope: !17166)
!17219 = !DILocation(line: 0, scope: !16797, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 284, column: 2, scope: !17166)
!17221 = !DILocation(line: 0, scope: !16805, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17220)
!17223 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17222)
!17224 = !DILocation(line: 285, column: 1, scope: !17166)
!17225 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2674, file: !2674, line: 287, type: !17226, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17228)
!17226 = !DISubroutineType(types: !17227)
!17227 = !{!111}
!17228 = !{!17229, !17230, !17232}
!17229 = !DILocalVariable(name: "t", scope: !17225, file: !2674, line: 289, type: !114)
!17230 = !DILocalVariable(name: "__i", scope: !17231, file: !2674, line: 291, type: !16707)
!17231 = distinct !DILexicalBlock(scope: !17225, file: !2674, line: 291, column: 2)
!17232 = !DILocalVariable(name: "__key", scope: !17231, file: !2674, line: 291, type: !16707)
!17233 = !DILocation(line: 0, scope: !17225)
!17234 = !DILocation(line: 0, scope: !17231)
!17235 = !DILocation(line: 0, scope: !16729, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 291, column: 2, scope: !17231)
!17237 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17238)
!17238 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17236)
!17239 = !DILocation(line: 0, scope: !16738, inlinedAt: !17238)
!17240 = !DILocation(line: 292, column: 7, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17242, file: !2674, line: 291, column: 24)
!17242 = distinct !DILexicalBlock(scope: !17231, file: !2674, line: 291, column: 2)
!17243 = !DILocation(line: 292, column: 19, scope: !17241)
!17244 = !DILocation(line: 0, scope: !16797, inlinedAt: !17245)
!17245 = distinct !DILocation(line: 291, column: 2, scope: !17242)
!17246 = !DILocation(line: 0, scope: !16805, inlinedAt: !17247)
!17247 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17245)
!17248 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17247)
!17249 = !DILocation(line: 292, column: 17, scope: !17241)
!17250 = !DILocation(line: 294, column: 2, scope: !17225)
!17251 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2674, file: !2674, line: 297, type: !7110, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !437)
!17252 = !DILocation(line: 300, column: 19, scope: !17251)
!17253 = !DILocation(line: 300, column: 9, scope: !17251)
!17254 = !DILocation(line: 300, column: 2, scope: !17251)
!17255 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2674, file: !2674, line: 306, type: !17226, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !437)
!17256 = !DILocation(line: 308, column: 9, scope: !17255)
!17257 = !DILocation(line: 308, column: 2, scope: !17255)
!17258 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2674, file: !2674, line: 319, type: !7120, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17259)
!17259 = !{!17260, !17261, !17262, !17263}
!17260 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17258, file: !2674, line: 319, type: !113)
!17261 = !DILocalVariable(name: "start_cycles", scope: !17258, file: !2674, line: 328, type: !113)
!17262 = !DILocalVariable(name: "cycles_to_wait", scope: !17258, file: !2674, line: 331, type: !113)
!17263 = !DILocalVariable(name: "current_cycles", scope: !17264, file: !2674, line: 338, type: !113)
!17264 = distinct !DILexicalBlock(scope: !17265, file: !2674, line: 337, column: 11)
!17265 = distinct !DILexicalBlock(scope: !17266, file: !2674, line: 337, column: 2)
!17266 = distinct !DILexicalBlock(scope: !17258, file: !2674, line: 337, column: 2)
!17267 = !DILocation(line: 0, scope: !17258)
!17268 = !DILocation(line: 322, column: 19, scope: !17269)
!17269 = distinct !DILexicalBlock(scope: !17258, file: !2674, line: 322, column: 6)
!17270 = !DILocation(line: 322, column: 6, scope: !17258)
!17271 = !DILocation(line: 328, column: 26, scope: !17258)
!17272 = !DILocation(line: 333, column: 43, scope: !17258)
!17273 = !DILocation(line: 337, column: 2, scope: !17258)
!17274 = !DILocation(line: 338, column: 29, scope: !17264)
!17275 = !DILocation(line: 0, scope: !17264)
!17276 = !DILocation(line: 341, column: 23, scope: !17277)
!17277 = distinct !DILexicalBlock(scope: !17264, file: !2674, line: 341, column: 7)
!17278 = !DILocation(line: 341, column: 39, scope: !17277)
!17279 = !DILocation(line: 349, column: 1, scope: !17258)
!17280 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !359, file: !359, line: 1675, type: !7110, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !437)
!17281 = !DILocation(line: 1677, column: 9, scope: !17280)
!17282 = !DILocation(line: 1677, column: 2, scope: !17280)
!17283 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17284, file: !17284, line: 24, type: !7110, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !437)
!17284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17285 = !DILocation(line: 26, column: 9, scope: !17283)
!17286 = !DILocation(line: 26, column: 2, scope: !17283)
!17287 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2674, file: !2674, line: 364, type: !17288, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !17290)
!17288 = !DISubroutineType(types: !17289)
!17289 = !{!114, !16697}
!17290 = !{!17291, !17292}
!17291 = !DILocalVariable(name: "timeout", arg: 1, scope: !17287, file: !2674, line: 364, type: !16697)
!17292 = !DILocalVariable(name: "dt", scope: !17287, file: !2674, line: 366, type: !109)
!17293 = !DILocation(line: 0, scope: !17287)
!17294 = !DILocation(line: 368, column: 6, scope: !17287)
!17295 = !DILocation(line: 371, column: 10, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17297, file: !2674, line: 370, column: 47)
!17297 = distinct !DILexicalBlock(scope: !17298, file: !2674, line: 370, column: 13)
!17298 = distinct !DILexicalBlock(scope: !17287, file: !2674, line: 368, column: 6)
!17299 = !DILocation(line: 371, column: 3, scope: !17296)
!17300 = !DILocation(line: 376, column: 58, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17302, file: !2674, line: 376, column: 7)
!17302 = distinct !DILexicalBlock(scope: !17297, file: !2674, line: 372, column: 9)
!17303 = !DILocation(line: 376, column: 7, scope: !17302)
!17304 = !DILocation(line: 376, column: 43, scope: !17301)
!17305 = !DILocation(line: 377, column: 4, scope: !17306)
!17306 = distinct !DILexicalBlock(scope: !17301, file: !2674, line: 376, column: 64)
!17307 = !DILocation(line: 379, column: 10, scope: !17302)
!17308 = !DILocation(line: 379, column: 33, scope: !17302)
!17309 = !DILocation(line: 379, column: 31, scope: !17302)
!17310 = !DILocation(line: 379, column: 3, scope: !17302)
!17311 = !DILocation(line: 0, scope: !17298)
!17312 = !DILocation(line: 381, column: 1, scope: !17287)
!17313 = distinct !DISubprogram(name: "z_timer_expiration_handler", scope: !2805, file: !2805, line: 23, type: !2710, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17314)
!17314 = !{!17315, !17316, !17317, !17318, !17323}
!17315 = !DILocalVariable(name: "t", arg: 1, scope: !17313, file: !2805, line: 23, type: !2712)
!17316 = !DILocalVariable(name: "timer", scope: !17313, file: !2805, line: 25, type: !2686)
!17317 = !DILocalVariable(name: "thread", scope: !17313, file: !2805, line: 26, type: !2732)
!17318 = !DILocalVariable(name: "key", scope: !17313, file: !2805, line: 27, type: !17319)
!17319 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !17320)
!17320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !17321)
!17321 = !{!17322}
!17322 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17320, file: !436, line: 33, baseType: !108, size: 32)
!17323 = !DILocalVariable(name: "next", scope: !17324, file: !2805, line: 35, type: !2726)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !2805, line: 34, column: 47)
!17325 = distinct !DILexicalBlock(scope: !17313, file: !2805, line: 33, column: 6)
!17326 = !DILocation(line: 0, scope: !17313)
!17327 = !DILocation(line: 25, column: 26, scope: !17313)
!17328 = !DILocalVariable(name: "l", arg: 1, scope: !17329, file: !436, line: 136, type: !17332)
!17329 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !17330, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17333)
!17330 = !DISubroutineType(types: !17331)
!17331 = !{!17319, !17332}
!17332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 32)
!17333 = !{!17328, !17334}
!17334 = !DILocalVariable(name: "k", scope: !17329, file: !436, line: 139, type: !17319)
!17335 = !DILocation(line: 0, scope: !17329, inlinedAt: !17336)
!17336 = distinct !DILocation(line: 27, column: 25, scope: !17313)
!17337 = !DILocation(line: 55, column: 2, scope: !17338, inlinedAt: !17342)
!17338 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4063, file: !4063, line: 42, type: !4064, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17339)
!17339 = !{!17340, !17341}
!17340 = !DILocalVariable(name: "key", scope: !17338, file: !4063, line: 44, type: !32)
!17341 = !DILocalVariable(name: "tmp", scope: !17338, file: !4063, line: 53, type: !32)
!17342 = distinct !DILocation(line: 145, column: 10, scope: !17329, inlinedAt: !17336)
!17343 = !{i64 1970133}
!17344 = !DILocation(line: 0, scope: !17338, inlinedAt: !17342)
!17345 = !DILocation(line: 33, column: 7, scope: !17325)
!17346 = !DILocation(line: 33, column: 46, scope: !17325)
!17347 = !DILocation(line: 0, scope: !17324)
!17348 = !DILocation(line: 49, column: 10, scope: !17324)
!17349 = !DILocation(line: 52, column: 3, scope: !17324)
!17350 = !DILocation(line: 54, column: 2, scope: !17324)
!17351 = !DILocation(line: 57, column: 9, scope: !17313)
!17352 = !DILocation(line: 57, column: 16, scope: !17313)
!17353 = !DILocation(line: 60, column: 13, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17313, file: !2805, line: 60, column: 6)
!17355 = !DILocation(line: 60, column: 23, scope: !17354)
!17356 = !DILocation(line: 60, column: 6, scope: !17313)
!17357 = !DILocalVariable(name: "key", arg: 2, scope: !17358, file: !436, line: 190, type: !17319)
!17358 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !17359, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17361)
!17359 = !DISubroutineType(types: !17360)
!17360 = !{null, !17332, !17319}
!17361 = !{!17362, !17357}
!17362 = !DILocalVariable(name: "l", arg: 1, scope: !17358, file: !436, line: 189, type: !17332)
!17363 = !DILocation(line: 0, scope: !17358, inlinedAt: !17364)
!17364 = distinct !DILocation(line: 62, column: 3, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17354, file: !2805, line: 60, column: 32)
!17366 = !DILocalVariable(name: "key", arg: 1, scope: !17367, file: !4063, line: 84, type: !32)
!17367 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4063, file: !4063, line: 84, type: !4076, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17368)
!17368 = !{!17366}
!17369 = !DILocation(line: 0, scope: !17367, inlinedAt: !17370)
!17370 = distinct !DILocation(line: 215, column: 2, scope: !17358, inlinedAt: !17364)
!17371 = !DILocation(line: 95, column: 2, scope: !17367, inlinedAt: !17370)
!17372 = !{i64 1970950}
!17373 = !DILocation(line: 63, column: 10, scope: !17365)
!17374 = !DILocation(line: 63, column: 3, scope: !17365)
!17375 = !DILocation(line: 0, scope: !17329, inlinedAt: !17376)
!17376 = distinct !DILocation(line: 64, column: 9, scope: !17365)
!17377 = !DILocation(line: 55, column: 2, scope: !17338, inlinedAt: !17378)
!17378 = distinct !DILocation(line: 145, column: 10, scope: !17329, inlinedAt: !17376)
!17379 = !DILocation(line: 0, scope: !17338, inlinedAt: !17378)
!17380 = !DILocation(line: 65, column: 2, scope: !17365)
!17381 = !DILocation(line: 72, column: 32, scope: !17313)
!17382 = !DILocation(line: 72, column: 11, scope: !17313)
!17383 = !DILocation(line: 74, column: 13, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17313, file: !2805, line: 74, column: 6)
!17385 = !DILocation(line: 74, column: 6, scope: !17313)
!17386 = !DILocation(line: 0, scope: !17358, inlinedAt: !17387)
!17387 = distinct !DILocation(line: 75, column: 3, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17384, file: !2805, line: 74, column: 22)
!17389 = !DILocation(line: 0, scope: !17367, inlinedAt: !17390)
!17390 = distinct !DILocation(line: 215, column: 2, scope: !17358, inlinedAt: !17387)
!17391 = !DILocation(line: 95, column: 2, scope: !17367, inlinedAt: !17390)
!17392 = !DILocation(line: 76, column: 3, scope: !17388)
!17393 = !DILocation(line: 79, column: 2, scope: !17313)
!17394 = !DILocalVariable(name: "thread", arg: 1, scope: !17395, file: !14016, line: 65, type: !2732)
!17395 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14016, file: !14016, line: 65, type: !17396, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17398)
!17396 = !DISubroutineType(types: !17397)
!17397 = !{null, !2732, !32}
!17398 = !{!17394, !17399}
!17399 = !DILocalVariable(name: "value", arg: 2, scope: !17395, file: !14016, line: 65, type: !32)
!17400 = !DILocation(line: 0, scope: !17395, inlinedAt: !17401)
!17401 = distinct !DILocation(line: 81, column: 2, scope: !17313)
!17402 = !DILocation(line: 67, column: 15, scope: !17395, inlinedAt: !17401)
!17403 = !DILocation(line: 67, column: 33, scope: !17395, inlinedAt: !17401)
!17404 = !DILocation(line: 0, scope: !17358, inlinedAt: !17405)
!17405 = distinct !DILocation(line: 83, column: 2, scope: !17313)
!17406 = !DILocation(line: 0, scope: !17367, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 215, column: 2, scope: !17358, inlinedAt: !17405)
!17408 = !DILocation(line: 95, column: 2, scope: !17367, inlinedAt: !17407)
!17409 = !DILocation(line: 85, column: 2, scope: !17313)
!17410 = !DILocation(line: 86, column: 1, scope: !17313)
!17411 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3785, file: !3785, line: 564, type: !17226, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !437)
!17412 = !DILocation(line: 573, column: 2, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17411, file: !3785, line: 573, column: 2)
!17414 = !{i64 2154086669}
!17415 = !DILocation(line: 574, column: 9, scope: !17411)
!17416 = !DILocation(line: 574, column: 2, scope: !17411)
!17417 = distinct !DISubprogram(name: "z_waitq_head", scope: !14322, file: !14322, line: 52, type: !17418, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17420)
!17418 = !DISubroutineType(types: !17419)
!17419 = !{!2732, !2749}
!17420 = !{!17421}
!17421 = !DILocalVariable(name: "w", arg: 1, scope: !17417, file: !14322, line: 52, type: !2749)
!17422 = !DILocation(line: 0, scope: !17417)
!17423 = !DILocation(line: 54, column: 52, scope: !17417)
!17424 = !DILocation(line: 54, column: 28, scope: !17417)
!17425 = !DILocation(line: 54, column: 9, scope: !17417)
!17426 = !DILocation(line: 54, column: 2, scope: !17417)
!17427 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17428, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17431)
!17428 = !DISubroutineType(types: !17429)
!17429 = !{!2803, !17430}
!17430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!17431 = !{!17432}
!17432 = !DILocalVariable(name: "list", arg: 1, scope: !17427, file: !367, line: 294, type: !17430)
!17433 = !DILocation(line: 0, scope: !17427)
!17434 = !DILocation(line: 296, column: 9, scope: !17427)
!17435 = !DILocation(line: 296, column: 49, scope: !17427)
!17436 = !DILocation(line: 296, column: 2, scope: !17427)
!17437 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17438, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17440)
!17438 = !DISubroutineType(types: !17439)
!17439 = !{!422, !17430}
!17440 = !{!17441}
!17441 = !DILocalVariable(name: "list", arg: 1, scope: !17437, file: !367, line: 266, type: !17430)
!17442 = !DILocation(line: 0, scope: !17437)
!17443 = !DILocation(line: 268, column: 15, scope: !17437)
!17444 = !DILocation(line: 268, column: 20, scope: !17437)
!17445 = !DILocation(line: 268, column: 2, scope: !17437)
!17446 = distinct !DISubprogram(name: "k_timer_init", scope: !2805, file: !2805, line: 89, type: !17447, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17451)
!17447 = !DISubroutineType(types: !17448)
!17448 = !{null, !2686, !17449, !17450}
!17449 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_expiry_t", file: !359, line: 1381, baseType: !2721)
!17450 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_stop_t", file: !359, line: 1397, baseType: !2721)
!17451 = !{!17452, !17453, !17454}
!17452 = !DILocalVariable(name: "timer", arg: 1, scope: !17446, file: !2805, line: 89, type: !2686)
!17453 = !DILocalVariable(name: "expiry_fn", arg: 2, scope: !17446, file: !2805, line: 90, type: !17449)
!17454 = !DILocalVariable(name: "stop_fn", arg: 3, scope: !17446, file: !2805, line: 91, type: !17450)
!17455 = !DILocation(line: 0, scope: !17446)
!17456 = !DILocation(line: 93, column: 9, scope: !17446)
!17457 = !DILocation(line: 93, column: 19, scope: !17446)
!17458 = !DILocation(line: 94, column: 9, scope: !17446)
!17459 = !DILocation(line: 94, column: 17, scope: !17446)
!17460 = !DILocation(line: 95, column: 9, scope: !17446)
!17461 = !DILocation(line: 95, column: 16, scope: !17446)
!17462 = !DILocation(line: 98, column: 24, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17464, file: !2805, line: 97, column: 41)
!17464 = distinct !DILexicalBlock(scope: !17446, file: !2805, line: 97, column: 6)
!17465 = !DILocation(line: 98, column: 3, scope: !17463)
!17466 = !DILocation(line: 101, column: 25, scope: !17446)
!17467 = !DILocation(line: 101, column: 2, scope: !17446)
!17468 = !DILocation(line: 105, column: 9, scope: !17446)
!17469 = !DILocation(line: 105, column: 19, scope: !17446)
!17470 = !DILocation(line: 108, column: 1, scope: !17446)
!17471 = distinct !DISubprogram(name: "z_waitq_init", scope: !14322, file: !14322, line: 47, type: !17472, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17474)
!17472 = !DISubroutineType(types: !17473)
!17473 = !{null, !2749}
!17474 = !{!17475}
!17475 = !DILocalVariable(name: "w", arg: 1, scope: !17471, file: !14322, line: 47, type: !2749)
!17476 = !DILocation(line: 0, scope: !17471)
!17477 = !DILocation(line: 49, column: 21, scope: !17471)
!17478 = !DILocation(line: 49, column: 2, scope: !17471)
!17479 = !DILocation(line: 50, column: 1, scope: !17471)
!17480 = distinct !DISubprogram(name: "z_init_timeout", scope: !14390, file: !14390, line: 25, type: !2710, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17481)
!17481 = !{!17482}
!17482 = !DILocalVariable(name: "to", arg: 1, scope: !17480, file: !14390, line: 25, type: !2712)
!17483 = !DILocation(line: 0, scope: !17480)
!17484 = !DILocation(line: 27, column: 22, scope: !17480)
!17485 = !DILocation(line: 27, column: 2, scope: !17480)
!17486 = !DILocation(line: 28, column: 1, scope: !17480)
!17487 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17488, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17490)
!17488 = !DISubroutineType(types: !17489)
!17489 = !{null, !2803}
!17490 = !{!17491}
!17491 = !DILocalVariable(name: "node", arg: 1, scope: !17487, file: !367, line: 211, type: !2803)
!17492 = !DILocation(line: 0, scope: !17487)
!17493 = !DILocation(line: 213, column: 8, scope: !17487)
!17494 = !DILocation(line: 213, column: 13, scope: !17487)
!17495 = !DILocation(line: 214, column: 8, scope: !17487)
!17496 = !DILocation(line: 214, column: 13, scope: !17487)
!17497 = !DILocation(line: 215, column: 1, scope: !17487)
!17498 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !17499, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17501)
!17499 = !DISubroutineType(types: !17500)
!17500 = !{null, !17430}
!17501 = !{!17502}
!17502 = !DILocalVariable(name: "list", arg: 1, scope: !17498, file: !367, line: 197, type: !17430)
!17503 = !DILocation(line: 0, scope: !17498)
!17504 = !DILocation(line: 199, column: 8, scope: !17498)
!17505 = !DILocation(line: 199, column: 13, scope: !17498)
!17506 = !DILocation(line: 200, column: 8, scope: !17498)
!17507 = !DILocation(line: 200, column: 13, scope: !17498)
!17508 = !DILocation(line: 201, column: 1, scope: !17498)
!17509 = distinct !DISubprogram(name: "z_impl_k_timer_start", scope: !2805, file: !2805, line: 111, type: !17510, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17512)
!17510 = !DISubroutineType(types: !17511)
!17511 = !{null, !2686, !2726, !2726}
!17512 = !{!17513, !17514, !17515}
!17513 = !DILocalVariable(name: "timer", arg: 1, scope: !17509, file: !2805, line: 111, type: !2686)
!17514 = !DILocalVariable(name: "duration", arg: 2, scope: !17509, file: !2805, line: 111, type: !2726)
!17515 = !DILocalVariable(name: "period", arg: 3, scope: !17509, file: !2805, line: 112, type: !2726)
!17516 = !DILocation(line: 0, scope: !17509)
!17517 = !DILocation(line: 116, column: 6, scope: !17518)
!17518 = distinct !DILexicalBlock(scope: !17509, file: !2805, line: 116, column: 6)
!17519 = !DILocation(line: 116, column: 6, scope: !17509)
!17520 = !DILocation(line: 133, column: 39, scope: !17521)
!17521 = distinct !DILexicalBlock(scope: !17509, file: !2805, line: 133, column: 6)
!17522 = !DILocation(line: 137, column: 33, scope: !17523)
!17523 = distinct !DILexicalBlock(scope: !17509, file: !2805, line: 137, column: 6)
!17524 = !DILocation(line: 137, column: 6, scope: !17509)
!17525 = !DILocation(line: 141, column: 32, scope: !17509)
!17526 = !DILocation(line: 141, column: 8, scope: !17509)
!17527 = !DILocation(line: 142, column: 18, scope: !17509)
!17528 = !DILocation(line: 143, column: 9, scope: !17509)
!17529 = !DILocation(line: 143, column: 16, scope: !17509)
!17530 = !DILocation(line: 145, column: 2, scope: !17509)
!17531 = !DILocation(line: 147, column: 1, scope: !17509)
!17532 = distinct !DISubprogram(name: "z_impl_k_timer_stop", scope: !2805, file: !2805, line: 160, type: !2722, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17533)
!17533 = !{!17534, !17535, !17536}
!17534 = !DILocalVariable(name: "timer", arg: 1, scope: !17532, file: !2805, line: 160, type: !2686)
!17535 = !DILocalVariable(name: "inactive", scope: !17532, file: !2805, line: 164, type: !422)
!17536 = !DILocalVariable(name: "pending_thread", scope: !17537, file: !2805, line: 175, type: !2732)
!17537 = distinct !DILexicalBlock(scope: !17538, file: !2805, line: 174, column: 41)
!17538 = distinct !DILexicalBlock(scope: !17532, file: !2805, line: 174, column: 6)
!17539 = !DILocation(line: 0, scope: !17532)
!17540 = !DILocation(line: 164, column: 43, scope: !17532)
!17541 = !DILocation(line: 164, column: 19, scope: !17532)
!17542 = !DILocation(line: 164, column: 52, scope: !17532)
!17543 = !DILocation(line: 166, column: 6, scope: !17532)
!17544 = !DILocation(line: 170, column: 13, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17532, file: !2805, line: 170, column: 6)
!17546 = !DILocation(line: 170, column: 21, scope: !17545)
!17547 = !DILocation(line: 170, column: 6, scope: !17532)
!17548 = !DILocation(line: 171, column: 3, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17545, file: !2805, line: 170, column: 30)
!17550 = !DILocation(line: 172, column: 2, scope: !17549)
!17551 = !DILocation(line: 175, column: 66, scope: !17537)
!17552 = !DILocation(line: 175, column: 37, scope: !17537)
!17553 = !DILocation(line: 0, scope: !17537)
!17554 = !DILocation(line: 177, column: 22, scope: !17555)
!17555 = distinct !DILexicalBlock(scope: !17537, file: !2805, line: 177, column: 7)
!17556 = !DILocation(line: 177, column: 7, scope: !17537)
!17557 = !DILocation(line: 178, column: 4, scope: !17558)
!17558 = distinct !DILexicalBlock(scope: !17555, file: !2805, line: 177, column: 31)
!17559 = !DILocation(line: 179, column: 4, scope: !17558)
!17560 = !DILocation(line: 180, column: 3, scope: !17558)
!17561 = !DILocation(line: 182, column: 1, scope: !17532)
!17562 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13996, file: !13996, line: 73, type: !3389, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !437)
!17563 = !DILocation(line: 55, column: 2, scope: !17338, inlinedAt: !17564)
!17564 = distinct !DILocation(line: 75, column: 30, scope: !17562)
!17565 = !DILocation(line: 0, scope: !17338, inlinedAt: !17564)
!17566 = !DILocation(line: 75, column: 9, scope: !17562)
!17567 = !DILocation(line: 76, column: 1, scope: !17562)
!17568 = distinct !DISubprogram(name: "z_impl_k_timer_status_get", scope: !2805, file: !2805, line: 193, type: !17569, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17571)
!17569 = !DISubroutineType(types: !17570)
!17570 = !{!113, !2686}
!17571 = !{!17572, !17573, !17574}
!17572 = !DILocalVariable(name: "timer", arg: 1, scope: !17568, file: !2805, line: 193, type: !2686)
!17573 = !DILocalVariable(name: "key", scope: !17568, file: !2805, line: 195, type: !17319)
!17574 = !DILocalVariable(name: "result", scope: !17568, file: !2805, line: 196, type: !113)
!17575 = !DILocation(line: 0, scope: !17568)
!17576 = !DILocation(line: 0, scope: !17329, inlinedAt: !17577)
!17577 = distinct !DILocation(line: 195, column: 25, scope: !17568)
!17578 = !DILocation(line: 55, column: 2, scope: !17338, inlinedAt: !17579)
!17579 = distinct !DILocation(line: 145, column: 10, scope: !17329, inlinedAt: !17577)
!17580 = !DILocation(line: 0, scope: !17338, inlinedAt: !17579)
!17581 = !DILocation(line: 196, column: 27, scope: !17568)
!17582 = !DILocation(line: 198, column: 16, scope: !17568)
!17583 = !DILocation(line: 0, scope: !17358, inlinedAt: !17584)
!17584 = distinct !DILocation(line: 199, column: 2, scope: !17568)
!17585 = !DILocation(line: 0, scope: !17367, inlinedAt: !17586)
!17586 = distinct !DILocation(line: 215, column: 2, scope: !17358, inlinedAt: !17584)
!17587 = !DILocation(line: 95, column: 2, scope: !17367, inlinedAt: !17586)
!17588 = !DILocation(line: 201, column: 2, scope: !17568)
!17589 = distinct !DISubprogram(name: "z_impl_k_timer_status_sync", scope: !2805, file: !2805, line: 213, type: !17569, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17590)
!17590 = !{!17591, !17592, !17593}
!17591 = !DILocalVariable(name: "timer", arg: 1, scope: !17589, file: !2805, line: 213, type: !2686)
!17592 = !DILocalVariable(name: "key", scope: !17589, file: !2805, line: 241, type: !17319)
!17593 = !DILocalVariable(name: "result", scope: !17589, file: !2805, line: 242, type: !113)
!17594 = !DILocation(line: 0, scope: !17589)
!17595 = !DILocation(line: 0, scope: !17329, inlinedAt: !17596)
!17596 = distinct !DILocation(line: 241, column: 25, scope: !17589)
!17597 = !DILocation(line: 55, column: 2, scope: !17338, inlinedAt: !17598)
!17598 = distinct !DILocation(line: 145, column: 10, scope: !17329, inlinedAt: !17596)
!17599 = !DILocation(line: 0, scope: !17338, inlinedAt: !17598)
!17600 = !DILocation(line: 242, column: 27, scope: !17589)
!17601 = !DILocation(line: 244, column: 13, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17589, file: !2805, line: 244, column: 6)
!17603 = !DILocation(line: 244, column: 6, scope: !17589)
!17604 = !DILocation(line: 245, column: 38, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17606, file: !2805, line: 245, column: 7)
!17606 = distinct !DILexicalBlock(scope: !17602, file: !2805, line: 244, column: 20)
!17607 = !DILocation(line: 245, column: 8, scope: !17605)
!17608 = !DILocation(line: 245, column: 7, scope: !17606)
!17609 = !DILocation(line: 249, column: 42, scope: !17610)
!17610 = distinct !DILexicalBlock(scope: !17605, file: !2805, line: 245, column: 48)
!17611 = !DILocation(line: 249, column: 10, scope: !17610)
!17612 = !DILocation(line: 0, scope: !17329, inlinedAt: !17613)
!17613 = distinct !DILocation(line: 252, column: 10, scope: !17610)
!17614 = !DILocation(line: 55, column: 2, scope: !17338, inlinedAt: !17615)
!17615 = distinct !DILocation(line: 145, column: 10, scope: !17329, inlinedAt: !17613)
!17616 = !DILocation(line: 0, scope: !17338, inlinedAt: !17615)
!17617 = !DILocation(line: 253, column: 20, scope: !17610)
!17618 = !DILocation(line: 254, column: 3, scope: !17610)
!17619 = !DILocation(line: 261, column: 16, scope: !17589)
!17620 = !DILocation(line: 0, scope: !17358, inlinedAt: !17621)
!17621 = distinct !DILocation(line: 262, column: 2, scope: !17589)
!17622 = !DILocation(line: 0, scope: !17367, inlinedAt: !17623)
!17623 = distinct !DILocation(line: 215, column: 2, scope: !17358, inlinedAt: !17621)
!17624 = !DILocation(line: 95, column: 2, scope: !17367, inlinedAt: !17623)
!17625 = !DILocation(line: 269, column: 2, scope: !17589)
!17626 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14390, file: !14390, line: 35, type: !17627, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17631)
!17627 = !DISubroutineType(types: !17628)
!17628 = !{!422, !17629}
!17629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17630, size: 32)
!17630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2690)
!17631 = !{!17632}
!17632 = !DILocalVariable(name: "to", arg: 1, scope: !17626, file: !14390, line: 35, type: !17629)
!17633 = !DILocation(line: 0, scope: !17626)
!17634 = !DILocation(line: 37, column: 35, scope: !17626)
!17635 = !DILocation(line: 37, column: 10, scope: !17626)
!17636 = !DILocation(line: 37, column: 9, scope: !17626)
!17637 = !DILocation(line: 37, column: 2, scope: !17626)
!17638 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17639, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !17643)
!17639 = !DISubroutineType(types: !17640)
!17640 = !{!422, !17641}
!17641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17642, size: 32)
!17642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2693)
!17643 = !{!17644}
!17644 = !DILocalVariable(name: "node", arg: 1, scope: !17638, file: !367, line: 225, type: !17641)
!17645 = !DILocation(line: 0, scope: !17638)
!17646 = !DILocation(line: 227, column: 15, scope: !17638)
!17647 = !DILocation(line: 227, column: 20, scope: !17638)
!17648 = !DILocation(line: 227, column: 2, scope: !17638)
!17649 = distinct !DISubprogram(name: "boot_banner", scope: !17650, file: !17650, line: 26, type: !3389, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3375, retainedNodes: !437)
!17650 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17651 = !DILocation(line: 34, column: 2, scope: !17649)
!17652 = !DILocation(line: 36, column: 1, scope: !17649)
