; ModuleID = 'build/96b_neonkey/echo_bot/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229227 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229207 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229197 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229297 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229287 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229277 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229247 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231808 to i8*), void (i8*)* inttoptr (i32 134230571 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229237 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231592 to i8*), void (i8*)* inttoptr (i32 134229217 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [40 x i8*] [i8* bitcast (%struct.k_msgq* @uart_msgq to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@uart_msgq = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 32, i32 10, i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i64 1, i64 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.uart_msgq", align 4, !dbg !25
@_k_fifo_buf_uart_msgq = internal global [320 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !211
@rx_buf_pos = internal unnamed_addr global i32 0, align 4, !dbg !221
@rx_buf = internal global [32 x i8] zeroinitializer, align 1, !dbg !216
@.str = private unnamed_addr constant [23 x i8] c"UART device not found!\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Hello! I'm your echo bot.\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Tell me something and press enter:\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Echo: \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !262
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !272
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !316
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !345
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !351
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !490
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !526
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.30, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !536
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !541
@.str.29 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.30 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !561
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !734
@.str.31 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !695
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !678
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !651
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !667
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !697
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !711
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !713
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !715
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !717
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !719
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !721
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !723
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !725
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !727
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !729
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !739
@.str.33 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !766
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !863
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !852
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !904
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !759
@.str.46 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !998
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1274
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1244
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1230
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1175
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !757
@.str.1.47 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1276
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1248
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1246
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1192
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !755
@.str.2.48 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1289
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1252
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1250
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1198
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !753
@.str.3.49 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1291
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1256
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1254
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1204
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !751
@.str.4.50 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1293
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1260
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1258
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1210
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !749
@.str.5.51 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1295
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1264
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1262
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1216
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !747
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1297
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1268
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1266
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1222
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !745
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1299
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1272
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1270
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1228
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !761
@.str.57 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1301
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1537
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1487
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1539
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1478
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1480
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1489
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1497
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1520
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1523
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1526
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !836
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1565
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1672
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1674
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1670
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1641
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1676
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1173
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1190
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1196
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1202
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1208
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1214
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1220
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1226
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1766
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1808
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1811
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1817
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1823
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2032
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2041
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2048
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2053
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.104 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.107, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.108, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.109, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.110, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.111, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.112, i32 0, i32 0)], align 4, !dbg !2081
@.str.106 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.107 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.108 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.109 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.110 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.111 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.105 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.112 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2193
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2206
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2314
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2317
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2319
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2046
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2043
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2321
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2357
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1910
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2355
@.str.180 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2360
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3111 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3169, !srcloc !3172
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3219, !srcloc !3220
  ret void, !dbg !3221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @serial_cb(%struct.device* nocapture readnone %0, i8* nocapture readnone %1) #1 !dbg !3224 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !3226, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata i8* undef, metadata !3227, metadata !DIExpression()), !dbg !3229
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3230
  %4 = tail call fastcc i32 @uart_irq_update() #26, !dbg !3231
  %5 = icmp eq i32 %4, 0, !dbg !3231
  br i1 %5, label %27, label %6, !dbg !3233

6:                                                ; preds = %2
  %7 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3234
  %8 = icmp eq i32 %7, 0, !dbg !3235
  br i1 %8, label %27, label %9, !dbg !3235

9:                                                ; preds = %6, %24
  call void @llvm.dbg.value(metadata i8* %3, metadata !3228, metadata !DIExpression(DW_OP_deref)), !dbg !3229
  call fastcc void @uart_fifo_read(i8* noundef nonnull %3) #26, !dbg !3236
  %10 = load i8, i8* %3, align 1, !dbg !3238
  call void @llvm.dbg.value(metadata i8 %10, metadata !3228, metadata !DIExpression()), !dbg !3229
  %11 = icmp eq i8 %10, 10, !dbg !3240
  %12 = icmp eq i8 %10, 13
  %13 = or i1 %11, %12, !dbg !3241
  %14 = load i32, i32* @rx_buf_pos, align 4
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %13, i1 %15, i1 false, !dbg !3241
  br i1 %16, label %17, label %19, !dbg !3241

17:                                               ; preds = %9
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3242
  store i8 0, i8* %18, align 1, !dbg !3244
  call fastcc void @k_msgq_put() #26, !dbg !3245
  store i32 0, i32* @rx_buf_pos, align 4, !dbg !3246
  br label %24, !dbg !3247

19:                                               ; preds = %9
  %20 = icmp ult i32 %14, 31, !dbg !3248
  br i1 %20, label %21, label %24, !dbg !3250

21:                                               ; preds = %19
  %22 = add nuw nsw i32 %14, 1, !dbg !3251
  store i32 %22, i32* @rx_buf_pos, align 4, !dbg !3251
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3253
  store i8 %10, i8* %23, align 1, !dbg !3254
  br label %24, !dbg !3255

24:                                               ; preds = %19, %21, %17
  %25 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3234
  %26 = icmp eq i32 %25, 0, !dbg !3235
  br i1 %26, label %27, label %9, !dbg !3235, !llvm.loop !3256

27:                                               ; preds = %24, %6, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3258
  ret void, !dbg !3258
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !3259 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3262, metadata !DIExpression()), !dbg !3263
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3264, !srcloc !3266
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #26, !dbg !3267
  ret i32 %1, !dbg !3268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !3269 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3271, metadata !DIExpression()), !dbg !3273
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3274
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3272, metadata !DIExpression()), !dbg !3273
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !3275
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3275
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3277
  br i1 %4, label %7, label %5, !dbg !3278

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !3279
  br label %7, !dbg !3280

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3273
  ret i32 %8, !dbg !3281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !3282 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3284, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i8* %0, metadata !3285, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i32 1, metadata !3286, metadata !DIExpression()), !dbg !3288
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3289
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3287, metadata !DIExpression()), !dbg !3288
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !3290
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !3290
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !3292
  br i1 %5, label %8, label %6, !dbg !3293

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8* noundef %0, i32 noundef 1) #27, !dbg !3294
  br label %8, !dbg !3295

8:                                                ; preds = %1, %6
  ret void, !dbg !3296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msgq_put() unnamed_addr #1 !dbg !3297 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3309, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3307, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), metadata !3308, metadata !DIExpression()), !dbg !3310
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3311, !srcloc !3313
  %1 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), [1 x i64] zeroinitializer) #27, !dbg !3314
  ret void, !dbg !3315
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !3316 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3318, metadata !DIExpression()), !dbg !3320
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3321
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3319, metadata !DIExpression()), !dbg !3320
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !3322
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3322
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3324
  br i1 %4, label %7, label %5, !dbg !3325

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !3326
  br label %7, !dbg !3327

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3320
  ret i32 %8, !dbg !3328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_uart(i8* noundef %0) local_unnamed_addr #1 !dbg !3329 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3333, metadata !DIExpression()), !dbg !3337
  %2 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !3338
  call void @llvm.dbg.value(metadata i32 %2, metadata !3334, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i32 0, metadata !3335, metadata !DIExpression()), !dbg !3339
  %3 = icmp sgt i32 %2, 0, !dbg !3340
  br i1 %3, label %5, label %4, !dbg !3342

4:                                                ; preds = %5, %1
  ret void, !dbg !3343

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %9, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3335, metadata !DIExpression()), !dbg !3339
  %7 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3344
  %8 = load i8, i8* %7, align 1, !dbg !3344
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %8) #26, !dbg !3346
  %9 = add nuw nsw i32 %6, 1, !dbg !3347
  call void @llvm.dbg.value(metadata i32 %9, metadata !3335, metadata !DIExpression()), !dbg !3339
  %10 = icmp eq i32 %9, %2, !dbg !3340
  br i1 %10, label %4, label %5, !dbg !3342, !llvm.loop !3348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3350 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3352, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.value(metadata i8 %0, metadata !3353, metadata !DIExpression()), !dbg !3354
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3355, !srcloc !3357
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !3358
  ret void, !dbg !3359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3360 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3362, metadata !DIExpression()), !dbg !3365
  call void @llvm.dbg.value(metadata i8 %0, metadata !3363, metadata !DIExpression()), !dbg !3365
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3366
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3364, metadata !DIExpression()), !dbg !3365
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !3367
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !3367
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !3368
  ret void, !dbg !3369
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3370 {
  %1 = alloca [32 x i8], align 1
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0, !dbg !3373
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3373
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3372, metadata !DIExpression()), !dbg !3374
  %3 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !3375
  br i1 %3, label %5, label %4, !dbg !3377

4:                                                ; preds = %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0)) #27, !dbg !3378
  br label %11, !dbg !3380

5:                                                ; preds = %0
  tail call fastcc void @uart_irq_callback_user_data_set() #26, !dbg !3381
  tail call fastcc void @uart_irq_rx_enable() #26, !dbg !3382
  tail call void @print_uart(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0)) #26, !dbg !3383
  tail call void @print_uart(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i32 0, i32 0)) #26, !dbg !3384
  %6 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3385
  %7 = icmp eq i32 %6, 0, !dbg !3386
  br i1 %7, label %8, label %11, !dbg !3387

8:                                                ; preds = %5, %8
  call void @print_uart(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !3388
  call void @print_uart(i8* noundef nonnull %2) #26, !dbg !3390
  call void @print_uart(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0)) #26, !dbg !3391
  %9 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3385
  %10 = icmp eq i32 %9, 0, !dbg !3386
  br i1 %10, label %8, label %11, !dbg !3387, !llvm.loop !3392

11:                                               ; preds = %8, %5, %4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3394
  ret void, !dbg !3394
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !3395 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3400, metadata !DIExpression()), !dbg !3401
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3402, !srcloc !3404
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !3405
  ret i1 %1, !dbg !3406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !3407 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3409, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @serial_cb, metadata !3410, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i8* null, metadata !3411, metadata !DIExpression()), !dbg !3413
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3414
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3412, metadata !DIExpression()), !dbg !3413
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !3415
  br i1 %2, label %8, label %3, !dbg !3417

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !3418
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !3418
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !3419
  br i1 %6, label %8, label %7, !dbg !3420

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_45, void (%struct.device*, i8*)* noundef nonnull @serial_cb, i8* noundef null) #27, !dbg !3421
  br label %8, !dbg !3423

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !3424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !3425 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3427, metadata !DIExpression()), !dbg !3428
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3429, !srcloc !3431
  tail call fastcc void @z_impl_uart_irq_rx_enable() #26, !dbg !3432
  ret void, !dbg !3433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(i8* noundef %0) unnamed_addr #1 !dbg !3434 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3440, metadata !DIExpression()), !dbg !3441
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3438, metadata !DIExpression()), !dbg !3441
  call void @llvm.dbg.value(metadata i8* %0, metadata !3439, metadata !DIExpression()), !dbg !3441
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3442, !srcloc !3444
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3445
  ret i32 %2, !dbg !3446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !3447 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3449, metadata !DIExpression()), !dbg !3451
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3452
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3450, metadata !DIExpression()), !dbg !3451
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !3453
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !3453
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !3455
  br i1 %4, label %6, label %5, !dbg !3456

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !3457
  br label %6, !dbg !3459

6:                                                ; preds = %5, %0
  ret void, !dbg !3460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3461 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3463, metadata !DIExpression()), !dbg !3464
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !3465
  ret i1 %1, !dbg !3466
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3469, metadata !DIExpression()), !dbg !3470
  ret i32 0, !dbg !3471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3472 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3476, metadata !DIExpression()), !dbg !3477
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3478
  ret void, !dbg !3479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3480 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3483
  ret i8* %1, !dbg !3484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3485 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3497, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i8* %0, metadata !3496, metadata !DIExpression()), !dbg !3506
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3507
  ret void, !dbg !3509
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3514, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.value(metadata i8* %1, metadata !3515, metadata !DIExpression()), !dbg !3516
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3517
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3517
  ret i32 %4, !dbg !3518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3519 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3531, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3528, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i8* %1, metadata !3529, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i8* %2, metadata !3530, metadata !DIExpression()), !dbg !3532
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3533
  ret void, !dbg !3534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3539, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i32 %1, metadata !3540, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i32 0, metadata !3541, metadata !DIExpression()), !dbg !3542
  %3 = icmp eq i32 %1, 0, !dbg !3543
  br i1 %3, label %13, label %4, !dbg !3546

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3541, metadata !DIExpression()), !dbg !3542
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3547
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3549
  %8 = load i8, i8* %7, align 1, !dbg !3549
  %9 = zext i8 %8 to i32, !dbg !3549
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3547
  %11 = add nuw i32 %5, 1, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %11, metadata !3541, metadata !DIExpression()), !dbg !3542
  %12 = icmp eq i32 %11, %1, !dbg !3543
  br i1 %12, label %13, label %4, !dbg !3546, !llvm.loop !3551

13:                                               ; preds = %4, %2
  ret void, !dbg !3553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3554 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3558, metadata !DIExpression()), !dbg !3560
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3561
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3561
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3559, metadata !DIExpression()), !dbg !3562
  call void @llvm.va_start(i8* nonnull %3), !dbg !3563
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3564
  %5 = load i32, i32* %4, align 4, !dbg !3564
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3564
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3564
  call void @llvm.va_end(i8* nonnull %3), !dbg !3565
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3566
  ret void, !dbg !3566
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3567 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3571, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %1, metadata !3572, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8* %2, metadata !3573, metadata !DIExpression()), !dbg !3576
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3577
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3577
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3574, metadata !DIExpression()), !dbg !3578
  call void @llvm.va_start(i8* nonnull %5), !dbg !3579
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3580
  %7 = load i32, i32* %6, align 4, !dbg !3580
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3580
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %9, metadata !3575, metadata !DIExpression()), !dbg !3576
  call void @llvm.va_end(i8* nonnull %5), !dbg !3581
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3582
  ret i32 %9, !dbg !3583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3584 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3591, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i8* %0, metadata !3588, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %1, metadata !3589, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i8* %2, metadata !3590, metadata !DIExpression()), !dbg !3598
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3599
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3599
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3592, metadata !DIExpression()), !dbg !3600
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3601
  store i8* %0, i8** %7, align 4, !dbg !3601
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3601
  store i32 %1, i32* %8, align 4, !dbg !3601
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3601
  store i32 0, i32* %9, align 4, !dbg !3601
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3602
  %10 = load i32, i32* %9, align 4, !dbg !3603
  %11 = load i32, i32* %8, align 4, !dbg !3605
  %12 = icmp slt i32 %10, %11, !dbg !3606
  br i1 %12, label %13, label %15, !dbg !3607

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3608
  store i8 0, i8* %14, align 1, !dbg !3610
  br label %15, !dbg !3611

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3612
  ret i32 %10, !dbg !3613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3619, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3620, metadata !DIExpression()), !dbg !3621
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3622
  %4 = load i8*, i8** %3, align 4, !dbg !3622
  %5 = icmp eq i8* %4, null, !dbg !3624
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3625
  br i1 %5, label %12, label %8, !dbg !3626

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3627
  %10 = load i32, i32* %9, align 4, !dbg !3627
  %11 = icmp slt i32 %7, %10, !dbg !3628
  br i1 %11, label %15, label %12, !dbg !3629

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3630
  %14 = add nsw i32 %7, 1, !dbg !3632
  store i32 %14, i32* %13, align 4, !dbg !3632
  br label %25, !dbg !3633

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3634
  %17 = icmp eq i32 %7, %16, !dbg !3636
  br i1 %17, label %18, label %21, !dbg !3637

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3638
  store i32 %19, i32* %6, align 4, !dbg !3638
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3640
  store i8 0, i8* %20, align 1, !dbg !3641
  br label %25, !dbg !3642

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3643
  %23 = add nsw i32 %7, 1, !dbg !3645
  store i32 %23, i32* %6, align 4, !dbg !3645
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3646
  store i8 %22, i8* %24, align 1, !dbg !3647
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3648
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3649 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3659, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %1, metadata !3660, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %2, metadata !3661, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %3, metadata !3662, metadata !DIExpression()), !dbg !3663
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3664
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3665
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3666
  unreachable, !dbg !3667
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3668 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3772
  ret %struct.k_thread* %1, !dbg !3773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3778, metadata !DIExpression()), !dbg !3779
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3780, !srcloc !3782
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !3783
  ret void, !dbg !3784
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3785 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3786, !srcloc !3788
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3789
  ret %struct.k_thread* %1, !dbg !3790
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3791 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3802, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i8* %1, metadata !3803, metadata !DIExpression()), !dbg !3806
  %3 = icmp eq i8* %1, null, !dbg !3807
  br i1 %3, label %8, label %4, !dbg !3809

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3810
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3810
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3804, metadata !DIExpression()), !dbg !3806
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3811, !range !3812
  call void @llvm.dbg.value(metadata i32 %7, metadata !3805, metadata !DIExpression()), !dbg !3806
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3813
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3814
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3816 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3820, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.value(metadata i8* %1, metadata !3821, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.value(metadata i8* %1, metadata !3822, metadata !DIExpression()), !dbg !3824
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3825
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3823, metadata !DIExpression()), !dbg !3824
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3826
  %5 = ptrtoint i8* %4 to i32, !dbg !3827
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3827
  %7 = sub i32 %5, %6, !dbg !3827
  %8 = lshr i32 %7, 3, !dbg !3828
  ret i32 %8, !dbg !3829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3830 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3834, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %1, metadata !3835, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i1 %2, metadata !3836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3839
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3840
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3837, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3838, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3839
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3841
  %6 = bitcast i8* %5 to i16*, !dbg !3841
  %7 = load i16, i16* %6, align 2, !dbg !3841
  %8 = and i16 %7, -2, !dbg !3845
  %9 = zext i1 %2 to i16, !dbg !3845
  %10 = or i16 %8, %9, !dbg !3845
  store i16 %10, i16* %6, align 2, !dbg !3841
  ret void, !dbg !3846
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3847 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3851, metadata !DIExpression()), !dbg !3853
  call void @llvm.dbg.value(metadata i32 %1, metadata !3852, metadata !DIExpression()), !dbg !3853
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3854
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3856
  br i1 %4, label %7, label %5, !dbg !3857

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3858
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3860
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3861
  br label %7, !dbg !3862

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3863, !range !3865
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3866
  br i1 %9, label %13, label %10, !dbg !3867

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3868
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3870, !range !3865
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3871
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %12, metadata !3852, metadata !DIExpression()), !dbg !3853
  br label %13, !dbg !3873

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3852, metadata !DIExpression()), !dbg !3853
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3874
  ret void, !dbg !3875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3876 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3880, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.value(metadata i32 %1, metadata !3881, metadata !DIExpression()), !dbg !3882
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3883
  %4 = add i32 %3, %1, !dbg !3884
  ret i32 %4, !dbg !3885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3886 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3890, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i32 %1, metadata !3891, metadata !DIExpression()), !dbg !3892
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3893
  %4 = and i32 %3, 1, !dbg !3894
  %5 = icmp ne i32 %4, 0, !dbg !3893
  ret i1 %5, !dbg !3895
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3896 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3898, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %1, metadata !3899, metadata !DIExpression()), !dbg !3903
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3904, !range !3905
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %4, metadata !3900, metadata !DIExpression()), !dbg !3907
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3908
  ret void, !dbg !3909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3910 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3914, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata i32 %1, metadata !3915, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata i32 %2, metadata !3916, metadata !DIExpression()), !dbg !3919
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3920
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3921
  %6 = add i32 %5, %4, !dbg !3922
  call void @llvm.dbg.value(metadata i32 %6, metadata !3917, metadata !DIExpression()), !dbg !3919
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3923
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3924
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3925
  ret void, !dbg !3926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3927 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3929, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.value(metadata i32 %1, metadata !3930, metadata !DIExpression()), !dbg !3931
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3932
  %4 = sub i32 %1, %3, !dbg !3933
  ret i32 %4, !dbg !3934
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3935 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3937, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata i32 %1, metadata !3938, metadata !DIExpression()), !dbg !3942
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3943, !range !3905
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3944
  call void @llvm.dbg.value(metadata i32 %4, metadata !3939, metadata !DIExpression()), !dbg !3945
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3946
  ret void, !dbg !3947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3948 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3952, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %1, metadata !3953, metadata !DIExpression()), !dbg !3954
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3955
  %4 = lshr i32 %3, 1, !dbg !3956
  ret i32 %4, !dbg !3957
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3958 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3962, metadata !DIExpression()), !dbg !3965
  call void @llvm.dbg.value(metadata i32 %1, metadata !3963, metadata !DIExpression()), !dbg !3965
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3966
  %4 = add i32 %1, 1, !dbg !3967
  %5 = sub i32 %4, %3, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %5, metadata !3964, metadata !DIExpression()), !dbg !3965
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3969, !range !3970
  %7 = sub nsw i32 31, %6, !dbg !3971
  ret i32 %7, !dbg !3972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3973 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3977, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i32 %1, metadata !3978, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i32 %2, metadata !3979, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3980, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3986
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3987
  %5 = load i32, i32* %4, align 4, !dbg !3987
  %6 = icmp eq i32 %5, 0, !dbg !3988
  br i1 %6, label %7, label %12, !dbg !3989

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3990
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3992
  %10 = load i32, i32* %9, align 4, !dbg !3993
  %11 = or i32 %10, %8, !dbg !3993
  store i32 %11, i32* %9, align 4, !dbg !3993
  store i32 %1, i32* %4, align 4, !dbg !3994
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3995
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3996
  br label %14, !dbg !3997

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3982, metadata !DIExpression()), !dbg !3998
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3999, !range !4000
  call void @llvm.dbg.value(metadata i32 %13, metadata !3985, metadata !DIExpression()), !dbg !3998
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4001
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4002
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4003
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4004
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4006 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4008, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i32 %1, metadata !4009, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i32 %2, metadata !4010, metadata !DIExpression()), !dbg !4011
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4012
  ret void, !dbg !4013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4014 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4016, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %1, metadata !4017, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %2, metadata !4018, metadata !DIExpression()), !dbg !4019
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4020
  ret void, !dbg !4021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4022 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4024, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata i32 %1, metadata !4025, metadata !DIExpression()), !dbg !4026
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4027
  ret i32 %3, !dbg !4028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4029 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4033, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata i32 %1, metadata !4034, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata i32 %2, metadata !4035, metadata !DIExpression()), !dbg !4038
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4039
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4036, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4037, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4038
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4037, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4038
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4040
  call void @llvm.dbg.value(metadata i8* %5, metadata !4037, metadata !DIExpression()), !dbg !4038
  %6 = bitcast i8* %5 to i16*, !dbg !4041
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4044
  %8 = load i16, i16* %7, align 2, !dbg !4044
  %9 = zext i16 %8 to i32, !dbg !4044
  ret i32 %9, !dbg !4045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4046 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4050, metadata !DIExpression()), !dbg !4051
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4052
  ret %struct.chunk_unit_t* %2, !dbg !4053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4054 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4058, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i32 %1, metadata !4059, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i32 %2, metadata !4060, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i32 %3, metadata !4061, metadata !DIExpression()), !dbg !4064
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4065
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4062, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4063, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4064
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4066
  call void @llvm.dbg.value(metadata i8* %6, metadata !4063, metadata !DIExpression()), !dbg !4064
  %7 = trunc i32 %3 to i16, !dbg !4067
  %8 = bitcast i8* %6 to i16*, !dbg !4070
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4071
  store i16 %7, i16* %9, align 2, !dbg !4072
  ret void, !dbg !4073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4074 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4078, metadata !DIExpression()), !dbg !4079
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4080
  ret i32 %2, !dbg !4081
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4082 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4086, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 %1, metadata !4087, metadata !DIExpression()), !dbg !4088
  %3 = add i32 %1, 4, !dbg !4089
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4090
  ret i32 %4, !dbg !4091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4096, metadata !DIExpression()), !dbg !4097
  %2 = add i32 %0, 7, !dbg !4098
  %3 = lshr i32 %2, 3, !dbg !4099
  ret i32 %3, !dbg !4100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4101 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4105, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %1, metadata !4106, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %2, metadata !4107, metadata !DIExpression()), !dbg !4108
  %4 = shl i32 %2, 1, !dbg !4109
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4110
  ret void, !dbg !4111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4112 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4114, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %1, metadata !4115, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %2, metadata !4116, metadata !DIExpression()), !dbg !4117
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4118
  ret void, !dbg !4119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4120 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4122, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %1, metadata !4123, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %2, metadata !4124, metadata !DIExpression()), !dbg !4130
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4131
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4125, metadata !DIExpression()), !dbg !4130
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4132
  %6 = icmp eq i32 %5, %1, !dbg !4133
  br i1 %6, label %7, label %14, !dbg !4134

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4135
  %9 = xor i32 %8, -1, !dbg !4137
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4138
  %11 = load i32, i32* %10, align 4, !dbg !4139
  %12 = and i32 %11, %9, !dbg !4139
  store i32 %12, i32* %10, align 4, !dbg !4139
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4140
  store i32 0, i32* %13, align 4, !dbg !4141
  br label %17, !dbg !4142

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4143
  call void @llvm.dbg.value(metadata i32 %15, metadata !4126, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.value(metadata i32 %5, metadata !4129, metadata !DIExpression()), !dbg !4144
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4145
  store i32 %5, i32* %16, align 4, !dbg !4146
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4147
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4148
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4150 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4152, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.value(metadata i32 %1, metadata !4153, metadata !DIExpression()), !dbg !4154
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4155
  ret i32 %3, !dbg !4156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4157 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4161, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i8* %1, metadata !4162, metadata !DIExpression()), !dbg !4168
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4169
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4169
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4163, metadata !DIExpression()), !dbg !4168
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %5, metadata !4164, metadata !DIExpression()), !dbg !4168
  %6 = ptrtoint i8* %1 to i32, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %6, metadata !4165, metadata !DIExpression()), !dbg !4168
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4172
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4172
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4173
  call void @llvm.dbg.value(metadata i32 %9, metadata !4166, metadata !DIExpression()), !dbg !4168
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4174
  %11 = shl i32 %10, 3, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %11, metadata !4167, metadata !DIExpression()), !dbg !4168
  %12 = sub i32 %9, %6, !dbg !4176
  %13 = add i32 %12, %11, !dbg !4177
  ret i32 %13, !dbg !4178
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4179 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4183, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.value(metadata i32 %1, metadata !4184, metadata !DIExpression()), !dbg !4189
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4190
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4190
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4185, metadata !DIExpression()), !dbg !4189
  %5 = icmp eq i32 %1, 0, !dbg !4191
  br i1 %5, label %19, label %6, !dbg !4193

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4194
  br i1 %7, label %19, label %8, !dbg !4195

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4196, !range !3812
  call void @llvm.dbg.value(metadata i32 %9, metadata !4187, metadata !DIExpression()), !dbg !4189
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %10, metadata !4188, metadata !DIExpression()), !dbg !4189
  %11 = icmp eq i32 %10, 0, !dbg !4198
  br i1 %11, label %19, label %12, !dbg !4200

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4201
  %14 = icmp ugt i32 %13, %9, !dbg !4203
  br i1 %14, label %15, label %17, !dbg !4204

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4205
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4207
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4208
  br label %17, !dbg !4209

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4210
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4211
  call void @llvm.dbg.value(metadata i8* %18, metadata !4186, metadata !DIExpression()), !dbg !4189
  br label %19, !dbg !4212

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4189
  ret i8* %20, !dbg !4213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4214 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4218, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i32 %1, metadata !4219, metadata !DIExpression()), !dbg !4220
  %3 = lshr i32 %1, 3, !dbg !4221
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4222
  %5 = load i32, i32* %4, align 4, !dbg !4222
  %6 = icmp uge i32 %3, %5, !dbg !4223
  ret i1 %6, !dbg !4224
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4225 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4229, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %1, metadata !4230, metadata !DIExpression()), !dbg !4244
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %3, metadata !4231, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4232, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4244
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4246
  %5 = load i32, i32* %4, align 4, !dbg !4246
  %6 = icmp eq i32 %5, 0, !dbg !4247
  br i1 %6, label %19, label %7, !dbg !4248

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4249
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4250
  call void @llvm.dbg.value(metadata i32 %9, metadata !4236, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i32 %8, metadata !4237, metadata !DIExpression()), !dbg !4251
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4252
  %11 = icmp ult i32 %10, %1, !dbg !4254
  br i1 %11, label %13, label %12, !dbg !4255

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4256
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4258
  store i32 %14, i32* %4, align 4, !dbg !4259
  %15 = add nsw i32 %9, -1, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %15, metadata !4236, metadata !DIExpression()), !dbg !4250
  %16 = icmp eq i32 %15, 0, !dbg !4260
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4261
  br i1 %18, label %19, label %7, !dbg !4261, !llvm.loop !4262

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4265
  %21 = load i32, i32* %20, align 4, !dbg !4265
  %22 = add nsw i32 %3, 1, !dbg !4266
  %23 = shl nsw i32 -1, %22, !dbg !4266
  %24 = and i32 %21, %23, !dbg !4267
  call void @llvm.dbg.value(metadata i32 %24, metadata !4239, metadata !DIExpression()), !dbg !4244
  %25 = icmp eq i32 %24, 0, !dbg !4268
  br i1 %25, label %30, label %26, !dbg !4269

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4270, !range !3970
  call void @llvm.dbg.value(metadata i32 %27, metadata !4240, metadata !DIExpression()), !dbg !4271
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4272
  %29 = load i32, i32* %28, align 4, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %29, metadata !4243, metadata !DIExpression()), !dbg !4271
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4273
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4244
  ret i32 %31, !dbg !4274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4275 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4277, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.value(metadata i32 %1, metadata !4278, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.value(metadata i32 %2, metadata !4279, metadata !DIExpression()), !dbg !4283
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %4, metadata !4280, metadata !DIExpression()), !dbg !4283
  %5 = sub i32 %2, %1, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %5, metadata !4281, metadata !DIExpression()), !dbg !4283
  %6 = sub i32 %4, %5, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %6, metadata !4282, metadata !DIExpression()), !dbg !4283
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4287
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4288
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4289
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4290
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4291
  ret void, !dbg !4292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4293 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4297, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i32 %1, metadata !4298, metadata !DIExpression()), !dbg !4301
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4302
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4299, metadata !DIExpression()), !dbg !4301
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4303
  call void @llvm.dbg.value(metadata i8* %4, metadata !4300, metadata !DIExpression()), !dbg !4301
  ret i8* %4, !dbg !4304
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4305 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4309, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i32 %1, metadata !4310, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i32 %2, metadata !4311, metadata !DIExpression()), !dbg !4321
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4322
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4322
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4312, metadata !DIExpression()), !dbg !4321
  %6 = sub i32 0, %1, !dbg !4323
  %7 = and i32 %6, %1, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %7, metadata !4314, metadata !DIExpression()), !dbg !4321
  %8 = icmp eq i32 %7, %1, !dbg !4325
  br i1 %8, label %13, label %9, !dbg !4327

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %10, metadata !4310, metadata !DIExpression()), !dbg !4321
  %11 = icmp ult i32 %7, 4, !dbg !4330
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4330
  br label %17, !dbg !4330

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4331
  br i1 %14, label %15, label %17, !dbg !4334

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4335
  br label %57, !dbg !4337

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4321
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4338
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4310, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i32 %19, metadata !4313, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i32 %18, metadata !4314, metadata !DIExpression()), !dbg !4321
  %21 = icmp eq i32 %2, 0, !dbg !4339
  br i1 %21, label %57, label %22, !dbg !4341

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4342
  br i1 %23, label %57, label %24, !dbg !4343

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4344
  %26 = add i32 %25, %20, !dbg !4345
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4346, !range !3812
  call void @llvm.dbg.value(metadata i32 %27, metadata !4315, metadata !DIExpression()), !dbg !4321
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %28, metadata !4316, metadata !DIExpression()), !dbg !4321
  %29 = icmp eq i32 %28, 0, !dbg !4348
  br i1 %29, label %57, label %30, !dbg !4350

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %31, metadata !4317, metadata !DIExpression()), !dbg !4321
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4352
  %33 = ptrtoint i8* %32 to i32, !dbg !4352
  %34 = add i32 %20, -1, !dbg !4352
  %35 = add i32 %34, %33, !dbg !4352
  %36 = sub i32 0, %20, !dbg !4352
  %37 = and i32 %35, %36, !dbg !4352
  %38 = inttoptr i32 %37 to i8*, !dbg !4353
  %39 = sub i32 0, %18, !dbg !4354
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4354
  call void @llvm.dbg.value(metadata i8* %40, metadata !4317, metadata !DIExpression()), !dbg !4321
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4355
  %42 = ptrtoint i8* %41 to i32, !dbg !4355
  %43 = add i32 %42, 7, !dbg !4355
  %44 = and i32 %43, -8, !dbg !4355
  call void @llvm.dbg.value(metadata i32 %44, metadata !4318, metadata !DIExpression()), !dbg !4321
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %45, metadata !4319, metadata !DIExpression()), !dbg !4321
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4357
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4358
  %48 = sub i32 %44, %47, !dbg !4358
  %49 = ashr exact i32 %48, 3, !dbg !4358
  call void @llvm.dbg.value(metadata i32 %49, metadata !4320, metadata !DIExpression()), !dbg !4321
  %50 = icmp ugt i32 %45, %28, !dbg !4359
  br i1 %50, label %51, label %52, !dbg !4361

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4362
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4364
  br label %52, !dbg !4365

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4366
  %54 = icmp ugt i32 %53, %49, !dbg !4368
  br i1 %54, label %55, label %56, !dbg !4369

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4370
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4372
  br label %56, !dbg !4373

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4374
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4321
  ret i8* %58, !dbg !4375
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4376 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4380, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8* %1, metadata !4381, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %2, metadata !4382, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %3, metadata !4383, metadata !DIExpression()), !dbg !4399
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4400
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4400
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4384, metadata !DIExpression()), !dbg !4399
  %7 = icmp eq i8* %1, null, !dbg !4401
  br i1 %7, label %8, label %10, !dbg !4403

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4404
  br label %59, !dbg !4406

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4407
  br i1 %11, label %12, label %13, !dbg !4409

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4410
  br label %59, !dbg !4412

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4413
  br i1 %14, label %59, label %15, !dbg !4415

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4416, !range !3812
  call void @llvm.dbg.value(metadata i32 %16, metadata !4385, metadata !DIExpression()), !dbg !4399
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %17, metadata !4386, metadata !DIExpression()), !dbg !4399
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4418
  %19 = ptrtoint i8* %1 to i32, !dbg !4419
  %20 = ptrtoint i8* %18 to i32, !dbg !4419
  %21 = sub i32 %19, %20, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %21, metadata !4387, metadata !DIExpression()), !dbg !4399
  %22 = add i32 %21, %3, !dbg !4420
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4421
  call void @llvm.dbg.value(metadata i32 %23, metadata !4388, metadata !DIExpression()), !dbg !4399
  %24 = icmp eq i32 %2, 0, !dbg !4422
  br i1 %24, label %29, label %25, !dbg !4423

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4424
  %27 = and i32 %26, %19, !dbg !4425
  %28 = icmp eq i32 %27, 0, !dbg !4425
  br i1 %28, label %29, label %49, !dbg !4426

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4427
  %31 = icmp eq i32 %23, %30, !dbg !4428
  br i1 %31, label %59, label %32, !dbg !4429

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4430
  br i1 %33, label %34, label %36, !dbg !4431

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4432
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4434
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4435
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4436
  br label %59, !dbg !4437

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4438
  br i1 %37, label %49, label %38, !dbg !4439

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4440
  %40 = add i32 %39, %30, !dbg !4441
  %41 = icmp ult i32 %40, %23, !dbg !4442
  br i1 %41, label %49, label %42, !dbg !4443

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4444
  call void @llvm.dbg.value(metadata i32 %43, metadata !4389, metadata !DIExpression()), !dbg !4445
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4446
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4447
  %45 = icmp ult i32 %43, %44, !dbg !4449
  br i1 %45, label %46, label %48, !dbg !4450

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4451
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4453
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4454
  br label %48, !dbg !4455

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4456
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4457
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4458
  call void @llvm.dbg.value(metadata i8* %50, metadata !4395, metadata !DIExpression()), !dbg !4399
  %51 = icmp eq i8* %50, null, !dbg !4459
  br i1 %51, label %59, label %52, !dbg !4460

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4461, !range !3905
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4462
  %55 = sub i32 %54, %21, !dbg !4463
  call void @llvm.dbg.value(metadata i32 %55, metadata !4396, metadata !DIExpression()), !dbg !4464
  %56 = icmp ult i32 %55, %3, !dbg !4465
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4465
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !4466
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4467
  br label %59, !dbg !4468

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4399
  ret i8* %60, !dbg !4469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4470 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4474, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i32 %1, metadata !4475, metadata !DIExpression()), !dbg !4476
  %3 = shl i32 %1, 3, !dbg !4477
  %4 = add i32 %3, -4, !dbg !4478
  ret i32 %4, !dbg !4479
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4480 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4484, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.value(metadata i8* %1, metadata !4485, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.value(metadata i32 %2, metadata !4486, metadata !DIExpression()), !dbg !4495
  %4 = add i32 %2, -4, !dbg !4496
  call void @llvm.dbg.value(metadata i32 %4, metadata !4486, metadata !DIExpression()), !dbg !4495
  %5 = ptrtoint i8* %1 to i32, !dbg !4497
  %6 = add i32 %5, 7, !dbg !4497
  %7 = and i32 %6, -8, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %7, metadata !4487, metadata !DIExpression()), !dbg !4495
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4498
  %9 = ptrtoint i8* %8 to i32, !dbg !4498
  %10 = and i32 %9, -8, !dbg !4498
  call void @llvm.dbg.value(metadata i32 %10, metadata !4488, metadata !DIExpression()), !dbg !4495
  %11 = sub i32 %10, %7, !dbg !4499
  %12 = lshr exact i32 %11, 3, !dbg !4500
  call void @llvm.dbg.value(metadata i32 %12, metadata !4489, metadata !DIExpression()), !dbg !4495
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4501
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4490, metadata !DIExpression()), !dbg !4495
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4502
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4503
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4504
  store i32 %12, i32* %15, align 8, !dbg !4505
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4506
  store i32 0, i32* %16, align 4, !dbg !4507
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4508
  call void @llvm.dbg.value(metadata i32 %17, metadata !4491, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4495
  %18 = shl i32 %17, 2, !dbg !4509
  %19 = add i32 %18, 20, !dbg !4510
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4511
  call void @llvm.dbg.value(metadata i32 %20, metadata !4492, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.value(metadata i32 0, metadata !4493, metadata !DIExpression()), !dbg !4512
  %21 = icmp slt i32 %17, 0, !dbg !4513
  br i1 %21, label %22, label %24, !dbg !4515

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4516
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4517
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4518
  %23 = sub i32 %12, %20, !dbg !4519
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4520
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4521
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4522
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4523
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4524
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4525
  ret void, !dbg !4526

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4493, metadata !DIExpression()), !dbg !4512
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4527
  store i32 0, i32* %26, align 4, !dbg !4529
  %27 = add nuw i32 %25, 1, !dbg !4530
  call void @llvm.dbg.value(metadata i32 %27, metadata !4493, metadata !DIExpression()), !dbg !4512
  %28 = icmp eq i32 %25, %17, !dbg !4513
  br i1 %28, label %22, label %24, !dbg !4515, !llvm.loop !4531
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4533 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4546, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4543, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %1, metadata !4544, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %2, metadata !4545, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %4, metadata !4547, metadata !DIExpression()), !dbg !4674
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4675
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4675
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4548, metadata !DIExpression()), !dbg !4676
  call void @llvm.dbg.value(metadata i32 0, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i1 undef, metadata !4554, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4674
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4677

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4677

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4678
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4546, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %30, metadata !4545, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %29, metadata !4552, metadata !DIExpression()), !dbg !4674
  %31 = load i8, i8* %30, align 1, !dbg !4679
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4677

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4679
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4680
  call void @llvm.dbg.value(metadata i8* %34, metadata !4545, metadata !DIExpression()), !dbg !4674
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %35, metadata !4556, metadata !DIExpression()), !dbg !4681
  %36 = icmp slt i32 %35, 0, !dbg !4682
  %37 = add i32 %29, 1, !dbg !4680
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %36, label %365, label %28, !llvm.loop !4684

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4686
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4561, metadata !DIExpression()), !dbg !4687
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4687
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4606, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4609, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8* %30, metadata !4612, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i32 -1, metadata !4613, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i32 -1, metadata !4614, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8* null, metadata !4615, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8* %14, metadata !4616, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8 0, metadata !4617, metadata !DIExpression()), !dbg !4688
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4689
  call void @llvm.dbg.value(metadata i8* %39, metadata !4545, metadata !DIExpression()), !dbg !4674
  %40 = load i24, i24* %15, align 8, !dbg !4690
  %41 = and i24 %40, 256, !dbg !4690
  %42 = icmp eq i24 %41, 0, !dbg !4690
  br i1 %42, label %51, label %43, !dbg !4692

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4693
  call void @llvm.dbg.value(metadata i8* %44, metadata !4546, metadata !DIExpression()), !dbg !4674
  %45 = bitcast i8* %27 to i32*, !dbg !4693
  %46 = load i32, i32* %45, align 4, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %46, metadata !4613, metadata !DIExpression()), !dbg !4688
  %47 = icmp slt i32 %46, 0, !dbg !4695
  br i1 %47, label %48, label %56, !dbg !4697

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4698
  store i24 %49, i24* %15, align 8, !dbg !4698
  %50 = sub nsw i32 0, %46, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %50, metadata !4613, metadata !DIExpression()), !dbg !4688
  br label %56, !dbg !4701

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4702
  %53 = icmp eq i24 %52, 0, !dbg !4702
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4704
  br label %56, !dbg !4704

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4705
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4688
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4546, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %58, metadata !4613, metadata !DIExpression()), !dbg !4688
  %60 = and i24 %57, 1024, !dbg !4705
  %61 = icmp eq i24 %60, 0, !dbg !4705
  br i1 %61, label %69, label %62, !dbg !4706

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4707
  call void @llvm.dbg.value(metadata i8* %63, metadata !4546, metadata !DIExpression()), !dbg !4674
  %64 = bitcast i8* %59 to i32*, !dbg !4707
  %65 = load i32, i32* %64, align 4, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %65, metadata !4618, metadata !DIExpression()), !dbg !4708
  %66 = icmp slt i32 %65, 0, !dbg !4709
  br i1 %66, label %67, label %74, !dbg !4711

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4712
  store i24 %68, i24* %15, align 8, !dbg !4712
  br label %74, !dbg !4714

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4715
  %71 = icmp eq i24 %70, 0, !dbg !4715
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4717
  br label %74, !dbg !4717

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4718
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4688
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4688
  call void @llvm.dbg.value(metadata i8* %77, metadata !4546, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %76, metadata !4614, metadata !DIExpression()), !dbg !4688
  store i32 0, i32* %16, align 4, !dbg !4719
  store i32 0, i32* %17, align 8, !dbg !4720
  %78 = lshr i24 %75, 16, !dbg !4718
  call void @llvm.dbg.value(metadata i24 %78, metadata !4621, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4688
  %79 = lshr i24 %75, 11, !dbg !4721
  %80 = and i24 %79, 15, !dbg !4721
  %81 = zext i24 %80 to i32, !dbg !4721
  call void @llvm.dbg.value(metadata i32 %81, metadata !4622, metadata !DIExpression()), !dbg !4688
  %82 = trunc i24 %78 to i3, !dbg !4722
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4722

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4723

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4726
  call void @llvm.dbg.value(metadata i8* %85, metadata !4546, metadata !DIExpression()), !dbg !4674
  %86 = bitcast i8* %77 to i32*, !dbg !4726
  %87 = load i32, i32* %86, align 4, !dbg !4726
  %88 = sext i32 %87 to i64, !dbg !4726
  store i64 %88, i64* %20, align 8, !dbg !4728
  br label %115, !dbg !4729

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4730
  call void @llvm.dbg.value(metadata i8* %90, metadata !4546, metadata !DIExpression()), !dbg !4674
  %91 = bitcast i8* %77 to i32*, !dbg !4730
  %92 = load i32, i32* %91, align 4, !dbg !4730
  %93 = sext i32 %92 to i64, !dbg !4730
  store i64 %93, i64* %20, align 8, !dbg !4733
  br label %115, !dbg !4734

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4735
  %96 = add i32 %95, 7, !dbg !4735
  %97 = and i32 %96, -8, !dbg !4735
  %98 = inttoptr i32 %97 to i8*, !dbg !4735
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %99, metadata !4546, metadata !DIExpression()), !dbg !4674
  %100 = inttoptr i32 %97 to i64*, !dbg !4735
  %101 = load i64, i64* %100, align 8, !dbg !4735
  store i64 %101, i64* %20, align 8, !dbg !4736
  br label %115, !dbg !4737

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4738
  %104 = add i32 %103, 7, !dbg !4738
  %105 = and i32 %104, -8, !dbg !4738
  %106 = inttoptr i32 %105 to i8*, !dbg !4738
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4738
  call void @llvm.dbg.value(metadata i8* %107, metadata !4546, metadata !DIExpression()), !dbg !4674
  %108 = inttoptr i32 %105 to i64*, !dbg !4738
  %109 = load i64, i64* %108, align 8, !dbg !4738
  store i64 %109, i64* %20, align 8, !dbg !4739
  br label %115, !dbg !4740

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4741
  call void @llvm.dbg.value(metadata i8* %111, metadata !4546, metadata !DIExpression()), !dbg !4674
  %112 = bitcast i8* %77 to i32*, !dbg !4741
  %113 = load i32, i32* %112, align 4, !dbg !4741
  %114 = sext i32 %113 to i64, !dbg !4742
  store i64 %114, i64* %20, align 8, !dbg !4743
  br label %115, !dbg !4744

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4745
  call void @llvm.dbg.value(metadata i8* %117, metadata !4546, metadata !DIExpression()), !dbg !4674
  %118 = trunc i24 %79 to i4, !dbg !4746
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4746

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4747
  %121 = ashr exact i64 %120, 56, !dbg !4747
  store i64 %121, i64* %20, align 8, !dbg !4750
  br label %177, !dbg !4751

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4752
  %124 = ashr exact i64 %123, 48, !dbg !4752
  store i64 %124, i64* %20, align 8, !dbg !4755
  br label %177, !dbg !4756

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4757

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4760
  call void @llvm.dbg.value(metadata i8* %127, metadata !4546, metadata !DIExpression()), !dbg !4674
  %128 = bitcast i8* %77 to i32*, !dbg !4760
  %129 = load i32, i32* %128, align 4, !dbg !4760
  %130 = zext i32 %129 to i64, !dbg !4760
  store i64 %130, i64* %20, align 8, !dbg !4762
  br label %157, !dbg !4763

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4764
  call void @llvm.dbg.value(metadata i8* %132, metadata !4546, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %132, metadata !4546, metadata !DIExpression()), !dbg !4674
  %133 = bitcast i8* %77 to i32*, !dbg !4764
  %134 = load i32, i32* %133, align 4, !dbg !4764
  %135 = zext i32 %134 to i64, !dbg !4764
  store i64 %135, i64* %20, align 8, !dbg !4764
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4766
  %138 = add i32 %137, 7, !dbg !4766
  %139 = and i32 %138, -8, !dbg !4766
  %140 = inttoptr i32 %139 to i8*, !dbg !4766
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %141, metadata !4546, metadata !DIExpression()), !dbg !4674
  %142 = inttoptr i32 %139 to i64*, !dbg !4766
  %143 = load i64, i64* %142, align 8, !dbg !4766
  store i64 %143, i64* %20, align 8, !dbg !4767
  br label %157, !dbg !4768

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4769
  %146 = add i32 %145, 7, !dbg !4769
  %147 = and i32 %146, -8, !dbg !4769
  %148 = inttoptr i32 %147 to i8*, !dbg !4769
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4769
  call void @llvm.dbg.value(metadata i8* %149, metadata !4546, metadata !DIExpression()), !dbg !4674
  %150 = inttoptr i32 %147 to i64*, !dbg !4769
  %151 = load i64, i64* %150, align 8, !dbg !4769
  store i64 %151, i64* %20, align 8, !dbg !4770
  br label %157, !dbg !4771

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4772
  call void @llvm.dbg.value(metadata i8* %153, metadata !4546, metadata !DIExpression()), !dbg !4674
  %154 = bitcast i8* %77 to i32*, !dbg !4772
  %155 = load i32, i32* %154, align 4, !dbg !4772
  %156 = zext i32 %155 to i64, !dbg !4773
  store i64 %156, i64* %20, align 8, !dbg !4774
  br label %157, !dbg !4775

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4776
  call void @llvm.dbg.value(metadata i8* %159, metadata !4546, metadata !DIExpression()), !dbg !4674
  %160 = trunc i24 %79 to i4, !dbg !4777
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4777

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4778
  store i64 %162, i64* %20, align 8, !dbg !4781
  br label %177, !dbg !4782

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4783
  store i64 %164, i64* %20, align 8, !dbg !4786
  br label %177, !dbg !4787

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4788
  %167 = add i32 %166, 7, !dbg !4788
  %168 = and i32 %167, -8, !dbg !4788
  %169 = inttoptr i32 %168 to i8*, !dbg !4788
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4788
  call void @llvm.dbg.value(metadata i8* %170, metadata !4546, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %170, metadata !4546, metadata !DIExpression()), !dbg !4674
  %171 = inttoptr i32 %168 to double*, !dbg !4788
  %172 = load double, double* %171, align 8, !dbg !4788
  store double %172, double* %19, align 8, !dbg !4788
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4792
  call void @llvm.dbg.value(metadata i8* %174, metadata !4546, metadata !DIExpression()), !dbg !4674
  %175 = bitcast i8* %77 to i8**, !dbg !4792
  %176 = load i8*, i8** %175, align 4, !dbg !4792
  store i8* %176, i8** %18, align 8, !dbg !4795
  br label %177, !dbg !4796

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4688
  call void @llvm.dbg.value(metadata i8* %178, metadata !4546, metadata !DIExpression()), !dbg !4674
  %179 = and i24 %75, 3, !dbg !4797
  %180 = icmp eq i24 %179, 0, !dbg !4797
  br i1 %180, label %185, label %181, !dbg !4797

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %182, metadata !4623, metadata !DIExpression()), !dbg !4799
  %183 = icmp slt i32 %182, 0, !dbg !4800
  %184 = add i32 %182, %29, !dbg !4798
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4802
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4803

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %188, metadata !4627, metadata !DIExpression()), !dbg !4805
  %189 = icmp slt i32 %188, 0, !dbg !4806
  %190 = add i32 %29, 1, !dbg !4804
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4808
  call void @llvm.dbg.value(metadata i8* %192, metadata !4615, metadata !DIExpression()), !dbg !4688
  %193 = icmp sgt i32 %76, -1, !dbg !4809
  br i1 %193, label %194, label %196, !dbg !4811

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %195, metadata !4630, metadata !DIExpression()), !dbg !4814
  br label %241, !dbg !4815

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %197, metadata !4630, metadata !DIExpression()), !dbg !4814
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4615, metadata !DIExpression()), !dbg !4688
  %199 = load i64, i64* %20, align 8, !dbg !4818
  %200 = trunc i64 %199 to i8, !dbg !4819
  store i8 %200, i8* %10, align 1, !dbg !4820
  call void @llvm.dbg.value(metadata i8* %23, metadata !4616, metadata !DIExpression()), !dbg !4688
  br label %245, !dbg !4821

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4822
  %203 = icmp eq i24 %202, 0, !dbg !4822
  %204 = trunc i24 %75 to i8, !dbg !4824
  %205 = shl i8 %204, 1, !dbg !4824
  %206 = and i8 %205, 32, !dbg !4824
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4824
  call void @llvm.dbg.value(metadata i8 %207, metadata !4617, metadata !DIExpression()), !dbg !4688
  %208 = load i64, i64* %20, align 8, !dbg !4825
  call void @llvm.dbg.value(metadata i64 %208, metadata !4553, metadata !DIExpression()), !dbg !4674
  %209 = icmp slt i64 %208, 0, !dbg !4826
  br i1 %209, label %210, label %212, !dbg !4828

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4617, metadata !DIExpression()), !dbg !4688
  %211 = sub nsw i64 0, %208, !dbg !4829
  store i64 %211, i64* %20, align 8, !dbg !4831
  br label %212, !dbg !4832

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4688
  call void @llvm.dbg.value(metadata i8 %213, metadata !4617, metadata !DIExpression()), !dbg !4688
  %214 = load i64, i64* %20, align 8, !dbg !4833
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %215, metadata !4615, metadata !DIExpression()), !dbg !4688
  br label %216, !dbg !4835

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4836
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4837
  call void @llvm.dbg.value(metadata i8* %218, metadata !4615, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8 %217, metadata !4617, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.label(metadata !4673), !dbg !4838
  %219 = icmp sgt i32 %76, -1, !dbg !4839
  br i1 %219, label %222, label %220, !dbg !4840

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4841
  br label %245, !dbg !4840

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4843
  %224 = sub i32 %22, %223, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %224, metadata !4632, metadata !DIExpression()), !dbg !4844
  %225 = load i24, i24* %15, align 8, !dbg !4845
  %226 = and i24 %225, -65, !dbg !4845
  store i24 %226, i24* %15, align 8, !dbg !4845
  %227 = icmp ugt i32 %76, %224, !dbg !4846
  br i1 %227, label %228, label %245, !dbg !4848

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4849
  store i32 %229, i32* %16, align 4, !dbg !4851
  br label %245, !dbg !4852

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4853
  %232 = icmp eq i8* %231, null, !dbg !4855
  br i1 %232, label %245, label %233, !dbg !4856

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4857
  %235 = zext i32 %234 to i64, !dbg !4857
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %236, metadata !4615, metadata !DIExpression()), !dbg !4688
  %237 = load i24, i24* %15, align 8, !dbg !4860
  %238 = or i24 %237, 1048576, !dbg !4860
  store i24 %238, i24* %15, align 8, !dbg !4860
  store i8 120, i8* %21, align 1, !dbg !4861
  br label %216, !dbg !4862

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4863
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4866
  br label %363, !dbg !4867

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4868
  call void @llvm.dbg.value(metadata i32 %242, metadata !4630, metadata !DIExpression()), !dbg !4814
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4869
  call void @llvm.dbg.value(metadata i32 -1, metadata !4614, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i32 %29, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %192, metadata !4615, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8* %243, metadata !4616, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8 0, metadata !4617, metadata !DIExpression()), !dbg !4688
  %244 = icmp eq i8* %192, null, !dbg !4870
  br i1 %244, label %363, label %245, !dbg !4872, !llvm.loop !4684

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4841
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4688
  call void @llvm.dbg.value(metadata i32 0, metadata !4636, metadata !DIExpression()), !dbg !4688
  %250 = zext i8 %249 to i32, !dbg !4873
  %251 = icmp eq i8 %249, 0, !dbg !4875
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  call void @llvm.dbg.value(metadata i32 undef, metadata !4635, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  call void @llvm.dbg.value(metadata i32 undef, metadata !4635, metadata !DIExpression()), !dbg !4688
  %252 = icmp sgt i32 %58, 0, !dbg !4876
  br i1 %252, label %253, label %302, !dbg !4877

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4841
  %255 = icmp eq i24 %254, 0, !dbg !4841
  %256 = ptrtoint i8* %248 to i32, !dbg !4878
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  %257 = ptrtoint i8* %247 to i32, !dbg !4878
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  %258 = xor i1 %251, true, !dbg !4879
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  %259 = sext i1 %258 to i32, !dbg !4879
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  %260 = lshr i24 %246, 19, !dbg !4880
  %261 = and i24 %260, 1, !dbg !4880
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4880
  %263 = zext i24 %262 to i32, !dbg !4880
  %264 = add i32 %257, %259, !dbg !4880
  %265 = add i32 %256, %263, !dbg !4880
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  %266 = and i24 %246, 4194304, !dbg !4881
  %267 = icmp eq i24 %266, 0, !dbg !4881
  %268 = load i32, i32* %16, align 4, !dbg !4883
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4688
  call void @llvm.dbg.value(metadata i32 undef, metadata !4635, metadata !DIExpression()), !dbg !4688
  %269 = load i32, i32* %17, align 8, !dbg !4884
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4884
  call void @llvm.dbg.value(metadata i32 undef, metadata !4635, metadata !DIExpression()), !dbg !4688
  %271 = add i32 %264, %58, !dbg !4884
  %272 = add i32 %265, %268, !dbg !4884
  %273 = add i32 %272, %270, !dbg !4885
  %274 = sub i32 %271, %273, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %274, metadata !4613, metadata !DIExpression()), !dbg !4688
  %275 = and i24 %246, 4, !dbg !4886
  %276 = icmp eq i24 %275, 0, !dbg !4886
  br i1 %276, label %277, label %302, !dbg !4887

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4637, metadata !DIExpression()), !dbg !4888
  %278 = and i24 %246, 64, !dbg !4889
  %279 = icmp eq i24 %278, 0, !dbg !4889
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4890
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4890
  %282 = select i1 %279, i32 32, i32 48, !dbg !4890
  br i1 %280, label %287, label %283, !dbg !4890

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %284, metadata !4642, metadata !DIExpression()), !dbg !4892
  %285 = icmp slt i32 %284, 0, !dbg !4893
  %286 = add i32 %29, 1, !dbg !4891
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4688
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4678
  call void @llvm.dbg.value(metadata i32 %290, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8 undef, metadata !4637, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8 %288, metadata !4617, metadata !DIExpression()), !dbg !4688
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4895
  %292 = add i32 %291, -1, !dbg !4895
  br label %293, !dbg !4895

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4896
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4678
  call void @llvm.dbg.value(metadata i32 %295, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %294, metadata !4613, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i32 %294, metadata !4613, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4688
  %296 = icmp sgt i32 %294, 0, !dbg !4897
  br i1 %296, label %297, label %302, !dbg !4895

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %298, metadata !4613, metadata !DIExpression()), !dbg !4688
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %299, metadata !4648, metadata !DIExpression()), !dbg !4900
  %300 = icmp slt i32 %299, 0, !dbg !4901
  %301 = add i32 %295, 1, !dbg !4899
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %300, label %361, label %293, !llvm.loop !4903

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4688
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4688
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4678
  call void @llvm.dbg.value(metadata i32 %305, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %304, metadata !4613, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8 %303, metadata !4617, metadata !DIExpression()), !dbg !4688
  %306 = icmp eq i8 %303, 0, !dbg !4905
  br i1 %306, label %312, label %307, !dbg !4906

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4907
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %309, metadata !4651, metadata !DIExpression()), !dbg !4909
  %310 = icmp slt i32 %309, 0, !dbg !4910
  %311 = add i32 %305, 1, !dbg !4908
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4678
  call void @llvm.dbg.value(metadata i32 %313, metadata !4552, metadata !DIExpression()), !dbg !4674
  %314 = lshr i24 %246, 20, !dbg !4912
  %315 = lshr i24 %246, 19, !dbg !4913
  %316 = or i24 %314, %315, !dbg !4914
  %317 = and i24 %316, 1, !dbg !4914
  %318 = icmp eq i24 %317, 0, !dbg !4914
  br i1 %318, label %323, label %319, !dbg !4915

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %320, metadata !4655, metadata !DIExpression()), !dbg !4917
  %321 = icmp slt i32 %320, 0, !dbg !4918
  %322 = add i32 %313, 1, !dbg !4916
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4678
  call void @llvm.dbg.value(metadata i32 %324, metadata !4552, metadata !DIExpression()), !dbg !4674
  %325 = and i24 %246, 1048576, !dbg !4920
  %326 = icmp eq i24 %325, 0, !dbg !4920
  br i1 %326, label %333, label %327, !dbg !4921

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4922
  %329 = zext i8 %328 to i32, !dbg !4922
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %330, metadata !4661, metadata !DIExpression()), !dbg !4923
  %331 = icmp slt i32 %330, 0, !dbg !4924
  %332 = add i32 %324, 1, !dbg !4922
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4678
  call void @llvm.dbg.value(metadata i32 %334, metadata !4552, metadata !DIExpression()), !dbg !4674
  %335 = load i32, i32* %16, align 4, !dbg !4926
  call void @llvm.dbg.value(metadata i32 %335, metadata !4636, metadata !DIExpression()), !dbg !4688
  br label %336, !dbg !4927

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4928
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4678
  call void @llvm.dbg.value(metadata i32 %338, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %337, metadata !4636, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4688
  %339 = icmp sgt i32 %337, 0, !dbg !4929
  br i1 %339, label %340, label %345, !dbg !4927

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4930
  call void @llvm.dbg.value(metadata i32 %341, metadata !4636, metadata !DIExpression()), !dbg !4688
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %342, metadata !4665, metadata !DIExpression()), !dbg !4932
  %343 = icmp slt i32 %342, 0, !dbg !4933
  %344 = add i32 %338, 1, !dbg !4931
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %343, label %361, label %336, !llvm.loop !4935

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %346, metadata !4668, metadata !DIExpression()), !dbg !4938
  %347 = icmp slt i32 %346, 0, !dbg !4939
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %349, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %304, metadata !4613, metadata !DIExpression()), !dbg !4688
  %350 = icmp sgt i32 %304, 0, !dbg !4941
  br i1 %350, label %351, label %363, !dbg !4942

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4942
  %353 = add i32 %352, %338, !dbg !4942
  br label %354, !dbg !4942

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %355, metadata !4613, metadata !DIExpression()), !dbg !4688
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !4943
  call void @llvm.dbg.value(metadata i32 %356, metadata !4670, metadata !DIExpression()), !dbg !4944
  %357 = icmp slt i32 %356, 0, !dbg !4945
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4947
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %359, metadata !4613, metadata !DIExpression()), !dbg !4688
  %360 = icmp sgt i32 %355, 1, !dbg !4941
  br i1 %360, label %354, label %363, !dbg !4942, !llvm.loop !4948

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4685
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4678
  call void @llvm.dbg.value(metadata i32 %364, metadata !4552, metadata !DIExpression()), !dbg !4674
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4685
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4674
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4950
  ret i32 %366, !dbg !4950
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4951 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4955, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i8* %1, metadata !4956, metadata !DIExpression()), !dbg !4957
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4958
  store i24 0, i24* %3, align 4, !dbg !4958
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4958
  store i8 0, i8* %4, align 1, !dbg !4958
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4958
  store i32 0, i32* %5, align 4, !dbg !4958
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4958
  store i32 0, i32* %6, align 4, !dbg !4958
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4959
  call void @llvm.dbg.value(metadata i8* %7, metadata !4956, metadata !DIExpression()), !dbg !4957
  %8 = load i8, i8* %7, align 1, !dbg !4960
  %9 = icmp eq i8 %8, 37, !dbg !4962
  br i1 %9, label %10, label %12, !dbg !4963

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4964
  call void @llvm.dbg.value(metadata i8* %11, metadata !4956, metadata !DIExpression()), !dbg !4957
  store i8 37, i8* %4, align 1, !dbg !4966
  br label %18, !dbg !4967

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4968
  call void @llvm.dbg.value(metadata i8* %13, metadata !4956, metadata !DIExpression()), !dbg !4957
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4969
  call void @llvm.dbg.value(metadata i8* %14, metadata !4956, metadata !DIExpression()), !dbg !4957
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4970
  call void @llvm.dbg.value(metadata i8* %15, metadata !4956, metadata !DIExpression()), !dbg !4957
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4971
  call void @llvm.dbg.value(metadata i8* %16, metadata !4956, metadata !DIExpression()), !dbg !4957
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4972
  call void @llvm.dbg.value(metadata i8* %17, metadata !4956, metadata !DIExpression()), !dbg !4957
  br label %18, !dbg !4973

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4957
  ret i8* %19, !dbg !4974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4975 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4979, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %1, metadata !4980, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %2, metadata !4981, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %3, metadata !4982, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 0, metadata !4983, metadata !DIExpression()), !dbg !4986
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4987

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4988
  call void @llvm.dbg.value(metadata i32 %9, metadata !4983, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %8, metadata !4981, metadata !DIExpression()), !dbg !4986
  %10 = icmp ult i8* %8, %3, !dbg !4989
  br i1 %10, label %11, label %13, !dbg !4990

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4991
  br label %17, !dbg !4990

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4992

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4993
  %16 = icmp eq i8 %15, 0, !dbg !4992
  br i1 %16, label %24, label %17, !dbg !4987

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4991
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4994
  call void @llvm.dbg.value(metadata i8* %19, metadata !4981, metadata !DIExpression()), !dbg !4986
  %20 = zext i8 %18 to i32, !dbg !4995
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %21, metadata !4984, metadata !DIExpression()), !dbg !4997
  %22 = icmp slt i32 %21, 0, !dbg !4998
  %23 = add i32 %9, 1, !dbg !5000
  call void @llvm.dbg.value(metadata i32 undef, metadata !4983, metadata !DIExpression()), !dbg !4986
  br i1 %22, label %24, label %7, !llvm.loop !5001

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4986
  ret i32 %25, !dbg !5003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5004 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5008, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5009, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8* %2, metadata !5010, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8* %3, metadata !5011, metadata !DIExpression()), !dbg !5018
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5019
  %6 = load i8, i8* %5, align 1, !dbg !5019
  %7 = zext i8 %6 to i32, !dbg !5020
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5021
  %9 = icmp eq i32 %8, 0, !dbg !5021
  call void @llvm.dbg.value(metadata i1 %9, metadata !5012, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5018
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %10, metadata !5013, metadata !DIExpression()), !dbg !5018
  %11 = ptrtoint i8* %3 to i32, !dbg !5023
  %12 = ptrtoint i8* %2 to i32, !dbg !5023
  %13 = sub i32 %11, %12, !dbg !5023
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %14, metadata !5015, metadata !DIExpression()), !dbg !5018
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5025

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5018
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5008, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8* %18, metadata !5015, metadata !DIExpression()), !dbg !5018
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5026
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5027
  call void @llvm.dbg.value(metadata i32 %25, metadata !5016, metadata !DIExpression()), !dbg !5028
  %26 = icmp ult i32 %25, 10, !dbg !5029
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5030
  %28 = add i32 %27, %25, !dbg !5028
  %29 = trunc i32 %28 to i8, !dbg !5030
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5031
  call void @llvm.dbg.value(metadata i8* %30, metadata !5015, metadata !DIExpression()), !dbg !5018
  store i8 %29, i8* %30, align 1, !dbg !5032
  call void @llvm.dbg.value(metadata i64 %22, metadata !5008, metadata !DIExpression()), !dbg !5018
  %31 = icmp uge i64 %19, %15, !dbg !5033
  %32 = icmp ugt i8* %30, %2, !dbg !5034
  %33 = and i1 %31, %32, !dbg !5034
  br i1 %33, label %17, label %34, !dbg !5035, !llvm.loop !5036

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5038
  %36 = load i24, i24* %35, align 4, !dbg !5038
  %37 = and i24 %36, 32, !dbg !5038
  %38 = icmp eq i24 %37, 0, !dbg !5038
  br i1 %38, label %44, label %39, !dbg !5040

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5041

40:                                               ; preds = %39
  br label %41, !dbg !5043

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5047
  store i24 %43, i24* %35, align 4, !dbg !5047
  br label %44, !dbg !5048

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5048
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5049 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5055, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %1, metadata !5056, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 %2, metadata !5057, metadata !DIExpression()), !dbg !5058
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5059
  %5 = load i24, i24* %4, align 4, !dbg !5059
  %6 = lshr i24 %5, 11, !dbg !5059
  %7 = and i24 %6, 15, !dbg !5059
  %8 = zext i24 %7 to i32, !dbg !5059
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5060

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5061
  store i32 %2, i32* %10, align 4, !dbg !5063
  br label %28, !dbg !5064

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5065
  store i8 %12, i8* %1, align 1, !dbg !5066
  br label %28, !dbg !5067

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5068
  %15 = bitcast i8* %1 to i16*, !dbg !5069
  store i16 %14, i16* %15, align 2, !dbg !5070
  br label %28, !dbg !5071

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5072
  store i32 %2, i32* %17, align 4, !dbg !5073
  br label %28, !dbg !5074

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5075
  %20 = bitcast i8* %1 to i64*, !dbg !5076
  store i64 %19, i64* %20, align 8, !dbg !5077
  br label %28, !dbg !5078

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5079
  %23 = bitcast i8* %1 to i64*, !dbg !5080
  store i64 %22, i64* %23, align 8, !dbg !5081
  br label %28, !dbg !5082

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5083
  store i32 %2, i32* %25, align 4, !dbg !5084
  br label %28, !dbg !5085

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5086
  store i32 %2, i32* %27, align 4, !dbg !5087
  br label %28, !dbg !5088

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5089
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5093, metadata !DIExpression()), !dbg !5094
  %2 = add i32 %0, -65, !dbg !5095
  %3 = icmp ult i32 %2, 26, !dbg !5096
  %4 = zext i1 %3 to i32, !dbg !5096
  ret i32 %4, !dbg !5097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5098 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5102, metadata !DIExpression()), !dbg !5103
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5104

2:                                                ; preds = %1
  br label %4, !dbg !5105

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5107

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5108
  ret i32 %5, !dbg !5109
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5110 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5112, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %1, metadata !5113, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8 1, metadata !5114, metadata !DIExpression()), !dbg !5115
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5116

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5114, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %5, metadata !5113, metadata !DIExpression()), !dbg !5115
  %6 = load i8, i8* %5, align 1, !dbg !5117
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5119

7:                                                ; preds = %4
  br label %11, !dbg !5120

8:                                                ; preds = %4
  br label %11, !dbg !5122

9:                                                ; preds = %4
  br label %11, !dbg !5123

10:                                               ; preds = %4
  br label %11, !dbg !5124

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5125
  %14 = or i24 %13, %12, !dbg !5125
  store i24 %14, i24* %3, align 4, !dbg !5125
  call void @llvm.dbg.value(metadata i8 poison, metadata !5114, metadata !DIExpression()), !dbg !5115
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5113, metadata !DIExpression()), !dbg !5115
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5114, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %15, metadata !5113, metadata !DIExpression()), !dbg !5115
  %17 = load i24, i24* %3, align 4, !dbg !5126
  %18 = and i24 %17, 68, !dbg !5128
  %19 = icmp eq i24 %18, 68, !dbg !5128
  br i1 %19, label %20, label %22, !dbg !5128

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5129
  store i24 %21, i24* %3, align 4, !dbg !5129
  br label %22, !dbg !5131

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5132
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5133 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5135, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i8* %1, metadata !5136, metadata !DIExpression()), !dbg !5139
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5140
  %5 = load i24, i24* %4, align 4, !dbg !5141
  %6 = or i24 %5, 128, !dbg !5141
  store i24 %6, i24* %4, align 4, !dbg !5141
  call void @llvm.dbg.value(metadata i8* %1, metadata !5136, metadata !DIExpression()), !dbg !5139
  %7 = load i8, i8* %1, align 1, !dbg !5142
  %8 = icmp eq i8 %7, 42, !dbg !5144
  br i1 %8, label %9, label %12, !dbg !5145

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5146
  store i24 %10, i24* %4, align 4, !dbg !5146
  call void @llvm.dbg.value(metadata i8* %1, metadata !5136, metadata !DIExpression()), !dbg !5139
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5148
  call void @llvm.dbg.value(metadata i8* %11, metadata !5136, metadata !DIExpression()), !dbg !5139
  store i8* %11, i8** %3, align 4, !dbg !5148
  br label %29, !dbg !5149

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5137, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i8** %3, metadata !5136, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %13, metadata !5138, metadata !DIExpression()), !dbg !5139
  %14 = load i8*, i8** %3, align 4, !dbg !5151
  call void @llvm.dbg.value(metadata i8* %14, metadata !5136, metadata !DIExpression()), !dbg !5139
  %15 = icmp eq i8* %14, %1, !dbg !5153
  br i1 %15, label %29, label %16, !dbg !5154

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5155
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5157
  store i32 %13, i32* %18, align 4, !dbg !5158
  %19 = lshr i32 %13, 31, !dbg !5159
  %20 = lshr i24 %17, 1, !dbg !5160
  %21 = and i24 %20, 1, !dbg !5160
  %22 = zext i24 %21 to i32, !dbg !5160
  %23 = or i32 %19, %22, !dbg !5160
  %24 = trunc i32 %23 to i24, !dbg !5160
  %25 = shl nuw nsw i24 %24, 1, !dbg !5160
  %26 = and i24 %17, -131, !dbg !5160
  %27 = or i24 %26, 128, !dbg !5160
  %28 = or i24 %25, %27, !dbg !5160
  store i24 %28, i24* %4, align 4, !dbg !5160
  br label %29, !dbg !5161

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5139
  ret i8* %30, !dbg !5162
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5163 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5165, metadata !DIExpression()), !dbg !5168
  call void @llvm.dbg.value(metadata i8* %1, metadata !5166, metadata !DIExpression()), !dbg !5168
  %4 = load i8, i8* %1, align 1, !dbg !5169
  %5 = icmp eq i8 %4, 46, !dbg !5170
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5171
  %7 = load i24, i24* %6, align 4, !dbg !5172
  %8 = select i1 %5, i24 512, i24 0, !dbg !5172
  %9 = and i24 %7, -513, !dbg !5172
  %10 = or i24 %9, %8, !dbg !5172
  store i24 %10, i24* %6, align 4, !dbg !5172
  br i1 %5, label %11, label %32, !dbg !5173

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5166, metadata !DIExpression()), !dbg !5168
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5174
  call void @llvm.dbg.value(metadata i8* %12, metadata !5166, metadata !DIExpression()), !dbg !5168
  store i8* %12, i8** %3, align 4, !dbg !5174
  %13 = load i8, i8* %12, align 1, !dbg !5175
  %14 = icmp eq i8 %13, 42, !dbg !5177
  br i1 %14, label %15, label %18, !dbg !5178

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5179
  store i24 %16, i24* %6, align 4, !dbg !5179
  call void @llvm.dbg.value(metadata i8* %12, metadata !5166, metadata !DIExpression()), !dbg !5168
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5181
  call void @llvm.dbg.value(metadata i8* %17, metadata !5166, metadata !DIExpression()), !dbg !5168
  store i8* %17, i8** %3, align 4, !dbg !5181
  br label %32, !dbg !5182

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5166, metadata !DIExpression(DW_OP_deref)), !dbg !5168
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5183
  call void @llvm.dbg.value(metadata i32 %19, metadata !5167, metadata !DIExpression()), !dbg !5168
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5184
  store i32 %19, i32* %20, align 4, !dbg !5185
  %21 = lshr i32 %19, 31, !dbg !5186
  %22 = load i24, i24* %6, align 4, !dbg !5187
  %23 = lshr i24 %22, 1, !dbg !5187
  %24 = and i24 %23, 1, !dbg !5187
  %25 = zext i24 %24 to i32, !dbg !5187
  %26 = or i32 %21, %25, !dbg !5187
  %27 = trunc i32 %26 to i24, !dbg !5187
  %28 = shl nuw nsw i24 %27, 1, !dbg !5187
  %29 = and i24 %22, -3, !dbg !5187
  %30 = or i24 %28, %29, !dbg !5187
  store i24 %30, i24* %6, align 4, !dbg !5187
  %31 = load i8*, i8** %3, align 4, !dbg !5188
  call void @llvm.dbg.value(metadata i8* %31, metadata !5166, metadata !DIExpression()), !dbg !5168
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5168
  ret i8* %33, !dbg !5189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5190 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5192, metadata !DIExpression()), !dbg !5194
  call void @llvm.dbg.value(metadata i8* %1, metadata !5193, metadata !DIExpression()), !dbg !5194
  %3 = load i8, i8* %1, align 1, !dbg !5195
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5196

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5197
  call void @llvm.dbg.value(metadata i8* %5, metadata !5193, metadata !DIExpression()), !dbg !5194
  %6 = load i8, i8* %5, align 1, !dbg !5200
  %7 = icmp eq i8 %6, 104, !dbg !5201
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5202
  %9 = load i24, i24* %8, align 4, !dbg !5202
  %10 = and i24 %9, -30721, !dbg !5202
  br i1 %7, label %11, label %14, !dbg !5203

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5204
  store i24 %12, i24* %8, align 4, !dbg !5204
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5206
  call void @llvm.dbg.value(metadata i8* %13, metadata !5193, metadata !DIExpression()), !dbg !5194
  br label %56, !dbg !5207

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5208
  store i24 %15, i24* %8, align 4, !dbg !5208
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5210
  call void @llvm.dbg.value(metadata i8* %17, metadata !5193, metadata !DIExpression()), !dbg !5194
  %18 = load i8, i8* %17, align 1, !dbg !5212
  %19 = icmp eq i8 %18, 108, !dbg !5213
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5214
  %21 = load i24, i24* %20, align 4, !dbg !5214
  %22 = and i24 %21, -30721, !dbg !5214
  br i1 %19, label %23, label %26, !dbg !5215

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5216
  store i24 %24, i24* %20, align 4, !dbg !5216
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5218
  call void @llvm.dbg.value(metadata i8* %25, metadata !5193, metadata !DIExpression()), !dbg !5194
  br label %56, !dbg !5219

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5220
  store i24 %27, i24* %20, align 4, !dbg !5220
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5222
  %30 = load i24, i24* %29, align 4, !dbg !5223
  %31 = and i24 %30, -30721, !dbg !5223
  %32 = or i24 %31, 10240, !dbg !5223
  store i24 %32, i24* %29, align 4, !dbg !5223
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5224
  call void @llvm.dbg.value(metadata i8* %33, metadata !5193, metadata !DIExpression()), !dbg !5194
  br label %56, !dbg !5225

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5226
  %36 = load i24, i24* %35, align 4, !dbg !5227
  %37 = and i24 %36, -30721, !dbg !5227
  %38 = or i24 %37, 12288, !dbg !5227
  store i24 %38, i24* %35, align 4, !dbg !5227
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5228
  call void @llvm.dbg.value(metadata i8* %39, metadata !5193, metadata !DIExpression()), !dbg !5194
  br label %56, !dbg !5229

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5230
  %42 = load i24, i24* %41, align 4, !dbg !5231
  %43 = and i24 %42, -30721, !dbg !5231
  %44 = or i24 %43, 14336, !dbg !5231
  store i24 %44, i24* %41, align 4, !dbg !5231
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5232
  call void @llvm.dbg.value(metadata i8* %45, metadata !5193, metadata !DIExpression()), !dbg !5194
  br label %56, !dbg !5233

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5234
  %48 = load i24, i24* %47, align 4, !dbg !5235
  %49 = and i24 %48, -30723, !dbg !5235
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5236
  call void @llvm.dbg.value(metadata i8* %50, metadata !5193, metadata !DIExpression()), !dbg !5194
  %51 = or i24 %49, 16386, !dbg !5237
  store i24 %51, i24* %47, align 4, !dbg !5237
  br label %56, !dbg !5238

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5239
  %54 = load i24, i24* %53, align 4, !dbg !5240
  %55 = and i24 %54, -30721, !dbg !5240
  store i24 %55, i24* %53, align 4, !dbg !5240
  br label %56, !dbg !5241

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5193, metadata !DIExpression()), !dbg !5194
  ret i8* %57, !dbg !5242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5243 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5245, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %1, metadata !5246, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8 0, metadata !5247, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %1, metadata !5246, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5250
  %3 = load i8, i8* %1, align 1, !dbg !5251
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5252
  store i8 %3, i8* %4, align 1, !dbg !5253
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5254

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5255

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5256
  %9 = load i24, i24* %8, align 4, !dbg !5256
  %10 = and i24 %9, -458753, !dbg !5256
  %11 = or i24 %10, %7, !dbg !5256
  call void @llvm.dbg.label(metadata !5248), !dbg !5257
  %12 = and i24 %9, 30720, !dbg !5258
  %13 = icmp eq i24 %12, 16384, !dbg !5258
  %14 = zext i1 %13 to i24, !dbg !5260
  %15 = or i24 %11, %14, !dbg !5260
  %16 = icmp eq i8 %3, 99, !dbg !5261
  br i1 %16, label %17, label %43, !dbg !5263

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5264
  %19 = icmp ne i24 %18, 0, !dbg !5264
  call void @llvm.dbg.value(metadata i1 %19, metadata !5247, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5250
  br label %43, !dbg !5266

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5267
  %22 = load i24, i24* %21, align 4, !dbg !5268
  %23 = and i24 %22, -458753, !dbg !5268
  %24 = or i24 %23, 262144, !dbg !5268
  call void @llvm.dbg.value(metadata i8 1, metadata !5247, metadata !DIExpression()), !dbg !5250
  br label %43, !dbg !5269

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5272
  %27 = load i24, i24* %26, align 4, !dbg !5273
  %28 = and i24 %27, -458753, !dbg !5273
  %29 = or i24 %28, 196608, !dbg !5273
  %30 = and i24 %27, 30720, !dbg !5274
  %31 = icmp eq i24 %30, 16384, !dbg !5274
  br label %43, !dbg !5276

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5277
  %34 = load i24, i24* %33, align 4, !dbg !5278
  %35 = and i24 %34, -458753, !dbg !5278
  %36 = or i24 %35, 196608, !dbg !5278
  %37 = and i24 %34, 30720, !dbg !5279
  %38 = icmp ne i24 %37, 0, !dbg !5279
  br label %43, !dbg !5281

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5282
  %41 = load i24, i24* %40, align 4, !dbg !5283
  %42 = or i24 %41, 1, !dbg !5283
  br label %43, !dbg !5284

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5285
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5286
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5287
  call void @llvm.dbg.value(metadata i8* %48, metadata !5246, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8 poison, metadata !5247, metadata !DIExpression()), !dbg !5250
  %49 = lshr i24 %44, 1, !dbg !5285
  %50 = and i24 %49, 1, !dbg !5285
  %51 = zext i24 %50 to i32, !dbg !5285
  %52 = or i32 %51, %47, !dbg !5285
  %53 = trunc i32 %52 to i24, !dbg !5285
  %54 = shl nuw nsw i24 %53, 1, !dbg !5285
  %55 = and i24 %44, -3, !dbg !5285
  %56 = or i24 %54, %55, !dbg !5285
  store i24 %56, i24* %46, align 4, !dbg !5285
  ret i8* %48, !dbg !5288
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5289 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5294, metadata !DIExpression()), !dbg !5297
  %2 = load i8*, i8** %0, align 4, !dbg !5298
  call void @llvm.dbg.value(metadata i8* %2, metadata !5295, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i32 0, metadata !5296, metadata !DIExpression()), !dbg !5297
  %3 = load i8, i8* %2, align 1, !dbg !5299
  %4 = zext i8 %3 to i32, !dbg !5300
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5301
  %6 = icmp eq i32 %5, 0, !dbg !5302
  br i1 %6, label %19, label %7, !dbg !5302

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5296, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i8* %10, metadata !5295, metadata !DIExpression()), !dbg !5297
  %11 = mul i32 %9, 10, !dbg !5303
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5305
  call void @llvm.dbg.value(metadata i8* %12, metadata !5295, metadata !DIExpression()), !dbg !5297
  %13 = add i32 %11, -48, !dbg !5306
  %14 = add i32 %13, %8, !dbg !5307
  call void @llvm.dbg.value(metadata i32 %14, metadata !5296, metadata !DIExpression()), !dbg !5297
  %15 = load i8, i8* %12, align 1, !dbg !5299
  %16 = zext i8 %15 to i32, !dbg !5300
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5301
  %18 = icmp eq i32 %17, 0, !dbg !5302
  br i1 %18, label %19, label %7, !dbg !5302, !llvm.loop !5308

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5297
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5297
  store i8* %20, i8** %0, align 4, !dbg !5310
  ret i32 %21, !dbg !5311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5314, metadata !DIExpression()), !dbg !5315
  %2 = add i32 %0, -48, !dbg !5316
  %3 = icmp ult i32 %2, 10, !dbg !5317
  %4 = zext i1 %3 to i32, !dbg !5317
  ret i32 %4, !dbg !5318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5319 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #25, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #25, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5867, !srcloc !5868
  ret void, !dbg !5869
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5872, metadata !DIExpression()), !dbg !5874
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5875
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5876
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5877, !srcloc !5886
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5877
  call void @llvm.dbg.value(metadata i32 %3, metadata !5883, metadata !DIExpression()) #25, !dbg !5887
  call void @llvm.dbg.value(metadata i32 undef, metadata !5884, metadata !DIExpression()) #25, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %3, metadata !5873, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata i32 %3, metadata !5888, metadata !DIExpression()) #25, !dbg !5893
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5895, !srcloc !5896
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5897
  ret i32 0, !dbg !5898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5899 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5901
  %2 = or i32 %1, 512, !dbg !5901
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5901
  ret void, !dbg !5902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5903 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5904
  %2 = or i32 %1, 1024, !dbg !5904
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5904
  ret void, !dbg !5905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5906 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5908, metadata !DIExpression()), !dbg !5909
  ret i32 0, !dbg !5910
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5960, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5961, metadata !DIExpression()), !dbg !5962
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !5963
  ret void, !dbg !5964
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5965 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5982, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5983, metadata !DIExpression()), !dbg !5985
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5986
  %4 = load i32, i32* %3, align 4, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %4, metadata !5984, metadata !DIExpression()), !dbg !5985
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !5987
  ret void, !dbg !5988
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !5989 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5993, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.value(metadata i8* %0, metadata !5994, metadata !DIExpression()), !dbg !5996
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5997
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !5997
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5995, metadata !DIExpression()), !dbg !5998
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5998
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5999
  %5 = bitcast i8* %4 to i32*, !dbg !5999
  %6 = load i32, i32* %5, align 4, !dbg !5999
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6000
  store i32 %6, i32* %7, align 4, !dbg !6001
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6002
  unreachable, !dbg !6003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6004 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6007, metadata !DIExpression()), !dbg !6008
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6009
  ret void, !dbg !6010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6015, metadata !DIExpression()), !dbg !6016
  %2 = icmp sgt i32 %0, -1, !dbg !6017
  br i1 %2, label %3, label %8, !dbg !6019

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6020, !srcloc !6022
  %4 = and i32 %0, 31, !dbg !6023
  %5 = shl nuw i32 1, %4, !dbg !6024
  %6 = lshr i32 %0, 5, !dbg !6025
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6026
  store volatile i32 %5, i32* %7, align 4, !dbg !6027
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6028, !srcloc !6029
  br label %8, !dbg !6030

8:                                                ; preds = %3, %1
  ret void, !dbg !6031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6034, metadata !DIExpression()), !dbg !6035
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6036
  ret void, !dbg !6037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6040, metadata !DIExpression()), !dbg !6041
  %2 = icmp sgt i32 %0, -1, !dbg !6042
  br i1 %2, label %3, label %8, !dbg !6044

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6045
  %5 = shl nuw i32 1, %4, !dbg !6047
  %6 = lshr i32 %0, 5, !dbg !6048
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6049
  store volatile i32 %5, i32* %7, align 4, !dbg !6050
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6051, !srcloc !6055
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6056, !srcloc !6059
  br label %8, !dbg !6060

8:                                                ; preds = %3, %1
  ret void, !dbg !6061
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6066, metadata !DIExpression()), !dbg !6067
  %2 = lshr i32 %0, 5, !dbg !6068
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6069
  %4 = load volatile i32, i32* %3, align 4, !dbg !6069
  %5 = and i32 %0, 31, !dbg !6070
  %6 = shl nuw i32 1, %5, !dbg !6070
  %7 = and i32 %4, %6, !dbg !6071
  ret i32 %7, !dbg !6072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6077, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.value(metadata i32 %1, metadata !6078, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.value(metadata i32 %2, metadata !6079, metadata !DIExpression()), !dbg !6080
  %4 = add i32 %1, 1, !dbg !6081
  call void @llvm.dbg.value(metadata i32 %4, metadata !6078, metadata !DIExpression()), !dbg !6080
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6084
  ret void, !dbg !6085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6090, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i32 %1, metadata !6091, metadata !DIExpression()), !dbg !6092
  %3 = trunc i32 %1 to i8, !dbg !6093
  %4 = shl i8 %3, 4, !dbg !6093
  %5 = and i32 %0, 15, !dbg !6095
  %6 = add nsw i32 %5, -4, !dbg !6095
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6095
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6095
  %9 = icmp slt i32 %0, 0, !dbg !6095
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6095
  store volatile i8 %4, i8* %10, align 1, !dbg !6093
  ret void, !dbg !6096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6097 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6099, metadata !DIExpression()), !dbg !6100
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6101
  ret void, !dbg !6102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6103 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6105
  tail call void @z_arm_int_exit() #27, !dbg !6106
  ret void, !dbg !6107
}

; Function Attrs: optsize
declare !dbg !6108 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6109 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6111 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6113
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6114
  tail call void @z_bss_zero() #27, !dbg !6115
  tail call void @z_data_copy() #27, !dbg !6116
  tail call void @z_arm_interrupt_init() #27, !dbg !6117
  tail call void @z_cstart() #29, !dbg !6118
  unreachable, !dbg !6118
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6119 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6120
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6121, !srcloc !6124
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6125, !srcloc !6128
  ret void, !dbg !6129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6130 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6131
  %2 = and i32 %1, -15728641, !dbg !6131
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6131
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6132, !srcloc !6139
  call void @llvm.dbg.value(metadata i32 %3, metadata !6137, metadata !DIExpression()) #25, !dbg !6140
  %4 = and i32 %3, -5, !dbg !6141
  call void @llvm.dbg.value(metadata i32 %4, metadata !6142, metadata !DIExpression()) #25, !dbg !6147
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6149, !srcloc !6150
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6151, !srcloc !6128
  ret void, !dbg !6153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6157, metadata !DIExpression()), !dbg !6158
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6159
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6160
  store i32 %0, i32* %3, align 4, !dbg !6161
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6162
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6163
  store i32 %4, i32* %5, align 4, !dbg !6164
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6165
  %7 = or i32 %6, 268435456, !dbg !6165
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6165
  call void @llvm.dbg.value(metadata i32 0, metadata !6166, metadata !DIExpression()) #25, !dbg !6169
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6171, !srcloc !6172
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6173
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6174
  %10 = load i32, i32* %9, align 4, !dbg !6174
  ret i32 %10, !dbg !6175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6176 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6286, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6287, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.value(metadata i8* %2, metadata !6288, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6289, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.value(metadata i8* %4, metadata !6290, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.value(metadata i8* %5, metadata !6291, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.value(metadata i8* %6, metadata !6292, metadata !DIExpression()), !dbg !6294
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6295
  call void @llvm.dbg.value(metadata i8* %8, metadata !6293, metadata !DIExpression()), !dbg !6294
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6296
  %10 = bitcast i8* %9 to i32*, !dbg !6296
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6297
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6298
  %12 = bitcast i8* %8 to i32*, !dbg !6299
  store i32 %11, i32* %12, align 4, !dbg !6300
  %13 = ptrtoint i8* %4 to i32, !dbg !6301
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6302
  %15 = bitcast i8* %14 to i32*, !dbg !6302
  store i32 %13, i32* %15, align 4, !dbg !6303
  %16 = ptrtoint i8* %5 to i32, !dbg !6304
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6305
  %18 = bitcast i8* %17 to i32*, !dbg !6305
  store i32 %16, i32* %18, align 4, !dbg !6306
  %19 = ptrtoint i8* %6 to i32, !dbg !6307
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6308
  %21 = bitcast i8* %20 to i32*, !dbg !6308
  store i32 %19, i32* %21, align 4, !dbg !6309
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6310
  %23 = bitcast i8* %22 to i32*, !dbg !6310
  store i32 16777216, i32* %23, align 4, !dbg !6311
  %24 = ptrtoint i8* %8 to i32, !dbg !6312
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6313
  store i32 %24, i32* %25, align 8, !dbg !6314
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6315
  store i32 0, i32* %26, align 4, !dbg !6316
  ret void, !dbg !6317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6323, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i32 %1, metadata !6324, metadata !DIExpression()), !dbg !6329
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6330
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6325, metadata !DIExpression()), !dbg !6329
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6331
  br i1 %4, label %19, label %5, !dbg !6333

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6328, metadata !DIExpression()), !dbg !6329
  %6 = icmp eq i32 %0, -22, !dbg !6334
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6334
  %8 = load i32, i32* %7, align 4, !dbg !6334
  br i1 %6, label %16, label %9, !dbg !6336

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6334
  %11 = icmp ule i32 %10, %0, !dbg !6334
  %12 = icmp ugt i32 %8, %0, !dbg !6334
  %13 = and i1 %12, %11, !dbg !6334
  %14 = icmp ugt i32 %8, %1, !dbg !6334
  %15 = and i1 %14, %13, !dbg !6334
  br i1 %15, label %18, label %19, !dbg !6334

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6334
  br i1 %17, label %18, label %19, !dbg !6336

18:                                               ; preds = %9, %16
  br label %19, !dbg !6337

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6329
  ret i32 %20, !dbg !6339
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6340 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6344, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.value(metadata i8* %1, metadata !6345, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6346, metadata !DIExpression()), !dbg !6347
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6348
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6349
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6350, !srcloc !6351
  unreachable, !dbg !6352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6353 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6371, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i32 %1, metadata !6372, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i32 %2, metadata !6373, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6374, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i32 0, metadata !6375, metadata !DIExpression()), !dbg !6381
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6382
  %9 = and i32 %8, 511, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %9, metadata !6376, metadata !DIExpression()), !dbg !6381
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6384
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6384
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6385
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6385
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6380, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 0, metadata !6387, metadata !DIExpression()) #25, !dbg !6390
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6392, !srcloc !6393
  call void @llvm.dbg.value(metadata i8* %6, metadata !6378, metadata !DIExpression(DW_OP_deref)), !dbg !6381
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6394
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6379, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i8* %5, metadata !6377, metadata !DIExpression(DW_OP_deref)), !dbg !6381
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %12, metadata !6375, metadata !DIExpression()), !dbg !6381
  %13 = load i8, i8* %5, align 1, !dbg !6396, !range !6398
  call void @llvm.dbg.value(metadata i8 %13, metadata !6377, metadata !DIExpression()), !dbg !6381
  %14 = icmp eq i8 %13, 0, !dbg !6396
  br i1 %14, label %15, label %32, !dbg !6399

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6400
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !6401
  %18 = load i8, i8* %6, align 1, !dbg !6402, !range !6398
  call void @llvm.dbg.value(metadata i8 %18, metadata !6378, metadata !DIExpression()), !dbg !6381
  %19 = icmp eq i8 %18, 0, !dbg !6402
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6404
  %21 = load i32, i32* %20, align 4, !dbg !6404
  br i1 %19, label %27, label %22, !dbg !6405

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6406
  %24 = icmp eq i32 %23, 0, !dbg !6409
  br i1 %24, label %25, label %31, !dbg !6410

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6411
  br label %29, !dbg !6413

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6414
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6404
  br label %31, !dbg !6416

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !6416
  br label %32, !dbg !6417

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6417
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6417
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6417
  ret void, !dbg !6417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6423, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 %1, metadata !6424, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 %2, metadata !6425, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8* %3, metadata !6426, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8 0, metadata !6427, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6428, metadata !DIExpression()), !dbg !6429
  store i8 0, i8* %3, align 1, !dbg !6430
  %5 = icmp ult i32 %2, -16777216, !dbg !6431
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6433
  br i1 %8, label %16, label %9, !dbg !6433

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6434
  %11 = icmp eq i32 %10, 0, !dbg !6434
  br i1 %11, label %12, label %13, !dbg !6436

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6428, metadata !DIExpression()), !dbg !6429
  store i8 1, i8* %3, align 1, !dbg !6439
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6429
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6428, metadata !DIExpression()), !dbg !6429
  br label %16, !dbg !6442

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6429
  ret %struct.__esf* %17, !dbg !6443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6444 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6448, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i32 %1, metadata !6449, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i8* %2, metadata !6450, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i32 0, metadata !6451, metadata !DIExpression()), !dbg !6452
  store i8 0, i8* %2, align 1, !dbg !6453
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6454

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6455
  call void @llvm.dbg.value(metadata i32 %5, metadata !6451, metadata !DIExpression()), !dbg !6452
  br label %11, !dbg !6457

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6458
  call void @llvm.dbg.value(metadata i32 %7, metadata !6451, metadata !DIExpression()), !dbg !6452
  br label %11, !dbg !6459

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6460
  call void @llvm.dbg.value(metadata i32 0, metadata !6451, metadata !DIExpression()), !dbg !6452
  br label %11, !dbg !6461

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6462
  call void @llvm.dbg.value(metadata i32 0, metadata !6451, metadata !DIExpression()), !dbg !6452
  br label %11, !dbg !6463

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6464
  br label %11, !dbg !6465

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6467 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6471, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i8* %1, metadata !6472, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i32 0, metadata !6473, metadata !DIExpression()), !dbg !6474
  store i8 0, i8* %1, align 1, !dbg !6475
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6476
  %4 = and i32 %3, 2, !dbg !6478
  %5 = icmp eq i32 %4, 0, !dbg !6479
  br i1 %5, label %6, label %33, !dbg !6480

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6481
  %8 = icmp sgt i32 %7, -1, !dbg !6483
  br i1 %8, label %9, label %33, !dbg !6484

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6485
  %11 = and i32 %10, 1073741824, !dbg !6487
  %12 = icmp eq i32 %11, 0, !dbg !6488
  br i1 %12, label %33, label %13, !dbg !6489

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6490
  br i1 %14, label %15, label %18, !dbg !6493

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6494
  %17 = load i32, i32* %16, align 4, !dbg !6494
  call void @llvm.dbg.value(metadata i32 %17, metadata !6473, metadata !DIExpression()), !dbg !6474
  br label %33, !dbg !6496

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6497
  %20 = and i32 %19, 255, !dbg !6499
  %21 = icmp eq i32 %20, 0, !dbg !6500
  br i1 %21, label %24, label %22, !dbg !6501

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6502
  call void @llvm.dbg.value(metadata i32 %23, metadata !6473, metadata !DIExpression()), !dbg !6474
  br label %33, !dbg !6504

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6505
  %26 = and i32 %25, 65280, !dbg !6507
  %27 = icmp eq i32 %26, 0, !dbg !6508
  br i1 %27, label %29, label %28, !dbg !6509

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6510
  call void @llvm.dbg.value(metadata i32 0, metadata !6473, metadata !DIExpression()), !dbg !6474
  br label %33, !dbg !6512

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6513
  %31 = icmp ult i32 %30, 65536, !dbg !6515
  br i1 %31, label %33, label %32, !dbg !6516

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6517
  call void @llvm.dbg.value(metadata i32 0, metadata !6473, metadata !DIExpression()), !dbg !6474
  br label %33, !dbg !6519

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6474
  call void @llvm.dbg.value(metadata i32 %34, metadata !6473, metadata !DIExpression()), !dbg !6474
  ret i32 %34, !dbg !6520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6521 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6523, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i32 %1, metadata !6524, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i8* %2, metadata !6525, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i32 0, metadata !6526, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i32 -22, metadata !6527, metadata !DIExpression()), !dbg !6536
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6537
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6539
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6541
  %7 = and i32 %6, 2, !dbg !6542
  %8 = icmp eq i32 %7, 0, !dbg !6543
  br i1 %8, label %19, label %9, !dbg !6544

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6545
  call void @llvm.dbg.value(metadata i32 %10, metadata !6528, metadata !DIExpression()), !dbg !6546
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6547
  %12 = and i32 %11, 128, !dbg !6549
  %13 = icmp eq i32 %12, 0, !dbg !6550
  br i1 %13, label %19, label %14, !dbg !6551

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6527, metadata !DIExpression()), !dbg !6536
  %15 = icmp eq i32 %1, 0, !dbg !6552
  br i1 %15, label %19, label %16, !dbg !6555

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6556
  %18 = and i32 %17, -129, !dbg !6556
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6556
  br label %19, !dbg !6558

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6536
  call void @llvm.dbg.value(metadata i32 %20, metadata !6527, metadata !DIExpression()), !dbg !6536
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6559
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6561
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6563
  %24 = and i32 %23, 16, !dbg !6564
  %25 = icmp eq i32 %24, 0, !dbg !6564
  br i1 %25, label %26, label %30, !dbg !6565

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6566
  %28 = and i32 %27, 2, !dbg !6567
  %29 = icmp eq i32 %28, 0, !dbg !6567
  br i1 %29, label %39, label %30, !dbg !6568

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6569
  %32 = and i32 %31, 2048, !dbg !6570
  %33 = icmp eq i32 %32, 0, !dbg !6570
  br i1 %33, label %39, label %34, !dbg !6571

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6572
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6573
  call void @llvm.dbg.value(metadata i32 %36, metadata !6531, metadata !DIExpression()), !dbg !6574
  %37 = icmp eq i32 %36, 0, !dbg !6575
  br i1 %37, label %39, label %38, !dbg !6577

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6578, metadata !DIExpression()) #25, !dbg !6581
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6584, !srcloc !6585
  call void @llvm.dbg.value(metadata i32 2, metadata !6526, metadata !DIExpression()), !dbg !6536
  br label %39, !dbg !6586

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6536
  call void @llvm.dbg.value(metadata i32 %40, metadata !6526, metadata !DIExpression()), !dbg !6536
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6587
  %42 = and i32 %41, 32, !dbg !6589
  %43 = icmp eq i32 %42, 0, !dbg !6590
  br i1 %43, label %47, label %44, !dbg !6591

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6592
  %46 = and i32 %45, -8193, !dbg !6592
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6592
  br label %47, !dbg !6594

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6595
  %49 = or i32 %48, 255, !dbg !6595
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6595
  store i8 0, i8* %2, align 1, !dbg !6596
  ret i32 %40, !dbg !6597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6598 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6602, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 %0, metadata !6603, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8* %1, metadata !6604, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 0, metadata !6605, metadata !DIExpression()), !dbg !6609
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6610
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6612
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6614
  %6 = and i32 %5, 512, !dbg !6615
  %7 = icmp eq i32 %6, 0, !dbg !6615
  br i1 %7, label %18, label %8, !dbg !6616

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6617
  call void @llvm.dbg.value(metadata i32 %9, metadata !6606, metadata !DIExpression()), !dbg !6618
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6619
  %11 = and i32 %10, 32768, !dbg !6621
  %12 = icmp ne i32 %11, 0, !dbg !6622
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6623
  br i1 %14, label %15, label %18, !dbg !6623

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6624
  %17 = and i32 %16, -32769, !dbg !6624
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6624
  br label %18, !dbg !6628

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6629
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6631
  %21 = and i32 %20, 256, !dbg !6633
  %22 = icmp eq i32 %21, 0, !dbg !6634
  br i1 %22, label %23, label %25, !dbg !6635

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6636
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6638
  %27 = or i32 %26, 65280, !dbg !6638
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6638
  store i8 0, i8* %1, align 1, !dbg !6639
  ret void, !dbg !6640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6641 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6647, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata i32 0, metadata !6648, metadata !DIExpression()), !dbg !6649
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6650
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6652
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6654
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6656
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6658
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6660
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6662
  %8 = or i32 %7, -65536, !dbg !6662
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6662
  ret void, !dbg !6663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6664 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6668, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8* %0, metadata !6669, metadata !DIExpression()), !dbg !6670
  store i8 0, i8* %0, align 1, !dbg !6671
  ret void, !dbg !6672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6673 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6677, metadata !DIExpression()), !dbg !6680
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6681
  %3 = load i32, i32* %2, align 4, !dbg !6681
  %4 = inttoptr i32 %3 to i16*, !dbg !6682
  call void @llvm.dbg.value(metadata i16* %4, metadata !6678, metadata !DIExpression()), !dbg !6680
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6683
  %6 = or i32 %5, 256, !dbg !6683
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6683
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6684, !srcloc !6687
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6688, !srcloc !6691
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6692
  %8 = load i16, i16* %7, align 2, !dbg !6693
  call void @llvm.dbg.value(metadata i16 %8, metadata !6679, metadata !DIExpression()), !dbg !6680
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6694
  %10 = and i32 %9, -257, !dbg !6694
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6694
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6695, !srcloc !6687
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6697, !srcloc !6691
  %11 = icmp eq i16 %8, -8446, !dbg !6699
  ret i1 %11, !dbg !6701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6702 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6703
  %2 = or i32 %1, 16, !dbg !6703
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6703
  ret void, !dbg !6704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6705 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6708, metadata !DIExpression()), !dbg !6709
  br label %1, !dbg !6710

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6708, metadata !DIExpression()), !dbg !6709
  tail call fastcc void @__NVIC_SetPriority.12(i32 noundef %2) #26, !dbg !6712
  %3 = add nuw nsw i32 %2, 1, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %3, metadata !6708, metadata !DIExpression()), !dbg !6709
  %4 = icmp eq i32 %3, 86, !dbg !6716
  br i1 %4, label %5, label %1, !dbg !6710, !llvm.loop !6717

5:                                                ; preds = %1
  ret void, !dbg !6719
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.12(i32 noundef %0) unnamed_addr #15 !dbg !6720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6722, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 1, metadata !6723, metadata !DIExpression()), !dbg !6724
  %2 = and i32 %0, 15, !dbg !6725
  %3 = add nsw i32 %2, -4, !dbg !6725
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6725
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6725
  %6 = icmp slt i32 %0, 0, !dbg !6725
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6725
  store volatile i8 16, i8* %7, align 1, !dbg !6726
  ret void, !dbg !6728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6729 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6835, metadata !DIExpression()), !dbg !6836
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6837
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6839
  br i1 %3, label %4, label %12, !dbg !6840

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6841, !srcloc !6853
  call void @llvm.dbg.value(metadata i32 %5, metadata !6844, metadata !DIExpression()) #25, !dbg !6854
  %6 = icmp eq i32 %5, 0, !dbg !6855
  br i1 %6, label %12, label %7, !dbg !6856

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6857
  %9 = or i32 %8, 268435456, !dbg !6857
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6857
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6859
  %11 = and i32 %10, -32769, !dbg !6859
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6859
  br label %12, !dbg !6860

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !6861
  ret void, !dbg !6862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6863 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !6864
  ret void, !dbg !6865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !470, metadata !DIExpression()), !dbg !6866
  call void @llvm.dbg.value(metadata i8 0, metadata !471, metadata !DIExpression()), !dbg !6866
  call void @llvm.dbg.value(metadata i32 64, metadata !473, metadata !DIExpression()), !dbg !6866
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6867
  %3 = load i32, i32* %2, align 4, !dbg !6867
  %4 = add i32 %3, -64, !dbg !6869
  call void @llvm.dbg.value(metadata i32 %4, metadata !472, metadata !DIExpression()), !dbg !6866
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6870
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6871
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6872
  call void @llvm.dbg.value(metadata i8 1, metadata !471, metadata !DIExpression()), !dbg !6866
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !6873
  ret void, !dbg !6874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6875 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6876
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6877, !srcloc !6880
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6881, !srcloc !6884
  ret void, !dbg !6885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6886 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6887, !srcloc !6890
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6891
  ret void, !dbg !6892
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6893 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6908, metadata !DIExpression()), !dbg !6912
  call void @llvm.dbg.value(metadata i8 %1, metadata !6909, metadata !DIExpression()), !dbg !6912
  call void @llvm.dbg.value(metadata i32 %2, metadata !6910, metadata !DIExpression()), !dbg !6912
  call void @llvm.dbg.value(metadata i32 %3, metadata !6911, metadata !DIExpression()), !dbg !6912
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !6913
  ret void, !dbg !6915
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6916 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6921, metadata !DIExpression()), !dbg !6926
  call void @llvm.dbg.value(metadata i8 %1, metadata !6922, metadata !DIExpression()), !dbg !6926
  call void @llvm.dbg.value(metadata i32 undef, metadata !6923, metadata !DIExpression()), !dbg !6926
  call void @llvm.dbg.value(metadata i32 undef, metadata !6924, metadata !DIExpression()), !dbg !6926
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6927
  call void @llvm.dbg.value(metadata i8 %3, metadata !6925, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6926
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !6928
  call void @llvm.dbg.value(metadata i32 %4, metadata !6925, metadata !DIExpression()), !dbg !6926
  %5 = trunc i32 %4 to i8, !dbg !6929
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6930
  ret void, !dbg !6931
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6932 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6936, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i8 %1, metadata !6937, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i8 %2, metadata !6938, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i1 %3, metadata !6939, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6942
  %5 = zext i8 %2 to i32, !dbg !6943
  call void @llvm.dbg.value(metadata i32 %5, metadata !6941, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i32 0, metadata !6940, metadata !DIExpression()), !dbg !6942
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6941, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i32 0, metadata !6940, metadata !DIExpression()), !dbg !6942
  %7 = icmp eq i8 %1, 0, !dbg !6944
  br i1 %7, label %29, label %8, !dbg !6947

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6941, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i32 %10, metadata !6940, metadata !DIExpression()), !dbg !6942
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6948
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6951
  %13 = load i32, i32* %12, align 4, !dbg !6951
  %14 = icmp eq i32 %13, 0, !dbg !6952
  br i1 %14, label %25, label %15, !dbg !6953

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6954

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6956
  %18 = icmp eq i32 %17, 0, !dbg !6956
  br i1 %18, label %29, label %19, !dbg !6957

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6958
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6959
  call void @llvm.dbg.value(metadata i32 %21, metadata !6941, metadata !DIExpression()), !dbg !6942
  %22 = icmp eq i32 %21, -22, !dbg !6960
  br i1 %22, label %29, label %23, !dbg !6962

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6963
  call void @llvm.dbg.value(metadata i32 %24, metadata !6941, metadata !DIExpression()), !dbg !6942
  br label %25, !dbg !6964

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6942
  call void @llvm.dbg.value(metadata i32 %26, metadata !6941, metadata !DIExpression()), !dbg !6942
  %27 = add nuw nsw i32 %10, 1, !dbg !6965
  call void @llvm.dbg.value(metadata i32 %27, metadata !6940, metadata !DIExpression()), !dbg !6942
  %28 = icmp eq i32 %27, %6, !dbg !6944
  br i1 %28, label %29, label %8, !dbg !6947, !llvm.loop !6966

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6942
  ret i32 %30, !dbg !6968
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6969 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6973, metadata !DIExpression()), !dbg !6975
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6976
  %3 = load i32, i32* %2, align 4, !dbg !6976
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6977, !range !3970
  %5 = icmp ult i32 %4, 2, !dbg !6977
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6978
  br i1 %7, label %8, label %15, !dbg !6978

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6979
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6980
  %11 = load i32, i32* %10, align 4, !dbg !6980
  %12 = and i32 %11, %9, !dbg !6981
  %13 = icmp eq i32 %12, 0, !dbg !6982
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6974, metadata !DIExpression()), !dbg !6975
  ret i32 %16, !dbg !6983
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !6984 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6988, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6989, metadata !DIExpression()), !dbg !6991
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6992
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6992
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6990, metadata !DIExpression()), !dbg !6993
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6994
  %6 = load i32, i32* %5, align 4, !dbg !6994
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6995
  store i32 %6, i32* %7, align 4, !dbg !6996
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6997
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6998
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6999
  %11 = load i32, i32* %10, align 4, !dbg !6999
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7000
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7001
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7002
  ret i32 %12, !dbg !7003
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7004 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7011, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7012, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.value(metadata i32 undef, metadata !7013, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.value(metadata i32 %2, metadata !7014, metadata !DIExpression()), !dbg !7015
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7016
  %5 = load i32, i32* %4, align 4, !dbg !7016
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7017
  %7 = or i32 %6, %5, !dbg !7018
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7019
  store i32 %7, i32* %8, align 4, !dbg !7020
  ret void, !dbg !7021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7022 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7026, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7027, metadata !DIExpression()), !dbg !7028
  %3 = zext i8 %0 to i32, !dbg !7029
  %4 = icmp ugt i8 %0, 7, !dbg !7031
  br i1 %4, label %6, label %5, !dbg !7032

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7033
  br label %6, !dbg !7034

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7028
  ret i32 %7, !dbg !7035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7040, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7041, metadata !DIExpression()), !dbg !7042
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7043
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7044
  %4 = load i32, i32* %3, align 4, !dbg !7044
  %5 = and i32 %4, -32, !dbg !7045
  %6 = or i32 %5, %0, !dbg !7046
  %7 = or i32 %6, 16, !dbg !7046
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7047
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7048
  %9 = load i32, i32* %8, align 4, !dbg !7048
  %10 = or i32 %9, 1, !dbg !7049
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7050
  ret void, !dbg !7051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7055, metadata !DIExpression()), !dbg !7056
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7057
  ret void, !dbg !7058
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7063, metadata !DIExpression()), !dbg !7064
  %2 = icmp ult i32 %0, 33, !dbg !7065
  br i1 %2, label %11, label %3, !dbg !7067

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7068
  br i1 %4, label %11, label %5, !dbg !7070

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7071
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7072, !range !3970
  %8 = mul nsw i32 %7, -2, !dbg !7073
  %9 = add nsw i32 %8, 62, !dbg !7073
  %10 = and i32 %9, 62, !dbg !7074
  br label %11, !dbg !7075

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7064
  ret i32 %12, !dbg !7076
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7077 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7081, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i8 %1, metadata !7082, metadata !DIExpression()), !dbg !7083
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7084
  ret void, !dbg !7086
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7087 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7091, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i8 %1, metadata !7092, metadata !DIExpression()), !dbg !7098
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7099
  call void @llvm.dbg.value(metadata i8 %3, metadata !7093, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7098
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7100
  call void @llvm.dbg.value(metadata i32 %4, metadata !7093, metadata !DIExpression()), !dbg !7098
  %5 = icmp ne i32 %4, -22, !dbg !7101
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7102
  call void @llvm.dbg.value(metadata i32 %4, metadata !7094, metadata !DIExpression()), !dbg !7103
  br i1 %7, label %8, label %12, !dbg !7102

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7094, metadata !DIExpression()), !dbg !7103
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7104
  %10 = add i32 %9, 1, !dbg !7107
  call void @llvm.dbg.value(metadata i32 %10, metadata !7094, metadata !DIExpression()), !dbg !7103
  %11 = icmp eq i32 %10, 8, !dbg !7108
  br i1 %11, label %12, label %8, !dbg !7109, !llvm.loop !7110

12:                                               ; preds = %8, %2
  ret void, !dbg !7112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7116, metadata !DIExpression()), !dbg !7117
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7118
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7119
  ret void, !dbg !7120
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7121 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7126
  %2 = icmp ugt i32 %1, 8, !dbg !7128
  br i1 %2, label %14, label %3, !dbg !7129

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7130
  call void @llvm.dbg.value(metadata i32 0, metadata !7125, metadata !DIExpression()), !dbg !7131
  %4 = icmp eq i32 %1, 0, !dbg !7132
  br i1 %4, label %12, label %5, !dbg !7135

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7135

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7125, metadata !DIExpression()), !dbg !7131
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7136
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7138
  %10 = add nuw i32 %8, 1, !dbg !7139
  call void @llvm.dbg.value(metadata i32 %10, metadata !7125, metadata !DIExpression()), !dbg !7131
  %11 = icmp eq i32 %10, %1, !dbg !7132
  br i1 %11, label %12, label %7, !dbg !7135, !llvm.loop !7140

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7142
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7143
  tail call void @arm_core_mpu_enable() #26, !dbg !7144
  br label %14, !dbg !7145

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7131
  ret i32 %15, !dbg !7146
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7147 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7154, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %1, metadata !7155, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %0, metadata !7156, metadata !DIExpression()), !dbg !7157
  %3 = load i8, i8* %1, align 1, !dbg !7158
  %4 = icmp eq i8 %3, 0, !dbg !7159
  br i1 %4, label %13, label %5, !dbg !7160

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7154, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %8, metadata !7155, metadata !DIExpression()), !dbg !7157
  store i8 %6, i8* %7, align 1, !dbg !7161
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7163
  call void @llvm.dbg.value(metadata i8* %9, metadata !7154, metadata !DIExpression()), !dbg !7157
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7164
  call void @llvm.dbg.value(metadata i8* %10, metadata !7155, metadata !DIExpression()), !dbg !7157
  %11 = load i8, i8* %10, align 1, !dbg !7158
  %12 = icmp eq i8 %11, 0, !dbg !7159
  br i1 %12, label %13, label %5, !dbg !7160, !llvm.loop !7165

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7167
  ret i8* %0, !dbg !7168
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7169 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7173, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i8* %1, metadata !7174, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %2, metadata !7175, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i8* %0, metadata !7176, metadata !DIExpression()), !dbg !7177
  %4 = icmp eq i32 %2, 0, !dbg !7178
  br i1 %4, label %22, label %5, !dbg !7179

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7173, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %7, metadata !7175, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i8* %8, metadata !7174, metadata !DIExpression()), !dbg !7177
  %9 = load i8, i8* %8, align 1, !dbg !7180
  %10 = icmp eq i8 %9, 0, !dbg !7181
  br i1 %10, label %16, label %11, !dbg !7182

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7183
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7185
  call void @llvm.dbg.value(metadata i8* %12, metadata !7174, metadata !DIExpression()), !dbg !7177
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7186
  call void @llvm.dbg.value(metadata i8* %13, metadata !7173, metadata !DIExpression()), !dbg !7177
  %14 = add i32 %7, -1, !dbg !7187
  call void @llvm.dbg.value(metadata i32 %14, metadata !7175, metadata !DIExpression()), !dbg !7177
  %15 = icmp eq i32 %14, 0, !dbg !7178
  br i1 %15, label %22, label %5, !dbg !7179, !llvm.loop !7188

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7173, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %18, metadata !7175, metadata !DIExpression()), !dbg !7177
  store i8 0, i8* %17, align 1, !dbg !7190
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7192
  call void @llvm.dbg.value(metadata i8* %19, metadata !7173, metadata !DIExpression()), !dbg !7177
  %20 = add i32 %18, -1, !dbg !7193
  call void @llvm.dbg.value(metadata i32 %20, metadata !7175, metadata !DIExpression()), !dbg !7177
  %21 = icmp eq i32 %20, 0, !dbg !7194
  br i1 %21, label %22, label %16, !dbg !7195, !llvm.loop !7196

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7198
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7199 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7203, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i32 %1, metadata !7204, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i32 %1, metadata !7205, metadata !DIExpression()), !dbg !7206
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7207

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7203, metadata !DIExpression()), !dbg !7206
  %6 = load i8, i8* %5, align 1, !dbg !7208
  %7 = icmp eq i8 %6, %3, !dbg !7209
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7210
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7211
  call void @llvm.dbg.value(metadata i8* %10, metadata !7203, metadata !DIExpression()), !dbg !7206
  br i1 %9, label %11, label %4, !dbg !7210, !llvm.loop !7213

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7215
  ret i8* %12, !dbg !7216
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7219, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i32 %1, metadata !7220, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i8* null, metadata !7221, metadata !DIExpression()), !dbg !7222
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7223

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7222
  call void @llvm.dbg.value(metadata i8* %6, metadata !7221, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i8* %5, metadata !7219, metadata !DIExpression()), !dbg !7222
  %7 = load i8, i8* %5, align 1, !dbg !7224
  %8 = icmp eq i8 %7, %3, !dbg !7227
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7228
  call void @llvm.dbg.value(metadata i8* %9, metadata !7221, metadata !DIExpression()), !dbg !7222
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7229
  call void @llvm.dbg.value(metadata i8* %10, metadata !7219, metadata !DIExpression()), !dbg !7222
  %11 = icmp eq i8 %7, 0, !dbg !7230
  br i1 %11, label %12, label %4, !dbg !7230, !llvm.loop !7231

12:                                               ; preds = %4
  ret i8* %9, !dbg !7233
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7234 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7238, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata i32 0, metadata !7239, metadata !DIExpression()), !dbg !7240
  %2 = load i8, i8* %0, align 1, !dbg !7241
  %3 = icmp eq i8 %2, 0, !dbg !7242
  br i1 %3, label %11, label %4, !dbg !7243

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7239, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata i8* %6, metadata !7238, metadata !DIExpression()), !dbg !7240
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7244
  call void @llvm.dbg.value(metadata i8* %7, metadata !7238, metadata !DIExpression()), !dbg !7240
  %8 = add i32 %5, 1, !dbg !7246
  call void @llvm.dbg.value(metadata i32 %8, metadata !7239, metadata !DIExpression()), !dbg !7240
  %9 = load i8, i8* %7, align 1, !dbg !7241
  %10 = icmp eq i8 %9, 0, !dbg !7242
  br i1 %10, label %11, label %4, !dbg !7243, !llvm.loop !7247

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7240
  ret i32 %12, !dbg !7249
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7250 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7254, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i32 %1, metadata !7255, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i32 0, metadata !7256, metadata !DIExpression()), !dbg !7257
  %3 = load i8, i8* %0, align 1, !dbg !7258
  %4 = icmp ne i8 %3, 0, !dbg !7259
  %5 = icmp ne i32 %1, 0, !dbg !7260
  %6 = and i1 %4, %5, !dbg !7260
  br i1 %6, label %7, label %16, !dbg !7261

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7256, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i8* %9, metadata !7254, metadata !DIExpression()), !dbg !7257
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7262
  call void @llvm.dbg.value(metadata i8* %10, metadata !7254, metadata !DIExpression()), !dbg !7257
  %11 = add nuw i32 %8, 1, !dbg !7264
  call void @llvm.dbg.value(metadata i32 %11, metadata !7256, metadata !DIExpression()), !dbg !7257
  %12 = load i8, i8* %10, align 1, !dbg !7258
  %13 = icmp ne i8 %12, 0, !dbg !7259
  %14 = icmp ult i32 %11, %1, !dbg !7260
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7260
  br i1 %15, label %7, label %16, !dbg !7261, !llvm.loop !7265

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7257
  ret i32 %17, !dbg !7267
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7268 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7272, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8* %1, metadata !7273, metadata !DIExpression()), !dbg !7274
  %3 = load i8, i8* %0, align 1, !dbg !7275
  %4 = load i8, i8* %1, align 1, !dbg !7276
  %5 = icmp ne i8 %3, %4, !dbg !7277
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7278
  br i1 %7, label %18, label %8, !dbg !7278

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7273, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8* %10, metadata !7272, metadata !DIExpression()), !dbg !7274
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7279
  call void @llvm.dbg.value(metadata i8* %11, metadata !7272, metadata !DIExpression()), !dbg !7274
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7281
  call void @llvm.dbg.value(metadata i8* %12, metadata !7273, metadata !DIExpression()), !dbg !7274
  %13 = load i8, i8* %11, align 1, !dbg !7275
  %14 = load i8, i8* %12, align 1, !dbg !7276
  %15 = icmp ne i8 %13, %14, !dbg !7277
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7278
  br i1 %17, label %18, label %8, !dbg !7278, !llvm.loop !7282

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7275
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7276
  %21 = zext i8 %19 to i32, !dbg !7285
  %22 = zext i8 %20 to i32, !dbg !7286
  %23 = sub nsw i32 %21, %22, !dbg !7287
  ret i32 %23, !dbg !7288
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7289 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7293, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %1, metadata !7294, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %2, metadata !7295, metadata !DIExpression()), !dbg !7296
  %4 = icmp eq i32 %2, 0, !dbg !7297
  br i1 %4, label %23, label %5, !dbg !7297

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7295, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %7, metadata !7294, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %8, metadata !7293, metadata !DIExpression()), !dbg !7296
  %9 = load i8, i8* %8, align 1, !dbg !7298
  %10 = load i8, i8* %7, align 1, !dbg !7299
  %11 = icmp ne i8 %9, %10, !dbg !7300
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7301
  br i1 %13, label %19, label %14, !dbg !7301

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7302
  call void @llvm.dbg.value(metadata i8* %15, metadata !7293, metadata !DIExpression()), !dbg !7296
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7304
  call void @llvm.dbg.value(metadata i8* %16, metadata !7294, metadata !DIExpression()), !dbg !7296
  %17 = add i32 %6, -1, !dbg !7305
  call void @llvm.dbg.value(metadata i32 %17, metadata !7295, metadata !DIExpression()), !dbg !7296
  %18 = icmp eq i32 %17, 0, !dbg !7297
  br i1 %18, label %23, label %5, !dbg !7297, !llvm.loop !7306

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7309
  %21 = zext i8 %10 to i32, !dbg !7310
  %22 = sub nsw i32 %20, %21, !dbg !7311
  br label %23, !dbg !7312

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7312
  ret i32 %24, !dbg !7313
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7314 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7319, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %1, metadata !7320, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8** %2, metadata !7321, metadata !DIExpression()), !dbg !7324
  %4 = icmp eq i8* %0, null, !dbg !7325
  br i1 %4, label %5, label %7, !dbg !7325

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7326
  br label %7, !dbg !7325

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7325
  call void @llvm.dbg.value(metadata i8* %8, metadata !7322, metadata !DIExpression()), !dbg !7324
  %9 = load i8, i8* %8, align 1, !dbg !7327
  %10 = icmp eq i8 %9, 0, !dbg !7327
  br i1 %10, label %33, label %11, !dbg !7328

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7322, metadata !DIExpression()), !dbg !7324
  %14 = zext i8 %12 to i32, !dbg !7327
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7329
  %16 = icmp eq i8* %15, null, !dbg !7328
  br i1 %16, label %21, label %17, !dbg !7330

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7331
  call void @llvm.dbg.value(metadata i8* %18, metadata !7322, metadata !DIExpression()), !dbg !7324
  %19 = load i8, i8* %18, align 1, !dbg !7327
  %20 = icmp eq i8 %19, 0, !dbg !7327
  br i1 %20, label %33, label %11, !dbg !7328, !llvm.loop !7333

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7323, metadata !DIExpression()), !dbg !7324
  %24 = zext i8 %22 to i32, !dbg !7335
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7336
  %26 = icmp eq i8* %25, null, !dbg !7337
  br i1 %26, label %27, label %31, !dbg !7338

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7339
  call void @llvm.dbg.value(metadata i8* %28, metadata !7323, metadata !DIExpression()), !dbg !7324
  %29 = load i8, i8* %28, align 1, !dbg !7335
  %30 = icmp eq i8 %29, 0, !dbg !7335
  br i1 %30, label %33, label %21, !dbg !7341, !llvm.loop !7342

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7344
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7347
  br label %33, !dbg !7348

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7324
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7324
  store i8* %34, i8** %2, align 4, !dbg !7324
  ret i8* %35, !dbg !7349
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7350 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i8* %1, metadata !7353, metadata !DIExpression()), !dbg !7354
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7355
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7356
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7357
  ret i8* %0, !dbg !7358
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7359 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7361, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %1, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7363, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %0, metadata !7364, metadata !DIExpression()), !dbg !7366
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7367
  call void @llvm.dbg.value(metadata i32 %4, metadata !7365, metadata !DIExpression()), !dbg !7366
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7368
  call void @llvm.dbg.value(metadata i8* %5, metadata !7361, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %1, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7363, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7363, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7366
  %6 = icmp eq i32 %2, 0, !dbg !7369
  br i1 %6, label %18, label %7, !dbg !7370

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7371
  call void @llvm.dbg.value(metadata i8* %9, metadata !7361, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %10, metadata !7362, metadata !DIExpression()), !dbg !7366
  %12 = load i8, i8* %10, align 1, !dbg !7372
  %13 = icmp eq i8 %12, 0, !dbg !7373
  br i1 %13, label %18, label %14, !dbg !7374

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7375
  call void @llvm.dbg.value(metadata i8* %15, metadata !7362, metadata !DIExpression()), !dbg !7366
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7377
  call void @llvm.dbg.value(metadata i8* %16, metadata !7361, metadata !DIExpression()), !dbg !7366
  store i8 %12, i8* %9, align 1, !dbg !7378
  call void @llvm.dbg.value(metadata i32 %11, metadata !7363, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %11, metadata !7363, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7366
  %17 = icmp eq i32 %11, 0, !dbg !7369
  br i1 %17, label %18, label %7, !dbg !7370, !llvm.loop !7379

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7366
  store i8 0, i8* %19, align 1, !dbg !7381
  ret i8* %0, !dbg !7382
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7383 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7387, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i8* %1, metadata !7388, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 %2, metadata !7389, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i8* %0, metadata !7390, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i8* %1, metadata !7391, metadata !DIExpression()), !dbg !7392
  %4 = icmp eq i32 %2, 0, !dbg !7393
  br i1 %4, label %31, label %5, !dbg !7395

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7391, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i8* %0, metadata !7390, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 %2, metadata !7389, metadata !DIExpression()), !dbg !7392
  %6 = add i32 %2, -1, !dbg !7396
  call void @llvm.dbg.value(metadata i32 %6, metadata !7389, metadata !DIExpression()), !dbg !7392
  %7 = icmp eq i32 %6, 0, !dbg !7397
  br i1 %7, label %23, label %8, !dbg !7398

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7399
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7399
  br label %11, !dbg !7399

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7391, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i8* %14, metadata !7390, metadata !DIExpression()), !dbg !7392
  %15 = load i8, i8* %14, align 1, !dbg !7400
  %16 = load i8, i8* %13, align 1, !dbg !7401
  %17 = icmp eq i8 %15, %16, !dbg !7402
  br i1 %17, label %18, label %23, !dbg !7399

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7403
  call void @llvm.dbg.value(metadata i8* %19, metadata !7390, metadata !DIExpression()), !dbg !7392
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7405
  call void @llvm.dbg.value(metadata i8* %20, metadata !7391, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 %12, metadata !7389, metadata !DIExpression()), !dbg !7392
  %21 = add i32 %12, -1, !dbg !7396
  call void @llvm.dbg.value(metadata i32 %21, metadata !7389, metadata !DIExpression()), !dbg !7392
  %22 = icmp eq i32 %21, 0, !dbg !7397
  br i1 %22, label %23, label %11, !dbg !7398, !llvm.loop !7406

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7392
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7392
  %26 = load i8, i8* %24, align 1, !dbg !7408
  %27 = zext i8 %26 to i32, !dbg !7408
  %28 = load i8, i8* %25, align 1, !dbg !7409
  %29 = zext i8 %28 to i32, !dbg !7409
  %30 = sub nsw i32 %27, %29, !dbg !7410
  br label %31, !dbg !7411

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7392
  ret i32 %32, !dbg !7412
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7413 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7417, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %1, metadata !7418, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i32 %2, metadata !7419, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %0, metadata !7420, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %1, metadata !7421, metadata !DIExpression()), !dbg !7422
  %4 = ptrtoint i8* %0 to i32, !dbg !7423
  %5 = ptrtoint i8* %1 to i32, !dbg !7423
  %6 = sub i32 %4, %5, !dbg !7423
  %7 = icmp ult i32 %6, %2, !dbg !7425
  br i1 %7, label %10, label %8, !dbg !7426

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7421, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %0, metadata !7420, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i32 %2, metadata !7419, metadata !DIExpression()), !dbg !7422
  %9 = icmp eq i32 %2, 0, !dbg !7427
  br i1 %9, label %26, label %17, !dbg !7429

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7419, metadata !DIExpression()), !dbg !7422
  %12 = add i32 %11, -1, !dbg !7430
  call void @llvm.dbg.value(metadata i32 %12, metadata !7419, metadata !DIExpression()), !dbg !7422
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7433
  %14 = load i8, i8* %13, align 1, !dbg !7433
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7434
  store i8 %14, i8* %15, align 1, !dbg !7435
  %16 = icmp eq i32 %12, 0, !dbg !7436
  br i1 %16, label %26, label %10, !dbg !7437, !llvm.loop !7438

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7421, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %19, metadata !7420, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i32 %20, metadata !7419, metadata !DIExpression()), !dbg !7422
  %21 = load i8, i8* %18, align 1, !dbg !7440
  store i8 %21, i8* %19, align 1, !dbg !7442
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7443
  call void @llvm.dbg.value(metadata i8* %22, metadata !7420, metadata !DIExpression()), !dbg !7422
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7444
  call void @llvm.dbg.value(metadata i8* %23, metadata !7421, metadata !DIExpression()), !dbg !7422
  %24 = add i32 %20, -1, !dbg !7445
  call void @llvm.dbg.value(metadata i32 %24, metadata !7419, metadata !DIExpression()), !dbg !7422
  %25 = icmp eq i32 %24, 0, !dbg !7427
  br i1 %25, label %26, label %17, !dbg !7429, !llvm.loop !7446

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7448
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7449 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7455, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i8* %1, metadata !7456, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 %2, metadata !7457, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i8* %0, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i8* %1, metadata !7459, metadata !DIExpression()), !dbg !7460
  %4 = icmp eq i32 %2, 0, !dbg !7461
  br i1 %4, label %14, label %5, !dbg !7462

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7459, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i8* %7, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 %8, metadata !7457, metadata !DIExpression()), !dbg !7460
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7463
  call void @llvm.dbg.value(metadata i8* %9, metadata !7459, metadata !DIExpression()), !dbg !7460
  %10 = load i8, i8* %6, align 1, !dbg !7465
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7466
  call void @llvm.dbg.value(metadata i8* %11, metadata !7458, metadata !DIExpression()), !dbg !7460
  store i8 %10, i8* %7, align 1, !dbg !7467
  %12 = add i32 %8, -1, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %12, metadata !7457, metadata !DIExpression()), !dbg !7460
  %13 = icmp eq i32 %12, 0, !dbg !7461
  br i1 %13, label %14, label %5, !dbg !7462, !llvm.loop !7469

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7471
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7472 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7476, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i32 %1, metadata !7477, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i32 %2, metadata !7478, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i8* %0, metadata !7479, metadata !DIExpression()), !dbg !7481
  %4 = trunc i32 %1 to i8, !dbg !7482
  call void @llvm.dbg.value(metadata i8 %4, metadata !7480, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i32 %2, metadata !7478, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i8* %0, metadata !7479, metadata !DIExpression()), !dbg !7481
  %5 = icmp eq i32 %2, 0, !dbg !7483
  br i1 %5, label %12, label %6, !dbg !7484

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7478, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i8* %8, metadata !7479, metadata !DIExpression()), !dbg !7481
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7485
  call void @llvm.dbg.value(metadata i8* %9, metadata !7479, metadata !DIExpression()), !dbg !7481
  store i8 %4, i8* %8, align 1, !dbg !7487
  %10 = add i32 %7, -1, !dbg !7488
  call void @llvm.dbg.value(metadata i32 %10, metadata !7478, metadata !DIExpression()), !dbg !7481
  %11 = icmp eq i32 %10, 0, !dbg !7483
  br i1 %11, label %12, label %6, !dbg !7484, !llvm.loop !7489

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7491
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7492 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7496, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i32 %1, metadata !7497, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i32 %2, metadata !7498, metadata !DIExpression()), !dbg !7502
  %4 = icmp eq i32 %2, 0, !dbg !7503
  br i1 %4, label %17, label %5, !dbg !7504

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7505

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7506
  call void @llvm.dbg.value(metadata i8* %9, metadata !7499, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 %8, metadata !7498, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i8* %9, metadata !7499, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7506
  %10 = load i8, i8* %9, align 1, !dbg !7507
  %11 = icmp eq i8 %10, %6, !dbg !7510
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7511
  call void @llvm.dbg.value(metadata i8* %12, metadata !7499, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 %13, metadata !7498, metadata !DIExpression()), !dbg !7502
  br i1 %15, label %16, label %7, !dbg !7511, !llvm.loop !7512

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7514

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7502
  ret i8* %19, !dbg !7515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7516 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7518, metadata !DIExpression()), !dbg !7519
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7520
  ret void, !dbg !7521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7524, metadata !DIExpression()), !dbg !7525
  ret i32 -1, !dbg !7526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7531, metadata !DIExpression()), !dbg !7533
  call void @llvm.dbg.value(metadata i32* %1, metadata !7532, metadata !DIExpression()), !dbg !7533
  %3 = ptrtoint i32* %1 to i32, !dbg !7534
  %4 = and i32 %3, -2, !dbg !7534
  %5 = icmp eq i32 %4, 2, !dbg !7534
  br i1 %5, label %6, label %9, !dbg !7534

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7535
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7535
  br label %9, !dbg !7536

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7536
  ret i32 %10, !dbg !7537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7540, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.value(metadata i32* %1, metadata !7541, metadata !DIExpression()), !dbg !7542
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7543
  ret i32 %3, !dbg !7544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7548, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.value(metadata i32* %1, metadata !7549, metadata !DIExpression()), !dbg !7550
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7551, !srcloc !7553
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7554
  ret i32 %3, !dbg !7555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7561, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32* %1, metadata !7562, metadata !DIExpression()), !dbg !7565
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7566
  call void @llvm.dbg.value(metadata i32 %3, metadata !7563, metadata !DIExpression()), !dbg !7565
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7567
  call void @llvm.dbg.value(metadata i32 %4, metadata !7564, metadata !DIExpression()), !dbg !7565
  %5 = icmp ne i32 %3, %4, !dbg !7568
  %6 = sext i1 %5 to i32, !dbg !7569
  ret i32 %6, !dbg !7570
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7575, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32 %1, metadata !7576, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32 %2, metadata !7577, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32* %3, metadata !7578, metadata !DIExpression()), !dbg !7579
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7580
  ret i32 %5, !dbg !7581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7582 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7584, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 %1, metadata !7585, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 %2, metadata !7586, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32* %3, metadata !7587, metadata !DIExpression()), !dbg !7588
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7589, !srcloc !7591
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7592
  ret i32 %5, !dbg !7593
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7596, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 %1, metadata !7597, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 %2, metadata !7598, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32* %3, metadata !7599, metadata !DIExpression()), !dbg !7604
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7605
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7607
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7607
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7607
  br i1 %11, label %33, label %12, !dbg !7607

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7604
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7604
  call void @llvm.dbg.value(metadata i8* %14, metadata !7602, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 %13, metadata !7600, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 %1, metadata !7601, metadata !DIExpression()), !dbg !7604
  br label %15, !dbg !7608

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7610
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7604
  call void @llvm.dbg.value(metadata i8* %17, metadata !7602, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 %16, metadata !7601, metadata !DIExpression()), !dbg !7604
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7611
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7614
  call void @llvm.dbg.value(metadata i8* %19, metadata !7602, metadata !DIExpression()), !dbg !7604
  %20 = load i8, i8* %17, align 1, !dbg !7615
  %21 = zext i8 %20 to i32, !dbg !7616
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7611
  %23 = icmp eq i32 %22, -1, !dbg !7617
  br i1 %23, label %30, label %24, !dbg !7618

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7619
  call void @llvm.dbg.value(metadata i32 %25, metadata !7601, metadata !DIExpression()), !dbg !7604
  %26 = icmp eq i32 %25, 0, !dbg !7620
  br i1 %26, label %27, label %15, !dbg !7621, !llvm.loop !7622

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7624
  call void @llvm.dbg.value(metadata i32 %28, metadata !7600, metadata !DIExpression()), !dbg !7604
  %29 = icmp eq i32 %28, 0, !dbg !7625
  br i1 %29, label %30, label %12, !dbg !7626, !llvm.loop !7627

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7604
  call void @llvm.dbg.value(metadata i32 %31, metadata !7600, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.label(metadata !7603), !dbg !7630
  %32 = sub i32 %2, %31, !dbg !7631
  br label %33, !dbg !7632

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7604
  ret i32 %34, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7634 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7638, metadata !DIExpression()), !dbg !7639
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7640
  %3 = icmp eq i32 %2, -1, !dbg !7642
  br i1 %3, label %8, label %4, !dbg !7643

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7644
  %6 = icmp eq i32 %5, -1, !dbg !7645
  %7 = sext i1 %6 to i32, !dbg !7644
  br label %8, !dbg !7646

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7639
  ret i32 %9, !dbg !7647
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7648 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7650, metadata !DIExpression()), !dbg !7651
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7652
  ret void, !dbg !7653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7658, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7660, metadata !DIExpression()), !dbg !7664
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7665
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7665
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7665
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7661, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i32 %0, metadata !7663, metadata !DIExpression()), !dbg !7664
  %7 = icmp slt i32 %0, %1, !dbg !7666
  br i1 %7, label %8, label %22, !dbg !7669

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7663, metadata !DIExpression()), !dbg !7664
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7670
  %11 = icmp eq i32 %10, 0, !dbg !7670
  br i1 %11, label %19, label %12, !dbg !7673

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7674
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7676
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7676
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7678
  br i1 %15, label %19, label %16, !dbg !7679

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7680
  %18 = load i8*, i8** %17, align 4, !dbg !7680
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !7681
  br label %19, !dbg !7682

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7683
  call void @llvm.dbg.value(metadata i32 %20, metadata !7663, metadata !DIExpression()), !dbg !7664
  %21 = icmp eq i32 %20, %1, !dbg !7666
  br i1 %21, label %22, label %8, !dbg !7669, !llvm.loop !7684

22:                                               ; preds = %19, %3
  ret void, !dbg !7686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7689, metadata !DIExpression()), !dbg !7690
  %2 = shl nuw i32 1, %0, !dbg !7691
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7694
  ret i32 %3, !dbg !7695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7700, metadata !DIExpression()), !dbg !7701
  %2 = shl nuw i32 1, %0, !dbg !7702
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7705
  ret void, !dbg !7706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7710, metadata !DIExpression()), !dbg !7711
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7712
  ret void, !dbg !7713
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7716, metadata !DIExpression()), !dbg !7717
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7718
  %3 = and i32 %2, %0, !dbg !7718
  %4 = icmp eq i32 %3, %0, !dbg !7719
  %5 = zext i1 %4 to i32, !dbg !7719
  ret i32 %5, !dbg !7720
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7721 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7723, metadata !DIExpression()), !dbg !7724
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7725
  ret void, !dbg !7726
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7729, metadata !DIExpression()), !dbg !7730
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7731
  ret void, !dbg !7732
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7733 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7735, metadata !DIExpression()), !dbg !7736
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7737
  ret void, !dbg !7738
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7741, metadata !DIExpression()), !dbg !7742
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !7743
  ret void, !dbg !7744
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7747, metadata !DIExpression()), !dbg !7748
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !7749
  ret void, !dbg !7750
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7753, metadata !DIExpression()), !dbg !7754
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !7755
  ret void, !dbg !7756
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7759, metadata !DIExpression()), !dbg !7760
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !7761
  ret void, !dbg !7762
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7765, metadata !DIExpression()), !dbg !7766
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !7767
  ret void, !dbg !7768
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7769 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7771, metadata !DIExpression()), !dbg !7772
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !7773
  ret void, !dbg !7774
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7775 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7777, metadata !DIExpression()), !dbg !7778
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !7779
  ret void, !dbg !7780
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7783, metadata !DIExpression()), !dbg !7784
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !7785
  ret i32 0, !dbg !7786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !699 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !703, metadata !DIExpression()), !dbg !7787
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !7788
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !7790
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !7792
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !7794
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !7796
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !7798
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !7800
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !7802
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !7804
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !7806
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !7808
  ret void, !dbg !7810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7813, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i32 0, metadata !7814, metadata !DIExpression()), !dbg !7815
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7816
  %3 = load i32, i32* %2, align 4, !dbg !7816
  call void @llvm.dbg.value(metadata i32 %3, metadata !7814, metadata !DIExpression()), !dbg !7815
  %4 = shl nuw i32 1, %0, !dbg !7817
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !7818
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !7819
  ret void, !dbg !7820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7823, metadata !DIExpression()), !dbg !7824
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7825
  %3 = or i32 %2, %0, !dbg !7825
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7825
  ret void, !dbg !7826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7829, metadata !DIExpression()), !dbg !7830
  %2 = icmp slt i32 %0, 32, !dbg !7831
  br i1 %2, label %3, label %5, !dbg !7833

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7834
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !7836
  br label %5, !dbg !7837

5:                                                ; preds = %1, %3
  ret void, !dbg !7838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7841, metadata !DIExpression()), !dbg !7842
  %2 = xor i32 %0, -1, !dbg !7843
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7843
  %4 = and i32 %3, %2, !dbg !7843
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7849, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %1, metadata !7850, metadata !DIExpression()), !dbg !7851
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7852

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7853
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !7855
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !7856
  br label %11, !dbg !7857

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7858
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !7859
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !7860
  br label %11, !dbg !7861

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7862
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !7863
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !7864
  br label %11, !dbg !7865

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7866
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !7867
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !7868
  br label %11, !dbg !7869

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7873, metadata !DIExpression()), !dbg !7874
  %2 = xor i32 %0, -1, !dbg !7875
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7875
  %4 = and i32 %3, %2, !dbg !7875
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7875
  ret void, !dbg !7876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7879, metadata !DIExpression()), !dbg !7880
  %2 = xor i32 %0, -1, !dbg !7881
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7881
  %4 = and i32 %3, %2, !dbg !7881
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7881
  ret void, !dbg !7882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7885, metadata !DIExpression()), !dbg !7886
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7887
  %3 = or i32 %2, %0, !dbg !7887
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7887
  ret void, !dbg !7888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7891, metadata !DIExpression()), !dbg !7892
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7893
  %3 = or i32 %2, %0, !dbg !7893
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7893
  ret void, !dbg !7894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !7895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7899, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7900, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i8* %2, metadata !7901, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7902, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7904, metadata !DIExpression()), !dbg !7905
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7906
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7906
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7908
  br i1 %6, label %7, label %9, !dbg !7909

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7910
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7911
  store i8* %2, i8** %8, align 4, !dbg !7912
  br label %9, !dbg !7913

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7905
  ret i32 %10, !dbg !7914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7917, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7918, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7919, metadata !DIExpression()), !dbg !7920
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7921
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7922
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7923
  store i8* null, i8** %3, align 4, !dbg !7924
  ret void, !dbg !7925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7928, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.value(metadata i8* %1, metadata !7929, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.value(metadata i8* %1, metadata !7930, metadata !DIExpression()), !dbg !7933
  %3 = bitcast i8* %1 to i32*, !dbg !7934
  %4 = load i32, i32* %3, align 4, !dbg !7934
  %5 = add i32 %4, -169, !dbg !7934
  %6 = icmp ult i32 %5, -121, !dbg !7934
  br i1 %6, label %15, label %7, !dbg !7936

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7937
  %9 = inttoptr i32 %8 to i32*, !dbg !7938
  call void @llvm.dbg.value(metadata i32* %9, metadata !7931, metadata !DIExpression()), !dbg !7933
  %10 = load volatile i32, i32* %9, align 4, !dbg !7939
  call void @llvm.dbg.value(metadata i32 %10, metadata !7932, metadata !DIExpression()), !dbg !7933
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7940
  %12 = bitcast i8* %11 to i32*, !dbg !7940
  %13 = load i32, i32* %12, align 4, !dbg !7940
  %14 = or i32 %13, %10, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %14, metadata !7932, metadata !DIExpression()), !dbg !7933
  store volatile i32 %14, i32* %9, align 4, !dbg !7942
  br label %15, !dbg !7943

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7933
  ret i32 %16, !dbg !7944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7947, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* %1, metadata !7948, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* %1, metadata !7949, metadata !DIExpression()), !dbg !7952
  %3 = bitcast i8* %1 to i32*, !dbg !7953
  %4 = load i32, i32* %3, align 4, !dbg !7953
  %5 = add i32 %4, -169, !dbg !7953
  %6 = icmp ult i32 %5, -121, !dbg !7953
  br i1 %6, label %16, label %7, !dbg !7955

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7956
  %9 = inttoptr i32 %8 to i32*, !dbg !7957
  call void @llvm.dbg.value(metadata i32* %9, metadata !7950, metadata !DIExpression()), !dbg !7952
  %10 = load volatile i32, i32* %9, align 4, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %10, metadata !7951, metadata !DIExpression()), !dbg !7952
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7959
  %12 = bitcast i8* %11 to i32*, !dbg !7959
  %13 = load i32, i32* %12, align 4, !dbg !7959
  %14 = xor i32 %13, -1, !dbg !7960
  %15 = and i32 %10, %14, !dbg !7961
  call void @llvm.dbg.value(metadata i32 %15, metadata !7951, metadata !DIExpression()), !dbg !7952
  store volatile i32 %15, i32* %9, align 4, !dbg !7962
  br label %16, !dbg !7963

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7952
  ret i32 %17, !dbg !7964
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7965 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7967, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i8* %1, metadata !7968, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32* %2, metadata !7969, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i8* %1, metadata !7970, metadata !DIExpression()), !dbg !7975
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %4, metadata !7971, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 undef, metadata !7972, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 undef, metadata !7973, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 %4, metadata !7974, metadata !DIExpression()), !dbg !7975
  %5 = bitcast i8* %1 to i32*, !dbg !7977
  %6 = load i32, i32* %5, align 4, !dbg !7977
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !7978

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !7979
  call void @llvm.dbg.value(metadata i32 %8, metadata !7972, metadata !DIExpression()), !dbg !7975
  br label %16, !dbg !7980

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %10, metadata !7973, metadata !DIExpression()), !dbg !7975
  br label %16, !dbg !7983

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !7984
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #26, !dbg !7985
  br label %16, !dbg !7986

14:                                               ; preds = %3
  br label %16, !dbg !7987

15:                                               ; preds = %3
  br label %16, !dbg !7988

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !7989
  br label %18, !dbg !7990

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !7975
  ret i32 %19, !dbg !7990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !7991 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7993, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %1, metadata !7994, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %2, metadata !7995, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %1, metadata !7996, metadata !DIExpression()), !dbg !8001
  %4 = bitcast i8* %1 to i32*, !dbg !8002
  %5 = load i32, i32* %4, align 4, !dbg !8002
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8003
  call void @llvm.dbg.value(metadata i32 %6, metadata !8000, metadata !DIExpression()), !dbg !8001
  %7 = icmp slt i32 %6, 0, !dbg !8004
  br i1 %7, label %22, label %8, !dbg !8006

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7996, metadata !DIExpression()), !dbg !8001
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8007
  %10 = bitcast i8* %9 to i32*, !dbg !8007
  %11 = load i32, i32* %10, align 4, !dbg !8007
  %12 = lshr i32 %11, 16, !dbg !8007
  %13 = and i32 %12, 7, !dbg !8007
  %14 = lshr i32 %11, 8, !dbg !8008
  %15 = and i32 %14, 31, !dbg !8008
  %16 = shl i32 %13, %15, !dbg !8009
  call void @llvm.dbg.value(metadata i32 %16, metadata !7999, metadata !DIExpression()), !dbg !8001
  %17 = and i32 %11, 255, !dbg !8010
  %18 = or i32 %17, 1073887232, !dbg !8011
  %19 = inttoptr i32 %18 to i32*, !dbg !8012
  call void @llvm.dbg.value(metadata i32* %19, metadata !7997, metadata !DIExpression()), !dbg !8001
  %20 = load volatile i32, i32* %19, align 4, !dbg !8013
  call void @llvm.dbg.value(metadata i32 %20, metadata !7998, metadata !DIExpression()), !dbg !8001
  %21 = or i32 %16, %20, !dbg !8014
  call void @llvm.dbg.value(metadata i32 %21, metadata !7998, metadata !DIExpression()), !dbg !8001
  store volatile i32 %21, i32* %19, align 4, !dbg !8015
  br label %22, !dbg !8016

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8001
  ret i32 %23, !dbg !8017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8022, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 0, metadata !8023, metadata !DIExpression()), !dbg !8024
  %2 = add i32 %0, -1, !dbg !8025
  %3 = icmp ult i32 %2, 6, !dbg !8025
  br i1 %3, label %4, label %7, !dbg !8025

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8025
  %6 = load i32, i32* %5, align 4, !dbg !8025
  call void @llvm.dbg.value(metadata i32 %6, metadata !8023, metadata !DIExpression()), !dbg !8024
  br label %7, !dbg !8026

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8024
  ret i32 %8, !dbg !8027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8032, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata i32 %1, metadata !8033, metadata !DIExpression()), !dbg !8034
  %3 = udiv i32 %0, %1, !dbg !8035
  ret i32 %3, !dbg !8036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #11 !dbg !8037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8041, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 16, metadata !8042, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 336, metadata !8043, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 4, metadata !8044, metadata !DIExpression()), !dbg !8045
  %2 = mul i32 %0, 336, !dbg !8046
  %3 = lshr i32 %2, 6, !dbg !8047
  ret i32 %3, !dbg !8048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8049 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8051, metadata !DIExpression()), !dbg !8054
  tail call void @config_enable_default_clocks() #27, !dbg !8055
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8056
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8056
  %4 = lshr i32 %3, 4, !dbg !8056
  %5 = and i32 %4, 15, !dbg !8056
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8056
  %7 = load i8, i8* %6, align 1, !dbg !8056
  %8 = zext i8 %7 to i32, !dbg !8056
  %9 = lshr i32 %2, %8, !dbg !8056
  call void @llvm.dbg.value(metadata i32 %9, metadata !8052, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8053, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8054
  %10 = icmp ult i32 %9, 84000000, !dbg !8057
  br i1 %10, label %11, label %13, !dbg !8059

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8060
  br label %13, !dbg !8062

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8063
  tail call fastcc void @set_up_plls() #26, !dbg !8064
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8065
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8068
  br label %14, !dbg !8069

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8070
  %16 = icmp eq i32 %15, 8, !dbg !8071
  br i1 %16, label %17, label %14, !dbg !8069, !llvm.loop !8072

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8074
  br i1 %18, label %19, label %21, !dbg !8076

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8077
  br label %21, !dbg !8079

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8080
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8081
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8082
  ret i32 0, !dbg !8083
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8084 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8086
  %2 = and i32 %1, 240, !dbg !8086
  ret i32 %2, !dbg !8087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8088 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8089
  %2 = icmp eq i32 %1, 1, !dbg !8093
  br i1 %2, label %7, label %3, !dbg !8094

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8095
  br label %4, !dbg !8097

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8098
  %6 = icmp eq i32 %5, 1, !dbg !8099
  br i1 %6, label %7, label %4, !dbg !8097, !llvm.loop !8100

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8102
  br label %8, !dbg !8105

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8106
  %10 = icmp eq i32 %9, 1, !dbg !8107
  br i1 %10, label %11, label %8, !dbg !8105, !llvm.loop !8108

11:                                               ; preds = %8
  ret void, !dbg !8110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8111 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8112
  %2 = icmp eq i32 %1, 8, !dbg !8114
  br i1 %2, label %3, label %4, !dbg !8115

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8116
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8118
  br label %4, !dbg !8119

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8120
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8121
  %6 = and i32 %5, -196609, !dbg !8121
  %7 = or i32 %6, 65536, !dbg !8121
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8121
  tail call void @config_pll_sysclock() #27, !dbg !8122
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8123
  br label %8, !dbg !8124

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8125
  %10 = icmp eq i32 %9, 1, !dbg !8126
  br i1 %10, label %11, label %8, !dbg !8124, !llvm.loop !8127

11:                                               ; preds = %8
  ret void, !dbg !8129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8130 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8132, metadata !DIExpression()), !dbg !8133
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8134
  %2 = and i32 %1, -241, !dbg !8134
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8134
  ret void, !dbg !8135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8138, metadata !DIExpression()), !dbg !8139
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8140
  %3 = and i32 %2, -4, !dbg !8140
  %4 = or i32 %3, %0, !dbg !8140
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8140
  ret void, !dbg !8141
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8142 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8143
  %2 = and i32 %1, 12, !dbg !8143
  ret i32 %2, !dbg !8144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8145 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8147, metadata !DIExpression()), !dbg !8148
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8149
  %2 = and i32 %1, -7169, !dbg !8149
  %3 = or i32 %2, 4096, !dbg !8149
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8149
  ret void, !dbg !8150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8151 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8153, metadata !DIExpression()), !dbg !8154
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8155
  %2 = and i32 %1, -57345, !dbg !8155
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8155
  ret void, !dbg !8156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8157 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8158
  %2 = icmp eq i32 %1, 1, !dbg !8160
  br i1 %2, label %7, label %3, !dbg !8161

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8162
  br label %4, !dbg !8164

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8165
  %6 = icmp eq i32 %5, 1, !dbg !8166
  br i1 %6, label %7, label %4, !dbg !8164, !llvm.loop !8167

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8169
  br label %8, !dbg !8170

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8171
  %10 = icmp eq i32 %9, 0, !dbg !8172
  br i1 %10, label %11, label %8, !dbg !8170, !llvm.loop !8173

11:                                               ; preds = %8
  ret void, !dbg !8175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8176 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8177
  %2 = and i32 %1, -16777217, !dbg !8177
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8177
  ret void, !dbg !8178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8179 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8180
  %2 = or i32 %1, 16777216, !dbg !8180
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8180
  ret void, !dbg !8181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8182 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8183
  %2 = lshr i32 %1, 25, !dbg !8184
  %3 = and i32 %2, 1, !dbg !8184
  ret i32 %3, !dbg !8185
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8186 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8187
  %2 = lshr i32 %1, 1, !dbg !8188
  %3 = and i32 %2, 1, !dbg !8188
  ret i32 %3, !dbg !8189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8190 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8191
  %2 = or i32 %1, 1, !dbg !8191
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8191
  ret void, !dbg !8192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8193 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8194
  %2 = or i32 %1, 1, !dbg !8194
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8194
  ret void, !dbg !8195
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8196 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8197
  %2 = lshr i32 %1, 1, !dbg !8198
  %3 = and i32 %2, 1, !dbg !8198
  ret i32 %3, !dbg !8199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8200 {
  ret i32 16000000, !dbg !8202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8205 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8206
  ret void, !dbg !8207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8208 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8212, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 16, metadata !8213, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 336, metadata !8214, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 65536, metadata !8215, metadata !DIExpression()), !dbg !8216
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8217
  %2 = and i32 %1, -4227072, !dbg !8217
  %3 = or i32 %2, 21520, !dbg !8217
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8217
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8218
  %5 = and i32 %4, -196609, !dbg !8218
  %6 = or i32 %5, 65536, !dbg !8218
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8218
  ret void, !dbg !8219
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8220 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8221
  ret void, !dbg !8222
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8223 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8226, metadata !DIExpression()), !dbg !8228
  %2 = bitcast i32* %1 to i8*, !dbg !8229
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8229
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8227, metadata !DIExpression()), !dbg !8230
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8231
  %4 = or i32 %3, 268435456, !dbg !8231
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8231
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8232
  %6 = and i32 %5, 268435456, !dbg !8232
  store volatile i32 %6, i32* %1, align 4, !dbg !8233
  %7 = load volatile i32, i32* %1, align 4, !dbg !8234
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8235
  ret void, !dbg !8235
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8236 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8238, metadata !DIExpression()), !dbg !8239
  %2 = tail call fastcc zeroext i1 @device_is_ready.42() #26, !dbg !8240
  br i1 %2, label %3, label %4, !dbg !8242

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8243
  br label %4, !dbg !8244

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8239
  ret i32 %5, !dbg !8245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.42() unnamed_addr #1 !dbg !8246 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8250, metadata !DIExpression()), !dbg !8251
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8252, !srcloc !8254
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.45() #26, !dbg !8255
  ret i1 %1, !dbg !8256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8257 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8258
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8259
  ret void, !dbg !8260
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8263, metadata !DIExpression()), !dbg !8264
  %2 = icmp eq i32 %0, 10, !dbg !8265
  br i1 %2, label %3, label %4, !dbg !8267

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext 13) #26, !dbg !8268
  br label %4, !dbg !8270

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8271
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext %5) #26, !dbg !8272
  ret i32 %0, !dbg !8273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.43(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8274 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8276, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.value(metadata i8 %0, metadata !8277, metadata !DIExpression()), !dbg !8278
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8279, !srcloc !8281
  tail call fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) #26, !dbg !8282
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8284 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8286, metadata !DIExpression()), !dbg !8289
  call void @llvm.dbg.value(metadata i8 %0, metadata !8287, metadata !DIExpression()), !dbg !8289
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8290
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8288, metadata !DIExpression()), !dbg !8289
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8291
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8291
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !8292
  ret void, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.45() unnamed_addr #1 !dbg !8294 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8296, metadata !DIExpression()), !dbg !8297
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !8298
  ret i1 %1, !dbg !8299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8300 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8347, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8348, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8349, metadata !DIExpression()), !dbg !8350
  ret void, !dbg !8351
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8352 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8354, metadata !DIExpression()), !dbg !8359
  call void @llvm.dbg.value(metadata i8 %1, metadata !8355, metadata !DIExpression()), !dbg !8359
  call void @llvm.dbg.value(metadata i32 %2, metadata !8356, metadata !DIExpression()), !dbg !8359
  %5 = bitcast i32* %4 to i8*, !dbg !8360
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8360
  call void @llvm.dbg.value(metadata i32* %4, metadata !8358, metadata !DIExpression(DW_OP_deref)), !dbg !8359
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8361
  call void @llvm.dbg.value(metadata i32 %6, metadata !8357, metadata !DIExpression()), !dbg !8359
  %7 = icmp eq i32 %6, 0, !dbg !8362
  br i1 %7, label %8, label %31, !dbg !8364

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8357, metadata !DIExpression()), !dbg !8359
  %9 = and i32 %2, 131072, !dbg !8365
  %10 = icmp eq i32 %9, 0, !dbg !8367
  br i1 %10, label %28, label %11, !dbg !8368

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8369
  %13 = icmp eq i32 %12, 0, !dbg !8372
  br i1 %13, label %18, label %14, !dbg !8373

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8374
  %16 = shl nuw i32 1, %15, !dbg !8374
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8376
  br label %25, !dbg !8377

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8378
  %20 = icmp eq i32 %19, 0, !dbg !8380
  %21 = zext i8 %1 to i32, !dbg !8359
  br i1 %20, label %25, label %22, !dbg !8381

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8382
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8384
  br label %25, !dbg !8385

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8386
  %27 = load i32, i32* %4, align 4, !dbg !8387
  call void @llvm.dbg.value(metadata i32 %30, metadata !8358, metadata !DIExpression()), !dbg !8359
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8388
  br label %31, !dbg !8389

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8386
  %30 = load i32, i32* %4, align 4, !dbg !8387
  call void @llvm.dbg.value(metadata i32 %30, metadata !8358, metadata !DIExpression()), !dbg !8359
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8388
  call void @llvm.dbg.value(metadata i32 0, metadata !8357, metadata !DIExpression()), !dbg !8359
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8390
  ret i32 %6, !dbg !8390
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8395, metadata !DIExpression()), !dbg !8400
  call void @llvm.dbg.value(metadata i32* %1, metadata !8396, metadata !DIExpression()), !dbg !8400
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8401
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8401
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8401
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8397, metadata !DIExpression()), !dbg !8400
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8402
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8402
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8402
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8399, metadata !DIExpression()), !dbg !8400
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8403
  store i32 %9, i32* %1, align 4, !dbg !8404
  ret i32 0, !dbg !8405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8408, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.value(metadata i32 %1, metadata !8409, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.value(metadata i32 %2, metadata !8410, metadata !DIExpression()), !dbg !8414
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8415
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8415
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8415
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8411, metadata !DIExpression()), !dbg !8414
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8416
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8416
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8416
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8412, metadata !DIExpression()), !dbg !8414
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8417
  call void @llvm.dbg.value(metadata i32 %10, metadata !8413, metadata !DIExpression()), !dbg !8414
  %11 = xor i32 %1, -1, !dbg !8418
  %12 = and i32 %10, %11, !dbg !8419
  %13 = and i32 %2, %1, !dbg !8420
  %14 = or i32 %12, %13, !dbg !8421
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8422
  ret i32 0, !dbg !8423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8426, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.value(metadata i32 %1, metadata !8427, metadata !DIExpression()), !dbg !8430
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8431
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8431
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8431
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8428, metadata !DIExpression()), !dbg !8430
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8432
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8432
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8432
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8429, metadata !DIExpression()), !dbg !8430
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8433
  store volatile i32 %1, i32* %9, align 4, !dbg !8433
  ret i32 0, !dbg !8434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8437, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i32 %1, metadata !8438, metadata !DIExpression()), !dbg !8441
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8442
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8442
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8442
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8439, metadata !DIExpression()), !dbg !8441
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8443
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8443
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8443
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8440, metadata !DIExpression()), !dbg !8441
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8444
  ret i32 0, !dbg !8445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8448, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata i32 %1, metadata !8449, metadata !DIExpression()), !dbg !8452
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8453
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8453
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8453
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8450, metadata !DIExpression()), !dbg !8452
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8454
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8454
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8454
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8451, metadata !DIExpression()), !dbg !8452
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8455
  %10 = load volatile i32, i32* %9, align 4, !dbg !8455
  %11 = xor i32 %10, %1, !dbg !8455
  store volatile i32 %11, i32* %9, align 4, !dbg !8455
  ret i32 0, !dbg !8456
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8457 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8459, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i8 %1, metadata !8460, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 %2, metadata !8461, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 %3, metadata !8462, metadata !DIExpression()), !dbg !8469
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8470
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8470
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8470
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8463, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i8* undef, metadata !8464, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 0, metadata !8466, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 0, metadata !8467, metadata !DIExpression()), !dbg !8469
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8471

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8472
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8476
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8477
  %12 = load i32, i32* %11, align 4, !dbg !8477
  %13 = icmp eq i32 %10, %12, !dbg !8478
  br i1 %13, label %14, label %29, !dbg !8479

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8480
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8482
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8483
  br label %29, !dbg !8484

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8485
  %17 = load i8*, i8** %16, align 4, !dbg !8485
  call void @llvm.dbg.value(metadata i8* %17, metadata !8464, metadata !DIExpression()), !dbg !8469
  %18 = zext i8 %1 to i32, !dbg !8486
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8488
  %20 = icmp eq i32 %19, 0, !dbg !8489
  br i1 %20, label %21, label %29, !dbg !8490

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8491
  %23 = load i32, i32* %22, align 4, !dbg !8491
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8492
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8493

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8466, metadata !DIExpression()), !dbg !8469
  br label %27, !dbg !8494

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8466, metadata !DIExpression()), !dbg !8469
  br label %27, !dbg !8496

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8466, metadata !DIExpression()), !dbg !8469
  br label %27, !dbg !8497

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8469
  call void @llvm.dbg.value(metadata i32 %28, metadata !8466, metadata !DIExpression()), !dbg !8469
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8498
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8499
  br label %29, !dbg !8499

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8469
  call void @llvm.dbg.value(metadata i32 %30, metadata !8467, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.label(metadata !8468), !dbg !8500
  ret i32 %30, !dbg !8501
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8504, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8505, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i1 %2, metadata !8506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8508
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8509
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8509
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8509
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8507, metadata !DIExpression()), !dbg !8508
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8510
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8511
  ret i32 %8, !dbg !8512
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8513 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8519, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8520, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i1 %2, metadata !8521, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8522
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8523
  br i1 %4, label %10, label %5, !dbg !8525

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8526
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8529
  %8 = or i1 %7, %2, !dbg !8530
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8530
  br i1 %2, label %11, label %13, !dbg !8530

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8531

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8532
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8535
  br label %13, !dbg !8536

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8522
  ret i32 %14, !dbg !8537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8538 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8542, metadata !DIExpression()), !dbg !8543
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8544
  %3 = icmp eq %struct._snode* %2, null, !dbg !8544
  ret i1 %3, !dbg !8544
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8545 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8549, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8550, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8551, metadata !DIExpression()), !dbg !8553
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8554
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8552, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8551, metadata !DIExpression()), !dbg !8553
  %4 = icmp eq %struct._snode* %3, null, !dbg !8556
  br i1 %4, label %15, label %5, !dbg !8554

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8552, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8551, metadata !DIExpression()), !dbg !8553
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8558
  br i1 %6, label %9, label %11, !dbg !8561

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8552, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8551, metadata !DIExpression()), !dbg !8553
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8558
  br i1 %8, label %9, label %11, !dbg !8561, !llvm.loop !8562

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8563
  br label %15, !dbg !8563

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8552, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8551, metadata !DIExpression()), !dbg !8553
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8556
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8552, metadata !DIExpression()), !dbg !8553
  %14 = icmp eq %struct._snode* %13, null, !dbg !8556
  br i1 %14, label %15, label %7, !dbg !8554, !llvm.loop !8562

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8566 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8570, metadata !DIExpression()), !dbg !8572
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8571, metadata !DIExpression()), !dbg !8572
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8573
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8573
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8573
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8574
  %5 = icmp eq %struct._snode* %4, null, !dbg !8574
  br i1 %5, label %6, label %8, !dbg !8573

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8576
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8576
  br label %8, !dbg !8576

8:                                                ; preds = %6, %2
  ret void, !dbg !8573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8578 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8582, metadata !DIExpression()), !dbg !8583
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8584
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8584
  ret %struct._snode* %3, !dbg !8585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8586 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8591, metadata !DIExpression()), !dbg !8592
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8593
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8594
  ret void, !dbg !8595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8596 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8598, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8599, metadata !DIExpression()), !dbg !8600
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8601
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8602
  ret void, !dbg !8603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8604 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8606, metadata !DIExpression()), !dbg !8607
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8608
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8608
  ret %struct._snode* %3, !dbg !8609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8610 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8612, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8613, metadata !DIExpression()), !dbg !8614
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8615
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8616
  ret void, !dbg !8617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8618 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8622, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8623, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8624, metadata !DIExpression()), !dbg !8625
  %4 = icmp eq %struct._snode* %1, null, !dbg !8626
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8628
  br i1 %4, label %6, label %11, !dbg !8629

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8630
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8632
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8632
  br i1 %8, label %9, label %15, !dbg !8630

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8634
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8634
  br label %15, !dbg !8634

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8636
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8638
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8638
  br i1 %13, label %14, label %15, !dbg !8636

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8640
  br label %15, !dbg !8640

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8629
  ret void, !dbg !8629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8642 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8646, metadata !DIExpression()), !dbg !8647
  %2 = icmp eq %struct._snode* %0, null, !dbg !8648
  br i1 %2, label %5, label %3, !dbg !8648

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8648
  br label %5, !dbg !8648

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8648
  ret %struct._snode* %6, !dbg !8648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8649 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8651, metadata !DIExpression()), !dbg !8652
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8653
  ret %struct._snode* %2, !dbg !8653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8654 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8656, metadata !DIExpression()), !dbg !8657
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8658
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8658
  ret %struct._snode* %3, !dbg !8659
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8662, metadata !DIExpression()), !dbg !8665
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8666, !range !8667
  call void @llvm.dbg.value(metadata i32 %2, metadata !8663, metadata !DIExpression()), !dbg !8665
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8668
  call void @llvm.dbg.value(metadata i32 %3, metadata !8664, metadata !DIExpression()), !dbg !8665
  ret i32 %3, !dbg !8669
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8672, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i8* %1, metadata !8673, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i8* %1, metadata !8674, metadata !DIExpression()), !dbg !8675
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8676
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8676
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8677
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8677
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8677
  %8 = shl nuw i32 1, %0, !dbg !8678
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8679
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8681 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8685, metadata !DIExpression()), !dbg !8691
  call void @llvm.dbg.value(metadata i32 %1, metadata !8686, metadata !DIExpression()), !dbg !8691
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8687, metadata !DIExpression()), !dbg !8691
  %4 = bitcast i64* %3 to i8*, !dbg !8692
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8692
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8689, metadata !DIExpression()), !dbg !8691
  store i64 70368744177732, i64* %3, align 8, !dbg !8693
  call void @llvm.dbg.value(metadata i64* %3, metadata !8689, metadata !DIExpression(DW_OP_deref)), !dbg !8691
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %5, metadata !8690, metadata !DIExpression()), !dbg !8691
  %6 = icmp eq i32 %5, 0, !dbg !8695
  br i1 %6, label %7, label %8, !dbg !8697

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8698
  br label %8, !dbg !8699

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8700
  ret void, !dbg !8700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8701 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8703, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %0, metadata !8704, metadata !DIExpression()), !dbg !8706
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8707
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8705, metadata !DIExpression()), !dbg !8706
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8708
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8708
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !8709
  ret i32 %5, !dbg !8710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8713, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 %1, metadata !8714, metadata !DIExpression()), !dbg !8716
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8717
  call void @llvm.dbg.value(metadata i32 %3, metadata !8715, metadata !DIExpression()), !dbg !8716
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8718
  ret void, !dbg !8719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8724, metadata !DIExpression()), !dbg !8725
  %2 = sdiv i32 %0, 4, !dbg !8726
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8727
  %6 = add nsw i32 %5, 16, !dbg !8728
  %7 = shl i32 15, %6, !dbg !8729
  %8 = or i32 %7, %2, !dbg !8730
  ret i32 %8, !dbg !8731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8736, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 %1, metadata !8737, metadata !DIExpression()), !dbg !8738
  %3 = and i32 %1, 255, !dbg !8739
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8739
  %5 = load volatile i32, i32* %4, align 4, !dbg !8739
  %6 = lshr i32 %1, 16, !dbg !8739
  %7 = xor i32 %6, -1, !dbg !8739
  %8 = and i32 %5, %7, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %6, metadata !8740, metadata !DIExpression()) #25, !dbg !8744
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !8746, !srcloc !8747
  call void @llvm.dbg.value(metadata i32 %9, metadata !8743, metadata !DIExpression()) #25, !dbg !8744
  call void @llvm.dbg.value(metadata i32 %9, metadata !8748, metadata !DIExpression()) #25, !dbg !8753
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !8755, !range !3970
  %11 = shl i32 %0, %10, !dbg !8739
  %12 = or i32 %11, %8, !dbg !8739
  store volatile i32 %12, i32* %4, align 4, !dbg !8739
  ret void, !dbg !8756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8757 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8761, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8762, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 %2, metadata !8763, metadata !DIExpression()), !dbg !8766
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8767
  %5 = icmp eq %struct._snode* %4, null, !dbg !8767
  br i1 %5, label %21, label %6, !dbg !8767

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !8769
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8765, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8764, metadata !DIExpression()), !dbg !8766
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8770
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8770
  %11 = load i32, i32* %10, align 4, !dbg !8770
  %12 = and i32 %11, %2, !dbg !8774
  %13 = icmp eq i32 %12, 0, !dbg !8774
  br i1 %13, label %19, label %14, !dbg !8775

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8764, metadata !DIExpression()), !dbg !8766
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8776
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8776
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8776
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !8778
  br label %19, !dbg !8779

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8764, metadata !DIExpression()), !dbg !8766
  %20 = icmp eq %struct._snode* %8, null, !dbg !8780
  br i1 %20, label %21, label %6, !dbg !8780

21:                                               ; preds = %19, %3
  ret void, !dbg !8781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8784, metadata !DIExpression()), !dbg !8785
  %2 = and i32 %0, 255, !dbg !8786
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8786
  %4 = load volatile i32, i32* %3, align 4, !dbg !8786
  %5 = lshr i32 %0, 16, !dbg !8786
  %6 = and i32 %4, %5, !dbg !8786
  call void @llvm.dbg.value(metadata i32 %5, metadata !8740, metadata !DIExpression()) #25, !dbg !8787
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !8789, !srcloc !8747
  call void @llvm.dbg.value(metadata i32 %7, metadata !8743, metadata !DIExpression()) #25, !dbg !8787
  call void @llvm.dbg.value(metadata i32 %7, metadata !8748, metadata !DIExpression()) #25, !dbg !8790
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !8792, !range !3970
  %9 = lshr i32 %6, %8, !dbg !8793
  ret i32 %9, !dbg !8794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8795 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8800, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 %1, metadata !8801, metadata !DIExpression()), !dbg !8802
  %3 = shl i32 %1, 16, !dbg !8803
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8803
  store volatile i32 %3, i32* %4, align 4, !dbg !8803
  ret void, !dbg !8804
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8805 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8809, metadata !DIExpression()), !dbg !8810
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8811
  %3 = load volatile i32, i32* %2, align 4, !dbg !8811
  ret i32 %3, !dbg !8812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8813 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 %1, metadata !8816, metadata !DIExpression()), !dbg !8817
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8818
  store volatile i32 %1, i32* %3, align 4, !dbg !8818
  ret void, !dbg !8819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8820 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8822, metadata !DIExpression()), !dbg !8823
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8824
  %3 = load volatile i32, i32* %2, align 4, !dbg !8824
  ret i32 %3, !dbg !8825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8830, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata i32* %1, metadata !8831, metadata !DIExpression()), !dbg !8832
  %3 = and i32 %0, 131072, !dbg !8833
  %4 = icmp eq i32 %3, 0, !dbg !8835
  br i1 %4, label %22, label %5, !dbg !8836

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8837
  %6 = and i32 %0, 2, !dbg !8839
  %7 = icmp eq i32 %6, 0, !dbg !8841
  br i1 %7, label %11, label %8, !dbg !8842

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8843
  %10 = icmp eq i32 %9, 0, !dbg !8843
  br i1 %10, label %33, label %11, !dbg !8846

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8847
  store i32 %12, i32* %1, align 4, !dbg !8847
  %13 = and i32 %0, 16, !dbg !8848
  %14 = icmp eq i32 %13, 0, !dbg !8850
  br i1 %14, label %17, label %15, !dbg !8851

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8852
  br label %31, !dbg !8854

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8855
  %19 = icmp eq i32 %18, 0, !dbg !8857
  br i1 %19, label %33, label %20, !dbg !8858

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8859
  br label %31, !dbg !8861

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8862
  %24 = icmp eq i32 %23, 0, !dbg !8864
  br i1 %24, label %31, label %25, !dbg !8865

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8866
  %27 = icmp eq i32 %26, 0, !dbg !8869
  br i1 %27, label %28, label %31, !dbg !8870

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8871
  br label %33, !dbg !8872

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8832
  ret i32 %34, !dbg !8872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8877, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %1, metadata !8878, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %2, metadata !8879, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %3, metadata !8880, metadata !DIExpression()), !dbg !8888
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8889
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8889
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8889
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8881, metadata !DIExpression()), !dbg !8888
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8890
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8890
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8890
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8882, metadata !DIExpression()), !dbg !8888
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !8891
  call void @llvm.dbg.value(metadata i32 %11, metadata !8883, metadata !DIExpression()), !dbg !8888
  %12 = and i32 %2, 48, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %12, metadata !8884, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %2, metadata !8885, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %2, metadata !8886, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %2, metadata !8887, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8888
  %13 = lshr i32 %2, 6, !dbg !8893
  %14 = and i32 %13, 1, !dbg !8893
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !8894
  %15 = lshr i32 %2, 7, !dbg !8895
  %16 = and i32 %15, 3, !dbg !8895
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !8896
  %17 = lshr i32 %2, 9, !dbg !8897
  %18 = and i32 %17, 3, !dbg !8897
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !8898
  %19 = icmp eq i32 %12, 32, !dbg !8899
  br i1 %19, label %20, label %24, !dbg !8901

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8902
  br i1 %21, label %22, label %23, !dbg !8905

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8906
  br label %24, !dbg !8908

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8909
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8911
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !8912
  ret void, !dbg !8913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !8914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8916, metadata !DIExpression()), !dbg !8918
  %2 = shl nuw i32 1, %0, !dbg !8919
  call void @llvm.dbg.value(metadata i32 %2, metadata !8917, metadata !DIExpression()), !dbg !8918
  ret i32 %2, !dbg !8920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !8921 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8925, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32 %1, metadata !8926, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32 %2, metadata !8927, metadata !DIExpression()), !dbg !8928
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8929
  %5 = load volatile i32, i32* %4, align 4, !dbg !8929
  %6 = xor i32 %1, -1, !dbg !8929
  %7 = and i32 %5, %6, !dbg !8929
  %8 = mul i32 %2, %1, !dbg !8929
  %9 = or i32 %7, %8, !dbg !8929
  store volatile i32 %9, i32* %4, align 4, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8931 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8933, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %1, metadata !8934, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8935, metadata !DIExpression()), !dbg !8936
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8937
  %5 = load volatile i32, i32* %4, align 4, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()) #25, !dbg !8938
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !8940, !srcloc !8747
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()) #25, !dbg !8938
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()) #25, !dbg !8941
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !8943, !range !3970
  %8 = shl nuw nsw i32 %7, 1, !dbg !8937
  %9 = shl i32 3, %8, !dbg !8937
  %10 = xor i32 %9, -1, !dbg !8937
  %11 = and i32 %5, %10, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()) #25, !dbg !8944
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()) #25, !dbg !8944
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()) #25, !dbg !8946
  %12 = shl i32 %2, %8, !dbg !8937
  %13 = or i32 %11, %12, !dbg !8937
  store volatile i32 %13, i32* %4, align 4, !dbg !8937
  ret void, !dbg !8948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8949 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8951, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata i32 %1, metadata !8952, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata i32 %2, metadata !8953, metadata !DIExpression()), !dbg !8954
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !8955
  %5 = load volatile i32, i32* %4, align 4, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()) #25, !dbg !8956
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !8958, !srcloc !8747
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()) #25, !dbg !8956
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()) #25, !dbg !8959
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !8961, !range !3970
  %8 = shl nuw nsw i32 %7, 1, !dbg !8955
  %9 = shl i32 3, %8, !dbg !8955
  %10 = xor i32 %9, -1, !dbg !8955
  %11 = and i32 %5, %10, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()) #25, !dbg !8962
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()) #25, !dbg !8962
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()) #25, !dbg !8964
  %12 = shl i32 %2, %8, !dbg !8955
  %13 = or i32 %11, %12, !dbg !8955
  store volatile i32 %13, i32* %4, align 4, !dbg !8955
  ret void, !dbg !8966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8967 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8969, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.value(metadata i32 %1, metadata !8970, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.value(metadata i32 %2, metadata !8971, metadata !DIExpression()), !dbg !8972
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !8973
  %5 = load volatile i32, i32* %4, align 4, !dbg !8973
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()) #25, !dbg !8974
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !8976, !srcloc !8747
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()) #25, !dbg !8974
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()) #25, !dbg !8977
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !8979, !range !3970
  %8 = shl nuw nsw i32 %7, 2, !dbg !8973
  %9 = shl i32 15, %8, !dbg !8973
  %10 = xor i32 %9, -1, !dbg !8973
  %11 = and i32 %5, %10, !dbg !8973
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()) #25, !dbg !8980
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()) #25, !dbg !8980
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()) #25, !dbg !8982
  %12 = shl i32 %2, %8, !dbg !8973
  %13 = or i32 %11, %12, !dbg !8973
  store volatile i32 %13, i32* %4, align 4, !dbg !8973
  ret void, !dbg !8984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8985 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8987, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32 %1, metadata !8988, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32 %2, metadata !8989, metadata !DIExpression()), !dbg !8990
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !8991
  %5 = load volatile i32, i32* %4, align 4, !dbg !8991
  %6 = lshr i32 %1, 8, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %6, metadata !8740, metadata !DIExpression()) #25, !dbg !8992
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !8994, !srcloc !8747
  call void @llvm.dbg.value(metadata i32 %7, metadata !8743, metadata !DIExpression()) #25, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %7, metadata !8748, metadata !DIExpression()) #25, !dbg !8995
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !8997, !range !3970
  %9 = shl nuw nsw i32 %8, 2, !dbg !8991
  %10 = shl i32 15, %9, !dbg !8991
  %11 = xor i32 %10, -1, !dbg !8991
  %12 = and i32 %5, %11, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %6, metadata !8740, metadata !DIExpression()) #25, !dbg !8998
  call void @llvm.dbg.value(metadata i32 %7, metadata !8743, metadata !DIExpression()) #25, !dbg !8998
  call void @llvm.dbg.value(metadata i32 %7, metadata !8748, metadata !DIExpression()) #25, !dbg !9000
  %13 = shl i32 %2, %9, !dbg !8991
  %14 = or i32 %12, %13, !dbg !8991
  store volatile i32 %14, i32* %4, align 4, !dbg !8991
  ret void, !dbg !9002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9003 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9005, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 %1, metadata !9006, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 %2, metadata !9007, metadata !DIExpression()), !dbg !9008
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9009
  %5 = load volatile i32, i32* %4, align 4, !dbg !9009
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()) #25, !dbg !9010
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9012, !srcloc !8747
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()) #25, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()) #25, !dbg !9013
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9015, !range !3970
  %8 = shl nuw nsw i32 %7, 1, !dbg !9009
  %9 = shl i32 3, %8, !dbg !9009
  %10 = xor i32 %9, -1, !dbg !9009
  %11 = and i32 %5, %10, !dbg !9009
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()) #25, !dbg !9016
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()) #25, !dbg !9016
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()) #25, !dbg !9018
  %12 = shl i32 %2, %8, !dbg !9009
  %13 = or i32 %11, %12, !dbg !9009
  store volatile i32 %13, i32* %4, align 4, !dbg !9009
  ret void, !dbg !9020
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9023, metadata !DIExpression()), !dbg !9026
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9027
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9027
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9027
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9024, metadata !DIExpression()), !dbg !9026
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9028
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9029
  %6 = tail call fastcc zeroext i1 @device_is_ready.53() #26, !dbg !9030
  br i1 %6, label %7, label %11, !dbg !9032

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9033
  call void @llvm.dbg.value(metadata i32 %8, metadata !9025, metadata !DIExpression()), !dbg !9026
  %9 = icmp slt i32 %8, 0, !dbg !9034
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9036
  br label %11, !dbg !9036

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9026
  ret i32 %12, !dbg !9037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.53() unnamed_addr #1 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9042, metadata !DIExpression()), !dbg !9043
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9044, !srcloc !9046
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.54() #26, !dbg !9047
  ret i1 %1, !dbg !9048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9049 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9053, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8 1, metadata !9054, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9055, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i32 0, metadata !9056, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9057, metadata !DIExpression()), !dbg !9058
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9059
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9059
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9059
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9055, metadata !DIExpression()), !dbg !9058
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9060
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9063
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9064
  call void @llvm.dbg.value(metadata i32 %7, metadata !9056, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i32 %7, metadata !9056, metadata !DIExpression()), !dbg !9058
  ret i32 %7, !dbg !9065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.54() unnamed_addr #1 !dbg !9066 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9068, metadata !DIExpression()), !dbg !9069
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !9070
  ret i1 %1, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9072 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9076, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 %1, metadata !9077, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 %2, metadata !9078, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 %3, metadata !9079, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 0, metadata !9080, metadata !DIExpression()), !dbg !9084
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9085
  %5 = icmp eq i32 %3, 17, !dbg !9086
  br i1 %5, label %6, label %14, !dbg !9087

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9088
  call void @llvm.dbg.value(metadata i32 %7, metadata !9081, metadata !DIExpression()), !dbg !9089
  %8 = icmp eq i32 %7, 0, !dbg !9090
  %9 = shl nuw i32 1, %1, !dbg !9092
  br i1 %8, label %12, label %10, !dbg !9093

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9094
  br label %14, !dbg !9096

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9097
  br label %14, !dbg !9100

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9101
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9104, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.value(metadata i8* %1, metadata !9105, metadata !DIExpression()), !dbg !9108
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9109
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9109
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9109
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9106, metadata !DIExpression()), !dbg !9108
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9110
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9110
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9112
  %9 = icmp eq i32 %8, 0, !dbg !9112
  br i1 %9, label %12, label %10, !dbg !9113

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9114
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9116
  br label %12, !dbg !9117

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9118
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9120
  %15 = icmp eq i32 %14, 0, !dbg !9120
  br i1 %15, label %19, label %16, !dbg !9121

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9122
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9123
  store i8 %18, i8* %1, align 1, !dbg !9124
  br label %19, !dbg !9125

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9108
  ret i32 %20, !dbg !9126
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9127 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9129, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata i8 %1, metadata !9130, metadata !DIExpression()), !dbg !9133
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9134
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9134
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9134
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9131, metadata !DIExpression()), !dbg !9133
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9135

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9136
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9139
  %10 = icmp eq i32 %9, 0, !dbg !9139
  br i1 %10, label %18, label %11, !dbg !9140

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9141, !srcloc !9148
  call void @llvm.dbg.value(metadata i32 undef, metadata !9144, metadata !DIExpression()) #25, !dbg !9149
  call void @llvm.dbg.value(metadata i32 undef, metadata !9145, metadata !DIExpression()) #25, !dbg !9149
  call void @llvm.dbg.value(metadata i32 undef, metadata !9132, metadata !DIExpression()), !dbg !9133
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9150
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9152
  %15 = icmp eq i32 %14, 0, !dbg !9152
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9141
  br i1 %15, label %17, label %19, !dbg !9153

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9144, metadata !DIExpression()) #25, !dbg !9149
  call void @llvm.dbg.value(metadata i32 %16, metadata !9132, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata i32 undef, metadata !9154, metadata !DIExpression()) #25, !dbg !9157
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9159, !srcloc !9160
  br label %18, !dbg !9161

18:                                               ; preds = %17, %7
  br label %7, !dbg !9136, !llvm.loop !9162

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9141
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9164
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9165
  call void @llvm.dbg.value(metadata i32 %20, metadata !9154, metadata !DIExpression()) #25, !dbg !9166
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9168, !srcloc !9160
  ret void, !dbg !9169
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9170 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9172, metadata !DIExpression()), !dbg !9175
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9176
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9176
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9176
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9173, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata i32 0, metadata !9174, metadata !DIExpression()), !dbg !9175
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9177
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9177
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9179
  %8 = icmp ne i32 %7, 0, !dbg !9179
  %9 = zext i1 %8 to i32, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %9, metadata !9174, metadata !DIExpression()), !dbg !9175
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9181
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9183
  %12 = icmp eq i32 %11, 0, !dbg !9183
  %13 = or i32 %9, 2, !dbg !9184
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9184
  call void @llvm.dbg.value(metadata i32 %14, metadata !9174, metadata !DIExpression()), !dbg !9175
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9185
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9187
  %17 = icmp eq i32 %16, 0, !dbg !9187
  %18 = or i32 %14, 4, !dbg !9188
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9188
  call void @llvm.dbg.value(metadata i32 %19, metadata !9174, metadata !DIExpression()), !dbg !9175
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9189
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9191
  %22 = icmp eq i32 %21, 0, !dbg !9191
  %23 = or i32 %19, 8, !dbg !9192
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9192
  call void @llvm.dbg.value(metadata i32 %24, metadata !9174, metadata !DIExpression()), !dbg !9175
  %25 = and i32 %24, 8, !dbg !9193
  %26 = icmp eq i32 %25, 0, !dbg !9193
  br i1 %26, label %29, label %27, !dbg !9195

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9196
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9198
  br label %29, !dbg !9199

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9200
  %31 = icmp eq i32 %30, 0, !dbg !9200
  br i1 %31, label %34, label %32, !dbg !9202

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9203
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9205
  br label %34, !dbg !9206

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9207
  %36 = icmp eq i32 %35, 0, !dbg !9207
  br i1 %36, label %39, label %37, !dbg !9209

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9210
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9212
  br label %39, !dbg !9213

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9214
  %41 = icmp eq i32 %40, 0, !dbg !9214
  br i1 %41, label %44, label %42, !dbg !9216

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9217
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9219
  br label %44, !dbg !9220

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9221
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9222
  ret i32 %24, !dbg !9223
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9224 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9226, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9227, metadata !DIExpression()), !dbg !9235
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9236
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9236
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9236
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9228, metadata !DIExpression()), !dbg !9235
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9237
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9237
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9237
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9229, metadata !DIExpression()), !dbg !9235
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9238
  %10 = load i8, i8* %9, align 4, !dbg !9238
  %11 = zext i8 %10 to i32, !dbg !9239
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %12, metadata !9231, metadata !DIExpression()), !dbg !9235
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9241
  %14 = load i8, i8* %13, align 1, !dbg !9241
  %15 = zext i8 %14 to i32, !dbg !9242
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9243
  call void @llvm.dbg.value(metadata i32 %16, metadata !9232, metadata !DIExpression()), !dbg !9235
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9244
  %18 = load i8, i8* %17, align 2, !dbg !9244
  %19 = zext i8 %18 to i32, !dbg !9245
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9246
  call void @llvm.dbg.value(metadata i32 %20, metadata !9233, metadata !DIExpression()), !dbg !9235
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9247
  %22 = load i8, i8* %21, align 1, !dbg !9247
  %23 = zext i8 %22 to i32, !dbg !9248
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9249
  call void @llvm.dbg.value(metadata i32 %24, metadata !9234, metadata !DIExpression()), !dbg !9235
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9250

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9252
  br i1 %26, label %69, label %27, !dbg !9254

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9255

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9256
  br i1 %29, label %65, label %30, !dbg !9256

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9258
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9235
  br i1 %31, label %38, label %34, !dbg !9260

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9261
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9261

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9264
  br i1 %37, label %38, label %69, !dbg !9265

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9266
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9267
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9268
  %41 = icmp eq i32 %12, %40, !dbg !9270
  br i1 %41, label %43, label %42, !dbg !9271

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9272
  br label %43, !dbg !9274

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9275
  %45 = icmp eq i32 %16, %44, !dbg !9277
  br i1 %45, label %47, label %46, !dbg !9278

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9279
  br label %47, !dbg !9281

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9282
  %49 = icmp eq i32 %20, %48, !dbg !9284
  br i1 %49, label %51, label %50, !dbg !9285

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9286
  br label %51, !dbg !9288

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9289
  %53 = icmp eq i32 %24, %52, !dbg !9291
  br i1 %53, label %55, label %54, !dbg !9292

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9293
  br label %55, !dbg !9295

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9296
  %57 = load i32, i32* %56, align 4, !dbg !9296
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9298
  %59 = load i32, i32* %58, align 4, !dbg !9298
  %60 = icmp eq i32 %57, %59, !dbg !9299
  br i1 %60, label %63, label %61, !dbg !9300

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9301
  %62 = load i32, i32* %56, align 4, !dbg !9303
  store i32 %62, i32* %58, align 4, !dbg !9304
  br label %63, !dbg !9305

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9306
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9307
  br label %69, !dbg !9308

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9256
  %67 = and i8 %66, 1, !dbg !9256
  %68 = icmp eq i8 %67, 0, !dbg !9256
  br i1 %68, label %30, label %69, !dbg !9256

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9235
  ret i32 %70, !dbg !9309
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9310 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9312, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9313, metadata !DIExpression()), !dbg !9315
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9316
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9316
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9316
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9314, metadata !DIExpression()), !dbg !9315
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9317
  %7 = load i32, i32* %6, align 4, !dbg !9317
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9318
  store i32 %7, i32* %8, align 4, !dbg !9319
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9320, !range !9321
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9322
  %11 = trunc i32 %10 to i8, !dbg !9322
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9323
  store i8 %11, i8* %12, align 4, !dbg !9324
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9325, !range !9326
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9327
  %15 = trunc i32 %14 to i8, !dbg !9327
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9328
  store i8 %15, i8* %16, align 1, !dbg !9329
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9330
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9331, !range !9321
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9332
  %20 = trunc i32 %19 to i8, !dbg !9332
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9333
  store i8 %20, i8* %21, align 2, !dbg !9334
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9335, !range !9336
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9337
  %24 = trunc i32 %23 to i8, !dbg !9337
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9338
  store i8 %24, i8* %25, align 1, !dbg !9339
  ret i32 0, !dbg !9340
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9343, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata i8* %1, metadata !9344, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata i32 %2, metadata !9345, metadata !DIExpression()), !dbg !9349
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9350
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9350
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9350
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9346, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata i8 0, metadata !9347, metadata !DIExpression()), !dbg !9349
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9351
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9351
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9353
  %10 = icmp eq i32 %9, 0, !dbg !9353
  br i1 %10, label %30, label %11, !dbg !9354

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9355, !srcloc !9148
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9355
  call void @llvm.dbg.value(metadata i32 %13, metadata !9144, metadata !DIExpression()) #25, !dbg !9357
  call void @llvm.dbg.value(metadata i32 undef, metadata !9145, metadata !DIExpression()) #25, !dbg !9357
  call void @llvm.dbg.value(metadata i32 %13, metadata !9348, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata i8 0, metadata !9347, metadata !DIExpression()), !dbg !9349
  %14 = icmp sgt i32 %2, 0, !dbg !9358
  br i1 %14, label %15, label %28, !dbg !9359

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9347, metadata !DIExpression()), !dbg !9349
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9360
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !9361
  %20 = icmp eq i32 %19, 0, !dbg !9359
  br i1 %20, label %28, label %21, !dbg !9362

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9363
  %23 = add i8 %17, 1, !dbg !9365
  call void @llvm.dbg.value(metadata i8 %23, metadata !9347, metadata !DIExpression()), !dbg !9349
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9366
  %25 = load i8, i8* %24, align 1, !dbg !9366
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !9367
  %26 = zext i8 %23 to i32, !dbg !9368
  %27 = icmp slt i32 %26, %2, !dbg !9358
  br i1 %27, label %15, label %28, !dbg !9359, !llvm.loop !9369

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9368
  call void @llvm.dbg.value(metadata i32 %13, metadata !9154, metadata !DIExpression()) #25, !dbg !9371
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9373, !srcloc !9160
  br label %30, !dbg !9374

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9349
  ret i32 %31, !dbg !9375
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9378, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata i8* %1, metadata !9379, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata i32 %2, metadata !9380, metadata !DIExpression()), !dbg !9383
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9384
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9384
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9384
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9381, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata i8 0, metadata !9382, metadata !DIExpression()), !dbg !9383
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9385
  call void @llvm.dbg.value(metadata i8 0, metadata !9382, metadata !DIExpression()), !dbg !9383
  %8 = icmp sgt i32 %2, 0, !dbg !9386
  br i1 %8, label %9, label %28, !dbg !9387

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9382, metadata !DIExpression()), !dbg !9383
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9385
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9388
  %14 = icmp eq i32 %13, 0, !dbg !9387
  br i1 %14, label %28, label %15, !dbg !9389

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9390
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !9392
  %18 = add i8 %11, 1, !dbg !9393
  call void @llvm.dbg.value(metadata i8 %18, metadata !9382, metadata !DIExpression()), !dbg !9383
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9394
  store i8 %17, i8* %19, align 1, !dbg !9395
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9396
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !9398
  %22 = icmp eq i32 %21, 0, !dbg !9398
  br i1 %22, label %25, label %23, !dbg !9399

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9400
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !9402
  br label %25, !dbg !9403

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9382, metadata !DIExpression()), !dbg !9383
  %26 = zext i8 %18 to i32, !dbg !9404
  %27 = icmp slt i32 %26, %2, !dbg !9386
  br i1 %27, label %9, label %28, !dbg !9387, !llvm.loop !9405

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9404
  ret i32 %29, !dbg !9407
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9410, metadata !DIExpression()), !dbg !9412
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9413
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9413
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9413
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9411, metadata !DIExpression()), !dbg !9412
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9414
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9414
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9415
  ret void, !dbg !9416
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9417 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9419, metadata !DIExpression()), !dbg !9421
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9422
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9422
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9422
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9420, metadata !DIExpression()), !dbg !9421
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9423
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9423
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9424
  ret void, !dbg !9425
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9426 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9428, metadata !DIExpression()), !dbg !9430
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9431
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9431
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9431
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9429, metadata !DIExpression()), !dbg !9430
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9432
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9432
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9433
  %8 = icmp eq i32 %7, 0, !dbg !9433
  br i1 %8, label %14, label %9, !dbg !9434

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9435
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !9436
  %12 = icmp ne i32 %11, 0, !dbg !9434
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9437
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9438 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9440, metadata !DIExpression()), !dbg !9442
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9443
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9443
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9443
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9441, metadata !DIExpression()), !dbg !9442
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9444
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9444
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9445
  ret void, !dbg !9446
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9449, metadata !DIExpression()), !dbg !9451
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9452
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9452
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9452
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9450, metadata !DIExpression()), !dbg !9451
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9453
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9453
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9454
  ret void, !dbg !9455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9458, metadata !DIExpression()), !dbg !9460
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9461
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9461
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9461
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9459, metadata !DIExpression()), !dbg !9460
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9462
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9462
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9463
  ret i32 %7, !dbg !9464
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9467, metadata !DIExpression()), !dbg !9469
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9470
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9470
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9470
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9468, metadata !DIExpression()), !dbg !9469
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9471
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9471
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9472
  ret i32 %7, !dbg !9473
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9476, metadata !DIExpression()), !dbg !9478
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9479
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9479
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9477, metadata !DIExpression()), !dbg !9478
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9480
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9480
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9481
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9482
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9482
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !9482

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9484
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9486
  br label %11, !dbg !9487

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9486
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9488
  ret void, !dbg !9489
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9492, metadata !DIExpression()), !dbg !9494
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9495
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9495
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9495
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9493, metadata !DIExpression()), !dbg !9494
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9496
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9496
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9497
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9498
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9498
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !9498

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9500
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9502
  br label %11, !dbg !9503

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9502
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9504
  ret void, !dbg !9505
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9506 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9508, metadata !DIExpression()), !dbg !9510
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9511
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9511
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9511
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9509, metadata !DIExpression()), !dbg !9510
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9512
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9512
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9513
  %8 = icmp eq i32 %7, 0, !dbg !9513
  br i1 %8, label %13, label %9, !dbg !9514

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9515
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9516
  %12 = icmp eq i32 %11, 0, !dbg !9516
  br i1 %12, label %13, label %22, !dbg !9517

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9518
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !9519
  %16 = icmp eq i32 %15, 0, !dbg !9519
  br i1 %16, label %22, label %17, !dbg !9520

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9521
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !9522
  %20 = icmp ne i32 %19, 0, !dbg !9520
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9524 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9526, metadata !DIExpression()), !dbg !9527
  ret i32 1, !dbg !9528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #7 !dbg !9529 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9531, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9532, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata i8* %2, metadata !9533, metadata !DIExpression()), !dbg !9535
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9536
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !9536
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !9536
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !9534, metadata !DIExpression()), !dbg !9535
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !9537
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9538
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !9539
  store i8* %2, i8** %8, align 4, !dbg !9540
  ret void, !dbg !9541
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9542 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9547, metadata !DIExpression()), !dbg !9548
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9549
  %3 = load volatile i32, i32* %2, align 4, !dbg !9549
  %4 = lshr i32 %3, 5, !dbg !9550
  %5 = and i32 %4, 1, !dbg !9550
  ret i32 %5, !dbg !9551
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9552 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9554, metadata !DIExpression()), !dbg !9555
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9556
  %3 = load volatile i32, i32* %2, align 4, !dbg !9556
  %4 = lshr i32 %3, 5, !dbg !9557
  %5 = and i32 %4, 1, !dbg !9557
  ret i32 %5, !dbg !9558
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9559 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9561, metadata !DIExpression()), !dbg !9562
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9563
  %3 = load volatile i32, i32* %2, align 4, !dbg !9563
  %4 = lshr i32 %3, 6, !dbg !9564
  %5 = and i32 %4, 1, !dbg !9564
  ret i32 %5, !dbg !9565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9566 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9568, metadata !DIExpression()), !dbg !9569
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9570
  %3 = load volatile i32, i32* %2, align 4, !dbg !9570
  %4 = lshr i32 %3, 6, !dbg !9571
  %5 = and i32 %4, 1, !dbg !9571
  ret i32 %5, !dbg !9572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9573 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9577, metadata !DIExpression()), !dbg !9580
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9581

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !9588
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9591, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !9588
  %5 = and i32 %4, -2, !dbg !9593
  call void @llvm.dbg.value(metadata i32 %5, metadata !9578, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !9602
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !9602
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9604, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !9602
  %7 = icmp eq i32 %6, 0, !dbg !9581
  br i1 %7, label %8, label %3, !dbg !9593, !llvm.loop !9606

8:                                                ; preds = %3
  ret void, !dbg !9607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9608 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9610, metadata !DIExpression()), !dbg !9611
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9612
  %3 = load volatile i32, i32* %2, align 4, !dbg !9612
  %4 = and i32 %3, -65, !dbg !9612
  store volatile i32 %4, i32* %2, align 4, !dbg !9612
  ret void, !dbg !9613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9614 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9616, metadata !DIExpression()), !dbg !9619
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9620

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !9621
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9624, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !9621
  %5 = and i32 %4, -257, !dbg !9625
  call void @llvm.dbg.value(metadata i32 %5, metadata !9617, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !9627
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !9627
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9629, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !9627
  %7 = icmp eq i32 %6, 0, !dbg !9620
  br i1 %7, label %8, label %3, !dbg !9625, !llvm.loop !9630

8:                                                ; preds = %3
  ret void, !dbg !9631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9632 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9634, metadata !DIExpression()), !dbg !9637
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9638

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !9639
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9642, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !9639
  %5 = or i32 %4, 1, !dbg !9643
  call void @llvm.dbg.value(metadata i32 %5, metadata !9635, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !9645
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !9645
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9647, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !9645
  %7 = icmp eq i32 %6, 0, !dbg !9638
  br i1 %7, label %8, label %3, !dbg !9643, !llvm.loop !9648

8:                                                ; preds = %3
  ret void, !dbg !9649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9650 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9652, metadata !DIExpression()), !dbg !9653
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9654
  %3 = load volatile i32, i32* %2, align 4, !dbg !9654
  %4 = or i32 %3, 64, !dbg !9654
  store volatile i32 %4, i32* %2, align 4, !dbg !9654
  ret void, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9656 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9658, metadata !DIExpression()), !dbg !9661
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9662

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !9663
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9666, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !9663
  %5 = or i32 %4, 256, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %5, metadata !9659, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !9669
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !9669
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9671, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !9669
  %7 = icmp eq i32 %6, 0, !dbg !9662
  br i1 %7, label %8, label %3, !dbg !9667, !llvm.loop !9672

8:                                                ; preds = %3
  ret void, !dbg !9673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9674 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9676, metadata !DIExpression()), !dbg !9679
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9680

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !9681
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9684, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !9681
  %5 = and i32 %4, -33, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %5, metadata !9677, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !9687
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !9687
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9689, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !9687
  %7 = icmp eq i32 %6, 0, !dbg !9680
  br i1 %7, label %8, label %3, !dbg !9685, !llvm.loop !9690

8:                                                ; preds = %3
  ret void, !dbg !9691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9692 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9694, metadata !DIExpression()), !dbg !9697
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9698

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !9699
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9702, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !9699
  %5 = or i32 %4, 32, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %5, metadata !9695, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !9705
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !9705
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9707, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !9705
  %7 = icmp eq i32 %6, 0, !dbg !9698
  br i1 %7, label %8, label %3, !dbg !9703, !llvm.loop !9708

8:                                                ; preds = %3
  ret void, !dbg !9709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9712, metadata !DIExpression()), !dbg !9713
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9714
  %3 = load volatile i32, i32* %2, align 4, !dbg !9714
  %4 = lshr i32 %3, 7, !dbg !9715
  %5 = and i32 %4, 1, !dbg !9715
  ret i32 %5, !dbg !9716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9717 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9719, metadata !DIExpression()), !dbg !9722
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9723

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !9724
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9727, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !9724
  %5 = and i32 %4, -65, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %5, metadata !9720, metadata !DIExpression()), !dbg !9729
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !9730
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !9730
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9732, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !9730
  %7 = icmp eq i32 %6, 0, !dbg !9723
  br i1 %7, label %8, label %3, !dbg !9728, !llvm.loop !9733

8:                                                ; preds = %3
  ret void, !dbg !9734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9735 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9737, metadata !DIExpression()), !dbg !9740
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9741

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !9742
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9745, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !9742
  %5 = or i32 %4, 64, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %5, metadata !9738, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !9748
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !9748
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9750, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !9748
  %7 = icmp eq i32 %6, 0, !dbg !9741
  br i1 %7, label %8, label %3, !dbg !9746, !llvm.loop !9751

8:                                                ; preds = %3
  ret void, !dbg !9752
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9753 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9757, metadata !DIExpression()), !dbg !9758
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9759
  %3 = load volatile i32, i32* %2, align 4, !dbg !9759
  %4 = trunc i32 %3 to i8, !dbg !9760
  ret i8 %4, !dbg !9761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9762 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9764, metadata !DIExpression()), !dbg !9765
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9766
  %3 = load volatile i32, i32* %2, align 4, !dbg !9766
  %4 = lshr i32 %3, 3, !dbg !9767
  %5 = and i32 %4, 1, !dbg !9767
  ret i32 %5, !dbg !9768
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9769 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9771, metadata !DIExpression()), !dbg !9773
  %3 = bitcast i32* %2 to i8*, !dbg !9774
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9774
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9772, metadata !DIExpression()), !dbg !9775
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9776
  %5 = load volatile i32, i32* %4, align 4, !dbg !9776
  store volatile i32 %5, i32* %2, align 4, !dbg !9777
  %6 = load volatile i32, i32* %2, align 4, !dbg !9778
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9779
  %8 = load volatile i32, i32* %7, align 4, !dbg !9779
  store volatile i32 %8, i32* %2, align 4, !dbg !9780
  %9 = load volatile i32, i32* %2, align 4, !dbg !9781
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9782
  ret void, !dbg !9782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9783 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9787, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i8 %1, metadata !9788, metadata !DIExpression()), !dbg !9789
  %3 = zext i8 %1 to i32, !dbg !9790
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9791
  store volatile i32 %3, i32* %4, align 4, !dbg !9792
  ret void, !dbg !9793
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9798, metadata !DIExpression()), !dbg !9800
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9801
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9801
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9801
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9799, metadata !DIExpression()), !dbg !9800
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9802
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9802
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9803
  ret i32 %7, !dbg !9804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9809, metadata !DIExpression()), !dbg !9810
  %2 = icmp eq i32 %0, 1024, !dbg !9811
  %3 = select i1 %2, i32 2, i32 0, !dbg !9811
  %4 = icmp eq i32 %0, 1536, !dbg !9811
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9811
  ret i32 %5, !dbg !9812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9815, metadata !DIExpression()), !dbg !9817
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9818
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9818
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9818
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9816, metadata !DIExpression()), !dbg !9817
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9819
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9819
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9820
  ret i32 %7, !dbg !9821
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9826, metadata !DIExpression()), !dbg !9827
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9828
  %3 = icmp ult i32 %2, 4, !dbg !9828
  br i1 %3, label %4, label %7, !dbg !9828

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9828
  %6 = load i32, i32* %5, align 4, !dbg !9828
  br label %7, !dbg !9828

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9829
  ret i32 %8, !dbg !9831
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9834, metadata !DIExpression()), !dbg !9836
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9837
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9837
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9835, metadata !DIExpression()), !dbg !9836
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9838
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9838
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9839
  ret i32 %7, !dbg !9840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9845, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata i32 %1, metadata !9846, metadata !DIExpression()), !dbg !9847
  %3 = icmp eq i32 %0, 4096, !dbg !9848
  %4 = icmp eq i32 %1, 0, !dbg !9848
  %5 = select i1 %4, i32 4, i32 3, !dbg !9848
  %6 = select i1 %4, i32 3, i32 2, !dbg !9848
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9848
  ret i32 %7, !dbg !9849
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9852, metadata !DIExpression()), !dbg !9854
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9855
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9855
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9855
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9853, metadata !DIExpression()), !dbg !9854
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9856
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9856
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9857
  ret i32 %7, !dbg !9858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9863, metadata !DIExpression()), !dbg !9864
  %2 = icmp eq i32 %0, 768, !dbg !9865
  %3 = zext i1 %2 to i32, !dbg !9864
  ret i32 %3, !dbg !9867
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9868 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9870, metadata !DIExpression()), !dbg !9871
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9872
  %3 = load volatile i32, i32* %2, align 4, !dbg !9872
  %4 = and i32 %3, 768, !dbg !9872
  ret i32 %4, !dbg !9873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9874 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9876, metadata !DIExpression()), !dbg !9877
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9878
  %3 = load volatile i32, i32* %2, align 4, !dbg !9878
  %4 = and i32 %3, 4096, !dbg !9878
  ret i32 %4, !dbg !9879
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9882, metadata !DIExpression()), !dbg !9883
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9884
  %3 = load volatile i32, i32* %2, align 4, !dbg !9884
  %4 = and i32 %3, 12288, !dbg !9884
  ret i32 %4, !dbg !9885
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9886 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9888, metadata !DIExpression()), !dbg !9889
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9890
  %3 = load volatile i32, i32* %2, align 4, !dbg !9890
  %4 = and i32 %3, 1536, !dbg !9890
  ret i32 %4, !dbg !9891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9896, metadata !DIExpression()), !dbg !9897
  %2 = icmp eq i32 %0, 2, !dbg !9898
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9898
  %4 = icmp eq i32 %0, 1, !dbg !9898
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9898
  ret i32 %5, !dbg !9899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9904, metadata !DIExpression()), !dbg !9905
  %2 = icmp ult i32 %0, 3, !dbg !9906
  br i1 %2, label %3, label %6, !dbg !9906

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9906
  %5 = load i32, i32* %4, align 4, !dbg !9906
  br label %6, !dbg !9906

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9907
  ret i32 %7, !dbg !9909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9914, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata i32 %1, metadata !9915, metadata !DIExpression()), !dbg !9916
  %3 = icmp eq i32 %0, 4, !dbg !9917
  %4 = icmp eq i32 %1, 0, !dbg !9917
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9917
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9917
  ret i32 %6, !dbg !9918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9923, metadata !DIExpression()), !dbg !9924
  %2 = icmp eq i32 %0, 1, !dbg !9925
  %3 = select i1 %2, i32 768, i32 0, !dbg !9924
  ret i32 %3, !dbg !9927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9930, metadata !DIExpression()), !dbg !9931
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9932
  %3 = load volatile i32, i32* %2, align 4, !dbg !9932
  %4 = and i32 %3, -8193, !dbg !9932
  store volatile i32 %4, i32* %2, align 4, !dbg !9932
  ret void, !dbg !9933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9934 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9938, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32 %1, metadata !9939, metadata !DIExpression()), !dbg !9941
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9942
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9942
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9942
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9940, metadata !DIExpression()), !dbg !9941
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9943
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9943
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9944
  ret void, !dbg !9945
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9946 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9948, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 %1, metadata !9949, metadata !DIExpression()), !dbg !9951
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9952
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9952
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9952
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9950, metadata !DIExpression()), !dbg !9951
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9953
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9953
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9954
  ret void, !dbg !9955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9958, metadata !DIExpression()), !dbg !9961
  call void @llvm.dbg.value(metadata i32 %1, metadata !9959, metadata !DIExpression()), !dbg !9961
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9962
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9962
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9962
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9960, metadata !DIExpression()), !dbg !9961
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9963
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9963
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9964
  ret void, !dbg !9965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9966 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9968, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32 %1, metadata !9969, metadata !DIExpression()), !dbg !9971
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9972
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9972
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9972
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9970, metadata !DIExpression()), !dbg !9971
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9973
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9973
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9974
  ret void, !dbg !9975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9976 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9978, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata i32 %1, metadata !9979, metadata !DIExpression()), !dbg !9983
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9984
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9984
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9984
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9980, metadata !DIExpression()), !dbg !9983
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9985
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9985
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9985
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9981, metadata !DIExpression()), !dbg !9983
  %10 = bitcast i32* %3 to i8*, !dbg !9986
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9986
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9987
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9987
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9991
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9991
  %15 = load i8*, i8** %14, align 4, !dbg !9991
  call void @llvm.dbg.value(metadata i32* %3, metadata !9982, metadata !DIExpression(DW_OP_deref)), !dbg !9983
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9992
  %17 = icmp slt i32 %16, 0, !dbg !9993
  br i1 %17, label %23, label %18, !dbg !9994

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9995
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9995
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9996
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9997
  %22 = load i32, i32* %3, align 4, !dbg !9998
  call void @llvm.dbg.value(metadata i32 %22, metadata !9982, metadata !DIExpression()), !dbg !9983
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9999
  br label %23, !dbg !10000

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10000
  ret void, !dbg !10000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10003, metadata !DIExpression()), !dbg !10004
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10005
  %3 = load volatile i32, i32* %2, align 4, !dbg !10005
  %4 = or i32 %3, 8192, !dbg !10005
  store volatile i32 %4, i32* %2, align 4, !dbg !10005
  ret void, !dbg !10006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10009, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i8* %1, metadata !10010, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32* %2, metadata !10011, metadata !DIExpression()), !dbg !10013
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10014
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10014
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10014
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10012, metadata !DIExpression()), !dbg !10013
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10015
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10015
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10017
  br i1 %9, label %12, label %10, !dbg !10018

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !10019
  br label %12, !dbg !10020

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10013
  ret i32 %13, !dbg !10021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10022 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10026, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i32 0, metadata !10027, metadata !DIExpression()), !dbg !10028
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10029
  %3 = load volatile i32, i32* %2, align 4, !dbg !10029
  %4 = and i32 %3, -32769, !dbg !10029
  store volatile i32 %4, i32* %2, align 4, !dbg !10029
  ret void, !dbg !10030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10031 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10035, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.value(metadata i32 %1, metadata !10036, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.value(metadata i32 0, metadata !10037, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.value(metadata i32 %2, metadata !10038, metadata !DIExpression()), !dbg !10039
  %4 = zext i32 %1 to i64, !dbg !10040
  %5 = mul nuw nsw i64 %4, 25, !dbg !10040
  %6 = zext i32 %2 to i64, !dbg !10040
  %7 = shl nuw nsw i64 %6, 2, !dbg !10040
  %8 = udiv i64 %5, %7, !dbg !10040
  %9 = trunc i64 %8 to i32, !dbg !10040
  %10 = udiv i32 %9, 100, !dbg !10040
  %11 = shl nuw nsw i32 %10, 4, !dbg !10040
  %12 = mul i32 %10, -100, !dbg !10040
  %13 = add i32 %12, %9, !dbg !10040
  %14 = shl i32 %13, 4, !dbg !10040
  %15 = add i32 %14, 50, !dbg !10040
  %16 = udiv i32 %15, 100, !dbg !10040
  %17 = and i32 %16, 240, !dbg !10040
  %18 = add nuw nsw i32 %17, %11, !dbg !10040
  %19 = and i32 %16, 15, !dbg !10040
  %20 = and i32 %18, 65520, !dbg !10043
  %21 = or i32 %20, %19, !dbg !10043
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10044
  store volatile i32 %21, i32* %22, align 4, !dbg !10045
  ret void, !dbg !10046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10047 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10049, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata i32 %1, metadata !10050, metadata !DIExpression()), !dbg !10051
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10052
  %4 = load volatile i32, i32* %3, align 4, !dbg !10052
  %5 = and i32 %4, -769, !dbg !10052
  %6 = or i32 %5, %1, !dbg !10052
  store volatile i32 %6, i32* %3, align 4, !dbg !10052
  ret void, !dbg !10053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10054 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10056, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 %1, metadata !10057, metadata !DIExpression()), !dbg !10058
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10059
  %4 = load volatile i32, i32* %3, align 4, !dbg !10059
  %5 = and i32 %4, -4097, !dbg !10059
  %6 = or i32 %5, %1, !dbg !10059
  store volatile i32 %6, i32* %3, align 4, !dbg !10059
  ret void, !dbg !10060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10061 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10063, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.value(metadata i32 %1, metadata !10064, metadata !DIExpression()), !dbg !10065
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10066
  %4 = load volatile i32, i32* %3, align 4, !dbg !10066
  %5 = and i32 %4, -12289, !dbg !10066
  %6 = or i32 %5, %1, !dbg !10066
  store volatile i32 %6, i32* %3, align 4, !dbg !10066
  ret void, !dbg !10067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10068 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10070, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.value(metadata i32 %1, metadata !10071, metadata !DIExpression()), !dbg !10072
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10073
  %4 = load volatile i32, i32* %3, align 4, !dbg !10073
  %5 = and i32 %4, -1537, !dbg !10073
  %6 = or i32 %5, %1, !dbg !10073
  store volatile i32 %6, i32* %3, align 4, !dbg !10073
  ret void, !dbg !10074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10075 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10077, metadata !DIExpression()), !dbg !10078
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10079
  %3 = load volatile i32, i32* %2, align 4, !dbg !10079
  %4 = and i32 %3, 1, !dbg !10079
  ret i32 %4, !dbg !10080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10081 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10083, metadata !DIExpression()), !dbg !10084
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10085
  %3 = load volatile i32, i32* %2, align 4, !dbg !10085
  %4 = lshr i32 %3, 1, !dbg !10086
  %5 = and i32 %4, 1, !dbg !10086
  ret i32 %5, !dbg !10087
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10088 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10090, metadata !DIExpression()), !dbg !10091
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10092
  %3 = load volatile i32, i32* %2, align 4, !dbg !10092
  %4 = lshr i32 %3, 8, !dbg !10093
  %5 = and i32 %4, 1, !dbg !10093
  ret i32 %5, !dbg !10094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10097, metadata !DIExpression()), !dbg !10098
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10099
  store volatile i32 -257, i32* %2, align 4, !dbg !10099
  ret void, !dbg !10100
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10101 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10103, metadata !DIExpression()), !dbg !10105
  %3 = bitcast i32* %2 to i8*, !dbg !10106
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10106
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10104, metadata !DIExpression()), !dbg !10107
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10108
  %5 = load volatile i32, i32* %4, align 4, !dbg !10108
  store volatile i32 %5, i32* %2, align 4, !dbg !10109
  %6 = load volatile i32, i32* %2, align 4, !dbg !10110
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10111
  %8 = load volatile i32, i32* %7, align 4, !dbg !10111
  store volatile i32 %8, i32* %2, align 4, !dbg !10112
  %9 = load volatile i32, i32* %2, align 4, !dbg !10113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10114
  ret void, !dbg !10114
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10115 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10117, metadata !DIExpression()), !dbg !10119
  %3 = bitcast i32* %2 to i8*, !dbg !10120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10120
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10118, metadata !DIExpression()), !dbg !10121
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10122
  %5 = load volatile i32, i32* %4, align 4, !dbg !10122
  store volatile i32 %5, i32* %2, align 4, !dbg !10123
  %6 = load volatile i32, i32* %2, align 4, !dbg !10124
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10125
  %8 = load volatile i32, i32* %7, align 4, !dbg !10125
  store volatile i32 %8, i32* %2, align 4, !dbg !10126
  %9 = load volatile i32, i32* %2, align 4, !dbg !10127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10128
  ret void, !dbg !10128
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10129 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10131, metadata !DIExpression()), !dbg !10133
  %3 = bitcast i32* %2 to i8*, !dbg !10134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10134
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10132, metadata !DIExpression()), !dbg !10135
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10136
  %5 = load volatile i32, i32* %4, align 4, !dbg !10136
  store volatile i32 %5, i32* %2, align 4, !dbg !10137
  %6 = load volatile i32, i32* %2, align 4, !dbg !10138
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10139
  %8 = load volatile i32, i32* %7, align 4, !dbg !10139
  store volatile i32 %8, i32* %2, align 4, !dbg !10140
  %9 = load volatile i32, i32* %2, align 4, !dbg !10141
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10142
  ret void, !dbg !10142
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1530, metadata !DIExpression()), !dbg !10143
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #27, !dbg !10144
  tail call void @arch_irq_enable(i32 noundef 37) #27, !dbg !10146
  ret void, !dbg !10146
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10147 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10149, metadata !DIExpression()), !dbg !10151
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10152
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10152
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10152
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10150, metadata !DIExpression()), !dbg !10151
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10153
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10153
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10155
  br i1 %7, label %11, label %8, !dbg !10156

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10157
  %10 = load i8*, i8** %9, align 4, !dbg !10157
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #27, !dbg !10159
  br label %11, !dbg !10160

11:                                               ; preds = %8, %1
  ret void, !dbg !10161
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10164, metadata !DIExpression()), !dbg !10170
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10171
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10171
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10171
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10165, metadata !DIExpression()), !dbg !10170
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10172
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10172
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10172
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10166, metadata !DIExpression()), !dbg !10170
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10173
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10174
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10174
  %10 = tail call fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %9) #26, !dbg !10176
  br i1 %10, label %11, label %51, !dbg !10177

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10178
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10179
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10179
  %15 = load i8*, i8** %14, align 4, !dbg !10179
  %16 = tail call fastcc i32 @clock_control_on.60(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10180
  call void @llvm.dbg.value(metadata i32 %16, metadata !10169, metadata !DIExpression()), !dbg !10170
  %17 = icmp eq i32 %16, 0, !dbg !10181
  br i1 %17, label %18, label %51, !dbg !10183

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10184
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10184
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10185
  call void @llvm.dbg.value(metadata i32 %21, metadata !10169, metadata !DIExpression()), !dbg !10170
  %22 = icmp slt i32 %21, 0, !dbg !10186
  br i1 %22, label %51, label %23, !dbg !10188

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10189
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10189
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10190
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10191
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10192
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10193
  %28 = load i32, i32* %27, align 4, !dbg !10193
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10195

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10167, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 4096, metadata !10168, metadata !DIExpression()), !dbg !10170
  br label %31, !dbg !10196

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10167, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 0, metadata !10168, metadata !DIExpression()), !dbg !10170
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10199
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10199
  call void @llvm.dbg.value(metadata i32 %33, metadata !10168, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 %32, metadata !10167, metadata !DIExpression()), !dbg !10170
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10200
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10201
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10202
  %36 = load i8, i8* %35, align 4, !dbg !10202, !range !6398
  %37 = icmp eq i8 %36, 0, !dbg !10202
  br i1 %37, label %39, label %38, !dbg !10204

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10205
  br label %39, !dbg !10207

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10208
  %41 = load i32, i32* %40, align 4, !dbg !10208
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10209
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10210
  %43 = load i8, i8* %42, align 4, !dbg !10210, !range !6398
  %44 = icmp eq i8 %43, 0, !dbg !10210
  br i1 %44, label %47, label %45, !dbg !10212

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10213
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10215
  br label %47, !dbg !10216

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10217
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10218
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10219
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10219
  tail call void %50(%struct.device* noundef nonnull %0) #27, !dbg !10220
  br label %51, !dbg !10221

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10170
  ret i32 %52, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10223 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10225, metadata !DIExpression()), !dbg !10229
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10230
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10230
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10230
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10226, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10227, metadata !DIExpression()), !dbg !10229
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10231
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10232
  ret void, !dbg !10233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %0) unnamed_addr #1 !dbg !10234 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10238, metadata !DIExpression()), !dbg !10239
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10240, !srcloc !10242
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.61(%struct.device* noundef %0) #26, !dbg !10243
  ret i1 %2, !dbg !10244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.60(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10247, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.value(metadata i8* %1, metadata !10248, metadata !DIExpression()), !dbg !10250
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10251
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10251
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10251
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10249, metadata !DIExpression()), !dbg !10250
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10252
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10252
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10253
  ret i32 %8, !dbg !10254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10255 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10259, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i8 0, metadata !10260, metadata !DIExpression()), !dbg !10263
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10264
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10264
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10262, metadata !DIExpression(DW_OP_deref)), !dbg !10263
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10265
  call void @llvm.dbg.value(metadata i32 %4, metadata !10261, metadata !DIExpression()), !dbg !10263
  %5 = icmp slt i32 %4, 0, !dbg !10266
  br i1 %5, label %9, label %6, !dbg !10268

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10269
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10262, metadata !DIExpression()), !dbg !10263
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10270
  br label %9, !dbg !10271

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10263
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10272
  ret i32 %10, !dbg !10272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10273 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10275, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata i32 12, metadata !10276, metadata !DIExpression()), !dbg !10279
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10280

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9582, metadata !DIExpression()) #25, !dbg !10281
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10284, !srcloc !9592
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()) #25, !dbg !10281
  %5 = or i32 %4, 12, !dbg !10285
  call void @llvm.dbg.value(metadata i32 %5, metadata !10277, metadata !DIExpression()), !dbg !10286
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()) #25, !dbg !10287
  call void @llvm.dbg.value(metadata i32* %2, metadata !9600, metadata !DIExpression()) #25, !dbg !10287
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10289, !srcloc !9605
  call void @llvm.dbg.value(metadata i32 %6, metadata !9601, metadata !DIExpression()) #25, !dbg !10287
  %7 = icmp eq i32 %6, 0, !dbg !10280
  br i1 %7, label %8, label %3, !dbg !10285, !llvm.loop !10290

8:                                                ; preds = %3
  ret void, !dbg !10291
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10292 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10294, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 %1, metadata !10295, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 %2, metadata !10296, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 0, metadata !10297, metadata !DIExpression()), !dbg !10298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10299
  %5 = load volatile i32, i32* %4, align 4, !dbg !10299
  %6 = and i32 %5, -5633, !dbg !10299
  %7 = or i32 %2, %1, !dbg !10299
  %8 = or i32 %7, %6, !dbg !10299
  store volatile i32 %8, i32* %4, align 4, !dbg !10299
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10300
  %10 = load volatile i32, i32* %9, align 4, !dbg !10300
  %11 = and i32 %10, -12289, !dbg !10300
  store volatile i32 %11, i32* %9, align 4, !dbg !10300
  ret void, !dbg !10301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10302 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10304, metadata !DIExpression()), !dbg !10305
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10306
  %3 = load volatile i32, i32* %2, align 4, !dbg !10306
  %4 = or i32 %3, 8, !dbg !10306
  store volatile i32 %4, i32* %2, align 4, !dbg !10306
  ret void, !dbg !10307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10312, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10313, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 0, metadata !10314, metadata !DIExpression()), !dbg !10315
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10316
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10316
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10317
  %5 = load i8, i8* %4, align 4, !dbg !10317
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10318
  ret i32 %6, !dbg !10319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.61(%struct.device* noundef %0) unnamed_addr #1 !dbg !10320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10324
  ret i1 %2, !dbg !10325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10326 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10328, metadata !DIExpression()), !dbg !10329
  tail call fastcc void @__NVIC_SetPriority.63() #26, !dbg !10330
  store i32 8399, i32* @last_load, align 4, !dbg !10331
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10332
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10333
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10334
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10335
  %3 = or i32 %2, 7, !dbg !10335
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10335
  ret i32 0, !dbg !10336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63() unnamed_addr #15 !dbg !10337 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10339, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 1, metadata !10340, metadata !DIExpression()), !dbg !10341
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10342
  ret void, !dbg !10345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10346 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10348, metadata !DIExpression()), !dbg !10350
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10351
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10352
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10353
  %5 = add i32 %4, %3, !dbg !10353
  store i32 %5, i32* @cycle_count, align 4, !dbg !10353
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10354
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10355
  %7 = sub i32 %5, %6, !dbg !10358
  %8 = udiv i32 %7, 8400, !dbg !10359
  call void @llvm.dbg.value(metadata i32 %8, metadata !10349, metadata !DIExpression()), !dbg !10350
  %9 = mul nuw i32 %8, 8400, !dbg !10360
  %10 = add i32 %9, %6, !dbg !10361
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10361
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10362
  tail call void @z_arm_int_exit() #27, !dbg !10363
  ret void, !dbg !10364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10365 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10370
  call void @llvm.dbg.value(metadata i32 %1, metadata !10367, metadata !DIExpression()), !dbg !10371
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10372
  call void @llvm.dbg.value(metadata i32 %2, metadata !10368, metadata !DIExpression()), !dbg !10371
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %3, metadata !10369, metadata !DIExpression()), !dbg !10371
  %4 = and i32 %2, 65536, !dbg !10374
  %5 = icmp ne i32 %4, 0, !dbg !10374
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10376
  %8 = load i32, i32* @last_load, align 4, !dbg !10371
  br i1 %7, label %9, label %13, !dbg !10376

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10377
  %11 = add i32 %10, %8, !dbg !10377
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10377
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10379
  br label %13, !dbg !10380

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10381
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10382
  %16 = add i32 %14, %15, !dbg !10383
  ret i32 %16, !dbg !10384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10389, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i1 %1, metadata !10390, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10402
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10403
  br i1 %4, label %5, label %8, !dbg !10403

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10405
  %7 = and i32 %6, -2, !dbg !10405
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10405
  store i32 -16777216, i32* @last_load, align 4, !dbg !10407
  br label %54, !dbg !10408

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %9, metadata !10394, metadata !DIExpression()), !dbg !10402
  br i1 %3, label %18, label %10, !dbg !10410

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10410
  call void @llvm.dbg.value(metadata i32 undef, metadata !10389, metadata !DIExpression()), !dbg !10402
  %12 = icmp slt i32 %11, 1, !dbg !10411
  br i1 %12, label %18, label %13, !dbg !10411

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10411
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10411
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10411
  %17 = add nuw nsw i32 %16, 8399, !dbg !10411
  br label %18, !dbg !10411

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10389, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10412, metadata !DIExpression()) #25, !dbg !10419
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10421, !srcloc !10427
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10421
  call void @llvm.dbg.value(metadata i32 %21, metadata !10424, metadata !DIExpression()) #25, !dbg !10428
  call void @llvm.dbg.value(metadata i32 undef, metadata !10425, metadata !DIExpression()) #25, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %21, metadata !10418, metadata !DIExpression()) #25, !dbg !10419
  call void @llvm.dbg.value(metadata i32 %21, metadata !10395, metadata !DIExpression()), !dbg !10402
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10429
  call void @llvm.dbg.value(metadata i32 %22, metadata !10400, metadata !DIExpression()), !dbg !10402
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %23, metadata !10392, metadata !DIExpression()), !dbg !10402
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10431
  %25 = add i32 %24, %22, !dbg !10431
  store i32 %25, i32* @cycle_count, align 4, !dbg !10431
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10432
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10433
  %27 = sub i32 %25, %26, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %27, metadata !10401, metadata !DIExpression()), !dbg !10402
  %28 = icmp slt i32 %27, 0, !dbg !10435
  br i1 %28, label %38, label %29, !dbg !10437

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10391, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 undef, metadata !10391, metadata !DIExpression()), !dbg !10402
  %30 = add nuw i32 %19, %27, !dbg !10438
  %31 = urem i32 %30, 8400, !dbg !10440
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10391, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10402
  %32 = sub nuw nsw i32 %19, %31, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %32, metadata !10391, metadata !DIExpression()), !dbg !10402
  %33 = icmp ugt i32 %32, 1024, !dbg !10442
  br i1 %33, label %34, label %36, !dbg !10442

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10391, metadata !DIExpression()), !dbg !10402
  %35 = icmp ugt i32 %32, 16766400, !dbg !10443
  br i1 %35, label %38, label %36, !dbg !10445

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10446
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10447
  call void @llvm.dbg.value(metadata i32 %40, metadata !10393, metadata !DIExpression()), !dbg !10402
  %41 = add nsw i32 %39, -1, !dbg !10448
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10449
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10450
  %42 = icmp ult i32 %23, %40, !dbg !10451
  br i1 %42, label %43, label %48, !dbg !10453

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10454
  %45 = add i32 %23, %9, !dbg !10456
  %46 = sub i32 %45, %40, !dbg !10457
  %47 = add i32 %46, %44, !dbg !10454
  br label %52, !dbg !10458

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10459
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10461
  %51 = add i32 %49, %50, !dbg !10461
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10462
  store i32 %53, i32* @cycle_count, align 4, !dbg !10462
  call void @llvm.dbg.value(metadata i32 %21, metadata !10463, metadata !DIExpression()) #25, !dbg !10469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10468, metadata !DIExpression()) #25, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %21, metadata !10471, metadata !DIExpression()) #25, !dbg !10474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10476, !srcloc !10477
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10479 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10412, metadata !DIExpression()) #25, !dbg !10483
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10485, !srcloc !10427
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %2, metadata !10424, metadata !DIExpression()) #25, !dbg !10487
  call void @llvm.dbg.value(metadata i32 undef, metadata !10425, metadata !DIExpression()) #25, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %2, metadata !10418, metadata !DIExpression()) #25, !dbg !10483
  call void @llvm.dbg.value(metadata i32 %2, metadata !10481, metadata !DIExpression()), !dbg !10488
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10489
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10490
  %5 = add i32 %4, %3, !dbg !10491
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10492
  %7 = sub i32 %5, %6, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %7, metadata !10482, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.value(metadata i32 %2, metadata !10463, metadata !DIExpression()) #25, !dbg !10494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10468, metadata !DIExpression()) #25, !dbg !10494
  call void @llvm.dbg.value(metadata i32 %2, metadata !10471, metadata !DIExpression()) #25, !dbg !10496
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10498, !srcloc !10477
  %8 = udiv i32 %7, 8400, !dbg !10499
  ret i32 %8, !dbg !10500
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10412, metadata !DIExpression()) #25, !dbg !10505
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10507, !srcloc !10427
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %2, metadata !10424, metadata !DIExpression()) #25, !dbg !10509
  call void @llvm.dbg.value(metadata i32 undef, metadata !10425, metadata !DIExpression()) #25, !dbg !10509
  call void @llvm.dbg.value(metadata i32 %2, metadata !10418, metadata !DIExpression()) #25, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %2, metadata !10503, metadata !DIExpression()), !dbg !10510
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10511
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10512
  %5 = add i32 %4, %3, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %5, metadata !10504, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.value(metadata i32 %2, metadata !10463, metadata !DIExpression()) #25, !dbg !10514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10468, metadata !DIExpression()) #25, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %2, metadata !10471, metadata !DIExpression()) #25, !dbg !10516
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10518, !srcloc !10477
  ret i32 %5, !dbg !10519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10520 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10521
  %2 = icmp eq i32 %1, -16777216, !dbg !10523
  br i1 %2, label %3, label %6, !dbg !10524

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10525
  %5 = or i32 %4, 1, !dbg !10525
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10525
  br label %6, !dbg !10527

6:                                                ; preds = %3, %0
  ret void, !dbg !10528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10529 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10530
  %2 = and i32 %1, -2, !dbg !10530
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10530
  ret void, !dbg !10531
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10532 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10558, metadata !DIExpression()), !dbg !10561
  call void @llvm.dbg.value(metadata i8 %1, metadata !10559, metadata !DIExpression()), !dbg !10561
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10560, metadata !DIExpression()), !dbg !10561
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10562
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10562
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10561
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10563
  %8 = load i8, i8* %6, align 4, !dbg !10564
  %9 = zext i8 %8 to i32, !dbg !10565
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10565
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10566
  br i1 %11, label %18, label %24, !dbg !10567

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10561
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10563
  %14 = load i8, i8* %6, align 4, !dbg !10564
  %15 = zext i8 %14 to i32, !dbg !10565
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10565
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10566
  br i1 %17, label %18, label %24, !dbg !10567, !llvm.loop !10568

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10570
  %21 = load i8, i8* %20, align 1, !dbg !10570
  %22 = icmp eq i8 %21, %1, !dbg !10573
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10574
  br i1 %22, label %24, label %12, !dbg !10575

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10561
  ret i32 %25, !dbg !10576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10577 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10588, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i8 %1, metadata !10589, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 %2, metadata !10590, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 0, metadata !10593, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 0, metadata !10594, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i8 0, metadata !10595, metadata !DIExpression()), !dbg !10605
  %4 = icmp eq i8 %1, 0, !dbg !10606
  br i1 %4, label %35, label %5, !dbg !10607

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10606
  br label %9, !dbg !10607

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10595, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %29, metadata !10593, metadata !DIExpression()), !dbg !10604
  %8 = icmp eq i32 %34, %6, !dbg !10606
  br i1 %8, label %35, label %9, !dbg !10607, !llvm.loop !10608

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10595, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %11, metadata !10593, metadata !DIExpression()), !dbg !10604
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10610
  %13 = load i32, i32* %12, align 4, !dbg !10610
  call void @llvm.dbg.value(metadata i32 %13, metadata !10592, metadata !DIExpression()), !dbg !10604
  %14 = and i32 %13, 31, !dbg !10611
  %15 = icmp ult i32 %14, 16, !dbg !10612
  br i1 %15, label %16, label %20, !dbg !10613

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10614
  %18 = load i32, i32* %17, align 4, !dbg !10614
  %19 = or i32 %18, 32, !dbg !10616
  call void @llvm.dbg.value(metadata i32 %19, metadata !10593, metadata !DIExpression()), !dbg !10604
  br label %28, !dbg !10617

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10618

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10619
  %23 = load i32, i32* %22, align 4, !dbg !10619
  call void @llvm.dbg.value(metadata i32 %23, metadata !10597, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10620
  %24 = lshr i32 %23, 7, !dbg !10621
  %25 = and i32 %24, 16, !dbg !10621
  %26 = or i32 %25, %23, !dbg !10621
  call void @llvm.dbg.value(metadata i32 %26, metadata !10593, metadata !DIExpression()), !dbg !10604
  br label %28, !dbg !10622

27:                                               ; preds = %20
  br label %28, !dbg !10623

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10604
  call void @llvm.dbg.value(metadata i32 %29, metadata !10593, metadata !DIExpression()), !dbg !10604
  %30 = lshr i32 %13, 5, !dbg !10623
  %31 = and i32 %30, 255, !dbg !10623
  call void @llvm.dbg.value(metadata i32 %31, metadata !10591, metadata !DIExpression()), !dbg !10604
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %32, metadata !10594, metadata !DIExpression()), !dbg !10604
  %33 = icmp slt i32 %32, 0, !dbg !10625
  %34 = add nuw nsw i32 %10, 1, !dbg !10627
  call void @llvm.dbg.value(metadata i32 %34, metadata !10595, metadata !DIExpression()), !dbg !10605
  br i1 %33, label %35, label %7, !dbg !10628

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10634, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata i32 %1, metadata !10635, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata i32 %2, metadata !10636, metadata !DIExpression()), !dbg !10638
  %4 = icmp ugt i32 %0, 175, !dbg !10639
  br i1 %4, label %16, label %5, !dbg !10641

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10642
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10643
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10643
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10637, metadata !DIExpression()), !dbg !10638
  %9 = add nsw i32 %6, -8, !dbg !10644
  %10 = icmp ult i32 %9, 3, !dbg !10644
  br i1 %10, label %16, label %11, !dbg !10646

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %8) #26, !dbg !10647
  br i1 %12, label %13, label %16, !dbg !10648

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10649
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10650
  br label %16, !dbg !10651

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10638
  ret i32 %17, !dbg !10652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %0) unnamed_addr #1 !dbg !10653 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10657, metadata !DIExpression()), !dbg !10658
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10659, !srcloc !10661
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) #26, !dbg !10662
  ret i1 %2, !dbg !10663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) unnamed_addr #1 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10666, metadata !DIExpression()), !dbg !10667
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10668
  ret i1 %2, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10670 {
  ret void, !dbg !10671
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10672 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10674, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata i32 0, metadata !10675, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata i32 2, metadata !10676, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata i32 0, metadata !10677, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata i32 2, metadata !10678, metadata !DIExpression()), !dbg !10679
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10680
  %2 = and i32 %1, 12, !dbg !10681
  call void @llvm.dbg.value(metadata i32 %2, metadata !10674, metadata !DIExpression()), !dbg !10679
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10682

3:                                                ; preds = %0
  br label %21, !dbg !10683

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10685
  call void @llvm.dbg.value(metadata i32 %5, metadata !10677, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10679
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10686
  %7 = and i32 %6, 63, !dbg !10687
  call void @llvm.dbg.value(metadata i32 %7, metadata !10678, metadata !DIExpression()), !dbg !10679
  %8 = and i32 %5, 4194304, !dbg !10688
  %9 = icmp eq i32 %8, 0, !dbg !10688
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !10690
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10690
  %13 = lshr i32 %12, 6, !dbg !10690
  %14 = and i32 %13, 511, !dbg !10690
  %15 = mul i32 %14, %11, !dbg !10690
  call void @llvm.dbg.value(metadata i32 %15, metadata !10675, metadata !DIExpression()), !dbg !10679
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10691
  %17 = lshr i32 %16, 15, !dbg !10692
  %18 = and i32 %17, 6, !dbg !10692
  %19 = add nuw nsw i32 %18, 2, !dbg !10692
  call void @llvm.dbg.value(metadata i32 %19, metadata !10676, metadata !DIExpression()), !dbg !10679
  %20 = udiv i32 %15, %19, !dbg !10693
  br label %21, !dbg !10694

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !10695
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10696
  %24 = lshr i32 %23, 4, !dbg !10697
  %25 = and i32 %24, 15, !dbg !10697
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !10698
  %27 = load i8, i8* %26, align 1, !dbg !10698
  %28 = zext i8 %27 to i32, !dbg !10698
  call void @llvm.dbg.value(metadata i32 %28, metadata !10674, metadata !DIExpression()), !dbg !10679
  %29 = lshr i32 %22, %28, !dbg !10699
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !10699
  ret void, !dbg !10700
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10701 {
  ret i32 0, !dbg !10706
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10707 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10733, metadata !DIExpression()), !dbg !10744
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10745
  br i1 %3, label %311, label %4, !dbg !10747

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10748
  %6 = load i32, i32* %5, align 4, !dbg !10748
  %7 = and i32 %6, 1, !dbg !10750
  %8 = icmp eq i32 %7, 0, !dbg !10751
  br i1 %8, label %66, label %9, !dbg !10752

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10753
  %11 = and i32 %10, 12, !dbg !10753
  %12 = icmp eq i32 %11, 4, !dbg !10756
  br i1 %12, label %21, label %13, !dbg !10757

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10758
  %15 = and i32 %14, 12, !dbg !10758
  %16 = icmp eq i32 %15, 8, !dbg !10759
  br i1 %16, label %17, label %29, !dbg !10760

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10761
  %19 = and i32 %18, 4194304, !dbg !10762
  %20 = icmp eq i32 %19, 0, !dbg !10763
  br i1 %20, label %29, label %21, !dbg !10764

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10765
  %23 = and i32 %22, 131072, !dbg !10765
  %24 = icmp eq i32 %23, 0, !dbg !10765
  br i1 %24, label %66, label %25, !dbg !10768

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10769
  %27 = load i32, i32* %26, align 4, !dbg !10769
  %28 = icmp eq i32 %27, 0, !dbg !10770
  br i1 %28, label %311, label %66, !dbg !10771

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10772
  %31 = load i32, i32* %30, align 4, !dbg !10772
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10776

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10777
  %34 = or i32 %33, 65536, !dbg !10777
  br label %45, !dbg !10777

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10779
  %37 = or i32 %36, 262144, !dbg !10779
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10779
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10779
  %39 = or i32 %38, 65536, !dbg !10779
  br label %45, !dbg !10779

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10782
  %42 = and i32 %41, -65537, !dbg !10782
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10782
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10782
  %44 = and i32 %43, -262145, !dbg !10782
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10784
  %47 = load i32, i32* %30, align 4, !dbg !10785
  %48 = icmp eq i32 %47, 0, !dbg !10787
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !10788
  call void @llvm.dbg.value(metadata i32 %49, metadata !10734, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32 %49, metadata !10734, metadata !DIExpression()), !dbg !10744
  br i1 %48, label %58, label %50, !dbg !10789

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10790
  %52 = and i32 %51, 131072, !dbg !10792
  %53 = icmp eq i32 %52, 0, !dbg !10792
  br i1 %53, label %54, label %66, !dbg !10793

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !10794
  %56 = sub i32 %55, %49, !dbg !10797
  %57 = icmp ugt i32 %56, 100, !dbg !10798
  br i1 %57, label %311, label %50, !dbg !10799, !llvm.loop !10800

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10802
  %60 = and i32 %59, 131072, !dbg !10802
  %61 = icmp eq i32 %60, 0, !dbg !10802
  br i1 %61, label %66, label %62, !dbg !10804

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !10805
  %64 = sub i32 %63, %49, !dbg !10808
  %65 = icmp ugt i32 %64, 100, !dbg !10809
  br i1 %65, label %311, label %58, !dbg !10810, !llvm.loop !10811

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10813
  %68 = and i32 %67, 2, !dbg !10815
  %69 = icmp eq i32 %68, 0, !dbg !10816
  br i1 %69, label %121, label %70, !dbg !10817

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10818
  %72 = and i32 %71, 12, !dbg !10818
  %73 = icmp eq i32 %72, 0, !dbg !10821
  br i1 %73, label %82, label %74, !dbg !10822

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10823
  %76 = and i32 %75, 12, !dbg !10823
  %77 = icmp eq i32 %76, 8, !dbg !10824
  br i1 %77, label %78, label %90, !dbg !10825

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10826
  %80 = and i32 %79, 4194304, !dbg !10827
  %81 = icmp eq i32 %80, 0, !dbg !10828
  br i1 %81, label %82, label %90, !dbg !10829

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10830
  %84 = and i32 %83, 2, !dbg !10830
  %85 = icmp eq i32 %84, 0, !dbg !10830
  br i1 %85, label %114, label %86, !dbg !10833

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10834
  %88 = load i32, i32* %87, align 4, !dbg !10834
  %89 = icmp eq i32 %88, 1, !dbg !10835
  br i1 %89, label %114, label %311, !dbg !10836

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10837
  %92 = load i32, i32* %91, align 4, !dbg !10837
  %93 = icmp eq i32 %92, 0, !dbg !10840
  br i1 %93, label %104, label %94, !dbg !10841

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10842
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !10844
  call void @llvm.dbg.value(metadata i32 %95, metadata !10734, metadata !DIExpression()), !dbg !10744
  br label %96, !dbg !10845

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10846
  %98 = and i32 %97, 2, !dbg !10847
  %99 = icmp eq i32 %98, 0, !dbg !10847
  br i1 %99, label %100, label %114, !dbg !10845

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !10848
  %102 = sub i32 %101, %95, !dbg !10851
  %103 = icmp ugt i32 %102, 2, !dbg !10852
  br i1 %103, label %311, label %96, !dbg !10853, !llvm.loop !10854

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10856
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !10858
  call void @llvm.dbg.value(metadata i32 %105, metadata !10734, metadata !DIExpression()), !dbg !10744
  br label %106, !dbg !10859

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10860
  %108 = and i32 %107, 2, !dbg !10860
  %109 = icmp eq i32 %108, 0, !dbg !10860
  br i1 %109, label %121, label %110, !dbg !10859

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !10861
  %112 = sub i32 %111, %105, !dbg !10864
  %113 = icmp ugt i32 %112, 2, !dbg !10865
  br i1 %113, label %311, label %106, !dbg !10866, !llvm.loop !10867

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10869
  %116 = and i32 %115, -249, !dbg !10869
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10869
  %118 = load i32, i32* %117, align 4, !dbg !10869
  %119 = shl i32 %118, 3, !dbg !10869
  %120 = or i32 %119, %116, !dbg !10869
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10869
  br label %121, !dbg !10870

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10870
  %123 = and i32 %122, 8, !dbg !10872
  %124 = icmp eq i32 %123, 0, !dbg !10873
  br i1 %124, label %149, label %125, !dbg !10874

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10875
  %127 = load i32, i32* %126, align 4, !dbg !10875
  %128 = icmp eq i32 %127, 0, !dbg !10878
  br i1 %128, label %139, label %129, !dbg !10879

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10880
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %130, metadata !10734, metadata !DIExpression()), !dbg !10744
  br label %131, !dbg !10883

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10884
  %133 = and i32 %132, 2, !dbg !10885
  %134 = icmp eq i32 %133, 0, !dbg !10885
  br i1 %134, label %135, label %149, !dbg !10883

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !10886
  %137 = sub i32 %136, %130, !dbg !10889
  %138 = icmp ugt i32 %137, 2, !dbg !10890
  br i1 %138, label %311, label %131, !dbg !10891, !llvm.loop !10892

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10894
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !10896
  call void @llvm.dbg.value(metadata i32 %140, metadata !10734, metadata !DIExpression()), !dbg !10744
  br label %141, !dbg !10897

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10898
  %143 = and i32 %142, 2, !dbg !10898
  %144 = icmp eq i32 %143, 0, !dbg !10898
  br i1 %144, label %149, label %145, !dbg !10897

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !10899
  %147 = sub i32 %146, %140, !dbg !10902
  %148 = icmp ugt i32 %147, 2, !dbg !10903
  br i1 %148, label %311, label %141, !dbg !10904, !llvm.loop !10905

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10907
  %151 = and i32 %150, 4, !dbg !10908
  %152 = icmp eq i32 %151, 0, !dbg !10909
  br i1 %152, label %221, label %153, !dbg !10910

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10736, metadata !DIExpression()), !dbg !10911
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10912
  %155 = and i32 %154, 268435456, !dbg !10912
  %156 = icmp eq i32 %155, 0, !dbg !10912
  br i1 %156, label %157, label %164, !dbg !10913

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10914
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10914
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10740, metadata !DIExpression()), !dbg !10914
  store volatile i32 0, i32* %2, align 4, !dbg !10914
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10914
  %160 = or i32 %159, 268435456, !dbg !10914
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10914
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10914
  %162 = and i32 %161, 268435456, !dbg !10914
  store volatile i32 %162, i32* %2, align 4, !dbg !10914
  %163 = load volatile i32, i32* %2, align 4, !dbg !10914
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10915
  call void @llvm.dbg.value(metadata i32 1, metadata !10736, metadata !DIExpression()), !dbg !10911
  br label %164, !dbg !10916

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10736, metadata !DIExpression()), !dbg !10911
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10917
  %166 = and i32 %165, 256, !dbg !10917
  %167 = icmp eq i32 %166, 0, !dbg !10917
  br i1 %167, label %168, label %180, !dbg !10919

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10920
  %170 = or i32 %169, 256, !dbg !10920
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10920
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !10922
  call void @llvm.dbg.value(metadata i32 %171, metadata !10734, metadata !DIExpression()), !dbg !10744
  br label %172, !dbg !10923

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10924
  %174 = and i32 %173, 256, !dbg !10924
  %175 = icmp eq i32 %174, 0, !dbg !10924
  br i1 %175, label %176, label %180, !dbg !10923

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !10925
  %178 = sub i32 %177, %171, !dbg !10928
  %179 = icmp ugt i32 %178, 2, !dbg !10929
  br i1 %179, label %311, label %172, !dbg !10930, !llvm.loop !10931

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10933
  %182 = load i32, i32* %181, align 4, !dbg !10933
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10936

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10937
  %185 = or i32 %184, 1, !dbg !10937
  br label %196, !dbg !10937

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10939
  %188 = or i32 %187, 4, !dbg !10939
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10939
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10939
  %190 = or i32 %189, 1, !dbg !10939
  br label %196, !dbg !10939

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10942
  %193 = and i32 %192, -2, !dbg !10942
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10942
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10942
  %195 = and i32 %194, -5, !dbg !10942
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10944
  %198 = load i32, i32* %181, align 4, !dbg !10945
  %199 = icmp eq i32 %198, 0, !dbg !10947
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !10948
  call void @llvm.dbg.value(metadata i32 %200, metadata !10734, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32 %200, metadata !10734, metadata !DIExpression()), !dbg !10744
  br i1 %199, label %209, label %201, !dbg !10949

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10950
  %203 = and i32 %202, 2, !dbg !10952
  %204 = icmp eq i32 %203, 0, !dbg !10952
  br i1 %204, label %205, label %217, !dbg !10953

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !10954
  %207 = sub i32 %206, %200, !dbg !10957
  %208 = icmp ugt i32 %207, 5000, !dbg !10958
  br i1 %208, label %311, label %201, !dbg !10959, !llvm.loop !10960

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10962
  %211 = and i32 %210, 2, !dbg !10962
  %212 = icmp eq i32 %211, 0, !dbg !10962
  br i1 %212, label %217, label %213, !dbg !10964

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !10965
  %215 = sub i32 %214, %200, !dbg !10968
  %216 = icmp ugt i32 %215, 5000, !dbg !10969
  br i1 %216, label %311, label %209, !dbg !10970, !llvm.loop !10971

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10973

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10974
  %220 = and i32 %219, -268435457, !dbg !10974
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10974
  br label %221, !dbg !10977

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10978
  %223 = load i32, i32* %222, align 4, !dbg !10978
  %224 = icmp eq i32 %223, 0, !dbg !10980
  br i1 %224, label %310, label %225, !dbg !10981

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10982
  %227 = and i32 %226, 12, !dbg !10982
  %228 = icmp eq i32 %227, 8, !dbg !10985
  br i1 %228, label %277, label %229, !dbg !10986

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10987
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10990
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %231, metadata !10734, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32 %231, metadata !10734, metadata !DIExpression()), !dbg !10744
  br i1 %230, label %232, label %269, !dbg !10991

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10992
  %234 = and i32 %233, 33554432, !dbg !10992
  %235 = icmp eq i32 %234, 0, !dbg !10992
  br i1 %235, label %240, label %236, !dbg !10994

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !10995
  %238 = sub i32 %237, %231, !dbg !10998
  %239 = icmp ugt i32 %238, 2, !dbg !10999
  br i1 %239, label %311, label %232, !dbg !11000, !llvm.loop !11001

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11003
  %242 = load i32, i32* %241, align 4, !dbg !11003
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11003
  %244 = load i32, i32* %243, align 4, !dbg !11003
  %245 = or i32 %244, %242, !dbg !11003
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11003
  %247 = load i32, i32* %246, align 4, !dbg !11003
  %248 = shl i32 %247, 6, !dbg !11003
  %249 = or i32 %245, %248, !dbg !11003
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11003
  %251 = load i32, i32* %250, align 4, !dbg !11003
  %252 = shl i32 %251, 15, !dbg !11003
  %253 = add i32 %252, -65536, !dbg !11003
  %254 = and i32 %253, -65536, !dbg !11003
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11003
  %256 = load i32, i32* %255, align 4, !dbg !11003
  %257 = shl i32 %256, 24, !dbg !11003
  %258 = or i32 %249, %257, !dbg !11003
  %259 = or i32 %258, %254, !dbg !11003
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11003
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11004
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %260, metadata !10734, metadata !DIExpression()), !dbg !10744
  br label %261, !dbg !11006

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11007
  %263 = and i32 %262, 33554432, !dbg !11008
  %264 = icmp eq i32 %263, 0, !dbg !11008
  br i1 %264, label %265, label %310, !dbg !11006

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !11009
  %267 = sub i32 %266, %260, !dbg !11012
  %268 = icmp ugt i32 %267, 2, !dbg !11013
  br i1 %268, label %311, label %261, !dbg !11014, !llvm.loop !11015

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11017
  %271 = and i32 %270, 33554432, !dbg !11017
  %272 = icmp eq i32 %271, 0, !dbg !11017
  br i1 %272, label %310, label %273, !dbg !11019

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !11020
  %275 = sub i32 %274, %231, !dbg !11023
  %276 = icmp ugt i32 %275, 2, !dbg !11024
  br i1 %276, label %311, label %269, !dbg !11025, !llvm.loop !11026

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11028
  br i1 %278, label %311, label %279, !dbg !11031

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %280, metadata !10735, metadata !DIExpression()), !dbg !10744
  %281 = and i32 %280, 4194304, !dbg !11034
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11036
  %283 = load i32, i32* %282, align 4, !dbg !11036
  %284 = icmp eq i32 %281, %283, !dbg !11037
  br i1 %284, label %285, label %311, !dbg !11038

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11039
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11040
  %288 = load i32, i32* %287, align 4, !dbg !11040
  %289 = icmp eq i32 %286, %288, !dbg !11041
  br i1 %289, label %290, label %311, !dbg !11042

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11043
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11044
  %293 = load i32, i32* %292, align 4, !dbg !11044
  %294 = shl i32 %293, 6, !dbg !11045
  %295 = icmp eq i32 %291, %294, !dbg !11046
  br i1 %295, label %296, label %311, !dbg !11047

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11048
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11049
  %299 = load i32, i32* %298, align 4, !dbg !11049
  %300 = shl i32 %299, 15, !dbg !11050
  %301 = add i32 %300, -65536, !dbg !11050
  %302 = and i32 %301, -65536, !dbg !11050
  %303 = icmp eq i32 %297, %302, !dbg !11051
  br i1 %303, label %304, label %311, !dbg !11052

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11053
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11054
  %307 = load i32, i32* %306, align 4, !dbg !11054
  %308 = shl i32 %307, 24, !dbg !11055
  %309 = icmp eq i32 %305, %308, !dbg !11056
  br i1 %309, label %310, label %311, !dbg !11057

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11058

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10744
  ret i32 %312, !dbg !11059
}

; Function Attrs: optsize
declare !dbg !11060 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11062 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11075, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.value(metadata i32 %1, metadata !11076, metadata !DIExpression()), !dbg !11078
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11079
  br i1 %3, label %115, label %4, !dbg !11081

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11082
  %6 = and i32 %5, 7, !dbg !11082
  %7 = icmp ult i32 %6, %1, !dbg !11084
  br i1 %7, label %8, label %13, !dbg !11085

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11086
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11086
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11088
  %11 = and i32 %10, 7, !dbg !11088
  %12 = icmp eq i32 %11, %1, !dbg !11090
  br i1 %12, label %13, label %115, !dbg !11091

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11092
  %15 = load i32, i32* %14, align 4, !dbg !11092
  %16 = and i32 %15, 2, !dbg !11094
  %17 = icmp eq i32 %16, 0, !dbg !11095
  br i1 %17, label %39, label %18, !dbg !11096

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11097
  %20 = icmp eq i32 %19, 0, !dbg !11100
  br i1 %20, label %25, label %21, !dbg !11101

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11102
  %23 = or i32 %22, 7168, !dbg !11102
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11102
  %24 = load i32, i32* %14, align 4, !dbg !11104
  br label %25, !dbg !11106

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11104
  %27 = and i32 %26, 8, !dbg !11107
  %28 = icmp eq i32 %27, 0, !dbg !11108
  br i1 %28, label %32, label %29, !dbg !11109

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11110
  %31 = or i32 %30, 57344, !dbg !11110
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11110
  br label %32, !dbg !11112

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11113
  %34 = and i32 %33, -241, !dbg !11113
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11113
  %36 = load i32, i32* %35, align 4, !dbg !11113
  %37 = or i32 %34, %36, !dbg !11113
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11113
  %38 = load i32, i32* %14, align 4, !dbg !11114
  br label %39, !dbg !11116

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11114
  %41 = and i32 %40, 1, !dbg !11117
  %42 = icmp eq i32 %41, 0, !dbg !11118
  br i1 %42, label %73, label %43, !dbg !11119

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11120
  %45 = load i32, i32* %44, align 4, !dbg !11120
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11123

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11124
  %48 = and i32 %47, 131072, !dbg !11127
  %49 = icmp eq i32 %48, 0, !dbg !11127
  br i1 %49, label %115, label %58, !dbg !11128

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11129
  %52 = and i32 %51, 33554432, !dbg !11133
  %53 = icmp eq i32 %52, 0, !dbg !11133
  br i1 %53, label %115, label %58, !dbg !11134

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11135
  %56 = and i32 %55, 2, !dbg !11138
  %57 = icmp eq i32 %56, 0, !dbg !11138
  br i1 %57, label %115, label %58, !dbg !11139

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11140
  %60 = and i32 %59, -4, !dbg !11140
  %61 = or i32 %60, %45, !dbg !11140
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11140
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !11141
  call void @llvm.dbg.value(metadata i32 %62, metadata !11077, metadata !DIExpression()), !dbg !11078
  br label %63, !dbg !11142

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11143
  %65 = and i32 %64, 12, !dbg !11143
  %66 = load i32, i32* %44, align 4, !dbg !11144
  %67 = shl i32 %66, 2, !dbg !11145
  %68 = icmp eq i32 %65, %67, !dbg !11146
  br i1 %68, label %73, label %69, !dbg !11142

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !11147
  %71 = sub i32 %70, %62, !dbg !11150
  %72 = icmp ugt i32 %71, 5000, !dbg !11151
  br i1 %72, label %115, label %63, !dbg !11152, !llvm.loop !11153

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11155
  %75 = and i32 %74, 7, !dbg !11155
  %76 = icmp ugt i32 %75, %1, !dbg !11157
  br i1 %76, label %77, label %82, !dbg !11158

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11159
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11159
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11161
  %80 = and i32 %79, 7, !dbg !11161
  %81 = icmp eq i32 %80, %1, !dbg !11163
  br i1 %81, label %82, label %115, !dbg !11164

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11165
  %84 = and i32 %83, 4, !dbg !11167
  %85 = icmp eq i32 %84, 0, !dbg !11168
  br i1 %85, label %93, label %86, !dbg !11169

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11170
  %88 = and i32 %87, -7169, !dbg !11170
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11170
  %90 = load i32, i32* %89, align 4, !dbg !11170
  %91 = or i32 %88, %90, !dbg !11170
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11170
  %92 = load i32, i32* %14, align 4, !dbg !11172
  br label %93, !dbg !11174

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11172
  %95 = and i32 %94, 8, !dbg !11175
  %96 = icmp eq i32 %95, 0, !dbg !11176
  br i1 %96, label %104, label %97, !dbg !11177

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11178
  %99 = and i32 %98, -57345, !dbg !11178
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11178
  %101 = load i32, i32* %100, align 4, !dbg !11178
  %102 = shl i32 %101, 3, !dbg !11178
  %103 = or i32 %102, %99, !dbg !11178
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11178
  br label %104, !dbg !11180

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11181
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11182
  %107 = lshr i32 %106, 4, !dbg !11183
  %108 = and i32 %107, 15, !dbg !11183
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11184
  %110 = load i8, i8* %109, align 1, !dbg !11184
  %111 = zext i8 %110 to i32, !dbg !11184
  %112 = lshr i32 %105, %111, !dbg !11185
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11186
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11187
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !11188
  br label %115, !dbg !11189

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11078
  ret i32 %116, !dbg !11190
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11191 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11193, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11194, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11195, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11196, metadata !DIExpression()), !dbg !11197
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11198
  %2 = and i32 %1, 12, !dbg !11199
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11200

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11196, metadata !DIExpression()), !dbg !11197
  br label %29, !dbg !11201

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11204
  %6 = and i32 %5, 63, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %6, metadata !11193, metadata !DIExpression()), !dbg !11197
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11207
  %8 = and i32 %7, 4194304, !dbg !11207
  %9 = icmp eq i32 %8, 0, !dbg !11209
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11210
  %11 = lshr i32 %10, 6, !dbg !11210
  %12 = and i32 %11, 511, !dbg !11210
  br i1 %9, label %16, label %13, !dbg !11211

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !11212
  %15 = udiv i32 %14, %6, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %15, metadata !11194, metadata !DIExpression()), !dbg !11197
  br label %22, !dbg !11215

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !11216
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !11218
  %19 = zext i32 %6 to i64, !dbg !11219
  %20 = udiv i64 %18, %19, !dbg !11220
  %21 = trunc i64 %20 to i32, !dbg !11221
  call void @llvm.dbg.value(metadata i32 %21, metadata !11194, metadata !DIExpression()), !dbg !11197
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !11210
  call void @llvm.dbg.value(metadata i32 %23, metadata !11194, metadata !DIExpression()), !dbg !11197
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11222
  %25 = lshr i32 %24, 15, !dbg !11223
  %26 = and i32 %25, 6, !dbg !11223
  %27 = add nuw nsw i32 %26, 2, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %27, metadata !11195, metadata !DIExpression()), !dbg !11197
  %28 = udiv i32 %23, %27, !dbg !11224
  call void @llvm.dbg.value(metadata i32 %28, metadata !11196, metadata !DIExpression()), !dbg !11197
  br label %29, !dbg !11225

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !11226
  call void @llvm.dbg.value(metadata i32 %30, metadata !11196, metadata !DIExpression()), !dbg !11197
  ret i32 %30, !dbg !11227
}

; Function Attrs: optsize
declare !dbg !11228 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11231 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11235, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.value(metadata i32 %1, metadata !11236, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.value(metadata i32 %2, metadata !11237, metadata !DIExpression()), !dbg !11255
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11256
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11256
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11238, metadata !DIExpression()), !dbg !11257
  %8 = icmp eq i32 %0, 0, !dbg !11258
  br i1 %8, label %9, label %23, !dbg !11259

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11260
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11260
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11248, metadata !DIExpression()), !dbg !11260
  store volatile i32 0, i32* %5, align 4, !dbg !11260
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11260
  %12 = or i32 %11, 1, !dbg !11260
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11260
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11260
  %14 = and i32 %13, 1, !dbg !11260
  store volatile i32 %14, i32* %5, align 4, !dbg !11260
  %15 = load volatile i32, i32* %5, align 4, !dbg !11260
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11261
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11262
  store i32 256, i32* %16, align 4, !dbg !11263
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11264
  store i32 2, i32* %17, align 4, !dbg !11265
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11266
  store i32 3, i32* %18, align 4, !dbg !11267
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11268
  store i32 0, i32* %19, align 4, !dbg !11269
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11270
  store i32 0, i32* %20, align 4, !dbg !11271
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11272
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11273
  %22 = and i32 %21, -123731969, !dbg !11273
  br label %38, !dbg !11274

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11275
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11275
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11252, metadata !DIExpression()), !dbg !11275
  store volatile i32 0, i32* %6, align 4, !dbg !11275
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11275
  %26 = or i32 %25, 4, !dbg !11275
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11275
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11275
  %28 = and i32 %27, 4, !dbg !11275
  store volatile i32 %28, i32* %6, align 4, !dbg !11275
  %29 = load volatile i32, i32* %6, align 4, !dbg !11275
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11276
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11277
  store i32 512, i32* %30, align 4, !dbg !11278
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11279
  store i32 2, i32* %31, align 4, !dbg !11280
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11281
  store i32 3, i32* %32, align 4, !dbg !11282
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11283
  store i32 0, i32* %33, align 4, !dbg !11284
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11285
  store i32 0, i32* %34, align 4, !dbg !11286
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11287
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11288
  %36 = and i32 %35, 134217727, !dbg !11288
  %37 = shl i32 %2, 3, !dbg !11288
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11289
  %42 = or i32 %41, %40, !dbg !11289
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11289
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11290
  ret void, !dbg !11290
}

; Function Attrs: optsize
declare !dbg !11291 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11295 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11296
  ret void, !dbg !11297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11298 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11299
  ret void, !dbg !11300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11301 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11302
  ret i32 %1, !dbg !11303
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11304 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11305
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11306
  %3 = lshr i32 %2, 10, !dbg !11307
  %4 = and i32 %3, 7, !dbg !11307
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11308
  %6 = load i8, i8* %5, align 1, !dbg !11308
  %7 = zext i8 %6 to i32, !dbg !11308
  %8 = lshr i32 %1, %7, !dbg !11309
  ret i32 %8, !dbg !11310
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11311 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11312
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11313
  %3 = lshr i32 %2, 13, !dbg !11314
  %4 = and i32 %3, 7, !dbg !11314
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11315
  %6 = load i8, i8* %5, align 1, !dbg !11315
  %7 = zext i8 %6 to i32, !dbg !11315
  %8 = lshr i32 %1, %7, !dbg !11316
  ret i32 %8, !dbg !11317
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11318 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11322, metadata !DIExpression()), !dbg !11323
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11324
  store i32 15, i32* %2, align 4, !dbg !11325
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11326
  %4 = and i32 %3, 262144, !dbg !11328
  %5 = icmp eq i32 %4, 0, !dbg !11329
  br i1 %5, label %8, label %6, !dbg !11330

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11331
  store i32 327680, i32* %7, align 4, !dbg !11333
  br label %15, !dbg !11334

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11335
  %10 = and i32 %9, 65536, !dbg !11337
  %11 = icmp eq i32 %10, 0, !dbg !11338
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11339
  br i1 %11, label %14, label %13, !dbg !11340

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11341
  br label %15, !dbg !11343

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11344
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11346
  %17 = and i32 %16, 1, !dbg !11348
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11349
  store i32 %17, i32* %18, align 4, !dbg !11351
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11352
  %20 = lshr i32 %19, 3, !dbg !11353
  %21 = and i32 %20, 31, !dbg !11353
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11354
  store i32 %21, i32* %22, align 4, !dbg !11355
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11356
  %24 = and i32 %23, 4, !dbg !11358
  %25 = icmp eq i32 %24, 0, !dbg !11359
  br i1 %25, label %28, label %26, !dbg !11360

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11361
  store i32 5, i32* %27, align 4, !dbg !11363
  br label %35, !dbg !11364

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11365
  %30 = and i32 %29, 1, !dbg !11367
  %31 = icmp eq i32 %30, 0, !dbg !11368
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11369
  br i1 %31, label %34, label %33, !dbg !11370

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11371
  br label %35, !dbg !11373

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11374
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11376
  %37 = and i32 %36, 1, !dbg !11378
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11379
  store i32 %37, i32* %38, align 4, !dbg !11381
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11382
  %40 = and i32 %39, 16777216, !dbg !11384
  %41 = icmp eq i32 %40, 0, !dbg !11385
  %42 = select i1 %41, i32 1, i32 2, !dbg !11386
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11387
  store i32 %42, i32* %43, align 4, !dbg !11389
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11390
  %45 = and i32 %44, 4194304, !dbg !11391
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11392
  store i32 %45, i32* %46, align 4, !dbg !11393
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11394
  %48 = and i32 %47, 63, !dbg !11395
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11396
  store i32 %48, i32* %49, align 4, !dbg !11397
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11398
  %51 = lshr i32 %50, 6, !dbg !11399
  %52 = and i32 %51, 511, !dbg !11399
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11400
  store i32 %52, i32* %53, align 4, !dbg !11401
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11402
  %55 = shl i32 %54, 1, !dbg !11403
  %56 = and i32 %55, 393216, !dbg !11403
  %57 = add nuw nsw i32 %56, 131072, !dbg !11403
  %58 = lshr exact i32 %57, 16, !dbg !11404
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11405
  store i32 %58, i32* %59, align 4, !dbg !11406
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11407
  %61 = lshr i32 %60, 24, !dbg !11408
  %62 = and i32 %61, 15, !dbg !11408
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11409
  store i32 %62, i32* %63, align 4, !dbg !11410
  ret void, !dbg !11411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11416, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.value(metadata i32* %1, metadata !11417, metadata !DIExpression()), !dbg !11418
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11419
  store i32 15, i32* %3, align 4, !dbg !11420
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11421
  %5 = and i32 %4, 3, !dbg !11422
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11423
  store i32 %5, i32* %6, align 4, !dbg !11424
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11425
  %8 = and i32 %7, 240, !dbg !11426
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11427
  store i32 %8, i32* %9, align 4, !dbg !11428
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11429
  %11 = and i32 %10, 7168, !dbg !11430
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11431
  store i32 %11, i32* %12, align 4, !dbg !11432
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11433
  %14 = lshr i32 %13, 3, !dbg !11434
  %15 = and i32 %14, 7168, !dbg !11434
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11435
  store i32 %15, i32* %16, align 4, !dbg !11436
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11437
  %18 = and i32 %17, 7, !dbg !11438
  store i32 %18, i32* %1, align 4, !dbg !11439
  ret void, !dbg !11440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11441 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11442
  %2 = and i32 %1, 128, !dbg !11442
  %3 = icmp eq i32 %2, 0, !dbg !11442
  br i1 %3, label %5, label %4, !dbg !11444

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11445
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11447
  br label %5, !dbg !11448

5:                                                ; preds = %4, %0
  ret void, !dbg !11449
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11450 {
  ret void, !dbg !11451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11455, metadata !DIExpression()), !dbg !11456
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11457
  ret void, !dbg !11458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11462, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i32 1000, metadata !11463, metadata !DIExpression()), !dbg !11464
  %2 = udiv i32 %0, 1000, !dbg !11465
  %3 = add nsw i32 %2, -1, !dbg !11466
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11467
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11468
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11469
  ret void, !dbg !11470
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11471 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11473, metadata !DIExpression()), !dbg !11475
  %3 = bitcast i32* %2 to i8*, !dbg !11476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11476
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11474, metadata !DIExpression()), !dbg !11477
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11478
  store volatile i32 %4, i32* %2, align 4, !dbg !11477
  %5 = load volatile i32, i32* %2, align 4, !dbg !11479
  %6 = icmp eq i32 %0, -1, !dbg !11480
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11473, metadata !DIExpression()), !dbg !11475
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11475
  call void @llvm.dbg.value(metadata i32 %8, metadata !11473, metadata !DIExpression()), !dbg !11475
  br label %9, !dbg !11482

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11473, metadata !DIExpression()), !dbg !11475
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11483
  call void @llvm.dbg.value(metadata i32 undef, metadata !11473, metadata !DIExpression()), !dbg !11475
  %12 = shl i32 %11, 15, !dbg !11475
  %13 = ashr i32 %12, 31, !dbg !11475
  %14 = add i32 %13, %10, !dbg !11475
  call void @llvm.dbg.value(metadata i32 %14, metadata !11473, metadata !DIExpression()), !dbg !11475
  %15 = icmp eq i32 %14, 0, !dbg !11482
  br i1 %15, label %16, label %9, !dbg !11482

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11486
  ret void, !dbg !11486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11489, metadata !DIExpression()), !dbg !11490
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11491
  ret void, !dbg !11492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11498, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.value(metadata i32 0, metadata !11501, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.value(metadata i32 0, metadata !11502, metadata !DIExpression()), !dbg !11503
  %2 = icmp eq i32 %0, 0, !dbg !11504
  br i1 %2, label %50, label %3, !dbg !11506

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11507
  %5 = icmp eq i32 %4, 49152, !dbg !11510
  br i1 %5, label %6, label %15, !dbg !11511

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11501, metadata !DIExpression()), !dbg !11503
  %7 = add i32 %0, -64000001, !dbg !11512
  %8 = icmp ult i32 %7, 26000000, !dbg !11512
  br i1 %8, label %15, label %9, !dbg !11512

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11515
  %11 = select i1 %10, i32 0, i32 3, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %11, metadata !11501, metadata !DIExpression()), !dbg !11503
  %12 = add i32 %0, -30000001, !dbg !11518
  %13 = icmp ult i32 %12, 60000000, !dbg !11518
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11518
  call void @llvm.dbg.value(metadata i32 %14, metadata !11501, metadata !DIExpression()), !dbg !11503
  br label %15, !dbg !11518

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11503
  call void @llvm.dbg.value(metadata i32 %16, metadata !11501, metadata !DIExpression()), !dbg !11503
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11521
  %18 = icmp eq i32 %17, 32768, !dbg !11523
  br i1 %18, label %19, label %27, !dbg !11524

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11525
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11528
  br i1 %22, label %27, label %23, !dbg !11528

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11529
  %25 = and i1 %24, %21, !dbg !11532
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11532
  call void @llvm.dbg.value(metadata i32 %26, metadata !11501, metadata !DIExpression()), !dbg !11503
  br label %27, !dbg !11532

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11533
  call void @llvm.dbg.value(metadata i32 %28, metadata !11501, metadata !DIExpression()), !dbg !11503
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11534
  %30 = icmp eq i32 %29, 16384, !dbg !11536
  br i1 %30, label %31, label %39, !dbg !11537

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11538
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11541
  br i1 %34, label %39, label %35, !dbg !11541

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11542
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11545
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11545
  call void @llvm.dbg.value(metadata i32 %38, metadata !11501, metadata !DIExpression()), !dbg !11503
  br label %39, !dbg !11545

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11533
  call void @llvm.dbg.value(metadata i32 %40, metadata !11501, metadata !DIExpression()), !dbg !11503
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !11546
  call void @llvm.dbg.value(metadata i32 2, metadata !11499, metadata !DIExpression()), !dbg !11503
  br label %41, !dbg !11547

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11533
  call void @llvm.dbg.value(metadata i32 %42, metadata !11499, metadata !DIExpression()), !dbg !11503
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %43, metadata !11500, metadata !DIExpression()), !dbg !11503
  %44 = add nsw i32 %42, -1, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %44, metadata !11499, metadata !DIExpression()), !dbg !11503
  %45 = icmp ne i32 %43, %40, !dbg !11551
  %46 = icmp ne i32 %44, 0, !dbg !11552
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11552
  br i1 %47, label %41, label %48, !dbg !11553, !llvm.loop !11554

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11556
  call void @llvm.dbg.value(metadata i32 %51, metadata !11502, metadata !DIExpression()), !dbg !11503
  ret i32 %51, !dbg !11557
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11558 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11560
  %2 = and i32 %1, 49152, !dbg !11560
  ret i32 %2, !dbg !11561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11564, metadata !DIExpression()), !dbg !11565
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11566
  %3 = and i32 %2, -8, !dbg !11566
  %4 = or i32 %3, %0, !dbg !11566
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11566
  ret void, !dbg !11567
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11568 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11569
  %2 = and i32 %1, 7, !dbg !11569
  ret i32 %2, !dbg !11570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11571 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11589, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11590, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 0, metadata !11591, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 0, metadata !11592, metadata !DIExpression()), !dbg !11593
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11594
  %4 = icmp eq i32 %3, 0, !dbg !11596
  br i1 %4, label %5, label %21, !dbg !11597

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !11598
  call void @llvm.dbg.value(metadata i32 %6, metadata !11592, metadata !DIExpression()), !dbg !11593
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #26, !dbg !11600
  %8 = icmp eq i32 %7, 1, !dbg !11602
  br i1 %8, label %13, label %9, !dbg !11603

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.79() #26, !dbg !11604
  br label %10, !dbg !11606

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #26, !dbg !11607
  %12 = icmp eq i32 %11, 1, !dbg !11608
  br i1 %12, label %13, label %10, !dbg !11606, !llvm.loop !11609

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11611
  %15 = load i32, i32* %14, align 4, !dbg !11611
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11612
  %17 = load i32, i32* %16, align 4, !dbg !11612
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11613
  %19 = load i32, i32* %18, align 4, !dbg !11613
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11614
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %20, metadata !11591, metadata !DIExpression()), !dbg !11593
  br label %21, !dbg !11616

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11617
  call void @llvm.dbg.value(metadata i32 %22, metadata !11591, metadata !DIExpression()), !dbg !11593
  ret i32 %22, !dbg !11618
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11619 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11623, metadata !DIExpression()), !dbg !11624
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #26, !dbg !11625
  %2 = icmp ne i32 %1, 0, !dbg !11627
  call void @llvm.dbg.value(metadata i1 %2, metadata !11623, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11624
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11628
  %4 = icmp ne i32 %3, 0, !dbg !11630
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11631
  %6 = zext i1 %5 to i32, !dbg !11631
  call void @llvm.dbg.value(metadata i32 %6, metadata !11623, metadata !DIExpression()), !dbg !11624
  ret i32 %6, !dbg !11632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11637, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11638, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.value(metadata i32 0, metadata !11639, metadata !DIExpression()), !dbg !11640
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11641
  %4 = load i32, i32* %3, align 4, !dbg !11641
  %5 = and i32 %4, 63, !dbg !11642
  %6 = udiv i32 %0, %5, !dbg !11643
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()), !dbg !11640
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11644
  %8 = load i32, i32* %7, align 4, !dbg !11644
  %9 = and i32 %8, 511, !dbg !11645
  %10 = mul i32 %9, %6, !dbg !11646
  call void @llvm.dbg.value(metadata i32 %10, metadata !11639, metadata !DIExpression()), !dbg !11640
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11647
  %12 = load i32, i32* %11, align 4, !dbg !11647
  %13 = lshr i32 %12, 15, !dbg !11648
  %14 = and i32 %13, 131070, !dbg !11648
  %15 = add nuw nsw i32 %14, 2, !dbg !11648
  %16 = udiv i32 %10, %15, !dbg !11649
  call void @llvm.dbg.value(metadata i32 %16, metadata !11639, metadata !DIExpression()), !dbg !11640
  ret i32 %16, !dbg !11650
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.78() unnamed_addr #16 !dbg !11651 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11652
  %2 = lshr i32 %1, 1, !dbg !11653
  %3 = and i32 %2, 1, !dbg !11653
  ret i32 %3, !dbg !11654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.79() unnamed_addr #15 !dbg !11655 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11656
  %2 = or i32 %1, 1, !dbg !11656
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11656
  ret void, !dbg !11657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11660, metadata !DIExpression()), !dbg !11664
  call void @llvm.dbg.value(metadata i32 %1, metadata !11661, metadata !DIExpression()), !dbg !11664
  call void @llvm.dbg.value(metadata i32 %2, metadata !11662, metadata !DIExpression()), !dbg !11664
  call void @llvm.dbg.value(metadata i32 %3, metadata !11663, metadata !DIExpression()), !dbg !11664
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11665
  %6 = and i32 %5, -4227072, !dbg !11665
  %7 = or i32 %1, %0, !dbg !11665
  %8 = shl i32 %2, 6, !dbg !11665
  %9 = or i32 %7, %8, !dbg !11665
  %10 = or i32 %9, %6, !dbg !11665
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11665
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11666
  %12 = and i32 %11, -196609, !dbg !11666
  %13 = or i32 %12, %3, !dbg !11666
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11666
  ret void, !dbg !11667
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11672, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11673, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 0, metadata !11674, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 0, metadata !11675, metadata !DIExpression()), !dbg !11676
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11677
  %4 = load i32, i32* %3, align 4, !dbg !11677
  %5 = lshr i32 %4, 4, !dbg !11677
  %6 = and i32 %5, 15, !dbg !11677
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11677
  %8 = load i8, i8* %7, align 1, !dbg !11677
  %9 = zext i8 %8 to i32, !dbg !11677
  %10 = lshr i32 %0, %9, !dbg !11677
  call void @llvm.dbg.value(metadata i32 %10, metadata !11675, metadata !DIExpression()), !dbg !11676
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11678
  %12 = icmp ult i32 %11, %10, !dbg !11680
  br i1 %12, label %13, label %16, !dbg !11681

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %14, metadata !11674, metadata !DIExpression()), !dbg !11676
  %15 = icmp eq i32 %14, 0, !dbg !11684
  br i1 %15, label %16, label %30, !dbg !11686

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.81() #26, !dbg !11687
  br label %17, !dbg !11689

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #26, !dbg !11690
  %19 = icmp eq i32 %18, 1, !dbg !11691
  br i1 %19, label %20, label %17, !dbg !11689, !llvm.loop !11692

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11694
  tail call fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %21) #26, !dbg !11695
  tail call fastcc void @LL_RCC_SetSysClkSource.84() #26, !dbg !11696
  br label %22, !dbg !11697

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.85() #26, !dbg !11698
  %24 = icmp eq i32 %23, 8, !dbg !11699
  br i1 %24, label %25, label %22, !dbg !11697, !llvm.loop !11700

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11702
  %27 = load i32, i32* %26, align 4, !dbg !11702
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %27) #26, !dbg !11703
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11704
  %29 = load i32, i32* %28, align 4, !dbg !11704
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %29) #26, !dbg !11705
  br label %30, !dbg !11706

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11707
  %33 = icmp ugt i32 %32, %10, !dbg !11709
  br i1 %33, label %34, label %36, !dbg !11710

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %35, metadata !11674, metadata !DIExpression()), !dbg !11676
  br label %36, !dbg !11713

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11676
  call void @llvm.dbg.value(metadata i32 %37, metadata !11674, metadata !DIExpression()), !dbg !11676
  %38 = icmp eq i32 %37, 0, !dbg !11714
  br i1 %38, label %39, label %40, !dbg !11716

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11717
  br label %40, !dbg !11719

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.81() unnamed_addr #15 !dbg !11721 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11722
  %2 = or i32 %1, 16777216, !dbg !11722
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11722
  ret void, !dbg !11723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.82() unnamed_addr #16 !dbg !11724 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11725
  %2 = lshr i32 %1, 25, !dbg !11726
  %3 = and i32 %2, 1, !dbg !11726
  ret i32 %3, !dbg !11727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %0) unnamed_addr #15 !dbg !11728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11730, metadata !DIExpression()), !dbg !11731
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11732
  %3 = and i32 %2, -241, !dbg !11732
  %4 = or i32 %3, %0, !dbg !11732
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11732
  ret void, !dbg !11733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.84() unnamed_addr #15 !dbg !11734 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11736, metadata !DIExpression()), !dbg !11737
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11738
  %2 = and i32 %1, -4, !dbg !11738
  %3 = or i32 %2, 2, !dbg !11738
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11738
  ret void, !dbg !11739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.85() unnamed_addr #16 !dbg !11740 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11741
  %2 = and i32 %1, 12, !dbg !11741
  ret i32 %2, !dbg !11742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %0) unnamed_addr #15 !dbg !11743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11745, metadata !DIExpression()), !dbg !11746
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11747
  %3 = and i32 %2, -7169, !dbg !11747
  %4 = or i32 %3, %0, !dbg !11747
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11747
  ret void, !dbg !11748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %0) unnamed_addr #15 !dbg !11749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11751, metadata !DIExpression()), !dbg !11752
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11753
  %3 = and i32 %2, -57345, !dbg !11753
  %4 = or i32 %3, %0, !dbg !11753
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11753
  ret void, !dbg !11754
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11755 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11756
  %2 = lshr i32 %1, 27, !dbg !11757
  %3 = and i32 %2, 1, !dbg !11757
  ret i32 %3, !dbg !11758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11763, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 %1, metadata !11764, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11765, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11766, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 0, metadata !11767, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 0, metadata !11768, metadata !DIExpression()), !dbg !11769
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11770
  %6 = icmp eq i32 %5, 0, !dbg !11772
  br i1 %6, label %7, label %27, !dbg !11773

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !11774
  call void @llvm.dbg.value(metadata i32 %8, metadata !11768, metadata !DIExpression()), !dbg !11769
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11776
  %10 = icmp eq i32 %9, 1, !dbg !11778
  br i1 %10, label %19, label %11, !dbg !11779

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11780
  br i1 %12, label %13, label %14, !dbg !11783

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11784
  br label %15, !dbg !11786

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !11787
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !11789
  br label %16, !dbg !11790

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11791
  %18 = icmp eq i32 %17, 1, !dbg !11792
  br i1 %18, label %19, label %16, !dbg !11790, !llvm.loop !11793

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11795
  %21 = load i32, i32* %20, align 4, !dbg !11795
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11796
  %23 = load i32, i32* %22, align 4, !dbg !11796
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11797
  %25 = load i32, i32* %24, align 4, !dbg !11797
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11798
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %26, metadata !11767, metadata !DIExpression()), !dbg !11769
  br label %27, !dbg !11800

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11801
  call void @llvm.dbg.value(metadata i32 %28, metadata !11767, metadata !DIExpression()), !dbg !11769
  ret i32 %28, !dbg !11802
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !11803 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11804
  %2 = lshr i32 %1, 17, !dbg !11805
  %3 = and i32 %2, 1, !dbg !11805
  ret i32 %3, !dbg !11806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11807 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11808
  %2 = or i32 %1, 262144, !dbg !11808
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11808
  ret void, !dbg !11809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !11810 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11811
  %2 = and i32 %1, -262145, !dbg !11811
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11811
  ret void, !dbg !11812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !11813 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11814
  %2 = or i32 %1, 65536, !dbg !11814
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11814
  ret void, !dbg !11815
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11816 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11819, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.value(metadata i32 undef, metadata !11819, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.value(metadata i32 undef, metadata !11819, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11835
  ret void, !dbg !11836
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11837 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11841, metadata !DIExpression()), !dbg !11843
  %2 = icmp eq i8* %0, null, !dbg !11844
  br i1 %2, label %29, label %3, !dbg !11846

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11847
  %5 = icmp eq i8 %4, 0, !dbg !11848
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11849
  br i1 %6, label %29, label %8, !dbg !11849

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11842, metadata !DIExpression()), !dbg !11843
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11850

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11842, metadata !DIExpression()), !dbg !11843
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11852
  br i1 %10, label %11, label %15, !dbg !11857

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11858
  %13 = load i8*, i8** %12, align 4, !dbg !11858
  %14 = icmp eq i8* %13, %0, !dbg !11859
  br i1 %14, label %29, label %15, !dbg !11860

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11861
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11842, metadata !DIExpression()), !dbg !11843
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11862
  br i1 %17, label %7, label %8, !dbg !11863, !llvm.loop !11864

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11842, metadata !DIExpression()), !dbg !11843
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11866
  br i1 %20, label %21, label %26, !dbg !11870

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11871
  %23 = load i8*, i8** %22, align 4, !dbg !11871
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !11872
  %25 = icmp eq i32 %24, 0, !dbg !11873
  br i1 %25, label %29, label %26, !dbg !11874

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11875
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11842, metadata !DIExpression()), !dbg !11843
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11876
  br i1 %28, label %29, label %18, !dbg !11850, !llvm.loop !11877

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11843
  ret %struct.device* %30, !dbg !11879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11884, metadata !DIExpression()), !dbg !11885
  %2 = icmp eq %struct.device* %0, null, !dbg !11886
  br i1 %2, label %14, label %3, !dbg !11888

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11889
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11889
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11890
  %7 = load i8, i8* %6, align 1, !dbg !11890
  %8 = and i8 %7, 1, !dbg !11890
  %9 = icmp eq i8 %8, 0, !dbg !11890
  br i1 %9, label %14, label %10, !dbg !11891

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11892
  %12 = load i8, i8* %11, align 1, !dbg !11892
  %13 = icmp eq i8 %12, 0, !dbg !11893
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11885
  ret i1 %15, !dbg !11894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11895 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11900, metadata !DIExpression()), !dbg !11901
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11902
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11903
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11904 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11912, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11913, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i8* %2, metadata !11914, metadata !DIExpression()), !dbg !11917
  %5 = bitcast i32* %4 to i8*, !dbg !11918
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11918
  call void @llvm.dbg.value(metadata i32 0, metadata !11915, metadata !DIExpression()), !dbg !11917
  store i32 0, i32* %4, align 4, !dbg !11919
  call void @llvm.dbg.value(metadata i32* %4, metadata !11915, metadata !DIExpression(DW_OP_deref)), !dbg !11917
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11920
  call void @llvm.dbg.value(metadata i16* %6, metadata !11916, metadata !DIExpression()), !dbg !11917
  %7 = load i32, i32* %4, align 4, !dbg !11921
  call void @llvm.dbg.value(metadata i32 %7, metadata !11915, metadata !DIExpression()), !dbg !11917
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11922
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11923
  ret i32 %8, !dbg !11924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11925 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11929, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i32* %1, metadata !11930, metadata !DIExpression()), !dbg !11935
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11936
  %4 = load i16*, i16** %3, align 4, !dbg !11936
  call void @llvm.dbg.value(metadata i16* %4, metadata !11931, metadata !DIExpression()), !dbg !11935
  %5 = icmp eq i16* %4, null, !dbg !11937
  br i1 %5, label %14, label %6, !dbg !11938

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11939
  call void @llvm.dbg.value(metadata i32 %7, metadata !11932, metadata !DIExpression()), !dbg !11939
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11940
  %9 = load i16, i16* %8, align 2, !dbg !11940
  %10 = add i16 %9, -32767, !dbg !11941
  %11 = icmp ult i16 %10, 2, !dbg !11941
  %12 = add i32 %7, 1, !dbg !11942
  call void @llvm.dbg.value(metadata i32 %12, metadata !11932, metadata !DIExpression()), !dbg !11939
  br i1 %11, label %13, label %6, !dbg !11941, !llvm.loop !11944

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11947
  br label %14, !dbg !11948

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11950 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11954, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.value(metadata i32 %1, metadata !11955, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11956, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.value(metadata i8* %3, metadata !11957, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.value(metadata i32 0, metadata !11958, metadata !DIExpression()), !dbg !11966
  %5 = icmp eq i32 %1, 0, !dbg !11967
  br i1 %5, label %16, label %8, !dbg !11968

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11958, metadata !DIExpression()), !dbg !11966
  %7 = icmp eq i32 %15, %1, !dbg !11967
  br i1 %7, label %16, label %8, !dbg !11968, !llvm.loop !11969

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11958, metadata !DIExpression()), !dbg !11966
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11971
  %11 = load i16, i16* %10, align 2, !dbg !11971
  call void @llvm.dbg.value(metadata i16 %11, metadata !11960, metadata !DIExpression()), !dbg !11972
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11973
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11963, metadata !DIExpression()), !dbg !11972
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %13, metadata !11964, metadata !DIExpression()), !dbg !11972
  %14 = icmp slt i32 %13, 0, !dbg !11975
  %15 = add nuw i32 %9, 1, !dbg !11977
  call void @llvm.dbg.value(metadata i32 %15, metadata !11958, metadata !DIExpression()), !dbg !11966
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !11979 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11983, metadata !DIExpression()), !dbg !11986
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11984, metadata !DIExpression()), !dbg !11986
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11985, metadata !DIExpression()), !dbg !11986
  %2 = sext i16 %0 to i32, !dbg !11987
  %3 = icmp slt i16 %0, 1, !dbg !11989
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11990
  %6 = add nsw i32 %2, -1, !dbg !11990
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11990
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11990
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11984, metadata !DIExpression()), !dbg !11986
  ret %struct.device* %8, !dbg !11991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11992 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11994, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11995, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i8* %2, metadata !11996, metadata !DIExpression()), !dbg !11999
  %5 = bitcast i32* %4 to i8*, !dbg !12000
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12000
  call void @llvm.dbg.value(metadata i32 0, metadata !11997, metadata !DIExpression()), !dbg !11999
  store i32 0, i32* %4, align 4, !dbg !12001
  call void @llvm.dbg.value(metadata i32* %4, metadata !11997, metadata !DIExpression(DW_OP_deref)), !dbg !11999
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12002
  call void @llvm.dbg.value(metadata i16* %6, metadata !11998, metadata !DIExpression()), !dbg !11999
  %7 = load i32, i32* %4, align 4, !dbg !12003
  call void @llvm.dbg.value(metadata i32 %7, metadata !11997, metadata !DIExpression()), !dbg !11999
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12004
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12005
  ret i32 %8, !dbg !12006
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12009, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.value(metadata i32* %1, metadata !12010, metadata !DIExpression()), !dbg !12014
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12015
  %4 = load i16*, i16** %3, align 4, !dbg !12015
  call void @llvm.dbg.value(metadata i16* %4, metadata !12011, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.value(metadata i32 0, metadata !12012, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.value(metadata i32 0, metadata !12013, metadata !DIExpression()), !dbg !12014
  %5 = icmp eq i16* %4, null, !dbg !12016
  br i1 %5, label %22, label %6, !dbg !12018

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12012, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.value(metadata i16* %8, metadata !12011, metadata !DIExpression()), !dbg !12014
  %9 = load i16, i16* %8, align 2, !dbg !12019
  %10 = icmp eq i16 %9, -32768, !dbg !12023
  call void @llvm.dbg.value(metadata i32 undef, metadata !12012, metadata !DIExpression()), !dbg !12014
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12024
  call void @llvm.dbg.value(metadata i16* %11, metadata !12011, metadata !DIExpression()), !dbg !12014
  %12 = zext i1 %10 to i32, !dbg !12025
  %13 = add i32 %7, %12, !dbg !12025
  call void @llvm.dbg.value(metadata i32 %13, metadata !12012, metadata !DIExpression()), !dbg !12014
  %14 = icmp eq i32 %13, 2, !dbg !12026
  br i1 %14, label %15, label %6, !dbg !12027

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12014
  call void @llvm.dbg.value(metadata i32 %16, metadata !12013, metadata !DIExpression()), !dbg !12014
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12028
  %18 = load i16, i16* %17, align 2, !dbg !12028
  %19 = icmp eq i16 %18, 32767, !dbg !12029
  %20 = add i32 %16, 1, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %20, metadata !12013, metadata !DIExpression()), !dbg !12014
  br i1 %19, label %21, label %15, !dbg !12032, !llvm.loop !12033

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12035
  br label %22, !dbg !12036

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12037
  call void @llvm.dbg.value(metadata i16* %23, metadata !12011, metadata !DIExpression()), !dbg !12014
  ret i16* %23, !dbg !12038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12039 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12042
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12043
  ret i32* %2, !dbg !12044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12045 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12193, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12194, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12195, metadata !DIExpression()), !dbg !12196
  ret void, !dbg !12197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12202, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.value(metadata i32 %1, metadata !12203, metadata !DIExpression()), !dbg !12204
  ret void, !dbg !12205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12206 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12210, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata i32 %1, metadata !12211, metadata !DIExpression()), !dbg !12212
  ret void, !dbg !12213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12218, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i8* %1, metadata !12219, metadata !DIExpression()), !dbg !12220
  ret i32 -134, !dbg !12221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12226, metadata !DIExpression()), !dbg !12228
  call void @llvm.dbg.value(metadata i8* %1, metadata !12227, metadata !DIExpression()), !dbg !12228
  ret i32 -134, !dbg !12229
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12233, metadata !DIExpression()), !dbg !12234
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12235, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12238, metadata !DIExpression()) #25, !dbg !12242
  call void @llvm.dbg.value(metadata i32 undef, metadata !12239, metadata !DIExpression()) #25, !dbg !12242
  br label %3, !dbg !12243

3:                                                ; preds = %3, %1
  br label %3, !dbg !12244, !llvm.loop !12247
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12254, metadata !DIExpression()), !dbg !12256
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12255, metadata !DIExpression()), !dbg !12256
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12257
  unreachable, !dbg !12257
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12260, metadata !DIExpression()), !dbg !12261
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12262
  unreachable, !dbg !12262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12265, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12266, metadata !DIExpression()), !dbg !12269
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12270, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12238, metadata !DIExpression()) #25, !dbg !12272
  call void @llvm.dbg.value(metadata i32 undef, metadata !12239, metadata !DIExpression()) #25, !dbg !12272
  call void @llvm.dbg.value(metadata i32 undef, metadata !12267, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12268, metadata !DIExpression()), !dbg !12269
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12273
  br i1 %4, label %6, label %5, !dbg !12275

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12276
  br label %7, !dbg !12277

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12276
  br label %7, !dbg !12280

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %8, metadata !12238, metadata !DIExpression()) #25, !dbg !12272
  call void @llvm.dbg.value(metadata i32 %8, metadata !12267, metadata !DIExpression()), !dbg !12269
  %9 = tail call fastcc %struct.k_thread* @k_current_get.94() #28, !dbg !12282
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12268, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32 undef, metadata !12283, metadata !DIExpression()) #25, !dbg !12286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12288, !srcloc !12289
  tail call fastcc void @k_thread_abort.95(%struct.k_thread* noundef %9) #26, !dbg !12290
  ret void, !dbg !12293
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.94() unnamed_addr #9 !dbg !12294 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.96() #28, !dbg !12298
  ret %struct.k_thread* %1, !dbg !12299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.95(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12304, metadata !DIExpression()), !dbg !12305
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12306, !srcloc !12308
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12309
  ret void, !dbg !12310
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.96() unnamed_addr #9 !dbg !12311 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12312, !srcloc !12314
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12315
  ret %struct.k_thread* %1, !dbg !12316
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12321, metadata !DIExpression()), !dbg !12324
  call void @llvm.dbg.value(metadata i32 %1, metadata !12322, metadata !DIExpression()), !dbg !12324
  call void @llvm.dbg.value(metadata i32 %2, metadata !12323, metadata !DIExpression()), !dbg !12324
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12325
  ret void, !dbg !12326
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12327 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12331, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i8* %1, metadata !12332, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 %2, metadata !12333, metadata !DIExpression()), !dbg !12334
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !12335
  ret void, !dbg !12336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12337 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12338
  ret void, !dbg !12339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12342, metadata !DIExpression()), !dbg !12343
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12344
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12345
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12346
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12347
  %4 = trunc i32 %0 to i8, !dbg !12348
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12349
  store i8 %4, i8* %5, align 4, !dbg !12350
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12351
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12352
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12353
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12354
  store i8* %8, i8** %9, align 4, !dbg !12355
  ret void, !dbg !12356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12359, metadata !DIExpression()), !dbg !12365
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12366
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12360, metadata !DIExpression()), !dbg !12365
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12367
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12361, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata i8* null, metadata !12364, metadata !DIExpression()), !dbg !12365
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12368
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12369
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !12370
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12371
  ret void, !dbg !12372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12373 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12377, metadata !DIExpression()), !dbg !12378
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12379
  ret i8* %2, !dbg !12380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12386, metadata !DIExpression()), !dbg !12387
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12388
  %3 = load i8, i8* %2, align 1, !dbg !12389
  %4 = and i8 %3, -5, !dbg !12389
  store i8 %4, i8* %2, align 1, !dbg !12389
  ret void, !dbg !12390
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12391 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12394
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !12395
  %3 = ptrtoint i8* %2 to i32, !dbg !12404
  %4 = add i32 %3, 2048, !dbg !12405
  call void @llvm.dbg.value(metadata i32 %4, metadata !12399, metadata !DIExpression()) #25, !dbg !12406
  call void @llvm.dbg.value(metadata i32 %4, metadata !12407, metadata !DIExpression()) #25, !dbg !12410
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12412, !srcloc !12413
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12414
  %6 = or i32 %5, 512, !dbg !12414
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12414
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -2, i32 noundef 255) #27, !dbg !12415
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -5, i32 noundef 0) #27, !dbg !12418
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -12, i32 noundef 0) #27, !dbg !12419
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -11, i32 noundef 0) #27, !dbg !12420
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -10, i32 noundef 0) #27, !dbg !12421
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -4, i32 noundef 0) #27, !dbg !12422
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12423
  %8 = or i32 %7, 458752, !dbg !12423
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12423
  tail call void @z_arm_fault_init() #27, !dbg !12424
  tail call void @z_arm_cpu_idle_init() #27, !dbg !12425
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12426
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12429
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !12430
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !12431
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12432
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12432
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12393, metadata !DIExpression()), !dbg !12433
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12434
  call void @z_device_state_init() #27, !dbg !12435
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12436
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12437
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12438
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12439
  unreachable, !dbg !12439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2059, metadata !DIExpression()), !dbg !12440
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12441
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12441
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2060, metadata !DIExpression()), !dbg !12440
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2060, metadata !DIExpression()), !dbg !12440
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12442
  br i1 %7, label %8, label %35, !dbg !12443

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2060, metadata !DIExpression()), !dbg !12440
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12444
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12444
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2070, metadata !DIExpression()), !dbg !12445
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12446
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12446
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !12447
  call void @llvm.dbg.value(metadata i32 %14, metadata !2074, metadata !DIExpression()), !dbg !12445
  %15 = icmp eq %struct.device* %11, null, !dbg !12448
  br i1 %15, label %32, label %16, !dbg !12450

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12451
  br i1 %17, label %26, label %18, !dbg !12454

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12455
  call void @llvm.dbg.value(metadata i32 %19, metadata !2074, metadata !DIExpression()), !dbg !12445
  %20 = icmp ult i32 %19, 255, !dbg !12457
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12457
  call void @llvm.dbg.value(metadata i32 %21, metadata !2074, metadata !DIExpression()), !dbg !12445
  %22 = trunc i32 %21 to i8, !dbg !12458
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12459
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12459
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12460
  store i8 %22, i8* %25, align 1, !dbg !12461
  br label %26, !dbg !12462

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12463
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12463
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12464
  %30 = load i8, i8* %29, align 1, !dbg !12465
  %31 = or i8 %30, 1, !dbg !12465
  store i8 %31, i8* %29, align 1, !dbg !12465
  br label %32, !dbg !12466

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12467
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2060, metadata !DIExpression()), !dbg !12440
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12442
  br i1 %34, label %8, label %35, !dbg !12443, !llvm.loop !12468

35:                                               ; preds = %32, %1
  ret void, !dbg !12470
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.103(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12473, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata i32 %1, metadata !12474, metadata !DIExpression()), !dbg !12475
  %3 = trunc i32 %1 to i8, !dbg !12476
  %4 = shl i8 %3, 4, !dbg !12476
  %5 = and i32 %0, 15, !dbg !12479
  %6 = add nsw i32 %5, -4, !dbg !12480
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12481
  store volatile i8 %4, i8* %7, align 1, !dbg !12482
  ret void, !dbg !12483
}

; Function Attrs: optsize
declare !dbg !12484 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12488, metadata !DIExpression()), !dbg !12489
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12490
  store i8 1, i8* %2, align 1, !dbg !12491
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12492
  store i8 1, i8* %3, align 4, !dbg !12493
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12494
  store i32 0, i32* %4, align 4, !dbg !12495
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12496
  store i32 0, i32* %5, align 4, !dbg !12497
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12498
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12499
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12500
  ret void, !dbg !12501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12502 {
  tail call void @z_sched_init() #27, !dbg !12507
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12508
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0)) #27, !dbg !12509
  call void @llvm.dbg.value(metadata i8* %1, metadata !12506, metadata !DIExpression()), !dbg !12510
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12511
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12512
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12513
  ret i8* %1, !dbg !12514
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12515 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12517, metadata !DIExpression()), !dbg !12518
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !12519
  unreachable, !dbg !12520
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12521 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12523, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata i8* %1, metadata !12524, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata i8* %2, metadata !12525, metadata !DIExpression()), !dbg !12526
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12527
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12528
  tail call void @boot_banner() #27, !dbg !12529
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12530
  tail call void @z_init_static_threads() #27, !dbg !12531
  tail call void @main() #27, !dbg !12532
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12533
  %5 = and i8 %4, -2, !dbg !12533
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12533
  ret void, !dbg !12534
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12535 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12545, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata i8* %1, metadata !12546, metadata !DIExpression()), !dbg !12547
  ret void, !dbg !12548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12549 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12551, metadata !DIExpression()), !dbg !12553
  call void @llvm.dbg.value(metadata i8* %1, metadata !12552, metadata !DIExpression()), !dbg !12553
  ret void, !dbg !12554
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12555 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12556, !srcloc !12563
  call void @llvm.dbg.value(metadata i32 %1, metadata !12559, metadata !DIExpression()) #25, !dbg !12564
  %2 = icmp ne i32 %1, 0, !dbg !12565
  ret i1 %2, !dbg !12566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12567 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12568
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12569
  %3 = load i8, i8* %2, align 4, !dbg !12570
  %4 = or i8 %3, 1, !dbg !12570
  store i8 %4, i8* %2, align 4, !dbg !12570
  ret void, !dbg !12571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12572 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12573
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12574
  %3 = load i8, i8* %2, align 4, !dbg !12575
  %4 = and i8 %3, -2, !dbg !12575
  store i8 %4, i8* %2, align 4, !dbg !12575
  ret void, !dbg !12576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12577 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12578
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12579
  %3 = load i8, i8* %2, align 4, !dbg !12579
  %4 = and i8 %3, 1, !dbg !12580
  %5 = icmp ne i8 %4, 0, !dbg !12581
  ret i1 %5, !dbg !12582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12587, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.value(metadata i8* %1, metadata !12588, metadata !DIExpression()), !dbg !12589
  ret i32 -88, !dbg !12590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12591 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12595, metadata !DIExpression()), !dbg !12596
  ret i8* null, !dbg !12597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12598 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12602, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata i8* %1, metadata !12603, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata i32 %2, metadata !12604, metadata !DIExpression()), !dbg !12605
  ret i32 -88, !dbg !12606
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2197, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i8* %1, metadata !2198, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i32 %2, metadata !2199, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i32 0, metadata !2200, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i8 undef, metadata !2202, metadata !DIExpression()), !dbg !12607
  %4 = icmp eq i8* %1, null, !dbg !12608
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12610
  br i1 %6, label %46, label %7, !dbg !12610

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12611
  %9 = load i8, i8* %8, align 1, !dbg !12611
  call void @llvm.dbg.value(metadata i8 %9, metadata !2202, metadata !DIExpression()), !dbg !12607
  %10 = add i32 %2, -1, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %10, metadata !2199, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i8 0, metadata !2203, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i8 %9, metadata !2202, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i32 0, metadata !2200, metadata !DIExpression()), !dbg !12607
  %11 = icmp eq i8 %9, 0, !dbg !12614
  br i1 %11, label %12, label %15, !dbg !12616

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12617
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12618
  store i8 0, i8* %14, align 1, !dbg !12619
  br label %46, !dbg !12620

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2203, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i8 %17, metadata !2202, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i32 %18, metadata !2200, metadata !DIExpression()), !dbg !12607
  %19 = zext i8 %17 to i32, !dbg !12621
  %20 = zext i8 %16 to i32, !dbg !12622
  %21 = shl nuw i32 1, %20, !dbg !12622
  call void @llvm.dbg.value(metadata i32 %21, metadata !2201, metadata !DIExpression()), !dbg !12607
  %22 = and i32 %21, %19, !dbg !12624
  %23 = icmp eq i32 %22, 0, !dbg !12626
  br i1 %23, label %42, label %24, !dbg !12627

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12628
  %26 = sub i32 %10, %18, !dbg !12629
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12630
  %28 = load i8*, i8** %27, align 4, !dbg !12630
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12631
  %30 = load i32, i32* %29, align 4, !dbg !12631
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12632
  %32 = add i32 %31, %18, !dbg !12633
  call void @llvm.dbg.value(metadata i32 %32, metadata !2200, metadata !DIExpression()), !dbg !12607
  %33 = trunc i32 %21 to i8, !dbg !12634
  %34 = xor i8 %33, -1, !dbg !12634
  %35 = and i8 %17, %34, !dbg !12634
  call void @llvm.dbg.value(metadata i8 %35, metadata !2202, metadata !DIExpression()), !dbg !12607
  %36 = icmp eq i8 %35, 0, !dbg !12635
  br i1 %36, label %12, label %37, !dbg !12637

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12638
  %39 = sub i32 %10, %32, !dbg !12640
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !12641
  %41 = add i32 %40, %32, !dbg !12642
  call void @llvm.dbg.value(metadata i32 %41, metadata !2200, metadata !DIExpression()), !dbg !12607
  br label %42, !dbg !12643

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12607
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12607
  call void @llvm.dbg.value(metadata i8 %44, metadata !2202, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i32 %43, metadata !2200, metadata !DIExpression()), !dbg !12607
  %45 = add i8 %16, 1, !dbg !12644
  call void @llvm.dbg.value(metadata i8 %45, metadata !2203, metadata !DIExpression()), !dbg !12613
  br label %15, !dbg !12616

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.105, i32 0, i32 0), %3 ], !dbg !12607
  ret i8* %47, !dbg !12645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12646 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12650, metadata !DIExpression()), !dbg !12655
  call void @llvm.dbg.value(metadata i32 %1, metadata !12651, metadata !DIExpression()), !dbg !12655
  call void @llvm.dbg.value(metadata i8* %2, metadata !12652, metadata !DIExpression()), !dbg !12655
  call void @llvm.dbg.value(metadata i32 %3, metadata !12653, metadata !DIExpression()), !dbg !12655
  %5 = icmp ult i32 %1, %3, !dbg !12656
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12656
  call void @llvm.dbg.value(metadata i32 %6, metadata !12654, metadata !DIExpression()), !dbg !12655
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !12657
  ret i32 %6, !dbg !12658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12663, metadata !DIExpression()), !dbg !12664
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !12665
  ret void, !dbg !12666
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12667 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12676, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12677, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i32 %2, metadata !12678, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12679, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i8* %4, metadata !12680, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i8* %5, metadata !12681, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i8* %6, metadata !12682, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i32 %7, metadata !12683, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i32 %8, metadata !12684, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i8* undef, metadata !12685, metadata !DIExpression()), !dbg !12687
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12688
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !12689
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12690
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12691
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12692
  call void @llvm.dbg.value(metadata i8* %13, metadata !12686, metadata !DIExpression()), !dbg !12687
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !12693
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12694
  store i8* null, i8** %14, align 4, !dbg !12695
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12696
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12696
  br i1 %16, label %20, label %17, !dbg !12698

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12699
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12699
  br label %20, !dbg !12700

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12687
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12701
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12703
  ret i8* %13, !dbg !12704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !12705 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12710, metadata !DIExpression()), !dbg !12711
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12712
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12713
  ret void, !dbg !12714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12715 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12720, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i32 %1, metadata !12721, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i32 %2, metadata !12722, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i32 %3, metadata !12723, metadata !DIExpression()), !dbg !12724
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12725
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12726
  %6 = trunc i32 %3 to i8, !dbg !12727
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12728
  store i8 %6, i8* %7, align 4, !dbg !12729
  %8 = trunc i32 %2 to i8, !dbg !12730
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12731
  store i8 %8, i8* %9, align 1, !dbg !12732
  %10 = trunc i32 %1 to i8, !dbg !12733
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12734
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12734
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12734
  store i8 %10, i8* %13, align 2, !dbg !12735
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12736
  store i8 0, i8* %14, align 1, !dbg !12737
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12738
  ret void, !dbg !12739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12744, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12745, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 %2, metadata !12746, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 0, metadata !12751, metadata !DIExpression()), !dbg !12752
  %4 = add i32 %2, 7, !dbg !12753
  %5 = and i32 %4, -8, !dbg !12753
  %6 = add i32 %5, 64, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %6, metadata !12747, metadata !DIExpression()), !dbg !12752
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.115(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12755
  call void @llvm.dbg.value(metadata i8* %7, metadata !12750, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 %5, metadata !12748, metadata !DIExpression()), !dbg !12752
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12756
  call void @llvm.dbg.value(metadata i8* %8, metadata !12749, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 0, metadata !12751, metadata !DIExpression()), !dbg !12752
  %9 = ptrtoint i8* %7 to i32, !dbg !12757
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12758
  store i32 %9, i32* %10, align 4, !dbg !12759
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12760
  store i32 %5, i32* %11, align 4, !dbg !12761
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12762
  store i32 0, i32* %12, align 4, !dbg !12763
  call void @llvm.dbg.value(metadata i8* %8, metadata !12749, metadata !DIExpression()), !dbg !12752
  ret i8* %8, !dbg !12764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.115(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12765 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12769, metadata !DIExpression()), !dbg !12770
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12771
  ret i8* %2, !dbg !12772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12773 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12778, metadata !DIExpression()), !dbg !12779
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12780
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12781
  ret void, !dbg !12782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12783 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12785, metadata !DIExpression()), !dbg !12786
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12787
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12788
  ret void, !dbg !12789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12790 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12794, metadata !DIExpression()), !dbg !12795
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12796
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12797
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12798
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12799
  ret void, !dbg !12800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12801 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12806, metadata !DIExpression()), !dbg !12807
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12808
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12809
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12810
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12811
  ret void, !dbg !12812
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12813 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12830, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12821, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12822, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i32 %2, metadata !12823, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12824, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i8* %4, metadata !12825, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i8* %5, metadata !12826, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i8* %6, metadata !12827, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i32 %7, metadata !12828, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i32 %8, metadata !12829, metadata !DIExpression()), !dbg !12831
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12832
  %13 = icmp eq i64 %11, -1, !dbg !12833
  br i1 %13, label %15, label %14, !dbg !12835

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12836
  br label %15, !dbg !12838

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12840 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12845, metadata !DIExpression()), !dbg !12846
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12844, metadata !DIExpression()), !dbg !12846
  %4 = icmp eq i64 %3, 0, !dbg !12847
  br i1 %4, label %5, label %6, !dbg !12849

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12850
  br label %7, !dbg !12852

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12853
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12860, metadata !DIExpression()), !dbg !12861
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12862, !srcloc !12864
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12865
  ret void, !dbg !12866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12867 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12870, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12869, metadata !DIExpression()), !dbg !12871
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12872
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !12873
  ret void, !dbg !12874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12875 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12877, metadata !DIExpression()), !dbg !12897
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12898

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !12899
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12895, metadata !DIExpression()), !dbg !12900
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12901

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12877, metadata !DIExpression()), !dbg !12897
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12902
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12902
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12905
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12905
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12906
  %9 = load i32, i32* %8, align 4, !dbg !12906
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12907
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12907
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12908
  %13 = load i8*, i8** %12, align 4, !dbg !12908
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12909
  %15 = load i8*, i8** %14, align 4, !dbg !12909
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12910
  %17 = load i8*, i8** %16, align 4, !dbg !12910
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12911
  %19 = load i32, i32* %18, align 4, !dbg !12911
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12912
  %21 = load i32, i32* %20, align 4, !dbg !12912
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12913
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12914
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12915
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12916
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12916
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12917
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12877, metadata !DIExpression()), !dbg !12897
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12918
  br i1 %27, label %2, label %1, !dbg !12898, !llvm.loop !12920

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !12899
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12895, metadata !DIExpression()), !dbg !12900
  br label %29, !dbg !12901

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !12922
  ret void, !dbg !12923

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12895, metadata !DIExpression()), !dbg !12900
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12924
  %33 = load i32, i32* %32, align 4, !dbg !12924
  %34 = icmp eq i32 %33, -1, !dbg !12928
  br i1 %34, label %43, label %35, !dbg !12929

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12930
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12930
  %38 = icmp sgt i32 %33, 0, !dbg !12932
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12932
  %40 = zext i32 %39 to i64, !dbg !12932
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12932
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12933
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12933
  br label %43, !dbg !12934

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12935
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12895, metadata !DIExpression()), !dbg !12900
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12936
  br i1 %45, label %30, label %29, !dbg !12901, !llvm.loop !12938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12940 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12945, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata i64 %0, metadata !12947, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i32 1000, metadata !12952, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i32 10000, metadata !12953, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i8 1, metadata !12954, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i8 0, metadata !12955, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i8 1, metadata !12956, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i8 0, metadata !12957, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i8 1, metadata !12958, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i8 0, metadata !12959, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i64 0, metadata !12960, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i64 0, metadata !12960, metadata !DIExpression()), !dbg !12964
  %2 = mul i64 %0, 10, !dbg !12966
  ret i64 %2, !dbg !12972
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12973 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i8* %1, metadata !12976, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i8* %2, metadata !12977, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i8* %3, metadata !12978, metadata !DIExpression()), !dbg !12979
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12980
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12981
  %7 = load i8, i8* %6, align 4, !dbg !12982
  %8 = or i8 %7, 4, !dbg !12982
  store i8 %8, i8* %6, align 4, !dbg !12982
  tail call void @z_thread_essential_clear() #26, !dbg !12983
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !12984
  unreachable, !dbg !12984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12985 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12989, metadata !DIExpression()), !dbg !12990
  ret i32 -134, !dbg !12991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12992 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12996, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.value(metadata i32 %1, metadata !12997, metadata !DIExpression()), !dbg !12998
  ret i32 -134, !dbg !12999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13000 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13007, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13008, metadata !DIExpression()), !dbg !13009
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13010
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13012
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13009
  ret i32 %6, !dbg !13013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13014 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13018, metadata !DIExpression()), !dbg !13019
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13020
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13019
  ret i32 %3, !dbg !13022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13023 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13025
  ret void, !dbg !13026
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13027 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13029, metadata !DIExpression()), !dbg !13032
  call void @llvm.dbg.value(metadata i8* %1, metadata !13030, metadata !DIExpression()), !dbg !13032
  call void @llvm.dbg.value(metadata i8* %2, metadata !13031, metadata !DIExpression()), !dbg !13032
  br label %4, !dbg !13033

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13034, !srcloc !13041
  call void @llvm.dbg.value(metadata i32 undef, metadata !13037, metadata !DIExpression()) #25, !dbg !13042
  call void @llvm.dbg.value(metadata i32 undef, metadata !13038, metadata !DIExpression()) #25, !dbg !13042
  tail call fastcc void @k_cpu_idle() #26, !dbg !13043
  br label %4, !dbg !13033, !llvm.loop !13044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13046 {
  tail call void @arch_cpu_idle() #27, !dbg !13047
  ret void, !dbg !13048
}

; Function Attrs: optsize
declare !dbg !13049 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13050 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13068, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i8* %1, metadata !13069, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i32 %2, metadata !13070, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i32 %3, metadata !13071, metadata !DIExpression()), !dbg !13072
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13073
  store i32 %2, i32* %5, align 4, !dbg !13074
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13075
  store i32 %3, i32* %6, align 4, !dbg !13076
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13077
  store i8* %1, i8** %7, align 4, !dbg !13078
  %8 = mul i32 %3, %2, !dbg !13079
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13080
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13081
  store i8* %9, i8** %10, align 4, !dbg !13082
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13083
  store i8* %1, i8** %11, align 4, !dbg !13084
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13085
  store i8* %1, i8** %12, align 4, !dbg !13086
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13087
  store i32 0, i32* %13, align 4, !dbg !13088
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13089
  store i8 0, i8* %14, align 4, !dbg !13090
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13091
  tail call fastcc void @z_waitq_init.120(%struct._wait_q_t* noundef %15) #26, !dbg !13092
  ret void, !dbg !13093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.120(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !13094 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13098, metadata !DIExpression()), !dbg !13099
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13100
  tail call fastcc void @sys_dlist_init.121(%struct._dnode* noundef %2) #26, !dbg !13101
  ret void, !dbg !13102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.121(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13103 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13108, metadata !DIExpression()), !dbg !13109
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13110
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13111
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13112
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13113
  ret void, !dbg !13114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13115 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13119, metadata !DIExpression()), !dbg !13125
  call void @llvm.dbg.value(metadata i32 %1, metadata !13120, metadata !DIExpression()), !dbg !13125
  call void @llvm.dbg.value(metadata i32 %2, metadata !13121, metadata !DIExpression()), !dbg !13125
  %5 = bitcast i32* %4 to i8*, !dbg !13126
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13126
  call void @llvm.dbg.value(metadata i32* %4, metadata !13124, metadata !DIExpression(DW_OP_deref)), !dbg !13125
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !13127
  br i1 %6, label %13, label %7, !dbg !13129

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13130
  call void @llvm.dbg.value(metadata i32 %8, metadata !13124, metadata !DIExpression()), !dbg !13125
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !13132
  call void @llvm.dbg.value(metadata i8* %9, metadata !13122, metadata !DIExpression()), !dbg !13125
  %10 = icmp eq i8* %9, null, !dbg !13133
  br i1 %10, label %13, label %11, !dbg !13135

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !13136
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13138
  store i8 1, i8* %12, align 4, !dbg !13139
  call void @llvm.dbg.value(metadata i32 0, metadata !13123, metadata !DIExpression()), !dbg !13125
  br label %13, !dbg !13140

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13141
  call void @llvm.dbg.value(metadata i32 %14, metadata !13123, metadata !DIExpression()), !dbg !13125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13142
  ret i32 %14, !dbg !13143
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !13144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13149, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata i32 %1, metadata !13150, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata i32* %2, metadata !13151, metadata !DIExpression()), !dbg !13152
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13153
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13153
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13153
  store i32 %6, i32* %2, align 4, !dbg !13153
  ret i1 %5, !dbg !13154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13159, metadata !DIExpression()), !dbg !13160
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !13161
  ret i8* %2, !dbg !13162
}

; Function Attrs: optsize
declare !dbg !13163 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13166 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13170, metadata !DIExpression()), !dbg !13171
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13172
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !13172
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13172
  br i1 %4, label %5, label %15, !dbg !13174

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13175
  %7 = load i8, i8* %6, align 4, !dbg !13175
  %8 = and i8 %7, 1, !dbg !13177
  %9 = icmp eq i8 %8, 0, !dbg !13178
  br i1 %9, label %15, label %10, !dbg !13179

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13180
  %12 = load i8*, i8** %11, align 4, !dbg !13180
  tail call void @k_free(i8* noundef %12) #27, !dbg !13182
  %13 = load i8, i8* %6, align 4, !dbg !13183
  %14 = and i8 %13, -2, !dbg !13183
  store i8 %14, i8* %6, align 4, !dbg !13183
  br label %15, !dbg !13184

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13171
  ret i32 %16, !dbg !13185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !13186 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13190, metadata !DIExpression()), !dbg !13191
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13192
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !13193
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13194
  ret %struct.k_thread* %4, !dbg !13195
}

; Function Attrs: optsize
declare !dbg !13196 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13197 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13201, metadata !DIExpression()), !dbg !13202
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13203
  br i1 %2, label %6, label %3, !dbg !13203

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13204
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13204
  br label %6, !dbg !13203

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13203
  ret %struct._dnode* %7, !dbg !13205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13206 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13210, metadata !DIExpression()), !dbg !13211
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13212
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13212
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13213
  ret i1 %4, !dbg !13214
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13215 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13225, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13223, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.value(metadata i8* %1, metadata !13224, metadata !DIExpression()), !dbg !13233
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13235, metadata !DIExpression()) #25, !dbg !13242
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13244, !srcloc !13250
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13244
  call void @llvm.dbg.value(metadata i32 %6, metadata !13247, metadata !DIExpression()) #25, !dbg !13251
  call void @llvm.dbg.value(metadata i32 undef, metadata !13248, metadata !DIExpression()) #25, !dbg !13251
  call void @llvm.dbg.value(metadata i32 %6, metadata !13241, metadata !DIExpression()) #25, !dbg !13242
  call void @llvm.dbg.value(metadata i32 %6, metadata !13227, metadata !DIExpression()), !dbg !13233
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13252
  %8 = load i32, i32* %7, align 4, !dbg !13252
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13254
  %10 = load i32, i32* %9, align 4, !dbg !13254
  %11 = icmp ult i32 %8, %10, !dbg !13255
  br i1 %11, label %12, label %42, !dbg !13256

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13257
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !13259
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13226, metadata !DIExpression()), !dbg !13233
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !13260
  br i1 %15, label %24, label %16, !dbg !13262

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !13263
  %18 = load i8*, i8** %17, align 4, !dbg !13263
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13265
  %20 = load i32, i32* %19, align 4, !dbg !13265
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !13266
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13267, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 0, metadata !13272, metadata !DIExpression()), !dbg !13273
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !13275
  store i32 0, i32* %22, align 4, !dbg !13276
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !13277
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13278
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !13278
  br label %53, !dbg !13279

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13280
  %26 = load i8*, i8** %25, align 4, !dbg !13280
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13282
  %28 = load i32, i32* %27, align 4, !dbg !13282
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !13283
  %30 = load i32, i32* %27, align 4, !dbg !13284
  %31 = load i8*, i8** %25, align 4, !dbg !13285
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !13285
  store i8* %32, i8** %25, align 4, !dbg !13285
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13286
  %34 = load i8*, i8** %33, align 4, !dbg !13286
  %35 = icmp eq i8* %32, %34, !dbg !13288
  br i1 %35, label %36, label %39, !dbg !13289

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13290
  %38 = load i8*, i8** %37, align 4, !dbg !13290
  store i8* %38, i8** %25, align 4, !dbg !13292
  br label %39, !dbg !13293

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !13294
  %41 = add i32 %40, 1, !dbg !13294
  store i32 %41, i32* %7, align 4, !dbg !13294
  call void @llvm.dbg.value(metadata i32 0, metadata !13232, metadata !DIExpression()), !dbg !13233
  br label %51, !dbg !13295

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !13225, metadata !DIExpression()), !dbg !13233
  %44 = icmp eq i64 %43, 0, !dbg !13296
  br i1 %44, label %51, label %45, !dbg !13298

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13299
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !13301
  store i8* %1, i8** %47, align 4, !dbg !13302
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13303
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13304
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !13304
  call void @llvm.dbg.value(metadata i32 %50, metadata !13232, metadata !DIExpression()), !dbg !13233
  br label %53, !dbg !13305

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !13306
  call void @llvm.dbg.value(metadata i32 %52, metadata !13232, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.value(metadata i32 %6, metadata !13307, metadata !DIExpression()) #25, !dbg !13313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13312, metadata !DIExpression()) #25, !dbg !13313
  call void @llvm.dbg.value(metadata i32 %6, metadata !13315, metadata !DIExpression()) #25, !dbg !13318
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13320, !srcloc !13321
  br label %53, !dbg !13322

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !13233
  ret i32 %54, !dbg !13323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13324 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13334, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13335, metadata !DIExpression()), !dbg !13336
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13337
  %4 = load i32, i32* %3, align 4, !dbg !13337
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13338
  store i32 %4, i32* %5, align 4, !dbg !13339
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13340
  %7 = load i32, i32* %6, align 4, !dbg !13340
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13341
  store i32 %7, i32* %8, align 4, !dbg !13342
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13343
  %10 = load i32, i32* %9, align 4, !dbg !13343
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13344
  store i32 %10, i32* %11, align 4, !dbg !13345
  ret void, !dbg !13346
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13347 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13353, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13351, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.value(metadata i8* %1, metadata !13352, metadata !DIExpression()), !dbg !13357
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13235, metadata !DIExpression()) #25, !dbg !13359
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13361, !srcloc !13250
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13361
  call void @llvm.dbg.value(metadata i32 %6, metadata !13247, metadata !DIExpression()) #25, !dbg !13363
  call void @llvm.dbg.value(metadata i32 undef, metadata !13248, metadata !DIExpression()) #25, !dbg !13363
  call void @llvm.dbg.value(metadata i32 %6, metadata !13241, metadata !DIExpression()) #25, !dbg !13359
  call void @llvm.dbg.value(metadata i32 %6, metadata !13354, metadata !DIExpression()), !dbg !13357
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13364
  %8 = load i32, i32* %7, align 4, !dbg !13364
  %9 = icmp eq i32 %8, 0, !dbg !13366
  br i1 %9, label %51, label %10, !dbg !13367

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13368
  %12 = load i8*, i8** %11, align 4, !dbg !13368
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13370
  %14 = load i32, i32* %13, align 4, !dbg !13370
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !13371
  %16 = load i32, i32* %13, align 4, !dbg !13372
  %17 = load i8*, i8** %11, align 4, !dbg !13373
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !13373
  store i8* %18, i8** %11, align 4, !dbg !13373
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13374
  %20 = load i8*, i8** %19, align 4, !dbg !13374
  %21 = icmp eq i8* %18, %20, !dbg !13376
  br i1 %21, label %22, label %25, !dbg !13377

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13378
  %24 = load i8*, i8** %23, align 4, !dbg !13378
  store i8* %24, i8** %11, align 4, !dbg !13380
  br label %25, !dbg !13381

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !13382
  %27 = add i32 %26, -1, !dbg !13382
  store i32 %27, i32* %7, align 4, !dbg !13382
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13383
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !13384
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13355, metadata !DIExpression()), !dbg !13357
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !13385
  br i1 %30, label %60, label %31, !dbg !13387

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13388
  %33 = load i8*, i8** %32, align 4, !dbg !13388
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !13390
  %35 = load i8*, i8** %34, align 4, !dbg !13390
  %36 = load i32, i32* %13, align 4, !dbg !13391
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !13392
  %38 = load i32, i32* %13, align 4, !dbg !13393
  %39 = load i8*, i8** %32, align 4, !dbg !13394
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !13394
  store i8* %40, i8** %32, align 4, !dbg !13394
  %41 = load i8*, i8** %19, align 4, !dbg !13395
  %42 = icmp eq i8* %40, %41, !dbg !13397
  br i1 %42, label %43, label %46, !dbg !13398

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13399
  %45 = load i8*, i8** %44, align 4, !dbg !13399
  store i8* %45, i8** %32, align 4, !dbg !13401
  br label %46, !dbg !13402

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !13403
  %48 = add i32 %47, 1, !dbg !13403
  store i32 %48, i32* %7, align 4, !dbg !13403
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13267, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.value(metadata i32 0, metadata !13272, metadata !DIExpression()), !dbg !13404
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !13406
  store i32 0, i32* %49, align 4, !dbg !13407
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !13408
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13409
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !13409
  br label %62, !dbg !13410

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !13353, metadata !DIExpression()), !dbg !13357
  %53 = icmp eq i64 %52, 0, !dbg !13411
  br i1 %53, label %60, label %54, !dbg !13413

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13414
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !13416
  store i8* %1, i8** %56, align 4, !dbg !13417
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13418
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13419
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !13419
  call void @llvm.dbg.value(metadata i32 %59, metadata !13356, metadata !DIExpression()), !dbg !13357
  br label %62, !dbg !13420

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !13421
  call void @llvm.dbg.value(metadata i32 %61, metadata !13356, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.value(metadata i32 %6, metadata !13307, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13312, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %6, metadata !13315, metadata !DIExpression()) #25, !dbg !13424
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13426, !srcloc !13321
  br label %62, !dbg !13427

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !13357
  ret i32 %63, !dbg !13428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13429 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13433, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata i8* %1, metadata !13434, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13235, metadata !DIExpression()) #25, !dbg !13438
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13440, !srcloc !13250
  call void @llvm.dbg.value(metadata i32 undef, metadata !13247, metadata !DIExpression()) #25, !dbg !13442
  call void @llvm.dbg.value(metadata i32 undef, metadata !13248, metadata !DIExpression()) #25, !dbg !13442
  call void @llvm.dbg.value(metadata i32 undef, metadata !13241, metadata !DIExpression()) #25, !dbg !13438
  call void @llvm.dbg.value(metadata i32 undef, metadata !13435, metadata !DIExpression()), !dbg !13437
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13443
  %5 = load i32, i32* %4, align 4, !dbg !13443
  %6 = icmp eq i32 %5, 0, !dbg !13445
  br i1 %6, label %13, label %7, !dbg !13446

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13447
  %9 = load i8*, i8** %8, align 4, !dbg !13447
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13449
  %11 = load i32, i32* %10, align 4, !dbg !13449
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !13450
  call void @llvm.dbg.value(metadata i32 0, metadata !13436, metadata !DIExpression()), !dbg !13437
  br label %13, !dbg !13451

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !13452
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13440
  call void @llvm.dbg.value(metadata i32 %15, metadata !13247, metadata !DIExpression()) #25, !dbg !13442
  call void @llvm.dbg.value(metadata i32 %15, metadata !13241, metadata !DIExpression()) #25, !dbg !13438
  call void @llvm.dbg.value(metadata i32 %15, metadata !13435, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata i32 %14, metadata !13436, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13312, metadata !DIExpression()) #25, !dbg !13453
  call void @llvm.dbg.value(metadata i32 undef, metadata !13315, metadata !DIExpression()) #25, !dbg !13455
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !13457, !srcloc !13321
  ret i32 %14, !dbg !13458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13459 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13463, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13235, metadata !DIExpression()) #25, !dbg !13467
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13469, !srcloc !13250
  call void @llvm.dbg.value(metadata i32 undef, metadata !13247, metadata !DIExpression()) #25, !dbg !13471
  call void @llvm.dbg.value(metadata i32 undef, metadata !13248, metadata !DIExpression()) #25, !dbg !13471
  call void @llvm.dbg.value(metadata i32 undef, metadata !13241, metadata !DIExpression()) #25, !dbg !13467
  call void @llvm.dbg.value(metadata i32 undef, metadata !13464, metadata !DIExpression()), !dbg !13466
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13472
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13465, metadata !DIExpression()), !dbg !13466
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13473
  br i1 %5, label %11, label %6, !dbg !13474

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13267, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 -35, metadata !13272, metadata !DIExpression()), !dbg !13475
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !13478
  store i32 -35, i32* %8, align 4, !dbg !13479
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !13480
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13472
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13465, metadata !DIExpression()), !dbg !13466
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !13473
  br i1 %10, label %11, label %6, !dbg !13474, !llvm.loop !13481

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !13469
  call void @llvm.dbg.value(metadata i32 %12, metadata !13247, metadata !DIExpression()) #25, !dbg !13471
  call void @llvm.dbg.value(metadata i32 %12, metadata !13241, metadata !DIExpression()) #25, !dbg !13467
  call void @llvm.dbg.value(metadata i32 %12, metadata !13464, metadata !DIExpression()), !dbg !13466
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13483
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13484
  store i32 0, i32* %14, align 4, !dbg !13485
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13486
  %16 = load i8*, i8** %15, align 4, !dbg !13486
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13487
  store i8* %16, i8** %17, align 4, !dbg !13488
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13489
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !13489
  ret void, !dbg !13490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13495, metadata !DIExpression()), !dbg !13499
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13496, metadata !DIExpression()), !dbg !13499
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13500
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13500
  %5 = load i8, i8* %4, align 2, !dbg !13500
  call void @llvm.dbg.value(metadata i8 %5, metadata !13497, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13499
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13501
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13501
  %8 = load i8, i8* %7, align 2, !dbg !13501
  call void @llvm.dbg.value(metadata i8 %8, metadata !13498, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13499
  %9 = icmp eq i8 %8, %5, !dbg !13502
  %10 = sext i8 %5 to i32, !dbg !13504
  %11 = sext i8 %8 to i32, !dbg !13504
  %12 = sub nsw i32 %11, %10, !dbg !13504
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13504
  ret i32 %13, !dbg !13505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13510, metadata !DIExpression()), !dbg !13511
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13512
  %3 = icmp eq i32 %2, 0, !dbg !13514
  br i1 %3, label %8, label %4, !dbg !13515

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !13516
  %6 = add i32 %5, %2, !dbg !13518
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13519
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13520
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !13521
  br label %8, !dbg !13522

8:                                                ; preds = %4, %1
  ret void, !dbg !13523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13524 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13528, metadata !DIExpression()), !dbg !13530
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13531
  call void @llvm.dbg.value(metadata i32 %1, metadata !13529, metadata !DIExpression()), !dbg !13530
  ret i32 %1, !dbg !13532
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13537, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata i32 %1, metadata !13538, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata i32 0, metadata !13539, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !13555
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13557, !srcloc !13563
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13557
  call void @llvm.dbg.value(metadata i32 %4, metadata !13560, metadata !DIExpression()) #25, !dbg !13564
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !13564
  call void @llvm.dbg.value(metadata i32 %4, metadata !13554, metadata !DIExpression()) #25, !dbg !13555
  call void @llvm.dbg.value(metadata i32 %4, metadata !13545, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata i32 undef, metadata !13539, metadata !DIExpression()), !dbg !13547
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13565
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13568
  %6 = icmp sgt i32 %0, 0, !dbg !13569
  %7 = icmp sgt i32 %5, 2, !dbg !13571
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13571
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13571
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13572
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13573
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13574
  call void @llvm.dbg.value(metadata i32 %4, metadata !13575, metadata !DIExpression()) #25, !dbg !13581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !13581
  call void @llvm.dbg.value(metadata i32 %4, metadata !13583, metadata !DIExpression()) #25, !dbg !13586
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !13588, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !13539, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata i32 undef, metadata !13539, metadata !DIExpression()), !dbg !13547
  ret void, !dbg !13590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13593, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.value(metadata i32 %0, metadata !13595, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13610
  call void @llvm.dbg.value(metadata i32 1000, metadata !13598, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata i32 10000, metadata !13599, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata i8 1, metadata !13600, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata i1 true, metadata !13601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13610
  call void @llvm.dbg.value(metadata i1 true, metadata !13602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13610
  call void @llvm.dbg.value(metadata i8 0, metadata !13603, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata i1 true, metadata !13604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13610
  call void @llvm.dbg.value(metadata i1 false, metadata !13605, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13610
  call void @llvm.dbg.value(metadata i64 0, metadata !13606, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata i64 0, metadata !13606, metadata !DIExpression()), !dbg !13610
  %2 = mul i32 %0, 10, !dbg !13612
  ret i32 %2, !dbg !13618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13621, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !13624
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13626, !srcloc !13563
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13626
  call void @llvm.dbg.value(metadata i32 %3, metadata !13560, metadata !DIExpression()) #25, !dbg !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !13628
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()) #25, !dbg !13624
  call void @llvm.dbg.value(metadata i32 %3, metadata !13622, metadata !DIExpression()), !dbg !13623
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13629
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13631
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13632
  br i1 %6, label %7, label %8, !dbg !13633

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13634
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !13636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !13636
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !13638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !13640, !srcloc !13589
  br label %24, !dbg !13641

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13642
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13643
  %10 = icmp eq i32 %9, 0, !dbg !13643
  br i1 %10, label %21, label %11, !dbg !13645

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13646
  br i1 %12, label %13, label %21, !dbg !13647

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13648
  %15 = icmp sgt i32 %14, %0, !dbg !13651
  br i1 %15, label %19, label %16, !dbg !13652

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13653
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13653
  call void @llvm.dbg.value(metadata i32 %18, metadata !13622, metadata !DIExpression()), !dbg !13623
  br label %22, !dbg !13655

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13656
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13656
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13658
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13623
  call void @llvm.dbg.value(metadata i32 %23, metadata !13622, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 %23, metadata !13575, metadata !DIExpression()) #25, !dbg !13660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !13660
  call void @llvm.dbg.value(metadata i32 %23, metadata !13583, metadata !DIExpression()) #25, !dbg !13662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !13664, !srcloc !13589
  br label %24, !dbg !13665

24:                                               ; preds = %22, %7
  ret void, !dbg !13665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13670, metadata !DIExpression()), !dbg !13672
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13673
  %3 = icmp eq i32 %2, 0, !dbg !13673
  br i1 %3, label %16, label %4, !dbg !13674

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13675
  br i1 %5, label %16, label %6, !dbg !13676

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13677
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13677
  %9 = load i8, i8* %8, align 2, !dbg !13677
  %10 = sext i8 %9 to i32, !dbg !13678
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13679
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13680
  br i1 %12, label %16, label %13, !dbg !13681

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13682
  %15 = xor i1 %14, true, !dbg !13683
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13672
  call void @llvm.dbg.value(metadata i1 %17, metadata !13671, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13672
  ret i1 %17, !dbg !13684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13685 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13689, metadata !DIExpression()), !dbg !13691
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13692
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13690, metadata !DIExpression()), !dbg !13691
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13693
  br i1 %3, label %5, label %4, !dbg !13695

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13696
  br label %5, !dbg !13698

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13689, metadata !DIExpression()), !dbg !13691
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13699
  ret i32 %6, !dbg !13700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13703, metadata !DIExpression()), !dbg !13705
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13706
  %3 = load i8, i8* %2, align 1, !dbg !13706
  call void @llvm.dbg.value(metadata i8 %3, metadata !13704, metadata !DIExpression()), !dbg !13705
  %4 = and i8 %3, 31, !dbg !13707
  %5 = icmp ne i8 %4, 0, !dbg !13708
  ret i1 %5, !dbg !13709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13710 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13712, metadata !DIExpression()), !dbg !13713
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13714
  br i1 %2, label %3, label %7, !dbg !13716

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()) #25, !dbg !13720
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13723
  %5 = load i8, i8* %4, align 1, !dbg !13724
  %6 = and i8 %5, 127, !dbg !13724
  store i8 %6, i8* %4, align 1, !dbg !13724
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13725, metadata !DIExpression()) #25, !dbg !13728
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !13732
  br label %7, !dbg !13733

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13734, metadata !DIExpression()) #25, !dbg !13737
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13739
  %9 = load i8, i8* %8, align 1, !dbg !13740
  %10 = or i8 %9, -128, !dbg !13740
  store i8 %10, i8* %8, align 1, !dbg !13740
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13741, metadata !DIExpression()) #25, !dbg !13744
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13748, metadata !DIExpression()) #25, !dbg !13756
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13754, metadata !DIExpression()) #25, !dbg !13756
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13758
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13755, metadata !DIExpression()) #25, !dbg !13756
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13760
  br i1 %12, label %23, label %13, !dbg !13758

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13755, metadata !DIExpression()) #25, !dbg !13756
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13762
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13755, metadata !DIExpression()) #25, !dbg !13756
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !13763
  %17 = icmp sgt i32 %16, 0, !dbg !13766
  br i1 %17, label %18, label %20, !dbg !13767

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13768
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !13770
  br label %25, !dbg !13771

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !13760
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13755, metadata !DIExpression()) #25, !dbg !13756
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13760
  br i1 %22, label %23, label %13, !dbg !13758, !llvm.loop !13772

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13774
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !13775
  br label %25, !dbg !13776

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13777
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13778
  %28 = zext i1 %27 to i32, !dbg !13778
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13779
  ret void, !dbg !13780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13781 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13783, metadata !DIExpression()), !dbg !13784
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13785
  ret i1 %2, !dbg !13786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13787 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13789, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13790, metadata !DIExpression()), !dbg !13791
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13792
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13793
  ret void, !dbg !13794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13795 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13799, metadata !DIExpression()), !dbg !13800
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.127(%struct._dnode* noundef %0) #26, !dbg !13801
  br i1 %2, label %6, label %3, !dbg !13801

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13802
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13802
  br label %6, !dbg !13801

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13801
  ret %struct._dnode* %7, !dbg !13803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13804 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13808, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13809, metadata !DIExpression()), !dbg !13812
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13813
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13813
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13810, metadata !DIExpression()), !dbg !13812
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13814
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13815
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13816
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13817
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13818
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13819
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13820
  ret void, !dbg !13821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13822 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13826, metadata !DIExpression()), !dbg !13828
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13827, metadata !DIExpression()), !dbg !13828
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13829
  br i1 %3, label %6, label %4, !dbg !13830

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13831
  br label %6, !dbg !13830

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13830
  ret %struct._dnode* %7, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13833 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13837, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13838, metadata !DIExpression()), !dbg !13840
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13841
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13841
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13839, metadata !DIExpression()), !dbg !13840
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13842
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13843
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13844
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13845
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13846
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13847
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13848
  ret void, !dbg !13849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13852, metadata !DIExpression()), !dbg !13854
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13855
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13862, metadata !DIExpression()) #25, !dbg !13864
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13865
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13866
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13866
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13853, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13867, metadata !DIExpression()) #25, !dbg !13873
  call void @llvm.dbg.value(metadata i32 %0, metadata !13872, metadata !DIExpression()) #25, !dbg !13873
  %6 = icmp eq i32 %0, 0, !dbg !13876
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13878
  br i1 %6, label %8, label %15, !dbg !13879

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !13880
  br i1 %9, label %15, label %10, !dbg !13882

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !13883
  br i1 %11, label %15, label %12, !dbg !13885

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !13886
  %14 = icmp eq i32 %13, 0, !dbg !13886
  br i1 %14, label %18, label %15, !dbg !13888

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13889
  br i1 %16, label %18, label %17, !dbg !13892

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13893
  br label %18, !dbg !13895

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13878
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13878
  ret void, !dbg !13896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13897 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13901, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13902, metadata !DIExpression()), !dbg !13904
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef %0) #26, !dbg !13905
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13903, metadata !DIExpression()), !dbg !13904
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13902, metadata !DIExpression()), !dbg !13904
  ret %struct.k_thread* %3, !dbg !13906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13907 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13909, metadata !DIExpression()), !dbg !13910
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13911
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13912
  %4 = xor i1 %3, true, !dbg !13913
  ret i1 %4, !dbg !13914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13917, metadata !DIExpression()), !dbg !13918
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13919
  %3 = load i16, i16* %2, align 2, !dbg !13919
  %4 = icmp ult i16 %3, 128, !dbg !13920
  %5 = zext i1 %4 to i32, !dbg !13920
  ret i32 %5, !dbg !13921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13922 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13928, metadata !DIExpression()), !dbg !13929
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13930
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13931
  %4 = xor i1 %3, true, !dbg !13932
  ret i1 %4, !dbg !13933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13934 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13940, metadata !DIExpression()), !dbg !13941
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13942
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13942
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13943
  ret i1 %4, !dbg !13944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13947, metadata !DIExpression()), !dbg !13949
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13948, metadata !DIExpression()), !dbg !13949
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13950
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13950
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13951
  br i1 %5, label %9, label %6, !dbg !13952

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13953
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13953
  br label %9, !dbg !13952

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13952
  ret %struct._dnode* %10, !dbg !13954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.127(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13955 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13959, metadata !DIExpression()), !dbg !13960
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13961
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13961
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13962
  ret i1 %4, !dbg !13963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13964 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13968, metadata !DIExpression()), !dbg !13971
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13972
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13972
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13969, metadata !DIExpression()), !dbg !13971
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13973
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13973
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13970, metadata !DIExpression()), !dbg !13971
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13974
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13975
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13976
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13977
  tail call fastcc void @sys_dnode_init.128(%struct._dnode* noundef %0) #26, !dbg !13978
  ret void, !dbg !13979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.128(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13980 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13982, metadata !DIExpression()), !dbg !13983
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13984
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13985
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13986
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13987
  ret void, !dbg !13988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13989 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13993, metadata !DIExpression()), !dbg !13995
  call void @llvm.dbg.value(metadata i32 128, metadata !13994, metadata !DIExpression()), !dbg !13995
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13996
  %3 = load i8, i8* %2, align 1, !dbg !13996
  %4 = icmp slt i8 %3, 0, !dbg !13997
  ret i1 %4, !dbg !13998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14003, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i32 %1, metadata !14004, metadata !DIExpression()), !dbg !14005
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14006
  ret i1 %3, !dbg !14007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14010, metadata !DIExpression()), !dbg !14011
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14012
  ret i1 %2, !dbg !14013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14016, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata i32 %1, metadata !14017, metadata !DIExpression()), !dbg !14018
  %3 = icmp slt i32 %0, %1, !dbg !14019
  ret i1 %3, !dbg !14020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14023, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata i32 0, metadata !14024, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14029
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14031, !srcloc !13563
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14031
  call void @llvm.dbg.value(metadata i32 %3, metadata !13560, metadata !DIExpression()) #25, !dbg !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14033
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()) #25, !dbg !14029
  call void @llvm.dbg.value(metadata i32 %3, metadata !14026, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()), !dbg !14028
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14034
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !14039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14039
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !14041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14043, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14024, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()), !dbg !14028
  ret void, !dbg !14044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14047, metadata !DIExpression()), !dbg !14048
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14049
  br i1 %2, label %24, label %3, !dbg !14051

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14052
  br i1 %4, label %5, label %24, !dbg !14053

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13734, metadata !DIExpression()) #25, !dbg !14054
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14057
  %7 = load i8, i8* %6, align 1, !dbg !14058
  %8 = or i8 %7, -128, !dbg !14058
  store i8 %8, i8* %6, align 1, !dbg !14058
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13741, metadata !DIExpression()) #25, !dbg !14059
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13748, metadata !DIExpression()) #25, !dbg !14061
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13754, metadata !DIExpression()) #25, !dbg !14061
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14063
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13755, metadata !DIExpression()) #25, !dbg !14061
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14064
  br i1 %10, label %21, label %11, !dbg !14063

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13755, metadata !DIExpression()) #25, !dbg !14061
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14065
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13755, metadata !DIExpression()) #25, !dbg !14061
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !14066
  %15 = icmp sgt i32 %14, 0, !dbg !14067
  br i1 %15, label %16, label %18, !dbg !14068

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14069
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !14070
  br label %23, !dbg !14071

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !14064
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13755, metadata !DIExpression()) #25, !dbg !14061
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14064
  br i1 %20, label %21, label %11, !dbg !14063, !llvm.loop !14072

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14074
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !14075
  br label %23, !dbg !14076

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14077
  br label %24, !dbg !14078

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14082, metadata !DIExpression()), !dbg !14083
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14084
  br i1 %2, label %6, label %3, !dbg !14085

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14086
  %5 = xor i1 %4, true, !dbg !14085
  br label %6, !dbg !14085

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14090, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata i32 0, metadata !14091, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14096
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14098, !srcloc !13563
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14098
  call void @llvm.dbg.value(metadata i32 %3, metadata !13560, metadata !DIExpression()) #25, !dbg !14100
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14100
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()) #25, !dbg !14096
  call void @llvm.dbg.value(metadata i32 %3, metadata !14093, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i32 undef, metadata !14091, metadata !DIExpression()), !dbg !14095
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14101
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !14104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14104
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !14106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14108, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14091, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i32 undef, metadata !14091, metadata !DIExpression()), !dbg !14095
  ret void, !dbg !14109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14110 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14112, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14115
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14117, !srcloc !13563
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14117
  call void @llvm.dbg.value(metadata i32 %3, metadata !13560, metadata !DIExpression()) #25, !dbg !14119
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14119
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()) #25, !dbg !14115
  call void @llvm.dbg.value(metadata i32 %3, metadata !14113, metadata !DIExpression()), !dbg !14114
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14120
  br i1 %4, label %5, label %6, !dbg !14122

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !14123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14123
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !14126
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14128, !srcloc !13589
  br label %8, !dbg !14129

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.133(%struct.k_thread* noundef %0) #26, !dbg !14130
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14131
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14132
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14132
  br label %8, !dbg !14133

8:                                                ; preds = %6, %5
  ret void, !dbg !14133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14134 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14136, metadata !DIExpression()), !dbg !14137
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14138
  %3 = load i8, i8* %2, align 1, !dbg !14138
  %4 = and i8 %3, 4, !dbg !14139
  %5 = icmp eq i8 %4, 0, !dbg !14140
  ret i1 %5, !dbg !14141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.133(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14144, metadata !DIExpression()), !dbg !14145
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14146
  %3 = load i8, i8* %2, align 1, !dbg !14147
  %4 = and i8 %3, -5, !dbg !14147
  store i8 %4, i8* %2, align 1, !dbg !14147
  ret void, !dbg !14148
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14149 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14152, metadata !DIExpression()), !dbg !14153
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14151, metadata !DIExpression()), !dbg !14153
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14154
  br i1 %4, label %5, label %9, !dbg !14156

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14157
  br i1 %6, label %7, label %9, !dbg !14158

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14159, metadata !DIExpression()) #25, !dbg !14165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14164, metadata !DIExpression()) #25, !dbg !14165
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14168
  br label %10, !dbg !14169

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !14170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14170
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !14173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14175, !srcloc !13589
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14181, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i32 %0, metadata !14183, metadata !DIExpression()), !dbg !14188
  %2 = icmp eq i32 %0, 0, !dbg !14190
  br i1 %2, label %3, label %6, !dbg !14191

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14192, !srcloc !14199
  call void @llvm.dbg.value(metadata i32 %4, metadata !14195, metadata !DIExpression()) #25, !dbg !14200
  %5 = icmp eq i32 %4, 0, !dbg !14201
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14182
  ret i1 %7, !dbg !14202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14203 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14206
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14205, metadata !DIExpression()), !dbg !14207
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14208
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14209
  ret i1 %3, !dbg !14210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14213, metadata !DIExpression()), !dbg !14215
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14216
  call void @llvm.dbg.value(metadata i32 %2, metadata !14214, metadata !DIExpression()), !dbg !14215
  ret i32 %2, !dbg !14217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14220, metadata !DIExpression()), !dbg !14224
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14225
  call void @llvm.dbg.value(metadata i32 0, metadata !14221, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14227
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14229, !srcloc !13563
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14229
  call void @llvm.dbg.value(metadata i32 %4, metadata !13560, metadata !DIExpression()) #25, !dbg !14231
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14231
  call void @llvm.dbg.value(metadata i32 %4, metadata !13554, metadata !DIExpression()) #25, !dbg !14227
  call void @llvm.dbg.value(metadata i32 %4, metadata !14223, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()), !dbg !14226
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14232
  br i1 %5, label %6, label %10, !dbg !14236

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()) #25, !dbg !14237
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14240
  %8 = load i8, i8* %7, align 1, !dbg !14241
  %9 = and i8 %8, 127, !dbg !14241
  store i8 %9, i8* %7, align 1, !dbg !14241
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13725, metadata !DIExpression()) #25, !dbg !14242
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14244
  br label %10, !dbg !14245

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14246
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14247
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14248
  %13 = zext i1 %12 to i32, !dbg !14248
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !14249
  call void @llvm.dbg.value(metadata i32 %4, metadata !13575, metadata !DIExpression()) #25, !dbg !14250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14250
  call void @llvm.dbg.value(metadata i32 %4, metadata !13583, metadata !DIExpression()) #25, !dbg !14252
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14254, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14221, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()), !dbg !14226
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14255
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14257
  br i1 %15, label %16, label %17, !dbg !14258

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14259
  br label %17, !dbg !14261

17:                                               ; preds = %16, %10
  ret void, !dbg !14262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14265, metadata !DIExpression()), !dbg !14266
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14267
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14268
  ret i32 %3, !dbg !14269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14272, metadata !DIExpression()), !dbg !14273
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14274
  %3 = load i8, i8* %2, align 1, !dbg !14275
  %4 = or i8 %3, 16, !dbg !14275
  store i8 %4, i8* %2, align 1, !dbg !14275
  ret void, !dbg !14276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14277 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14278, !srcloc !13563
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14278
  call void @llvm.dbg.value(metadata i32 %2, metadata !13560, metadata !DIExpression()) #25, !dbg !14280
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14280
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14281
  ret void, !dbg !14282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14285, metadata !DIExpression()), !dbg !14286
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14287
  br i1 %2, label %3, label %5, !dbg !14289

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14290
  br label %6, !dbg !14292

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13583, metadata !DIExpression()) #25, !dbg !14293
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !14296, !srcloc !13589
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14300, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14303
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14305, !srcloc !13563
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14305
  call void @llvm.dbg.value(metadata i32 %3, metadata !13560, metadata !DIExpression()) #25, !dbg !14307
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14307
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()) #25, !dbg !14303
  call void @llvm.dbg.value(metadata i32 %3, metadata !14301, metadata !DIExpression()), !dbg !14302
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14308
  br i1 %4, label %6, label %5, !dbg !14310

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !14311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14311
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !14314
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14316, !srcloc !13589
  br label %8, !dbg !14317

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14318
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14319
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14320
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14320
  br label %8, !dbg !14321

8:                                                ; preds = %6, %5
  ret void, !dbg !14321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14324, metadata !DIExpression()), !dbg !14325
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14326
  %3 = load i8, i8* %2, align 1, !dbg !14326
  %4 = and i8 %3, 16, !dbg !14327
  %5 = icmp ne i8 %4, 0, !dbg !14328
  ret i1 %5, !dbg !14329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14332, metadata !DIExpression()), !dbg !14333
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14334
  %3 = load i8, i8* %2, align 1, !dbg !14335
  %4 = and i8 %3, -17, !dbg !14335
  store i8 %4, i8* %2, align 1, !dbg !14335
  ret void, !dbg !14336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14337 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14347, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14345, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14346, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata i32 0, metadata !14348, metadata !DIExpression()), !dbg !14352
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14353
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14355, !srcloc !13563
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14355
  call void @llvm.dbg.value(metadata i32 %5, metadata !13560, metadata !DIExpression()) #25, !dbg !14357
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14357
  call void @llvm.dbg.value(metadata i32 %5, metadata !13554, metadata !DIExpression()) #25, !dbg !14353
  call void @llvm.dbg.value(metadata i32 %5, metadata !14350, metadata !DIExpression()), !dbg !14352
  call void @llvm.dbg.value(metadata i32 undef, metadata !14348, metadata !DIExpression()), !dbg !14352
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14358
  call void @llvm.dbg.value(metadata i32 %5, metadata !13575, metadata !DIExpression()) #25, !dbg !14361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14361
  call void @llvm.dbg.value(metadata i32 %5, metadata !13583, metadata !DIExpression()) #25, !dbg !14363
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14365, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14348, metadata !DIExpression()), !dbg !14352
  call void @llvm.dbg.value(metadata i32 undef, metadata !14348, metadata !DIExpression()), !dbg !14352
  ret void, !dbg !14366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14367 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14371, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14369, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14370, metadata !DIExpression()), !dbg !14372
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !14373
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14374
  ret void, !dbg !14375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14376 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14380, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14381, metadata !DIExpression()), !dbg !14382
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14383
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14384
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14385
  br i1 %3, label %21, label %4, !dbg !14387

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14388
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14390
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14391
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13748, metadata !DIExpression()) #25, !dbg !14392
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13754, metadata !DIExpression()) #25, !dbg !14392
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef nonnull %6) #27, !dbg !14394
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13755, metadata !DIExpression()) #25, !dbg !14392
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14395
  br i1 %8, label %19, label %9, !dbg !14394

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13755, metadata !DIExpression()) #25, !dbg !14392
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14396
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13755, metadata !DIExpression()) #25, !dbg !14392
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !14397
  %13 = icmp sgt i32 %12, 0, !dbg !14398
  br i1 %13, label %14, label %16, !dbg !14399

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14400
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !14401
  br label %21, !dbg !14402

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !14395
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13755, metadata !DIExpression()) #25, !dbg !14392
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14395
  br i1 %18, label %19, label %9, !dbg !14394, !llvm.loop !14403

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14405
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !14406
  br label %21, !dbg !14407

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14409 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14414, metadata !DIExpression()), !dbg !14415
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14413, metadata !DIExpression()), !dbg !14415
  %4 = icmp eq i64 %3, -1, !dbg !14416
  br i1 %4, label %6, label %5, !dbg !14418

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.136(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14419
  br label %6, !dbg !14421

6:                                                ; preds = %5, %2
  ret void, !dbg !14422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.136(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14423 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14426, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14425, metadata !DIExpression()), !dbg !14427
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14428
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14429
  ret void, !dbg !14430
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14431 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14433, metadata !DIExpression()), !dbg !14441
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14442
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14442
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14434, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.value(metadata i32 0, metadata !14435, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14444
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14446, !srcloc !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()) #25, !dbg !14448
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14448
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #25, !dbg !14444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14437, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14435, metadata !DIExpression()), !dbg !14443
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14449
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14450
  %7 = load i8, i8* %6, align 1, !dbg !14450
  %8 = and i8 %7, 40, !dbg !14451
  %9 = icmp eq i8 %8, 0, !dbg !14451
  call void @llvm.dbg.value(metadata i1 %9, metadata !14438, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14452
  br i1 %9, label %10, label %17, !dbg !14453

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14454
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !14454
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !14454
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !14458
  br i1 %14, label %16, label %15, !dbg !14459

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !14460
  br label %16, !dbg !14462

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.133(%struct.k_thread* noundef nonnull %3) #26, !dbg !14463
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !14464
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !14465
  br label %17, !dbg !14466

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14446
  call void @llvm.dbg.value(metadata i32 %18, metadata !13560, metadata !DIExpression()) #25, !dbg !14448
  call void @llvm.dbg.value(metadata i32 %18, metadata !13554, metadata !DIExpression()) #25, !dbg !14444
  call void @llvm.dbg.value(metadata i32 %18, metadata !14437, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 undef, metadata !13575, metadata !DIExpression()) #25, !dbg !14467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14467
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #25, !dbg !14469
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14471, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14435, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14435, metadata !DIExpression()), !dbg !14443
  ret void, !dbg !14472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14475, metadata !DIExpression()), !dbg !14476
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14477
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14478
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14479
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !14480
  ret void, !dbg !14481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14484, metadata !DIExpression()), !dbg !14485
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14486
  %3 = load i8, i8* %2, align 1, !dbg !14487
  %4 = and i8 %3, -3, !dbg !14487
  store i8 %4, i8* %2, align 1, !dbg !14487
  ret void, !dbg !14488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14491, metadata !DIExpression()), !dbg !14492
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14493
  br i1 %2, label %3, label %7, !dbg !14495

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()) #25, !dbg !14496
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14499
  %5 = load i8, i8* %4, align 1, !dbg !14500
  %6 = and i8 %5, 127, !dbg !14500
  store i8 %6, i8* %4, align 1, !dbg !14500
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13725, metadata !DIExpression()) #25, !dbg !14501
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14503
  br label %7, !dbg !14504

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14505
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14506
  %10 = zext i1 %9 to i32, !dbg !14506
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14507
  ret void, !dbg !14508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14509 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14511, metadata !DIExpression()), !dbg !14512
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14513
  %3 = load i8, i8* %2, align 1, !dbg !14514
  %4 = or i8 %3, 2, !dbg !14514
  store i8 %4, i8* %2, align 1, !dbg !14514
  ret void, !dbg !14515
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !14516 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14518, metadata !DIExpression()), !dbg !14522
  call void @llvm.dbg.value(metadata i32 0, metadata !14519, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14524
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14526, !srcloc !13563
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14526
  call void @llvm.dbg.value(metadata i32 %3, metadata !13560, metadata !DIExpression()) #25, !dbg !14528
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14528
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()) #25, !dbg !14524
  call void @llvm.dbg.value(metadata i32 %3, metadata !14521, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14519, metadata !DIExpression()), !dbg !14523
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14529
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !14534
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14536, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14519, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14519, metadata !DIExpression()), !dbg !14523
  ret void, !dbg !14537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14538 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14544, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i32 %0, metadata !14542, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14543, metadata !DIExpression()), !dbg !14549
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14550
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14551
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14552
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14553
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14554
  call void @llvm.dbg.value(metadata i32 %6, metadata !14545, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i32 0, metadata !14546, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14556
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14558, !srcloc !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()) #25, !dbg !14560
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14560
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #25, !dbg !14556
  call void @llvm.dbg.value(metadata i32 undef, metadata !14548, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()), !dbg !14555
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14561
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14565
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14566
  br i1 %10, label %11, label %12, !dbg !14567

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14568
  br label %12, !dbg !14570

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14558
  call void @llvm.dbg.value(metadata i32 %13, metadata !13560, metadata !DIExpression()) #25, !dbg !14560
  call void @llvm.dbg.value(metadata i32 %13, metadata !13554, metadata !DIExpression()) #25, !dbg !14556
  call void @llvm.dbg.value(metadata i32 %13, metadata !14548, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !13575, metadata !DIExpression()) #25, !dbg !14571
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14571
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #25, !dbg !14573
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !14575, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14546, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()), !dbg !14555
  ret i32 %6, !dbg !14576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14577 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14582, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata i64 undef, metadata !14584, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14581, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14583, metadata !DIExpression()), !dbg !14585
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14586
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14588
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14590, !srcloc !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()) #25, !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #25, !dbg !14588
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14593
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !14594
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14159, metadata !DIExpression()) #25, !dbg !14595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14164, metadata !DIExpression()) #25, !dbg !14595
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !14597
  ret i32 %9, !dbg !14598
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14599 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14603, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14604, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 0, metadata !14605, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14610
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14612, !srcloc !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()) #25, !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #25, !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14607, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14604, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14609
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14615
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14604, metadata !DIExpression()), !dbg !14608
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14618
  br i1 %5, label %7, label %6, !dbg !14620

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14621
  br label %7, !dbg !14623

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14612
  call void @llvm.dbg.value(metadata i32 %8, metadata !13560, metadata !DIExpression()) #25, !dbg !14614
  call void @llvm.dbg.value(metadata i32 %8, metadata !13554, metadata !DIExpression()) #25, !dbg !14610
  call void @llvm.dbg.value(metadata i32 %8, metadata !14607, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata i32 undef, metadata !13575, metadata !DIExpression()) #25, !dbg !14624
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14624
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #25, !dbg !14626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14628, !srcloc !13589
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14604, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14609
  ret %struct.k_thread* %4, !dbg !14629
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14630 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14632, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14633, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 0, metadata !14634, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14639
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14641, !srcloc !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()) #25, !dbg !14643
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14643
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #25, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14633, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14634, metadata !DIExpression()), !dbg !14638
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14633, metadata !DIExpression()), !dbg !14637
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14647
  br i1 %5, label %8, label %6, !dbg !14649

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14650
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14652
  br label %8, !dbg !14653

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14641
  call void @llvm.dbg.value(metadata i32 %9, metadata !13560, metadata !DIExpression()) #25, !dbg !14643
  call void @llvm.dbg.value(metadata i32 %9, metadata !13554, metadata !DIExpression()) #25, !dbg !14639
  call void @llvm.dbg.value(metadata i32 %9, metadata !14636, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13575, metadata !DIExpression()) #25, !dbg !14654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14654
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #25, !dbg !14656
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14658, !srcloc !13589
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14633, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14634, metadata !DIExpression()), !dbg !14638
  ret %struct.k_thread* %4, !dbg !14659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14662, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14518, metadata !DIExpression()) #25, !dbg !14664
  call void @llvm.dbg.value(metadata i32 0, metadata !14519, metadata !DIExpression()) #25, !dbg !14666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14667
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14669, !srcloc !13563
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %3, metadata !13560, metadata !DIExpression()) #25, !dbg !14671
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14671
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()) #25, !dbg !14667
  call void @llvm.dbg.value(metadata i32 %3, metadata !14521, metadata !DIExpression()) #25, !dbg !14666
  call void @llvm.dbg.value(metadata i32 undef, metadata !14519, metadata !DIExpression()) #25, !dbg !14666
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !14672
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !14673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !14675
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14677, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14519, metadata !DIExpression()) #25, !dbg !14666
  call void @llvm.dbg.value(metadata i32 undef, metadata !14519, metadata !DIExpression()) #25, !dbg !14666
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14678
  ret void, !dbg !14679
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14680 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14682, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.value(metadata i32 %1, metadata !14683, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.value(metadata i8 0, metadata !14684, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.value(metadata i32 0, metadata !14685, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14690
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14692, !srcloc !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()) #25, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #25, !dbg !14690
  call void @llvm.dbg.value(metadata i32 undef, metadata !14687, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i8 poison, metadata !14684, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.value(metadata i32 undef, metadata !14685, metadata !DIExpression()), !dbg !14689
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14695
  call void @llvm.dbg.value(metadata i1 %6, metadata !14684, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14688
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14698

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()) #25, !dbg !14699
  %11 = load i8, i8* %4, align 1, !dbg !14705
  %12 = and i8 %11, 127, !dbg !14705
  store i8 %12, i8* %4, align 1, !dbg !14705
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13725, metadata !DIExpression()) #25, !dbg !14706
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14708
  store i8 %9, i8* %8, align 2, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13734, metadata !DIExpression()) #25, !dbg !14710
  %13 = load i8, i8* %4, align 1, !dbg !14712
  %14 = or i8 %13, -128, !dbg !14712
  store i8 %14, i8* %4, align 1, !dbg !14712
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13741, metadata !DIExpression()) #25, !dbg !14713
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13748, metadata !DIExpression()) #25, !dbg !14715
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13754, metadata !DIExpression()) #25, !dbg !14715
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14717
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13755, metadata !DIExpression()) #25, !dbg !14715
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14718
  br i1 %16, label %26, label %17, !dbg !14717

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13755, metadata !DIExpression()) #25, !dbg !14715
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14719
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13755, metadata !DIExpression()) #25, !dbg !14715
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !14720
  %21 = icmp sgt i32 %20, 0, !dbg !14721
  br i1 %21, label %22, label %23, !dbg !14722

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !14723
  br label %27, !dbg !14724

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !14718
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13755, metadata !DIExpression()) #25, !dbg !14715
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14718
  br i1 %25, label %26, label %17, !dbg !14717, !llvm.loop !14725

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !14727
  br label %27, !dbg !14728

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14729
  br label %29, !dbg !14730

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14731
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %30, metadata !13560, metadata !DIExpression()) #25, !dbg !14694
  call void @llvm.dbg.value(metadata i32 %30, metadata !13554, metadata !DIExpression()) #25, !dbg !14690
  call void @llvm.dbg.value(metadata i32 %30, metadata !14687, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i32 undef, metadata !13575, metadata !DIExpression()) #25, !dbg !14733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #25, !dbg !14735
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !14737, !srcloc !13589
  call void @llvm.dbg.value(metadata i8 poison, metadata !14684, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.value(metadata i32 undef, metadata !14685, metadata !DIExpression()), !dbg !14689
  ret i1 %6, !dbg !14738
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14743, metadata !DIExpression()), !dbg !14746
  call void @llvm.dbg.value(metadata i32 %1, metadata !14744, metadata !DIExpression()), !dbg !14746
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14747
  call void @llvm.dbg.value(metadata i1 %3, metadata !14745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14746
  br i1 %3, label %4, label %12, !dbg !14748

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14750
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14751
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14751
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14751
  %9 = load i8, i8* %8, align 1, !dbg !14751
  %10 = icmp eq i8 %9, 0, !dbg !14752
  br i1 %10, label %11, label %12, !dbg !14753

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14754
  br label %12, !dbg !14756

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14758 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14760, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14764
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14766, !srcloc !13563
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14766
  call void @llvm.dbg.value(metadata i32 %2, metadata !13560, metadata !DIExpression()) #25, !dbg !14768
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14768
  call void @llvm.dbg.value(metadata i32 %2, metadata !13554, metadata !DIExpression()) #25, !dbg !14764
  call void @llvm.dbg.value(metadata i32 %2, metadata !14762, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14763
  tail call fastcc void @z_sched_lock() #26, !dbg !14769
  call void @llvm.dbg.value(metadata i32 %2, metadata !13575, metadata !DIExpression()) #25, !dbg !14772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14772
  call void @llvm.dbg.value(metadata i32 %2, metadata !13583, metadata !DIExpression()) #25, !dbg !14774
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14776, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14760, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14763
  ret void, !dbg !14777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14778 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14779
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14780
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14780
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14780
  %5 = load i8, i8* %4, align 1, !dbg !14781
  %6 = add i8 %5, -1, !dbg !14781
  store i8 %6, i8* %4, align 1, !dbg !14781
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14782, !srcloc !14784
  ret void, !dbg !14785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14786 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14788, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !14792
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14794, !srcloc !13563
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14794
  call void @llvm.dbg.value(metadata i32 %2, metadata !13560, metadata !DIExpression()) #25, !dbg !14796
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !14796
  call void @llvm.dbg.value(metadata i32 %2, metadata !13554, metadata !DIExpression()) #25, !dbg !14792
  call void @llvm.dbg.value(metadata i32 %2, metadata !14790, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 undef, metadata !14788, metadata !DIExpression()), !dbg !14791
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14797
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14800
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14800
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14800
  %7 = load i8, i8* %6, align 1, !dbg !14801
  %8 = add i8 %7, 1, !dbg !14801
  store i8 %8, i8* %6, align 1, !dbg !14801
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %2, metadata !13575, metadata !DIExpression()) #25, !dbg !14803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %2, metadata !13583, metadata !DIExpression()) #25, !dbg !14805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14807, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 1, metadata !14788, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 undef, metadata !14788, metadata !DIExpression()), !dbg !14791
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14808
  ret void, !dbg !14809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14810 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14811
  ret %struct.k_thread* %1, !dbg !14812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14813 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14817, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14818, metadata !DIExpression()), !dbg !14822
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14823
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14819, metadata !DIExpression()), !dbg !14822
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14824
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14820, metadata !DIExpression()), !dbg !14822
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14825
  call void @llvm.dbg.value(metadata i32 %5, metadata !14821, metadata !DIExpression()), !dbg !14822
  %6 = icmp sgt i32 %5, 0, !dbg !14826
  br i1 %6, label %17, label %7, !dbg !14828

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14829
  br i1 %8, label %17, label %9, !dbg !14831

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14832
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14832
  %12 = load i32, i32* %11, align 8, !dbg !14832
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14834
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14834
  %15 = load i32, i32* %14, align 8, !dbg !14834
  %16 = icmp ult i32 %12, %15, !dbg !14835
  br label %17, !dbg !14836

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14837
  ret i1 %18, !dbg !14838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14839 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14856, metadata !DIExpression()), !dbg !14871
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14857, metadata !DIExpression()), !dbg !14871
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14872
  %5 = load i32, i32* %4, align 4, !dbg !14873
  %6 = add nsw i32 %5, 1, !dbg !14873
  store i32 %6, i32* %4, align 4, !dbg !14873
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14874
  store i32 %5, i32* %7, align 8, !dbg !14875
  %8 = load i32, i32* %4, align 4, !dbg !14876
  %9 = icmp eq i32 %8, 0, !dbg !14877
  br i1 %9, label %10, label %32, !dbg !14878

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14879
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14879
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14859, metadata !DIExpression()), !dbg !14879
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14879
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14879
  %14 = load i32, i32* %13, align 4, !dbg !14879
  %15 = shl i32 %14, 2, !dbg !14879
  %16 = alloca i8, i32 %15, align 8, !dbg !14879
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14879
  store i8* %16, i8** %17, align 4, !dbg !14879
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14879
  %19 = alloca i8, i32 %14, align 8, !dbg !14879
  store i8* %19, i8** %18, align 4, !dbg !14879
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14879
  store i32 -1, i32* %20, align 4, !dbg !14879
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14880
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14868, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14858, metadata !DIExpression()), !dbg !14871
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14882
  br i1 %22, label %23, label %24, !dbg !14879

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14882
  br label %32, !dbg !14883

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14858, metadata !DIExpression()), !dbg !14871
  %26 = load i32, i32* %4, align 4, !dbg !14884
  %27 = add nsw i32 %26, 1, !dbg !14884
  store i32 %27, i32* %4, align 4, !dbg !14884
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14886
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14886
  store i32 %26, i32* %29, align 8, !dbg !14887
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14880
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14868, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14858, metadata !DIExpression()), !dbg !14871
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14882
  br i1 %31, label %23, label %24, !dbg !14879, !llvm.loop !14888

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14890
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14891
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !14892
  ret void, !dbg !14893
}

; Function Attrs: optsize
declare !dbg !14894 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14899 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14902 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14904, metadata !DIExpression()), !dbg !14906
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14905, metadata !DIExpression()), !dbg !14906
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14907
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14908
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !14909
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14910
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14910
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14912
  br i1 %7, label %8, label %10, !dbg !14913

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14914
  store i32 0, i32* %9, align 4, !dbg !14916
  br label %10, !dbg !14917

10:                                               ; preds = %8, %2
  ret void, !dbg !14918
}

; Function Attrs: optsize
declare !dbg !14919 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14920 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14924, metadata !DIExpression()), !dbg !14927
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14925, metadata !DIExpression()), !dbg !14927
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14928
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14929
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14926, metadata !DIExpression()), !dbg !14927
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14925, metadata !DIExpression()), !dbg !14927
  ret %struct.k_thread* %4, !dbg !14930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14931 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14935, metadata !DIExpression()), !dbg !14936
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !14937
  ret %struct.rbnode* %2, !dbg !14938
}

; Function Attrs: optsize
declare !dbg !14939 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14942 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14952, metadata !DIExpression()), !dbg !14956
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14957
  %3 = load i32, i32* %2, align 4, !dbg !14957
  %4 = icmp eq i32 %3, 0, !dbg !14959
  br i1 %4, label %10, label %5, !dbg !14960

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14953, metadata !DIExpression()), !dbg !14956
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14961, !range !3970
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14962
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14954, metadata !DIExpression()), !dbg !14956
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef %7) #26, !dbg !14963
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14955, metadata !DIExpression()), !dbg !14956
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14953, metadata !DIExpression()), !dbg !14956
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14956
  ret %struct.k_thread* %11, !dbg !14964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14965 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14969, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.value(metadata i32 0, metadata !14970, metadata !DIExpression()), !dbg !14972
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.147(%struct._wait_q_t* noundef %0) #26, !dbg !14973
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14971, metadata !DIExpression()), !dbg !14972
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14974
  br i1 %3, label %8, label %4, !dbg !14975

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14976
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14978
  call void @llvm.dbg.value(metadata i32 1, metadata !14970, metadata !DIExpression()), !dbg !14972
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.147(%struct._wait_q_t* noundef %0) #26, !dbg !14973
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14971, metadata !DIExpression()), !dbg !14972
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14974
  br i1 %7, label %8, label %4, !dbg !14975, !llvm.loop !14979

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14972
  ret i32 %9, !dbg !14981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.147(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !14982 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14984, metadata !DIExpression()), !dbg !14985
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14986
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef %2) #26, !dbg !14987
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14988
  ret %struct.k_thread* %4, !dbg !14989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !14990 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14999, metadata !DIExpression()), !dbg !15000
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15001
  tail call fastcc void @sys_dlist_init.148(%struct._dnode* noundef nonnull %2) #26, !dbg !15002
  ret void, !dbg !15003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.148(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15004 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15008, metadata !DIExpression()), !dbg !15009
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15010
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15011
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15012
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15013
  ret void, !dbg !15014
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15015 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15016
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15017
  ret void, !dbg !15018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15019 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15024, metadata !DIExpression()), !dbg !15025
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15026
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15026
  %4 = load i8, i8* %3, align 2, !dbg !15026
  %5 = sext i8 %4 to i32, !dbg !15027
  ret i32 %5, !dbg !15028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15033, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 %1, metadata !15034, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15035, metadata !DIExpression()), !dbg !15036
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15037
  ret void, !dbg !15038
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15039 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15040
  br i1 %1, label %8, label %2, !dbg !15041

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15042
  br i1 %3, label %8, label %4, !dbg !15043

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15044
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15045
  %7 = xor i1 %6, true, !dbg !15043
  br label %8, !dbg !15043

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15047 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15048, !range !6398
  %2 = icmp eq i8 %1, 0, !dbg !15048
  ret i1 %2, !dbg !15049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15050 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !15053
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15055, !srcloc !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()) #25, !dbg !15057
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !15057
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #25, !dbg !15053
  call void @llvm.dbg.value(metadata i32 undef, metadata !15052, metadata !DIExpression()), !dbg !15058
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15059
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13717, metadata !DIExpression()) #25, !dbg !15062
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15064
  %4 = load i8, i8* %3, align 1, !dbg !15065
  %5 = and i8 %4, 127, !dbg !15065
  store i8 %5, i8* %3, align 1, !dbg !15065
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13725, metadata !DIExpression()) #25, !dbg !15066
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !15068
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15069
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13734, metadata !DIExpression()) #25, !dbg !15070
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15072
  %8 = load i8, i8* %7, align 1, !dbg !15073
  %9 = or i8 %8, -128, !dbg !15073
  store i8 %9, i8* %7, align 1, !dbg !15073
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13741, metadata !DIExpression()) #25, !dbg !15074
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13748, metadata !DIExpression()) #25, !dbg !15076
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13754, metadata !DIExpression()) #25, !dbg !15076
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.126(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15078
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13755, metadata !DIExpression()) #25, !dbg !15076
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15079
  br i1 %11, label %22, label %12, !dbg !15078

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13755, metadata !DIExpression()) #25, !dbg !15076
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15080
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13755, metadata !DIExpression()) #25, !dbg !15076
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !15081
  %16 = icmp sgt i32 %15, 0, !dbg !15082
  br i1 %16, label %17, label %19, !dbg !15083

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15084
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !15085
  br label %24, !dbg !15086

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !15079
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13755, metadata !DIExpression()) #25, !dbg !15076
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15079
  br i1 %21, label %22, label %12, !dbg !15078, !llvm.loop !15087

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15089
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !15090
  br label %24, !dbg !15091

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15055
  call void @llvm.dbg.value(metadata i32 %25, metadata !13560, metadata !DIExpression()) #25, !dbg !15057
  call void @llvm.dbg.value(metadata i32 %25, metadata !13554, metadata !DIExpression()) #25, !dbg !15053
  call void @llvm.dbg.value(metadata i32 %25, metadata !15052, metadata !DIExpression()), !dbg !15058
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15092
  call void @llvm.dbg.value(metadata i32 undef, metadata !14159, metadata !DIExpression()) #25, !dbg !15093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14164, metadata !DIExpression()) #25, !dbg !15093
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !15095
  ret void, !dbg !15096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15097 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15101, metadata !DIExpression()), !dbg !15104
  %3 = icmp eq i64 %2, -1, !dbg !15105
  br i1 %3, label %4, label %6, !dbg !15107

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15108
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !15110
  br label %11, !dbg !15111

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15102, metadata !DIExpression()), !dbg !15104
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15112
  %8 = sext i32 %7 to i64, !dbg !15112
  call void @llvm.dbg.value(metadata i64 %8, metadata !15102, metadata !DIExpression()), !dbg !15104
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !15113
  %10 = trunc i64 %9 to i32, !dbg !15113
  call void @llvm.dbg.value(metadata i32 %10, metadata !15103, metadata !DIExpression()), !dbg !15104
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15104
  ret i32 %12, !dbg !15114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15115 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15119, metadata !DIExpression()), !dbg !15120
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15121, !srcloc !15123
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15124
  ret void, !dbg !15125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15126 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15130, metadata !DIExpression()), !dbg !15134
  %2 = icmp eq i64 %0, 0, !dbg !15135
  br i1 %2, label %3, label %4, !dbg !15137

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !15138
  br label %29, !dbg !15140

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15132, metadata !DIExpression()), !dbg !15134
  %5 = icmp sgt i64 %0, -3, !dbg !15141
  br i1 %5, label %6, label %10, !dbg !15143

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15144
  %8 = trunc i64 %0 to i32, !dbg !15146
  %9 = add i32 %7, %8, !dbg !15146
  call void @llvm.dbg.value(metadata i32 %9, metadata !15131, metadata !DIExpression()), !dbg !15134
  br label %13, !dbg !15147

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15148
  %12 = sub i32 -2, %11, !dbg !15148
  call void @llvm.dbg.value(metadata i32 %12, metadata !15131, metadata !DIExpression()), !dbg !15134
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15150
  call void @llvm.dbg.value(metadata i32 %14, metadata !15131, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !15151
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15153, !srcloc !13563
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15153
  call void @llvm.dbg.value(metadata i32 %16, metadata !13560, metadata !DIExpression()) #25, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !15155
  call void @llvm.dbg.value(metadata i32 %16, metadata !13554, metadata !DIExpression()) #25, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %16, metadata !15133, metadata !DIExpression()), !dbg !15134
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15156
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15157
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !15158
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15159
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15160
  tail call fastcc void @z_add_thread_timeout.136(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !15160
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15161
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !15162
  call void @llvm.dbg.value(metadata i32 %16, metadata !14159, metadata !DIExpression()) #25, !dbg !15163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14164, metadata !DIExpression()) #25, !dbg !15163
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !15165
  %22 = zext i32 %14 to i64, !dbg !15166
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15167
  %24 = zext i32 %23 to i64, !dbg !15167
  %25 = sub nsw i64 %22, %24, !dbg !15168
  call void @llvm.dbg.value(metadata i64 %25, metadata !15130, metadata !DIExpression()), !dbg !15134
  %26 = icmp sgt i64 %25, 0, !dbg !15169
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15169
  %28 = trunc i64 %27 to i32, !dbg !15169
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15134
  ret i32 %30, !dbg !15170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15171 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15173, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata i64 %0, metadata !13595, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i32 10000, metadata !13598, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i32 1000, metadata !13599, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i8 1, metadata !13600, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i1 false, metadata !13601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15175
  call void @llvm.dbg.value(metadata i1 false, metadata !13602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15175
  call void @llvm.dbg.value(metadata i8 0, metadata !13603, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i1 false, metadata !13604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15175
  call void @llvm.dbg.value(metadata i1 true, metadata !13605, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15175
  call void @llvm.dbg.value(metadata i64 0, metadata !13606, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i64 0, metadata !13606, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i64 %0, metadata !13595, metadata !DIExpression()), !dbg !15175
  %2 = udiv i64 %0, 10, !dbg !15177
  ret i64 %2, !dbg !15181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15182 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15183, !srcloc !15185
  tail call void @z_impl_k_yield() #26, !dbg !15186
  ret void, !dbg !15187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15192, metadata !DIExpression()), !dbg !15194
  %2 = sext i32 %0 to i64, !dbg !15195
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15196
  call void @llvm.dbg.value(metadata i64 %3, metadata !15193, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15194
  %4 = shl i64 %3, 32, !dbg !15197
  %5 = ashr exact i64 %4, 32, !dbg !15197
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15198
  call void @llvm.dbg.value(metadata i32 %6, metadata !15193, metadata !DIExpression()), !dbg !15194
  %7 = sext i32 %6 to i64, !dbg !15199
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15200
  %9 = trunc i64 %8 to i32, !dbg !15200
  ret i32 %9, !dbg !15201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15202 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15204, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i64 %0, metadata !13595, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13598, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i32 10000, metadata !13599, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i8 1, metadata !13600, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i1 false, metadata !13601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15206
  call void @llvm.dbg.value(metadata i1 true, metadata !13602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15206
  call void @llvm.dbg.value(metadata i8 0, metadata !13603, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i1 false, metadata !13604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15206
  call void @llvm.dbg.value(metadata i1 true, metadata !13605, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15206
  call void @llvm.dbg.value(metadata i64 0, metadata !13606, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i64 0, metadata !13606, metadata !DIExpression()), !dbg !15206
  %2 = add i64 %0, 99, !dbg !15208
  call void @llvm.dbg.value(metadata i64 %2, metadata !13595, metadata !DIExpression()), !dbg !15206
  %3 = udiv i64 %2, 100, !dbg !15209
  ret i64 %3, !dbg !15210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15211 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15213, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata i64 %0, metadata !13595, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 10000, metadata !13598, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13599, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i8 1, metadata !13600, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i1 false, metadata !13601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15215
  call void @llvm.dbg.value(metadata i1 false, metadata !13602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15215
  call void @llvm.dbg.value(metadata i8 0, metadata !13603, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i1 true, metadata !13604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15215
  call void @llvm.dbg.value(metadata i1 false, metadata !13605, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15215
  call void @llvm.dbg.value(metadata i64 0, metadata !13606, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i64 0, metadata !13606, metadata !DIExpression()), !dbg !15215
  %2 = mul i64 %0, 100, !dbg !15217
  ret i64 %2, !dbg !15219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15222, metadata !DIExpression()), !dbg !15223
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15224
  br i1 %2, label %14, label %3, !dbg !15226

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15227
  %5 = icmp slt i32 %4, 0, !dbg !15229
  br i1 %5, label %6, label %10, !dbg !15230

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15231
  %8 = load i8, i8* %7, align 1, !dbg !15231
  %9 = icmp eq i8 %8, 16, !dbg !15234
  br i1 %9, label %10, label %14, !dbg !15235

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15236
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15237
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15238, !srcloc !14199
  call void @llvm.dbg.value(metadata i32 %11, metadata !14195, metadata !DIExpression()) #25, !dbg !15242
  %12 = icmp eq i32 %11, 0, !dbg !15243
  br i1 %12, label %13, label %14, !dbg !15244

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15245
  br label %14, !dbg !15247

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15249 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15251, metadata !DIExpression()), !dbg !15252
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15253
  %3 = load i8, i8* %2, align 1, !dbg !15253
  %4 = and i8 %3, 2, !dbg !15254
  %5 = icmp ne i8 %4, 0, !dbg !15255
  ret i1 %5, !dbg !15256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15257 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15262
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15261, metadata !DIExpression()), !dbg !15263
  ret %struct.k_thread* %1, !dbg !15264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15265 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15266, !srcloc !14199
  call void @llvm.dbg.value(metadata i32 %1, metadata !14195, metadata !DIExpression()) #25, !dbg !15269
  %2 = icmp eq i32 %1, 0, !dbg !15270
  br i1 %2, label %3, label %8, !dbg !15271

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15272
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !15273
  %6 = icmp ne i32 %5, 0, !dbg !15271
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15277, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !15280
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15282, !srcloc !13563
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15282
  call void @llvm.dbg.value(metadata i32 %3, metadata !13560, metadata !DIExpression()) #25, !dbg !15284
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !15284
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()) #25, !dbg !15280
  call void @llvm.dbg.value(metadata i32 %3, metadata !15278, metadata !DIExpression()), !dbg !15279
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15285
  %5 = load i8, i8* %4, align 4, !dbg !15285
  %6 = and i8 %5, 1, !dbg !15287
  %7 = icmp eq i8 %6, 0, !dbg !15288
  br i1 %7, label %9, label %8, !dbg !15289

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !15290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !15293
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15295, !srcloc !13589
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !15296, !srcloc !15298
  br label %24, !dbg !15299

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15300
  %11 = load i8, i8* %10, align 1, !dbg !15300
  %12 = and i8 %11, 8, !dbg !15302
  %13 = icmp eq i8 %12, 0, !dbg !15303
  br i1 %13, label %15, label %14, !dbg !15304

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !15305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !15308
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15310, !srcloc !13589
  br label %24, !dbg !15311

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !15312
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15313
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15315
  br i1 %17, label %18, label %23, !dbg !15316

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15317, !srcloc !14199
  call void @llvm.dbg.value(metadata i32 %19, metadata !14195, metadata !DIExpression()) #25, !dbg !15320
  %20 = icmp eq i32 %19, 0, !dbg !15321
  br i1 %20, label %21, label %23, !dbg !15322

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14159, metadata !DIExpression()) #25, !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14164, metadata !DIExpression()) #25, !dbg !15323
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !15326
  br label %23, !dbg !15327

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13575, metadata !DIExpression()) #25, !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %3, metadata !13583, metadata !DIExpression()) #25, !dbg !15330
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15332, !srcloc !13589
  br label %24, !dbg !15333

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15336, metadata !DIExpression()), !dbg !15337
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15338
  %3 = load i8, i8* %2, align 1, !dbg !15338
  %4 = and i8 %3, 8, !dbg !15340
  %5 = icmp eq i8 %4, 0, !dbg !15341
  br i1 %5, label %6, label %20, !dbg !15342

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15343
  %8 = or i8 %7, 8, !dbg !15343
  store i8 %8, i8* %2, align 1, !dbg !15343
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !15345
  br i1 %9, label %10, label %12, !dbg !15347

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()) #25, !dbg !15348
  %11 = and i8 %8, 95, !dbg !15351
  store i8 %11, i8* %2, align 1, !dbg !15351
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13725, metadata !DIExpression()) #25, !dbg !15352
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !15354
  br label %12, !dbg !15355

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15356
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15356
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15358
  br i1 %15, label %17, label %16, !dbg !15359

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15360
  br label %17, !dbg !15362

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15363
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15364
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !15365
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15366
  br label %20, !dbg !15367

20:                                               ; preds = %17, %1
  ret void, !dbg !15368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15369 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15373, metadata !DIExpression()), !dbg !15375
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.147(%struct._wait_q_t* noundef %0) #26, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15374, metadata !DIExpression()), !dbg !15375
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15377
  br i1 %3, label %10, label %4, !dbg !15378

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15379
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15381
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15382, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.value(metadata i32 0, metadata !15387, metadata !DIExpression()), !dbg !15388
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !15390
  store i32 0, i32* %7, align 4, !dbg !15391
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15392
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.147(%struct._wait_q_t* noundef %0) #26, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15374, metadata !DIExpression()), !dbg !15375
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15377
  br i1 %9, label %10, label %4, !dbg !15378, !llvm.loop !15393

10:                                               ; preds = %4, %1
  ret void, !dbg !15395
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15396 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15401, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15400, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !15405
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15407, !srcloc !13563
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15407
  call void @llvm.dbg.value(metadata i32 %4, metadata !13560, metadata !DIExpression()) #25, !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !15409
  call void @llvm.dbg.value(metadata i32 %4, metadata !13554, metadata !DIExpression()) #25, !dbg !15405
  call void @llvm.dbg.value(metadata i32 %4, metadata !15402, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata i32 0, metadata !15403, metadata !DIExpression()), !dbg !15404
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15410
  %6 = load i8, i8* %5, align 1, !dbg !15410
  %7 = and i8 %6, 8, !dbg !15412
  %8 = icmp eq i8 %7, 0, !dbg !15413
  br i1 %8, label %9, label %24, !dbg !15414

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15401, metadata !DIExpression()), !dbg !15404
  %11 = icmp eq i64 %10, 0, !dbg !15415
  br i1 %11, label %24, label %12, !dbg !15417

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15418
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15420
  br i1 %14, label %24, label %15, !dbg !15421

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15422
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !15422
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15423
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !15424
  br i1 %19, label %24, label %20, !dbg !15425

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15426
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !15428
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15429
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !15430
  call void @llvm.dbg.value(metadata i32 %4, metadata !14159, metadata !DIExpression()) #25, !dbg !15431
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14164, metadata !DIExpression()) #25, !dbg !15431
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !15433
  call void @llvm.dbg.value(metadata i32 %23, metadata !15403, metadata !DIExpression()), !dbg !15404
  br label %26, !dbg !15434

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15435
  call void @llvm.dbg.value(metadata i32 %25, metadata !15403, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata i32 %4, metadata !13575, metadata !DIExpression()) #25, !dbg !15436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !15436
  call void @llvm.dbg.value(metadata i32 %4, metadata !13583, metadata !DIExpression()) #25, !dbg !15438
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15440, !srcloc !13589
  br label %26, !dbg !15441

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15404
  ret i32 %27, !dbg !15442
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15443 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15447, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i32 %1, metadata !15448, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i8* %2, metadata !15449, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i8 0, metadata !15451, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i32 0, metadata !15452, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13548, metadata !DIExpression()) #25, !dbg !15457
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15459, !srcloc !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()) #25, !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #25, !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata i8 poison, metadata !15451, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i32 undef, metadata !15452, metadata !DIExpression()), !dbg !15456
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !15462
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15450, metadata !DIExpression()), !dbg !15455
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15465
  br i1 %7, label %12, label %8, !dbg !15467

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15468, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i32 %1, metadata !15473, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i8* %2, metadata !15474, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15382, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i32 %1, metadata !15387, metadata !DIExpression()), !dbg !15478
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15480
  store i32 %1, i32* %9, align 4, !dbg !15481
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15482
  store i8* %2, i8** %10, align 4, !dbg !15483
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15484
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15485
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !15486
  call void @llvm.dbg.value(metadata i8 1, metadata !15451, metadata !DIExpression()), !dbg !15455
  br label %12, !dbg !15487

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15459
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15459
  call void @llvm.dbg.value(metadata i32 %14, metadata !13560, metadata !DIExpression()) #25, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %14, metadata !13554, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %14, metadata !15454, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata i8 poison, metadata !15451, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i32 undef, metadata !13575, metadata !DIExpression()) #25, !dbg !15488
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13580, metadata !DIExpression()) #25, !dbg !15488
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #25, !dbg !15490
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15492, !srcloc !13589
  call void @llvm.dbg.value(metadata i32 undef, metadata !15452, metadata !DIExpression()), !dbg !15456
  ret i1 %13, !dbg !15493
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15494 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15500, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata i64 undef, metadata !15502, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15499, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15501, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata i8** %4, metadata !15503, metadata !DIExpression()), !dbg !15505
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15506
  call void @llvm.dbg.value(metadata i32 %6, metadata !15504, metadata !DIExpression()), !dbg !15505
  %7 = icmp eq i8** %4, null, !dbg !15507
  br i1 %7, label %12, label %8, !dbg !15509

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15510
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15512
  %11 = load i8*, i8** %10, align 4, !dbg !15512
  store i8* %11, i8** %4, align 4, !dbg !15513
  br label %12, !dbg !15514

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15515
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15516 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !15518
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !15519
  ret void, !dbg !15520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15521 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15531, metadata !DIExpression()), !dbg !15548
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15529, metadata !DIExpression()), !dbg !15548
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15530, metadata !DIExpression()), !dbg !15548
  %5 = icmp eq i64 %4, -1, !dbg !15549
  br i1 %5, label %55, label %6, !dbg !15551

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15552
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15553
  call void @llvm.dbg.value(metadata i32 0, metadata !15532, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !15562
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15564, !srcloc !15570
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15564
  call void @llvm.dbg.value(metadata i32 %9, metadata !15567, metadata !DIExpression()) #25, !dbg !15571
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !15571
  call void @llvm.dbg.value(metadata i32 %9, metadata !15561, metadata !DIExpression()) #25, !dbg !15562
  call void @llvm.dbg.value(metadata i32 %9, metadata !15538, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15532, metadata !DIExpression()), !dbg !15554
  %10 = icmp slt i64 %4, -1, !dbg !15572
  br i1 %10, label %11, label %17, !dbg !15573

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15574
  %13 = add i64 %4, %12, !dbg !15575
  %14 = sub i64 -2, %13, !dbg !15575
  call void @llvm.dbg.value(metadata i64 %14, metadata !15542, metadata !DIExpression()), !dbg !15576
  %15 = icmp sgt i64 %14, 1, !dbg !15577
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15577
  br label %22, !dbg !15578

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15579
  %19 = tail call fastcc i32 @elapsed.159() #26, !dbg !15581
  %20 = sext i32 %19 to i64, !dbg !15581
  %21 = add nsw i64 %18, %20, !dbg !15582
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15583
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15584
  store i64 %23, i64* %24, align 8, !dbg !15585
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15586
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15539, metadata !DIExpression()), !dbg !15588
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15589
  br i1 %26, label %42, label %27, !dbg !15589

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15590
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15539, metadata !DIExpression()), !dbg !15588
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15594
  %31 = load i64, i64* %30, align 8, !dbg !15594
  %32 = icmp slt i64 %28, %31, !dbg !15595
  br i1 %32, label %33, label %38, !dbg !15596

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15594
  %35 = sub nsw i64 %31, %28, !dbg !15597
  store i64 %35, i64* %34, align 8, !dbg !15597
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15599
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15600
  tail call fastcc void @sys_dlist_insert.160(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15601
  br label %44, !dbg !15602

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15603
  store i64 %39, i64* %24, align 8, !dbg !15603
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15604
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15539, metadata !DIExpression()), !dbg !15588
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15589
  br i1 %41, label %42, label %27, !dbg !15589, !llvm.loop !15605

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15607
  tail call fastcc void @sys_dlist_append.161(%struct._dnode* noundef %43) #26, !dbg !15610
  br label %44, !dbg !15611

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15612
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15613
  br i1 %46, label %47, label %54, !dbg !15614

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15615
  call void @llvm.dbg.value(metadata i32 %48, metadata !15545, metadata !DIExpression()), !dbg !15616
  %49 = icmp ne i32 %48, 0, !dbg !15617
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15619
  br i1 %52, label %54, label %53, !dbg !15619

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !15620
  br label %54, !dbg !15622

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15623, metadata !DIExpression()) #25, !dbg !15629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !15629
  call void @llvm.dbg.value(metadata i32 %9, metadata !15631, metadata !DIExpression()) #25, !dbg !15634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15636, !srcloc !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !15532, metadata !DIExpression()), !dbg !15554
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.159() unnamed_addr #1 !dbg !15639 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15642
  %2 = icmp eq i32 %1, 0, !dbg !15643
  br i1 %2, label %3, label %5, !dbg !15642

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !15644
  br label %5, !dbg !15642

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15642
  ret i32 %6, !dbg !15645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15646 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.164() #26, !dbg !15652
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15650, metadata !DIExpression()), !dbg !15653
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15654
  ret %struct._timeout* %2, !dbg !15655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.160(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15656 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15660, metadata !DIExpression()), !dbg !15664
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15661, metadata !DIExpression()), !dbg !15664
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15665
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15665
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15662, metadata !DIExpression()), !dbg !15664
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15666
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15667
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15668
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15669
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15670
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15671
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15672
  ret void, !dbg !15673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15674 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15678, metadata !DIExpression()), !dbg !15680
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15681
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.162(%struct._dnode* noundef %2) #26, !dbg !15682
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15679, metadata !DIExpression()), !dbg !15680
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15683
  ret %struct._timeout* %4, !dbg !15684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.161(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15685 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15690, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15691, metadata !DIExpression()), !dbg !15693
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15694
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15692, metadata !DIExpression()), !dbg !15693
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15695
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15696
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15697
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15698
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15699
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15700
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15701
  ret void, !dbg !15702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15703 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15708
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15705, metadata !DIExpression()), !dbg !15709
  %2 = tail call fastcc i32 @elapsed.159() #26, !dbg !15710
  call void @llvm.dbg.value(metadata i32 %2, metadata !15706, metadata !DIExpression()), !dbg !15709
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15711
  br i1 %3, label %14, label %4, !dbg !15713

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15714
  %6 = load i64, i64* %5, align 8, !dbg !15714
  %7 = sext i32 %2 to i64, !dbg !15715
  %8 = sub nsw i64 %6, %7, !dbg !15716
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15717
  br i1 %9, label %14, label %10, !dbg !15718

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15719
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15719
  %13 = trunc i64 %12 to i32, !dbg !15719
  call void @llvm.dbg.value(metadata i32 %13, metadata !15707, metadata !DIExpression()), !dbg !15709
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15721
  call void @llvm.dbg.value(metadata i32 %15, metadata !15707, metadata !DIExpression()), !dbg !15709
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15722
  %17 = icmp ne i32 %16, 0, !dbg !15724
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15725
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15725
  call void @llvm.dbg.value(metadata i32 %20, metadata !15707, metadata !DIExpression()), !dbg !15709
  ret i32 %20, !dbg !15726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.162(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15727 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15731, metadata !DIExpression()), !dbg !15733
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15732, metadata !DIExpression()), !dbg !15733
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15734
  br i1 %2, label %5, label %3, !dbg !15735

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.163(%struct._dnode* noundef nonnull %0) #26, !dbg !15736
  br label %5, !dbg !15735

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15735
  ret %struct._dnode* %6, !dbg !15737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.163(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15738 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15740, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15741, metadata !DIExpression()), !dbg !15742
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15743
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15744
  br i1 %3, label %7, label %4, !dbg !15745

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15746
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15746
  br label %7, !dbg !15745

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15745
  ret %struct._dnode* %8, !dbg !15747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.164() unnamed_addr #5 !dbg !15748 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15752, metadata !DIExpression()), !dbg !15753
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.165() #26, !dbg !15754
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15754
  ret %struct._dnode* %3, !dbg !15755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.165() unnamed_addr #5 !dbg !15756 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15760, metadata !DIExpression()), !dbg !15761
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15762
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15763
  ret i1 %2, !dbg !15764
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15765 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15769, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata i32 -22, metadata !15770, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata i32 0, metadata !15771, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !15776
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15778, !srcloc !15570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15567, metadata !DIExpression()) #25, !dbg !15780
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !15780
  call void @llvm.dbg.value(metadata i32 undef, metadata !15561, metadata !DIExpression()) #25, !dbg !15776
  call void @llvm.dbg.value(metadata i32 undef, metadata !15773, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.value(metadata i32 -22, metadata !15770, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata i32 undef, metadata !15771, metadata !DIExpression()), !dbg !15775
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15770, metadata !DIExpression()), !dbg !15774
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.168(%struct._dnode* noundef %3) #26, !dbg !15781
  br i1 %4, label %5, label %6, !dbg !15785

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15786
  call void @llvm.dbg.value(metadata i32 0, metadata !15770, metadata !DIExpression()), !dbg !15774
  br label %6, !dbg !15788

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15774
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %8, metadata !15567, metadata !DIExpression()) #25, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %8, metadata !15561, metadata !DIExpression()) #25, !dbg !15776
  call void @llvm.dbg.value(metadata i32 %8, metadata !15773, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.value(metadata i32 %7, metadata !15770, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata i32 undef, metadata !15623, metadata !DIExpression()) #25, !dbg !15789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !15789
  call void @llvm.dbg.value(metadata i32 undef, metadata !15631, metadata !DIExpression()) #25, !dbg !15791
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15793, !srcloc !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !15771, metadata !DIExpression()), !dbg !15775
  ret i32 %7, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.168(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15795 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15801, metadata !DIExpression()), !dbg !15802
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15803
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15803
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15804
  ret i1 %4, !dbg !15805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15806 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15808, metadata !DIExpression()), !dbg !15809
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15810
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15812
  br i1 %3, label %10, label %4, !dbg !15813

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15814
  %6 = load i64, i64* %5, align 8, !dbg !15814
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15816
  %8 = load i64, i64* %7, align 8, !dbg !15817
  %9 = add nsw i64 %8, %6, !dbg !15817
  store i64 %9, i64* %7, align 8, !dbg !15817
  br label %10, !dbg !15818

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15819
  tail call fastcc void @sys_dlist_remove.169(%struct._dnode* noundef %11) #26, !dbg !15820
  ret void, !dbg !15821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.169(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15822 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15826, metadata !DIExpression()), !dbg !15829
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15830
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15830
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15827, metadata !DIExpression()), !dbg !15829
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15831
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15831
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15828, metadata !DIExpression()), !dbg !15829
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15832
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15833
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15834
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15835
  tail call fastcc void @sys_dnode_init.170(%struct._dnode* noundef %0) #26, !dbg !15836
  ret void, !dbg !15837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.170(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15838 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15840, metadata !DIExpression()), !dbg !15841
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15842
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15843
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15844
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15845
  ret void, !dbg !15846
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15847 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15853, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i64 0, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 0, metadata !15855, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !15860
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15862, !srcloc !15570
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15862
  call void @llvm.dbg.value(metadata i32 %3, metadata !15567, metadata !DIExpression()) #25, !dbg !15864
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !15864
  call void @llvm.dbg.value(metadata i32 %3, metadata !15561, metadata !DIExpression()) #25, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %3, metadata !15857, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i64 0, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15855, metadata !DIExpression()), !dbg !15859
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15865
  call void @llvm.dbg.value(metadata i64 %4, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 %3, metadata !15623, metadata !DIExpression()) #25, !dbg !15868
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !15868
  call void @llvm.dbg.value(metadata i32 %3, metadata !15631, metadata !DIExpression()) #25, !dbg !15870
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15872, !srcloc !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !15855, metadata !DIExpression()), !dbg !15859
  ret i64 %4, !dbg !15873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15874 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15876, metadata !DIExpression()), !dbg !15880
  call void @llvm.dbg.value(metadata i64 0, metadata !15877, metadata !DIExpression()), !dbg !15880
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.171(%struct._timeout* noundef %0) #26, !dbg !15881
  br i1 %2, label %21, label %3, !dbg !15883

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15884
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15878, metadata !DIExpression()), !dbg !15885
  call void @llvm.dbg.value(metadata i64 0, metadata !15877, metadata !DIExpression()), !dbg !15880
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15886
  br i1 %5, label %16, label %6, !dbg !15888

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15878, metadata !DIExpression()), !dbg !15885
  call void @llvm.dbg.value(metadata i64 %8, metadata !15877, metadata !DIExpression()), !dbg !15880
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15889
  %10 = load i64, i64* %9, align 8, !dbg !15889
  %11 = add nsw i64 %10, %8, !dbg !15891
  call void @llvm.dbg.value(metadata i64 %11, metadata !15877, metadata !DIExpression()), !dbg !15880
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15892
  br i1 %12, label %16, label %13, !dbg !15894

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15895
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15878, metadata !DIExpression()), !dbg !15885
  call void @llvm.dbg.value(metadata i64 %11, metadata !15877, metadata !DIExpression()), !dbg !15880
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15886
  br i1 %15, label %16, label %6, !dbg !15888, !llvm.loop !15896

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15880
  call void @llvm.dbg.value(metadata i64 %17, metadata !15877, metadata !DIExpression()), !dbg !15880
  %18 = tail call fastcc i32 @elapsed.159() #26, !dbg !15898
  %19 = sext i32 %18 to i64, !dbg !15898
  %20 = sub nsw i64 %17, %19, !dbg !15899
  br label %21, !dbg !15900

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15880
  ret i64 %22, !dbg !15901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.171(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15902 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15906, metadata !DIExpression()), !dbg !15907
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15908
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.168(%struct._dnode* noundef %2) #26, !dbg !15909
  %4 = xor i1 %3, true, !dbg !15910
  ret i1 %4, !dbg !15911
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15912 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15914, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i64 0, metadata !15915, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i32 0, metadata !15916, metadata !DIExpression()), !dbg !15920
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !15921
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15923, !srcloc !15570
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %3, metadata !15567, metadata !DIExpression()) #25, !dbg !15925
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !15925
  call void @llvm.dbg.value(metadata i32 %3, metadata !15561, metadata !DIExpression()) #25, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %3, metadata !15918, metadata !DIExpression()), !dbg !15920
  call void @llvm.dbg.value(metadata i64 0, metadata !15915, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()), !dbg !15920
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15926
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15929
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15915, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15919
  call void @llvm.dbg.value(metadata i32 %3, metadata !15623, metadata !DIExpression()) #25, !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !15930
  call void @llvm.dbg.value(metadata i32 %3, metadata !15631, metadata !DIExpression()) #25, !dbg !15932
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15934, !srcloc !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()), !dbg !15920
  %6 = add i64 %5, %4, !dbg !15935
  ret i64 %6, !dbg !15936
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15937 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15939, metadata !DIExpression()), !dbg !15943
  call void @llvm.dbg.value(metadata i32 0, metadata !15940, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !15945
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15947, !srcloc !15570
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15947
  call void @llvm.dbg.value(metadata i32 %2, metadata !15567, metadata !DIExpression()) #25, !dbg !15949
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !15949
  call void @llvm.dbg.value(metadata i32 %2, metadata !15561, metadata !DIExpression()) #25, !dbg !15945
  call void @llvm.dbg.value(metadata i32 %2, metadata !15942, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.value(metadata i32 -1, metadata !15939, metadata !DIExpression()), !dbg !15943
  call void @llvm.dbg.value(metadata i32 undef, metadata !15940, metadata !DIExpression()), !dbg !15944
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15950
  call void @llvm.dbg.value(metadata i32 %3, metadata !15939, metadata !DIExpression()), !dbg !15943
  call void @llvm.dbg.value(metadata i32 %2, metadata !15623, metadata !DIExpression()) #25, !dbg !15953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !15953
  call void @llvm.dbg.value(metadata i32 %2, metadata !15631, metadata !DIExpression()) #25, !dbg !15955
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15957, !srcloc !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !15940, metadata !DIExpression()), !dbg !15944
  ret i32 %3, !dbg !15958
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15961, metadata !DIExpression()), !dbg !15971
  call void @llvm.dbg.value(metadata i1 %1, metadata !15962, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15971
  call void @llvm.dbg.value(metadata i32 0, metadata !15963, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !15973
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15975, !srcloc !15570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15567, metadata !DIExpression()) #25, !dbg !15977
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !15977
  call void @llvm.dbg.value(metadata i32 undef, metadata !15561, metadata !DIExpression()) #25, !dbg !15973
  call void @llvm.dbg.value(metadata i32 undef, metadata !15965, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15963, metadata !DIExpression()), !dbg !15972
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !15978
  call void @llvm.dbg.value(metadata i32 %4, metadata !15966, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i1 undef, metadata !15969, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  %5 = icmp slt i32 %4, 2, !dbg !15980
  call void @llvm.dbg.value(metadata i1 %5, metadata !15970, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15981
  call void @llvm.dbg.value(metadata i1 %6, metadata !15969, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  br i1 %7, label %11, label %8, !dbg !15981

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15983
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15983
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !15985
  br label %11, !dbg !15986

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15975
  call void @llvm.dbg.value(metadata i32 %12, metadata !15567, metadata !DIExpression()) #25, !dbg !15977
  call void @llvm.dbg.value(metadata i32 %12, metadata !15561, metadata !DIExpression()) #25, !dbg !15973
  call void @llvm.dbg.value(metadata i32 %12, metadata !15965, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15623, metadata !DIExpression()) #25, !dbg !15987
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !15631, metadata !DIExpression()) #25, !dbg !15989
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !15991, !srcloc !15637
  call void @llvm.dbg.value(metadata i32 1, metadata !15963, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15963, metadata !DIExpression()), !dbg !15972
  ret void, !dbg !15992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15997, metadata !DIExpression()), !dbg !16002
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !16004
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16006, !srcloc !15570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15567, metadata !DIExpression()) #25, !dbg !16008
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !16008
  call void @llvm.dbg.value(metadata i32 undef, metadata !15561, metadata !DIExpression()) #25, !dbg !16004
  call void @llvm.dbg.value(metadata i32 undef, metadata !15998, metadata !DIExpression()), !dbg !16002
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16002
  call void @llvm.dbg.value(metadata i32 undef, metadata !15998, metadata !DIExpression()), !dbg !16002
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !16009
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16010
  br i1 %4, label %28, label %5, !dbg !16011

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16012
  %10 = load i64, i64* %9, align 8, !dbg !16012
  %11 = sext i32 %8 to i64, !dbg !16013
  %12 = icmp sgt i64 %10, %11, !dbg !16014
  br i1 %12, label %26, label %13, !dbg !16015

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16002
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15999, metadata !DIExpression()), !dbg !16016
  %15 = trunc i64 %10 to i32, !dbg !16017
  call void @llvm.dbg.value(metadata i32 %15, metadata !16001, metadata !DIExpression()), !dbg !16016
  %16 = sext i32 %15 to i64, !dbg !16018
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16019
  %18 = add i64 %17, %16, !dbg !16019
  store i64 %18, i64* @curr_tick, align 8, !dbg !16019
  store i64 0, i64* %9, align 8, !dbg !16020
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !16021
  call void @llvm.dbg.value(metadata i32 %14, metadata !15623, metadata !DIExpression()) #25, !dbg !16022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !16022
  call void @llvm.dbg.value(metadata i32 %14, metadata !15631, metadata !DIExpression()) #25, !dbg !16024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16026, !srcloc !15637
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16027
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16027
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !16028
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !16029
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16031, !srcloc !15570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15567, metadata !DIExpression()) #25, !dbg !16033
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !16033
  call void @llvm.dbg.value(metadata i32 undef, metadata !15561, metadata !DIExpression()) #25, !dbg !16029
  call void @llvm.dbg.value(metadata i32 undef, metadata !15998, metadata !DIExpression()), !dbg !16002
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16034
  %23 = sub nsw i32 %22, %15, !dbg !16034
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16002
  call void @llvm.dbg.value(metadata i32 undef, metadata !15998, metadata !DIExpression()), !dbg !16002
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !16009
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16010
  br i1 %25, label %28, label %5, !dbg !16011, !llvm.loop !16035

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16037
  store i64 %27, i64* %9, align 8, !dbg !16037
  br label %32, !dbg !16040

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16002
  %31 = sext i32 %30 to i64, !dbg !16041
  br label %32, !dbg !16041

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16041
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16002
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16042
  %37 = add i64 %36, %33, !dbg !16042
  store i64 %37, i64* @curr_tick, align 8, !dbg !16042
  store i32 0, i32* @announce_remaining, align 4, !dbg !16043
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !16044
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !16045
  call void @llvm.dbg.value(metadata i32 %35, metadata !15623, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata i32 %35, metadata !15631, metadata !DIExpression()) #25, !dbg !16048
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16050, !srcloc !15637
  ret void, !dbg !16051
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16052 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16056, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata i32 0, metadata !16057, metadata !DIExpression()), !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15555, metadata !DIExpression()) #25, !dbg !16062
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16064, !srcloc !15570
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16064
  call void @llvm.dbg.value(metadata i32 %2, metadata !15567, metadata !DIExpression()) #25, !dbg !16066
  call void @llvm.dbg.value(metadata i32 undef, metadata !15568, metadata !DIExpression()) #25, !dbg !16066
  call void @llvm.dbg.value(metadata i32 %2, metadata !15561, metadata !DIExpression()) #25, !dbg !16062
  call void @llvm.dbg.value(metadata i32 %2, metadata !16059, metadata !DIExpression()), !dbg !16061
  call void @llvm.dbg.value(metadata i64 0, metadata !16056, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16067
  %4 = tail call fastcc i32 @elapsed.159() #26, !dbg !16070
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16056, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16060
  call void @llvm.dbg.value(metadata i32 %2, metadata !15623, metadata !DIExpression()) #25, !dbg !16071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15628, metadata !DIExpression()) #25, !dbg !16071
  call void @llvm.dbg.value(metadata i32 %2, metadata !15631, metadata !DIExpression()) #25, !dbg !16073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16075, !srcloc !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  %5 = sext i32 %4 to i64, !dbg !16070
  %6 = add i64 %3, %5, !dbg !16076
  ret i64 %6, !dbg !16077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16078 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16079
  %2 = trunc i64 %1 to i32, !dbg !16080
  ret i32 %2, !dbg !16081
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16082 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16083
  ret i64 %1, !dbg !16084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16087, metadata !DIExpression()), !dbg !16094
  %2 = icmp eq i32 %0, 0, !dbg !16095
  br i1 %2, label %10, label %3, !dbg !16097

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16098
  call void @llvm.dbg.value(metadata i32 %4, metadata !16088, metadata !DIExpression()), !dbg !16094
  %5 = mul i32 %0, 84, !dbg !16099
  call void @llvm.dbg.value(metadata i32 %5, metadata !16089, metadata !DIExpression()), !dbg !16094
  br label %6, !dbg !16100

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16101
  call void @llvm.dbg.value(metadata i32 %7, metadata !16090, metadata !DIExpression()), !dbg !16102
  %8 = sub i32 %7, %4, !dbg !16103
  %9 = icmp ult i32 %8, %5, !dbg !16105
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16107 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !16108
  ret i32 %1, !dbg !16109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16110 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !16112
  ret i32 %1, !dbg !16113
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16114 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16118, metadata !DIExpression()), !dbg !16120
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16121

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !16122
  br label %14, !dbg !16126

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16119, metadata !DIExpression()), !dbg !16120
  %6 = icmp slt i64 %2, -1, !dbg !16127
  br i1 %6, label %7, label %9, !dbg !16130

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16131
  br label %14, !dbg !16132

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !16134
  %11 = icmp ugt i64 %2, 1, !dbg !16135
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16135
  %13 = add nsw i64 %10, %12, !dbg !16136
  br label %14, !dbg !16137

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16138
  ret i64 %15, !dbg !16139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16140 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.180, i32 0, i32 0)) #27, !dbg !16142
  ret void, !dbg !16143
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16146, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16147, metadata !DIExpression()), !dbg !16167
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !16168

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !16169

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16147, metadata !DIExpression()), !dbg !16167
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16170
  %6 = load i8*, i8** %5, align 4, !dbg !16170
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16174
  %8 = load i32, i32* %7, align 4, !dbg !16174
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !16175
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16176
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !16147, metadata !DIExpression()), !dbg !16167
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16177
  br i1 %10, label %3, label %2, !dbg !16168, !llvm.loop !16179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16181 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16185, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata i8* %1, metadata !16186, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata i32 %2, metadata !16187, metadata !DIExpression()), !dbg !16188
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16189
  tail call fastcc void @z_waitq_init.182(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !16190
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16191
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !16192
  ret void, !dbg !16193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.182(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !16194 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16199, metadata !DIExpression()), !dbg !16200
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16201
  tail call fastcc void @sys_dlist_init.183(%struct._dnode* noundef %2) #26, !dbg !16202
  ret void, !dbg !16203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.183(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16204 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16209, metadata !DIExpression()), !dbg !16210
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16211
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16212
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16213
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16214
  ret void, !dbg !16215
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16216 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16227, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16224, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i32 %1, metadata !16225, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i32 %2, metadata !16226, metadata !DIExpression()), !dbg !16237
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !16238
  call void @llvm.dbg.value(metadata i64 %6, metadata !16229, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i8* null, metadata !16230, metadata !DIExpression()), !dbg !16237
  %7 = icmp eq i64 %5, -1, !dbg !16239
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !16239
  call void @llvm.dbg.value(metadata i64 %8, metadata !16229, metadata !DIExpression()), !dbg !16237
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16241, metadata !DIExpression()) #25, !dbg !16248
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16250, !srcloc !16256
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #25, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !16254, metadata !DIExpression()) #25, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()) #25, !dbg !16248
  call void @llvm.dbg.value(metadata i32 undef, metadata !16231, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i8 0, metadata !16236, metadata !DIExpression()), !dbg !16237
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16230, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i8 0, metadata !16236, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i32 undef, metadata !16231, metadata !DIExpression()), !dbg !16237
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16258
  call void @llvm.dbg.value(metadata i8* %12, metadata !16230, metadata !DIExpression()), !dbg !16237
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !16260
  call void @llvm.dbg.value(metadata i64 %13, metadata !16228, metadata !DIExpression()), !dbg !16237
  %14 = icmp eq i8* %12, null, !dbg !16261
  br i1 %14, label %15, label %31, !dbg !16263

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16231, metadata !DIExpression()), !dbg !16237
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !16263

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !16236, metadata !DIExpression()), !dbg !16237
  %20 = sub nsw i64 %8, %18, !dbg !16264
  %21 = icmp slt i64 %20, 1, !dbg !16265
  br i1 %21, label %31, label %22, !dbg !16266

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16237
  call void @llvm.dbg.value(metadata i8 undef, metadata !16236, metadata !DIExpression()), !dbg !16237
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16267
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !16267
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !16267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16241, metadata !DIExpression()) #25, !dbg !16268
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16270, !srcloc !16256
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #25, !dbg !16272
  call void @llvm.dbg.value(metadata i32 undef, metadata !16254, metadata !DIExpression()) #25, !dbg !16272
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()) #25, !dbg !16268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16231, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i8* null, metadata !16230, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i32 undef, metadata !16231, metadata !DIExpression()), !dbg !16237
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16258
  call void @llvm.dbg.value(metadata i8* %28, metadata !16230, metadata !DIExpression()), !dbg !16237
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !16260
  call void @llvm.dbg.value(metadata i64 %29, metadata !16228, metadata !DIExpression()), !dbg !16237
  %30 = icmp eq i8* %28, null, !dbg !16261
  br i1 %30, label %17, label %31, !dbg !16263, !llvm.loop !16273

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !16258
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !16237
  call void @llvm.dbg.value(metadata i8* %33, metadata !16230, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i32 %34, metadata !16276, metadata !DIExpression()) #25, !dbg !16282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16281, metadata !DIExpression()) #25, !dbg !16282
  call void @llvm.dbg.value(metadata i32 %34, metadata !16284, metadata !DIExpression()) #25, !dbg !16287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !16289, !srcloc !16290
  ret i8* %33, !dbg !16291
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16292 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16298, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16296, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.value(metadata i32 %1, metadata !16297, metadata !DIExpression()), !dbg !16300
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !16301
  call void @llvm.dbg.value(metadata i8* %4, metadata !16299, metadata !DIExpression()), !dbg !16300
  ret i8* %4, !dbg !16302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16303 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16307, metadata !DIExpression()), !dbg !16310
  call void @llvm.dbg.value(metadata i8* %1, metadata !16308, metadata !DIExpression()), !dbg !16310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16241, metadata !DIExpression()) #25, !dbg !16311
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16313, !srcloc !16256
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16313
  call void @llvm.dbg.value(metadata i32 %4, metadata !16253, metadata !DIExpression()) #25, !dbg !16315
  call void @llvm.dbg.value(metadata i32 undef, metadata !16254, metadata !DIExpression()) #25, !dbg !16315
  call void @llvm.dbg.value(metadata i32 %4, metadata !16247, metadata !DIExpression()) #25, !dbg !16311
  call void @llvm.dbg.value(metadata i32 %4, metadata !16309, metadata !DIExpression()), !dbg !16310
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16316
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !16317
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16318
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !16320
  %8 = icmp eq i32 %7, 0, !dbg !16321
  br i1 %8, label %12, label %9, !dbg !16322

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16323
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !16324
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !16324
  br label %13, !dbg !16326

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !16276, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16281, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %4, metadata !16284, metadata !DIExpression()) #25, !dbg !16330
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16332, !srcloc !16290
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !16333
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!736, !2, !2393, !27, !264, !2395, !2397, !2430, !2468, !274, !318, !2470, !2481, !2527, !2529, !2557, !2585, !2628, !2699, !2744, !347, !492, !2772, !528, !538, !563, !768, !2777, !906, !1000, !1303, !1567, !2816, !1678, !1768, !2818, !2904, !2969, !1819, !2972, !1825, !2188, !2990, !2992, !2208, !3096, !2323, !3099, !2362}
!llvm.ident = !{!3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101, !3101}
!llvm.module.flags = !{!3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "uart_msgq", scope: !27, file: !209, line: 19, type: !223, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !206, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !112)
!111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !{!113, !145, !149, !153, !167, !172, !178, !184, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !110, file: !111, line: 365, baseType: !114, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DISubroutineType(types: !116)
!116 = !{!107, !117, !144}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !121)
!120 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = !{!122, !126, !127, !128, !137, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !119, file: !120, line: 380, baseType: !123, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !119, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !119, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !119, file: !120, line: 386, baseType: !129, size: 32, offset: 96)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !131)
!131 = !{!132, !135}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !130, file: !120, line: 359, baseType: !133, size: 8)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !134)
!134 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !130, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !119, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !119, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !120, line: 43, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !143)
!143 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !110, file: !111, line: 366, baseType: !146, size: 32, offset: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !117, !134}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !110, file: !111, line: 374, baseType: !150, size: 32, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DISubroutineType(types: !152)
!152 = !{!107, !117}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !110, file: !111, line: 377, baseType: !154, size: 32, offset: 96)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!155 = !DISubroutineType(types: !156)
!156 = !{!107, !117, !157}
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !160)
!160 = !{!161, !163, !164, !165, !166}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !159, file: !111, line: 123, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !159, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !159, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !159, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !159, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !110, file: !111, line: 379, baseType: !168, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{!107, !117, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !110, file: !111, line: 384, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DISubroutineType(types: !175)
!175 = !{!107, !117, !176, !107}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !110, file: !111, line: 393, baseType: !179, size: 32, offset: 192)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!107, !117, !182, !183}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !110, file: !111, line: 402, baseType: !185, size: 32, offset: 224)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{null, !117}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !110, file: !111, line: 405, baseType: !185, size: 32, offset: 256)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !110, file: !111, line: 408, baseType: !150, size: 32, offset: 288)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !110, file: !111, line: 411, baseType: !185, size: 32, offset: 320)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !110, file: !111, line: 414, baseType: !185, size: 32, offset: 352)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !110, file: !111, line: 417, baseType: !150, size: 32, offset: 384)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !110, file: !111, line: 420, baseType: !150, size: 32, offset: 416)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !110, file: !111, line: 423, baseType: !185, size: 32, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !110, file: !111, line: 426, baseType: !185, size: 32, offset: 480)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !110, file: !111, line: 429, baseType: !150, size: 32, offset: 512)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !110, file: !111, line: 432, baseType: !150, size: 32, offset: 544)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !110, file: !111, line: 435, baseType: !199, size: 32, offset: 576)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{null, !117, !202, !102}
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !117, !102}
!206 = !{!25, !207, !211, !216, !221}
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "uart_dev", scope: !27, file: !209, line: 21, type: !210, isLocal: true, isDefinition: true)
!209 = !DIFile(filename: "zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "_k_fifo_buf_uart_msgq", scope: !27, file: !209, line: 19, type: !213, isLocal: true, isDefinition: true, align: 32)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 2560, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 320)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "rx_buf", scope: !27, file: !209, line: 24, type: !218, isLocal: true, isDefinition: true)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 256, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 32)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "rx_buf_pos", scope: !27, file: !209, line: 25, type: !107, isLocal: true, isDefinition: true)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !225)
!224 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !{!226, !247, !251, !254, !255, !257, !258, !259, !260, !261}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !223, file: !224, line: 4206, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !229)
!228 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !230)
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !229, file: !228, line: 232, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !234)
!233 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !235)
!235 = !{!236, !242}
!236 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 38, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 38, size: 32, elements: !238)
!238 = !{!239, !241}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !237, file: !233, line: 39, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !237, file: !233, line: 40, baseType: !240, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 42, baseType: !243, size: 32, offset: 32)
!243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 42, size: 32, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !243, file: !233, line: 43, baseType: !240, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !243, file: !233, line: 44, baseType: !240, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !223, file: !224, line: 4208, baseType: !248, offset: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !223, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !253, line: 214, baseType: !32)
!253 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !223, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !223, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !223, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !223, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !223, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !223, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !223, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_char_out", scope: !264, file: !268, line: 54, type: !269, isLocal: false, isDefinition: true)
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !267, splitDebugInlining: false, nameTableKind: None)
!265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!266 = !{!102, !107}
!267 = !{!262}
!268 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DISubroutineType(types: !271)
!271 = !{!107, !107}
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !274, file: !291, line: 56, type: !292, isLocal: true, isDefinition: true, align: 32)
!274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !276, globals: !290, splitDebugInlining: false, nameTableKind: None)
!275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!276 = !{!277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 259, baseType: !280)
!279 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 250, size: 224, elements: !281)
!281 = !{!282, !284, !285, !286, !287, !288, !289}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !280, file: !279, line: 252, baseType: !283, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !162)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !280, file: !279, line: 253, baseType: !283, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !280, file: !279, line: 254, baseType: !283, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !280, file: !279, line: 255, baseType: !283, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !280, file: !279, line: 256, baseType: !283, size: 32, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !280, file: !279, line: 257, baseType: !283, size: 32, offset: 160)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !280, file: !279, line: 258, baseType: !283, size: 32, offset: 192)
!290 = !{!272}
!291 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !295)
!294 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !{!296, !315}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !293, file: !294, line: 60, baseType: !297, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DISubroutineType(types: !299)
!299 = !{!107, !300}
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !303)
!303 = !{!304, !305, !306, !307, !313, !314}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !302, file: !120, line: 380, baseType: !123, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !302, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !302, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !302, file: !120, line: 386, baseType: !308, size: 32, offset: 96)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !310)
!310 = !{!311, !312}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !309, file: !120, line: 359, baseType: !133, size: 8)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !309, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !302, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !302, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !293, file: !294, line: 65, baseType: !300, size: 32, offset: 32)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !318, file: !321, line: 71, type: !322, isLocal: true, isDefinition: true, align: 32)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !320, splitDebugInlining: false, nameTableKind: None)
!319 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!320 = !{!316}
!321 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !324)
!324 = !{!325, !344}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !323, file: !294, line: 60, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!327 = !DISubroutineType(types: !328)
!328 = !{!107, !329}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !332)
!332 = !{!333, !334, !335, !336, !342, !343}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !120, line: 380, baseType: !123, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !331, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !331, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !331, file: !120, line: 386, baseType: !337, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !338, file: !120, line: 359, baseType: !133, size: 8)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !338, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !331, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !331, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !323, file: !294, line: 65, baseType: !329, size: 32, offset: 32)
!345 = !DIGlobalVariableExpression(var: !346, expr: !DIExpression())
!346 = distinct !DIGlobalVariable(name: "static_regions", scope: !347, file: !354, line: 62, type: !488, isLocal: true, isDefinition: true)
!347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !349, globals: !350, splitDebugInlining: false, nameTableKind: None)
!348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!349 = !{!252, !107, !162, !102}
!350 = !{!351, !345}
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !353, file: !354, line: 198, type: !474, isLocal: true, isDefinition: true)
!353 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !354, file: !354, line: 175, type: !355, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !469)
!354 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = !DISubroutineType(types: !356)
!356 = !{null, !357}
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !426, !439, !440, !441, !442, !448, !464}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !358, file: !359, line: 247, baseType: !362, size: 384)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !363)
!363 = !{!364, !391, !398, !399, !400, !413, !414, !415}
!364 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 60, baseType: !365, size: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 60, size: 64, elements: !366)
!366 = !{!367, !382}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !365, file: !359, line: 61, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !370)
!370 = !{!371, !377}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 38, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 38, size: 32, elements: !373)
!373 = !{!374, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !233, line: 39, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !233, line: 40, baseType: !375, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 42, baseType: !378, size: 32, offset: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 42, size: 32, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !378, file: !233, line: 43, baseType: !375, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !233, line: 44, baseType: !375, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !365, file: !359, line: 62, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !383, file: !384, line: 50, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 64, elements: !389)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!389 = !{!390}
!390 = !DISubrange(count: 2)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !362, file: !359, line: 68, baseType: !392, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !395)
!395 = !{!396}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !394, file: !228, line: 232, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !369)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !362, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !362, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 90, baseType: !401, size: 16, offset: 112)
!401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 90, size: 16, elements: !402)
!402 = !{!403, !410}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !359, line: 91, baseType: !404, size: 16)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !401, file: !359, line: 91, size: 16, elements: !405)
!405 = !{!406, !409}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !404, file: !359, line: 96, baseType: !407, size: 8)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !408)
!408 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !404, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !401, file: !359, line: 100, baseType: !411, size: 16)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !412)
!412 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !362, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !362, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !362, file: !359, line: 131, baseType: !416, size: 192, offset: 192)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !417)
!417 = !{!418, !419, !425}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !416, file: !228, line: 245, baseType: !368, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !416, file: !228, line: 246, baseType: !420, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DISubroutineType(types: !423)
!423 = !{null, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !416, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !358, file: !359, line: 250, baseType: !427, size: 288, offset: 384)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !429)
!428 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!429 = !{!430, !431, !432, !433, !434, !435, !436, !437, !438}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !427, file: !428, line: 26, baseType: !162, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !427, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !427, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !427, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !427, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !427, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !427, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !427, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !427, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !358, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !358, file: !359, line: 256, baseType: !393, size: 64, offset: 704)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !358, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !358, file: !359, line: 300, baseType: !443, size: 96, offset: 800)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !444)
!444 = !{!445, !446, !447}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !443, file: !359, line: 153, baseType: !22, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !443, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !443, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !358, file: !359, line: 325, baseType: !449, size: 32, offset: 896)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 32)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !451)
!451 = !{!452, !461, !462}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !450, file: !224, line: 5074, baseType: !453, size: 96)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !455)
!454 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = !{!456, !459, !460}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !453, file: !454, line: 57, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !454, line: 57, flags: DIFlagFwdDecl)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !453, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !453, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !450, file: !224, line: 5075, baseType: !393, size: 64, offset: 96)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !450, file: !224, line: 5076, baseType: !463, offset: 160)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !358, file: !359, line: 343, baseType: !465, size: 64, offset: 928)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !465, file: !428, line: 63, baseType: !162, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !465, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!469 = !{!470, !471, !472, !473}
!470 = !DILocalVariable(name: "thread", arg: 1, scope: !353, file: !354, line: 175, type: !357)
!471 = !DILocalVariable(name: "region_num", scope: !353, file: !354, line: 200, type: !133)
!472 = !DILocalVariable(name: "guard_start", scope: !353, file: !354, line: 265, type: !22)
!473 = !DILocalVariable(name: "guard_size", scope: !353, file: !354, line: 266, type: !252)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 96, elements: !486)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !477)
!476 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!477 = !{!478, !479, !480}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !476, line: 53, baseType: !22, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !475, file: !476, line: 55, baseType: !481, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !483)
!482 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !484)
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !483, file: !482, line: 150, baseType: !162, size: 32)
!486 = !{!487}
!487 = !DISubrange(count: 1)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 96, elements: !486)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !475)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !492, file: !525, line: 39, type: !133, isLocal: true, isDefinition: true)
!492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !494, globals: !524, splitDebugInlining: false, nameTableKind: None)
!493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!494 = !{!495, !102, !107, !512, !133}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !497, line: 1226, baseType: !498)
!497 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 1213, size: 352, elements: !499)
!499 = !{!500, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !498, file: !497, line: 1215, baseType: !501, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !498, file: !497, line: 1216, baseType: !283, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !498, file: !497, line: 1217, baseType: !283, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !498, file: !497, line: 1218, baseType: !283, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !498, file: !497, line: 1219, baseType: !283, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !498, file: !497, line: 1220, baseType: !283, size: 32, offset: 160)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !498, file: !497, line: 1221, baseType: !283, size: 32, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !498, file: !497, line: 1222, baseType: !283, size: 32, offset: 224)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !498, file: !497, line: 1223, baseType: !283, size: 32, offset: 256)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !498, file: !497, line: 1224, baseType: !283, size: 32, offset: 288)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !498, file: !497, line: 1225, baseType: !283, size: 32, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !516)
!515 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !514, file: !515, line: 29, baseType: !162, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !514, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !514, file: !515, line: 37, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !522)
!522 = !{!523}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !521, file: !482, line: 143, baseType: !162, size: 32)
!524 = !{!490}
!525 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !528, file: !535, line: 21, type: !269, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !534, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!530 = !{!531, !107, !102}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !533, line: 22, baseType: !107)
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!526}
!535 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !538, file: !543, line: 13, type: !560, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !540, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!540 = !{!541, !536}
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "mpu_config", scope: !538, file: !543, line: 37, type: !544, isLocal: false, isDefinition: true)
!543 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !515, line: 41, size: 64, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !545, file: !515, line: 43, baseType: !162, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !545, file: !515, line: 45, baseType: !549, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !551, file: !515, line: 29, baseType: !162, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !551, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !551, file: !515, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !482, line: 143, baseType: !162, size: 32)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 192, elements: !389)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !563, file: !647, line: 72, type: !731, isLocal: true, isDefinition: true)
!563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !564, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !565, retainedTypes: !633, globals: !644, splitDebugInlining: false, nameTableKind: None)
!564 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!565 = !{!30, !566}
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !279, line: 65, baseType: !107, size: 32, elements: !567)
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632}
!568 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!569 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!570 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!571 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!572 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!573 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!574 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!575 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!576 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!577 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!578 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!579 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!580 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!581 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!582 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!583 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!584 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!585 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!586 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!587 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!588 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!589 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!590 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!591 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!592 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!593 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!594 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!595 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!596 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!597 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!598 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!599 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!600 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!601 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!602 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!603 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!604 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!605 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!606 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!607 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!608 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!609 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!610 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!611 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!612 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!613 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!614 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!615 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!616 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!617 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!618 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!619 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!620 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!621 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!622 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!623 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!624 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!625 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!626 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!627 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!628 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!629 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!630 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!631 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!632 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!633 = !{!252, !107, !102, !634}
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !279, line: 244, baseType: !636)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 236, size: 192, elements: !637)
!637 = !{!638, !639, !640, !641, !642, !643}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !636, file: !279, line: 238, baseType: !283, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !636, file: !279, line: 239, baseType: !283, size: 32, offset: 32)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !636, file: !279, line: 240, baseType: !283, size: 32, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !636, file: !279, line: 241, baseType: !283, size: 32, offset: 96)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !636, file: !279, line: 242, baseType: !283, size: 32, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !636, file: !279, line: 243, baseType: !283, size: 32, offset: 160)
!644 = !{!645, !651, !667, !678, !695, !561, !697, !711, !713, !715, !717, !719, !721, !723, !725, !727, !729}
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !563, file: !647, line: 424, type: !648, isLocal: false, isDefinition: true, align: 16)
!647 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !649)
!649 = !{!650}
!650 = !DISubrange(count: 4)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !563, file: !647, line: 424, type: !653, isLocal: false, isDefinition: true, align: 32)
!653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !655)
!655 = !{!656, !657, !658, !659, !665, !666}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !654, file: !120, line: 380, baseType: !123, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !654, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !654, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !654, file: !120, line: 386, baseType: !660, size: 32, offset: 96)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 32)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !662)
!662 = !{!663, !664}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !661, file: !120, line: 359, baseType: !133, size: 8)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !661, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !654, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !654, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!667 = !DIGlobalVariableExpression(var: !668, expr: !DIExpression())
!668 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !563, file: !647, line: 424, type: !669, isLocal: true, isDefinition: true, align: 32)
!669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !670)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !671)
!671 = !{!672, !677}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !670, file: !294, line: 60, baseType: !673, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 32)
!674 = !DISubroutineType(types: !675)
!675 = !{!107, !676}
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !670, file: !294, line: 65, baseType: !676, size: 32, offset: 32)
!678 = !DIGlobalVariableExpression(var: !679, expr: !DIExpression())
!679 = distinct !DIGlobalVariable(name: "exti_data", scope: !563, file: !647, line: 423, type: !680, isLocal: true, isDefinition: true)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !647, line: 107, size: 1472, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !680, file: !647, line: 109, baseType: !683, size: 1472)
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 1472, elements: !693)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !647, line: 101, size: 64, elements: !685)
!685 = !{!686, !692}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !684, file: !647, line: 102, baseType: !687, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !688, line: 63, baseType: !689)
!688 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = !DISubroutineType(types: !691)
!691 = !{null, !107, !102}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !684, file: !647, line: 103, baseType: !102, size: 32, offset: 32)
!693 = !{!694}
!694 = !DISubrange(count: 23)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !563, file: !647, line: 424, type: !661, isLocal: true, isDefinition: true, align: 8)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !699, file: !647, line: 493, type: !704, isLocal: true, isDefinition: true, align: 32)
!699 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !647, file: !647, line: 460, type: !700, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !702)
!700 = !DISubroutineType(types: !701)
!701 = !{null, !676}
!702 = !{!703}
!703 = !DILocalVariable(name: "dev", arg: 1, scope: !699, file: !647, line: 460, type: !676)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !705)
!705 = !{!706, !708, !709, !710}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !704, file: !10, line: 55, baseType: !707, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !704, file: !10, line: 57, baseType: !707, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !704, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !704, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !699, file: !647, line: 497, type: !704, isLocal: true, isDefinition: true, align: 32)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !699, file: !647, line: 507, type: !704, isLocal: true, isDefinition: true, align: 32)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !699, file: !647, line: 512, type: !704, isLocal: true, isDefinition: true, align: 32)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !699, file: !647, line: 516, type: !704, isLocal: true, isDefinition: true, align: 32)
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !699, file: !647, line: 523, type: !704, isLocal: true, isDefinition: true, align: 32)
!721 = !DIGlobalVariableExpression(var: !722, expr: !DIExpression())
!722 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !699, file: !647, line: 527, type: !704, isLocal: true, isDefinition: true, align: 32)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !699, file: !647, line: 581, type: !704, isLocal: true, isDefinition: true, align: 32)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !699, file: !647, line: 586, type: !704, isLocal: true, isDefinition: true, align: 32)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !699, file: !647, line: 591, type: !704, isLocal: true, isDefinition: true, align: 32)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !699, file: !647, line: 595, type: !704, isLocal: true, isDefinition: true, align: 32)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 736, elements: !693)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !279, line: 134, baseType: !566)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !736, file: !741, line: 22, type: !763, isLocal: false, isDefinition: true, align: 16)
!736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !738, splitDebugInlining: false, nameTableKind: None)
!737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!738 = !{!739, !734, !745, !747, !749, !751, !753, !755, !757, !759, !761}
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !736, file: !741, line: 17, type: !742, isLocal: false, isDefinition: true, align: 16)
!741 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 192, elements: !743)
!743 = !{!744}
!744 = !DISubrange(count: 12)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !736, file: !741, line: 29, type: !648, isLocal: false, isDefinition: true, align: 16)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !736, file: !741, line: 36, type: !648, isLocal: false, isDefinition: true, align: 16)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !736, file: !741, line: 43, type: !648, isLocal: false, isDefinition: true, align: 16)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !736, file: !741, line: 50, type: !648, isLocal: false, isDefinition: true, align: 16)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !736, file: !741, line: 57, type: !648, isLocal: false, isDefinition: true, align: 16)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !736, file: !741, line: 64, type: !648, isLocal: false, isDefinition: true, align: 16)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !736, file: !741, line: 71, type: !648, isLocal: false, isDefinition: true, align: 16)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !736, file: !741, line: 78, type: !648, isLocal: false, isDefinition: true, align: 16)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !736, file: !741, line: 85, type: !648, isLocal: false, isDefinition: true, align: 16)
!763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 48, elements: !764)
!764 = !{!765}
!765 = !DISubrange(count: 3)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !768, file: !832, line: 398, type: !865, isLocal: true, isDefinition: true)
!768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !770, retainedTypes: !783, globals: !829, splitDebugInlining: false, nameTableKind: None)
!769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!770 = !{!771, !30, !776}
!771 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !772, line: 197, baseType: !32, size: 32, elements: !773)
!772 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!773 = !{!774, !775}
!774 = !DIEnumerator(name: "SUCCESS", value: 0)
!775 = !DIEnumerator(name: "ERROR", value: 1)
!776 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !777, line: 44, baseType: !32, size: 32, elements: !778)
!777 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!778 = !{!779, !780, !781, !782}
!779 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!780 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!781 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!782 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!783 = !{!102, !107, !162, !784, !822, !828}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 370, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 336, size: 1152, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !821}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !786, file: !279, line: 338, baseType: !283, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !786, file: !279, line: 339, baseType: !283, size: 32, offset: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !786, file: !279, line: 340, baseType: !283, size: 32, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !786, file: !279, line: 341, baseType: !283, size: 32, offset: 96)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !786, file: !279, line: 342, baseType: !283, size: 32, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !786, file: !279, line: 343, baseType: !283, size: 32, offset: 160)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !786, file: !279, line: 344, baseType: !283, size: 32, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !786, file: !279, line: 345, baseType: !162, size: 32, offset: 224)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !786, file: !279, line: 346, baseType: !283, size: 32, offset: 256)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !786, file: !279, line: 347, baseType: !283, size: 32, offset: 288)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !786, file: !279, line: 348, baseType: !799, size: 64, offset: 320)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 64, elements: !389)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !786, file: !279, line: 349, baseType: !283, size: 32, offset: 384)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !786, file: !279, line: 350, baseType: !283, size: 32, offset: 416)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !786, file: !279, line: 351, baseType: !283, size: 32, offset: 448)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !786, file: !279, line: 352, baseType: !162, size: 32, offset: 480)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !786, file: !279, line: 353, baseType: !283, size: 32, offset: 512)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !786, file: !279, line: 354, baseType: !283, size: 32, offset: 544)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !786, file: !279, line: 355, baseType: !799, size: 64, offset: 576)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !786, file: !279, line: 356, baseType: !283, size: 32, offset: 640)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !786, file: !279, line: 357, baseType: !283, size: 32, offset: 672)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !786, file: !279, line: 358, baseType: !283, size: 32, offset: 704)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !786, file: !279, line: 359, baseType: !162, size: 32, offset: 736)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !786, file: !279, line: 360, baseType: !283, size: 32, offset: 768)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !786, file: !279, line: 361, baseType: !283, size: 32, offset: 800)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !786, file: !279, line: 362, baseType: !799, size: 64, offset: 832)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !786, file: !279, line: 363, baseType: !283, size: 32, offset: 896)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !786, file: !279, line: 364, baseType: !283, size: 32, offset: 928)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !786, file: !279, line: 365, baseType: !799, size: 64, offset: 960)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !786, file: !279, line: 366, baseType: !283, size: 32, offset: 1024)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !786, file: !279, line: 367, baseType: !283, size: 32, offset: 1056)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !786, file: !279, line: 368, baseType: !820, size: 32, offset: 1088)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 32, elements: !486)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !786, file: !279, line: 369, baseType: !283, size: 32, offset: 1120)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !824, line: 343, size: 64, elements: !825)
!824 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!825 = !{!826, !827}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !823, file: !824, line: 344, baseType: !162, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !823, file: !824, line: 345, baseType: !162, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!829 = !{!830, !836, !852, !863, !766}
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !768, file: !832, line: 752, type: !833, isLocal: false, isDefinition: true, align: 16)
!832 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 704, elements: !834)
!834 = !{!835}
!835 = !DISubrange(count: 44)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !768, file: !832, line: 752, type: !838, isLocal: false, isDefinition: true, align: 32)
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !839)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !840)
!840 = !{!841, !842, !843, !844, !850, !851}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !839, file: !120, line: 380, baseType: !123, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !839, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !839, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !839, file: !120, line: 386, baseType: !845, size: 32, offset: 96)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 32)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !847)
!847 = !{!848, !849}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !846, file: !120, line: 359, baseType: !133, size: 8)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !846, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !839, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !839, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !768, file: !832, line: 752, type: !854, isLocal: true, isDefinition: true, align: 32)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !856)
!856 = !{!857, !862}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !855, file: !294, line: 60, baseType: !858, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = !DISubroutineType(types: !860)
!860 = !{!107, !861}
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !855, file: !294, line: 65, baseType: !861, size: 32, offset: 32)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !768, file: !832, line: 752, type: !846, isLocal: true, isDefinition: true, align: 8)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !777, line: 100, size: 224, elements: !866)
!866 = !{!867, !873, !874, !883, !888, !893, !899}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !865, file: !777, line: 101, baseType: !868, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !777, line: 76, baseType: !869)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DISubroutineType(types: !871)
!871 = !{!107, !861, !872}
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !777, line: 56, baseType: !102)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !865, file: !777, line: 102, baseType: !868, size: 32, offset: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !865, file: !777, line: 103, baseType: !875, size: 32, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !777, line: 83, baseType: !876)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DISubroutineType(types: !878)
!878 = !{!107, !861, !872, !879, !102}
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !777, line: 72, baseType: !880)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !861, !872, !102}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !865, file: !777, line: 104, baseType: !884, size: 32, offset: 96)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !777, line: 79, baseType: !885)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DISubroutineType(types: !887)
!887 = !{!107, !861, !872, !828}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !865, file: !777, line: 105, baseType: !889, size: 32, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !777, line: 88, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!891 = !DISubroutineType(types: !892)
!892 = !{!776, !861, !872}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !865, file: !777, line: 106, baseType: !894, size: 32, offset: 160)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !777, line: 92, baseType: !895)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = !DISubroutineType(types: !897)
!897 = !{!107, !861, !872, !898}
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !777, line: 64, baseType: !102)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !865, file: !777, line: 107, baseType: !900, size: 32, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !777, line: 96, baseType: !901)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DISubroutineType(types: !903)
!903 = !{!107, !861, !872, !102}
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !906, file: !991, line: 603, type: !993, isLocal: true, isDefinition: true, align: 32)
!906 = distinct !DICompileUnit(language: DW_LANG_C99, file: !907, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !908, globals: !988, splitDebugInlining: false, nameTableKind: None)
!907 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!908 = !{!102, !107, !909}
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !912)
!912 = !{!913, !932, !936, !940, !953, !958, !962, !966, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !911, file: !111, line: 365, baseType: !914, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!107, !917, !144}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !920)
!920 = !{!921, !922, !923, !924, !930, !931}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !919, file: !120, line: 380, baseType: !123, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !919, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !919, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !919, file: !120, line: 386, baseType: !925, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !926, file: !120, line: 359, baseType: !133, size: 8)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !926, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !919, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !919, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !911, file: !111, line: 366, baseType: !933, size: 32, offset: 32)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DISubroutineType(types: !935)
!935 = !{null, !917, !134}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !911, file: !111, line: 374, baseType: !937, size: 32, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!107, !917}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !911, file: !111, line: 377, baseType: !941, size: 32, offset: 96)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!107, !917, !944}
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !947)
!947 = !{!948, !949, !950, !951, !952}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !946, file: !111, line: 123, baseType: !162, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !946, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !946, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !946, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !946, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !911, file: !111, line: 379, baseType: !954, size: 32, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DISubroutineType(types: !956)
!956 = !{!107, !917, !957}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !911, file: !111, line: 384, baseType: !959, size: 32, offset: 160)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!107, !917, !176, !107}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !911, file: !111, line: 393, baseType: !963, size: 32, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DISubroutineType(types: !965)
!965 = !{!107, !917, !182, !183}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !911, file: !111, line: 402, baseType: !967, size: 32, offset: 224)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !917}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !911, file: !111, line: 405, baseType: !967, size: 32, offset: 256)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !911, file: !111, line: 408, baseType: !937, size: 32, offset: 288)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !911, file: !111, line: 411, baseType: !967, size: 32, offset: 320)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !911, file: !111, line: 414, baseType: !967, size: 32, offset: 352)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !911, file: !111, line: 417, baseType: !937, size: 32, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !911, file: !111, line: 420, baseType: !937, size: 32, offset: 416)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !911, file: !111, line: 423, baseType: !967, size: 32, offset: 448)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !911, file: !111, line: 426, baseType: !967, size: 32, offset: 480)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !911, file: !111, line: 429, baseType: !937, size: 32, offset: 512)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !911, file: !111, line: 432, baseType: !937, size: 32, offset: 544)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !911, file: !111, line: 435, baseType: !981, size: 32, offset: 576)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{null, !917, !984, !102}
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !917, !102}
!988 = !{!904, !989}
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !906, file: !991, line: 38, type: !992, isLocal: true, isDefinition: true)
!991 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !995)
!995 = !{!996, !997}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !994, file: !294, line: 60, baseType: !937, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !994, file: !294, line: 65, baseType: !917, size: 32, offset: 32)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1000, file: !1169, line: 762, type: !1278, isLocal: true, isDefinition: true)
!1000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1002, retainedTypes: !1020, globals: !1166, splitDebugInlining: false, nameTableKind: None)
!1001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!1002 = !{!30, !1003, !1009, !1014, !776}
!1003 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1004, line: 506, baseType: !32, size: 32, elements: !1005)
!1004 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1005 = !{!1006, !1007, !1008}
!1006 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1007 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1008 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1009 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1004, line: 512, baseType: !32, size: 32, elements: !1010)
!1010 = !{!1011, !1012, !1013}
!1011 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1012 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1013 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1014 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !688, line: 43, baseType: !32, size: 32, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019}
!1016 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1017 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1018 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1019 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1020 = !{!102, !107, !1021, !1091, !1096, !1056, !1009, !1003, !1101, !1102, !162, !1116, !1071, !256, !1126, !1127}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1004, line: 523, size: 288, elements: !1024)
!1024 = !{!1025, !1046, !1052, !1057, !1061, !1062, !1063, !1067, !1087}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1023, file: !1004, line: 524, baseType: !1026, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!107, !1029, !1044, !1045}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1036, !1042, !1043}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1031, file: !120, line: 380, baseType: !123, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1031, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1031, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1031, file: !120, line: 386, baseType: !1037, size: 32, offset: 96)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1038, file: !120, line: 359, baseType: !133, size: 8)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1038, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1031, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1031, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1004, line: 237, baseType: !133)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1004, line: 257, baseType: !162)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1023, file: !1004, line: 530, baseType: !1047, size: 32, offset: 32)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!107, !1029, !1050}
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1004, line: 229, baseType: !162)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1023, file: !1004, line: 532, baseType: !1053, size: 32, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!107, !1029, !1056, !1051}
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1004, line: 216, baseType: !162)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1023, file: !1004, line: 535, baseType: !1058, size: 32, offset: 96)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!107, !1029, !1056}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1023, file: !1004, line: 537, baseType: !1058, size: 32, offset: 128)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1023, file: !1004, line: 539, baseType: !1058, size: 32, offset: 160)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1023, file: !1004, line: 541, baseType: !1064, size: 32, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!107, !1029, !1044, !1003, !1009}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1023, file: !1004, line: 544, baseType: !1068, size: 32, offset: 224)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!107, !1029, !1071, !136}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1004, line: 478, size: 96, elements: !1073)
!1073 = !{!1074, !1081, !1086}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1072, file: !1004, line: 482, baseType: !1075, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1076, line: 33, baseType: !1077)
!1076 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1076, line: 29, size: 32, elements: !1078)
!1078 = !{!1079}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1077, file: !1076, line: 30, baseType: !1080, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1072, file: !1004, line: 485, baseType: !1082, size: 32, offset: 32)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1004, line: 464, baseType: !1083)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{null, !1029, !1071, !1056}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1072, file: !1004, line: 493, baseType: !1056, size: 32, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1023, file: !1004, line: 547, baseType: !1088, size: 32, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!162, !1029}
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1004, line: 428, size: 32, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1093, file: !1004, line: 434, baseType: !1056, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1004, line: 441, size: 32, elements: !1099)
!1099 = !{!1100}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1098, file: !1004, line: 447, baseType: !1056, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 276, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 265, size: 320, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1104, file: !279, line: 267, baseType: !283, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1104, file: !279, line: 268, baseType: !283, size: 32, offset: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1104, file: !279, line: 269, baseType: !283, size: 32, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1104, file: !279, line: 270, baseType: !283, size: 32, offset: 96)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1104, file: !279, line: 271, baseType: !283, size: 32, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1104, file: !279, line: 272, baseType: !283, size: 32, offset: 160)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1104, file: !279, line: 273, baseType: !283, size: 32, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1104, file: !279, line: 274, baseType: !283, size: 32, offset: 224)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1104, file: !279, line: 275, baseType: !1115, size: 64, offset: 256)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 64, elements: !389)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !279, line: 289, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 282, size: 288, elements: !1119)
!1119 = !{!1120, !1121, !1122, !1124, !1125}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1118, file: !279, line: 284, baseType: !283, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1118, file: !279, line: 285, baseType: !283, size: 32, offset: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1118, file: !279, line: 286, baseType: !1123, size: 128, offset: 64)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 128, elements: !649)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1118, file: !279, line: 287, baseType: !799, size: 64, offset: 192)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1118, file: !279, line: 288, baseType: !283, size: 32, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !777, line: 100, size: 224, elements: !1130)
!1130 = !{!1131, !1136, !1137, !1146, !1151, !1156, !1161}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1129, file: !777, line: 101, baseType: !1132, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !777, line: 76, baseType: !1133)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!107, !1029, !872}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1129, file: !777, line: 102, baseType: !1132, size: 32, offset: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1129, file: !777, line: 103, baseType: !1138, size: 32, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !777, line: 83, baseType: !1139)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!107, !1029, !872, !1142, !102}
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !777, line: 72, baseType: !1143)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{null, !1029, !872, !102}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1129, file: !777, line: 104, baseType: !1147, size: 32, offset: 96)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !777, line: 79, baseType: !1148)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!107, !1029, !872, !828}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1129, file: !777, line: 105, baseType: !1152, size: 32, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !777, line: 88, baseType: !1153)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!776, !1029, !872}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1129, file: !777, line: 106, baseType: !1157, size: 32, offset: 160)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !777, line: 92, baseType: !1158)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!107, !1029, !872, !898}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1129, file: !777, line: 107, baseType: !1162, size: 32, offset: 192)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !777, line: 96, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!107, !1029, !872, !102}
!1166 = !{!1167, !1173, !1175, !1185, !1190, !1192, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !998, !1274, !1276, !1289, !1291, !1293, !1295, !1297, !1299}
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1000, file: !1169, line: 762, type: !1170, isLocal: false, isDefinition: true, align: 16)
!1169 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 80, elements: !1171)
!1171 = !{!1172}
!1172 = !DISubrange(count: 5)
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1000, file: !1169, line: 762, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1000, file: !1169, line: 762, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1179)
!1179 = !{!1180, !1184}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1178, file: !294, line: 60, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!107, !1029}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1178, file: !294, line: 65, baseType: !1029, size: 32, offset: 32)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1000, file: !1169, line: 766, type: !1187, isLocal: false, isDefinition: true, align: 16)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 160, elements: !1188)
!1188 = !{!1189}
!1189 = !DISubrange(count: 10)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1000, file: !1169, line: 766, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1000, file: !1169, line: 766, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1000, file: !1169, line: 770, type: !1170, isLocal: false, isDefinition: true, align: 16)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1000, file: !1169, line: 770, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1000, file: !1169, line: 770, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1000, file: !1169, line: 774, type: !1170, isLocal: false, isDefinition: true, align: 16)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1000, file: !1169, line: 774, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1000, file: !1169, line: 774, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1000, file: !1169, line: 778, type: !1170, isLocal: false, isDefinition: true, align: 16)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1000, file: !1169, line: 778, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1000, file: !1169, line: 778, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1000, file: !1169, line: 782, type: !1170, isLocal: false, isDefinition: true, align: 16)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1000, file: !1169, line: 782, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1000, file: !1169, line: 782, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1000, file: !1169, line: 786, type: !1170, isLocal: false, isDefinition: true, align: 16)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1000, file: !1169, line: 786, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1000, file: !1169, line: 786, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1000, file: !1169, line: 790, type: !1170, isLocal: false, isDefinition: true, align: 16)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1000, file: !1169, line: 790, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1000, file: !1169, line: 790, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1000, file: !1169, line: 762, type: !1232, isLocal: true, isDefinition: true)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1233, line: 237, size: 128, elements: !1234)
!1233 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1234 = !{!1235, !1236, !1237}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1232, file: !1233, line: 239, baseType: !1098, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1232, file: !1233, line: 241, baseType: !1029, size: 32, offset: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1232, file: !1233, line: 243, baseType: !1238, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1076, line: 40, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1076, line: 35, size: 64, elements: !1240)
!1240 = !{!1241, !1243}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1239, file: !1076, line: 36, baseType: !1242, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1239, file: !1076, line: 37, baseType: !1242, size: 32, offset: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1000, file: !1169, line: 762, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1000, file: !1169, line: 766, type: !1232, isLocal: true, isDefinition: true)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1000, file: !1169, line: 766, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1000, file: !1169, line: 770, type: !1232, isLocal: true, isDefinition: true)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1000, file: !1169, line: 770, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1000, file: !1169, line: 774, type: !1232, isLocal: true, isDefinition: true)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1000, file: !1169, line: 774, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1000, file: !1169, line: 778, type: !1232, isLocal: true, isDefinition: true)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1000, file: !1169, line: 778, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1000, file: !1169, line: 782, type: !1232, isLocal: true, isDefinition: true)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1000, file: !1169, line: 782, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1000, file: !1169, line: 786, type: !1232, isLocal: true, isDefinition: true)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1000, file: !1169, line: 786, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1000, file: !1169, line: 790, type: !1232, isLocal: true, isDefinition: true)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1000, file: !1169, line: 790, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1000, file: !1169, line: 656, type: !1022, isLocal: true, isDefinition: true)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1000, file: !1169, line: 766, type: !1278, isLocal: true, isDefinition: true)
!1278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1233, line: 224, size: 160, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1279, file: !1233, line: 226, baseType: !1093, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1279, file: !1233, line: 228, baseType: !828, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1279, file: !1233, line: 230, baseType: !107, size: 32, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1279, file: !1233, line: 231, baseType: !1285, size: 64, offset: 96)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !824, line: 343, size: 64, elements: !1286)
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1285, file: !824, line: 344, baseType: !162, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1285, file: !824, line: 345, baseType: !162, size: 32, offset: 32)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1000, file: !1169, line: 770, type: !1278, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1000, file: !1169, line: 774, type: !1278, isLocal: true, isDefinition: true)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1000, file: !1169, line: 778, type: !1278, isLocal: true, isDefinition: true)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1000, file: !1169, line: 782, type: !1278, isLocal: true, isDefinition: true)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1000, file: !1169, line: 786, type: !1278, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1000, file: !1169, line: 790, type: !1278, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1303, file: !1474, line: 1914, type: !1548, isLocal: true, isDefinition: true)
!1303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1304, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1305, retainedTypes: !1338, globals: !1471, splitDebugInlining: false, nameTableKind: None)
!1304 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!1305 = !{!30, !1306, !1313, !1320, !1327, !1333, !776}
!1306 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !111, line: 47, baseType: !32, size: 32, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312}
!1308 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1309 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1310 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1311 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1312 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1313 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !111, line: 75, baseType: !32, size: 32, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319}
!1315 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1316 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1317 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1318 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1319 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1320 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !111, line: 92, baseType: !32, size: 32, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326}
!1322 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1323 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1324 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1325 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1326 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !111, line: 84, baseType: !32, size: 32, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332}
!1329 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1330 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1331 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1332 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1333 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !111, line: 107, baseType: !32, size: 32, elements: !1334)
!1334 = !{!1335, !1336, !1337}
!1335 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1336 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1337 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1338 = !{!102, !107, !1339, !134, !133, !1418, !162, !872, !1429, !411, !1468, !1470}
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 32)
!1340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !1342)
!1342 = !{!1343, !1362, !1366, !1370, !1383, !1388, !1392, !1396, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1341, file: !111, line: 365, baseType: !1344, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!107, !1347, !144}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1350)
!1350 = !{!1351, !1352, !1353, !1354, !1360, !1361}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1349, file: !120, line: 380, baseType: !123, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1349, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1349, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1349, file: !120, line: 386, baseType: !1355, size: 32, offset: 96)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1357)
!1357 = !{!1358, !1359}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1356, file: !120, line: 359, baseType: !133, size: 8)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1356, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1349, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1349, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1341, file: !111, line: 366, baseType: !1363, size: 32, offset: 32)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{null, !1347, !134}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1341, file: !111, line: 374, baseType: !1367, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 32)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!107, !1347}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1341, file: !111, line: 377, baseType: !1371, size: 32, offset: 96)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{!107, !1347, !1374}
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1381, !1382}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1376, file: !111, line: 123, baseType: !162, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1376, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1376, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1376, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1376, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1341, file: !111, line: 379, baseType: !1384, size: 32, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!107, !1347, !1387}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1341, file: !111, line: 384, baseType: !1389, size: 32, offset: 160)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 32)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{!107, !1347, !176, !107}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1341, file: !111, line: 393, baseType: !1393, size: 32, offset: 192)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!107, !1347, !182, !183}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1341, file: !111, line: 402, baseType: !1397, size: 32, offset: 224)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{null, !1347}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1341, file: !111, line: 405, baseType: !1397, size: 32, offset: 256)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1341, file: !111, line: 408, baseType: !1367, size: 32, offset: 288)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1341, file: !111, line: 411, baseType: !1397, size: 32, offset: 320)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1341, file: !111, line: 414, baseType: !1397, size: 32, offset: 352)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1341, file: !111, line: 417, baseType: !1367, size: 32, offset: 384)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1341, file: !111, line: 420, baseType: !1367, size: 32, offset: 416)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1341, file: !111, line: 423, baseType: !1397, size: 32, offset: 448)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1341, file: !111, line: 426, baseType: !1397, size: 32, offset: 480)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1341, file: !111, line: 429, baseType: !1367, size: 32, offset: 512)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1341, file: !111, line: 432, baseType: !1367, size: 32, offset: 544)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1341, file: !111, line: 435, baseType: !1411, size: 32, offset: 576)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{null, !1347, !1414, !102}
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1415)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !1347, !102}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !279, line: 508, baseType: !1420)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 499, size: 224, elements: !1421)
!1421 = !{!1422, !1423, !1424, !1425, !1426, !1427, !1428}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1420, file: !279, line: 501, baseType: !283, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1420, file: !279, line: 502, baseType: !283, size: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1420, file: !279, line: 503, baseType: !283, size: 32, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1420, file: !279, line: 504, baseType: !283, size: 32, offset: 96)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1420, file: !279, line: 505, baseType: !283, size: 32, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1420, file: !279, line: 506, baseType: !283, size: 32, offset: 160)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1420, file: !279, line: 507, baseType: !283, size: 32, offset: 192)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !777, line: 100, size: 224, elements: !1432)
!1432 = !{!1433, !1438, !1439, !1448, !1453, !1458, !1463}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1431, file: !777, line: 101, baseType: !1434, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !777, line: 76, baseType: !1435)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!107, !1347, !872}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1431, file: !777, line: 102, baseType: !1434, size: 32, offset: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1431, file: !777, line: 103, baseType: !1440, size: 32, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !777, line: 83, baseType: !1441)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!107, !1347, !872, !1444, !102}
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !777, line: 72, baseType: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{null, !1347, !872, !102}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1431, file: !777, line: 104, baseType: !1449, size: 32, offset: 96)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !777, line: 79, baseType: !1450)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 32)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!107, !1347, !872, !828}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1431, file: !777, line: 105, baseType: !1454, size: 32, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !777, line: 88, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!776, !1347, !872}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1431, file: !777, line: 106, baseType: !1459, size: 32, offset: 160)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !777, line: 92, baseType: !1460)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!107, !1347, !872, !898}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1431, file: !777, line: 107, baseType: !1464, size: 32, offset: 192)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !777, line: 96, baseType: !1465)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!107, !1347, !872, !102}
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1469)
!1469 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!1471 = !{!1472, !1478, !1480, !1487, !1301, !1489, !1497, !1520, !1523, !1526, !1537, !1539}
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1303, file: !1474, line: 1914, type: !1475, isLocal: false, isDefinition: true, align: 16)
!1474 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 128, elements: !1476)
!1476 = !{!1477}
!1477 = !DISubrange(count: 8)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1303, file: !1474, line: 1914, type: !1348, isLocal: false, isDefinition: true, align: 32)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1303, file: !1474, line: 1914, type: !1482, isLocal: true, isDefinition: true, align: 32)
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1484)
!1484 = !{!1485, !1486}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1483, file: !294, line: 60, baseType: !1367, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1483, file: !294, line: 65, baseType: !1347, size: 32, offset: 32)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1303, file: !1474, line: 1914, type: !1356, isLocal: true, isDefinition: true, align: 8)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1303, file: !1474, line: 1914, type: !1491, isLocal: true, isDefinition: true)
!1491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1492, size: 64, elements: !486)
!1492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !824, line: 343, size: 64, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1493, file: !824, line: 344, baseType: !162, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1493, file: !824, line: 345, baseType: !162, size: 32, offset: 32)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1303, file: !1474, line: 1914, type: !1499, isLocal: true, isDefinition: true)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1501, line: 60, size: 64, elements: !1502)
!1501 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1502 = !{!1503, !1519}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1500, file: !1501, line: 69, baseType: !1504, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1501, line: 50, size: 64, elements: !1507)
!1507 = !{!1508, !1517, !1518}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1506, file: !1501, line: 52, baseType: !1509, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1512, line: 37, baseType: !1513)
!1512 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1512, line: 32, size: 64, elements: !1514)
!1514 = !{!1515, !1516}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1513, file: !1512, line: 34, baseType: !162, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1513, file: !1512, line: 36, baseType: !162, size: 32, offset: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1506, file: !1501, line: 54, baseType: !133, size: 8, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1506, file: !1501, line: 56, baseType: !133, size: 8, offset: 40)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1500, file: !1501, line: 71, baseType: !133, size: 8, offset: 32)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1303, file: !1474, line: 1914, type: !1522, isLocal: true, isDefinition: true)
!1522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1505, size: 64, elements: !486)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1303, file: !1474, line: 1914, type: !1525, isLocal: true, isDefinition: true)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1510, size: 128, elements: !389)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1528, file: !1474, line: 1914, type: !1531, isLocal: true, isDefinition: true, align: 32)
!1528 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1474, file: !1474, line: 1914, type: !1398, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !1529)
!1529 = !{!1530}
!1530 = !DILocalVariable(name: "dev", arg: 1, scope: !1528, file: !1474, line: 1914, type: !1347)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1532)
!1532 = !{!1533, !1534, !1535, !1536}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1531, file: !10, line: 55, baseType: !707, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1531, file: !10, line: 57, baseType: !707, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1531, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1531, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1303, file: !1474, line: 1539, type: !1340, isLocal: true, isDefinition: true)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1303, file: !1474, line: 1914, type: !1541, isLocal: true, isDefinition: true)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1542, line: 74, size: 128, elements: !1543)
!1542 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1543 = !{!1544, !1545, !1546, !1547}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1541, file: !1542, line: 76, baseType: !162, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1541, file: !1542, line: 78, baseType: !1347, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1541, file: !1542, line: 80, baseType: !1414, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1541, file: !1542, line: 81, baseType: !102, size: 32, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1542, line: 22, size: 256, elements: !1550)
!1550 = !{!1551, !1552, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1563}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1549, file: !1542, line: 24, baseType: !1418, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1549, file: !1542, line: 26, baseType: !1553, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1549, file: !1542, line: 28, baseType: !252, size: 32, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1549, file: !1542, line: 30, baseType: !136, size: 8, offset: 96)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1549, file: !1542, line: 32, baseType: !107, size: 32, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1549, file: !1542, line: 34, baseType: !136, size: 8, offset: 160)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1549, file: !1542, line: 36, baseType: !136, size: 8, offset: 168)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1549, file: !1542, line: 38, baseType: !136, size: 8, offset: 176)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1549, file: !1542, line: 40, baseType: !136, size: 8, offset: 184)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1549, file: !1542, line: 41, baseType: !1562, size: 32, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1549, file: !1542, line: 44, baseType: !1564, size: 32, offset: 224)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !111, line: 150, baseType: !1397)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1567, file: !1643, line: 65, type: !283, isLocal: true, isDefinition: true)
!1567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !1570, globals: !1640, splitDebugInlining: false, nameTableKind: None)
!1568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!1569 = !{!566}
!1570 = !{!103, !1571, !707, !133, !162, !1579, !1610}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1573, file: !497, line: 766, baseType: !283, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1573, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1573, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1573, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1582)
!1582 = !{!1583, !1585, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1600, !1605, !1609}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1581, file: !497, line: 413, baseType: !1584, size: 256)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 256, elements: !1476)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1581, file: !497, line: 414, baseType: !1586, size: 768, offset: 256)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 768, elements: !1587)
!1587 = !{!1588}
!1588 = !DISubrange(count: 24)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1581, file: !497, line: 415, baseType: !1584, size: 256, offset: 1024)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1581, file: !497, line: 416, baseType: !1586, size: 768, offset: 1280)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1581, file: !497, line: 417, baseType: !1584, size: 256, offset: 2048)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1581, file: !497, line: 418, baseType: !1586, size: 768, offset: 2304)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1581, file: !497, line: 419, baseType: !1584, size: 256, offset: 3072)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1581, file: !497, line: 420, baseType: !1586, size: 768, offset: 3328)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1581, file: !497, line: 421, baseType: !1584, size: 256, offset: 4096)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1581, file: !497, line: 422, baseType: !1597, size: 1792, offset: 4352)
!1597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 1792, elements: !1598)
!1598 = !{!1599}
!1599 = !DISubrange(count: 56)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1581, file: !497, line: 423, baseType: !1601, size: 1920, offset: 6144)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1602, size: 1920, elements: !1603)
!1602 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !133)
!1603 = !{!1604}
!1604 = !DISubrange(count: 240)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1581, file: !497, line: 424, baseType: !1606, size: 20608, offset: 8064)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 20608, elements: !1607)
!1607 = !{!1608}
!1608 = !DISubrange(count: 644)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1581, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619, !1620, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1631, !1632, !1633, !1635, !1637, !1639}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1612, file: !497, line: 447, baseType: !501, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1612, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1612, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1612, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1612, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1612, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1612, file: !497, line: 453, baseType: !1621, size: 96, offset: 192)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1602, size: 96, elements: !743)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1612, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1612, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1612, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1612, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1612, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1612, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1612, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1612, file: !497, line: 461, baseType: !1630, size: 64, offset: 512)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 64, elements: !389)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1612, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1612, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1612, file: !497, line: 464, baseType: !1634, size: 128, offset: 640)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 128, elements: !649)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1612, file: !497, line: 465, baseType: !1636, size: 160, offset: 768)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 160, elements: !1171)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1612, file: !497, line: 466, baseType: !1638, size: 160, offset: 928)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 160, elements: !1171)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1612, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1640 = !{!1641, !1667, !1670, !1672, !1674, !1565}
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1567, file: !1643, line: 285, type: !1644, isLocal: true, isDefinition: true, align: 32)
!1643 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1646)
!1646 = !{!1647, !1666}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1645, file: !294, line: 60, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!107, !1651}
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1654)
!1654 = !{!1655, !1656, !1657, !1658, !1664, !1665}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1653, file: !120, line: 380, baseType: !123, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1653, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1653, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1653, file: !120, line: 386, baseType: !1659, size: 32, offset: 96)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1661)
!1661 = !{!1662, !1663}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1660, file: !120, line: 359, baseType: !133, size: 8)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1660, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1653, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1653, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1645, file: !294, line: 65, baseType: !1651, size: 32, offset: 32)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "lock", scope: !1567, file: !1643, line: 34, type: !1669, isLocal: true, isDefinition: true)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "last_load", scope: !1567, file: !1643, line: 36, type: !162, isLocal: true, isDefinition: true)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1567, file: !1643, line: 48, type: !162, isLocal: true, isDefinition: true)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1567, file: !1643, line: 54, type: !162, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1678, file: !1760, line: 22, type: !1762, isLocal: true, isDefinition: true)
!1678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1679, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1680, retainedTypes: !1681, globals: !1757, splitDebugInlining: false, nameTableKind: None)
!1679 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!1680 = !{!1003, !1009}
!1681 = !{!1682, !1746, !1751, !1056, !1009, !1003, !1756, !102}
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1004, line: 523, size: 288, elements: !1685)
!1685 = !{!1686, !1705, !1709, !1713, !1717, !1718, !1719, !1723, !1742}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1684, file: !1004, line: 524, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!107, !1690, !1044, !1045}
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1692)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697, !1703, !1704}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1692, file: !120, line: 380, baseType: !123, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1692, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1692, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1692, file: !120, line: 386, baseType: !1698, size: 32, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1700)
!1700 = !{!1701, !1702}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1699, file: !120, line: 359, baseType: !133, size: 8)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1699, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1692, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1692, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1684, file: !1004, line: 530, baseType: !1706, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!107, !1690, !1050}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1684, file: !1004, line: 532, baseType: !1710, size: 32, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!107, !1690, !1056, !1051}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1684, file: !1004, line: 535, baseType: !1714, size: 32, offset: 96)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!107, !1690, !1056}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1684, file: !1004, line: 537, baseType: !1714, size: 32, offset: 128)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1684, file: !1004, line: 539, baseType: !1714, size: 32, offset: 160)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1684, file: !1004, line: 541, baseType: !1720, size: 32, offset: 192)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!107, !1690, !1044, !1003, !1009}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1684, file: !1004, line: 544, baseType: !1724, size: 32, offset: 224)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!107, !1690, !1727, !136}
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 32)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1004, line: 478, size: 96, elements: !1729)
!1729 = !{!1730, !1736, !1741}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1728, file: !1004, line: 482, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1076, line: 33, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1076, line: 29, size: 32, elements: !1733)
!1733 = !{!1734}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1732, file: !1076, line: 30, baseType: !1735, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1728, file: !1004, line: 485, baseType: !1737, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1004, line: 464, baseType: !1738)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{null, !1690, !1727, !1056}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1728, file: !1004, line: 493, baseType: !1056, size: 32, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1684, file: !1004, line: 547, baseType: !1743, size: 32, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!162, !1690}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1004, line: 428, size: 32, elements: !1749)
!1749 = !{!1750}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1748, file: !1004, line: 434, baseType: !1056, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1004, line: 441, size: 32, elements: !1754)
!1754 = !{!1755}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1753, file: !1004, line: 447, baseType: !1056, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1757 = !{!1758, !1676}
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1759 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1678, file: !1760, line: 37, type: !1761, isLocal: true, isDefinition: true)
!1760 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!1762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1763, size: 352, elements: !1764)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1690)
!1764 = !{!1765}
!1765 = !DISubrange(count: 11)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1768, file: !1810, line: 139, type: !1816, isLocal: false, isDefinition: true)
!1768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1770, globals: !1807, splitDebugInlining: false, nameTableKind: None)
!1769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!1770 = !{!1771}
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 370, baseType: !1773)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 336, size: 1152, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1773, file: !279, line: 338, baseType: !283, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1773, file: !279, line: 339, baseType: !283, size: 32, offset: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1773, file: !279, line: 340, baseType: !283, size: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1773, file: !279, line: 341, baseType: !283, size: 32, offset: 96)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1773, file: !279, line: 342, baseType: !283, size: 32, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1773, file: !279, line: 343, baseType: !283, size: 32, offset: 160)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1773, file: !279, line: 344, baseType: !283, size: 32, offset: 192)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1773, file: !279, line: 345, baseType: !162, size: 32, offset: 224)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1773, file: !279, line: 346, baseType: !283, size: 32, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1773, file: !279, line: 347, baseType: !283, size: 32, offset: 288)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1773, file: !279, line: 348, baseType: !799, size: 64, offset: 320)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1773, file: !279, line: 349, baseType: !283, size: 32, offset: 384)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1773, file: !279, line: 350, baseType: !283, size: 32, offset: 416)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1773, file: !279, line: 351, baseType: !283, size: 32, offset: 448)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1773, file: !279, line: 352, baseType: !162, size: 32, offset: 480)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1773, file: !279, line: 353, baseType: !283, size: 32, offset: 512)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1773, file: !279, line: 354, baseType: !283, size: 32, offset: 544)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1773, file: !279, line: 355, baseType: !799, size: 64, offset: 576)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1773, file: !279, line: 356, baseType: !283, size: 32, offset: 640)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1773, file: !279, line: 357, baseType: !283, size: 32, offset: 672)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1773, file: !279, line: 358, baseType: !283, size: 32, offset: 704)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1773, file: !279, line: 359, baseType: !162, size: 32, offset: 736)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1773, file: !279, line: 360, baseType: !283, size: 32, offset: 768)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1773, file: !279, line: 361, baseType: !283, size: 32, offset: 800)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1773, file: !279, line: 362, baseType: !799, size: 64, offset: 832)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1773, file: !279, line: 363, baseType: !283, size: 32, offset: 896)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1773, file: !279, line: 364, baseType: !283, size: 32, offset: 928)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1773, file: !279, line: 365, baseType: !799, size: 64, offset: 960)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1773, file: !279, line: 366, baseType: !283, size: 32, offset: 1024)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1773, file: !279, line: 367, baseType: !283, size: 32, offset: 1056)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1773, file: !279, line: 368, baseType: !820, size: 32, offset: 1088)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1773, file: !279, line: 369, baseType: !283, size: 32, offset: 1120)
!1807 = !{!1808, !1811, !1766}
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1768, file: !1810, line: 137, type: !162, isLocal: false, isDefinition: true)
!1810 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1768, file: !1810, line: 138, type: !1813, isLocal: false, isDefinition: true)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 128, elements: !1814)
!1814 = !{!1815}
!1815 = !DISubrange(count: 16)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 64, elements: !1476)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1819, file: !1822, line: 23, type: !183, isLocal: false, isDefinition: true)
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !1821, splitDebugInlining: false, nameTableKind: None)
!1820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!1821 = !{!1817}
!1822 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1825, file: !1829, line: 86, type: !2078, isLocal: false, isDefinition: true, align: 512)
!1825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1827, retainedTypes: !1836, globals: !1909, splitDebugInlining: false, nameTableKind: None)
!1826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!1827 = !{!1828, !30, !566}
!1828 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1829, line: 63, baseType: !32, size: 32, elements: !1830)
!1829 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1830 = !{!1831, !1832, !1833, !1834, !1835}
!1831 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1832 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1833 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1834 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1835 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1836 = !{!252, !102, !107, !1837, !256, !162, !1867, !707, !133, !1892}
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1840, line: 51, size: 64, elements: !1841)
!1840 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1841 = !{!1842, !1862}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1839, file: !1840, line: 52, baseType: !1843, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1840, line: 38, baseType: !1844)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!107, !1847, !182, !411}
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1850)
!1850 = !{!1851, !1852, !1853, !1854, !1860, !1861}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1849, file: !120, line: 380, baseType: !123, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1849, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1849, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1849, file: !120, line: 386, baseType: !1855, size: 32, offset: 96)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1857)
!1857 = !{!1858, !1859}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1856, file: !120, line: 359, baseType: !133, size: 8)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1856, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1849, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1849, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1839, file: !1840, line: 53, baseType: !1863, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1840, line: 47, baseType: !1864)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!107, !1847, !182, !411, !162}
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1869, file: !497, line: 447, baseType: !501, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1869, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1869, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1869, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1869, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1869, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1869, file: !497, line: 453, baseType: !1621, size: 96, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1869, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1869, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1869, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1869, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1869, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1869, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1869, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1869, file: !497, line: 461, baseType: !1630, size: 64, offset: 512)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1869, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1869, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1869, file: !497, line: 464, baseType: !1634, size: 128, offset: 640)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1869, file: !497, line: 465, baseType: !1636, size: 160, offset: 768)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1869, file: !497, line: 466, baseType: !1638, size: 160, offset: 928)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1869, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1894, file: !497, line: 413, baseType: !1584, size: 256)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1894, file: !497, line: 414, baseType: !1586, size: 768, offset: 256)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1894, file: !497, line: 415, baseType: !1584, size: 256, offset: 1024)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1894, file: !497, line: 416, baseType: !1586, size: 768, offset: 1280)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1894, file: !497, line: 417, baseType: !1584, size: 256, offset: 2048)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1894, file: !497, line: 418, baseType: !1586, size: 768, offset: 2304)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1894, file: !497, line: 419, baseType: !1584, size: 256, offset: 3072)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1894, file: !497, line: 420, baseType: !1586, size: 768, offset: 3328)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1894, file: !497, line: 421, baseType: !1584, size: 256, offset: 4096)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1894, file: !497, line: 422, baseType: !1597, size: 1792, offset: 4352)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1894, file: !497, line: 423, baseType: !1601, size: 1920, offset: 6144)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1894, file: !497, line: 424, baseType: !1606, size: 20608, offset: 8064)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1894, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1909 = !{!1910, !2032, !2041, !2043, !1823, !2046, !2048, !2053}
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "_kernel", scope: !1825, file: !1829, line: 40, type: !1912, isLocal: false, isDefinition: true)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !228, line: 158, size: 288, elements: !1913)
!1913 = !{!1914, !2027}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1912, file: !228, line: 159, baseType: !1915, size: 192)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 192, elements: !486)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !228, line: 100, size: 192, elements: !1917)
!1917 = !{!1918, !1919, !1920, !2021, !2022, !2023, !2024}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1916, file: !228, line: 102, baseType: !162, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1916, file: !228, line: 105, baseType: !256, size: 32, offset: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1916, file: !228, line: 108, baseType: !1921, size: 32, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !1923)
!1923 = !{!1924, !1982, !1994, !1995, !1996, !1997, !2003, !2016}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1922, file: !359, line: 247, baseType: !1925, size: 384)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !1926)
!1926 = !{!1927, !1951, !1958, !1959, !1960, !1969, !1970, !1971}
!1927 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !359, line: 60, baseType: !1928, size: 64)
!1928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !359, line: 60, size: 64, elements: !1929)
!1929 = !{!1930, !1945}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1928, file: !359, line: 61, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !1933)
!1933 = !{!1934, !1940}
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1932, file: !233, line: 38, baseType: !1935, size: 32)
!1935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1932, file: !233, line: 38, size: 32, elements: !1936)
!1936 = !{!1937, !1939}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1935, file: !233, line: 39, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1935, file: !233, line: 40, baseType: !1938, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !1932, file: !233, line: 42, baseType: !1941, size: 32, offset: 32)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1932, file: !233, line: 42, size: 32, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1941, file: !233, line: 43, baseType: !1938, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1941, file: !233, line: 44, baseType: !1938, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1928, file: !359, line: 62, baseType: !1946, size: 64)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1946, file: !384, line: 50, baseType: !1949, size: 64)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1950, size: 64, elements: !389)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1925, file: !359, line: 68, baseType: !1952, size: 32, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !1955)
!1955 = !{!1956}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1954, file: !228, line: 232, baseType: !1957, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !1932)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1925, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1925, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!1960 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !359, line: 90, baseType: !1961, size: 16, offset: 112)
!1961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !359, line: 90, size: 16, elements: !1962)
!1962 = !{!1963, !1968}
!1963 = !DIDerivedType(tag: DW_TAG_member, scope: !1961, file: !359, line: 91, baseType: !1964, size: 16)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1961, file: !359, line: 91, size: 16, elements: !1965)
!1965 = !{!1966, !1967}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1964, file: !359, line: 96, baseType: !407, size: 8)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1964, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1961, file: !359, line: 100, baseType: !411, size: 16)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1925, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1925, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1925, file: !359, line: 131, baseType: !1972, size: 192, offset: 192)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !1973)
!1973 = !{!1974, !1975, !1981}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1972, file: !228, line: 245, baseType: !1931, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1972, file: !228, line: 246, baseType: !1976, size: 32, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !1977)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{null, !1980}
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1972, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1922, file: !359, line: 250, baseType: !1983, size: 288, offset: 384)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1983, file: !428, line: 26, baseType: !162, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1983, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1983, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1983, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1983, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1983, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1983, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1983, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1983, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1922, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1922, file: !359, line: 256, baseType: !1953, size: 64, offset: 704)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1922, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1922, file: !359, line: 300, baseType: !1998, size: 96, offset: 800)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !1999)
!1999 = !{!2000, !2001, !2002}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1998, file: !359, line: 153, baseType: !22, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1998, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1998, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1922, file: !359, line: 325, baseType: !2004, size: 32, offset: 896)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 32)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2006)
!2006 = !{!2007, !2013, !2014}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2005, file: !224, line: 5074, baseType: !2008, size: 96)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2009)
!2009 = !{!2010, !2011, !2012}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2008, file: !454, line: 57, baseType: !457, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2008, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2008, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2005, file: !224, line: 5075, baseType: !1953, size: 64, offset: 96)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2005, file: !224, line: 5076, baseType: !2015, offset: 160)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1922, file: !359, line: 343, baseType: !2017, size: 64, offset: 928)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2018)
!2018 = !{!2019, !2020}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2017, file: !428, line: 63, baseType: !162, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2017, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1916, file: !228, line: 111, baseType: !1921, size: 32, offset: 96)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1916, file: !228, line: 124, baseType: !107, size: 32, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1916, file: !228, line: 127, baseType: !133, size: 8, offset: 160)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1916, file: !228, line: 153, baseType: !2025, offset: 168)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2026, line: 33, elements: !250)
!2026 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1912, file: !228, line: 170, baseType: !2028, size: 96, offset: 192)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2028, file: !228, line: 86, baseType: !1921, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2028, file: !228, line: 90, baseType: !1957, size: 64, offset: 32)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1825, file: !1829, line: 43, type: !2034, isLocal: false, isDefinition: true, align: 512)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 8704, elements: !2039)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2036, line: 47, size: 8, elements: !2037)
!2036 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2037 = !{!2038}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2035, file: !2036, line: 48, baseType: !125, size: 8)
!2039 = !{!2040}
!2040 = !DISubrange(count: 1088)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1825, file: !1829, line: 44, type: !1922, isLocal: false, isDefinition: true)
!2043 = !DIGlobalVariableExpression(var: !2044, expr: !DIExpression())
!2044 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1825, file: !1829, line: 48, type: !2045, isLocal: false, isDefinition: true)
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1922, size: 1024, elements: !486)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1825, file: !1829, line: 217, type: !136, isLocal: false, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1825, file: !1829, line: 50, type: !2050, isLocal: true, isDefinition: true, align: 512)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 3072, elements: !2051)
!2051 = !{!487, !2052}
!2052 = !DISubrange(count: 384)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "levels", scope: !2055, file: !1829, line: 232, type: !2075, isLocal: true, isDefinition: true)
!2055 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1829, file: !1829, line: 230, type: !2056, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !2058)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{null, !1828}
!2058 = !{!2059, !2060, !2070, !2074}
!2059 = !DILocalVariable(name: "level", arg: 1, scope: !2055, file: !1829, line: 230, type: !1828)
!2060 = !DILocalVariable(name: "entry", scope: !2055, file: !1829, line: 244, type: !2061)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2064)
!2064 = !{!2065, !2069}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2063, file: !294, line: 60, baseType: !2066, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!107, !1847}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2063, file: !294, line: 65, baseType: !1847, size: 32, offset: 32)
!2070 = !DILocalVariable(name: "dev", scope: !2071, file: !1829, line: 247, type: !1847)
!2071 = distinct !DILexicalBlock(scope: !2072, file: !1829, line: 246, column: 64)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !1829, line: 246, column: 2)
!2073 = distinct !DILexicalBlock(scope: !2055, file: !1829, line: 246, column: 2)
!2074 = !DILocalVariable(name: "rc", scope: !2071, file: !1829, line: 248, type: !107)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 192, elements: !2076)
!2076 = !{!2077}
!2077 = !DISubrange(count: 6)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 16896, elements: !2079)
!2079 = !{!487, !2080}
!2080 = !DISubrange(count: 2112)
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "states_str", scope: !2083, file: !2084, line: 276, type: !2205, isLocal: true, isDefinition: true)
!2083 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2084, file: !2084, line: 271, type: !2085, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !2196)
!2084 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!123, !2087, !256, !252}
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2088)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2090)
!2090 = !{!2091, !2149, !2161, !2162, !2163, !2164, !2170, !2183}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2089, file: !359, line: 247, baseType: !2092, size: 384)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2093)
!2093 = !{!2094, !2118, !2125, !2126, !2127, !2136, !2137, !2138}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !359, line: 60, baseType: !2095, size: 64)
!2095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2092, file: !359, line: 60, size: 64, elements: !2096)
!2096 = !{!2097, !2112}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2095, file: !359, line: 61, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2100)
!2100 = !{!2101, !2107}
!2101 = !DIDerivedType(tag: DW_TAG_member, scope: !2099, file: !233, line: 38, baseType: !2102, size: 32)
!2102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2099, file: !233, line: 38, size: 32, elements: !2103)
!2103 = !{!2104, !2106}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2102, file: !233, line: 39, baseType: !2105, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2102, file: !233, line: 40, baseType: !2105, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, scope: !2099, file: !233, line: 42, baseType: !2108, size: 32, offset: 32)
!2108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2099, file: !233, line: 42, size: 32, elements: !2109)
!2109 = !{!2110, !2111}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2108, file: !233, line: 43, baseType: !2105, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2108, file: !233, line: 44, baseType: !2105, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2095, file: !359, line: 62, baseType: !2113, size: 64)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2113, file: !384, line: 50, baseType: !2116, size: 64)
!2116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2117, size: 64, elements: !389)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2092, file: !359, line: 68, baseType: !2119, size: 32, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2122)
!2122 = !{!2123}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2121, file: !228, line: 232, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2099)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2092, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2092, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2127 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !359, line: 90, baseType: !2128, size: 16, offset: 112)
!2128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2092, file: !359, line: 90, size: 16, elements: !2129)
!2129 = !{!2130, !2135}
!2130 = !DIDerivedType(tag: DW_TAG_member, scope: !2128, file: !359, line: 91, baseType: !2131, size: 16)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2128, file: !359, line: 91, size: 16, elements: !2132)
!2132 = !{!2133, !2134}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2131, file: !359, line: 96, baseType: !407, size: 8)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2131, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2128, file: !359, line: 100, baseType: !411, size: 16)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2092, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2092, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2092, file: !359, line: 131, baseType: !2139, size: 192, offset: 192)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2140)
!2140 = !{!2141, !2142, !2148}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2139, file: !228, line: 245, baseType: !2098, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2139, file: !228, line: 246, baseType: !2143, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2144)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{null, !2147}
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2139, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2089, file: !359, line: 250, baseType: !2150, size: 288, offset: 384)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2150, file: !428, line: 26, baseType: !162, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2150, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2150, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2150, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2150, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2150, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2150, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2150, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2150, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2089, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2089, file: !359, line: 256, baseType: !2120, size: 64, offset: 704)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2089, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2089, file: !359, line: 300, baseType: !2165, size: 96, offset: 800)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2166)
!2166 = !{!2167, !2168, !2169}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2165, file: !359, line: 153, baseType: !22, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2165, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2165, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2089, file: !359, line: 325, baseType: !2171, size: 32, offset: 896)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2173)
!2173 = !{!2174, !2180, !2181}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2172, file: !224, line: 5074, baseType: !2175, size: 96)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2176)
!2176 = !{!2177, !2178, !2179}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2175, file: !454, line: 57, baseType: !457, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2175, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2175, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2172, file: !224, line: 5075, baseType: !2120, size: 64, offset: 96)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2172, file: !224, line: 5076, baseType: !2182, offset: 160)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2089, file: !359, line: 343, baseType: !2184, size: 64, offset: 928)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2185)
!2185 = !{!2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2184, file: !428, line: 63, baseType: !162, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2184, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2188 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2189, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2190, globals: !2192, splitDebugInlining: false, nameTableKind: None)
!2189 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2190 = !{!102, !123, !103, !133, !107, !2191, !24, !252, !256, !22, !162, !1468}
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2192 = !{!2081, !2193}
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "states_sz", scope: !2083, file: !2084, line: 279, type: !2195, isLocal: true, isDefinition: true)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1761, size: 256, elements: !1476)
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202, !2203}
!2197 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2083, file: !2084, line: 271, type: !2087)
!2198 = !DILocalVariable(name: "buf", arg: 2, scope: !2083, file: !2084, line: 271, type: !256)
!2199 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2083, file: !2084, line: 271, type: !252)
!2200 = !DILocalVariable(name: "off", scope: !2083, file: !2084, line: 273, type: !252)
!2201 = !DILocalVariable(name: "bit", scope: !2083, file: !2084, line: 274, type: !133)
!2202 = !DILocalVariable(name: "thread_state", scope: !2083, file: !2084, line: 275, type: !133)
!2203 = !DILocalVariable(name: "index", scope: !2204, file: !2084, line: 293, type: !133)
!2204 = distinct !DILexicalBlock(scope: !2083, file: !2084, line: 293, column: 2)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 256, elements: !1476)
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2208, file: !2316, line: 56, type: !2305, isLocal: false, isDefinition: true)
!2208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2209, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2210, globals: !2313, splitDebugInlining: false, nameTableKind: None)
!2209 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2210 = !{!2211, !256, !102, !2311, !182, !103, !707, !107, !162, !1468, !2312}
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2213)
!2213 = !{!2214, !2272, !2284, !2285, !2286, !2287, !2293, !2306}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2212, file: !359, line: 247, baseType: !2215, size: 384)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2216)
!2216 = !{!2217, !2241, !2248, !2249, !2250, !2259, !2260, !2261}
!2217 = !DIDerivedType(tag: DW_TAG_member, scope: !2215, file: !359, line: 60, baseType: !2218, size: 64)
!2218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2215, file: !359, line: 60, size: 64, elements: !2219)
!2219 = !{!2220, !2235}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2218, file: !359, line: 61, baseType: !2221, size: 64)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2223)
!2223 = !{!2224, !2230}
!2224 = !DIDerivedType(tag: DW_TAG_member, scope: !2222, file: !233, line: 38, baseType: !2225, size: 32)
!2225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2222, file: !233, line: 38, size: 32, elements: !2226)
!2226 = !{!2227, !2229}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2225, file: !233, line: 39, baseType: !2228, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2225, file: !233, line: 40, baseType: !2228, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, scope: !2222, file: !233, line: 42, baseType: !2231, size: 32, offset: 32)
!2231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2222, file: !233, line: 42, size: 32, elements: !2232)
!2232 = !{!2233, !2234}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2231, file: !233, line: 43, baseType: !2228, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2231, file: !233, line: 44, baseType: !2228, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2218, file: !359, line: 62, baseType: !2236, size: 64)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2237)
!2237 = !{!2238}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2236, file: !384, line: 50, baseType: !2239, size: 64)
!2239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 64, elements: !389)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2215, file: !359, line: 68, baseType: !2242, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2245)
!2245 = !{!2246}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2244, file: !228, line: 232, baseType: !2247, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2222)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2215, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2215, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2215, file: !359, line: 90, baseType: !2251, size: 16, offset: 112)
!2251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2215, file: !359, line: 90, size: 16, elements: !2252)
!2252 = !{!2253, !2258}
!2253 = !DIDerivedType(tag: DW_TAG_member, scope: !2251, file: !359, line: 91, baseType: !2254, size: 16)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2251, file: !359, line: 91, size: 16, elements: !2255)
!2255 = !{!2256, !2257}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2254, file: !359, line: 96, baseType: !407, size: 8)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2254, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2251, file: !359, line: 100, baseType: !411, size: 16)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2215, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2215, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2215, file: !359, line: 131, baseType: !2262, size: 192, offset: 192)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2263)
!2263 = !{!2264, !2265, !2271}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2262, file: !228, line: 245, baseType: !2221, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2262, file: !228, line: 246, baseType: !2266, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2267)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{null, !2270}
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2262, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2212, file: !359, line: 250, baseType: !2273, size: 288, offset: 384)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2273, file: !428, line: 26, baseType: !162, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2273, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2273, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2273, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2273, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2273, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2273, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2273, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2273, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2212, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2212, file: !359, line: 256, baseType: !2243, size: 64, offset: 704)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2212, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2212, file: !359, line: 300, baseType: !2288, size: 96, offset: 800)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2289)
!2289 = !{!2290, !2291, !2292}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2288, file: !359, line: 153, baseType: !22, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2288, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2288, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2212, file: !359, line: 325, baseType: !2294, size: 32, offset: 896)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2296)
!2296 = !{!2297, !2303, !2304}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2295, file: !224, line: 5074, baseType: !2298, size: 96)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2299)
!2299 = !{!2300, !2301, !2302}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2298, file: !454, line: 57, baseType: !457, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2298, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2298, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2295, file: !224, line: 5075, baseType: !2243, size: 64, offset: 96)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2295, file: !224, line: 5076, baseType: !2305, offset: 160)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2212, file: !359, line: 343, baseType: !2307, size: 64, offset: 928)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2308)
!2308 = !{!2309, !2310}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2307, file: !428, line: 63, baseType: !162, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2307, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2313 = !{!2206, !2314, !2317, !2319}
!2314 = !DIGlobalVariableExpression(var: !2315, expr: !DIExpression())
!2315 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2208, file: !2316, line: 404, type: !107, isLocal: true, isDefinition: true)
!2316 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2208, file: !2316, line: 405, type: !107, isLocal: true, isDefinition: true)
!2319 = !DIGlobalVariableExpression(var: !2320, expr: !DIExpression())
!2320 = distinct !DIGlobalVariable(name: "pending_current", scope: !2208, file: !2316, line: 425, type: !2211, isLocal: true, isDefinition: true)
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2323, file: !2353, line: 15, type: !1468, isLocal: true, isDefinition: true)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2350, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2325 = !{!103, !102, !707, !162, !1468, !107, !2326, !256, !105}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2328)
!2328 = !{!2329, !2344, !2349}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2327, file: !228, line: 245, baseType: !2330, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2331)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2332)
!2332 = !{!2333, !2339}
!2333 = !DIDerivedType(tag: DW_TAG_member, scope: !2331, file: !233, line: 38, baseType: !2334, size: 32)
!2334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2331, file: !233, line: 38, size: 32, elements: !2335)
!2335 = !{!2336, !2338}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2334, file: !233, line: 39, baseType: !2337, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2334, file: !233, line: 40, baseType: !2337, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2331, file: !233, line: 42, baseType: !2340, size: 32, offset: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2331, file: !233, line: 42, size: 32, elements: !2341)
!2341 = !{!2342, !2343}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2340, file: !233, line: 43, baseType: !2337, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2340, file: !233, line: 44, baseType: !2337, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2327, file: !228, line: 246, baseType: !2345, size: 32, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2346)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{null, !2326}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2327, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2350 = !{!2321, !2351, !2355, !2357}
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2323, file: !2353, line: 19, type: !2354, isLocal: true, isDefinition: true)
!2353 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2323, file: !2353, line: 25, type: !107, isLocal: true, isDefinition: true)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2323, file: !2353, line: 17, type: !2359, isLocal: true, isDefinition: true)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2331)
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2362, file: !2381, line: 55, type: !2382, isLocal: true, isDefinition: true, align: 32)
!2362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2363, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2364, globals: !2380, splitDebugInlining: false, nameTableKind: None)
!2363 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2364 = !{!102, !103, !107, !2365}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2368)
!2368 = !{!2369, !2375}
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !233, line: 38, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !233, line: 38, size: 32, elements: !2371)
!2371 = !{!2372, !2374}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2370, file: !233, line: 39, baseType: !2373, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2370, file: !233, line: 40, baseType: !2373, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !233, line: 42, baseType: !2376, size: 32, offset: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !233, line: 42, size: 32, elements: !2377)
!2377 = !{!2378, !2379}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2376, file: !233, line: 43, baseType: !2373, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2376, file: !233, line: 44, baseType: !2373, size: 32)
!2380 = !{!2360}
!2381 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2383)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2384)
!2384 = !{!2385, !2392}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2383, file: !294, line: 60, baseType: !2386, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!107, !2389}
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2391)
!2391 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !294, line: 48, flags: DIFlagFwdDecl)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2383, file: !294, line: 65, baseType: !2389, size: 32, offset: 32)
!2393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2394, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2394 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2396, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2396 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2399, retainedTypes: !2407, splitDebugInlining: false, nameTableKind: None)
!2398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2399 = !{!30, !2400}
!2400 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2401, line: 54, baseType: !32, size: 32, elements: !2402)
!2401 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2402 = !{!2403, !2404, !2405, !2406}
!2403 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2404 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2405 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2406 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2407 = !{!102, !252, !182, !24, !2408, !22, !2414, !107, !828, !2429}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2401, line: 58, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2401, line: 58, size: 64, elements: !2411)
!2411 = !{!2412}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2410, file: !2401, line: 58, baseType: !2413, size: 64)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 64, elements: !1476)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2401, line: 68, size: 128, elements: !2416)
!2416 = !{!2417, !2420, !2421, !2422}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2415, file: !2401, line: 69, baseType: !2418, size: 64)
!2418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2419, size: 64, elements: !389)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2401, line: 61, baseType: !162)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2415, file: !2401, line: 70, baseType: !2419, size: 32, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2415, file: !2401, line: 71, baseType: !162, size: 32, offset: 96)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2415, file: !2401, line: 77, baseType: !2423, offset: 128)
!2423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2424, elements: !2427)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2401, line: 64, size: 32, elements: !2425)
!2425 = !{!2426}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2424, file: !2401, line: 65, baseType: !2419, size: 32)
!2427 = !{!2428}
!2428 = !DISubrange(count: 0)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!2430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2431, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2432, retainedTypes: !2452, splitDebugInlining: false, nameTableKind: None)
!2431 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2432 = !{!2433, !2441}
!2433 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2434, line: 69, baseType: !32, size: 32, elements: !2435)
!2434 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2435 = !{!2436, !2437, !2438, !2439, !2440}
!2436 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2437 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2438 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2439 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2440 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2441 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2434, line: 56, baseType: !32, size: 32, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451}
!2443 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2444 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2445 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2446 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2447 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2448 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2449 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2450 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2451 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2452 = !{!107, !2433, !2441, !2453, !408, !143, !2455, !2456, !134, !412, !123, !252, !102, !22, !32, !2458, !2459, !2460, !2461, !2462, !106, !2463, !2454, !2464, !2465, !2466, !2467}
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2434, line: 31, baseType: !2454)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !253, line: 329, baseType: !32)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2434, line: 32, baseType: !2457)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1469)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!2461 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !253, line: 145, baseType: !107)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2470 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2471, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2472, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2471 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2472 = !{!2473, !30}
!2473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2474, line: 27, baseType: !32, size: 32, elements: !2475)
!2474 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2475 = !{!2476, !2477, !2478, !2479, !2480}
!2476 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2477 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2478 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2479 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2480 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2483, retainedTypes: !2484, splitDebugInlining: false, nameTableKind: None)
!2482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2483 = !{!566, !2473, !30}
!2484 = !{!733, !2485, !102, !107, !707, !162, !133, !2502}
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2487)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2487, file: !497, line: 413, baseType: !1584, size: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2487, file: !497, line: 414, baseType: !1586, size: 768, offset: 256)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2487, file: !497, line: 415, baseType: !1584, size: 256, offset: 1024)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2487, file: !497, line: 416, baseType: !1586, size: 768, offset: 1280)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2487, file: !497, line: 417, baseType: !1584, size: 256, offset: 2048)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2487, file: !497, line: 418, baseType: !1586, size: 768, offset: 2304)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2487, file: !497, line: 419, baseType: !1584, size: 256, offset: 3072)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2487, file: !497, line: 420, baseType: !1586, size: 768, offset: 3328)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2487, file: !497, line: 421, baseType: !1584, size: 256, offset: 4096)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2487, file: !497, line: 422, baseType: !1597, size: 1792, offset: 4352)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2487, file: !497, line: 423, baseType: !1601, size: 1920, offset: 6144)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2487, file: !497, line: 424, baseType: !1606, size: 20608, offset: 8064)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2487, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2504)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2505)
!2505 = !{!2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2504, file: !497, line: 447, baseType: !501, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2504, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2504, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2504, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2504, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2504, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2504, file: !497, line: 453, baseType: !1621, size: 96, offset: 192)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2504, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2504, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2504, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2504, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2504, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2504, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2504, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2504, file: !497, line: 461, baseType: !1630, size: 64, offset: 512)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2504, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2504, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2504, file: !497, line: 464, baseType: !1634, size: 128, offset: 640)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2504, file: !497, line: 465, baseType: !1636, size: 160, offset: 768)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2504, file: !497, line: 466, baseType: !1638, size: 160, offset: 928)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2504, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2528, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2528 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2531, splitDebugInlining: false, nameTableKind: None)
!2530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2531 = !{!102, !107, !22, !2532}
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2534)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2534, file: !497, line: 447, baseType: !501, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2534, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2534, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2534, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2534, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2534, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2534, file: !497, line: 453, baseType: !1621, size: 96, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2534, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2534, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2534, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2534, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2534, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2534, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2534, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2534, file: !497, line: 461, baseType: !1630, size: 64, offset: 512)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2534, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2534, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2534, file: !497, line: 464, baseType: !1634, size: 128, offset: 640)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2534, file: !497, line: 465, baseType: !1636, size: 160, offset: 768)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2534, file: !497, line: 466, baseType: !1638, size: 160, offset: 928)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2534, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2559, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2559 = !{!2560, !102, !107}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2563)
!2563 = !{!2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2562, file: !497, line: 447, baseType: !501, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2562, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2562, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2562, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2562, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2562, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2562, file: !497, line: 453, baseType: !1621, size: 96, offset: 192)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2562, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2562, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2562, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2562, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2562, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2562, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2562, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2562, file: !497, line: 461, baseType: !1630, size: 64, offset: 512)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2562, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2562, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2562, file: !497, line: 464, baseType: !1634, size: 128, offset: 640)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2562, file: !497, line: 465, baseType: !1636, size: 160, offset: 768)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2562, file: !497, line: 466, baseType: !1638, size: 160, offset: 928)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2562, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2587, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2587 = !{!2588, !162, !102, !107}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2590, line: 98, size: 256, elements: !2591)
!2590 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2591 = !{!2592, !2597, !2602, !2607, !2612, !2617, !2622, !2627}
!2592 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !2590, line: 99, baseType: !2593, size: 32)
!2593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !2590, line: 99, size: 32, elements: !2594)
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2593, file: !2590, line: 99, baseType: !162, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2593, file: !2590, line: 99, baseType: !162, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !2590, line: 100, baseType: !2598, size: 32, offset: 32)
!2598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !2590, line: 100, size: 32, elements: !2599)
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2598, file: !2590, line: 100, baseType: !162, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2598, file: !2590, line: 100, baseType: !162, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !2590, line: 101, baseType: !2603, size: 32, offset: 64)
!2603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !2590, line: 101, size: 32, elements: !2604)
!2604 = !{!2605, !2606}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2603, file: !2590, line: 101, baseType: !162, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2603, file: !2590, line: 101, baseType: !162, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !2590, line: 102, baseType: !2608, size: 32, offset: 96)
!2608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !2590, line: 102, size: 32, elements: !2609)
!2609 = !{!2610, !2611}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2608, file: !2590, line: 102, baseType: !162, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2608, file: !2590, line: 102, baseType: !162, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !2590, line: 103, baseType: !2613, size: 32, offset: 128)
!2613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !2590, line: 103, size: 32, elements: !2614)
!2614 = !{!2615, !2616}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2613, file: !2590, line: 103, baseType: !162, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2613, file: !2590, line: 103, baseType: !162, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !2590, line: 104, baseType: !2618, size: 32, offset: 160)
!2618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !2590, line: 104, size: 32, elements: !2619)
!2619 = !{!2620, !2621}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2618, file: !2590, line: 104, baseType: !162, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2618, file: !2590, line: 104, baseType: !162, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !2590, line: 105, baseType: !2623, size: 32, offset: 192)
!2623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !2590, line: 105, size: 32, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2623, file: !2590, line: 105, baseType: !162, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2623, file: !2590, line: 105, baseType: !162, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2589, file: !2590, line: 106, baseType: !162, size: 32, offset: 224)
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2472, retainedTypes: !2630, splitDebugInlining: false, nameTableKind: None)
!2629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2630 = !{!2631, !102, !107, !2656, !2429, !162}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2633)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2634)
!2634 = !{!2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2633, file: !497, line: 447, baseType: !501, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2633, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2633, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2633, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2633, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2633, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2633, file: !497, line: 453, baseType: !1621, size: 96, offset: 192)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2633, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2633, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2633, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2633, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2633, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2633, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2633, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2633, file: !497, line: 461, baseType: !1630, size: 64, offset: 512)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2633, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2633, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2633, file: !497, line: 464, baseType: !1634, size: 128, offset: 640)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2633, file: !497, line: 465, baseType: !1636, size: 160, offset: 768)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2633, file: !497, line: 466, baseType: !1638, size: 160, offset: 928)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2633, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2590, line: 141, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2590, line: 97, size: 256, elements: !2659)
!2659 = !{!2660}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2658, file: !2590, line: 107, baseType: !2661, size: 256)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2590, line: 98, size: 256, elements: !2662)
!2662 = !{!2663, !2668, !2673, !2678, !2683, !2688, !2693, !2698}
!2663 = !DIDerivedType(tag: DW_TAG_member, scope: !2661, file: !2590, line: 99, baseType: !2664, size: 32)
!2664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2661, file: !2590, line: 99, size: 32, elements: !2665)
!2665 = !{!2666, !2667}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2664, file: !2590, line: 99, baseType: !162, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2664, file: !2590, line: 99, baseType: !162, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, scope: !2661, file: !2590, line: 100, baseType: !2669, size: 32, offset: 32)
!2669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2661, file: !2590, line: 100, size: 32, elements: !2670)
!2670 = !{!2671, !2672}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2669, file: !2590, line: 100, baseType: !162, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2669, file: !2590, line: 100, baseType: !162, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, scope: !2661, file: !2590, line: 101, baseType: !2674, size: 32, offset: 64)
!2674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2661, file: !2590, line: 101, size: 32, elements: !2675)
!2675 = !{!2676, !2677}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2674, file: !2590, line: 101, baseType: !162, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2674, file: !2590, line: 101, baseType: !162, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, scope: !2661, file: !2590, line: 102, baseType: !2679, size: 32, offset: 96)
!2679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2661, file: !2590, line: 102, size: 32, elements: !2680)
!2680 = !{!2681, !2682}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2679, file: !2590, line: 102, baseType: !162, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2679, file: !2590, line: 102, baseType: !162, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, scope: !2661, file: !2590, line: 103, baseType: !2684, size: 32, offset: 128)
!2684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2661, file: !2590, line: 103, size: 32, elements: !2685)
!2685 = !{!2686, !2687}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2684, file: !2590, line: 103, baseType: !162, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2684, file: !2590, line: 103, baseType: !162, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, scope: !2661, file: !2590, line: 104, baseType: !2689, size: 32, offset: 160)
!2689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2661, file: !2590, line: 104, size: 32, elements: !2690)
!2690 = !{!2691, !2692}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2689, file: !2590, line: 104, baseType: !162, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2689, file: !2590, line: 104, baseType: !162, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2661, file: !2590, line: 105, baseType: !2694, size: 32, offset: 192)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2661, file: !2590, line: 105, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2694, file: !2590, line: 105, baseType: !162, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2694, file: !2590, line: 105, baseType: !162, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2661, file: !2590, line: 106, baseType: !162, size: 32, offset: 224)
!2699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !2701, splitDebugInlining: false, nameTableKind: None)
!2700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2701 = !{!733, !707, !133, !162, !2702, !2719}
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2704)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2704, file: !497, line: 413, baseType: !1584, size: 256)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2704, file: !497, line: 414, baseType: !1586, size: 768, offset: 256)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2704, file: !497, line: 415, baseType: !1584, size: 256, offset: 1024)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2704, file: !497, line: 416, baseType: !1586, size: 768, offset: 1280)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2704, file: !497, line: 417, baseType: !1584, size: 256, offset: 2048)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2704, file: !497, line: 418, baseType: !1586, size: 768, offset: 2304)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2704, file: !497, line: 419, baseType: !1584, size: 256, offset: 3072)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2704, file: !497, line: 420, baseType: !1586, size: 768, offset: 3328)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2704, file: !497, line: 421, baseType: !1584, size: 256, offset: 4096)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2704, file: !497, line: 422, baseType: !1597, size: 1792, offset: 4352)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2704, file: !497, line: 423, baseType: !1601, size: 1920, offset: 6144)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2704, file: !497, line: 424, baseType: !1606, size: 20608, offset: 8064)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2704, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2721)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2722)
!2722 = !{!2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2721, file: !497, line: 447, baseType: !501, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2721, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2721, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2721, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2721, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2721, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2721, file: !497, line: 453, baseType: !1621, size: 96, offset: 192)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2721, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2721, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2721, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2721, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2721, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2721, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2721, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2721, file: !497, line: 461, baseType: !1630, size: 64, offset: 512)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2721, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2721, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2721, file: !497, line: 464, baseType: !1634, size: 128, offset: 640)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2721, file: !497, line: 465, baseType: !1636, size: 160, offset: 768)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2721, file: !497, line: 466, baseType: !1638, size: 160, offset: 928)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2721, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2745, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2746, splitDebugInlining: false, nameTableKind: None)
!2745 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2746 = !{!2747, !102, !107}
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2749)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2750)
!2750 = !{!2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2749, file: !497, line: 447, baseType: !501, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2749, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2749, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2749, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2749, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2749, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2749, file: !497, line: 453, baseType: !1621, size: 96, offset: 192)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2749, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2749, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2749, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2749, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2749, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2749, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2749, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2749, file: !497, line: 461, baseType: !1630, size: 64, offset: 512)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2749, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2749, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2749, file: !497, line: 464, baseType: !1634, size: 128, offset: 640)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2749, file: !497, line: 465, baseType: !1636, size: 160, offset: 768)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2749, file: !497, line: 466, baseType: !1638, size: 160, offset: 928)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2749, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2772 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2773, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2774, splitDebugInlining: false, nameTableKind: None)
!2773 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2774 = !{!125, !256, !252, !144, !2775, !134, !102}
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!2777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2779, splitDebugInlining: false, nameTableKind: None)
!2778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2779 = !{!2780}
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 370, baseType: !2782)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 336, size: 1152, elements: !2783)
!2783 = !{!2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2782, file: !279, line: 338, baseType: !283, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2782, file: !279, line: 339, baseType: !283, size: 32, offset: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2782, file: !279, line: 340, baseType: !283, size: 32, offset: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2782, file: !279, line: 341, baseType: !283, size: 32, offset: 96)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2782, file: !279, line: 342, baseType: !283, size: 32, offset: 128)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2782, file: !279, line: 343, baseType: !283, size: 32, offset: 160)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2782, file: !279, line: 344, baseType: !283, size: 32, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2782, file: !279, line: 345, baseType: !162, size: 32, offset: 224)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2782, file: !279, line: 346, baseType: !283, size: 32, offset: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2782, file: !279, line: 347, baseType: !283, size: 32, offset: 288)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2782, file: !279, line: 348, baseType: !799, size: 64, offset: 320)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2782, file: !279, line: 349, baseType: !283, size: 32, offset: 384)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2782, file: !279, line: 350, baseType: !283, size: 32, offset: 416)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2782, file: !279, line: 351, baseType: !283, size: 32, offset: 448)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2782, file: !279, line: 352, baseType: !162, size: 32, offset: 480)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2782, file: !279, line: 353, baseType: !283, size: 32, offset: 512)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2782, file: !279, line: 354, baseType: !283, size: 32, offset: 544)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2782, file: !279, line: 355, baseType: !799, size: 64, offset: 576)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2782, file: !279, line: 356, baseType: !283, size: 32, offset: 640)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2782, file: !279, line: 357, baseType: !283, size: 32, offset: 672)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2782, file: !279, line: 358, baseType: !283, size: 32, offset: 704)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2782, file: !279, line: 359, baseType: !162, size: 32, offset: 736)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2782, file: !279, line: 360, baseType: !283, size: 32, offset: 768)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2782, file: !279, line: 361, baseType: !283, size: 32, offset: 800)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2782, file: !279, line: 362, baseType: !799, size: 64, offset: 832)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2782, file: !279, line: 363, baseType: !283, size: 32, offset: 896)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2782, file: !279, line: 364, baseType: !283, size: 32, offset: 928)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2782, file: !279, line: 365, baseType: !799, size: 64, offset: 960)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2782, file: !279, line: 366, baseType: !283, size: 32, offset: 1024)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2782, file: !279, line: 367, baseType: !283, size: 32, offset: 1056)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2782, file: !279, line: 368, baseType: !820, size: 32, offset: 1088)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2782, file: !279, line: 369, baseType: !283, size: 32, offset: 1120)
!2816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2817, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2817 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2818 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2819, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2820, retainedTypes: !2836, splitDebugInlining: false, nameTableKind: None)
!2819 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2820 = !{!2821, !2828, !2832}
!2821 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2822, line: 38, baseType: !32, size: 32, elements: !2823)
!2822 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2823 = !{!2824, !2825, !2826, !2827}
!2824 = !DIEnumerator(name: "HAL_OK", value: 0)
!2825 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2826 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2827 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2828 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !772, line: 184, baseType: !32, size: 32, elements: !2829)
!2829 = !{!2830, !2831}
!2830 = !DIEnumerator(name: "RESET", value: 0)
!2831 = !DIEnumerator(name: "SET", value: 1)
!2832 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !772, line: 190, baseType: !32, size: 32, elements: !2833)
!2833 = !{!2834, !2835}
!2834 = !DIEnumerator(name: "DISABLE", value: 0)
!2835 = !DIEnumerator(name: "ENABLE", value: 1)
!2836 = !{!102, !2837, !133, !162, !1470, !2873, !2879, !2890, !411, !2891, !1468}
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 370, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 336, size: 1152, elements: !2840)
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2839, file: !279, line: 338, baseType: !283, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2839, file: !279, line: 339, baseType: !283, size: 32, offset: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2839, file: !279, line: 340, baseType: !283, size: 32, offset: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2839, file: !279, line: 341, baseType: !283, size: 32, offset: 96)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2839, file: !279, line: 342, baseType: !283, size: 32, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2839, file: !279, line: 343, baseType: !283, size: 32, offset: 160)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2839, file: !279, line: 344, baseType: !283, size: 32, offset: 192)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2839, file: !279, line: 345, baseType: !162, size: 32, offset: 224)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2839, file: !279, line: 346, baseType: !283, size: 32, offset: 256)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2839, file: !279, line: 347, baseType: !283, size: 32, offset: 288)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2839, file: !279, line: 348, baseType: !799, size: 64, offset: 320)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2839, file: !279, line: 349, baseType: !283, size: 32, offset: 384)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2839, file: !279, line: 350, baseType: !283, size: 32, offset: 416)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2839, file: !279, line: 351, baseType: !283, size: 32, offset: 448)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2839, file: !279, line: 352, baseType: !162, size: 32, offset: 480)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2839, file: !279, line: 353, baseType: !283, size: 32, offset: 512)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2839, file: !279, line: 354, baseType: !283, size: 32, offset: 544)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2839, file: !279, line: 355, baseType: !799, size: 64, offset: 576)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2839, file: !279, line: 356, baseType: !283, size: 32, offset: 640)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2839, file: !279, line: 357, baseType: !283, size: 32, offset: 672)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2839, file: !279, line: 358, baseType: !283, size: 32, offset: 704)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2839, file: !279, line: 359, baseType: !162, size: 32, offset: 736)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2839, file: !279, line: 360, baseType: !283, size: 32, offset: 768)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2839, file: !279, line: 361, baseType: !283, size: 32, offset: 800)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2839, file: !279, line: 362, baseType: !799, size: 64, offset: 832)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2839, file: !279, line: 363, baseType: !283, size: 32, offset: 896)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2839, file: !279, line: 364, baseType: !283, size: 32, offset: 928)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2839, file: !279, line: 365, baseType: !799, size: 64, offset: 960)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2839, file: !279, line: 366, baseType: !283, size: 32, offset: 1024)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2839, file: !279, line: 367, baseType: !283, size: 32, offset: 1056)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2839, file: !279, line: 368, baseType: !820, size: 32, offset: 1088)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2839, file: !279, line: 369, baseType: !283, size: 32, offset: 1120)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 330, baseType: !2875)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 326, size: 64, elements: !2876)
!2876 = !{!2877, !2878}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2875, file: !279, line: 328, baseType: !283, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2875, file: !279, line: 329, baseType: !283, size: 32, offset: 32)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 259, baseType: !2881)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 250, size: 224, elements: !2882)
!2882 = !{!2883, !2884, !2885, !2886, !2887, !2888, !2889}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2881, file: !279, line: 252, baseType: !283, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2881, file: !279, line: 253, baseType: !283, size: 32, offset: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2881, file: !279, line: 254, baseType: !283, size: 32, offset: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2881, file: !279, line: 255, baseType: !283, size: 32, offset: 96)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2881, file: !279, line: 256, baseType: !283, size: 32, offset: 128)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2881, file: !279, line: 257, baseType: !283, size: 32, offset: 160)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2881, file: !279, line: 258, baseType: !283, size: 32, offset: 192)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 276, baseType: !2893)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 265, size: 320, elements: !2894)
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2893, file: !279, line: 267, baseType: !283, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2893, file: !279, line: 268, baseType: !283, size: 32, offset: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2893, file: !279, line: 269, baseType: !283, size: 32, offset: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2893, file: !279, line: 270, baseType: !283, size: 32, offset: 96)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2893, file: !279, line: 271, baseType: !283, size: 32, offset: 128)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2893, file: !279, line: 272, baseType: !283, size: 32, offset: 160)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2893, file: !279, line: 273, baseType: !283, size: 32, offset: 192)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2893, file: !279, line: 274, baseType: !283, size: 32, offset: 224)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2893, file: !279, line: 275, baseType: !1115, size: 64, offset: 256)
!2904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2906, retainedTypes: !2907, splitDebugInlining: false, nameTableKind: None)
!2905 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2906 = !{!771}
!2907 = !{!2908, !162, !2916, !2922, !2933}
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !2910)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !2911)
!2911 = !{!2912, !2913, !2914, !2915}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2910, file: !497, line: 766, baseType: !283, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2910, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2910, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2910, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 330, baseType: !2918)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 326, size: 64, elements: !2919)
!2919 = !{!2920, !2921}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2918, file: !279, line: 328, baseType: !283, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2918, file: !279, line: 329, baseType: !283, size: 32, offset: 32)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 259, baseType: !2924)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 250, size: 224, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930, !2931, !2932}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2924, file: !279, line: 252, baseType: !283, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2924, file: !279, line: 253, baseType: !283, size: 32, offset: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2924, file: !279, line: 254, baseType: !283, size: 32, offset: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2924, file: !279, line: 255, baseType: !283, size: 32, offset: 96)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2924, file: !279, line: 256, baseType: !283, size: 32, offset: 128)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2924, file: !279, line: 257, baseType: !283, size: 32, offset: 160)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2924, file: !279, line: 258, baseType: !283, size: 32, offset: 192)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 370, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 336, size: 1152, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2935, file: !279, line: 338, baseType: !283, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2935, file: !279, line: 339, baseType: !283, size: 32, offset: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2935, file: !279, line: 340, baseType: !283, size: 32, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2935, file: !279, line: 341, baseType: !283, size: 32, offset: 96)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2935, file: !279, line: 342, baseType: !283, size: 32, offset: 128)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2935, file: !279, line: 343, baseType: !283, size: 32, offset: 160)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2935, file: !279, line: 344, baseType: !283, size: 32, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2935, file: !279, line: 345, baseType: !162, size: 32, offset: 224)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2935, file: !279, line: 346, baseType: !283, size: 32, offset: 256)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2935, file: !279, line: 347, baseType: !283, size: 32, offset: 288)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2935, file: !279, line: 348, baseType: !799, size: 64, offset: 320)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2935, file: !279, line: 349, baseType: !283, size: 32, offset: 384)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2935, file: !279, line: 350, baseType: !283, size: 32, offset: 416)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2935, file: !279, line: 351, baseType: !283, size: 32, offset: 448)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2935, file: !279, line: 352, baseType: !162, size: 32, offset: 480)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2935, file: !279, line: 353, baseType: !283, size: 32, offset: 512)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2935, file: !279, line: 354, baseType: !283, size: 32, offset: 544)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2935, file: !279, line: 355, baseType: !799, size: 64, offset: 576)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2935, file: !279, line: 356, baseType: !283, size: 32, offset: 640)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2935, file: !279, line: 357, baseType: !283, size: 32, offset: 672)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2935, file: !279, line: 358, baseType: !283, size: 32, offset: 704)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2935, file: !279, line: 359, baseType: !162, size: 32, offset: 736)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2935, file: !279, line: 360, baseType: !283, size: 32, offset: 768)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2935, file: !279, line: 361, baseType: !283, size: 32, offset: 800)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2935, file: !279, line: 362, baseType: !799, size: 64, offset: 832)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2935, file: !279, line: 363, baseType: !283, size: 32, offset: 896)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2935, file: !279, line: 364, baseType: !283, size: 32, offset: 928)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2935, file: !279, line: 365, baseType: !799, size: 64, offset: 960)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2935, file: !279, line: 366, baseType: !283, size: 32, offset: 1024)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2935, file: !279, line: 367, baseType: !283, size: 32, offset: 1056)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2935, file: !279, line: 368, baseType: !820, size: 32, offset: 1088)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2935, file: !279, line: 369, baseType: !283, size: 32, offset: 1120)
!2969 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2970, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2971, splitDebugInlining: false, nameTableKind: None)
!2970 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2971 = !{!102, !252}
!2972 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2973, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2974, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2973 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2974 = !{!2975, !2982, !30}
!2975 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2976, line: 14, baseType: !32, size: 32, elements: !2977)
!2976 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2977 = !{!2978, !2979, !2980, !2981}
!2978 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2979 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2980 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2981 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2982 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2976, line: 42, baseType: !32, size: 32, elements: !2983)
!2983 = !{!2984, !2985, !2986, !2987, !2988, !2989}
!2984 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2985 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2986 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2987 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2988 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2989 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2991 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2992 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2993, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2994, splitDebugInlining: false, nameTableKind: None)
!2993 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!2994 = !{!102, !107, !2995, !3010}
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2997)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2998)
!2998 = !{!2999, !3005}
!2999 = !DIDerivedType(tag: DW_TAG_member, scope: !2997, file: !233, line: 38, baseType: !3000, size: 32)
!3000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2997, file: !233, line: 38, size: 32, elements: !3001)
!3001 = !{!3002, !3004}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3000, file: !233, line: 39, baseType: !3003, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3000, file: !233, line: 40, baseType: !3003, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, scope: !2997, file: !233, line: 42, baseType: !3006, size: 32, offset: 32)
!3006 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2997, file: !233, line: 42, size: 32, elements: !3007)
!3007 = !{!3008, !3009}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3006, file: !233, line: 43, baseType: !3003, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3006, file: !233, line: 44, baseType: !3003, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 32)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3012)
!3012 = !{!3013, !3057, !3069, !3070, !3071, !3072, !3078, !3091}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3011, file: !359, line: 247, baseType: !3014, size: 384)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3015)
!3015 = !{!3016, !3026, !3033, !3034, !3035, !3044, !3045, !3046}
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !359, line: 60, baseType: !3017, size: 64)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !359, line: 60, size: 64, elements: !3018)
!3018 = !{!3019, !3020}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3017, file: !359, line: 61, baseType: !2996, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3017, file: !359, line: 62, baseType: !3021, size: 64)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3022)
!3022 = !{!3023}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3021, file: !384, line: 50, baseType: !3024, size: 64)
!3024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3025, size: 64, elements: !389)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3014, file: !359, line: 68, baseType: !3027, size: 32, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3029)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3030)
!3030 = !{!3031}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3029, file: !228, line: 232, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2997)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3014, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3014, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3035 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !359, line: 90, baseType: !3036, size: 16, offset: 112)
!3036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !359, line: 90, size: 16, elements: !3037)
!3037 = !{!3038, !3043}
!3038 = !DIDerivedType(tag: DW_TAG_member, scope: !3036, file: !359, line: 91, baseType: !3039, size: 16)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3036, file: !359, line: 91, size: 16, elements: !3040)
!3040 = !{!3041, !3042}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3039, file: !359, line: 96, baseType: !407, size: 8)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3039, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3036, file: !359, line: 100, baseType: !411, size: 16)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3014, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3014, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3014, file: !359, line: 131, baseType: !3047, size: 192, offset: 192)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3048)
!3048 = !{!3049, !3050, !3056}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3047, file: !228, line: 245, baseType: !2996, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3047, file: !228, line: 246, baseType: !3051, size: 32, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3052)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 32)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{null, !3055}
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3047, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3011, file: !359, line: 250, baseType: !3058, size: 288, offset: 384)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3059)
!3059 = !{!3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3058, file: !428, line: 26, baseType: !162, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3058, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3058, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3058, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3058, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3058, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3058, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3058, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3058, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3011, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3011, file: !359, line: 256, baseType: !3028, size: 64, offset: 704)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3011, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3011, file: !359, line: 300, baseType: !3073, size: 96, offset: 800)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3074)
!3074 = !{!3075, !3076, !3077}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3073, file: !359, line: 153, baseType: !22, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3073, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3073, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3011, file: !359, line: 325, baseType: !3079, size: 32, offset: 896)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 32)
!3080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3081)
!3081 = !{!3082, !3088, !3089}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3080, file: !224, line: 5074, baseType: !3083, size: 96)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3084)
!3084 = !{!3085, !3086, !3087}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3083, file: !454, line: 57, baseType: !457, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3083, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3083, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3080, file: !224, line: 5075, baseType: !3028, size: 64, offset: 96)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3080, file: !224, line: 5076, baseType: !3090, offset: 160)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3011, file: !359, line: 343, baseType: !3092, size: 64, offset: 928)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3092, file: !428, line: 63, baseType: !162, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3092, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3096 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3097, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3098, splitDebugInlining: false, nameTableKind: None)
!3097 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!3098 = !{!22, !102, !107}
!3099 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3100, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3100 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!3101 = !{!"Ubuntu clang version 14.0.6"}
!3102 = !{i32 7, !"Dwarf Version", i32 4}
!3103 = !{i32 2, !"Debug Info Version", i32 3}
!3104 = !{i32 1, !"wchar_size", i32 4}
!3105 = !{i32 1, !"min_enum_size", i32 4}
!3106 = !{i32 1, !"branch-target-enforcement", i32 0}
!3107 = !{i32 1, !"sign-return-address", i32 0}
!3108 = !{i32 1, !"sign-return-address-all", i32 0}
!3109 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3110 = !{i32 7, !"frame-pointer", i32 2}
!3111 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3112, file: !3112, line: 26, type: !3113, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !250)
!3112 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3113 = !DISubroutineType(types: !3114)
!3114 = !{null}
!3115 = !DILocation(line: 28, column: 1, scope: !3111)
!3116 = !{i64 2154340077, i64 2154340097, i64 2154340160}
!3117 = !DILocation(line: 29, column: 1, scope: !3111)
!3118 = !{i64 2154340492, i64 2154340512, i64 2154340575}
!3119 = !DILocation(line: 30, column: 1, scope: !3111)
!3120 = !{i64 2154340911, i64 2154340931, i64 2154340994}
!3121 = !DILocation(line: 31, column: 1, scope: !3111)
!3122 = !{i64 2154341330, i64 2154341350, i64 2154341413}
!3123 = !DILocation(line: 33, column: 1, scope: !3111)
!3124 = !{i64 2154341622, i64 2154341642, i64 2154341705}
!3125 = !DILocation(line: 35, column: 1, scope: !3111)
!3126 = !{i64 2154341947, i64 2154341967, i64 2154342030}
!3127 = !DILocation(line: 50, column: 1, scope: !3111)
!3128 = !{i64 2154342374, i64 2154342394, i64 2154342457}
!3129 = !DILocation(line: 54, column: 1, scope: !3111)
!3130 = !{i64 2154342813, i64 2154342833, i64 2154342896}
!3131 = !DILocation(line: 61, column: 1, scope: !3111)
!3132 = !{i64 2154343130, i64 2154343150, i64 2154343213}
!3133 = !DILocation(line: 63, column: 1, scope: !3111)
!3134 = !{i64 2154343510, i64 2154343530, i64 2154343593}
!3135 = !DILocation(line: 64, column: 1, scope: !3111)
!3136 = !{i64 2154344032, i64 2154344052, i64 2154344115}
!3137 = !DILocation(line: 65, column: 1, scope: !3111)
!3138 = !{i64 2154344530, i64 2154344550, i64 2154344613}
!3139 = !DILocation(line: 66, column: 1, scope: !3111)
!3140 = !{i64 2154345012, i64 2154345032, i64 2154345095}
!3141 = !DILocation(line: 67, column: 1, scope: !3111)
!3142 = !{i64 2154345519, i64 2154345539, i64 2154345602}
!3143 = !DILocation(line: 68, column: 1, scope: !3111)
!3144 = !{i64 2154346007, i64 2154346027, i64 2154346090}
!3145 = !DILocation(line: 70, column: 1, scope: !3111)
!3146 = !{i64 2154346475, i64 2154346495, i64 2154346558}
!3147 = !DILocation(line: 71, column: 1, scope: !3111)
!3148 = !{i64 2154346917, i64 2154346937, i64 2154347000}
!3149 = !DILocation(line: 72, column: 1, scope: !3111)
!3150 = !{i64 2154347375, i64 2154347395, i64 2154347458}
!3151 = !DILocation(line: 79, column: 1, scope: !3111)
!3152 = !{i64 2154347829, i64 2154347849, i64 2154347912}
!3153 = !DILocation(line: 80, column: 1, scope: !3111)
!3154 = !{i64 2154348340, i64 2154348360, i64 2154348423}
!3155 = !DILocation(line: 82, column: 1, scope: !3111)
!3156 = !{i64 2154352892, i64 2154352912, i64 2154352975}
!3157 = !DILocation(line: 97, column: 1, scope: !3111)
!3158 = !{i64 2154353229, i64 2154353249, i64 2154353312}
!3159 = !DILocation(line: 99, column: 1, scope: !3111)
!3160 = !{i64 2154353447, i64 2154353467, i64 2154353530}
!3161 = !DILocation(line: 102, column: 1, scope: !3111)
!3162 = !{i64 2154353704, i64 2154353724, i64 2154353787}
!3163 = !DILocation(line: 105, column: 1, scope: !3111)
!3164 = !{i64 2154353944, i64 2154353964, i64 2154354027}
!3165 = !DILocation(line: 115, column: 1, scope: !3111)
!3166 = !{i64 2154354283, i64 2154354303, i64 2154354366}
!3167 = !DILocation(line: 118, column: 1, scope: !3111)
!3168 = !{i64 2154354627, i64 2154354647, i64 2154354710}
!3169 = !DILocation(line: 32, column: 1, scope: !3170)
!3170 = !DILexicalBlockFile(scope: !3111, file: !3171, discriminator: 0)
!3171 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3172 = !{i64 2154354983, i64 2154355003, i64 2154355066}
!3173 = !DILocation(line: 33, column: 1, scope: !3170)
!3174 = !{i64 2154355495, i64 2154355515, i64 2154355578}
!3175 = !DILocation(line: 53, column: 1, scope: !3170)
!3176 = !{i64 2154356003, i64 2154356023, i64 2154356086}
!3177 = !DILocation(line: 54, column: 1, scope: !3170)
!3178 = !{i64 2154356421, i64 2154356441, i64 2154356504}
!3179 = !DILocation(line: 55, column: 1, scope: !3170)
!3180 = !{i64 2154356839, i64 2154356859, i64 2154356922}
!3181 = !DILocation(line: 56, column: 1, scope: !3170)
!3182 = !{i64 2154357257, i64 2154357277, i64 2154357340}
!3183 = !DILocation(line: 57, column: 1, scope: !3170)
!3184 = !{i64 2154357675, i64 2154357695, i64 2154357758}
!3185 = !DILocation(line: 58, column: 1, scope: !3170)
!3186 = !{i64 2154358093, i64 2154358113, i64 2154358176}
!3187 = !DILocation(line: 59, column: 1, scope: !3170)
!3188 = !{i64 2154358511, i64 2154358531, i64 2154358594}
!3189 = !DILocation(line: 60, column: 1, scope: !3170)
!3190 = !{i64 2154358935, i64 2154358955, i64 2154359018}
!3191 = !DILocation(line: 61, column: 1, scope: !3170)
!3192 = !{i64 2154359252, i64 2154359272, i64 2154359335}
!3193 = !DILocation(line: 70, column: 1, scope: !3170)
!3194 = !{i64 2154359481, i64 2154359501, i64 2154359564}
!3195 = !DILocation(line: 72, column: 1, scope: !3170)
!3196 = !{i64 2154359813, i64 2154359833, i64 2154359896}
!3197 = !DILocation(line: 73, column: 1, scope: !3170)
!3198 = !{i64 2154360263, i64 2154360283, i64 2154360346}
!3199 = !DILocation(line: 74, column: 1, scope: !3170)
!3200 = !{i64 2154360713, i64 2154360733, i64 2154360796}
!3201 = !DILocation(line: 75, column: 1, scope: !3170)
!3202 = !{i64 2154361163, i64 2154361183, i64 2154361246}
!3203 = !DILocation(line: 76, column: 1, scope: !3170)
!3204 = !{i64 2154361613, i64 2154361633, i64 2154361696}
!3205 = !DILocation(line: 77, column: 1, scope: !3170)
!3206 = !{i64 2154362063, i64 2154362083, i64 2154362146}
!3207 = !DILocation(line: 78, column: 1, scope: !3170)
!3208 = !{i64 2154366574, i64 2154366594, i64 2154366657}
!3209 = !DILocation(line: 79, column: 1, scope: !3170)
!3210 = !{i64 2154367024, i64 2154367044, i64 2154367107}
!3211 = !DILocation(line: 80, column: 1, scope: !3170)
!3212 = !{i64 2154367477, i64 2154367497, i64 2154367560}
!3213 = !DILocation(line: 84, column: 1, scope: !3170)
!3214 = !{i64 2154367809, i64 2154367829, i64 2154367892}
!3215 = !DILocation(line: 91, column: 1, scope: !3170)
!3216 = !{i64 2154368206, i64 2154368226, i64 2154368289}
!3217 = !DILocation(line: 93, column: 1, scope: !3170)
!3218 = !{i64 2154368573, i64 2154368593, i64 2154368656}
!3219 = !DILocation(line: 106, column: 1, scope: !3170)
!3220 = !{i64 2154368843, i64 2154368863, i64 2154368926}
!3221 = !DILocation(line: 11, column: 1, scope: !3222)
!3222 = !DILexicalBlockFile(scope: !3111, file: !3223, discriminator: 0)
!3223 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3224 = distinct !DISubprogram(name: "serial_cb", scope: !209, file: !209, line: 31, type: !204, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3225)
!3225 = !{!3226, !3227, !3228}
!3226 = !DILocalVariable(name: "dev", arg: 1, scope: !3224, file: !209, line: 31, type: !117)
!3227 = !DILocalVariable(name: "user_data", arg: 2, scope: !3224, file: !209, line: 31, type: !102)
!3228 = !DILocalVariable(name: "c", scope: !3224, file: !209, line: 33, type: !133)
!3229 = !DILocation(line: 0, scope: !3224)
!3230 = !DILocation(line: 33, column: 2, scope: !3224)
!3231 = !DILocation(line: 35, column: 7, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3224, file: !209, line: 35, column: 6)
!3233 = !DILocation(line: 35, column: 6, scope: !3224)
!3234 = !DILocation(line: 39, column: 9, scope: !3224)
!3235 = !DILocation(line: 39, column: 2, scope: !3224)
!3236 = !DILocation(line: 41, column: 3, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3224, file: !209, line: 39, column: 38)
!3238 = !DILocation(line: 43, column: 8, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3237, file: !209, line: 43, column: 7)
!3240 = !DILocation(line: 43, column: 10, scope: !3239)
!3241 = !DILocation(line: 43, column: 18, scope: !3239)
!3242 = !DILocation(line: 45, column: 4, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3239, file: !209, line: 43, column: 51)
!3244 = !DILocation(line: 45, column: 23, scope: !3243)
!3245 = !DILocation(line: 48, column: 4, scope: !3243)
!3246 = !DILocation(line: 51, column: 15, scope: !3243)
!3247 = !DILocation(line: 52, column: 3, scope: !3243)
!3248 = !DILocation(line: 52, column: 25, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3239, file: !209, line: 52, column: 14)
!3250 = !DILocation(line: 52, column: 14, scope: !3239)
!3251 = !DILocation(line: 53, column: 21, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3249, file: !209, line: 52, column: 49)
!3253 = !DILocation(line: 53, column: 4, scope: !3252)
!3254 = !DILocation(line: 53, column: 25, scope: !3252)
!3255 = !DILocation(line: 54, column: 3, scope: !3252)
!3256 = distinct !{!3256, !3235, !3257}
!3257 = !DILocation(line: 56, column: 2, scope: !3224)
!3258 = !DILocation(line: 57, column: 1, scope: !3224)
!3259 = distinct !DISubprogram(name: "uart_irq_update", scope: !3260, file: !3260, line: 360, type: !151, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3261)
!3260 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!3261 = !{!3262}
!3262 = !DILocalVariable(name: "dev", arg: 1, scope: !3259, file: !3260, line: 360, type: !117)
!3263 = !DILocation(line: 0, scope: !3259)
!3264 = !DILocation(line: 368, column: 2, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3259, file: !3260, line: 368, column: 2)
!3266 = !{i64 2154322383}
!3267 = !DILocation(line: 369, column: 9, scope: !3259)
!3268 = !DILocation(line: 369, column: 2, scope: !3259)
!3269 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !111, file: !111, line: 1024, type: !151, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3270)
!3270 = !{!3271, !3272}
!3271 = !DILocalVariable(name: "dev", arg: 1, scope: !3269, file: !111, line: 1024, type: !117)
!3272 = !DILocalVariable(name: "api", scope: !3269, file: !111, line: 1027, type: !108)
!3273 = !DILocation(line: 0, scope: !3269)
!3274 = !DILocation(line: 1028, column: 40, scope: !3269)
!3275 = !DILocation(line: 1030, column: 11, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3269, file: !111, line: 1030, column: 6)
!3277 = !DILocation(line: 1030, column: 24, scope: !3276)
!3278 = !DILocation(line: 1030, column: 6, scope: !3269)
!3279 = !DILocation(line: 1033, column: 9, scope: !3269)
!3280 = !DILocation(line: 1033, column: 2, scope: !3269)
!3281 = !DILocation(line: 1038, column: 1, scope: !3269)
!3282 = distinct !DISubprogram(name: "uart_fifo_read", scope: !111, file: !111, line: 785, type: !180, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3283)
!3283 = !{!3284, !3285, !3286, !3287}
!3284 = !DILocalVariable(name: "dev", arg: 1, scope: !3282, file: !111, line: 785, type: !117)
!3285 = !DILocalVariable(name: "rx_data", arg: 2, scope: !3282, file: !111, line: 785, type: !182)
!3286 = !DILocalVariable(name: "size", arg: 3, scope: !3282, file: !111, line: 786, type: !183)
!3287 = !DILocalVariable(name: "api", scope: !3282, file: !111, line: 789, type: !108)
!3288 = !DILocation(line: 0, scope: !3282)
!3289 = !DILocation(line: 790, column: 40, scope: !3282)
!3290 = !DILocation(line: 792, column: 11, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3282, file: !111, line: 792, column: 6)
!3292 = !DILocation(line: 792, column: 21, scope: !3291)
!3293 = !DILocation(line: 792, column: 6, scope: !3282)
!3294 = !DILocation(line: 796, column: 9, scope: !3282)
!3295 = !DILocation(line: 796, column: 2, scope: !3282)
!3296 = !DILocation(line: 803, column: 1, scope: !3282)
!3297 = distinct !DISubprogram(name: "k_msgq_put", scope: !3298, file: !3298, line: 1129, type: !3299, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3306)
!3298 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!107, !3301, !13, !3302}
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!3302 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3303)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3304)
!3304 = !{!3305}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3303, file: !104, line: 66, baseType: !103, size: 64)
!3306 = !{!3307, !3308, !3309}
!3307 = !DILocalVariable(name: "msgq", arg: 1, scope: !3297, file: !3298, line: 1129, type: !3301)
!3308 = !DILocalVariable(name: "data", arg: 2, scope: !3297, file: !3298, line: 1129, type: !13)
!3309 = !DILocalVariable(name: "timeout", arg: 3, scope: !3297, file: !3298, line: 1129, type: !3302)
!3310 = !DILocation(line: 0, scope: !3297)
!3311 = !DILocation(line: 1139, column: 2, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3297, file: !3298, line: 1139, column: 2)
!3313 = !{i64 2154065844}
!3314 = !DILocation(line: 1140, column: 9, scope: !3297)
!3315 = !DILocation(line: 1140, column: 2, scope: !3297)
!3316 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !111, file: !111, line: 1136, type: !151, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3317)
!3317 = !{!3318, !3319}
!3318 = !DILocalVariable(name: "dev", arg: 1, scope: !3316, file: !111, line: 1136, type: !117)
!3319 = !DILocalVariable(name: "api", scope: !3316, file: !111, line: 1139, type: !108)
!3320 = !DILocation(line: 0, scope: !3316)
!3321 = !DILocation(line: 1140, column: 40, scope: !3316)
!3322 = !DILocation(line: 1142, column: 11, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3316, file: !111, line: 1142, column: 6)
!3324 = !DILocation(line: 1142, column: 22, scope: !3323)
!3325 = !DILocation(line: 1142, column: 6, scope: !3316)
!3326 = !DILocation(line: 1145, column: 9, scope: !3316)
!3327 = !DILocation(line: 1145, column: 2, scope: !3316)
!3328 = !DILocation(line: 1150, column: 1, scope: !3316)
!3329 = distinct !DISubprogram(name: "print_uart", scope: !209, file: !209, line: 62, type: !3330, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3332)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{null, !256}
!3332 = !{!3333, !3334, !3335}
!3333 = !DILocalVariable(name: "buf", arg: 1, scope: !3329, file: !209, line: 62, type: !256)
!3334 = !DILocalVariable(name: "msg_len", scope: !3329, file: !209, line: 64, type: !107)
!3335 = !DILocalVariable(name: "i", scope: !3336, file: !209, line: 66, type: !107)
!3336 = distinct !DILexicalBlock(scope: !3329, file: !209, line: 66, column: 2)
!3337 = !DILocation(line: 0, scope: !3329)
!3338 = !DILocation(line: 64, column: 16, scope: !3329)
!3339 = !DILocation(line: 0, scope: !3336)
!3340 = !DILocation(line: 66, column: 20, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3336, file: !209, line: 66, column: 2)
!3342 = !DILocation(line: 66, column: 2, scope: !3336)
!3343 = !DILocation(line: 69, column: 1, scope: !3329)
!3344 = !DILocation(line: 67, column: 27, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3341, file: !209, line: 66, column: 36)
!3346 = !DILocation(line: 67, column: 3, scope: !3345)
!3347 = !DILocation(line: 66, column: 32, scope: !3341)
!3348 = distinct !{!3348, !3342, !3349}
!3349 = !DILocation(line: 68, column: 2, scope: !3336)
!3350 = distinct !DISubprogram(name: "uart_poll_out", scope: !3260, file: !3260, line: 95, type: !147, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3351)
!3351 = !{!3352, !3353}
!3352 = !DILocalVariable(name: "dev", arg: 1, scope: !3350, file: !3260, line: 95, type: !117)
!3353 = !DILocalVariable(name: "out_char", arg: 2, scope: !3350, file: !3260, line: 95, type: !134)
!3354 = !DILocation(line: 0, scope: !3350)
!3355 = !DILocation(line: 105, column: 2, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3350, file: !3260, line: 105, column: 2)
!3357 = !{i64 2154321635}
!3358 = !DILocation(line: 106, column: 2, scope: !3350)
!3359 = !DILocation(line: 107, column: 1, scope: !3350)
!3360 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !147, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3361)
!3361 = !{!3362, !3363, !3364}
!3362 = !DILocalVariable(name: "dev", arg: 1, scope: !3360, file: !111, line: 574, type: !117)
!3363 = !DILocalVariable(name: "out_char", arg: 2, scope: !3360, file: !111, line: 575, type: !134)
!3364 = !DILocalVariable(name: "api", scope: !3360, file: !111, line: 577, type: !108)
!3365 = !DILocation(line: 0, scope: !3360)
!3366 = !DILocation(line: 578, column: 40, scope: !3360)
!3367 = !DILocation(line: 580, column: 7, scope: !3360)
!3368 = !DILocation(line: 580, column: 2, scope: !3360)
!3369 = !DILocation(line: 581, column: 1, scope: !3360)
!3370 = distinct !DISubprogram(name: "main", scope: !209, file: !209, line: 71, type: !3113, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3371)
!3371 = !{!3372}
!3372 = !DILocalVariable(name: "tx_buf", scope: !3370, file: !209, line: 73, type: !218)
!3373 = !DILocation(line: 73, column: 2, scope: !3370)
!3374 = !DILocation(line: 73, column: 7, scope: !3370)
!3375 = !DILocation(line: 75, column: 7, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3370, file: !209, line: 75, column: 6)
!3377 = !DILocation(line: 75, column: 6, scope: !3370)
!3378 = !DILocation(line: 76, column: 3, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3376, file: !209, line: 75, column: 34)
!3380 = !DILocation(line: 77, column: 3, scope: !3379)
!3381 = !DILocation(line: 81, column: 2, scope: !3370)
!3382 = !DILocation(line: 82, column: 2, scope: !3370)
!3383 = !DILocation(line: 84, column: 2, scope: !3370)
!3384 = !DILocation(line: 85, column: 2, scope: !3370)
!3385 = !DILocation(line: 88, column: 9, scope: !3370)
!3386 = !DILocation(line: 88, column: 52, scope: !3370)
!3387 = !DILocation(line: 88, column: 2, scope: !3370)
!3388 = !DILocation(line: 89, column: 3, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3370, file: !209, line: 88, column: 58)
!3390 = !DILocation(line: 90, column: 3, scope: !3389)
!3391 = !DILocation(line: 91, column: 3, scope: !3389)
!3392 = distinct !{!3392, !3387, !3393}
!3393 = !DILocation(line: 92, column: 2, scope: !3370)
!3394 = !DILocation(line: 93, column: 1, scope: !3370)
!3395 = distinct !DISubprogram(name: "device_is_ready", scope: !3396, file: !3396, line: 47, type: !3397, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3399)
!3396 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!136, !117}
!3399 = !{!3400}
!3400 = !DILocalVariable(name: "dev", arg: 1, scope: !3395, file: !3396, line: 47, type: !117)
!3401 = !DILocation(line: 0, scope: !3395)
!3402 = !DILocation(line: 55, column: 2, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3395, file: !3396, line: 55, column: 2)
!3404 = !{i64 2154238390}
!3405 = !DILocation(line: 56, column: 9, scope: !3395)
!3406 = !DILocation(line: 56, column: 2, scope: !3395)
!3407 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !111, file: !111, line: 1163, type: !200, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3408)
!3408 = !{!3409, !3410, !3411, !3412}
!3409 = !DILocalVariable(name: "dev", arg: 1, scope: !3407, file: !111, line: 1163, type: !117)
!3410 = !DILocalVariable(name: "cb", arg: 2, scope: !3407, file: !111, line: 1164, type: !202)
!3411 = !DILocalVariable(name: "user_data", arg: 3, scope: !3407, file: !111, line: 1165, type: !102)
!3412 = !DILocalVariable(name: "api", scope: !3407, file: !111, line: 1168, type: !108)
!3413 = !DILocation(line: 0, scope: !3407)
!3414 = !DILocation(line: 1169, column: 40, scope: !3407)
!3415 = !DILocation(line: 1171, column: 11, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3407, file: !111, line: 1171, column: 6)
!3417 = !DILocation(line: 1171, column: 20, scope: !3416)
!3418 = !DILocation(line: 1171, column: 29, scope: !3416)
!3419 = !DILocation(line: 1171, column: 46, scope: !3416)
!3420 = !DILocation(line: 1171, column: 6, scope: !3407)
!3421 = !DILocation(line: 1172, column: 3, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3416, file: !111, line: 1171, column: 56)
!3423 = !DILocation(line: 1173, column: 2, scope: !3422)
!3424 = !DILocation(line: 1179, column: 1, scope: !3407)
!3425 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !3260, file: !3260, line: 241, type: !186, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3426)
!3426 = !{!3427}
!3427 = !DILocalVariable(name: "dev", arg: 1, scope: !3425, file: !3260, line: 241, type: !117)
!3428 = !DILocation(line: 0, scope: !3425)
!3429 = !DILocation(line: 250, column: 2, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3425, file: !3260, line: 250, column: 2)
!3431 = !{i64 2154322043}
!3432 = !DILocation(line: 251, column: 2, scope: !3425)
!3433 = !DILocation(line: 252, column: 1, scope: !3425)
!3434 = distinct !DISubprogram(name: "k_msgq_get", scope: !3298, file: !3298, line: 1147, type: !3435, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3437)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!107, !3301, !102, !3302}
!3437 = !{!3438, !3439, !3440}
!3438 = !DILocalVariable(name: "msgq", arg: 1, scope: !3434, file: !3298, line: 1147, type: !3301)
!3439 = !DILocalVariable(name: "data", arg: 2, scope: !3434, file: !3298, line: 1147, type: !102)
!3440 = !DILocalVariable(name: "timeout", arg: 3, scope: !3434, file: !3298, line: 1147, type: !3302)
!3441 = !DILocation(line: 0, scope: !3434)
!3442 = !DILocation(line: 1157, column: 2, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3434, file: !3298, line: 1157, column: 2)
!3444 = !{i64 2154065912}
!3445 = !DILocation(line: 1158, column: 9, scope: !3434)
!3446 = !DILocation(line: 1158, column: 2, scope: !3434)
!3447 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !111, file: !111, line: 934, type: !186, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3448)
!3448 = !{!3449, !3450}
!3449 = !DILocalVariable(name: "dev", arg: 1, scope: !3447, file: !111, line: 934, type: !117)
!3450 = !DILocalVariable(name: "api", scope: !3447, file: !111, line: 937, type: !108)
!3451 = !DILocation(line: 0, scope: !3447)
!3452 = !DILocation(line: 938, column: 40, scope: !3447)
!3453 = !DILocation(line: 940, column: 11, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3447, file: !111, line: 940, column: 6)
!3455 = !DILocation(line: 940, column: 25, scope: !3454)
!3456 = !DILocation(line: 940, column: 6, scope: !3447)
!3457 = !DILocation(line: 941, column: 3, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3454, file: !111, line: 940, column: 34)
!3459 = !DILocation(line: 942, column: 2, scope: !3458)
!3460 = !DILocation(line: 946, column: 1, scope: !3447)
!3461 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !3397, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3462)
!3462 = !{!3463}
!3463 = !DILocalVariable(name: "dev", arg: 1, scope: !3461, file: !120, line: 730, type: !117)
!3464 = !DILocation(line: 0, scope: !3461)
!3465 = !DILocation(line: 732, column: 9, scope: !3461)
!3466 = !DILocation(line: 732, column: 2, scope: !3461)
!3467 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !268, file: !268, line: 45, type: !270, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3468)
!3468 = !{!3469}
!3469 = !DILocalVariable(name: "c", arg: 1, scope: !3467, file: !268, line: 45, type: !107)
!3470 = !DILocation(line: 0, scope: !3467)
!3471 = !DILocation(line: 50, column: 2, scope: !3467)
!3472 = distinct !DISubprogram(name: "__printk_hook_install", scope: !268, file: !268, line: 63, type: !3473, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3475)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{null, !269}
!3475 = !{!3476}
!3476 = !DILocalVariable(name: "fn", arg: 1, scope: !3472, file: !268, line: 63, type: !269)
!3477 = !DILocation(line: 0, scope: !3472)
!3478 = !DILocation(line: 65, column: 12, scope: !3472)
!3479 = !DILocation(line: 66, column: 1, scope: !3472)
!3480 = distinct !DISubprogram(name: "__printk_get_hook", scope: !268, file: !268, line: 76, type: !3481, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !250)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!102}
!3483 = !DILocation(line: 78, column: 9, scope: !3480)
!3484 = !DILocation(line: 78, column: 2, scope: !3480)
!3485 = distinct !DISubprogram(name: "vprintk", scope: !268, file: !268, line: 113, type: !3486, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3495)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{null, !123, !3488}
!3488 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3489, line: 99, baseType: !3490)
!3489 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3489, line: 40, baseType: !3491)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !268, baseType: !3492)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3493)
!3493 = !{!3494}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3492, file: !268, line: 79, baseType: !102, size: 32)
!3495 = !{!3496, !3497, !3498}
!3496 = !DILocalVariable(name: "fmt", arg: 1, scope: !3485, file: !268, line: 113, type: !123)
!3497 = !DILocalVariable(name: "ap", arg: 2, scope: !3485, file: !268, line: 113, type: !3488)
!3498 = !DILocalVariable(name: "ctx", scope: !3499, file: !268, line: 121, type: !3501)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !268, line: 120, column: 27)
!3500 = distinct !DILexicalBlock(scope: !3485, file: !268, line: 120, column: 6)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !268, line: 81, size: 32, elements: !3502)
!3502 = !{!3503, !3504}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3501, file: !268, line: 85, baseType: !32, size: 32)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3501, file: !268, line: 86, baseType: !3505, offset: 32)
!3505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, elements: !2427)
!3506 = !DILocation(line: 0, scope: !3485)
!3507 = !DILocation(line: 148, column: 3, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3500, file: !268, line: 138, column: 9)
!3509 = !DILocation(line: 155, column: 1, scope: !3485)
!3510 = distinct !DISubprogram(name: "char_out", scope: !268, file: !268, line: 107, type: !3511, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3513)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!107, !107, !102}
!3513 = !{!3514, !3515}
!3514 = !DILocalVariable(name: "c", arg: 1, scope: !3510, file: !268, line: 107, type: !107)
!3515 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3510, file: !268, line: 107, type: !102)
!3516 = !DILocation(line: 0, scope: !3510)
!3517 = !DILocation(line: 110, column: 9, scope: !3510)
!3518 = !DILocation(line: 110, column: 2, scope: !3510)
!3519 = distinct !DISubprogram(name: "cbvprintf", scope: !3520, file: !3520, line: 739, type: !3521, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3527)
!3520 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!107, !3523, !102, !123, !3488}
!3523 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3520, line: 297, baseType: !3524)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 32)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!107, null}
!3527 = !{!3528, !3529, !3530, !3531}
!3528 = !DILocalVariable(name: "out", arg: 1, scope: !3519, file: !3520, line: 739, type: !3523)
!3529 = !DILocalVariable(name: "ctx", arg: 2, scope: !3519, file: !3520, line: 739, type: !102)
!3530 = !DILocalVariable(name: "format", arg: 3, scope: !3519, file: !3520, line: 739, type: !123)
!3531 = !DILocalVariable(name: "ap", arg: 4, scope: !3519, file: !3520, line: 739, type: !3488)
!3532 = !DILocation(line: 0, scope: !3519)
!3533 = !DILocation(line: 741, column: 9, scope: !3519)
!3534 = !DILocation(line: 741, column: 2, scope: !3519)
!3535 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !268, file: !268, line: 157, type: !3536, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3538)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{null, !256, !252}
!3538 = !{!3539, !3540, !3541}
!3539 = !DILocalVariable(name: "c", arg: 1, scope: !3535, file: !268, line: 157, type: !256)
!3540 = !DILocalVariable(name: "n", arg: 2, scope: !3535, file: !268, line: 157, type: !252)
!3541 = !DILocalVariable(name: "i", scope: !3535, file: !268, line: 159, type: !252)
!3542 = !DILocation(line: 0, scope: !3535)
!3543 = !DILocation(line: 164, column: 16, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !268, line: 164, column: 2)
!3545 = distinct !DILexicalBlock(scope: !3535, file: !268, line: 164, column: 2)
!3546 = !DILocation(line: 164, column: 2, scope: !3545)
!3547 = !DILocation(line: 165, column: 3, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3544, file: !268, line: 164, column: 26)
!3549 = !DILocation(line: 165, column: 13, scope: !3548)
!3550 = !DILocation(line: 164, column: 22, scope: !3544)
!3551 = distinct !{!3551, !3546, !3552}
!3552 = !DILocation(line: 166, column: 2, scope: !3545)
!3553 = !DILocation(line: 171, column: 1, scope: !3535)
!3554 = distinct !DISubprogram(name: "printk", scope: !268, file: !268, line: 203, type: !3555, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3557)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{null, !123, null}
!3557 = !{!3558, !3559}
!3558 = !DILocalVariable(name: "fmt", arg: 1, scope: !3554, file: !268, line: 203, type: !123)
!3559 = !DILocalVariable(name: "ap", scope: !3554, file: !268, line: 205, type: !3488)
!3560 = !DILocation(line: 0, scope: !3554)
!3561 = !DILocation(line: 205, column: 2, scope: !3554)
!3562 = !DILocation(line: 205, column: 10, scope: !3554)
!3563 = !DILocation(line: 207, column: 2, scope: !3554)
!3564 = !DILocation(line: 209, column: 2, scope: !3554)
!3565 = !DILocation(line: 211, column: 2, scope: !3554)
!3566 = !DILocation(line: 212, column: 1, scope: !3554)
!3567 = distinct !DISubprogram(name: "snprintk", scope: !268, file: !268, line: 239, type: !3568, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3570)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!107, !256, !252, !123, null}
!3570 = !{!3571, !3572, !3573, !3574, !3575}
!3571 = !DILocalVariable(name: "str", arg: 1, scope: !3567, file: !268, line: 239, type: !256)
!3572 = !DILocalVariable(name: "size", arg: 2, scope: !3567, file: !268, line: 239, type: !252)
!3573 = !DILocalVariable(name: "fmt", arg: 3, scope: !3567, file: !268, line: 239, type: !123)
!3574 = !DILocalVariable(name: "ap", scope: !3567, file: !268, line: 241, type: !3488)
!3575 = !DILocalVariable(name: "ret", scope: !3567, file: !268, line: 242, type: !107)
!3576 = !DILocation(line: 0, scope: !3567)
!3577 = !DILocation(line: 241, column: 2, scope: !3567)
!3578 = !DILocation(line: 241, column: 10, scope: !3567)
!3579 = !DILocation(line: 244, column: 2, scope: !3567)
!3580 = !DILocation(line: 245, column: 8, scope: !3567)
!3581 = !DILocation(line: 246, column: 2, scope: !3567)
!3582 = !DILocation(line: 249, column: 1, scope: !3567)
!3583 = !DILocation(line: 248, column: 2, scope: !3567)
!3584 = distinct !DISubprogram(name: "vsnprintk", scope: !268, file: !268, line: 251, type: !3585, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3587)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!107, !256, !252, !123, !3488}
!3587 = !{!3588, !3589, !3590, !3591, !3592}
!3588 = !DILocalVariable(name: "str", arg: 1, scope: !3584, file: !268, line: 251, type: !256)
!3589 = !DILocalVariable(name: "size", arg: 2, scope: !3584, file: !268, line: 251, type: !252)
!3590 = !DILocalVariable(name: "fmt", arg: 3, scope: !3584, file: !268, line: 251, type: !123)
!3591 = !DILocalVariable(name: "ap", arg: 4, scope: !3584, file: !268, line: 251, type: !3488)
!3592 = !DILocalVariable(name: "ctx", scope: !3584, file: !268, line: 253, type: !3593)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !268, line: 217, size: 96, elements: !3594)
!3594 = !{!3595, !3596, !3597}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3593, file: !268, line: 218, baseType: !256, size: 32)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3593, file: !268, line: 219, baseType: !107, size: 32, offset: 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3593, file: !268, line: 220, baseType: !107, size: 32, offset: 64)
!3598 = !DILocation(line: 0, scope: !3584)
!3599 = !DILocation(line: 253, column: 2, scope: !3584)
!3600 = !DILocation(line: 253, column: 21, scope: !3584)
!3601 = !DILocation(line: 253, column: 27, scope: !3584)
!3602 = !DILocation(line: 255, column: 2, scope: !3584)
!3603 = !DILocation(line: 257, column: 10, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3584, file: !268, line: 257, column: 6)
!3605 = !DILocation(line: 257, column: 22, scope: !3604)
!3606 = !DILocation(line: 257, column: 16, scope: !3604)
!3607 = !DILocation(line: 257, column: 6, scope: !3584)
!3608 = !DILocation(line: 258, column: 3, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3604, file: !268, line: 257, column: 27)
!3610 = !DILocation(line: 258, column: 18, scope: !3609)
!3611 = !DILocation(line: 259, column: 2, scope: !3609)
!3612 = !DILocation(line: 262, column: 1, scope: !3584)
!3613 = !DILocation(line: 261, column: 2, scope: !3584)
!3614 = distinct !DISubprogram(name: "str_out", scope: !268, file: !268, line: 223, type: !3615, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3618)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!107, !107, !3617}
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 32)
!3618 = !{!3619, !3620}
!3619 = !DILocalVariable(name: "c", arg: 1, scope: !3614, file: !268, line: 223, type: !107)
!3620 = !DILocalVariable(name: "ctx", arg: 2, scope: !3614, file: !268, line: 223, type: !3617)
!3621 = !DILocation(line: 0, scope: !3614)
!3622 = !DILocation(line: 225, column: 11, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3614, file: !268, line: 225, column: 6)
!3624 = !DILocation(line: 225, column: 15, scope: !3623)
!3625 = !DILocation(line: 0, scope: !3623)
!3626 = !DILocation(line: 225, column: 23, scope: !3623)
!3627 = !DILocation(line: 225, column: 45, scope: !3623)
!3628 = !DILocation(line: 225, column: 37, scope: !3623)
!3629 = !DILocation(line: 225, column: 6, scope: !3614)
!3630 = !DILocation(line: 226, column: 8, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3623, file: !268, line: 225, column: 50)
!3632 = !DILocation(line: 226, column: 13, scope: !3631)
!3633 = !DILocation(line: 227, column: 3, scope: !3631)
!3634 = !DILocation(line: 230, column: 29, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3614, file: !268, line: 230, column: 6)
!3636 = !DILocation(line: 230, column: 17, scope: !3635)
!3637 = !DILocation(line: 230, column: 6, scope: !3614)
!3638 = !DILocation(line: 231, column: 22, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3635, file: !268, line: 230, column: 34)
!3640 = !DILocation(line: 231, column: 3, scope: !3639)
!3641 = !DILocation(line: 231, column: 26, scope: !3639)
!3642 = !DILocation(line: 232, column: 2, scope: !3639)
!3643 = !DILocation(line: 233, column: 28, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3635, file: !268, line: 232, column: 9)
!3645 = !DILocation(line: 233, column: 22, scope: !3644)
!3646 = !DILocation(line: 233, column: 3, scope: !3644)
!3647 = !DILocation(line: 233, column: 26, scope: !3644)
!3648 = !DILocation(line: 237, column: 1, scope: !3614)
!3649 = distinct !DISubprogram(name: "z_thread_entry", scope: !3650, file: !3650, line: 30, type: !3651, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2395, retainedNodes: !3658)
!3650 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3651 = !DISubroutineType(types: !3652)
!3652 = !{null, !3653, !102, !102, !102}
!3653 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3654, line: 46, baseType: !3655)
!3654 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 32)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{null, !102, !102, !102}
!3658 = !{!3659, !3660, !3661, !3662}
!3659 = !DILocalVariable(name: "entry", arg: 1, scope: !3649, file: !3650, line: 30, type: !3653)
!3660 = !DILocalVariable(name: "p1", arg: 2, scope: !3649, file: !3650, line: 31, type: !102)
!3661 = !DILocalVariable(name: "p2", arg: 3, scope: !3649, file: !3650, line: 31, type: !102)
!3662 = !DILocalVariable(name: "p3", arg: 4, scope: !3649, file: !3650, line: 31, type: !102)
!3663 = !DILocation(line: 0, scope: !3649)
!3664 = !DILocation(line: 36, column: 2, scope: !3649)
!3665 = !DILocation(line: 38, column: 17, scope: !3649)
!3666 = !DILocation(line: 38, column: 2, scope: !3649)
!3667 = !DILocation(line: 45, column: 2, scope: !3649)
!3668 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !3669, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2395, retainedNodes: !250)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!3671}
!3671 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !3672)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 32)
!3673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3674)
!3674 = !{!3675, !3733, !3745, !3746, !3747, !3748, !3754, !3767}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3673, file: !359, line: 247, baseType: !3676, size: 384)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3677)
!3677 = !{!3678, !3702, !3709, !3710, !3711, !3720, !3721, !3722}
!3678 = !DIDerivedType(tag: DW_TAG_member, scope: !3676, file: !359, line: 60, baseType: !3679, size: 64)
!3679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3676, file: !359, line: 60, size: 64, elements: !3680)
!3680 = !{!3681, !3696}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3679, file: !359, line: 61, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3683)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3684)
!3684 = !{!3685, !3691}
!3685 = !DIDerivedType(tag: DW_TAG_member, scope: !3683, file: !233, line: 38, baseType: !3686, size: 32)
!3686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3683, file: !233, line: 38, size: 32, elements: !3687)
!3687 = !{!3688, !3690}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3686, file: !233, line: 39, baseType: !3689, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3686, file: !233, line: 40, baseType: !3689, size: 32)
!3691 = !DIDerivedType(tag: DW_TAG_member, scope: !3683, file: !233, line: 42, baseType: !3692, size: 32, offset: 32)
!3692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3683, file: !233, line: 42, size: 32, elements: !3693)
!3693 = !{!3694, !3695}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3692, file: !233, line: 43, baseType: !3689, size: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3692, file: !233, line: 44, baseType: !3689, size: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3679, file: !359, line: 62, baseType: !3697, size: 64)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3698)
!3698 = !{!3699}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3697, file: !384, line: 50, baseType: !3700, size: 64)
!3700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3701, size: 64, elements: !389)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3676, file: !359, line: 68, baseType: !3703, size: 32, offset: 64)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 32)
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3705)
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3706)
!3706 = !{!3707}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3705, file: !228, line: 232, baseType: !3708, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3683)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3676, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3676, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3711 = !DIDerivedType(tag: DW_TAG_member, scope: !3676, file: !359, line: 90, baseType: !3712, size: 16, offset: 112)
!3712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3676, file: !359, line: 90, size: 16, elements: !3713)
!3713 = !{!3714, !3719}
!3714 = !DIDerivedType(tag: DW_TAG_member, scope: !3712, file: !359, line: 91, baseType: !3715, size: 16)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3712, file: !359, line: 91, size: 16, elements: !3716)
!3716 = !{!3717, !3718}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3715, file: !359, line: 96, baseType: !407, size: 8)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3715, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3712, file: !359, line: 100, baseType: !411, size: 16)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3676, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3676, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3676, file: !359, line: 131, baseType: !3723, size: 192, offset: 192)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3724)
!3724 = !{!3725, !3726, !3732}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3723, file: !228, line: 245, baseType: !3682, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3723, file: !228, line: 246, baseType: !3727, size: 32, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3728)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 32)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{null, !3731}
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 32)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3723, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3673, file: !359, line: 250, baseType: !3734, size: 288, offset: 384)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3735)
!3735 = !{!3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3734, file: !428, line: 26, baseType: !162, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3734, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3734, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3734, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3734, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3734, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3734, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3734, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3734, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3673, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3673, file: !359, line: 256, baseType: !3704, size: 64, offset: 704)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3673, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3673, file: !359, line: 300, baseType: !3749, size: 96, offset: 800)
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3750)
!3750 = !{!3751, !3752, !3753}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3749, file: !359, line: 153, baseType: !22, size: 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3749, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3749, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3673, file: !359, line: 325, baseType: !3755, size: 32, offset: 896)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 32)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3757)
!3757 = !{!3758, !3764, !3765}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3756, file: !224, line: 5074, baseType: !3759, size: 96)
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3760)
!3760 = !{!3761, !3762, !3763}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3759, file: !454, line: 57, baseType: !457, size: 32)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3759, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3759, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3756, file: !224, line: 5075, baseType: !3704, size: 64, offset: 96)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3756, file: !224, line: 5076, baseType: !3766, offset: 160)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3673, file: !359, line: 343, baseType: !3768, size: 64, offset: 928)
!3768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3769)
!3769 = !{!3770, !3771}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3768, file: !428, line: 63, baseType: !162, size: 32)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3768, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3772 = !DILocation(line: 535, column: 9, scope: !3668)
!3773 = !DILocation(line: 535, column: 2, scope: !3668)
!3774 = distinct !DISubprogram(name: "k_thread_abort", scope: !3298, file: !3298, line: 188, type: !3775, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2395, retainedNodes: !3777)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{null, !3671}
!3777 = !{!3778}
!3778 = !DILocalVariable(name: "thread", arg: 1, scope: !3774, file: !3298, line: 188, type: !3671)
!3779 = !DILocation(line: 0, scope: !3774)
!3780 = !DILocation(line: 197, column: 2, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3774, file: !3298, line: 197, column: 2)
!3782 = !{i64 2154061036}
!3783 = !DILocation(line: 198, column: 2, scope: !3774)
!3784 = !DILocation(line: 199, column: 1, scope: !3774)
!3785 = distinct !DISubprogram(name: "z_current_get", scope: !3298, file: !3298, line: 173, type: !3669, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2395, retainedNodes: !250)
!3786 = !DILocation(line: 180, column: 2, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3785, file: !3298, line: 180, column: 2)
!3788 = !{i64 2154060968}
!3789 = !DILocation(line: 181, column: 9, scope: !3785)
!3790 = !DILocation(line: 181, column: 2, scope: !3785)
!3791 = distinct !DISubprogram(name: "sys_heap_free", scope: !3792, file: !3792, line: 163, type: !3793, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3801)
!3792 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3793 = !DISubroutineType(types: !3794)
!3794 = !{null, !3795, !102}
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 32)
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3797)
!3797 = !{!3798, !3799, !3800}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3796, file: !454, line: 57, baseType: !2414, size: 32)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3796, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3796, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3801 = !{!3802, !3803, !3804, !3805}
!3802 = !DILocalVariable(name: "heap", arg: 1, scope: !3791, file: !3792, line: 163, type: !3795)
!3803 = !DILocalVariable(name: "mem", arg: 2, scope: !3791, file: !3792, line: 163, type: !102)
!3804 = !DILocalVariable(name: "h", scope: !3791, file: !3792, line: 168, type: !2414)
!3805 = !DILocalVariable(name: "c", scope: !3791, file: !3792, line: 169, type: !2419)
!3806 = !DILocation(line: 0, scope: !3791)
!3807 = !DILocation(line: 165, column: 10, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3791, file: !3792, line: 165, column: 6)
!3809 = !DILocation(line: 165, column: 6, scope: !3791)
!3810 = !DILocation(line: 168, column: 27, scope: !3791)
!3811 = !DILocation(line: 169, column: 16, scope: !3791)
!3812 = !{i32 0, i32 536870912}
!3813 = !DILocation(line: 187, column: 2, scope: !3791)
!3814 = !DILocation(line: 197, column: 2, scope: !3791)
!3815 = !DILocation(line: 198, column: 1, scope: !3791)
!3816 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3792, file: !3792, line: 157, type: !3817, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3819)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!2419, !2414, !102}
!3819 = !{!3820, !3821, !3822, !3823}
!3820 = !DILocalVariable(name: "h", arg: 1, scope: !3816, file: !3792, line: 157, type: !2414)
!3821 = !DILocalVariable(name: "p", arg: 2, scope: !3816, file: !3792, line: 157, type: !102)
!3822 = !DILocalVariable(name: "mem", scope: !3816, file: !3792, line: 159, type: !182)
!3823 = !DILocalVariable(name: "base", scope: !3816, file: !3792, line: 159, type: !182)
!3824 = !DILocation(line: 0, scope: !3816)
!3825 = !DILocation(line: 159, column: 39, scope: !3816)
!3826 = !DILocation(line: 160, column: 14, scope: !3816)
!3827 = !DILocation(line: 160, column: 38, scope: !3816)
!3828 = !DILocation(line: 160, column: 46, scope: !3816)
!3829 = !DILocation(line: 160, column: 2, scope: !3816)
!3830 = distinct !DISubprogram(name: "set_chunk_used", scope: !2401, file: !2401, line: 147, type: !3831, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3833)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{null, !2414, !2419, !136}
!3833 = !{!3834, !3835, !3836, !3837, !3838}
!3834 = !DILocalVariable(name: "h", arg: 1, scope: !3830, file: !2401, line: 147, type: !2414)
!3835 = !DILocalVariable(name: "c", arg: 2, scope: !3830, file: !2401, line: 147, type: !2419)
!3836 = !DILocalVariable(name: "used", arg: 3, scope: !3830, file: !2401, line: 147, type: !136)
!3837 = !DILocalVariable(name: "buf", scope: !3830, file: !2401, line: 149, type: !2408)
!3838 = !DILocalVariable(name: "cmem", scope: !3830, file: !2401, line: 150, type: !102)
!3839 = !DILocation(line: 0, scope: !3830)
!3840 = !DILocation(line: 149, column: 22, scope: !3830)
!3841 = !DILocation(line: 0, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !2401, line: 159, column: 7)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !2401, line: 158, column: 9)
!3844 = distinct !DILexicalBlock(scope: !3830, file: !2401, line: 152, column: 6)
!3845 = !DILocation(line: 159, column: 7, scope: !3843)
!3846 = !DILocation(line: 165, column: 1, scope: !3830)
!3847 = distinct !DISubprogram(name: "free_chunk", scope: !3792, file: !3792, line: 133, type: !3848, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3850)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{null, !2414, !2419}
!3850 = !{!3851, !3852}
!3851 = !DILocalVariable(name: "h", arg: 1, scope: !3847, file: !3792, line: 133, type: !2414)
!3852 = !DILocalVariable(name: "c", arg: 2, scope: !3847, file: !3792, line: 133, type: !2419)
!3853 = !DILocation(line: 0, scope: !3847)
!3854 = !DILocation(line: 136, column: 21, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3847, file: !3792, line: 136, column: 6)
!3856 = !DILocation(line: 136, column: 7, scope: !3855)
!3857 = !DILocation(line: 136, column: 6, scope: !3847)
!3858 = !DILocation(line: 137, column: 3, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3855, file: !3792, line: 136, column: 41)
!3860 = !DILocation(line: 138, column: 22, scope: !3859)
!3861 = !DILocation(line: 138, column: 3, scope: !3859)
!3862 = !DILocation(line: 139, column: 2, scope: !3859)
!3863 = !DILocation(line: 142, column: 21, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3847, file: !3792, line: 142, column: 6)
!3865 = !{i32 -65535, i32 536903678}
!3866 = !DILocation(line: 142, column: 7, scope: !3864)
!3867 = !DILocation(line: 142, column: 6, scope: !3847)
!3868 = !DILocation(line: 143, column: 3, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3864, file: !3792, line: 142, column: 40)
!3870 = !DILocation(line: 144, column: 19, scope: !3869)
!3871 = !DILocation(line: 144, column: 3, scope: !3869)
!3872 = !DILocation(line: 145, column: 7, scope: !3869)
!3873 = !DILocation(line: 146, column: 2, scope: !3869)
!3874 = !DILocation(line: 148, column: 2, scope: !3847)
!3875 = !DILocation(line: 149, column: 1, scope: !3847)
!3876 = distinct !DISubprogram(name: "right_chunk", scope: !2401, file: !2401, line: 204, type: !3877, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3879)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!2419, !2414, !2419}
!3879 = !{!3880, !3881}
!3880 = !DILocalVariable(name: "h", arg: 1, scope: !3876, file: !2401, line: 204, type: !2414)
!3881 = !DILocalVariable(name: "c", arg: 2, scope: !3876, file: !2401, line: 204, type: !2419)
!3882 = !DILocation(line: 0, scope: !3876)
!3883 = !DILocation(line: 206, column: 13, scope: !3876)
!3884 = !DILocation(line: 206, column: 11, scope: !3876)
!3885 = !DILocation(line: 206, column: 2, scope: !3876)
!3886 = distinct !DISubprogram(name: "chunk_used", scope: !2401, file: !2401, line: 137, type: !3887, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3889)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{!136, !2414, !2419}
!3889 = !{!3890, !3891}
!3890 = !DILocalVariable(name: "h", arg: 1, scope: !3886, file: !2401, line: 137, type: !2414)
!3891 = !DILocalVariable(name: "c", arg: 2, scope: !3886, file: !2401, line: 137, type: !2419)
!3892 = !DILocation(line: 0, scope: !3886)
!3893 = !DILocation(line: 139, column: 9, scope: !3886)
!3894 = !DILocation(line: 139, column: 42, scope: !3886)
!3895 = !DILocation(line: 139, column: 2, scope: !3886)
!3896 = distinct !DISubprogram(name: "free_list_remove", scope: !3792, file: !3792, line: 60, type: !3848, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3897)
!3897 = !{!3898, !3899, !3900}
!3898 = !DILocalVariable(name: "h", arg: 1, scope: !3896, file: !3792, line: 60, type: !2414)
!3899 = !DILocalVariable(name: "c", arg: 2, scope: !3896, file: !3792, line: 60, type: !2419)
!3900 = !DILocalVariable(name: "bidx", scope: !3901, file: !3792, line: 63, type: !107)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !3792, line: 62, column: 31)
!3902 = distinct !DILexicalBlock(scope: !3896, file: !3792, line: 62, column: 6)
!3903 = !DILocation(line: 0, scope: !3896)
!3904 = !DILocation(line: 63, column: 28, scope: !3901)
!3905 = !{i32 0, i32 32768}
!3906 = !DILocation(line: 63, column: 14, scope: !3901)
!3907 = !DILocation(line: 0, scope: !3901)
!3908 = !DILocation(line: 64, column: 3, scope: !3901)
!3909 = !DILocation(line: 66, column: 1, scope: !3896)
!3910 = distinct !DISubprogram(name: "merge_chunks", scope: !3792, file: !3792, line: 125, type: !3911, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3913)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{null, !2414, !2419, !2419}
!3913 = !{!3914, !3915, !3916, !3917}
!3914 = !DILocalVariable(name: "h", arg: 1, scope: !3910, file: !3792, line: 125, type: !2414)
!3915 = !DILocalVariable(name: "lc", arg: 2, scope: !3910, file: !3792, line: 125, type: !2419)
!3916 = !DILocalVariable(name: "rc", arg: 3, scope: !3910, file: !3792, line: 125, type: !2419)
!3917 = !DILocalVariable(name: "newsz", scope: !3910, file: !3792, line: 127, type: !3918)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2401, line: 62, baseType: !162)
!3919 = !DILocation(line: 0, scope: !3910)
!3920 = !DILocation(line: 127, column: 20, scope: !3910)
!3921 = !DILocation(line: 127, column: 40, scope: !3910)
!3922 = !DILocation(line: 127, column: 38, scope: !3910)
!3923 = !DILocation(line: 129, column: 2, scope: !3910)
!3924 = !DILocation(line: 130, column: 25, scope: !3910)
!3925 = !DILocation(line: 130, column: 2, scope: !3910)
!3926 = !DILocation(line: 131, column: 1, scope: !3910)
!3927 = distinct !DISubprogram(name: "left_chunk", scope: !2401, file: !2401, line: 199, type: !3877, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3928)
!3928 = !{!3929, !3930}
!3929 = !DILocalVariable(name: "h", arg: 1, scope: !3927, file: !2401, line: 199, type: !2414)
!3930 = !DILocalVariable(name: "c", arg: 2, scope: !3927, file: !2401, line: 199, type: !2419)
!3931 = !DILocation(line: 0, scope: !3927)
!3932 = !DILocation(line: 201, column: 13, scope: !3927)
!3933 = !DILocation(line: 201, column: 11, scope: !3927)
!3934 = !DILocation(line: 201, column: 2, scope: !3927)
!3935 = distinct !DISubprogram(name: "free_list_add", scope: !3792, file: !3792, line: 98, type: !3848, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3936)
!3936 = !{!3937, !3938, !3939}
!3937 = !DILocalVariable(name: "h", arg: 1, scope: !3935, file: !3792, line: 98, type: !2414)
!3938 = !DILocalVariable(name: "c", arg: 2, scope: !3935, file: !3792, line: 98, type: !2419)
!3939 = !DILocalVariable(name: "bidx", scope: !3940, file: !3792, line: 101, type: !107)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !3792, line: 100, column: 31)
!3941 = distinct !DILexicalBlock(scope: !3935, file: !3792, line: 100, column: 6)
!3942 = !DILocation(line: 0, scope: !3935)
!3943 = !DILocation(line: 101, column: 28, scope: !3940)
!3944 = !DILocation(line: 101, column: 14, scope: !3940)
!3945 = !DILocation(line: 0, scope: !3940)
!3946 = !DILocation(line: 102, column: 3, scope: !3940)
!3947 = !DILocation(line: 104, column: 1, scope: !3935)
!3948 = distinct !DISubprogram(name: "chunk_size", scope: !2401, file: !2401, line: 142, type: !3949, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3951)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!3918, !2414, !2419}
!3951 = !{!3952, !3953}
!3952 = !DILocalVariable(name: "h", arg: 1, scope: !3948, file: !2401, line: 142, type: !2414)
!3953 = !DILocalVariable(name: "c", arg: 2, scope: !3948, file: !2401, line: 142, type: !2419)
!3954 = !DILocation(line: 0, scope: !3948)
!3955 = !DILocation(line: 144, column: 9, scope: !3948)
!3956 = !DILocation(line: 144, column: 42, scope: !3948)
!3957 = !DILocation(line: 144, column: 2, scope: !3948)
!3958 = distinct !DISubprogram(name: "bucket_idx", scope: !2401, file: !2401, line: 250, type: !3959, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3961)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{!107, !2414, !3918}
!3961 = !{!3962, !3963, !3964}
!3962 = !DILocalVariable(name: "h", arg: 1, scope: !3958, file: !2401, line: 250, type: !2414)
!3963 = !DILocalVariable(name: "sz", arg: 2, scope: !3958, file: !2401, line: 250, type: !3918)
!3964 = !DILocalVariable(name: "usable_sz", scope: !3958, file: !2401, line: 252, type: !32)
!3965 = !DILocation(line: 0, scope: !3958)
!3966 = !DILocation(line: 252, column: 32, scope: !3958)
!3967 = !DILocation(line: 252, column: 30, scope: !3958)
!3968 = !DILocation(line: 252, column: 50, scope: !3958)
!3969 = !DILocation(line: 253, column: 14, scope: !3958)
!3970 = !{i32 0, i32 33}
!3971 = !DILocation(line: 253, column: 12, scope: !3958)
!3972 = !DILocation(line: 253, column: 2, scope: !3958)
!3973 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3792, file: !3792, line: 68, type: !3974, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !3976)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{null, !2414, !2419, !107}
!3976 = !{!3977, !3978, !3979, !3980, !3982, !3985}
!3977 = !DILocalVariable(name: "h", arg: 1, scope: !3973, file: !3792, line: 68, type: !2414)
!3978 = !DILocalVariable(name: "c", arg: 2, scope: !3973, file: !3792, line: 68, type: !2419)
!3979 = !DILocalVariable(name: "bidx", arg: 3, scope: !3973, file: !3792, line: 68, type: !107)
!3980 = !DILocalVariable(name: "b", scope: !3973, file: !3792, line: 70, type: !3981)
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!3982 = !DILocalVariable(name: "second", scope: !3983, file: !3792, line: 84, type: !2419)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !3792, line: 80, column: 9)
!3984 = distinct !DILexicalBlock(scope: !3973, file: !3792, line: 72, column: 6)
!3985 = !DILocalVariable(name: "first", scope: !3983, file: !3792, line: 85, type: !2419)
!3986 = !DILocation(line: 0, scope: !3973)
!3987 = !DILocation(line: 72, column: 9, scope: !3984)
!3988 = !DILocation(line: 72, column: 14, scope: !3984)
!3989 = !DILocation(line: 72, column: 6, scope: !3973)
!3990 = !DILocation(line: 76, column: 23, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3984, file: !3792, line: 72, column: 21)
!3992 = !DILocation(line: 76, column: 6, scope: !3991)
!3993 = !DILocation(line: 76, column: 20, scope: !3991)
!3994 = !DILocation(line: 77, column: 11, scope: !3991)
!3995 = !DILocation(line: 78, column: 3, scope: !3991)
!3996 = !DILocation(line: 79, column: 3, scope: !3991)
!3997 = !DILocation(line: 80, column: 2, scope: !3991)
!3998 = !DILocation(line: 0, scope: !3983)
!3999 = !DILocation(line: 85, column: 21, scope: !3983)
!4000 = !{i32 0, i32 65536}
!4001 = !DILocation(line: 87, column: 3, scope: !3983)
!4002 = !DILocation(line: 88, column: 3, scope: !3983)
!4003 = !DILocation(line: 89, column: 3, scope: !3983)
!4004 = !DILocation(line: 90, column: 3, scope: !3983)
!4005 = !DILocation(line: 96, column: 1, scope: !3973)
!4006 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2401, file: !2401, line: 187, type: !3911, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4007)
!4007 = !{!4008, !4009, !4010}
!4008 = !DILocalVariable(name: "h", arg: 1, scope: !4006, file: !2401, line: 187, type: !2414)
!4009 = !DILocalVariable(name: "c", arg: 2, scope: !4006, file: !2401, line: 187, type: !2419)
!4010 = !DILocalVariable(name: "prev", arg: 3, scope: !4006, file: !2401, line: 188, type: !2419)
!4011 = !DILocation(line: 0, scope: !4006)
!4012 = !DILocation(line: 190, column: 2, scope: !4006)
!4013 = !DILocation(line: 191, column: 1, scope: !4006)
!4014 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2401, file: !2401, line: 193, type: !3911, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4015)
!4015 = !{!4016, !4017, !4018}
!4016 = !DILocalVariable(name: "h", arg: 1, scope: !4014, file: !2401, line: 193, type: !2414)
!4017 = !DILocalVariable(name: "c", arg: 2, scope: !4014, file: !2401, line: 193, type: !2419)
!4018 = !DILocalVariable(name: "next", arg: 3, scope: !4014, file: !2401, line: 194, type: !2419)
!4019 = !DILocation(line: 0, scope: !4014)
!4020 = !DILocation(line: 196, column: 2, scope: !4014)
!4021 = !DILocation(line: 197, column: 1, scope: !4014)
!4022 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2401, file: !2401, line: 177, type: !3877, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4023)
!4023 = !{!4024, !4025}
!4024 = !DILocalVariable(name: "h", arg: 1, scope: !4022, file: !2401, line: 177, type: !2414)
!4025 = !DILocalVariable(name: "c", arg: 2, scope: !4022, file: !2401, line: 177, type: !2419)
!4026 = !DILocation(line: 0, scope: !4022)
!4027 = !DILocation(line: 179, column: 9, scope: !4022)
!4028 = !DILocation(line: 179, column: 2, scope: !4022)
!4029 = distinct !DISubprogram(name: "chunk_field", scope: !2401, file: !2401, line: 107, type: !4030, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4032)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!2419, !2414, !2419, !2400}
!4032 = !{!4033, !4034, !4035, !4036, !4037}
!4033 = !DILocalVariable(name: "h", arg: 1, scope: !4029, file: !2401, line: 107, type: !2414)
!4034 = !DILocalVariable(name: "c", arg: 2, scope: !4029, file: !2401, line: 107, type: !2419)
!4035 = !DILocalVariable(name: "f", arg: 3, scope: !4029, file: !2401, line: 108, type: !2400)
!4036 = !DILocalVariable(name: "buf", scope: !4029, file: !2401, line: 110, type: !2408)
!4037 = !DILocalVariable(name: "cmem", scope: !4029, file: !2401, line: 111, type: !102)
!4038 = !DILocation(line: 0, scope: !4029)
!4039 = !DILocation(line: 110, column: 22, scope: !4029)
!4040 = !DILocation(line: 111, column: 15, scope: !4029)
!4041 = !DILocation(line: 116, column: 11, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !2401, line: 115, column: 9)
!4043 = distinct !DILexicalBlock(scope: !4029, file: !2401, line: 113, column: 6)
!4044 = !DILocation(line: 116, column: 10, scope: !4042)
!4045 = !DILocation(line: 118, column: 1, scope: !4029)
!4046 = distinct !DISubprogram(name: "chunk_buf", scope: !2401, file: !2401, line: 101, type: !4047, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4049)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!2408, !2414}
!4049 = !{!4050}
!4050 = !DILocalVariable(name: "h", arg: 1, scope: !4046, file: !2401, line: 101, type: !2414)
!4051 = !DILocation(line: 0, scope: !4046)
!4052 = !DILocation(line: 104, column: 9, scope: !4046)
!4053 = !DILocation(line: 104, column: 2, scope: !4046)
!4054 = distinct !DISubprogram(name: "chunk_set", scope: !2401, file: !2401, line: 120, type: !4055, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4057)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{null, !2414, !2419, !2400, !2419}
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4063}
!4058 = !DILocalVariable(name: "h", arg: 1, scope: !4054, file: !2401, line: 120, type: !2414)
!4059 = !DILocalVariable(name: "c", arg: 2, scope: !4054, file: !2401, line: 120, type: !2419)
!4060 = !DILocalVariable(name: "f", arg: 3, scope: !4054, file: !2401, line: 121, type: !2400)
!4061 = !DILocalVariable(name: "val", arg: 4, scope: !4054, file: !2401, line: 121, type: !2419)
!4062 = !DILocalVariable(name: "buf", scope: !4054, file: !2401, line: 125, type: !2408)
!4063 = !DILocalVariable(name: "cmem", scope: !4054, file: !2401, line: 126, type: !102)
!4064 = !DILocation(line: 0, scope: !4054)
!4065 = !DILocation(line: 125, column: 22, scope: !4054)
!4066 = !DILocation(line: 126, column: 15, scope: !4054)
!4067 = !DILocation(line: 133, column: 27, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !2401, line: 131, column: 9)
!4069 = distinct !DILexicalBlock(scope: !4054, file: !2401, line: 128, column: 6)
!4070 = !DILocation(line: 133, column: 4, scope: !4068)
!4071 = !DILocation(line: 133, column: 3, scope: !4068)
!4072 = !DILocation(line: 133, column: 25, scope: !4068)
!4073 = !DILocation(line: 135, column: 1, scope: !4054)
!4074 = distinct !DISubprogram(name: "min_chunk_size", scope: !2401, file: !2401, line: 240, type: !4075, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4077)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!3918, !2414}
!4077 = !{!4078}
!4078 = !DILocalVariable(name: "h", arg: 1, scope: !4074, file: !2401, line: 240, type: !2414)
!4079 = !DILocation(line: 0, scope: !4074)
!4080 = !DILocation(line: 242, column: 9, scope: !4074)
!4081 = !DILocation(line: 242, column: 2, scope: !4074)
!4082 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2401, file: !2401, line: 235, type: !4083, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4085)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{!3918, !2414, !252}
!4085 = !{!4086, !4087}
!4086 = !DILocalVariable(name: "h", arg: 1, scope: !4082, file: !2401, line: 235, type: !2414)
!4087 = !DILocalVariable(name: "bytes", arg: 2, scope: !4082, file: !2401, line: 235, type: !252)
!4088 = !DILocation(line: 0, scope: !4082)
!4089 = !DILocation(line: 237, column: 39, scope: !4082)
!4090 = !DILocation(line: 237, column: 9, scope: !4082)
!4091 = !DILocation(line: 237, column: 2, scope: !4082)
!4092 = distinct !DISubprogram(name: "chunksz", scope: !2401, file: !2401, line: 230, type: !4093, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4095)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!3918, !252}
!4095 = !{!4096}
!4096 = !DILocalVariable(name: "bytes", arg: 1, scope: !4092, file: !2401, line: 230, type: !252)
!4097 = !DILocation(line: 0, scope: !4092)
!4098 = !DILocation(line: 232, column: 29, scope: !4092)
!4099 = !DILocation(line: 232, column: 35, scope: !4092)
!4100 = !DILocation(line: 232, column: 2, scope: !4092)
!4101 = distinct !DISubprogram(name: "set_chunk_size", scope: !2401, file: !2401, line: 172, type: !4102, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4104)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{null, !2414, !2419, !3918}
!4104 = !{!4105, !4106, !4107}
!4105 = !DILocalVariable(name: "h", arg: 1, scope: !4101, file: !2401, line: 172, type: !2414)
!4106 = !DILocalVariable(name: "c", arg: 2, scope: !4101, file: !2401, line: 172, type: !2419)
!4107 = !DILocalVariable(name: "size", arg: 3, scope: !4101, file: !2401, line: 172, type: !3918)
!4108 = !DILocation(line: 0, scope: !4101)
!4109 = !DILocation(line: 174, column: 38, scope: !4101)
!4110 = !DILocation(line: 174, column: 2, scope: !4101)
!4111 = !DILocation(line: 175, column: 1, scope: !4101)
!4112 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2401, file: !2401, line: 209, type: !4102, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4113)
!4113 = !{!4114, !4115, !4116}
!4114 = !DILocalVariable(name: "h", arg: 1, scope: !4112, file: !2401, line: 209, type: !2414)
!4115 = !DILocalVariable(name: "c", arg: 2, scope: !4112, file: !2401, line: 209, type: !2419)
!4116 = !DILocalVariable(name: "size", arg: 3, scope: !4112, file: !2401, line: 210, type: !3918)
!4117 = !DILocation(line: 0, scope: !4112)
!4118 = !DILocation(line: 212, column: 2, scope: !4112)
!4119 = !DILocation(line: 213, column: 1, scope: !4112)
!4120 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3792, file: !3792, line: 34, type: !3974, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4121)
!4121 = !{!4122, !4123, !4124, !4125, !4126, !4129}
!4122 = !DILocalVariable(name: "h", arg: 1, scope: !4120, file: !3792, line: 34, type: !2414)
!4123 = !DILocalVariable(name: "c", arg: 2, scope: !4120, file: !3792, line: 34, type: !2419)
!4124 = !DILocalVariable(name: "bidx", arg: 3, scope: !4120, file: !3792, line: 34, type: !107)
!4125 = !DILocalVariable(name: "b", scope: !4120, file: !3792, line: 36, type: !3981)
!4126 = !DILocalVariable(name: "first", scope: !4127, file: !3792, line: 47, type: !2419)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !3792, line: 46, column: 9)
!4128 = distinct !DILexicalBlock(scope: !4120, file: !3792, line: 42, column: 6)
!4129 = !DILocalVariable(name: "second", scope: !4127, file: !3792, line: 48, type: !2419)
!4130 = !DILocation(line: 0, scope: !4120)
!4131 = !DILocation(line: 36, column: 29, scope: !4120)
!4132 = !DILocation(line: 42, column: 6, scope: !4128)
!4133 = !DILocation(line: 42, column: 28, scope: !4128)
!4134 = !DILocation(line: 42, column: 6, scope: !4120)
!4135 = !DILocation(line: 44, column: 24, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4128, file: !3792, line: 42, column: 34)
!4137 = !DILocation(line: 44, column: 23, scope: !4136)
!4138 = !DILocation(line: 44, column: 6, scope: !4136)
!4139 = !DILocation(line: 44, column: 20, scope: !4136)
!4140 = !DILocation(line: 45, column: 6, scope: !4136)
!4141 = !DILocation(line: 45, column: 11, scope: !4136)
!4142 = !DILocation(line: 46, column: 2, scope: !4136)
!4143 = !DILocation(line: 47, column: 21, scope: !4127)
!4144 = !DILocation(line: 0, scope: !4127)
!4145 = !DILocation(line: 50, column: 6, scope: !4127)
!4146 = !DILocation(line: 50, column: 11, scope: !4127)
!4147 = !DILocation(line: 51, column: 3, scope: !4127)
!4148 = !DILocation(line: 52, column: 3, scope: !4127)
!4149 = !DILocation(line: 58, column: 1, scope: !4120)
!4150 = distinct !DISubprogram(name: "next_free_chunk", scope: !2401, file: !2401, line: 182, type: !3877, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4151)
!4151 = !{!4152, !4153}
!4152 = !DILocalVariable(name: "h", arg: 1, scope: !4150, file: !2401, line: 182, type: !2414)
!4153 = !DILocalVariable(name: "c", arg: 2, scope: !4150, file: !2401, line: 182, type: !2419)
!4154 = !DILocation(line: 0, scope: !4150)
!4155 = !DILocation(line: 184, column: 9, scope: !4150)
!4156 = !DILocation(line: 184, column: 2, scope: !4150)
!4157 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3792, file: !3792, line: 200, type: !4158, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4160)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!252, !3795, !102}
!4160 = !{!4161, !4162, !4163, !4164, !4165, !4166, !4167}
!4161 = !DILocalVariable(name: "heap", arg: 1, scope: !4157, file: !3792, line: 200, type: !3795)
!4162 = !DILocalVariable(name: "mem", arg: 2, scope: !4157, file: !3792, line: 200, type: !102)
!4163 = !DILocalVariable(name: "h", scope: !4157, file: !3792, line: 202, type: !2414)
!4164 = !DILocalVariable(name: "c", scope: !4157, file: !3792, line: 203, type: !2419)
!4165 = !DILocalVariable(name: "addr", scope: !4157, file: !3792, line: 204, type: !252)
!4166 = !DILocalVariable(name: "chunk_base", scope: !4157, file: !3792, line: 205, type: !252)
!4167 = !DILocalVariable(name: "chunk_sz", scope: !4157, file: !3792, line: 206, type: !252)
!4168 = !DILocation(line: 0, scope: !4157)
!4169 = !DILocation(line: 202, column: 27, scope: !4157)
!4170 = !DILocation(line: 203, column: 16, scope: !4157)
!4171 = !DILocation(line: 204, column: 16, scope: !4157)
!4172 = !DILocation(line: 205, column: 31, scope: !4157)
!4173 = !DILocation(line: 205, column: 22, scope: !4157)
!4174 = !DILocation(line: 206, column: 20, scope: !4157)
!4175 = !DILocation(line: 206, column: 37, scope: !4157)
!4176 = !DILocation(line: 208, column: 26, scope: !4157)
!4177 = !DILocation(line: 208, column: 18, scope: !4157)
!4178 = !DILocation(line: 208, column: 2, scope: !4157)
!4179 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3792, file: !3792, line: 263, type: !4180, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4182)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!102, !3795, !252}
!4182 = !{!4183, !4184, !4185, !4186, !4187, !4188}
!4183 = !DILocalVariable(name: "heap", arg: 1, scope: !4179, file: !3792, line: 263, type: !3795)
!4184 = !DILocalVariable(name: "bytes", arg: 2, scope: !4179, file: !3792, line: 263, type: !252)
!4185 = !DILocalVariable(name: "h", scope: !4179, file: !3792, line: 265, type: !2414)
!4186 = !DILocalVariable(name: "mem", scope: !4179, file: !3792, line: 266, type: !102)
!4187 = !DILocalVariable(name: "chunk_sz", scope: !4179, file: !3792, line: 272, type: !3918)
!4188 = !DILocalVariable(name: "c", scope: !4179, file: !3792, line: 273, type: !2419)
!4189 = !DILocation(line: 0, scope: !4179)
!4190 = !DILocation(line: 265, column: 27, scope: !4179)
!4191 = !DILocation(line: 268, column: 12, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4179, file: !3792, line: 268, column: 6)
!4193 = !DILocation(line: 268, column: 18, scope: !4192)
!4194 = !DILocation(line: 268, column: 21, scope: !4192)
!4195 = !DILocation(line: 268, column: 6, scope: !4179)
!4196 = !DILocation(line: 272, column: 23, scope: !4179)
!4197 = !DILocation(line: 273, column: 16, scope: !4179)
!4198 = !DILocation(line: 274, column: 8, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4179, file: !3792, line: 274, column: 6)
!4200 = !DILocation(line: 274, column: 6, scope: !4179)
!4201 = !DILocation(line: 279, column: 6, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4179, file: !3792, line: 279, column: 6)
!4203 = !DILocation(line: 279, column: 23, scope: !4202)
!4204 = !DILocation(line: 279, column: 6, scope: !4179)
!4205 = !DILocation(line: 280, column: 24, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4202, file: !3792, line: 279, column: 35)
!4207 = !DILocation(line: 280, column: 3, scope: !4206)
!4208 = !DILocation(line: 281, column: 3, scope: !4206)
!4209 = !DILocation(line: 282, column: 2, scope: !4206)
!4210 = !DILocation(line: 284, column: 2, scope: !4179)
!4211 = !DILocation(line: 286, column: 8, scope: !4179)
!4212 = !DILocation(line: 298, column: 2, scope: !4179)
!4213 = !DILocation(line: 299, column: 1, scope: !4179)
!4214 = distinct !DISubprogram(name: "size_too_big", scope: !2401, file: !2401, line: 256, type: !4215, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4217)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{!136, !2414, !252}
!4217 = !{!4218, !4219}
!4218 = !DILocalVariable(name: "h", arg: 1, scope: !4214, file: !2401, line: 256, type: !2414)
!4219 = !DILocalVariable(name: "bytes", arg: 2, scope: !4214, file: !2401, line: 256, type: !252)
!4220 = !DILocation(line: 0, scope: !4214)
!4221 = !DILocation(line: 262, column: 16, scope: !4214)
!4222 = !DILocation(line: 262, column: 36, scope: !4214)
!4223 = !DILocation(line: 262, column: 30, scope: !4214)
!4224 = !DILocation(line: 262, column: 2, scope: !4214)
!4225 = distinct !DISubprogram(name: "alloc_chunk", scope: !3792, file: !3792, line: 211, type: !4226, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4228)
!4226 = !DISubroutineType(types: !4227)
!4227 = !{!2419, !2414, !3918}
!4228 = !{!4229, !4230, !4231, !4232, !4233, !4236, !4237, !4239, !4240, !4243}
!4229 = !DILocalVariable(name: "h", arg: 1, scope: !4225, file: !3792, line: 211, type: !2414)
!4230 = !DILocalVariable(name: "sz", arg: 2, scope: !4225, file: !3792, line: 211, type: !3918)
!4231 = !DILocalVariable(name: "bi", scope: !4225, file: !3792, line: 213, type: !107)
!4232 = !DILocalVariable(name: "b", scope: !4225, file: !3792, line: 214, type: !3981)
!4233 = !DILocalVariable(name: "first", scope: !4234, file: !3792, line: 233, type: !2419)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !3792, line: 232, column: 15)
!4235 = distinct !DILexicalBlock(scope: !4225, file: !3792, line: 232, column: 6)
!4236 = !DILocalVariable(name: "i", scope: !4234, file: !3792, line: 234, type: !107)
!4237 = !DILocalVariable(name: "c", scope: !4238, file: !3792, line: 236, type: !2419)
!4238 = distinct !DILexicalBlock(scope: !4234, file: !3792, line: 235, column: 6)
!4239 = !DILocalVariable(name: "bmask", scope: !4225, file: !3792, line: 249, type: !162)
!4240 = !DILocalVariable(name: "minbucket", scope: !4241, file: !3792, line: 252, type: !107)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !3792, line: 251, column: 19)
!4242 = distinct !DILexicalBlock(scope: !4225, file: !3792, line: 251, column: 6)
!4243 = !DILocalVariable(name: "c", scope: !4241, file: !3792, line: 253, type: !2419)
!4244 = !DILocation(line: 0, scope: !4225)
!4245 = !DILocation(line: 213, column: 11, scope: !4225)
!4246 = !DILocation(line: 232, column: 9, scope: !4235)
!4247 = !DILocation(line: 232, column: 6, scope: !4235)
!4248 = !DILocation(line: 232, column: 6, scope: !4225)
!4249 = !DILocation(line: 236, column: 21, scope: !4238)
!4250 = !DILocation(line: 0, scope: !4234)
!4251 = !DILocation(line: 0, scope: !4238)
!4252 = !DILocation(line: 237, column: 8, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4238, file: !3792, line: 237, column: 8)
!4254 = !DILocation(line: 237, column: 25, scope: !4253)
!4255 = !DILocation(line: 237, column: 8, scope: !4238)
!4256 = !DILocation(line: 238, column: 5, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !3792, line: 237, column: 32)
!4258 = !DILocation(line: 241, column: 14, scope: !4238)
!4259 = !DILocation(line: 241, column: 12, scope: !4238)
!4260 = !DILocation(line: 243, column: 12, scope: !4234)
!4261 = !DILocation(line: 243, column: 16, scope: !4234)
!4262 = distinct !{!4262, !4263, !4264}
!4263 = !DILocation(line: 235, column: 3, scope: !4234)
!4264 = !DILocation(line: 243, column: 35, scope: !4234)
!4265 = !DILocation(line: 249, column: 22, scope: !4225)
!4266 = !DILocation(line: 249, column: 39, scope: !4225)
!4267 = !DILocation(line: 249, column: 36, scope: !4225)
!4268 = !DILocation(line: 251, column: 12, scope: !4242)
!4269 = !DILocation(line: 251, column: 6, scope: !4225)
!4270 = !DILocation(line: 252, column: 19, scope: !4241)
!4271 = !DILocation(line: 0, scope: !4241)
!4272 = !DILocation(line: 253, column: 39, scope: !4241)
!4273 = !DILocation(line: 255, column: 3, scope: !4241)
!4274 = !DILocation(line: 261, column: 1, scope: !4225)
!4275 = distinct !DISubprogram(name: "split_chunks", scope: !3792, file: !3792, line: 109, type: !3911, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4276)
!4276 = !{!4277, !4278, !4279, !4280, !4281, !4282}
!4277 = !DILocalVariable(name: "h", arg: 1, scope: !4275, file: !3792, line: 109, type: !2414)
!4278 = !DILocalVariable(name: "lc", arg: 2, scope: !4275, file: !3792, line: 109, type: !2419)
!4279 = !DILocalVariable(name: "rc", arg: 3, scope: !4275, file: !3792, line: 109, type: !2419)
!4280 = !DILocalVariable(name: "sz0", scope: !4275, file: !3792, line: 114, type: !3918)
!4281 = !DILocalVariable(name: "lsz", scope: !4275, file: !3792, line: 115, type: !3918)
!4282 = !DILocalVariable(name: "rsz", scope: !4275, file: !3792, line: 116, type: !3918)
!4283 = !DILocation(line: 0, scope: !4275)
!4284 = !DILocation(line: 114, column: 18, scope: !4275)
!4285 = !DILocation(line: 115, column: 21, scope: !4275)
!4286 = !DILocation(line: 116, column: 22, scope: !4275)
!4287 = !DILocation(line: 118, column: 2, scope: !4275)
!4288 = !DILocation(line: 119, column: 2, scope: !4275)
!4289 = !DILocation(line: 120, column: 2, scope: !4275)
!4290 = !DILocation(line: 121, column: 25, scope: !4275)
!4291 = !DILocation(line: 121, column: 2, scope: !4275)
!4292 = !DILocation(line: 122, column: 1, scope: !4275)
!4293 = distinct !DISubprogram(name: "chunk_mem", scope: !3792, file: !3792, line: 24, type: !4294, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4296)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!102, !2414, !2419}
!4296 = !{!4297, !4298, !4299, !4300}
!4297 = !DILocalVariable(name: "h", arg: 1, scope: !4293, file: !3792, line: 24, type: !2414)
!4298 = !DILocalVariable(name: "c", arg: 2, scope: !4293, file: !3792, line: 24, type: !2419)
!4299 = !DILocalVariable(name: "buf", scope: !4293, file: !3792, line: 26, type: !2408)
!4300 = !DILocalVariable(name: "ret", scope: !4293, file: !3792, line: 27, type: !182)
!4301 = !DILocation(line: 0, scope: !4293)
!4302 = !DILocation(line: 26, column: 22, scope: !4293)
!4303 = !DILocation(line: 27, column: 38, scope: !4293)
!4304 = !DILocation(line: 31, column: 2, scope: !4293)
!4305 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3792, file: !3792, line: 301, type: !4306, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4308)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!102, !3795, !252, !252}
!4308 = !{!4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320}
!4309 = !DILocalVariable(name: "heap", arg: 1, scope: !4305, file: !3792, line: 301, type: !3795)
!4310 = !DILocalVariable(name: "align", arg: 2, scope: !4305, file: !3792, line: 301, type: !252)
!4311 = !DILocalVariable(name: "bytes", arg: 3, scope: !4305, file: !3792, line: 301, type: !252)
!4312 = !DILocalVariable(name: "h", scope: !4305, file: !3792, line: 303, type: !2414)
!4313 = !DILocalVariable(name: "gap", scope: !4305, file: !3792, line: 304, type: !252)
!4314 = !DILocalVariable(name: "rew", scope: !4305, file: !3792, line: 304, type: !252)
!4315 = !DILocalVariable(name: "padded_sz", scope: !4305, file: !3792, line: 335, type: !3918)
!4316 = !DILocalVariable(name: "c0", scope: !4305, file: !3792, line: 336, type: !2419)
!4317 = !DILocalVariable(name: "mem", scope: !4305, file: !3792, line: 341, type: !182)
!4318 = !DILocalVariable(name: "end", scope: !4305, file: !3792, line: 345, type: !2408)
!4319 = !DILocalVariable(name: "c", scope: !4305, file: !3792, line: 348, type: !2419)
!4320 = !DILocalVariable(name: "c_end", scope: !4305, file: !3792, line: 349, type: !2419)
!4321 = !DILocation(line: 0, scope: !4305)
!4322 = !DILocation(line: 303, column: 27, scope: !4305)
!4323 = !DILocation(line: 313, column: 16, scope: !4305)
!4324 = !DILocation(line: 313, column: 14, scope: !4305)
!4325 = !DILocation(line: 314, column: 12, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4305, file: !3792, line: 314, column: 6)
!4327 = !DILocation(line: 314, column: 6, scope: !4305)
!4328 = !DILocation(line: 315, column: 9, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4326, file: !3792, line: 314, column: 20)
!4330 = !DILocation(line: 316, column: 9, scope: !4329)
!4331 = !DILocation(line: 318, column: 13, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !3792, line: 318, column: 7)
!4333 = distinct !DILexicalBlock(scope: !4326, file: !3792, line: 317, column: 9)
!4334 = !DILocation(line: 318, column: 7, scope: !4333)
!4335 = !DILocation(line: 319, column: 11, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4332, file: !3792, line: 318, column: 39)
!4337 = !DILocation(line: 319, column: 4, scope: !4336)
!4338 = !DILocation(line: 0, scope: !4326)
!4339 = !DILocation(line: 326, column: 12, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4305, file: !3792, line: 326, column: 6)
!4341 = !DILocation(line: 326, column: 17, scope: !4340)
!4342 = !DILocation(line: 326, column: 20, scope: !4340)
!4343 = !DILocation(line: 326, column: 6, scope: !4305)
!4344 = !DILocation(line: 335, column: 50, scope: !4305)
!4345 = !DILocation(line: 335, column: 58, scope: !4305)
!4346 = !DILocation(line: 335, column: 24, scope: !4305)
!4347 = !DILocation(line: 336, column: 17, scope: !4305)
!4348 = !DILocation(line: 338, column: 9, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4305, file: !3792, line: 338, column: 6)
!4350 = !DILocation(line: 338, column: 6, scope: !4305)
!4351 = !DILocation(line: 341, column: 17, scope: !4305)
!4352 = !DILocation(line: 344, column: 20, scope: !4305)
!4353 = !DILocation(line: 344, column: 8, scope: !4305)
!4354 = !DILocation(line: 344, column: 47, scope: !4305)
!4355 = !DILocation(line: 345, column: 39, scope: !4305)
!4356 = !DILocation(line: 348, column: 16, scope: !4305)
!4357 = !DILocation(line: 349, column: 26, scope: !4305)
!4358 = !DILocation(line: 349, column: 24, scope: !4305)
!4359 = !DILocation(line: 353, column: 8, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4305, file: !3792, line: 353, column: 6)
!4361 = !DILocation(line: 353, column: 6, scope: !4305)
!4362 = !DILocation(line: 354, column: 3, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4360, file: !3792, line: 353, column: 14)
!4364 = !DILocation(line: 355, column: 3, scope: !4363)
!4365 = !DILocation(line: 356, column: 2, scope: !4363)
!4366 = !DILocation(line: 359, column: 6, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4305, file: !3792, line: 359, column: 6)
!4368 = !DILocation(line: 359, column: 24, scope: !4367)
!4369 = !DILocation(line: 359, column: 6, scope: !4305)
!4370 = !DILocation(line: 360, column: 3, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4367, file: !3792, line: 359, column: 33)
!4372 = !DILocation(line: 361, column: 3, scope: !4371)
!4373 = !DILocation(line: 362, column: 2, scope: !4371)
!4374 = !DILocation(line: 364, column: 2, scope: !4305)
!4375 = !DILocation(line: 377, column: 1, scope: !4305)
!4376 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3792, file: !3792, line: 379, type: !4377, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4379)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{!102, !3795, !102, !252, !252}
!4379 = !{!4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4395, !4396}
!4380 = !DILocalVariable(name: "heap", arg: 1, scope: !4376, file: !3792, line: 379, type: !3795)
!4381 = !DILocalVariable(name: "ptr", arg: 2, scope: !4376, file: !3792, line: 379, type: !102)
!4382 = !DILocalVariable(name: "align", arg: 3, scope: !4376, file: !3792, line: 380, type: !252)
!4383 = !DILocalVariable(name: "bytes", arg: 4, scope: !4376, file: !3792, line: 380, type: !252)
!4384 = !DILocalVariable(name: "h", scope: !4376, file: !3792, line: 382, type: !2414)
!4385 = !DILocalVariable(name: "c", scope: !4376, file: !3792, line: 399, type: !2419)
!4386 = !DILocalVariable(name: "rc", scope: !4376, file: !3792, line: 400, type: !2419)
!4387 = !DILocalVariable(name: "align_gap", scope: !4376, file: !3792, line: 401, type: !252)
!4388 = !DILocalVariable(name: "chunks_need", scope: !4376, file: !3792, line: 402, type: !3918)
!4389 = !DILocalVariable(name: "split_size", scope: !4390, file: !3792, line: 435, type: !3918)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !3792, line: 433, column: 61)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !3792, line: 432, column: 13)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !3792, line: 409, column: 13)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !3792, line: 406, column: 13)
!4394 = distinct !DILexicalBlock(scope: !4376, file: !3792, line: 404, column: 6)
!4395 = !DILocalVariable(name: "ptr2", scope: !4376, file: !3792, line: 474, type: !102)
!4396 = !DILocalVariable(name: "prev_size", scope: !4397, file: !3792, line: 477, type: !252)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !3792, line: 476, column: 20)
!4398 = distinct !DILexicalBlock(scope: !4376, file: !3792, line: 476, column: 6)
!4399 = !DILocation(line: 0, scope: !4376)
!4400 = !DILocation(line: 382, column: 27, scope: !4376)
!4401 = !DILocation(line: 385, column: 10, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4376, file: !3792, line: 385, column: 6)
!4403 = !DILocation(line: 385, column: 6, scope: !4376)
!4404 = !DILocation(line: 386, column: 10, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !3792, line: 385, column: 19)
!4406 = !DILocation(line: 386, column: 3, scope: !4405)
!4407 = !DILocation(line: 388, column: 12, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4376, file: !3792, line: 388, column: 6)
!4409 = !DILocation(line: 388, column: 6, scope: !4376)
!4410 = !DILocation(line: 389, column: 3, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4408, file: !3792, line: 388, column: 18)
!4412 = !DILocation(line: 390, column: 3, scope: !4411)
!4413 = !DILocation(line: 395, column: 6, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4376, file: !3792, line: 395, column: 6)
!4415 = !DILocation(line: 395, column: 6, scope: !4376)
!4416 = !DILocation(line: 399, column: 16, scope: !4376)
!4417 = !DILocation(line: 400, column: 17, scope: !4376)
!4418 = !DILocation(line: 401, column: 49, scope: !4376)
!4419 = !DILocation(line: 401, column: 36, scope: !4376)
!4420 = !DILocation(line: 402, column: 52, scope: !4376)
!4421 = !DILocation(line: 402, column: 26, scope: !4376)
!4422 = !DILocation(line: 404, column: 6, scope: !4394)
!4423 = !DILocation(line: 404, column: 12, scope: !4394)
!4424 = !DILocation(line: 404, column: 40, scope: !4394)
!4425 = !DILocation(line: 404, column: 31, scope: !4394)
!4426 = !DILocation(line: 404, column: 6, scope: !4376)
!4427 = !DILocation(line: 406, column: 13, scope: !4393)
!4428 = !DILocation(line: 406, column: 30, scope: !4393)
!4429 = !DILocation(line: 406, column: 13, scope: !4394)
!4430 = !DILocation(line: 409, column: 30, scope: !4392)
!4431 = !DILocation(line: 409, column: 13, scope: !4393)
!4432 = !DILocation(line: 420, column: 24, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4392, file: !3792, line: 409, column: 45)
!4434 = !DILocation(line: 420, column: 3, scope: !4433)
!4435 = !DILocation(line: 421, column: 3, scope: !4433)
!4436 = !DILocation(line: 422, column: 3, scope: !4433)
!4437 = !DILocation(line: 431, column: 3, scope: !4433)
!4438 = !DILocation(line: 432, column: 14, scope: !4391)
!4439 = !DILocation(line: 432, column: 32, scope: !4391)
!4440 = !DILocation(line: 433, column: 26, scope: !4391)
!4441 = !DILocation(line: 433, column: 24, scope: !4391)
!4442 = !DILocation(line: 433, column: 44, scope: !4391)
!4443 = !DILocation(line: 432, column: 13, scope: !4392)
!4444 = !DILocation(line: 435, column: 38, scope: !4390)
!4445 = !DILocation(line: 0, scope: !4390)
!4446 = !DILocation(line: 445, column: 3, scope: !4390)
!4447 = !DILocation(line: 447, column: 20, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4390, file: !3792, line: 447, column: 7)
!4449 = !DILocation(line: 447, column: 18, scope: !4448)
!4450 = !DILocation(line: 447, column: 7, scope: !4390)
!4451 = !DILocation(line: 448, column: 27, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4448, file: !3792, line: 447, column: 39)
!4453 = !DILocation(line: 448, column: 4, scope: !4452)
!4454 = !DILocation(line: 449, column: 4, scope: !4452)
!4455 = !DILocation(line: 450, column: 3, scope: !4452)
!4456 = !DILocation(line: 452, column: 3, scope: !4390)
!4457 = !DILocation(line: 453, column: 3, scope: !4390)
!4458 = !DILocation(line: 474, column: 15, scope: !4376)
!4459 = !DILocation(line: 476, column: 11, scope: !4398)
!4460 = !DILocation(line: 476, column: 6, scope: !4376)
!4461 = !DILocation(line: 477, column: 42, scope: !4397)
!4462 = !DILocation(line: 477, column: 22, scope: !4397)
!4463 = !DILocation(line: 477, column: 60, scope: !4397)
!4464 = !DILocation(line: 0, scope: !4397)
!4465 = !DILocation(line: 479, column: 21, scope: !4397)
!4466 = !DILocation(line: 479, column: 3, scope: !4397)
!4467 = !DILocation(line: 480, column: 3, scope: !4397)
!4468 = !DILocation(line: 481, column: 2, scope: !4397)
!4469 = !DILocation(line: 483, column: 1, scope: !4376)
!4470 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2401, file: !2401, line: 245, type: !4471, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4473)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!252, !2414, !3918}
!4473 = !{!4474, !4475}
!4474 = !DILocalVariable(name: "h", arg: 1, scope: !4470, file: !2401, line: 245, type: !2414)
!4475 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4470, file: !2401, line: 245, type: !3918)
!4476 = !DILocation(line: 0, scope: !4470)
!4477 = !DILocation(line: 247, column: 20, scope: !4470)
!4478 = !DILocation(line: 247, column: 33, scope: !4470)
!4479 = !DILocation(line: 247, column: 2, scope: !4470)
!4480 = distinct !DISubprogram(name: "sys_heap_init", scope: !3792, file: !3792, line: 485, type: !4481, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4483)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{null, !3795, !102, !252}
!4483 = !{!4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493}
!4484 = !DILocalVariable(name: "heap", arg: 1, scope: !4480, file: !3792, line: 485, type: !3795)
!4485 = !DILocalVariable(name: "mem", arg: 2, scope: !4480, file: !3792, line: 485, type: !102)
!4486 = !DILocalVariable(name: "bytes", arg: 3, scope: !4480, file: !3792, line: 485, type: !252)
!4487 = !DILocalVariable(name: "addr", scope: !4480, file: !3792, line: 502, type: !22)
!4488 = !DILocalVariable(name: "end", scope: !4480, file: !3792, line: 503, type: !22)
!4489 = !DILocalVariable(name: "heap_sz", scope: !4480, file: !3792, line: 504, type: !3918)
!4490 = !DILocalVariable(name: "h", scope: !4480, file: !3792, line: 509, type: !2414)
!4491 = !DILocalVariable(name: "nb_buckets", scope: !4480, file: !3792, line: 520, type: !107)
!4492 = !DILocalVariable(name: "chunk0_size", scope: !4480, file: !3792, line: 521, type: !3918)
!4493 = !DILocalVariable(name: "i", scope: !4494, file: !3792, line: 526, type: !107)
!4494 = distinct !DILexicalBlock(scope: !4480, file: !3792, line: 526, column: 2)
!4495 = !DILocation(line: 0, scope: !4480)
!4496 = !DILocation(line: 499, column: 8, scope: !4480)
!4497 = !DILocation(line: 502, column: 19, scope: !4480)
!4498 = !DILocation(line: 503, column: 18, scope: !4480)
!4499 = !DILocation(line: 504, column: 27, scope: !4480)
!4500 = !DILocation(line: 504, column: 35, scope: !4480)
!4501 = !DILocation(line: 509, column: 21, scope: !4480)
!4502 = !DILocation(line: 510, column: 8, scope: !4480)
!4503 = !DILocation(line: 510, column: 13, scope: !4480)
!4504 = !DILocation(line: 511, column: 5, scope: !4480)
!4505 = !DILocation(line: 511, column: 15, scope: !4480)
!4506 = !DILocation(line: 512, column: 5, scope: !4480)
!4507 = !DILocation(line: 512, column: 19, scope: !4480)
!4508 = !DILocation(line: 520, column: 19, scope: !4480)
!4509 = !DILocation(line: 522, column: 21, scope: !4480)
!4510 = !DILocation(line: 521, column: 56, scope: !4480)
!4511 = !DILocation(line: 521, column: 26, scope: !4480)
!4512 = !DILocation(line: 0, scope: !4494)
!4513 = !DILocation(line: 526, column: 20, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4494, file: !3792, line: 526, column: 2)
!4515 = !DILocation(line: 526, column: 2, scope: !4494)
!4516 = !DILocation(line: 531, column: 2, scope: !4480)
!4517 = !DILocation(line: 532, column: 2, scope: !4480)
!4518 = !DILocation(line: 533, column: 2, scope: !4480)
!4519 = !DILocation(line: 536, column: 41, scope: !4480)
!4520 = !DILocation(line: 536, column: 2, scope: !4480)
!4521 = !DILocation(line: 537, column: 2, scope: !4480)
!4522 = !DILocation(line: 540, column: 2, scope: !4480)
!4523 = !DILocation(line: 541, column: 2, scope: !4480)
!4524 = !DILocation(line: 542, column: 2, scope: !4480)
!4525 = !DILocation(line: 544, column: 2, scope: !4480)
!4526 = !DILocation(line: 545, column: 1, scope: !4480)
!4527 = !DILocation(line: 527, column: 17, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4514, file: !3792, line: 526, column: 39)
!4529 = !DILocation(line: 527, column: 22, scope: !4528)
!4530 = !DILocation(line: 526, column: 35, scope: !4514)
!4531 = distinct !{!4531, !4515, !4532}
!4532 = !DILocation(line: 528, column: 2, scope: !4494)
!4533 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2434, file: !2434, line: 1338, type: !4534, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !4542)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!107, !3523, !102, !123, !4536, !162}
!4536 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3489, line: 99, baseType: !4537)
!4537 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3489, line: 40, baseType: !4538)
!4538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2434, baseType: !4539)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4540)
!4540 = !{!4541}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4539, file: !2434, baseType: !102, size: 32)
!4542 = !{!4543, !4544, !4545, !4546, !4547, !4548, !4552, !4553, !4554, !4556, !4561, !4606, !4609, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4621, !4622, !4623, !4627, !4630, !4632, !4635, !4636, !4637, !4642, !4648, !4651, !4655, !4661, !4665, !4668, !4670, !4673}
!4543 = !DILocalVariable(name: "out", arg: 1, scope: !4533, file: !2434, line: 1338, type: !3523)
!4544 = !DILocalVariable(name: "ctx", arg: 2, scope: !4533, file: !2434, line: 1338, type: !102)
!4545 = !DILocalVariable(name: "fp", arg: 3, scope: !4533, file: !2434, line: 1338, type: !123)
!4546 = !DILocalVariable(name: "ap", arg: 4, scope: !4533, file: !2434, line: 1339, type: !4536)
!4547 = !DILocalVariable(name: "flags", arg: 5, scope: !4533, file: !2434, line: 1339, type: !162)
!4548 = !DILocalVariable(name: "buf", scope: !4533, file: !2434, line: 1341, type: !4549)
!4549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 176, elements: !4550)
!4550 = !{!4551}
!4551 = !DISubrange(count: 22)
!4552 = !DILocalVariable(name: "count", scope: !4533, file: !2434, line: 1342, type: !252)
!4553 = !DILocalVariable(name: "sint", scope: !4533, file: !2434, line: 1343, type: !2453)
!4554 = !DILocalVariable(name: "tagged_ap", scope: !4533, file: !2434, line: 1345, type: !4555)
!4555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!4556 = !DILocalVariable(name: "rc", scope: !4557, file: !2434, line: 1377, type: !107)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !2434, line: 1377, column: 4)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2434, line: 1376, column: 19)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1376, column: 7)
!4560 = distinct !DILexicalBlock(scope: !4533, file: !2434, line: 1375, column: 19)
!4561 = !DILocalVariable(name: "state", scope: !4560, file: !2434, line: 1395, type: !4562)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4533, file: !2434, line: 1392, size: 192, elements: !4563)
!4563 = !{!4564, !4574}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4562, file: !2434, line: 1393, baseType: !4565, size: 64)
!4565 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2434, line: 166, size: 64, elements: !4566)
!4566 = !{!4567, !4568, !4569, !4571, !4573}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4565, file: !2434, line: 168, baseType: !2453, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4565, file: !2434, line: 171, baseType: !2456, size: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4565, file: !2434, line: 174, baseType: !4570, size: 64)
!4570 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4565, file: !2434, line: 177, baseType: !4572, size: 64)
!4572 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4565, file: !2434, line: 180, baseType: !102, size: 32)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4562, file: !2434, line: 1394, baseType: !4575, size: 96, offset: 64)
!4575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2434, line: 189, size: 96, elements: !4576)
!4576 = !{!4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4601}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4575, file: !2434, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4575, file: !2434, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4575, file: !2434, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4575, file: !2434, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4575, file: !2434, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4575, file: !2434, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4575, file: !2434, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4575, file: !2434, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4575, file: !2434, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4575, file: !2434, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4575, file: !2434, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4575, file: !2434, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4575, file: !2434, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4575, file: !2434, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4575, file: !2434, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4575, file: !2434, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4575, file: !2434, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4575, file: !2434, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4575, file: !2434, line: 260, baseType: !134, size: 8, offset: 24)
!4596 = !DIDerivedType(tag: DW_TAG_member, scope: !4575, file: !2434, line: 262, baseType: !4597, size: 32, offset: 32)
!4597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4575, file: !2434, line: 262, size: 32, elements: !4598)
!4598 = !{!4599, !4600}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4597, file: !2434, line: 267, baseType: !107, size: 32)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4597, file: !2434, line: 289, baseType: !107, size: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, scope: !4575, file: !2434, line: 292, baseType: !4602, size: 32, offset: 64)
!4602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4575, file: !2434, line: 292, size: 32, elements: !4603)
!4603 = !{!4604, !4605}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4602, file: !2434, line: 297, baseType: !107, size: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4602, file: !2434, line: 306, baseType: !107, size: 32)
!4606 = !DILocalVariable(name: "conv", scope: !4560, file: !2434, line: 1400, type: !4607)
!4607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4608)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 32)
!4609 = !DILocalVariable(name: "value", scope: !4560, file: !2434, line: 1401, type: !4610)
!4610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4611)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 32)
!4612 = !DILocalVariable(name: "sp", scope: !4560, file: !2434, line: 1402, type: !123)
!4613 = !DILocalVariable(name: "width", scope: !4560, file: !2434, line: 1403, type: !107)
!4614 = !DILocalVariable(name: "precision", scope: !4560, file: !2434, line: 1404, type: !107)
!4615 = !DILocalVariable(name: "bps", scope: !4560, file: !2434, line: 1405, type: !123)
!4616 = !DILocalVariable(name: "bpe", scope: !4560, file: !2434, line: 1406, type: !123)
!4617 = !DILocalVariable(name: "sign", scope: !4560, file: !2434, line: 1407, type: !125)
!4618 = !DILocalVariable(name: "arg", scope: !4619, file: !2434, line: 1432, type: !107)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2434, line: 1431, column: 24)
!4620 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1431, column: 7)
!4621 = !DILocalVariable(name: "specifier_cat", scope: !4560, file: !2434, line: 1468, type: !2433)
!4622 = !DILocalVariable(name: "length_mod", scope: !4560, file: !2434, line: 1470, type: !2441)
!4623 = !DILocalVariable(name: "rc", scope: !4624, file: !2434, line: 1575, type: !107)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2434, line: 1575, column: 4)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2434, line: 1574, column: 43)
!4626 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1574, column: 7)
!4627 = !DILocalVariable(name: "rc", scope: !4628, file: !2434, line: 1584, type: !107)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2434, line: 1584, column: 4)
!4629 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1582, column: 28)
!4630 = !DILocalVariable(name: "len", scope: !4631, file: !2434, line: 1589, type: !252)
!4631 = distinct !DILexicalBlock(scope: !4629, file: !2434, line: 1586, column: 13)
!4632 = !DILocalVariable(name: "len", scope: !4633, file: !2434, line: 1641, type: !252)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2434, line: 1640, column: 24)
!4634 = distinct !DILexicalBlock(scope: !4629, file: !2434, line: 1640, column: 8)
!4635 = !DILocalVariable(name: "nj_len", scope: !4560, file: !2434, line: 1722, type: !252)
!4636 = !DILocalVariable(name: "pad_len", scope: !4560, file: !2434, line: 1723, type: !107)
!4637 = !DILocalVariable(name: "pad", scope: !4638, file: !2434, line: 1751, type: !125)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !2434, line: 1750, column: 26)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !2434, line: 1750, column: 8)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !2434, line: 1747, column: 18)
!4641 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1747, column: 7)
!4642 = !DILocalVariable(name: "rc", scope: !4643, file: !2434, line: 1758, type: !107)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2434, line: 1758, column: 7)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !2434, line: 1757, column: 21)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2434, line: 1757, column: 10)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2434, line: 1756, column: 26)
!4647 = distinct !DILexicalBlock(scope: !4638, file: !2434, line: 1756, column: 9)
!4648 = !DILocalVariable(name: "rc", scope: !4649, file: !2434, line: 1765, type: !107)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !2434, line: 1765, column: 6)
!4650 = distinct !DILexicalBlock(scope: !4638, file: !2434, line: 1764, column: 25)
!4651 = !DILocalVariable(name: "rc", scope: !4652, file: !2434, line: 1774, type: !107)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2434, line: 1774, column: 4)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2434, line: 1773, column: 18)
!4654 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1773, column: 7)
!4655 = !DILocalVariable(name: "rc", scope: !4656, file: !2434, line: 1819, type: !107)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !2434, line: 1819, column: 5)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2434, line: 1818, column: 44)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !2434, line: 1818, column: 8)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !2434, line: 1817, column: 10)
!4660 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1777, column: 7)
!4661 = !DILocalVariable(name: "rc", scope: !4662, file: !2434, line: 1823, type: !107)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !2434, line: 1823, column: 5)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !2434, line: 1822, column: 26)
!4664 = distinct !DILexicalBlock(scope: !4659, file: !2434, line: 1822, column: 8)
!4665 = !DILocalVariable(name: "rc", scope: !4666, file: !2434, line: 1828, type: !107)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !2434, line: 1828, column: 5)
!4667 = distinct !DILexicalBlock(scope: !4659, file: !2434, line: 1827, column: 26)
!4668 = !DILocalVariable(name: "rc", scope: !4669, file: !2434, line: 1831, type: !107)
!4669 = distinct !DILexicalBlock(scope: !4659, file: !2434, line: 1831, column: 4)
!4670 = !DILocalVariable(name: "rc", scope: !4671, file: !2434, line: 1836, type: !107)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !2434, line: 1836, column: 4)
!4672 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1835, column: 21)
!4673 = !DILabel(scope: !4629, name: "prec_int_pad0", file: !2434, line: 1634)
!4674 = !DILocation(line: 0, scope: !4533)
!4675 = !DILocation(line: 1341, column: 2, scope: !4533)
!4676 = !DILocation(line: 1341, column: 7, scope: !4533)
!4677 = !DILocation(line: 1375, column: 2, scope: !4533)
!4678 = !DILocation(line: 1342, column: 9, scope: !4533)
!4679 = !DILocation(line: 1375, column: 9, scope: !4533)
!4680 = !DILocation(line: 1377, column: 4, scope: !4557)
!4681 = !DILocation(line: 0, scope: !4557)
!4682 = !DILocation(line: 1377, column: 4, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4557, file: !2434, line: 1377, column: 4)
!4684 = distinct !{!4684, !4677, !4685}
!4685 = !DILocation(line: 1839, column: 2, scope: !4533)
!4686 = !DILocation(line: 1392, column: 3, scope: !4560)
!4687 = !DILocation(line: 1395, column: 5, scope: !4560)
!4688 = !DILocation(line: 0, scope: !4560)
!4689 = !DILocation(line: 1409, column: 8, scope: !4560)
!4690 = !DILocation(line: 1414, column: 13, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1414, column: 7)
!4692 = !DILocation(line: 1414, column: 7, scope: !4560)
!4693 = !DILocation(line: 1415, column: 12, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4691, file: !2434, line: 1414, column: 25)
!4695 = !DILocation(line: 1417, column: 14, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4694, file: !2434, line: 1417, column: 8)
!4697 = !DILocation(line: 1417, column: 8, scope: !4694)
!4698 = !DILocation(line: 1418, column: 21, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4696, file: !2434, line: 1417, column: 19)
!4700 = !DILocation(line: 1419, column: 13, scope: !4699)
!4701 = !DILocation(line: 1420, column: 4, scope: !4699)
!4702 = !DILocation(line: 1421, column: 20, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4691, file: !2434, line: 1421, column: 14)
!4704 = !DILocation(line: 1421, column: 14, scope: !4691)
!4705 = !DILocation(line: 1431, column: 13, scope: !4620)
!4706 = !DILocation(line: 1431, column: 7, scope: !4560)
!4707 = !DILocation(line: 1432, column: 14, scope: !4619)
!4708 = !DILocation(line: 0, scope: !4619)
!4709 = !DILocation(line: 1434, column: 12, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4619, file: !2434, line: 1434, column: 8)
!4711 = !DILocation(line: 1434, column: 8, scope: !4619)
!4712 = !DILocation(line: 1435, column: 24, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4710, file: !2434, line: 1434, column: 17)
!4714 = !DILocation(line: 1436, column: 4, scope: !4713)
!4715 = !DILocation(line: 1439, column: 20, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4620, file: !2434, line: 1439, column: 14)
!4717 = !DILocation(line: 1439, column: 14, scope: !4620)
!4718 = !DILocation(line: 1469, column: 37, scope: !4560)
!4719 = !DILocation(line: 1448, column: 20, scope: !4560)
!4720 = !DILocation(line: 1449, column: 22, scope: !4560)
!4721 = !DILocation(line: 1471, column: 34, scope: !4560)
!4722 = !DILocation(line: 1478, column: 7, scope: !4560)
!4723 = !DILocation(line: 1479, column: 4, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !2434, line: 1478, column: 40)
!4725 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1478, column: 7)
!4726 = !DILocation(line: 1484, column: 19, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4724, file: !2434, line: 1479, column: 24)
!4728 = !DILocation(line: 1484, column: 17, scope: !4727)
!4729 = !DILocation(line: 1485, column: 5, scope: !4727)
!4730 = !DILocation(line: 1492, column: 20, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2434, line: 1491, column: 12)
!4732 = distinct !DILexicalBlock(scope: !4727, file: !2434, line: 1487, column: 9)
!4733 = !DILocation(line: 1492, column: 18, scope: !4731)
!4734 = !DILocation(line: 1494, column: 5, scope: !4727)
!4735 = !DILocation(line: 1497, column: 23, scope: !4727)
!4736 = !DILocation(line: 1496, column: 17, scope: !4727)
!4737 = !DILocation(line: 1498, column: 5, scope: !4727)
!4738 = !DILocation(line: 1501, column: 23, scope: !4727)
!4739 = !DILocation(line: 1500, column: 17, scope: !4727)
!4740 = !DILocation(line: 1502, column: 5, scope: !4727)
!4741 = !DILocation(line: 1513, column: 23, scope: !4727)
!4742 = !DILocation(line: 1513, column: 6, scope: !4727)
!4743 = !DILocation(line: 1512, column: 17, scope: !4727)
!4744 = !DILocation(line: 1514, column: 5, scope: !4727)
!4745 = !DILocation(line: 0, scope: !4727)
!4746 = !DILocation(line: 1516, column: 8, scope: !4724)
!4747 = !DILocation(line: 1517, column: 19, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2434, line: 1516, column: 33)
!4749 = distinct !DILexicalBlock(scope: !4724, file: !2434, line: 1516, column: 8)
!4750 = !DILocation(line: 1517, column: 17, scope: !4748)
!4751 = !DILocation(line: 1518, column: 4, scope: !4748)
!4752 = !DILocation(line: 1519, column: 19, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !2434, line: 1518, column: 39)
!4754 = distinct !DILexicalBlock(scope: !4749, file: !2434, line: 1518, column: 15)
!4755 = !DILocation(line: 1519, column: 17, scope: !4753)
!4756 = !DILocation(line: 1520, column: 4, scope: !4753)
!4757 = !DILocation(line: 1522, column: 4, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !2434, line: 1521, column: 47)
!4759 = distinct !DILexicalBlock(scope: !4725, file: !2434, line: 1521, column: 14)
!4760 = !DILocation(line: 1527, column: 19, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4758, file: !2434, line: 1522, column: 24)
!4762 = !DILocation(line: 1527, column: 17, scope: !4761)
!4763 = !DILocation(line: 1528, column: 5, scope: !4761)
!4764 = !DILocation(line: 0, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4761, file: !2434, line: 1530, column: 9)
!4766 = !DILocation(line: 1540, column: 23, scope: !4761)
!4767 = !DILocation(line: 1539, column: 17, scope: !4761)
!4768 = !DILocation(line: 1542, column: 5, scope: !4761)
!4769 = !DILocation(line: 1545, column: 23, scope: !4761)
!4770 = !DILocation(line: 1544, column: 17, scope: !4761)
!4771 = !DILocation(line: 1547, column: 5, scope: !4761)
!4772 = !DILocation(line: 1551, column: 23, scope: !4761)
!4773 = !DILocation(line: 1551, column: 6, scope: !4761)
!4774 = !DILocation(line: 1550, column: 17, scope: !4761)
!4775 = !DILocation(line: 1552, column: 5, scope: !4761)
!4776 = !DILocation(line: 0, scope: !4761)
!4777 = !DILocation(line: 1554, column: 8, scope: !4758)
!4778 = !DILocation(line: 1555, column: 19, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !2434, line: 1554, column: 33)
!4780 = distinct !DILexicalBlock(scope: !4758, file: !2434, line: 1554, column: 8)
!4781 = !DILocation(line: 1555, column: 17, scope: !4779)
!4782 = !DILocation(line: 1556, column: 4, scope: !4779)
!4783 = !DILocation(line: 1557, column: 19, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !2434, line: 1556, column: 39)
!4785 = distinct !DILexicalBlock(scope: !4780, file: !2434, line: 1556, column: 15)
!4786 = !DILocation(line: 1557, column: 17, scope: !4784)
!4787 = !DILocation(line: 1558, column: 4, scope: !4784)
!4788 = !DILocation(line: 0, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !2434, line: 1560, column: 8)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !2434, line: 1559, column: 45)
!4791 = distinct !DILexicalBlock(scope: !4759, file: !2434, line: 1559, column: 14)
!4792 = !DILocation(line: 1566, column: 17, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !2434, line: 1565, column: 46)
!4794 = distinct !DILexicalBlock(scope: !4791, file: !2434, line: 1565, column: 14)
!4795 = !DILocation(line: 1566, column: 15, scope: !4793)
!4796 = !DILocation(line: 1567, column: 3, scope: !4793)
!4797 = !DILocation(line: 1574, column: 21, scope: !4626)
!4798 = !DILocation(line: 1575, column: 4, scope: !4624)
!4799 = !DILocation(line: 0, scope: !4624)
!4800 = !DILocation(line: 1575, column: 4, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4624, file: !2434, line: 1575, column: 4)
!4802 = !DILocation(line: 1582, column: 17, scope: !4560)
!4803 = !DILocation(line: 1582, column: 3, scope: !4560)
!4804 = !DILocation(line: 1584, column: 4, scope: !4628)
!4805 = !DILocation(line: 0, scope: !4628)
!4806 = !DILocation(line: 1584, column: 4, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4628, file: !2434, line: 1584, column: 4)
!4808 = !DILocation(line: 1587, column: 31, scope: !4631)
!4809 = !DILocation(line: 1591, column: 18, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4631, file: !2434, line: 1591, column: 8)
!4811 = !DILocation(line: 1591, column: 8, scope: !4631)
!4812 = !DILocation(line: 1592, column: 11, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4810, file: !2434, line: 1591, column: 24)
!4814 = !DILocation(line: 0, scope: !4631)
!4815 = !DILocation(line: 1593, column: 4, scope: !4813)
!4816 = !DILocation(line: 1594, column: 11, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4810, file: !2434, line: 1593, column: 11)
!4818 = !DILocation(line: 1604, column: 51, scope: !4629)
!4819 = !DILocation(line: 1604, column: 13, scope: !4629)
!4820 = !DILocation(line: 1604, column: 11, scope: !4629)
!4821 = !DILocation(line: 1606, column: 4, scope: !4629)
!4822 = !DILocation(line: 1609, column: 14, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4629, file: !2434, line: 1609, column: 8)
!4824 = !DILocation(line: 1609, column: 8, scope: !4629)
!4825 = !DILocation(line: 1619, column: 18, scope: !4629)
!4826 = !DILocation(line: 1620, column: 13, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4629, file: !2434, line: 1620, column: 8)
!4828 = !DILocation(line: 1620, column: 8, scope: !4629)
!4829 = !DILocation(line: 1622, column: 36, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !2434, line: 1620, column: 18)
!4831 = !DILocation(line: 1622, column: 17, scope: !4830)
!4832 = !DILocation(line: 1623, column: 4, scope: !4830)
!4833 = !DILocation(line: 1632, column: 29, scope: !4629)
!4834 = !DILocation(line: 1632, column: 10, scope: !4629)
!4835 = !DILocation(line: 1632, column: 4, scope: !4629)
!4836 = !DILocation(line: 1407, column: 8, scope: !4560)
!4837 = !DILocation(line: 0, scope: !4629)
!4838 = !DILocation(line: 1634, column: 3, scope: !4629)
!4839 = !DILocation(line: 1640, column: 18, scope: !4634)
!4840 = !DILocation(line: 1640, column: 8, scope: !4629)
!4841 = !DILocation(line: 1729, column: 13, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1729, column: 7)
!4843 = !DILocation(line: 1641, column: 22, scope: !4633)
!4844 = !DILocation(line: 0, scope: !4633)
!4845 = !DILocation(line: 1646, column: 21, scope: !4633)
!4846 = !DILocation(line: 1649, column: 13, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4633, file: !2434, line: 1649, column: 9)
!4848 = !DILocation(line: 1649, column: 9, scope: !4633)
!4849 = !DILocation(line: 1650, column: 35, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4847, file: !2434, line: 1649, column: 34)
!4851 = !DILocation(line: 1650, column: 23, scope: !4850)
!4852 = !DILocation(line: 1651, column: 5, scope: !4850)
!4853 = !DILocation(line: 1660, column: 15, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4629, file: !2434, line: 1660, column: 8)
!4855 = !DILocation(line: 1660, column: 19, scope: !4854)
!4856 = !DILocation(line: 1660, column: 8, scope: !4629)
!4857 = !DILocation(line: 1661, column: 23, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4854, file: !2434, line: 1660, column: 28)
!4859 = !DILocation(line: 1661, column: 11, scope: !4858)
!4860 = !DILocation(line: 1665, column: 22, scope: !4858)
!4861 = !DILocation(line: 1666, column: 21, scope: !4858)
!4862 = !DILocation(line: 1668, column: 5, scope: !4858)
!4863 = !DILocation(line: 1677, column: 30, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !2434, line: 1676, column: 49)
!4865 = distinct !DILexicalBlock(scope: !4629, file: !2434, line: 1676, column: 8)
!4866 = !DILocation(line: 1677, column: 5, scope: !4864)
!4867 = !DILocation(line: 1680, column: 4, scope: !4629)
!4868 = !DILocation(line: 0, scope: !4810)
!4869 = !DILocation(line: 1597, column: 14, scope: !4631)
!4870 = !DILocation(line: 1699, column: 11, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1699, column: 7)
!4872 = !DILocation(line: 1699, column: 7, scope: !4560)
!4873 = !DILocation(line: 1725, column: 7, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1725, column: 7)
!4875 = !DILocation(line: 1725, column: 12, scope: !4874)
!4876 = !DILocation(line: 1747, column: 13, scope: !4641)
!4877 = !DILocation(line: 1747, column: 7, scope: !4560)
!4878 = !DILocation(line: 1722, column: 24, scope: !4560)
!4879 = !DILocation(line: 1725, column: 7, scope: !4560)
!4880 = !DILocation(line: 1729, column: 7, scope: !4560)
!4881 = !DILocation(line: 1736, column: 13, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4560, file: !2434, line: 1736, column: 7)
!4883 = !DILocation(line: 1735, column: 19, scope: !4560)
!4884 = !DILocation(line: 1736, column: 7, scope: !4560)
!4885 = !DILocation(line: 1748, column: 10, scope: !4640)
!4886 = !DILocation(line: 1750, column: 15, scope: !4639)
!4887 = !DILocation(line: 1750, column: 8, scope: !4640)
!4888 = !DILocation(line: 0, scope: !4638)
!4889 = !DILocation(line: 1756, column: 15, scope: !4647)
!4890 = !DILocation(line: 1756, column: 9, scope: !4638)
!4891 = !DILocation(line: 1758, column: 7, scope: !4643)
!4892 = !DILocation(line: 0, scope: !4643)
!4893 = !DILocation(line: 1758, column: 7, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4643, file: !2434, line: 1758, column: 7)
!4895 = !DILocation(line: 1764, column: 5, scope: !4638)
!4896 = !DILocation(line: 0, scope: !4640)
!4897 = !DILocation(line: 1764, column: 20, scope: !4638)
!4898 = !DILocation(line: 1764, column: 17, scope: !4638)
!4899 = !DILocation(line: 1765, column: 6, scope: !4649)
!4900 = !DILocation(line: 0, scope: !4649)
!4901 = !DILocation(line: 1765, column: 6, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4649, file: !2434, line: 1765, column: 6)
!4903 = distinct !{!4903, !4895, !4904}
!4904 = !DILocation(line: 1766, column: 5, scope: !4638)
!4905 = !DILocation(line: 1773, column: 12, scope: !4654)
!4906 = !DILocation(line: 1773, column: 7, scope: !4560)
!4907 = !DILocation(line: 1773, column: 7, scope: !4654)
!4908 = !DILocation(line: 1774, column: 4, scope: !4652)
!4909 = !DILocation(line: 0, scope: !4652)
!4910 = !DILocation(line: 1774, column: 4, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4652, file: !2434, line: 1774, column: 4)
!4912 = !DILocation(line: 1818, column: 8, scope: !4658)
!4913 = !DILocation(line: 1818, column: 27, scope: !4658)
!4914 = !DILocation(line: 1818, column: 25, scope: !4658)
!4915 = !DILocation(line: 1818, column: 8, scope: !4659)
!4916 = !DILocation(line: 1819, column: 5, scope: !4656)
!4917 = !DILocation(line: 0, scope: !4656)
!4918 = !DILocation(line: 1819, column: 5, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4656, file: !2434, line: 1819, column: 5)
!4920 = !DILocation(line: 1822, column: 14, scope: !4664)
!4921 = !DILocation(line: 1822, column: 8, scope: !4659)
!4922 = !DILocation(line: 1823, column: 5, scope: !4662)
!4923 = !DILocation(line: 0, scope: !4662)
!4924 = !DILocation(line: 1823, column: 5, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4662, file: !2434, line: 1823, column: 5)
!4926 = !DILocation(line: 1826, column: 20, scope: !4659)
!4927 = !DILocation(line: 1827, column: 4, scope: !4659)
!4928 = !DILocation(line: 0, scope: !4659)
!4929 = !DILocation(line: 1827, column: 21, scope: !4659)
!4930 = !DILocation(line: 1827, column: 18, scope: !4659)
!4931 = !DILocation(line: 1828, column: 5, scope: !4666)
!4932 = !DILocation(line: 0, scope: !4666)
!4933 = !DILocation(line: 1828, column: 5, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4666, file: !2434, line: 1828, column: 5)
!4935 = distinct !{!4935, !4927, !4936}
!4936 = !DILocation(line: 1829, column: 4, scope: !4659)
!4937 = !DILocation(line: 1831, column: 4, scope: !4669)
!4938 = !DILocation(line: 0, scope: !4669)
!4939 = !DILocation(line: 1831, column: 4, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4669, file: !2434, line: 1831, column: 4)
!4941 = !DILocation(line: 1835, column: 16, scope: !4560)
!4942 = !DILocation(line: 1835, column: 3, scope: !4560)
!4943 = !DILocation(line: 1836, column: 4, scope: !4671)
!4944 = !DILocation(line: 0, scope: !4671)
!4945 = !DILocation(line: 1836, column: 4, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4671, file: !2434, line: 1836, column: 4)
!4947 = !DILocation(line: 1837, column: 4, scope: !4672)
!4948 = distinct !{!4948, !4942, !4949}
!4949 = !DILocation(line: 1838, column: 3, scope: !4560)
!4950 = !DILocation(line: 1844, column: 1, scope: !4533)
!4951 = distinct !DISubprogram(name: "extract_conversion", scope: !2434, file: !2434, line: 642, type: !4952, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !4954)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{!123, !4608, !123}
!4954 = !{!4955, !4956}
!4955 = !DILocalVariable(name: "conv", arg: 1, scope: !4951, file: !2434, line: 642, type: !4608)
!4956 = !DILocalVariable(name: "sp", arg: 2, scope: !4951, file: !2434, line: 643, type: !123)
!4957 = !DILocation(line: 0, scope: !4951)
!4958 = !DILocation(line: 645, column: 10, scope: !4951)
!4959 = !DILocation(line: 653, column: 2, scope: !4951)
!4960 = !DILocation(line: 654, column: 6, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4951, file: !2434, line: 654, column: 6)
!4962 = !DILocation(line: 654, column: 10, scope: !4961)
!4963 = !DILocation(line: 654, column: 6, scope: !4951)
!4964 = !DILocation(line: 655, column: 24, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4961, file: !2434, line: 654, column: 18)
!4966 = !DILocation(line: 655, column: 19, scope: !4965)
!4967 = !DILocation(line: 656, column: 3, scope: !4965)
!4968 = !DILocation(line: 659, column: 7, scope: !4951)
!4969 = !DILocation(line: 660, column: 7, scope: !4951)
!4970 = !DILocation(line: 661, column: 7, scope: !4951)
!4971 = !DILocation(line: 662, column: 7, scope: !4951)
!4972 = !DILocation(line: 663, column: 7, scope: !4951)
!4973 = !DILocation(line: 665, column: 2, scope: !4951)
!4974 = !DILocation(line: 666, column: 1, scope: !4951)
!4975 = distinct !DISubprogram(name: "outs", scope: !2434, file: !2434, line: 1319, type: !4976, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !4978)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!107, !3523, !102, !123, !123}
!4978 = !{!4979, !4980, !4981, !4982, !4983, !4984}
!4979 = !DILocalVariable(name: "out", arg: 1, scope: !4975, file: !2434, line: 1319, type: !3523)
!4980 = !DILocalVariable(name: "ctx", arg: 2, scope: !4975, file: !2434, line: 1320, type: !102)
!4981 = !DILocalVariable(name: "sp", arg: 3, scope: !4975, file: !2434, line: 1321, type: !123)
!4982 = !DILocalVariable(name: "ep", arg: 4, scope: !4975, file: !2434, line: 1322, type: !123)
!4983 = !DILocalVariable(name: "count", scope: !4975, file: !2434, line: 1324, type: !252)
!4984 = !DILocalVariable(name: "rc", scope: !4985, file: !2434, line: 1327, type: !107)
!4985 = distinct !DILexicalBlock(scope: !4975, file: !2434, line: 1326, column: 45)
!4986 = !DILocation(line: 0, scope: !4975)
!4987 = !DILocation(line: 1326, column: 2, scope: !4975)
!4988 = !DILocation(line: 1324, column: 9, scope: !4975)
!4989 = !DILocation(line: 1326, column: 13, scope: !4975)
!4990 = !DILocation(line: 1326, column: 19, scope: !4975)
!4991 = !DILocation(line: 1327, column: 21, scope: !4985)
!4992 = !DILocation(line: 1326, column: 36, scope: !4975)
!4993 = !DILocation(line: 1326, column: 39, scope: !4975)
!4994 = !DILocation(line: 1327, column: 24, scope: !4985)
!4995 = !DILocation(line: 1327, column: 16, scope: !4985)
!4996 = !DILocation(line: 1327, column: 12, scope: !4985)
!4997 = !DILocation(line: 0, scope: !4985)
!4998 = !DILocation(line: 1329, column: 10, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4985, file: !2434, line: 1329, column: 7)
!5000 = !DILocation(line: 1329, column: 7, scope: !4985)
!5001 = distinct !{!5001, !4987, !5002}
!5002 = !DILocation(line: 1333, column: 2, scope: !4975)
!5003 = !DILocation(line: 1336, column: 1, scope: !4975)
!5004 = distinct !DISubprogram(name: "encode_uint", scope: !2434, file: !2434, line: 788, type: !5005, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5007)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!256, !2456, !4608, !256, !123}
!5007 = !{!5008, !5009, !5010, !5011, !5012, !5013, !5015, !5016}
!5008 = !DILocalVariable(name: "value", arg: 1, scope: !5004, file: !2434, line: 788, type: !2456)
!5009 = !DILocalVariable(name: "conv", arg: 2, scope: !5004, file: !2434, line: 789, type: !4608)
!5010 = !DILocalVariable(name: "bps", arg: 3, scope: !5004, file: !2434, line: 790, type: !256)
!5011 = !DILocalVariable(name: "bpe", arg: 4, scope: !5004, file: !2434, line: 791, type: !123)
!5012 = !DILocalVariable(name: "upcase", scope: !5004, file: !2434, line: 793, type: !136)
!5013 = !DILocalVariable(name: "radix", scope: !5004, file: !2434, line: 794, type: !5014)
!5014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5015 = !DILocalVariable(name: "bp", scope: !5004, file: !2434, line: 795, type: !256)
!5016 = !DILocalVariable(name: "lsv", scope: !5017, file: !2434, line: 798, type: !32)
!5017 = distinct !DILexicalBlock(scope: !5004, file: !2434, line: 797, column: 5)
!5018 = !DILocation(line: 0, scope: !5004)
!5019 = !DILocation(line: 793, column: 35, scope: !5004)
!5020 = !DILocation(line: 793, column: 24, scope: !5004)
!5021 = !DILocation(line: 793, column: 16, scope: !5004)
!5022 = !DILocation(line: 794, column: 29, scope: !5004)
!5023 = !DILocation(line: 795, column: 24, scope: !5004)
!5024 = !DILocation(line: 795, column: 17, scope: !5004)
!5025 = !DILocation(line: 797, column: 2, scope: !5004)
!5026 = !DILocation(line: 802, column: 9, scope: !5017)
!5027 = !DILocation(line: 798, column: 22, scope: !5017)
!5028 = !DILocation(line: 0, scope: !5017)
!5029 = !DILocation(line: 800, column: 16, scope: !5017)
!5030 = !DILocation(line: 800, column: 11, scope: !5017)
!5031 = !DILocation(line: 800, column: 4, scope: !5017)
!5032 = !DILocation(line: 800, column: 9, scope: !5017)
!5033 = !DILocation(line: 803, column: 18, scope: !5004)
!5034 = !DILocation(line: 803, column: 24, scope: !5004)
!5035 = !DILocation(line: 803, column: 2, scope: !5017)
!5036 = distinct !{!5036, !5025, !5037}
!5037 = !DILocation(line: 803, column: 37, scope: !5004)
!5038 = !DILocation(line: 808, column: 12, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5004, file: !2434, line: 808, column: 6)
!5040 = !DILocation(line: 808, column: 6, scope: !5004)
!5041 = !DILocation(line: 809, column: 7, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5039, file: !2434, line: 808, column: 23)
!5043 = !DILocation(line: 813, column: 3, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !2434, line: 811, column: 27)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !2434, line: 811, column: 14)
!5046 = distinct !DILexicalBlock(scope: !5042, file: !2434, line: 809, column: 7)
!5047 = !DILocation(line: 0, scope: !5046)
!5048 = !DILocation(line: 818, column: 2, scope: !5004)
!5049 = distinct !DISubprogram(name: "store_count", scope: !2434, file: !2434, line: 1280, type: !5050, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5054)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{null, !5052, !102, !107}
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 32)
!5053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4575)
!5054 = !{!5055, !5056, !5057}
!5055 = !DILocalVariable(name: "conv", arg: 1, scope: !5049, file: !2434, line: 1280, type: !5052)
!5056 = !DILocalVariable(name: "dp", arg: 2, scope: !5049, file: !2434, line: 1281, type: !102)
!5057 = !DILocalVariable(name: "count", arg: 3, scope: !5049, file: !2434, line: 1282, type: !107)
!5058 = !DILocation(line: 0, scope: !5049)
!5059 = !DILocation(line: 1284, column: 38, scope: !5049)
!5060 = !DILocation(line: 1284, column: 2, scope: !5049)
!5061 = !DILocation(line: 1286, column: 4, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5049, file: !2434, line: 1284, column: 50)
!5063 = !DILocation(line: 1286, column: 14, scope: !5062)
!5064 = !DILocation(line: 1287, column: 3, scope: !5062)
!5065 = !DILocation(line: 1289, column: 24, scope: !5062)
!5066 = !DILocation(line: 1289, column: 22, scope: !5062)
!5067 = !DILocation(line: 1290, column: 3, scope: !5062)
!5068 = !DILocation(line: 1292, column: 18, scope: !5062)
!5069 = !DILocation(line: 1292, column: 4, scope: !5062)
!5070 = !DILocation(line: 1292, column: 16, scope: !5062)
!5071 = !DILocation(line: 1293, column: 3, scope: !5062)
!5072 = !DILocation(line: 1295, column: 4, scope: !5062)
!5073 = !DILocation(line: 1295, column: 15, scope: !5062)
!5074 = !DILocation(line: 1296, column: 3, scope: !5062)
!5075 = !DILocation(line: 1298, column: 22, scope: !5062)
!5076 = !DILocation(line: 1298, column: 4, scope: !5062)
!5077 = !DILocation(line: 1298, column: 20, scope: !5062)
!5078 = !DILocation(line: 1299, column: 3, scope: !5062)
!5079 = !DILocation(line: 1301, column: 21, scope: !5062)
!5080 = !DILocation(line: 1301, column: 4, scope: !5062)
!5081 = !DILocation(line: 1301, column: 19, scope: !5062)
!5082 = !DILocation(line: 1302, column: 3, scope: !5062)
!5083 = !DILocation(line: 1304, column: 4, scope: !5062)
!5084 = !DILocation(line: 1304, column: 17, scope: !5062)
!5085 = !DILocation(line: 1305, column: 3, scope: !5062)
!5086 = !DILocation(line: 1307, column: 4, scope: !5062)
!5087 = !DILocation(line: 1307, column: 20, scope: !5062)
!5088 = !DILocation(line: 1308, column: 3, scope: !5062)
!5089 = !DILocation(line: 1316, column: 1, scope: !5049)
!5090 = distinct !DISubprogram(name: "isupper", scope: !5091, file: !5091, line: 16, type: !270, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5092)
!5091 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5092 = !{!5093}
!5093 = !DILocalVariable(name: "a", arg: 1, scope: !5090, file: !5091, line: 16, type: !107)
!5094 = !DILocation(line: 0, scope: !5090)
!5095 = !DILocation(line: 18, column: 29, scope: !5090)
!5096 = !DILocation(line: 18, column: 45, scope: !5090)
!5097 = !DILocation(line: 18, column: 2, scope: !5090)
!5098 = distinct !DISubprogram(name: "conversion_radix", scope: !2434, file: !2434, line: 761, type: !5099, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5101)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{!252, !125}
!5101 = !{!5102}
!5102 = !DILocalVariable(name: "specifier", arg: 1, scope: !5098, file: !2434, line: 761, type: !125)
!5103 = !DILocation(line: 0, scope: !5098)
!5104 = !DILocation(line: 763, column: 2, scope: !5098)
!5105 = !DILocation(line: 770, column: 3, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5098, file: !2434, line: 763, column: 21)
!5107 = !DILocation(line: 774, column: 3, scope: !5106)
!5108 = !DILocation(line: 0, scope: !5106)
!5109 = !DILocation(line: 776, column: 1, scope: !5098)
!5110 = distinct !DISubprogram(name: "extract_flags", scope: !2434, file: !2434, line: 339, type: !4952, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5111)
!5111 = !{!5112, !5113, !5114}
!5112 = !DILocalVariable(name: "conv", arg: 1, scope: !5110, file: !2434, line: 339, type: !4608)
!5113 = !DILocalVariable(name: "sp", arg: 2, scope: !5110, file: !2434, line: 340, type: !123)
!5114 = !DILocalVariable(name: "loop", scope: !5110, file: !2434, line: 342, type: !136)
!5115 = !DILocation(line: 0, scope: !5110)
!5116 = !DILocation(line: 344, column: 2, scope: !5110)
!5117 = !DILocation(line: 345, column: 11, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5110, file: !2434, line: 344, column: 5)
!5119 = !DILocation(line: 345, column: 3, scope: !5118)
!5120 = !DILocation(line: 351, column: 4, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5118, file: !2434, line: 345, column: 16)
!5122 = !DILocation(line: 354, column: 4, scope: !5121)
!5123 = !DILocation(line: 357, column: 4, scope: !5121)
!5124 = !DILocation(line: 360, column: 4, scope: !5121)
!5125 = !DILocation(line: 0, scope: !5121)
!5126 = !DILocation(line: 370, column: 12, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5110, file: !2434, line: 370, column: 6)
!5128 = !DILocation(line: 370, column: 22, scope: !5127)
!5129 = !DILocation(line: 371, column: 19, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5127, file: !2434, line: 370, column: 42)
!5131 = !DILocation(line: 372, column: 2, scope: !5130)
!5132 = !DILocation(line: 376, column: 2, scope: !5110)
!5133 = distinct !DISubprogram(name: "extract_width", scope: !2434, file: !2434, line: 388, type: !4952, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5134)
!5134 = !{!5135, !5136, !5137, !5138}
!5135 = !DILocalVariable(name: "conv", arg: 1, scope: !5133, file: !2434, line: 388, type: !4608)
!5136 = !DILocalVariable(name: "sp", arg: 2, scope: !5133, file: !2434, line: 389, type: !123)
!5137 = !DILocalVariable(name: "wp", scope: !5133, file: !2434, line: 398, type: !123)
!5138 = !DILocalVariable(name: "width", scope: !5133, file: !2434, line: 399, type: !252)
!5139 = !DILocation(line: 0, scope: !5133)
!5140 = !DILocation(line: 391, column: 8, scope: !5133)
!5141 = !DILocation(line: 391, column: 22, scope: !5133)
!5142 = !DILocation(line: 393, column: 6, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5133, file: !2434, line: 393, column: 6)
!5144 = !DILocation(line: 393, column: 10, scope: !5143)
!5145 = !DILocation(line: 393, column: 6, scope: !5133)
!5146 = !DILocation(line: 394, column: 20, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5143, file: !2434, line: 393, column: 18)
!5148 = !DILocation(line: 395, column: 10, scope: !5147)
!5149 = !DILocation(line: 395, column: 3, scope: !5147)
!5150 = !DILocation(line: 399, column: 17, scope: !5133)
!5151 = !DILocation(line: 401, column: 6, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5133, file: !2434, line: 401, column: 6)
!5153 = !DILocation(line: 401, column: 9, scope: !5152)
!5154 = !DILocation(line: 401, column: 6, scope: !5133)
!5155 = !DILocation(line: 402, column: 23, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5152, file: !2434, line: 401, column: 16)
!5157 = !DILocation(line: 403, column: 9, scope: !5156)
!5158 = !DILocation(line: 403, column: 21, scope: !5156)
!5159 = !DILocation(line: 405, column: 11, scope: !5156)
!5160 = !DILocation(line: 404, column: 21, scope: !5156)
!5161 = !DILocation(line: 406, column: 2, scope: !5156)
!5162 = !DILocation(line: 409, column: 1, scope: !5133)
!5163 = distinct !DISubprogram(name: "extract_prec", scope: !2434, file: !2434, line: 420, type: !4952, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5164)
!5164 = !{!5165, !5166, !5167}
!5165 = !DILocalVariable(name: "conv", arg: 1, scope: !5163, file: !2434, line: 420, type: !4608)
!5166 = !DILocalVariable(name: "sp", arg: 2, scope: !5163, file: !2434, line: 421, type: !123)
!5167 = !DILocalVariable(name: "prec", scope: !5163, file: !2434, line: 435, type: !252)
!5168 = !DILocation(line: 0, scope: !5163)
!5169 = !DILocation(line: 423, column: 24, scope: !5163)
!5170 = !DILocation(line: 423, column: 28, scope: !5163)
!5171 = !DILocation(line: 423, column: 8, scope: !5163)
!5172 = !DILocation(line: 423, column: 21, scope: !5163)
!5173 = !DILocation(line: 425, column: 6, scope: !5163)
!5174 = !DILocation(line: 428, column: 2, scope: !5163)
!5175 = !DILocation(line: 430, column: 6, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5163, file: !2434, line: 430, column: 6)
!5177 = !DILocation(line: 430, column: 10, scope: !5176)
!5178 = !DILocation(line: 430, column: 6, scope: !5163)
!5179 = !DILocation(line: 431, column: 19, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5176, file: !2434, line: 430, column: 18)
!5181 = !DILocation(line: 432, column: 10, scope: !5180)
!5182 = !DILocation(line: 432, column: 3, scope: !5180)
!5183 = !DILocation(line: 435, column: 16, scope: !5163)
!5184 = !DILocation(line: 437, column: 8, scope: !5163)
!5185 = !DILocation(line: 437, column: 19, scope: !5163)
!5186 = !DILocation(line: 439, column: 10, scope: !5163)
!5187 = !DILocation(line: 438, column: 20, scope: !5163)
!5188 = !DILocation(line: 441, column: 9, scope: !5163)
!5189 = !DILocation(line: 442, column: 1, scope: !5163)
!5190 = distinct !DISubprogram(name: "extract_length", scope: !2434, file: !2434, line: 453, type: !4952, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5191)
!5191 = !{!5192, !5193}
!5192 = !DILocalVariable(name: "conv", arg: 1, scope: !5190, file: !2434, line: 453, type: !4608)
!5193 = !DILocalVariable(name: "sp", arg: 2, scope: !5190, file: !2434, line: 454, type: !123)
!5194 = !DILocation(line: 0, scope: !5190)
!5195 = !DILocation(line: 456, column: 10, scope: !5190)
!5196 = !DILocation(line: 456, column: 2, scope: !5190)
!5197 = !DILocation(line: 458, column: 8, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !2434, line: 458, column: 7)
!5199 = distinct !DILexicalBlock(scope: !5190, file: !2434, line: 456, column: 15)
!5200 = !DILocation(line: 458, column: 7, scope: !5198)
!5201 = !DILocation(line: 458, column: 13, scope: !5198)
!5202 = !DILocation(line: 0, scope: !5198)
!5203 = !DILocation(line: 458, column: 7, scope: !5199)
!5204 = !DILocation(line: 459, column: 21, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5198, file: !2434, line: 458, column: 21)
!5206 = !DILocation(line: 460, column: 4, scope: !5205)
!5207 = !DILocation(line: 461, column: 3, scope: !5205)
!5208 = !DILocation(line: 462, column: 21, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5198, file: !2434, line: 461, column: 10)
!5210 = !DILocation(line: 466, column: 8, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5199, file: !2434, line: 466, column: 7)
!5212 = !DILocation(line: 466, column: 7, scope: !5211)
!5213 = !DILocation(line: 466, column: 13, scope: !5211)
!5214 = !DILocation(line: 0, scope: !5211)
!5215 = !DILocation(line: 466, column: 7, scope: !5199)
!5216 = !DILocation(line: 467, column: 21, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5211, file: !2434, line: 466, column: 21)
!5218 = !DILocation(line: 468, column: 4, scope: !5217)
!5219 = !DILocation(line: 469, column: 3, scope: !5217)
!5220 = !DILocation(line: 470, column: 21, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5211, file: !2434, line: 469, column: 10)
!5222 = !DILocation(line: 474, column: 9, scope: !5199)
!5223 = !DILocation(line: 474, column: 20, scope: !5199)
!5224 = !DILocation(line: 475, column: 3, scope: !5199)
!5225 = !DILocation(line: 476, column: 3, scope: !5199)
!5226 = !DILocation(line: 478, column: 9, scope: !5199)
!5227 = !DILocation(line: 478, column: 20, scope: !5199)
!5228 = !DILocation(line: 479, column: 3, scope: !5199)
!5229 = !DILocation(line: 480, column: 3, scope: !5199)
!5230 = !DILocation(line: 482, column: 9, scope: !5199)
!5231 = !DILocation(line: 482, column: 20, scope: !5199)
!5232 = !DILocation(line: 483, column: 3, scope: !5199)
!5233 = !DILocation(line: 484, column: 3, scope: !5199)
!5234 = !DILocation(line: 486, column: 9, scope: !5199)
!5235 = !DILocation(line: 486, column: 20, scope: !5199)
!5236 = !DILocation(line: 487, column: 3, scope: !5199)
!5237 = !DILocation(line: 492, column: 21, scope: !5199)
!5238 = !DILocation(line: 493, column: 3, scope: !5199)
!5239 = !DILocation(line: 495, column: 9, scope: !5199)
!5240 = !DILocation(line: 495, column: 20, scope: !5199)
!5241 = !DILocation(line: 496, column: 3, scope: !5199)
!5242 = !DILocation(line: 498, column: 2, scope: !5190)
!5243 = distinct !DISubprogram(name: "extract_specifier", scope: !2434, file: !2434, line: 513, type: !4952, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5244)
!5244 = !{!5245, !5246, !5247, !5248}
!5245 = !DILocalVariable(name: "conv", arg: 1, scope: !5243, file: !2434, line: 513, type: !4608)
!5246 = !DILocalVariable(name: "sp", arg: 2, scope: !5243, file: !2434, line: 514, type: !123)
!5247 = !DILocalVariable(name: "unsupported", scope: !5243, file: !2434, line: 516, type: !136)
!5248 = !DILabel(scope: !5249, name: "int_conv", file: !2434, line: 526)
!5249 = distinct !DILexicalBlock(scope: !5243, file: !2434, line: 520, column: 27)
!5250 = !DILocation(line: 0, scope: !5243)
!5251 = !DILocation(line: 518, column: 20, scope: !5243)
!5252 = !DILocation(line: 518, column: 8, scope: !5243)
!5253 = !DILocation(line: 518, column: 18, scope: !5243)
!5254 = !DILocation(line: 520, column: 2, scope: !5243)
!5255 = !DILocation(line: 525, column: 3, scope: !5249)
!5256 = !DILocation(line: 0, scope: !5249)
!5257 = !DILocation(line: 526, column: 1, scope: !5249)
!5258 = !DILocation(line: 528, column: 24, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5249, file: !2434, line: 528, column: 7)
!5260 = !DILocation(line: 528, column: 7, scope: !5249)
!5261 = !DILocation(line: 535, column: 23, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5249, file: !2434, line: 535, column: 7)
!5263 = !DILocation(line: 535, column: 7, scope: !5249)
!5264 = !DILocation(line: 536, column: 36, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5262, file: !2434, line: 535, column: 31)
!5266 = !DILocation(line: 537, column: 3, scope: !5265)
!5267 = !DILocation(line: 570, column: 9, scope: !5249)
!5268 = !DILocation(line: 570, column: 23, scope: !5249)
!5269 = !DILocation(line: 575, column: 4, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !2434, line: 573, column: 48)
!5271 = distinct !DILexicalBlock(scope: !5249, file: !2434, line: 573, column: 7)
!5272 = !DILocation(line: 603, column: 9, scope: !5249)
!5273 = !DILocation(line: 603, column: 23, scope: !5249)
!5274 = !DILocation(line: 605, column: 24, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5249, file: !2434, line: 605, column: 7)
!5276 = !DILocation(line: 605, column: 7, scope: !5249)
!5277 = !DILocation(line: 612, column: 9, scope: !5249)
!5278 = !DILocation(line: 612, column: 23, scope: !5249)
!5279 = !DILocation(line: 619, column: 24, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5249, file: !2434, line: 619, column: 7)
!5281 = !DILocation(line: 619, column: 7, scope: !5249)
!5282 = !DILocation(line: 625, column: 9, scope: !5249)
!5283 = !DILocation(line: 625, column: 17, scope: !5249)
!5284 = !DILocation(line: 626, column: 3, scope: !5249)
!5285 = !DILocation(line: 629, column: 20, scope: !5243)
!5286 = !DILocation(line: 629, column: 8, scope: !5243)
!5287 = !DILocation(line: 518, column: 23, scope: !5243)
!5288 = !DILocation(line: 631, column: 2, scope: !5243)
!5289 = distinct !DISubprogram(name: "extract_decimal", scope: !2434, file: !2434, line: 318, type: !5290, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5293)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!252, !5292}
!5292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!5293 = !{!5294, !5295, !5296}
!5294 = !DILocalVariable(name: "str", arg: 1, scope: !5289, file: !2434, line: 318, type: !5292)
!5295 = !DILocalVariable(name: "sp", scope: !5289, file: !2434, line: 320, type: !123)
!5296 = !DILocalVariable(name: "val", scope: !5289, file: !2434, line: 321, type: !252)
!5297 = !DILocation(line: 0, scope: !5289)
!5298 = !DILocation(line: 320, column: 19, scope: !5289)
!5299 = !DILocation(line: 323, column: 37, scope: !5289)
!5300 = !DILocation(line: 323, column: 17, scope: !5289)
!5301 = !DILocation(line: 323, column: 9, scope: !5289)
!5302 = !DILocation(line: 323, column: 2, scope: !5289)
!5303 = !DILocation(line: 324, column: 13, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5289, file: !2434, line: 323, column: 43)
!5305 = !DILocation(line: 324, column: 24, scope: !5304)
!5306 = !DILocation(line: 324, column: 19, scope: !5304)
!5307 = !DILocation(line: 324, column: 27, scope: !5304)
!5308 = distinct !{!5308, !5302, !5309}
!5309 = !DILocation(line: 325, column: 2, scope: !5289)
!5310 = !DILocation(line: 326, column: 7, scope: !5289)
!5311 = !DILocation(line: 327, column: 2, scope: !5289)
!5312 = distinct !DISubprogram(name: "isdigit", scope: !5091, file: !5091, line: 43, type: !270, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !5313)
!5313 = !{!5314}
!5314 = !DILocalVariable(name: "a", arg: 1, scope: !5312, file: !5091, line: 43, type: !107)
!5315 = !DILocation(line: 0, scope: !5312)
!5316 = !DILocation(line: 45, column: 29, scope: !5312)
!5317 = !DILocation(line: 45, column: 45, scope: !5312)
!5318 = !DILocation(line: 45, column: 2, scope: !5312)
!5319 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5320, file: !5320, line: 9, type: !3113, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !250)
!5320 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!5321 = !DILocation(line: 11, column: 1, scope: !5319)
!5322 = !{i64 2147560722, i64 2147560765, i64 2147560805}
!5323 = !DILocation(line: 12, column: 1, scope: !5319)
!5324 = !{i64 2147564949, i64 2147564992, i64 2147565032}
!5325 = !DILocation(line: 13, column: 1, scope: !5319)
!5326 = !{i64 2147565158, i64 2147565201, i64 2147565241}
!5327 = !DILocation(line: 14, column: 1, scope: !5319)
!5328 = !{i64 2147565375, i64 2147565418, i64 2147565458}
!5329 = !DILocation(line: 15, column: 1, scope: !5319)
!5330 = !{i64 2147565544, i64 2147565587, i64 2147565627}
!5331 = !DILocation(line: 16, column: 1, scope: !5319)
!5332 = !{i64 2147565707, i64 2147565750, i64 2147565790}
!5333 = !DILocation(line: 17, column: 1, scope: !5319)
!5334 = !{i64 2147565891, i64 2147565934, i64 2147565974}
!5335 = !DILocation(line: 18, column: 1, scope: !5319)
!5336 = !{i64 2147566070, i64 2147566113, i64 2147566153}
!5337 = !DILocation(line: 19, column: 1, scope: !5319)
!5338 = !{i64 2147566312, i64 2147566355, i64 2147566395}
!5339 = !DILocation(line: 20, column: 1, scope: !5319)
!5340 = !{i64 2147566547, i64 2147566590, i64 2147566630}
!5341 = !DILocation(line: 21, column: 1, scope: !5319)
!5342 = !{i64 2147566733, i64 2147566776, i64 2147566816}
!5343 = !DILocation(line: 22, column: 1, scope: !5319)
!5344 = !{i64 2147566949, i64 2147566992, i64 2147567032}
!5345 = !DILocation(line: 23, column: 1, scope: !5319)
!5346 = !{i64 2147567152, i64 2147567195, i64 2147567235}
!5347 = !DILocation(line: 24, column: 1, scope: !5319)
!5348 = !{i64 2147567355, i64 2147567398, i64 2147567438}
!5349 = !DILocation(line: 25, column: 1, scope: !5319)
!5350 = !{i64 2147567530, i64 2147567573, i64 2147567613}
!5351 = !DILocation(line: 26, column: 1, scope: !5319)
!5352 = !{i64 2147567738, i64 2147567781, i64 2147567821}
!5353 = !DILocation(line: 27, column: 1, scope: !5319)
!5354 = !{i64 2147567942, i64 2147567985, i64 2147568025}
!5355 = !DILocation(line: 28, column: 1, scope: !5319)
!5356 = !{i64 2147568135, i64 2147568178, i64 2147568218}
!5357 = !DILocation(line: 29, column: 1, scope: !5319)
!5358 = !{i64 2147568337, i64 2147568380, i64 2147568420}
!5359 = !DILocation(line: 30, column: 1, scope: !5319)
!5360 = !{i64 2147568564, i64 2147568607, i64 2147568647}
!5361 = !DILocation(line: 31, column: 1, scope: !5319)
!5362 = !{i64 2147568766, i64 2147568809, i64 2147568849}
!5363 = !DILocation(line: 32, column: 1, scope: !5319)
!5364 = !{i64 2147568981, i64 2147569024, i64 2147569064}
!5365 = !DILocation(line: 33, column: 1, scope: !5319)
!5366 = !{i64 2147569153, i64 2147569196, i64 2147569236}
!5367 = !DILocation(line: 34, column: 1, scope: !5319)
!5368 = !{i64 2147569355, i64 2147569398, i64 2147569438}
!5369 = !DILocation(line: 35, column: 1, scope: !5319)
!5370 = !{i64 2147569581, i64 2147569624, i64 2147569664}
!5371 = !DILocation(line: 36, column: 1, scope: !5319)
!5372 = !{i64 2147569780, i64 2147569823, i64 2147569863}
!5373 = !DILocation(line: 37, column: 1, scope: !5319)
!5374 = !{i64 2147569955, i64 2147569998, i64 2147570038}
!5375 = !DILocation(line: 38, column: 1, scope: !5319)
!5376 = !{i64 2147570208, i64 2147570251, i64 2147570291}
!5377 = !DILocation(line: 39, column: 1, scope: !5319)
!5378 = !{i64 2147570449, i64 2147570492, i64 2147570532}
!5379 = !DILocation(line: 40, column: 1, scope: !5319)
!5380 = !{i64 2147570684, i64 2147570727, i64 2147570767}
!5381 = !DILocation(line: 41, column: 1, scope: !5319)
!5382 = !{i64 2147570916, i64 2147570959, i64 2147570999}
!5383 = !DILocation(line: 42, column: 1, scope: !5319)
!5384 = !{i64 2147571142, i64 2147571185, i64 2147571225}
!5385 = !DILocation(line: 43, column: 1, scope: !5319)
!5386 = !{i64 2147571368, i64 2147571411, i64 2147571451}
!5387 = !DILocation(line: 44, column: 1, scope: !5319)
!5388 = !{i64 2147571594, i64 2147571637, i64 2147571677}
!5389 = !DILocation(line: 45, column: 1, scope: !5319)
!5390 = !{i64 2147571829, i64 2147571872, i64 2147571912}
!5391 = !DILocation(line: 46, column: 1, scope: !5319)
!5392 = !{i64 2147572067, i64 2147572110, i64 2147572150}
!5393 = !DILocation(line: 47, column: 1, scope: !5319)
!5394 = !{i64 2147572341, i64 2147572384, i64 2147572424}
!5395 = !DILocation(line: 48, column: 1, scope: !5319)
!5396 = !{i64 2147572579, i64 2147572622, i64 2147572662}
!5397 = !DILocation(line: 49, column: 1, scope: !5319)
!5398 = !{i64 2147572823, i64 2147572866, i64 2147572906}
!5399 = !DILocation(line: 50, column: 1, scope: !5319)
!5400 = !{i64 2147573073, i64 2147573116, i64 2147573156}
!5401 = !DILocation(line: 51, column: 1, scope: !5319)
!5402 = !{i64 2147573320, i64 2147573363, i64 2147573403}
!5403 = !DILocation(line: 52, column: 1, scope: !5319)
!5404 = !{i64 2147573555, i64 2147573598, i64 2147573638}
!5405 = !DILocation(line: 53, column: 1, scope: !5319)
!5406 = !{i64 2147577851, i64 2147577894, i64 2147577934}
!5407 = !DILocation(line: 54, column: 1, scope: !5319)
!5408 = !{i64 2147578086, i64 2147578129, i64 2147578169}
!5409 = !DILocation(line: 55, column: 1, scope: !5319)
!5410 = !{i64 2147578324, i64 2147578367, i64 2147578407}
!5411 = !DILocation(line: 56, column: 1, scope: !5319)
!5412 = !{i64 2147578565, i64 2147578608, i64 2147578648}
!5413 = !DILocation(line: 57, column: 1, scope: !5319)
!5414 = !{i64 2147578845, i64 2147578888, i64 2147578928}
!5415 = !DILocation(line: 58, column: 1, scope: !5319)
!5416 = !{i64 2147579104, i64 2147579147, i64 2147579187}
!5417 = !DILocation(line: 59, column: 1, scope: !5319)
!5418 = !{i64 2147579330, i64 2147579373, i64 2147579413}
!5419 = !DILocation(line: 60, column: 1, scope: !5319)
!5420 = !{i64 2147579568, i64 2147579611, i64 2147579651}
!5421 = !DILocation(line: 61, column: 1, scope: !5319)
!5422 = !{i64 2147579797, i64 2147579840, i64 2147579880}
!5423 = !DILocation(line: 62, column: 1, scope: !5319)
!5424 = !{i64 2147580005, i64 2147580048, i64 2147580088}
!5425 = !DILocation(line: 63, column: 1, scope: !5319)
!5426 = !{i64 2147580216, i64 2147580259, i64 2147580299}
!5427 = !DILocation(line: 64, column: 1, scope: !5319)
!5428 = !{i64 2147580451, i64 2147580494, i64 2147580534}
!5429 = !DILocation(line: 65, column: 1, scope: !5319)
!5430 = !{i64 2147580680, i64 2147580723, i64 2147580763}
!5431 = !DILocation(line: 66, column: 1, scope: !5319)
!5432 = !{i64 2147580918, i64 2147580961, i64 2147581001}
!5433 = !DILocation(line: 67, column: 1, scope: !5319)
!5434 = !{i64 2147581150, i64 2147581193, i64 2147581233}
!5435 = !DILocation(line: 68, column: 1, scope: !5319)
!5436 = !{i64 2147581376, i64 2147581419, i64 2147581459}
!5437 = !DILocation(line: 69, column: 1, scope: !5319)
!5438 = !{i64 2147581593, i64 2147581636, i64 2147581676}
!5439 = !DILocation(line: 70, column: 1, scope: !5319)
!5440 = !{i64 2147581825, i64 2147581868, i64 2147581908}
!5441 = !DILocation(line: 71, column: 1, scope: !5319)
!5442 = !{i64 2147582051, i64 2147582094, i64 2147582134}
!5443 = !DILocation(line: 72, column: 1, scope: !5319)
!5444 = !{i64 2147582265, i64 2147582308, i64 2147582348}
!5445 = !DILocation(line: 73, column: 1, scope: !5319)
!5446 = !{i64 2147582485, i64 2147582528, i64 2147582568}
!5447 = !DILocation(line: 74, column: 1, scope: !5319)
!5448 = !{i64 2147582717, i64 2147582760, i64 2147582800}
!5449 = !DILocation(line: 75, column: 1, scope: !5319)
!5450 = !{i64 2147582925, i64 2147582968, i64 2147583008}
!5451 = !DILocation(line: 76, column: 1, scope: !5319)
!5452 = !{i64 2147583130, i64 2147583173, i64 2147583213}
!5453 = !DILocation(line: 77, column: 1, scope: !5319)
!5454 = !{i64 2147583347, i64 2147583390, i64 2147583430}
!5455 = !DILocation(line: 78, column: 1, scope: !5319)
!5456 = !{i64 2147583561, i64 2147583604, i64 2147583644}
!5457 = !DILocation(line: 79, column: 1, scope: !5319)
!5458 = !{i64 2147583787, i64 2147583830, i64 2147583870}
!5459 = !DILocation(line: 80, column: 1, scope: !5319)
!5460 = !{i64 2147584007, i64 2147584050, i64 2147584090}
!5461 = !DILocation(line: 81, column: 1, scope: !5319)
!5462 = !{i64 2147584212, i64 2147584255, i64 2147584295}
!5463 = !DILocation(line: 82, column: 1, scope: !5319)
!5464 = !{i64 2147584444, i64 2147584487, i64 2147584527}
!5465 = !DILocation(line: 83, column: 1, scope: !5319)
!5466 = !{i64 2147584679, i64 2147584722, i64 2147584762}
!5467 = !DILocation(line: 84, column: 1, scope: !5319)
!5468 = !{i64 2147584929, i64 2147584972, i64 2147585012}
!5469 = !DILocation(line: 85, column: 1, scope: !5319)
!5470 = !{i64 2147585179, i64 2147585222, i64 2147585262}
!5471 = !DILocation(line: 86, column: 1, scope: !5319)
!5472 = !{i64 2147585417, i64 2147585460, i64 2147585500}
!5473 = !DILocation(line: 87, column: 1, scope: !5319)
!5474 = !{i64 2147585628, i64 2147585671, i64 2147585711}
!5475 = !DILocation(line: 88, column: 1, scope: !5319)
!5476 = !{i64 2147585845, i64 2147585888, i64 2147585928}
!5477 = !DILocation(line: 89, column: 1, scope: !5319)
!5478 = !{i64 2147590102, i64 2147590145, i64 2147590185}
!5479 = !DILocation(line: 90, column: 1, scope: !5319)
!5480 = !{i64 2147590304, i64 2147590347, i64 2147590387}
!5481 = !DILocation(line: 91, column: 1, scope: !5319)
!5482 = !{i64 2147590497, i64 2147590540, i64 2147590580}
!5483 = !DILocation(line: 92, column: 1, scope: !5319)
!5484 = !{i64 2147590705, i64 2147590748, i64 2147590788}
!5485 = !DILocation(line: 93, column: 1, scope: !5319)
!5486 = !{i64 2147590901, i64 2147590944, i64 2147590984}
!5487 = !DILocation(line: 94, column: 1, scope: !5319)
!5488 = !{i64 2147591106, i64 2147591149, i64 2147591189}
!5489 = !DILocation(line: 95, column: 1, scope: !5319)
!5490 = !{i64 2147591317, i64 2147591360, i64 2147591400}
!5491 = !DILocation(line: 96, column: 1, scope: !5319)
!5492 = !{i64 2147591516, i64 2147591559, i64 2147591599}
!5493 = !DILocation(line: 97, column: 1, scope: !5319)
!5494 = !{i64 2147591691, i64 2147591734, i64 2147591774}
!5495 = !DILocation(line: 98, column: 1, scope: !5319)
!5496 = !{i64 2147591875, i64 2147591918, i64 2147591958}
!5497 = !DILocation(line: 99, column: 1, scope: !5319)
!5498 = !{i64 2147592077, i64 2147592120, i64 2147592160}
!5499 = !DILocation(line: 100, column: 1, scope: !5319)
!5500 = !{i64 2147592276, i64 2147592319, i64 2147592359}
!5501 = !DILocation(line: 101, column: 1, scope: !5319)
!5502 = !{i64 2147592442, i64 2147592485, i64 2147592525}
!5503 = !DILocation(line: 102, column: 1, scope: !5319)
!5504 = !{i64 2147592626, i64 2147592669, i64 2147592709}
!5505 = !DILocation(line: 103, column: 1, scope: !5319)
!5506 = !{i64 2147592816, i64 2147592859, i64 2147592899}
!5507 = !DILocation(line: 104, column: 1, scope: !5319)
!5508 = !{i64 2147593000, i64 2147593043, i64 2147593083}
!5509 = !DILocation(line: 105, column: 1, scope: !5319)
!5510 = !{i64 2147593214, i64 2147593257, i64 2147593297}
!5511 = !DILocation(line: 106, column: 1, scope: !5319)
!5512 = !{i64 2147593425, i64 2147593468, i64 2147593508}
!5513 = !DILocation(line: 107, column: 1, scope: !5319)
!5514 = !{i64 2147593648, i64 2147593691, i64 2147593731}
!5515 = !DILocation(line: 108, column: 1, scope: !5319)
!5516 = !{i64 2147593832, i64 2147593875, i64 2147593915}
!5517 = !DILocation(line: 109, column: 1, scope: !5319)
!5518 = !{i64 2147594046, i64 2147594089, i64 2147594129}
!5519 = !DILocation(line: 110, column: 1, scope: !5319)
!5520 = !{i64 2147594212, i64 2147594255, i64 2147594295}
!5521 = !DILocation(line: 111, column: 1, scope: !5319)
!5522 = !{i64 2147594393, i64 2147594436, i64 2147594476}
!5523 = !DILocation(line: 112, column: 1, scope: !5319)
!5524 = !{i64 2147594586, i64 2147594629, i64 2147594669}
!5525 = !DILocation(line: 113, column: 1, scope: !5319)
!5526 = !{i64 2147594812, i64 2147594855, i64 2147594895}
!5527 = !DILocation(line: 114, column: 1, scope: !5319)
!5528 = !{i64 2147595026, i64 2147595069, i64 2147595109}
!5529 = !DILocation(line: 115, column: 1, scope: !5319)
!5530 = !{i64 2147595252, i64 2147595295, i64 2147595335}
!5531 = !DILocation(line: 116, column: 1, scope: !5319)
!5532 = !{i64 2147595469, i64 2147595512, i64 2147595552}
!5533 = !DILocation(line: 117, column: 1, scope: !5319)
!5534 = !{i64 2147595746, i64 2147595789, i64 2147595829}
!5535 = !DILocation(line: 118, column: 1, scope: !5319)
!5536 = !{i64 2147595972, i64 2147596015, i64 2147596055}
!5537 = !DILocation(line: 119, column: 1, scope: !5319)
!5538 = !{i64 2147596180, i64 2147596223, i64 2147596263}
!5539 = !DILocation(line: 120, column: 1, scope: !5319)
!5540 = !{i64 2147596376, i64 2147596419, i64 2147596459}
!5541 = !DILocation(line: 121, column: 1, scope: !5319)
!5542 = !{i64 2147596641, i64 2147596684, i64 2147596724}
!5543 = !DILocation(line: 122, column: 1, scope: !5319)
!5544 = !{i64 2147596855, i64 2147596898, i64 2147596938}
!5545 = !DILocation(line: 123, column: 1, scope: !5319)
!5546 = !{i64 2147597030, i64 2147597073, i64 2147597113}
!5547 = !DILocation(line: 124, column: 1, scope: !5319)
!5548 = !{i64 2147597284, i64 2147597327, i64 2147597367}
!5549 = !DILocation(line: 125, column: 1, scope: !5319)
!5550 = !{i64 2147597483, i64 2147597526, i64 2147597566}
!5551 = !DILocation(line: 126, column: 1, scope: !5319)
!5552 = !{i64 2147597725, i64 2147597768, i64 2147597808}
!5553 = !DILocation(line: 127, column: 1, scope: !5319)
!5554 = !{i64 2147597888, i64 2147597931, i64 2147597971}
!5555 = !DILocation(line: 128, column: 1, scope: !5319)
!5556 = !{i64 2147598075, i64 2147598118, i64 2147598158}
!5557 = !DILocation(line: 129, column: 1, scope: !5319)
!5558 = !{i64 2147598268, i64 2147598311, i64 2147598351}
!5559 = !DILocation(line: 130, column: 1, scope: !5319)
!5560 = !{i64 2147598451, i64 2147598494, i64 2147598534}
!5561 = !DILocation(line: 131, column: 1, scope: !5319)
!5562 = !{i64 2147598665, i64 2147598708, i64 2147598748}
!5563 = !DILocation(line: 132, column: 1, scope: !5319)
!5564 = !{i64 2147598876, i64 2147598919, i64 2147598959}
!5565 = !DILocation(line: 133, column: 1, scope: !5319)
!5566 = !{i64 2147599096, i64 2147599139, i64 2147599179}
!5567 = !DILocation(line: 134, column: 1, scope: !5319)
!5568 = !{i64 2147599303, i64 2147599346, i64 2147599386}
!5569 = !DILocation(line: 135, column: 1, scope: !5319)
!5570 = !{i64 2147603637, i64 2147603680, i64 2147603720}
!5571 = !DILocation(line: 136, column: 1, scope: !5319)
!5572 = !{i64 2147603885, i64 2147603928, i64 2147603968}
!5573 = !DILocation(line: 137, column: 1, scope: !5319)
!5574 = !{i64 2147604084, i64 2147604127, i64 2147604167}
!5575 = !DILocation(line: 138, column: 1, scope: !5319)
!5576 = !{i64 2147604319, i64 2147604362, i64 2147604402}
!5577 = !DILocation(line: 139, column: 1, scope: !5319)
!5578 = !{i64 2147604569, i64 2147604612, i64 2147604652}
!5579 = !DILocation(line: 140, column: 1, scope: !5319)
!5580 = !{i64 2147604771, i64 2147604814, i64 2147604854}
!5581 = !DILocation(line: 141, column: 1, scope: !5319)
!5582 = !{i64 2147604994, i64 2147605037, i64 2147605077}
!5583 = !DILocation(line: 142, column: 1, scope: !5319)
!5584 = !{i64 2147605208, i64 2147605251, i64 2147605291}
!5585 = !DILocation(line: 143, column: 1, scope: !5319)
!5586 = !{i64 2147605452, i64 2147605495, i64 2147605535}
!5587 = !DILocation(line: 144, column: 1, scope: !5319)
!5588 = !{i64 2147605681, i64 2147605724, i64 2147605764}
!5589 = !DILocation(line: 145, column: 1, scope: !5319)
!5590 = !{i64 2147605910, i64 2147605953, i64 2147605993}
!5591 = !DILocation(line: 146, column: 1, scope: !5319)
!5592 = !{i64 2147606118, i64 2147606161, i64 2147606201}
!5593 = !DILocation(line: 147, column: 1, scope: !5319)
!5594 = !{i64 2147606356, i64 2147606399, i64 2147606439}
!5595 = !DILocation(line: 148, column: 1, scope: !5319)
!5596 = !{i64 2147606582, i64 2147606625, i64 2147606665}
!5597 = !DILocation(line: 149, column: 1, scope: !5319)
!5598 = !{i64 2147606841, i64 2147606884, i64 2147606924}
!5599 = !DILocation(line: 150, column: 1, scope: !5319)
!5600 = !{i64 2147607061, i64 2147607104, i64 2147607144}
!5601 = !DILocation(line: 151, column: 1, scope: !5319)
!5602 = !{i64 2147607293, i64 2147607336, i64 2147607376}
!5603 = !DILocation(line: 152, column: 1, scope: !5319)
!5604 = !{i64 2147607534, i64 2147607577, i64 2147607617}
!5605 = !DILocation(line: 153, column: 1, scope: !5319)
!5606 = !{i64 2147607775, i64 2147607818, i64 2147607858}
!5607 = !DILocation(line: 154, column: 1, scope: !5319)
!5608 = !{i64 2147607998, i64 2147608041, i64 2147608081}
!5609 = !DILocation(line: 155, column: 1, scope: !5319)
!5610 = !{i64 2147608215, i64 2147608258, i64 2147608298}
!5611 = !DILocation(line: 156, column: 1, scope: !5319)
!5612 = !{i64 2147608456, i64 2147608499, i64 2147608539}
!5613 = !DILocation(line: 157, column: 1, scope: !5319)
!5614 = !{i64 2147608643, i64 2147608686, i64 2147608726}
!5615 = !DILocation(line: 158, column: 1, scope: !5319)
!5616 = !{i64 2147608830, i64 2147608873, i64 2147608913}
!5617 = !DILocation(line: 159, column: 1, scope: !5319)
!5618 = !{i64 2147608993, i64 2147609036, i64 2147609076}
!5619 = !DILocation(line: 160, column: 1, scope: !5319)
!5620 = !{i64 2147609252, i64 2147609295, i64 2147609335}
!5621 = !DILocation(line: 161, column: 1, scope: !5319)
!5622 = !{i64 2147609475, i64 2147609518, i64 2147609558}
!5623 = !DILocation(line: 162, column: 1, scope: !5319)
!5624 = !{i64 2147609704, i64 2147609747, i64 2147609787}
!5625 = !DILocation(line: 163, column: 1, scope: !5319)
!5626 = !{i64 2147609900, i64 2147609943, i64 2147609983}
!5627 = !DILocation(line: 164, column: 1, scope: !5319)
!5628 = !{i64 2147610112, i64 2147610155, i64 2147610195}
!5629 = !DILocation(line: 165, column: 1, scope: !5319)
!5630 = !{i64 2147610333, i64 2147610376, i64 2147610416}
!5631 = !DILocation(line: 166, column: 1, scope: !5319)
!5632 = !{i64 2147610547, i64 2147610590, i64 2147610630}
!5633 = !DILocation(line: 167, column: 1, scope: !5319)
!5634 = !{i64 2147610737, i64 2147610780, i64 2147610820}
!5635 = !DILocation(line: 168, column: 1, scope: !5319)
!5636 = !{i64 2147610936, i64 2147610979, i64 2147611019}
!5637 = !DILocation(line: 169, column: 1, scope: !5319)
!5638 = !{i64 2147611141, i64 2147611184, i64 2147611224}
!5639 = !DILocation(line: 170, column: 1, scope: !5319)
!5640 = !{i64 2147611361, i64 2147611404, i64 2147611444}
!5641 = !DILocation(line: 171, column: 1, scope: !5319)
!5642 = !{i64 2147611562, i64 2147611605, i64 2147611645}
!5643 = !DILocation(line: 172, column: 1, scope: !5319)
!5644 = !{i64 2147611761, i64 2147611804, i64 2147611844}
!5645 = !DILocation(line: 173, column: 1, scope: !5319)
!5646 = !{i64 2147616027, i64 2147616070, i64 2147616110}
!5647 = !DILocation(line: 174, column: 1, scope: !5319)
!5648 = !{i64 2147616196, i64 2147616239, i64 2147616279}
!5649 = !DILocation(line: 175, column: 1, scope: !5319)
!5650 = !{i64 2147616380, i64 2147616423, i64 2147616463}
!5651 = !DILocation(line: 176, column: 1, scope: !5319)
!5652 = !{i64 2147616564, i64 2147616607, i64 2147616647}
!5653 = !DILocation(line: 177, column: 1, scope: !5319)
!5654 = !{i64 2147616751, i64 2147616794, i64 2147616834}
!5655 = !DILocation(line: 178, column: 1, scope: !5319)
!5656 = !{i64 2147616935, i64 2147616978, i64 2147617018}
!5657 = !DILocation(line: 179, column: 1, scope: !5319)
!5658 = !{i64 2147617173, i64 2147617216, i64 2147617256}
!5659 = !DILocation(line: 180, column: 1, scope: !5319)
!5660 = !{i64 2147617403, i64 2147617446, i64 2147617486}
!5661 = !DILocation(line: 181, column: 1, scope: !5319)
!5662 = !{i64 2147617632, i64 2147617675, i64 2147617715}
!5663 = !DILocation(line: 182, column: 1, scope: !5319)
!5664 = !{i64 2147617819, i64 2147617862, i64 2147617902}
!5665 = !DILocation(line: 183, column: 1, scope: !5319)
!5666 = !{i64 2147618015, i64 2147618058, i64 2147618098}
!5667 = !DILocation(line: 184, column: 1, scope: !5319)
!5668 = !{i64 2147618223, i64 2147618266, i64 2147618306}
!5669 = !DILocation(line: 185, column: 1, scope: !5319)
!5670 = !{i64 2147618435, i64 2147618478, i64 2147618518}
!5671 = !DILocation(line: 186, column: 1, scope: !5319)
!5672 = !{i64 2147618634, i64 2147618677, i64 2147618717}
!5673 = !DILocation(line: 187, column: 1, scope: !5319)
!5674 = !{i64 2147618872, i64 2147618915, i64 2147618955}
!5675 = !DILocation(line: 188, column: 1, scope: !5319)
!5676 = !{i64 2147619068, i64 2147619111, i64 2147619151}
!5677 = !DILocation(line: 189, column: 1, scope: !5319)
!5678 = !{i64 2147619270, i64 2147619313, i64 2147619353}
!5679 = !DILocation(line: 190, column: 1, scope: !5319)
!5680 = !{i64 2147619463, i64 2147619506, i64 2147619546}
!5681 = !DILocation(line: 191, column: 1, scope: !5319)
!5682 = !{i64 2147619697, i64 2147619740, i64 2147619780}
!5683 = !DILocation(line: 192, column: 1, scope: !5319)
!5684 = !{i64 2147619860, i64 2147619903, i64 2147619943}
!5685 = !DILocation(line: 193, column: 1, scope: !5319)
!5686 = !{i64 2147620099, i64 2147620142, i64 2147620182}
!5687 = !DILocation(line: 194, column: 1, scope: !5319)
!5688 = !{i64 2147620338, i64 2147620381, i64 2147620421}
!5689 = !DILocation(line: 195, column: 1, scope: !5319)
!5690 = !{i64 2147620574, i64 2147620617, i64 2147620657}
!5691 = !DILocation(line: 196, column: 1, scope: !5319)
!5692 = !{i64 2147620804, i64 2147620847, i64 2147620887}
!5693 = !DILocation(line: 197, column: 1, scope: !5319)
!5694 = !{i64 2147620991, i64 2147621034, i64 2147621074}
!5695 = !DILocation(line: 198, column: 1, scope: !5319)
!5696 = !{i64 2147621190, i64 2147621233, i64 2147621273}
!5697 = !DILocation(line: 199, column: 1, scope: !5319)
!5698 = !{i64 2147621461, i64 2147621504, i64 2147621544}
!5699 = !DILocation(line: 200, column: 1, scope: !5319)
!5700 = !{i64 2147621636, i64 2147621679, i64 2147621719}
!5701 = !DILocation(line: 201, column: 1, scope: !5319)
!5702 = !{i64 2147621870, i64 2147621913, i64 2147621953}
!5703 = !DILocation(line: 202, column: 1, scope: !5319)
!5704 = !{i64 2147622078, i64 2147622121, i64 2147622161}
!5705 = !DILocation(line: 203, column: 1, scope: !5319)
!5706 = !{i64 2147622296, i64 2147622339, i64 2147622379}
!5707 = !DILocation(line: 204, column: 1, scope: !5319)
!5708 = !{i64 2147622486, i64 2147622529, i64 2147622569}
!5709 = !DILocation(line: 205, column: 1, scope: !5319)
!5710 = !{i64 2147622682, i64 2147622725, i64 2147622765}
!5711 = !DILocation(line: 206, column: 1, scope: !5319)
!5712 = !{i64 2147622888, i64 2147622931, i64 2147622971}
!5713 = !DILocation(line: 207, column: 1, scope: !5319)
!5714 = !{i64 2147623093, i64 2147623136, i64 2147623176}
!5715 = !DILocation(line: 208, column: 1, scope: !5319)
!5716 = !{i64 2147623319, i64 2147623362, i64 2147623402}
!5717 = !DILocation(line: 209, column: 1, scope: !5319)
!5718 = !{i64 2147623551, i64 2147623594, i64 2147623634}
!5719 = !DILocation(line: 210, column: 1, scope: !5319)
!5720 = !{i64 2147623735, i64 2147623778, i64 2147623818}
!5721 = !DILocation(line: 211, column: 1, scope: !5319)
!5722 = !{i64 2147623944, i64 2147623987, i64 2147624027}
!5723 = !DILocation(line: 212, column: 1, scope: !5319)
!5724 = !{i64 2147624128, i64 2147624171, i64 2147624211}
!5725 = !DILocation(line: 213, column: 1, scope: !5319)
!5726 = !{i64 2147624354, i64 2147624397, i64 2147624437}
!5727 = !DILocation(line: 214, column: 1, scope: !5319)
!5728 = !{i64 2147624580, i64 2147624623, i64 2147624663}
!5729 = !DILocation(line: 215, column: 1, scope: !5319)
!5730 = !{i64 2147624806, i64 2147624849, i64 2147624889}
!5731 = !DILocation(line: 216, column: 1, scope: !5319)
!5732 = !{i64 2147625032, i64 2147625075, i64 2147625115}
!5733 = !DILocation(line: 217, column: 1, scope: !5319)
!5734 = !{i64 2147629319, i64 2147629362, i64 2147629402}
!5735 = !DILocation(line: 218, column: 1, scope: !5319)
!5736 = !{i64 2147629551, i64 2147629594, i64 2147629634}
!5737 = !DILocation(line: 219, column: 1, scope: !5319)
!5738 = !{i64 2147629789, i64 2147629832, i64 2147629872}
!5739 = !DILocation(line: 220, column: 1, scope: !5319)
!5740 = !{i64 2147630009, i64 2147630052, i64 2147630092}
!5741 = !DILocation(line: 221, column: 1, scope: !5319)
!5742 = !{i64 2147630253, i64 2147630296, i64 2147630336}
!5743 = !DILocation(line: 222, column: 1, scope: !5319)
!5744 = !{i64 2147630494, i64 2147630537, i64 2147630577}
!5745 = !DILocation(line: 223, column: 1, scope: !5319)
!5746 = !{i64 2147630729, i64 2147630772, i64 2147630812}
!5747 = !DILocation(line: 224, column: 1, scope: !5319)
!5748 = !{i64 2147630961, i64 2147631004, i64 2147631044}
!5749 = !DILocation(line: 225, column: 1, scope: !5319)
!5750 = !{i64 2147631163, i64 2147631206, i64 2147631246}
!5751 = !DILocation(line: 226, column: 1, scope: !5319)
!5752 = !{i64 2147631413, i64 2147631456, i64 2147631496}
!5753 = !DILocation(line: 227, column: 1, scope: !5319)
!5754 = !{i64 2147631651, i64 2147631694, i64 2147631734}
!5755 = !DILocation(line: 228, column: 1, scope: !5319)
!5756 = !{i64 2147631835, i64 2147631878, i64 2147631918}
!5757 = !DILocation(line: 229, column: 1, scope: !5319)
!5758 = !{i64 2147632058, i64 2147632101, i64 2147632141}
!5759 = !DILocation(line: 230, column: 1, scope: !5319)
!5760 = !{i64 2147632296, i64 2147632339, i64 2147632379}
!5761 = !DILocation(line: 231, column: 1, scope: !5319)
!5762 = !{i64 2147632534, i64 2147632577, i64 2147632617}
!5763 = !DILocation(line: 232, column: 1, scope: !5319)
!5764 = !{i64 2147632727, i64 2147632770, i64 2147632810}
!5765 = !DILocation(line: 233, column: 1, scope: !5319)
!5766 = !{i64 2147632980, i64 2147633023, i64 2147633063}
!5767 = !DILocation(line: 234, column: 1, scope: !5319)
!5768 = !{i64 2147633194, i64 2147633237, i64 2147633277}
!5769 = !DILocation(line: 235, column: 1, scope: !5319)
!5770 = !{i64 2147633402, i64 2147633445, i64 2147633485}
!5771 = !DILocation(line: 236, column: 1, scope: !5319)
!5772 = !{i64 2147633592, i64 2147633635, i64 2147633675}
!5773 = !DILocation(line: 237, column: 1, scope: !5319)
!5774 = !{i64 2147633806, i64 2147633849, i64 2147633889}
!5775 = !DILocation(line: 238, column: 1, scope: !5319)
!5776 = !{i64 2147634068, i64 2147634111, i64 2147634151}
!5777 = !DILocation(line: 239, column: 1, scope: !5319)
!5778 = !{i64 2147634279, i64 2147634322, i64 2147634362}
!5779 = !DILocation(line: 240, column: 1, scope: !5319)
!5780 = !{i64 2147634523, i64 2147634566, i64 2147634606}
!5781 = !DILocation(line: 241, column: 1, scope: !5319)
!5782 = !{i64 2147634734, i64 2147634777, i64 2147634817}
!5783 = !DILocation(line: 242, column: 1, scope: !5319)
!5784 = !{i64 2147634963, i64 2147635006, i64 2147635046}
!5785 = !DILocation(line: 243, column: 1, scope: !5319)
!5786 = !{i64 2147635228, i64 2147635271, i64 2147635311}
!5787 = !DILocation(line: 244, column: 1, scope: !5319)
!5788 = !{i64 2147635433, i64 2147635476, i64 2147635516}
!5789 = !DILocation(line: 245, column: 1, scope: !5319)
!5790 = !{i64 2147635629, i64 2147635672, i64 2147635712}
!5791 = !DILocation(line: 246, column: 1, scope: !5319)
!5792 = !{i64 2147635852, i64 2147635895, i64 2147635935}
!5793 = !DILocation(line: 247, column: 1, scope: !5319)
!5794 = !{i64 2147636015, i64 2147636058, i64 2147636098}
!5795 = !DILocation(line: 248, column: 1, scope: !5319)
!5796 = !{i64 2147636220, i64 2147636263, i64 2147636303}
!5797 = !DILocation(line: 249, column: 1, scope: !5319)
!5798 = !{i64 2147636440, i64 2147636483, i64 2147636523}
!5799 = !DILocation(line: 250, column: 1, scope: !5319)
!5800 = !{i64 2147636654, i64 2147636697, i64 2147636737}
!5801 = !DILocation(line: 251, column: 1, scope: !5319)
!5802 = !{i64 2147636868, i64 2147636911, i64 2147636951}
!5803 = !DILocation(line: 252, column: 1, scope: !5319)
!5804 = !{i64 2147637079, i64 2147637122, i64 2147637162}
!5805 = !DILocation(line: 253, column: 1, scope: !5319)
!5806 = !{i64 2147637272, i64 2147637315, i64 2147637355}
!5807 = !DILocation(line: 254, column: 1, scope: !5319)
!5808 = !{i64 2147637471, i64 2147637514, i64 2147637554}
!5809 = !DILocation(line: 255, column: 1, scope: !5319)
!5810 = !{i64 2147637643, i64 2147637686, i64 2147637726}
!5811 = !DILocation(line: 256, column: 1, scope: !5319)
!5812 = !{i64 2147641897, i64 2147641940, i64 2147641980}
!5813 = !DILocation(line: 257, column: 1, scope: !5319)
!5814 = !{i64 2147642093, i64 2147642136, i64 2147642176}
!5815 = !DILocation(line: 258, column: 1, scope: !5319)
!5816 = !{i64 2147642320, i64 2147642363, i64 2147642403}
!5817 = !DILocation(line: 259, column: 1, scope: !5319)
!5818 = !{i64 2147642537, i64 2147642580, i64 2147642620}
!5819 = !DILocation(line: 260, column: 1, scope: !5319)
!5820 = !{i64 2147642829, i64 2147642872, i64 2147642912}
!5821 = !DILocation(line: 261, column: 1, scope: !5319)
!5822 = !{i64 2147643061, i64 2147643104, i64 2147643144}
!5823 = !DILocation(line: 262, column: 1, scope: !5319)
!5824 = !{i64 2147643278, i64 2147643321, i64 2147643361}
!5825 = !DILocation(line: 263, column: 1, scope: !5319)
!5826 = !{i64 2147643485, i64 2147643528, i64 2147643568}
!5827 = !DILocation(line: 264, column: 1, scope: !5319)
!5828 = !{i64 2147643686, i64 2147643729, i64 2147643769}
!5829 = !DILocation(line: 265, column: 1, scope: !5319)
!5830 = !{i64 2147643918, i64 2147643961, i64 2147644001}
!5831 = !DILocation(line: 266, column: 1, scope: !5319)
!5832 = !{i64 2147644126, i64 2147644169, i64 2147644209}
!5833 = !DILocation(line: 267, column: 1, scope: !5319)
!5834 = !{i64 2147644316, i64 2147644359, i64 2147644399}
!5835 = !DILocation(line: 268, column: 1, scope: !5319)
!5836 = !{i64 2147644542, i64 2147644585, i64 2147644625}
!5837 = !DILocation(line: 269, column: 1, scope: !5319)
!5838 = !{i64 2147644731, i64 2147644774, i64 2147644814}
!5839 = !DILocation(line: 270, column: 1, scope: !5319)
!5840 = !{i64 2147645002, i64 2147645045, i64 2147645085}
!5841 = !DILocation(line: 271, column: 1, scope: !5319)
!5842 = !{i64 2147645222, i64 2147645265, i64 2147645305}
!5843 = !DILocation(line: 272, column: 1, scope: !5319)
!5844 = !{i64 2147645475, i64 2147645518, i64 2147645558}
!5845 = !DILocation(line: 273, column: 1, scope: !5319)
!5846 = !{i64 2147645683, i64 2147645726, i64 2147645766}
!5847 = !DILocation(line: 274, column: 1, scope: !5319)
!5848 = !{i64 2147645915, i64 2147645958, i64 2147645998}
!5849 = !DILocation(line: 275, column: 1, scope: !5319)
!5850 = !{i64 2147646126, i64 2147646169, i64 2147646209}
!5851 = !DILocation(line: 276, column: 1, scope: !5319)
!5852 = !{i64 2147646316, i64 2147646359, i64 2147646399}
!5853 = !DILocation(line: 277, column: 1, scope: !5319)
!5854 = !{i64 2147646530, i64 2147646573, i64 2147646613}
!5855 = !DILocation(line: 278, column: 1, scope: !5319)
!5856 = !{i64 2147646729, i64 2147646772, i64 2147646812}
!5857 = !DILocation(line: 279, column: 1, scope: !5319)
!5858 = !{i64 2147646916, i64 2147646959, i64 2147646999}
!5859 = !DILocation(line: 280, column: 1, scope: !5319)
!5860 = !{i64 2147647124, i64 2147647167, i64 2147647207}
!5861 = !DILocation(line: 281, column: 1, scope: !5319)
!5862 = !{i64 2147647353, i64 2147647396, i64 2147647436}
!5863 = !DILocation(line: 282, column: 1, scope: !5319)
!5864 = !{i64 2147647555, i64 2147647598, i64 2147647638}
!5865 = !DILocation(line: 283, column: 1, scope: !5319)
!5866 = !{i64 2147647754, i64 2147647797, i64 2147647837}
!5867 = !DILocation(line: 284, column: 1, scope: !5319)
!5868 = !{i64 2147647971, i64 2147648014, i64 2147648054}
!5869 = !DILocation(line: 286, column: 1, scope: !5319)
!5870 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !291, file: !291, line: 30, type: !298, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5871)
!5871 = !{!5872, !5873}
!5872 = !DILocalVariable(name: "arg", arg: 1, scope: !5870, file: !291, line: 30, type: !300)
!5873 = !DILocalVariable(name: "key", scope: !5870, file: !291, line: 32, type: !162)
!5874 = !DILocation(line: 0, scope: !5870)
!5875 = !DILocation(line: 37, column: 2, scope: !5870)
!5876 = !DILocation(line: 38, column: 2, scope: !5870)
!5877 = !DILocation(line: 55, column: 2, scope: !5878, inlinedAt: !5885)
!5878 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5882)
!5879 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5880 = !DISubroutineType(types: !5881)
!5881 = !{!32}
!5882 = !{!5883, !5884}
!5883 = !DILocalVariable(name: "key", scope: !5878, file: !5879, line: 44, type: !32)
!5884 = !DILocalVariable(name: "tmp", scope: !5878, file: !5879, line: 53, type: !32)
!5885 = distinct !DILocation(line: 40, column: 8, scope: !5870)
!5886 = !{i64 1826708}
!5887 = !DILocation(line: 0, scope: !5878, inlinedAt: !5885)
!5888 = !DILocalVariable(name: "key", arg: 1, scope: !5889, file: !5879, line: 84, type: !32)
!5889 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5892)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{null, !32}
!5892 = !{!5888}
!5893 = !DILocation(line: 0, scope: !5889, inlinedAt: !5894)
!5894 = distinct !DILocation(line: 47, column: 2, scope: !5870)
!5895 = !DILocation(line: 95, column: 2, scope: !5889, inlinedAt: !5894)
!5896 = !{i64 1827525}
!5897 = !DILocation(line: 51, column: 18, scope: !5870)
!5898 = !DILocation(line: 53, column: 2, scope: !5870)
!5899 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5900, file: !5900, line: 1609, type: !3113, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!5900 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5901 = !DILocation(line: 1611, column: 3, scope: !5899)
!5902 = !DILocation(line: 1612, column: 1, scope: !5899)
!5903 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5900, file: !5900, line: 1629, type: !3113, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!5904 = !DILocation(line: 1631, column: 3, scope: !5903)
!5905 = !DILocation(line: 1632, column: 1, scope: !5903)
!5906 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !321, file: !321, line: 26, type: !327, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !318, retainedNodes: !5907)
!5907 = !{!5908}
!5908 = !DILocalVariable(name: "dev", arg: 1, scope: !5906, file: !321, line: 26, type: !329)
!5909 = !DILocation(line: 0, scope: !5906)
!5910 = !DILocation(line: 68, column: 2, scope: !5906)
!5911 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5912, file: !5912, line: 57, type: !5913, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5959)
!5912 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5913 = !DISubroutineType(types: !5914)
!5914 = !{null, !32, !5915}
!5915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5916, size: 32)
!5916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5917)
!5917 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2590, line: 141, baseType: !5918)
!5918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2590, line: 97, size: 256, elements: !5919)
!5919 = !{!5920}
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5918, file: !2590, line: 107, baseType: !5921, size: 256)
!5921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2590, line: 98, size: 256, elements: !5922)
!5922 = !{!5923, !5928, !5933, !5938, !5943, !5948, !5953, !5958}
!5923 = !DIDerivedType(tag: DW_TAG_member, scope: !5921, file: !2590, line: 99, baseType: !5924, size: 32)
!5924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5921, file: !2590, line: 99, size: 32, elements: !5925)
!5925 = !{!5926, !5927}
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5924, file: !2590, line: 99, baseType: !162, size: 32)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5924, file: !2590, line: 99, baseType: !162, size: 32)
!5928 = !DIDerivedType(tag: DW_TAG_member, scope: !5921, file: !2590, line: 100, baseType: !5929, size: 32, offset: 32)
!5929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5921, file: !2590, line: 100, size: 32, elements: !5930)
!5930 = !{!5931, !5932}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5929, file: !2590, line: 100, baseType: !162, size: 32)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5929, file: !2590, line: 100, baseType: !162, size: 32)
!5933 = !DIDerivedType(tag: DW_TAG_member, scope: !5921, file: !2590, line: 101, baseType: !5934, size: 32, offset: 64)
!5934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5921, file: !2590, line: 101, size: 32, elements: !5935)
!5935 = !{!5936, !5937}
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5934, file: !2590, line: 101, baseType: !162, size: 32)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5934, file: !2590, line: 101, baseType: !162, size: 32)
!5938 = !DIDerivedType(tag: DW_TAG_member, scope: !5921, file: !2590, line: 102, baseType: !5939, size: 32, offset: 96)
!5939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5921, file: !2590, line: 102, size: 32, elements: !5940)
!5940 = !{!5941, !5942}
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5939, file: !2590, line: 102, baseType: !162, size: 32)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5939, file: !2590, line: 102, baseType: !162, size: 32)
!5943 = !DIDerivedType(tag: DW_TAG_member, scope: !5921, file: !2590, line: 103, baseType: !5944, size: 32, offset: 128)
!5944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5921, file: !2590, line: 103, size: 32, elements: !5945)
!5945 = !{!5946, !5947}
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5944, file: !2590, line: 103, baseType: !162, size: 32)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5944, file: !2590, line: 103, baseType: !162, size: 32)
!5948 = !DIDerivedType(tag: DW_TAG_member, scope: !5921, file: !2590, line: 104, baseType: !5949, size: 32, offset: 160)
!5949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5921, file: !2590, line: 104, size: 32, elements: !5950)
!5950 = !{!5951, !5952}
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5949, file: !2590, line: 104, baseType: !162, size: 32)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5949, file: !2590, line: 104, baseType: !162, size: 32)
!5953 = !DIDerivedType(tag: DW_TAG_member, scope: !5921, file: !2590, line: 105, baseType: !5954, size: 32, offset: 192)
!5954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5921, file: !2590, line: 105, size: 32, elements: !5955)
!5955 = !{!5956, !5957}
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5954, file: !2590, line: 105, baseType: !162, size: 32)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5954, file: !2590, line: 105, baseType: !162, size: 32)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5921, file: !2590, line: 106, baseType: !162, size: 32, offset: 224)
!5959 = !{!5960, !5961}
!5960 = !DILocalVariable(name: "reason", arg: 1, scope: !5911, file: !5912, line: 57, type: !32)
!5961 = !DILocalVariable(name: "esf", arg: 2, scope: !5911, file: !5912, line: 57, type: !5915)
!5962 = !DILocation(line: 0, scope: !5911)
!5963 = !DILocation(line: 63, column: 2, scope: !5911)
!5964 = !DILocation(line: 64, column: 1, scope: !5911)
!5965 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5912, file: !5912, line: 82, type: !5966, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5981)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{null, !5915, !5968}
!5968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5969, size: 32)
!5969 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !5970)
!5970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !5971)
!5971 = !{!5972, !5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5970, file: !428, line: 26, baseType: !162, size: 32)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5970, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5970, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5970, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5970, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5970, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5970, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5970, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5970, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!5981 = !{!5982, !5983, !5984}
!5982 = !DILocalVariable(name: "esf", arg: 1, scope: !5965, file: !5912, line: 82, type: !5915)
!5983 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5965, file: !5912, line: 82, type: !5968)
!5984 = !DILocalVariable(name: "reason", scope: !5965, file: !5912, line: 88, type: !32)
!5985 = !DILocation(line: 0, scope: !5965)
!5986 = !DILocation(line: 88, column: 35, scope: !5965)
!5987 = !DILocation(line: 108, column: 2, scope: !5965)
!5988 = !DILocation(line: 131, column: 1, scope: !5965)
!5989 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5912, file: !5912, line: 133, type: !5990, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5992)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{null, !102}
!5992 = !{!5993, !5994, !5995}
!5993 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5989, file: !5912, line: 133, type: !102)
!5994 = !DILocalVariable(name: "ssf_contents", scope: !5989, file: !5912, line: 135, type: !828)
!5995 = !DILocalVariable(name: "oops_esf", scope: !5989, file: !5912, line: 136, type: !5917)
!5996 = !DILocation(line: 0, scope: !5989)
!5997 = !DILocation(line: 136, column: 2, scope: !5989)
!5998 = !DILocation(line: 136, column: 15, scope: !5989)
!5999 = !DILocation(line: 139, column: 22, scope: !5989)
!6000 = !DILocation(line: 139, column: 17, scope: !5989)
!6001 = !DILocation(line: 139, column: 20, scope: !5989)
!6002 = !DILocation(line: 141, column: 2, scope: !5989)
!6003 = !DILocation(line: 142, column: 2, scope: !5989)
!6004 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6005, file: !6005, line: 40, type: !5890, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !6006)
!6005 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6006 = !{!6007}
!6007 = !DILocalVariable(name: "irq", arg: 1, scope: !6004, file: !6005, line: 40, type: !32)
!6008 = !DILocation(line: 0, scope: !6004)
!6009 = !DILocation(line: 42, column: 2, scope: !6004)
!6010 = !DILocation(line: 43, column: 1, scope: !6004)
!6011 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !497, file: !497, line: 1684, type: !6012, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !6014)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{null, !733}
!6014 = !{!6015}
!6015 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6011, file: !497, line: 1684, type: !733)
!6016 = !DILocation(line: 0, scope: !6011)
!6017 = !DILocation(line: 1686, column: 23, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6011, file: !497, line: 1686, column: 7)
!6019 = !DILocation(line: 1686, column: 7, scope: !6011)
!6020 = !DILocation(line: 1688, column: 5, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6018, file: !497, line: 1687, column: 3)
!6022 = !{i64 2150355290}
!6023 = !DILocation(line: 1689, column: 81, scope: !6021)
!6024 = !DILocation(line: 1689, column: 60, scope: !6021)
!6025 = !DILocation(line: 1689, column: 34, scope: !6021)
!6026 = !DILocation(line: 1689, column: 5, scope: !6021)
!6027 = !DILocation(line: 1689, column: 43, scope: !6021)
!6028 = !DILocation(line: 1690, column: 5, scope: !6021)
!6029 = !{i64 2150355404}
!6030 = !DILocation(line: 1691, column: 3, scope: !6021)
!6031 = !DILocation(line: 1692, column: 1, scope: !6011)
!6032 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6005, file: !6005, line: 45, type: !5890, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !6033)
!6033 = !{!6034}
!6034 = !DILocalVariable(name: "irq", arg: 1, scope: !6032, file: !6005, line: 45, type: !32)
!6035 = !DILocation(line: 0, scope: !6032)
!6036 = !DILocation(line: 47, column: 2, scope: !6032)
!6037 = !DILocation(line: 48, column: 1, scope: !6032)
!6038 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !497, file: !497, line: 1722, type: !6012, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !6039)
!6039 = !{!6040}
!6040 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6038, file: !497, line: 1722, type: !733)
!6041 = !DILocation(line: 0, scope: !6038)
!6042 = !DILocation(line: 1724, column: 23, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6038, file: !497, line: 1724, column: 7)
!6044 = !DILocation(line: 1724, column: 7, scope: !6038)
!6045 = !DILocation(line: 1726, column: 81, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6043, file: !497, line: 1725, column: 3)
!6047 = !DILocation(line: 1726, column: 60, scope: !6046)
!6048 = !DILocation(line: 1726, column: 34, scope: !6046)
!6049 = !DILocation(line: 1726, column: 5, scope: !6046)
!6050 = !DILocation(line: 1726, column: 43, scope: !6046)
!6051 = !DILocation(line: 271, column: 3, scope: !6052, inlinedAt: !6054)
!6052 = distinct !DISubprogram(name: "__DSB", scope: !6053, file: !6053, line: 269, type: !3113, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !250)
!6053 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6054 = distinct !DILocation(line: 1727, column: 5, scope: !6046)
!6055 = !{i64 2809673}
!6056 = !DILocation(line: 260, column: 3, scope: !6057, inlinedAt: !6058)
!6057 = distinct !DISubprogram(name: "__ISB", scope: !6053, file: !6053, line: 258, type: !3113, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !250)
!6058 = distinct !DILocation(line: 1728, column: 5, scope: !6046)
!6059 = !{i64 2809390}
!6060 = !DILocation(line: 1729, column: 3, scope: !6046)
!6061 = !DILocation(line: 1730, column: 1, scope: !6038)
!6062 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6005, file: !6005, line: 50, type: !6063, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !6065)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!107, !32}
!6065 = !{!6066}
!6066 = !DILocalVariable(name: "irq", arg: 1, scope: !6062, file: !6005, line: 50, type: !32)
!6067 = !DILocation(line: 0, scope: !6062)
!6068 = !DILocation(line: 52, column: 20, scope: !6062)
!6069 = !DILocation(line: 52, column: 9, scope: !6062)
!6070 = !DILocation(line: 52, column: 41, scope: !6062)
!6071 = !DILocation(line: 52, column: 39, scope: !6062)
!6072 = !DILocation(line: 52, column: 2, scope: !6062)
!6073 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6005, file: !6005, line: 64, type: !6074, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !6076)
!6074 = !DISubroutineType(types: !6075)
!6075 = !{null, !32, !32, !162}
!6076 = !{!6077, !6078, !6079}
!6077 = !DILocalVariable(name: "irq", arg: 1, scope: !6073, file: !6005, line: 64, type: !32)
!6078 = !DILocalVariable(name: "prio", arg: 2, scope: !6073, file: !6005, line: 64, type: !32)
!6079 = !DILocalVariable(name: "flags", arg: 3, scope: !6073, file: !6005, line: 64, type: !162)
!6080 = !DILocation(line: 0, scope: !6073)
!6081 = !DILocation(line: 83, column: 8, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6083, file: !6005, line: 82, column: 9)
!6083 = distinct !DILexicalBlock(scope: !6073, file: !6005, line: 76, column: 6)
!6084 = !DILocation(line: 95, column: 2, scope: !6073)
!6085 = !DILocation(line: 96, column: 1, scope: !6073)
!6086 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6087, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !6089)
!6087 = !DISubroutineType(types: !6088)
!6088 = !{null, !733, !162}
!6089 = !{!6090, !6091}
!6090 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6086, file: !497, line: 1814, type: !733)
!6091 = !DILocalVariable(name: "priority", arg: 2, scope: !6086, file: !497, line: 1814, type: !162)
!6092 = !DILocation(line: 0, scope: !6086)
!6093 = !DILocation(line: 0, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6086, file: !497, line: 1816, column: 7)
!6095 = !DILocation(line: 1816, column: 7, scope: !6086)
!6096 = !DILocation(line: 1824, column: 1, scope: !6086)
!6097 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6005, file: !6005, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !6098)
!6098 = !{!6099}
!6099 = !DILocalVariable(name: "unused", arg: 1, scope: !6097, file: !6005, line: 155, type: !13)
!6100 = !DILocation(line: 0, scope: !6097)
!6101 = !DILocation(line: 159, column: 2, scope: !6097)
!6102 = !DILocation(line: 160, column: 1, scope: !6097)
!6103 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6104, file: !6104, line: 87, type: !3113, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !250)
!6104 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6105 = !DILocation(line: 89, column: 2, scope: !6103)
!6106 = !DILocation(line: 90, column: 2, scope: !6103)
!6107 = !DILocation(line: 91, column: 1, scope: !6103)
!6108 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6104, file: !6104, line: 23, type: !3113, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6109 = !DISubprogram(name: "z_arm_int_exit", scope: !6110, file: !6110, line: 153, type: !3113, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6110 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6111 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6112, file: !6112, line: 256, type: !3113, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !250)
!6112 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6113 = !DILocation(line: 258, column: 2, scope: !6111)
!6114 = !DILocation(line: 260, column: 2, scope: !6111)
!6115 = !DILocation(line: 262, column: 2, scope: !6111)
!6116 = !DILocation(line: 263, column: 2, scope: !6111)
!6117 = !DILocation(line: 267, column: 2, scope: !6111)
!6118 = !DILocation(line: 268, column: 2, scope: !6111)
!6119 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6112, file: !6112, line: 53, type: !3113, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !250)
!6120 = !DILocation(line: 55, column: 12, scope: !6119)
!6121 = !DILocation(line: 271, column: 3, scope: !6122, inlinedAt: !6123)
!6122 = distinct !DISubprogram(name: "__DSB", scope: !6053, file: !6053, line: 269, type: !3113, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !250)
!6123 = distinct !DILocation(line: 56, column: 2, scope: !6119)
!6124 = !{i64 2808344}
!6125 = !DILocation(line: 260, column: 3, scope: !6126, inlinedAt: !6127)
!6126 = distinct !DISubprogram(name: "__ISB", scope: !6053, file: !6053, line: 258, type: !3113, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !250)
!6127 = distinct !DILocation(line: 57, column: 2, scope: !6119)
!6128 = !{i64 2808061}
!6129 = !DILocation(line: 58, column: 1, scope: !6119)
!6130 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6112, file: !6112, line: 96, type: !3113, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !250)
!6131 = !DILocation(line: 103, column: 13, scope: !6130)
!6132 = !DILocation(line: 975, column: 3, scope: !6133, inlinedAt: !6138)
!6133 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6053, file: !6053, line: 971, type: !6134, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !6136)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{!162}
!6136 = !{!6137}
!6137 = !DILocalVariable(name: "result", scope: !6133, file: !6053, line: 973, type: !162)
!6138 = distinct !DILocation(line: 189, column: 16, scope: !6130)
!6139 = !{i64 2829174}
!6140 = !DILocation(line: 0, scope: !6133, inlinedAt: !6138)
!6141 = !DILocation(line: 189, column: 32, scope: !6130)
!6142 = !DILocalVariable(name: "control", arg: 1, scope: !6143, file: !6053, line: 1001, type: !162)
!6143 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6053, file: !6053, line: 1001, type: !6144, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !6146)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !162}
!6146 = !{!6142}
!6147 = !DILocation(line: 0, scope: !6143, inlinedAt: !6148)
!6148 = distinct !DILocation(line: 189, column: 2, scope: !6130)
!6149 = !DILocation(line: 1003, column: 3, scope: !6143, inlinedAt: !6148)
!6150 = !{i64 2829894}
!6151 = !DILocation(line: 260, column: 3, scope: !6126, inlinedAt: !6152)
!6152 = distinct !DILocation(line: 1004, column: 3, scope: !6143, inlinedAt: !6148)
!6153 = !DILocation(line: 191, column: 1, scope: !6130)
!6154 = distinct !DISubprogram(name: "arch_swap", scope: !6155, file: !6155, line: 33, type: !6063, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6156)
!6155 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6156 = !{!6157}
!6157 = !DILocalVariable(name: "key", arg: 1, scope: !6154, file: !6155, line: 33, type: !32)
!6158 = !DILocation(line: 0, scope: !6154)
!6159 = !DILocation(line: 36, column: 2, scope: !6154)
!6160 = !DILocation(line: 36, column: 17, scope: !6154)
!6161 = !DILocation(line: 36, column: 25, scope: !6154)
!6162 = !DILocation(line: 37, column: 37, scope: !6154)
!6163 = !DILocation(line: 37, column: 17, scope: !6154)
!6164 = !DILocation(line: 37, column: 35, scope: !6154)
!6165 = !DILocation(line: 41, column: 12, scope: !6154)
!6166 = !DILocalVariable(name: "key", arg: 1, scope: !6167, file: !5879, line: 84, type: !32)
!6167 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6168)
!6168 = !{!6166}
!6169 = !DILocation(line: 0, scope: !6167, inlinedAt: !6170)
!6170 = distinct !DILocation(line: 44, column: 2, scope: !6154)
!6171 = !DILocation(line: 95, column: 2, scope: !6167, inlinedAt: !6170)
!6172 = !{i64 1947540}
!6173 = !DILocation(line: 53, column: 9, scope: !6154)
!6174 = !DILocation(line: 53, column: 24, scope: !6154)
!6175 = !DILocation(line: 53, column: 2, scope: !6154)
!6176 = distinct !DISubprogram(name: "arch_new_thread", scope: !6177, file: !6177, line: 56, type: !6178, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !6285)
!6177 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !6180, !6280, !256, !3653, !102, !102, !102}
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 32)
!6181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6182)
!6182 = !{!6183, !6241, !6253, !6254, !6255, !6256, !6262, !6275}
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6181, file: !359, line: 247, baseType: !6184, size: 384)
!6184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6185)
!6185 = !{!6186, !6210, !6217, !6218, !6219, !6228, !6229, !6230}
!6186 = !DIDerivedType(tag: DW_TAG_member, scope: !6184, file: !359, line: 60, baseType: !6187, size: 64)
!6187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6184, file: !359, line: 60, size: 64, elements: !6188)
!6188 = !{!6189, !6204}
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6187, file: !359, line: 61, baseType: !6190, size: 64)
!6190 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6191)
!6191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6192)
!6192 = !{!6193, !6199}
!6193 = !DIDerivedType(tag: DW_TAG_member, scope: !6191, file: !233, line: 38, baseType: !6194, size: 32)
!6194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6191, file: !233, line: 38, size: 32, elements: !6195)
!6195 = !{!6196, !6198}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6194, file: !233, line: 39, baseType: !6197, size: 32)
!6197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 32)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6194, file: !233, line: 40, baseType: !6197, size: 32)
!6199 = !DIDerivedType(tag: DW_TAG_member, scope: !6191, file: !233, line: 42, baseType: !6200, size: 32, offset: 32)
!6200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6191, file: !233, line: 42, size: 32, elements: !6201)
!6201 = !{!6202, !6203}
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6200, file: !233, line: 43, baseType: !6197, size: 32)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6200, file: !233, line: 44, baseType: !6197, size: 32)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6187, file: !359, line: 62, baseType: !6205, size: 64)
!6205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6206)
!6206 = !{!6207}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6205, file: !384, line: 50, baseType: !6208, size: 64)
!6208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6209, size: 64, elements: !389)
!6209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6205, size: 32)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6184, file: !359, line: 68, baseType: !6211, size: 32, offset: 64)
!6211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6212, size: 32)
!6212 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6213)
!6213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6214)
!6214 = !{!6215}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6213, file: !228, line: 232, baseType: !6216, size: 64)
!6216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6191)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6184, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6184, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6219 = !DIDerivedType(tag: DW_TAG_member, scope: !6184, file: !359, line: 90, baseType: !6220, size: 16, offset: 112)
!6220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6184, file: !359, line: 90, size: 16, elements: !6221)
!6221 = !{!6222, !6227}
!6222 = !DIDerivedType(tag: DW_TAG_member, scope: !6220, file: !359, line: 91, baseType: !6223, size: 16)
!6223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6220, file: !359, line: 91, size: 16, elements: !6224)
!6224 = !{!6225, !6226}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6223, file: !359, line: 96, baseType: !407, size: 8)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6223, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6220, file: !359, line: 100, baseType: !411, size: 16)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6184, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6184, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6184, file: !359, line: 131, baseType: !6231, size: 192, offset: 192)
!6231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6232)
!6232 = !{!6233, !6234, !6240}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6231, file: !228, line: 245, baseType: !6190, size: 64)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6231, file: !228, line: 246, baseType: !6235, size: 32, offset: 64)
!6235 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6236)
!6236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6237, size: 32)
!6237 = !DISubroutineType(types: !6238)
!6238 = !{null, !6239}
!6239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6231, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6181, file: !359, line: 250, baseType: !6242, size: 288, offset: 384)
!6242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6243)
!6243 = !{!6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251, !6252}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6242, file: !428, line: 26, baseType: !162, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6242, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6242, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6242, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6242, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6242, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6242, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6242, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6242, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6181, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6181, file: !359, line: 256, baseType: !6212, size: 64, offset: 704)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6181, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6181, file: !359, line: 300, baseType: !6257, size: 96, offset: 800)
!6257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6258)
!6258 = !{!6259, !6260, !6261}
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6257, file: !359, line: 153, baseType: !22, size: 32)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6257, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6257, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6181, file: !359, line: 325, baseType: !6263, size: 32, offset: 896)
!6263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 32)
!6264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6265)
!6265 = !{!6266, !6272, !6273}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6264, file: !224, line: 5074, baseType: !6267, size: 96)
!6267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6268)
!6268 = !{!6269, !6270, !6271}
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6267, file: !454, line: 57, baseType: !457, size: 32)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6267, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6267, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6264, file: !224, line: 5075, baseType: !6212, size: 64, offset: 96)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6264, file: !224, line: 5076, baseType: !6274, offset: 160)
!6274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6181, file: !359, line: 343, baseType: !6276, size: 64, offset: 928)
!6276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6277)
!6277 = !{!6278, !6279}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6276, file: !428, line: 63, baseType: !162, size: 32)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6276, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6281, size: 32)
!6281 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3654, line: 44, baseType: !6282)
!6282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2036, line: 47, size: 8, elements: !6283)
!6283 = !{!6284}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6282, file: !2036, line: 48, baseType: !125, size: 8)
!6285 = !{!6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293}
!6286 = !DILocalVariable(name: "thread", arg: 1, scope: !6176, file: !6177, line: 56, type: !6180)
!6287 = !DILocalVariable(name: "stack", arg: 2, scope: !6176, file: !6177, line: 56, type: !6280)
!6288 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6176, file: !6177, line: 57, type: !256)
!6289 = !DILocalVariable(name: "entry", arg: 4, scope: !6176, file: !6177, line: 57, type: !3653)
!6290 = !DILocalVariable(name: "p1", arg: 5, scope: !6176, file: !6177, line: 58, type: !102)
!6291 = !DILocalVariable(name: "p2", arg: 6, scope: !6176, file: !6177, line: 58, type: !102)
!6292 = !DILocalVariable(name: "p3", arg: 7, scope: !6176, file: !6177, line: 58, type: !102)
!6293 = !DILocalVariable(name: "iframe", scope: !6176, file: !6177, line: 60, type: !2588)
!6294 = !DILocation(line: 0, scope: !6176)
!6295 = !DILocation(line: 85, column: 11, scope: !6176)
!6296 = !DILocation(line: 93, column: 10, scope: !6176)
!6297 = !DILocation(line: 98, column: 13, scope: !6176)
!6298 = !DILocation(line: 100, column: 15, scope: !6176)
!6299 = !DILocation(line: 100, column: 10, scope: !6176)
!6300 = !DILocation(line: 100, column: 13, scope: !6176)
!6301 = !DILocation(line: 101, column: 15, scope: !6176)
!6302 = !DILocation(line: 101, column: 10, scope: !6176)
!6303 = !DILocation(line: 101, column: 13, scope: !6176)
!6304 = !DILocation(line: 102, column: 15, scope: !6176)
!6305 = !DILocation(line: 102, column: 10, scope: !6176)
!6306 = !DILocation(line: 102, column: 13, scope: !6176)
!6307 = !DILocation(line: 103, column: 15, scope: !6176)
!6308 = !DILocation(line: 103, column: 10, scope: !6176)
!6309 = !DILocation(line: 103, column: 13, scope: !6176)
!6310 = !DILocation(line: 106, column: 10, scope: !6176)
!6311 = !DILocation(line: 106, column: 15, scope: !6176)
!6312 = !DILocation(line: 122, column: 29, scope: !6176)
!6313 = !DILocation(line: 122, column: 23, scope: !6176)
!6314 = !DILocation(line: 122, column: 27, scope: !6176)
!6315 = !DILocation(line: 123, column: 15, scope: !6176)
!6316 = !DILocation(line: 123, column: 23, scope: !6176)
!6317 = !DILocation(line: 143, column: 1, scope: !6176)
!6318 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6177, file: !6177, line: 385, type: !6319, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !6322)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!162, !6321, !6321}
!6321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!6322 = !{!6323, !6324, !6325, !6328}
!6323 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6318, file: !6177, line: 385, type: !6321)
!6324 = !DILocalVariable(name: "psp", arg: 2, scope: !6318, file: !6177, line: 385, type: !6321)
!6325 = !DILocalVariable(name: "thread", scope: !6318, file: !6177, line: 388, type: !6326)
!6326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6327, size: 32)
!6327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6181)
!6328 = !DILocalVariable(name: "guard_len", scope: !6318, file: !6177, line: 405, type: !162)
!6329 = !DILocation(line: 0, scope: !6318)
!6330 = !DILocation(line: 388, column: 34, scope: !6318)
!6331 = !DILocation(line: 390, column: 13, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6318, file: !6177, line: 390, column: 6)
!6333 = !DILocation(line: 390, column: 6, scope: !6318)
!6334 = !DILocation(line: 438, column: 6, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6318, file: !6177, line: 438, column: 6)
!6336 = !DILocation(line: 438, column: 6, scope: !6318)
!6337 = !DILocation(line: 442, column: 3, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6335, file: !6177, line: 440, column: 22)
!6339 = !DILocation(line: 455, column: 1, scope: !6318)
!6340 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6177, file: !6177, line: 530, type: !6341, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !6343)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{null, !6180, !256, !3653}
!6343 = !{!6344, !6345, !6346}
!6344 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6340, file: !6177, line: 530, type: !6180)
!6345 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6340, file: !6177, line: 530, type: !256)
!6346 = !DILocalVariable(name: "_main", arg: 3, scope: !6340, file: !6177, line: 531, type: !3653)
!6347 = !DILocation(line: 0, scope: !6340)
!6348 = !DILocation(line: 535, column: 11, scope: !6340)
!6349 = !DILocation(line: 560, column: 2, scope: !6340)
!6350 = !DILocation(line: 576, column: 2, scope: !6340)
!6351 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6352 = !DILocation(line: 603, column: 2, scope: !6340)
!6353 = distinct !DISubprogram(name: "z_arm_fault", scope: !6354, file: !6354, line: 1036, type: !6355, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6370)
!6354 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6355 = !DISubroutineType(types: !6356)
!6356 = !{null, !162, !162, !162, !6357}
!6357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6358, size: 32)
!6358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6359)
!6359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6360)
!6360 = !{!6361, !6362, !6363, !6364, !6365, !6366, !6367, !6368, !6369}
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6359, file: !428, line: 26, baseType: !162, size: 32)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6359, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6359, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6359, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6359, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6359, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6359, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6359, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6359, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6370 = !{!6371, !6372, !6373, !6374, !6375, !6376, !6377, !6378, !6379, !6380}
!6371 = !DILocalVariable(name: "msp", arg: 1, scope: !6353, file: !6354, line: 1036, type: !162)
!6372 = !DILocalVariable(name: "psp", arg: 2, scope: !6353, file: !6354, line: 1036, type: !162)
!6373 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6353, file: !6354, line: 1036, type: !162)
!6374 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6353, file: !6354, line: 1037, type: !6357)
!6375 = !DILocalVariable(name: "reason", scope: !6353, file: !6354, line: 1039, type: !162)
!6376 = !DILocalVariable(name: "fault", scope: !6353, file: !6354, line: 1040, type: !107)
!6377 = !DILocalVariable(name: "recoverable", scope: !6353, file: !6354, line: 1041, type: !136)
!6378 = !DILocalVariable(name: "nested_exc", scope: !6353, file: !6354, line: 1041, type: !136)
!6379 = !DILocalVariable(name: "esf", scope: !6353, file: !6354, line: 1042, type: !2656)
!6380 = !DILocalVariable(name: "esf_copy", scope: !6353, file: !6354, line: 1047, type: !2657)
!6381 = !DILocation(line: 0, scope: !6353)
!6382 = !DILocation(line: 1040, column: 19, scope: !6353)
!6383 = !DILocation(line: 1040, column: 24, scope: !6353)
!6384 = !DILocation(line: 1041, column: 2, scope: !6353)
!6385 = !DILocation(line: 1047, column: 2, scope: !6353)
!6386 = !DILocation(line: 1047, column: 15, scope: !6353)
!6387 = !DILocalVariable(name: "key", arg: 1, scope: !6388, file: !5879, line: 84, type: !32)
!6388 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6389)
!6389 = !{!6387}
!6390 = !DILocation(line: 0, scope: !6388, inlinedAt: !6391)
!6391 = distinct !DILocation(line: 1050, column: 2, scope: !6353)
!6392 = !DILocation(line: 95, column: 2, scope: !6388, inlinedAt: !6391)
!6393 = !{i64 1980784}
!6394 = !DILocation(line: 1055, column: 9, scope: !6353)
!6395 = !DILocation(line: 1063, column: 11, scope: !6353)
!6396 = !DILocation(line: 1064, column: 6, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6353, file: !6354, line: 1064, column: 6)
!6398 = !{i8 0, i8 2}
!6399 = !DILocation(line: 1064, column: 6, scope: !6353)
!6400 = !DILocation(line: 1070, column: 20, scope: !6353)
!6401 = !DILocation(line: 1070, column: 2, scope: !6353)
!6402 = !DILocation(line: 1089, column: 6, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6353, file: !6354, line: 1089, column: 6)
!6404 = !DILocation(line: 0, scope: !6403)
!6405 = !DILocation(line: 1089, column: 6, scope: !6353)
!6406 = !DILocation(line: 1090, column: 28, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6408, file: !6354, line: 1090, column: 7)
!6408 = distinct !DILexicalBlock(scope: !6403, file: !6354, line: 1089, column: 18)
!6409 = !DILocation(line: 1090, column: 44, scope: !6407)
!6410 = !DILocation(line: 1090, column: 7, scope: !6408)
!6411 = !DILocation(line: 1091, column: 24, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6407, file: !6354, line: 1090, column: 50)
!6413 = !DILocation(line: 1092, column: 3, scope: !6412)
!6414 = !DILocation(line: 1094, column: 23, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6403, file: !6354, line: 1093, column: 9)
!6416 = !DILocation(line: 1097, column: 2, scope: !6353)
!6417 = !DILocation(line: 1098, column: 1, scope: !6353)
!6418 = distinct !DISubprogram(name: "get_esf", scope: !6354, file: !6354, line: 894, type: !6419, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6422)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{!2656, !162, !162, !162, !6421}
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!6422 = !{!6423, !6424, !6425, !6426, !6427, !6428}
!6423 = !DILocalVariable(name: "msp", arg: 1, scope: !6418, file: !6354, line: 894, type: !162)
!6424 = !DILocalVariable(name: "psp", arg: 2, scope: !6418, file: !6354, line: 894, type: !162)
!6425 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6418, file: !6354, line: 894, type: !162)
!6426 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6418, file: !6354, line: 895, type: !6421)
!6427 = !DILocalVariable(name: "alternative_state_exc", scope: !6418, file: !6354, line: 897, type: !136)
!6428 = !DILocalVariable(name: "ptr_esf", scope: !6418, file: !6354, line: 898, type: !2656)
!6429 = !DILocation(line: 0, scope: !6418)
!6430 = !DILocation(line: 900, column: 14, scope: !6418)
!6431 = !DILocation(line: 902, column: 49, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6418, file: !6354, line: 902, column: 6)
!6433 = !DILocation(line: 902, column: 6, scope: !6418)
!6434 = !DILocation(line: 983, column: 18, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6418, file: !6354, line: 983, column: 6)
!6436 = !DILocation(line: 991, column: 7, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !6354, line: 990, column: 30)
!6438 = distinct !DILexicalBlock(scope: !6418, file: !6354, line: 990, column: 6)
!6439 = !DILocation(line: 998, column: 16, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6441, file: !6354, line: 995, column: 10)
!6441 = distinct !DILexicalBlock(scope: !6437, file: !6354, line: 991, column: 7)
!6442 = !DILocation(line: 1002, column: 2, scope: !6418)
!6443 = !DILocation(line: 1003, column: 1, scope: !6418)
!6444 = distinct !DISubprogram(name: "fault_handle", scope: !6354, file: !6354, line: 786, type: !6445, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6447)
!6445 = !DISubroutineType(types: !6446)
!6446 = !{!162, !2656, !107, !6421}
!6447 = !{!6448, !6449, !6450, !6451}
!6448 = !DILocalVariable(name: "esf", arg: 1, scope: !6444, file: !6354, line: 786, type: !2656)
!6449 = !DILocalVariable(name: "fault", arg: 2, scope: !6444, file: !6354, line: 786, type: !107)
!6450 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6444, file: !6354, line: 786, type: !6421)
!6451 = !DILocalVariable(name: "reason", scope: !6444, file: !6354, line: 788, type: !162)
!6452 = !DILocation(line: 0, scope: !6444)
!6453 = !DILocation(line: 790, column: 15, scope: !6444)
!6454 = !DILocation(line: 792, column: 2, scope: !6444)
!6455 = !DILocation(line: 794, column: 12, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6444, file: !6354, line: 792, column: 17)
!6457 = !DILocation(line: 795, column: 3, scope: !6456)
!6458 = !DILocation(line: 800, column: 12, scope: !6456)
!6459 = !DILocation(line: 801, column: 3, scope: !6456)
!6460 = !DILocation(line: 803, column: 12, scope: !6456)
!6461 = !DILocation(line: 804, column: 3, scope: !6456)
!6462 = !DILocation(line: 806, column: 12, scope: !6456)
!6463 = !DILocation(line: 807, column: 3, scope: !6456)
!6464 = !DILocation(line: 814, column: 3, scope: !6456)
!6465 = !DILocation(line: 815, column: 3, scope: !6456)
!6466 = !DILocation(line: 829, column: 2, scope: !6444)
!6467 = distinct !DISubprogram(name: "hard_fault", scope: !6354, file: !6354, line: 709, type: !6468, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6470)
!6468 = !DISubroutineType(types: !6469)
!6469 = !{!162, !2656, !6421}
!6470 = !{!6471, !6472, !6473}
!6471 = !DILocalVariable(name: "esf", arg: 1, scope: !6467, file: !6354, line: 709, type: !2656)
!6472 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6467, file: !6354, line: 709, type: !6421)
!6473 = !DILocalVariable(name: "reason", scope: !6467, file: !6354, line: 711, type: !162)
!6474 = !DILocation(line: 0, scope: !6467)
!6475 = !DILocation(line: 732, column: 15, scope: !6467)
!6476 = !DILocation(line: 734, column: 12, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6467, file: !6354, line: 734, column: 6)
!6478 = !DILocation(line: 734, column: 17, scope: !6477)
!6479 = !DILocation(line: 734, column: 41, scope: !6477)
!6480 = !DILocation(line: 734, column: 6, scope: !6467)
!6481 = !DILocation(line: 736, column: 19, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6477, file: !6354, line: 736, column: 13)
!6483 = !DILocation(line: 736, column: 49, scope: !6482)
!6484 = !DILocation(line: 736, column: 13, scope: !6477)
!6485 = !DILocation(line: 738, column: 19, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !6354, line: 738, column: 13)
!6487 = !DILocation(line: 738, column: 24, scope: !6486)
!6488 = !DILocation(line: 738, column: 47, scope: !6486)
!6489 = !DILocation(line: 738, column: 13, scope: !6482)
!6490 = !DILocation(line: 740, column: 7, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !6354, line: 740, column: 7)
!6492 = distinct !DILexicalBlock(scope: !6486, file: !6354, line: 738, column: 53)
!6493 = !DILocation(line: 740, column: 7, scope: !6492)
!6494 = !DILocation(line: 742, column: 24, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6491, file: !6354, line: 740, column: 38)
!6496 = !DILocation(line: 743, column: 3, scope: !6495)
!6497 = !DILocation(line: 743, column: 20, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6491, file: !6354, line: 743, column: 14)
!6499 = !DILocation(line: 743, column: 25, scope: !6498)
!6500 = !DILocation(line: 743, column: 52, scope: !6498)
!6501 = !DILocation(line: 743, column: 14, scope: !6491)
!6502 = !DILocation(line: 744, column: 13, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6498, file: !6354, line: 743, column: 58)
!6504 = !DILocation(line: 745, column: 3, scope: !6503)
!6505 = !DILocation(line: 745, column: 20, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6498, file: !6354, line: 745, column: 14)
!6507 = !DILocation(line: 745, column: 25, scope: !6506)
!6508 = !DILocation(line: 745, column: 52, scope: !6506)
!6509 = !DILocation(line: 745, column: 14, scope: !6498)
!6510 = !DILocation(line: 746, column: 13, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6506, file: !6354, line: 745, column: 58)
!6512 = !DILocation(line: 747, column: 3, scope: !6511)
!6513 = !DILocation(line: 747, column: 20, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6506, file: !6354, line: 747, column: 14)
!6515 = !DILocation(line: 747, column: 52, scope: !6514)
!6516 = !DILocation(line: 747, column: 14, scope: !6506)
!6517 = !DILocation(line: 748, column: 13, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6514, file: !6354, line: 747, column: 58)
!6519 = !DILocation(line: 753, column: 3, scope: !6518)
!6520 = !DILocation(line: 766, column: 2, scope: !6467)
!6521 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6354, file: !6354, line: 229, type: !6445, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6522)
!6522 = !{!6523, !6524, !6525, !6526, !6527, !6528, !6531}
!6523 = !DILocalVariable(name: "esf", arg: 1, scope: !6521, file: !6354, line: 229, type: !2656)
!6524 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6521, file: !6354, line: 229, type: !107)
!6525 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6521, file: !6354, line: 230, type: !6421)
!6526 = !DILocalVariable(name: "reason", scope: !6521, file: !6354, line: 232, type: !162)
!6527 = !DILocalVariable(name: "mmfar", scope: !6521, file: !6354, line: 233, type: !162)
!6528 = !DILocalVariable(name: "temp", scope: !6529, file: !6354, line: 254, type: !162)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !6354, line: 244, column: 48)
!6530 = distinct !DILexicalBlock(scope: !6521, file: !6354, line: 244, column: 6)
!6531 = !DILocalVariable(name: "min_stack_ptr", scope: !6532, file: !6354, line: 309, type: !162)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !6354, line: 308, column: 43)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !6354, line: 308, column: 7)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !6354, line: 289, column: 40)
!6535 = distinct !DILexicalBlock(scope: !6521, file: !6354, line: 288, column: 6)
!6536 = !DILocation(line: 0, scope: !6521)
!6537 = !DILocation(line: 237, column: 12, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6521, file: !6354, line: 237, column: 6)
!6539 = !DILocation(line: 241, column: 12, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6521, file: !6354, line: 241, column: 6)
!6541 = !DILocation(line: 244, column: 12, scope: !6530)
!6542 = !DILocation(line: 244, column: 17, scope: !6530)
!6543 = !DILocation(line: 244, column: 42, scope: !6530)
!6544 = !DILocation(line: 244, column: 6, scope: !6521)
!6545 = !DILocation(line: 254, column: 24, scope: !6529)
!6546 = !DILocation(line: 0, scope: !6529)
!6547 = !DILocation(line: 256, column: 13, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6529, file: !6354, line: 256, column: 7)
!6549 = !DILocation(line: 256, column: 18, scope: !6548)
!6550 = !DILocation(line: 256, column: 44, scope: !6548)
!6551 = !DILocation(line: 256, column: 7, scope: !6529)
!6552 = !DILocation(line: 259, column: 24, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !6354, line: 259, column: 8)
!6554 = distinct !DILexicalBlock(scope: !6548, file: !6354, line: 256, column: 50)
!6555 = !DILocation(line: 259, column: 8, scope: !6554)
!6556 = !DILocation(line: 261, column: 15, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6553, file: !6354, line: 259, column: 30)
!6558 = !DILocation(line: 262, column: 4, scope: !6557)
!6559 = !DILocation(line: 265, column: 12, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6521, file: !6354, line: 265, column: 6)
!6561 = !DILocation(line: 269, column: 12, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6521, file: !6354, line: 269, column: 6)
!6563 = !DILocation(line: 288, column: 12, scope: !6535)
!6564 = !DILocation(line: 288, column: 17, scope: !6535)
!6565 = !DILocation(line: 288, column: 41, scope: !6535)
!6566 = !DILocation(line: 289, column: 9, scope: !6535)
!6567 = !DILocation(line: 289, column: 14, scope: !6535)
!6568 = !DILocation(line: 288, column: 6, scope: !6521)
!6569 = !DILocation(line: 308, column: 12, scope: !6533)
!6570 = !DILocation(line: 308, column: 17, scope: !6533)
!6571 = !DILocation(line: 308, column: 7, scope: !6534)
!6572 = !DILocation(line: 310, column: 6, scope: !6532)
!6573 = !DILocation(line: 309, column: 29, scope: !6532)
!6574 = !DILocation(line: 0, scope: !6532)
!6575 = !DILocation(line: 312, column: 8, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6532, file: !6354, line: 312, column: 8)
!6577 = !DILocation(line: 312, column: 8, scope: !6532)
!6578 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6579, file: !6053, line: 1099, type: !162)
!6579 = distinct !DISubprogram(name: "__set_PSP", scope: !6053, file: !6053, line: 1099, type: !6144, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6580)
!6580 = !{!6578}
!6581 = !DILocation(line: 0, scope: !6579, inlinedAt: !6582)
!6582 = distinct !DILocation(line: 338, column: 5, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6576, file: !6354, line: 312, column: 23)
!6584 = !DILocation(line: 1101, column: 3, scope: !6579, inlinedAt: !6582)
!6585 = !{i64 2859313}
!6586 = !DILocation(line: 341, column: 4, scope: !6583)
!6587 = !DILocation(line: 360, column: 12, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6521, file: !6354, line: 360, column: 6)
!6589 = !DILocation(line: 360, column: 17, scope: !6588)
!6590 = !DILocation(line: 360, column: 41, scope: !6588)
!6591 = !DILocation(line: 360, column: 6, scope: !6521)
!6592 = !DILocation(line: 361, column: 14, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !6354, line: 360, column: 47)
!6594 = !DILocation(line: 362, column: 2, scope: !6593)
!6595 = !DILocation(line: 366, column: 12, scope: !6521)
!6596 = !DILocation(line: 369, column: 15, scope: !6521)
!6597 = !DILocation(line: 371, column: 2, scope: !6521)
!6598 = distinct !DISubprogram(name: "bus_fault", scope: !6354, file: !6354, line: 383, type: !6599, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6601)
!6599 = !DISubroutineType(types: !6600)
!6600 = !{!107, !2656, !107, !6421}
!6601 = !{!6602, !6603, !6604, !6605, !6606}
!6602 = !DILocalVariable(name: "esf", arg: 1, scope: !6598, file: !6354, line: 383, type: !2656)
!6603 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6598, file: !6354, line: 383, type: !107)
!6604 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6598, file: !6354, line: 383, type: !6421)
!6605 = !DILocalVariable(name: "reason", scope: !6598, file: !6354, line: 385, type: !162)
!6606 = !DILocalVariable(name: "bfar", scope: !6607, file: !6354, line: 405, type: !162)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !6354, line: 395, column: 42)
!6608 = distinct !DILexicalBlock(scope: !6598, file: !6354, line: 395, column: 6)
!6609 = !DILocation(line: 0, scope: !6598)
!6610 = !DILocation(line: 389, column: 11, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6598, file: !6354, line: 389, column: 6)
!6612 = !DILocation(line: 392, column: 11, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6598, file: !6354, line: 392, column: 6)
!6614 = !DILocation(line: 395, column: 11, scope: !6608)
!6615 = !DILocation(line: 395, column: 16, scope: !6608)
!6616 = !DILocation(line: 395, column: 6, scope: !6598)
!6617 = !DILocation(line: 405, column: 3, scope: !6607)
!6618 = !DILocation(line: 0, scope: !6607)
!6619 = !DILocation(line: 407, column: 13, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6607, file: !6354, line: 407, column: 7)
!6621 = !DILocation(line: 407, column: 18, scope: !6620)
!6622 = !DILocation(line: 407, column: 44, scope: !6620)
!6623 = !DILocation(line: 407, column: 7, scope: !6607)
!6624 = !DILocation(line: 411, column: 15, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6626, file: !6354, line: 409, column: 30)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !6354, line: 409, column: 8)
!6627 = distinct !DILexicalBlock(scope: !6620, file: !6354, line: 407, column: 50)
!6628 = !DILocation(line: 412, column: 4, scope: !6625)
!6629 = !DILocation(line: 415, column: 11, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6598, file: !6354, line: 415, column: 6)
!6631 = !DILocation(line: 418, column: 12, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6598, file: !6354, line: 418, column: 6)
!6633 = !DILocation(line: 418, column: 17, scope: !6632)
!6634 = !DILocation(line: 418, column: 41, scope: !6632)
!6635 = !DILocation(line: 418, column: 6, scope: !6598)
!6636 = !DILocation(line: 423, column: 18, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6632, file: !6354, line: 423, column: 13)
!6638 = !DILocation(line: 524, column: 12, scope: !6598)
!6639 = !DILocation(line: 526, column: 15, scope: !6598)
!6640 = !DILocation(line: 528, column: 2, scope: !6598)
!6641 = distinct !DISubprogram(name: "usage_fault", scope: !6354, file: !6354, line: 539, type: !6642, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6646)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{!162, !6644}
!6644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6645, size: 32)
!6645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2657)
!6646 = !{!6647, !6648}
!6647 = !DILocalVariable(name: "esf", arg: 1, scope: !6641, file: !6354, line: 539, type: !6644)
!6648 = !DILocalVariable(name: "reason", scope: !6641, file: !6354, line: 541, type: !162)
!6649 = !DILocation(line: 0, scope: !6641)
!6650 = !DILocation(line: 546, column: 12, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6641, file: !6354, line: 546, column: 6)
!6652 = !DILocation(line: 549, column: 12, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6641, file: !6354, line: 549, column: 6)
!6654 = !DILocation(line: 567, column: 12, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6641, file: !6354, line: 567, column: 6)
!6656 = !DILocation(line: 570, column: 12, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6641, file: !6354, line: 570, column: 6)
!6658 = !DILocation(line: 573, column: 12, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6641, file: !6354, line: 573, column: 6)
!6660 = !DILocation(line: 576, column: 12, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6641, file: !6354, line: 576, column: 6)
!6662 = !DILocation(line: 581, column: 12, scope: !6641)
!6663 = !DILocation(line: 583, column: 2, scope: !6641)
!6664 = distinct !DISubprogram(name: "debug_monitor", scope: !6354, file: !6354, line: 632, type: !6665, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6667)
!6665 = !DISubroutineType(types: !6666)
!6666 = !{null, !2656, !6421}
!6667 = !{!6668, !6669}
!6668 = !DILocalVariable(name: "esf", arg: 1, scope: !6664, file: !6354, line: 632, type: !2656)
!6669 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6664, file: !6354, line: 632, type: !6421)
!6670 = !DILocation(line: 0, scope: !6664)
!6671 = !DILocation(line: 634, column: 15, scope: !6664)
!6672 = !DILocation(line: 652, column: 1, scope: !6664)
!6673 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6354, file: !6354, line: 658, type: !6674, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6676)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{!136, !2656}
!6676 = !{!6677, !6678, !6679}
!6677 = !DILocalVariable(name: "esf", arg: 1, scope: !6673, file: !6354, line: 658, type: !2656)
!6678 = !DILocalVariable(name: "ret_addr", scope: !6673, file: !6354, line: 660, type: !2429)
!6679 = !DILocalVariable(name: "fault_insn", scope: !6673, file: !6354, line: 686, type: !411)
!6680 = !DILocation(line: 0, scope: !6673)
!6681 = !DILocation(line: 660, column: 46, scope: !6673)
!6682 = !DILocation(line: 660, column: 23, scope: !6673)
!6683 = !DILocation(line: 682, column: 11, scope: !6673)
!6684 = !DILocation(line: 271, column: 3, scope: !6685, inlinedAt: !6686)
!6685 = distinct !DISubprogram(name: "__DSB", scope: !6053, file: !6053, line: 269, type: !3113, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !250)
!6686 = distinct !DILocation(line: 683, column: 2, scope: !6673)
!6687 = !{i64 2835448}
!6688 = !DILocation(line: 260, column: 3, scope: !6689, inlinedAt: !6690)
!6689 = distinct !DISubprogram(name: "__ISB", scope: !6053, file: !6053, line: 258, type: !3113, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !250)
!6690 = distinct !DILocation(line: 684, column: 2, scope: !6673)
!6691 = !{i64 2835165}
!6692 = !DILocation(line: 686, column: 35, scope: !6673)
!6693 = !DILocation(line: 686, column: 24, scope: !6673)
!6694 = !DILocation(line: 688, column: 11, scope: !6673)
!6695 = !DILocation(line: 271, column: 3, scope: !6685, inlinedAt: !6696)
!6696 = distinct !DILocation(line: 689, column: 2, scope: !6673)
!6697 = !DILocation(line: 260, column: 3, scope: !6689, inlinedAt: !6698)
!6698 = distinct !DILocation(line: 690, column: 2, scope: !6673)
!6699 = !DILocation(line: 693, column: 45, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6673, file: !6354, line: 693, column: 6)
!6701 = !DILocation(line: 699, column: 1, scope: !6673)
!6702 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6354, file: !6354, line: 1107, type: !3113, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !250)
!6703 = !DILocation(line: 1111, column: 11, scope: !6702)
!6704 = !DILocation(line: 1136, column: 1, scope: !6702)
!6705 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6706, file: !6706, line: 26, type: !3113, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6707)
!6706 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6707 = !{!6708}
!6708 = !DILocalVariable(name: "irq", scope: !6705, file: !6706, line: 28, type: !107)
!6709 = !DILocation(line: 0, scope: !6705)
!6710 = !DILocation(line: 30, column: 2, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6705, file: !6706, line: 30, column: 2)
!6712 = !DILocation(line: 31, column: 3, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !6706, line: 30, column: 39)
!6714 = distinct !DILexicalBlock(scope: !6711, file: !6706, line: 30, column: 2)
!6715 = !DILocation(line: 30, column: 35, scope: !6714)
!6716 = !DILocation(line: 30, column: 13, scope: !6714)
!6717 = distinct !{!6717, !6710, !6718}
!6718 = !DILocation(line: 32, column: 2, scope: !6711)
!6719 = !DILocation(line: 33, column: 1, scope: !6705)
!6720 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6087, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6721)
!6721 = !{!6722, !6723}
!6722 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6720, file: !497, line: 1814, type: !733)
!6723 = !DILocalVariable(name: "priority", arg: 2, scope: !6720, file: !497, line: 1814, type: !162)
!6724 = !DILocation(line: 0, scope: !6720)
!6725 = !DILocation(line: 1816, column: 7, scope: !6720)
!6726 = !DILocation(line: 0, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6720, file: !497, line: 1816, column: 7)
!6728 = !DILocation(line: 1824, column: 1, scope: !6720)
!6729 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6730, file: !6730, line: 27, type: !6731, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !6834)
!6730 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6731 = !DISubroutineType(types: !6732)
!6732 = !{null, !6733}
!6733 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !6734)
!6734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6735, size: 32)
!6735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6736)
!6736 = !{!6737, !6795, !6807, !6808, !6809, !6810, !6816, !6829}
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6735, file: !359, line: 247, baseType: !6738, size: 384)
!6738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6739)
!6739 = !{!6740, !6764, !6771, !6772, !6773, !6782, !6783, !6784}
!6740 = !DIDerivedType(tag: DW_TAG_member, scope: !6738, file: !359, line: 60, baseType: !6741, size: 64)
!6741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6738, file: !359, line: 60, size: 64, elements: !6742)
!6742 = !{!6743, !6758}
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6741, file: !359, line: 61, baseType: !6744, size: 64)
!6744 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6745)
!6745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6746)
!6746 = !{!6747, !6753}
!6747 = !DIDerivedType(tag: DW_TAG_member, scope: !6745, file: !233, line: 38, baseType: !6748, size: 32)
!6748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6745, file: !233, line: 38, size: 32, elements: !6749)
!6749 = !{!6750, !6752}
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6748, file: !233, line: 39, baseType: !6751, size: 32)
!6751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6745, size: 32)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6748, file: !233, line: 40, baseType: !6751, size: 32)
!6753 = !DIDerivedType(tag: DW_TAG_member, scope: !6745, file: !233, line: 42, baseType: !6754, size: 32, offset: 32)
!6754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6745, file: !233, line: 42, size: 32, elements: !6755)
!6755 = !{!6756, !6757}
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6754, file: !233, line: 43, baseType: !6751, size: 32)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6754, file: !233, line: 44, baseType: !6751, size: 32)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6741, file: !359, line: 62, baseType: !6759, size: 64)
!6759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6760)
!6760 = !{!6761}
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6759, file: !384, line: 50, baseType: !6762, size: 64)
!6762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6763, size: 64, elements: !389)
!6763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 32)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6738, file: !359, line: 68, baseType: !6765, size: 32, offset: 64)
!6765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6766, size: 32)
!6766 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6767)
!6767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6768)
!6768 = !{!6769}
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6767, file: !228, line: 232, baseType: !6770, size: 64)
!6770 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6745)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6738, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6738, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6773 = !DIDerivedType(tag: DW_TAG_member, scope: !6738, file: !359, line: 90, baseType: !6774, size: 16, offset: 112)
!6774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6738, file: !359, line: 90, size: 16, elements: !6775)
!6775 = !{!6776, !6781}
!6776 = !DIDerivedType(tag: DW_TAG_member, scope: !6774, file: !359, line: 91, baseType: !6777, size: 16)
!6777 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6774, file: !359, line: 91, size: 16, elements: !6778)
!6778 = !{!6779, !6780}
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6777, file: !359, line: 96, baseType: !407, size: 8)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6777, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6774, file: !359, line: 100, baseType: !411, size: 16)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6738, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6738, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6738, file: !359, line: 131, baseType: !6785, size: 192, offset: 192)
!6785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6786)
!6786 = !{!6787, !6788, !6794}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6785, file: !228, line: 245, baseType: !6744, size: 64)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6785, file: !228, line: 246, baseType: !6789, size: 32, offset: 64)
!6789 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6790)
!6790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6791, size: 32)
!6791 = !DISubroutineType(types: !6792)
!6792 = !{null, !6793}
!6793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6785, size: 32)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6785, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6735, file: !359, line: 250, baseType: !6796, size: 288, offset: 384)
!6796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6797)
!6797 = !{!6798, !6799, !6800, !6801, !6802, !6803, !6804, !6805, !6806}
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6796, file: !428, line: 26, baseType: !162, size: 32)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6796, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6796, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6796, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6796, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6796, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6796, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6796, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6796, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6735, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6735, file: !359, line: 256, baseType: !6766, size: 64, offset: 704)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6735, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6735, file: !359, line: 300, baseType: !6811, size: 96, offset: 800)
!6811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6812)
!6812 = !{!6813, !6814, !6815}
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6811, file: !359, line: 153, baseType: !22, size: 32)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6811, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6811, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6735, file: !359, line: 325, baseType: !6817, size: 32, offset: 896)
!6817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6818, size: 32)
!6818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6819)
!6819 = !{!6820, !6826, !6827}
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6818, file: !224, line: 5074, baseType: !6821, size: 96)
!6821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6822)
!6822 = !{!6823, !6824, !6825}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6821, file: !454, line: 57, baseType: !457, size: 32)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6821, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6821, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6818, file: !224, line: 5075, baseType: !6766, size: 64, offset: 96)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6818, file: !224, line: 5076, baseType: !6828, offset: 160)
!6828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6735, file: !359, line: 343, baseType: !6830, size: 64, offset: 928)
!6830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6831)
!6831 = !{!6832, !6833}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6830, file: !428, line: 63, baseType: !162, size: 32)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6830, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6834 = !{!6835}
!6835 = !DILocalVariable(name: "thread", arg: 1, scope: !6729, file: !6730, line: 27, type: !6733)
!6836 = !DILocation(line: 0, scope: !6729)
!6837 = !DILocation(line: 29, column: 6, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6729, file: !6730, line: 29, column: 6)
!6839 = !DILocation(line: 29, column: 15, scope: !6838)
!6840 = !DILocation(line: 29, column: 6, scope: !6729)
!6841 = !DILocation(line: 1031, column: 3, scope: !6842, inlinedAt: !6845)
!6842 = distinct !DISubprogram(name: "__get_IPSR", scope: !6053, file: !6053, line: 1027, type: !6134, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !6843)
!6843 = !{!6844}
!6844 = !DILocalVariable(name: "result", scope: !6842, file: !6053, line: 1029, type: !162)
!6845 = distinct !DILocation(line: 48, column: 10, scope: !6846, inlinedAt: !6850)
!6846 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6847, file: !6847, line: 46, type: !6848, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !250)
!6847 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6848 = !DISubroutineType(types: !6849)
!6849 = !{!136}
!6850 = distinct !DILocation(line: 30, column: 7, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6730, line: 30, column: 7)
!6852 = distinct !DILexicalBlock(scope: !6838, file: !6730, line: 29, column: 26)
!6853 = !{i64 2824296}
!6854 = !DILocation(line: 0, scope: !6842, inlinedAt: !6845)
!6855 = !DILocation(line: 48, column: 9, scope: !6846, inlinedAt: !6850)
!6856 = !DILocation(line: 30, column: 7, scope: !6852)
!6857 = !DILocation(line: 42, column: 14, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6851, file: !6730, line: 30, column: 25)
!6859 = !DILocation(line: 48, column: 15, scope: !6858)
!6860 = !DILocation(line: 49, column: 3, scope: !6858)
!6861 = !DILocation(line: 52, column: 2, scope: !6729)
!6862 = !DILocation(line: 53, column: 1, scope: !6729)
!6863 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !354, file: !354, line: 127, type: !3113, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !250)
!6864 = !DILocation(line: 134, column: 2, scope: !6863)
!6865 = !DILocation(line: 156, column: 1, scope: !6863)
!6866 = !DILocation(line: 0, scope: !353)
!6867 = !DILocation(line: 289, column: 36, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !353, file: !354, line: 285, column: 2)
!6869 = !DILocation(line: 289, column: 42, scope: !6868)
!6870 = !DILocation(line: 300, column: 36, scope: !353)
!6871 = !DILocation(line: 301, column: 35, scope: !353)
!6872 = !DILocation(line: 302, column: 37, scope: !353)
!6873 = !DILocation(line: 311, column: 2, scope: !353)
!6874 = !DILocation(line: 316, column: 1, scope: !353)
!6875 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !525, file: !525, line: 180, type: !3113, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6876 = !DILocation(line: 188, column: 12, scope: !6875)
!6877 = !DILocation(line: 271, column: 3, scope: !6878, inlinedAt: !6879)
!6878 = distinct !DISubprogram(name: "__DSB", scope: !6053, file: !6053, line: 269, type: !3113, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6879 = distinct !DILocation(line: 192, column: 2, scope: !6875)
!6880 = !{i64 2984443}
!6881 = !DILocation(line: 260, column: 3, scope: !6882, inlinedAt: !6883)
!6882 = distinct !DISubprogram(name: "__ISB", scope: !6053, file: !6053, line: 258, type: !3113, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6883 = distinct !DILocation(line: 193, column: 2, scope: !6875)
!6884 = !{i64 2984160}
!6885 = !DILocation(line: 194, column: 1, scope: !6875)
!6886 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !525, file: !525, line: 199, type: !3113, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6887 = !DILocation(line: 282, column: 3, scope: !6888, inlinedAt: !6889)
!6888 = distinct !DISubprogram(name: "__DMB", scope: !6053, file: !6053, line: 280, type: !3113, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6889 = distinct !DILocation(line: 202, column: 2, scope: !6886)
!6890 = !{i64 2984719}
!6891 = !DILocation(line: 205, column: 12, scope: !6886)
!6892 = !DILocation(line: 206, column: 1, scope: !6886)
!6893 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !525, file: !525, line: 275, type: !6894, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6907)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{null, !6896, !177, !6321, !6321}
!6896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6897, size: 32)
!6897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6898)
!6898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !6899)
!6899 = !{!6900, !6901, !6902}
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6898, file: !476, line: 53, baseType: !22, size: 32)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6898, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6898, file: !476, line: 55, baseType: !6903, size: 32, offset: 64)
!6903 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !6904)
!6904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !6905)
!6905 = !{!6906}
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6904, file: !482, line: 150, baseType: !162, size: 32)
!6907 = !{!6908, !6909, !6910, !6911}
!6908 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6893, file: !525, line: 276, type: !6896)
!6909 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6893, file: !525, line: 276, type: !177)
!6910 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6893, file: !525, line: 277, type: !6321)
!6911 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6893, file: !525, line: 277, type: !6321)
!6912 = !DILocation(line: 0, scope: !6893)
!6913 = !DILocation(line: 279, column: 6, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6893, file: !525, line: 279, column: 6)
!6915 = !DILocation(line: 285, column: 1, scope: !6893)
!6916 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6917, file: !6917, line: 220, type: !6918, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6920)
!6917 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!107, !6896, !177, !6321, !6321}
!6920 = !{!6921, !6922, !6923, !6924, !6925}
!6921 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6916, file: !6917, line: 221, type: !6896)
!6922 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6916, file: !6917, line: 221, type: !177)
!6923 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6916, file: !6917, line: 222, type: !6321)
!6924 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6916, file: !6917, line: 223, type: !6321)
!6925 = !DILocalVariable(name: "mpu_reg_index", scope: !6916, file: !6917, line: 225, type: !107)
!6926 = !DILocation(line: 0, scope: !6916)
!6927 = !DILocation(line: 225, column: 22, scope: !6916)
!6928 = !DILocation(line: 233, column: 18, scope: !6916)
!6929 = !DILocation(line: 236, column: 23, scope: !6916)
!6930 = !DILocation(line: 236, column: 21, scope: !6916)
!6931 = !DILocation(line: 238, column: 2, scope: !6916)
!6932 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !525, file: !525, line: 105, type: !6933, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6935)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{!107, !6896, !133, !133, !136}
!6935 = !{!6936, !6937, !6938, !6939, !6940, !6941}
!6936 = !DILocalVariable(name: "regions", arg: 1, scope: !6932, file: !525, line: 106, type: !6896)
!6937 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6932, file: !525, line: 106, type: !133)
!6938 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6932, file: !525, line: 106, type: !133)
!6939 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6932, file: !525, line: 107, type: !136)
!6940 = !DILocalVariable(name: "i", scope: !6932, file: !525, line: 109, type: !107)
!6941 = !DILocalVariable(name: "reg_index", scope: !6932, file: !525, line: 110, type: !107)
!6942 = !DILocation(line: 0, scope: !6932)
!6943 = !DILocation(line: 110, column: 18, scope: !6932)
!6944 = !DILocation(line: 112, column: 16, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !525, line: 112, column: 2)
!6946 = distinct !DILexicalBlock(scope: !6932, file: !525, line: 112, column: 2)
!6947 = !DILocation(line: 112, column: 2, scope: !6946)
!6948 = !DILocation(line: 113, column: 7, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !525, line: 113, column: 7)
!6950 = distinct !DILexicalBlock(scope: !6945, file: !525, line: 112, column: 36)
!6951 = !DILocation(line: 113, column: 18, scope: !6949)
!6952 = !DILocation(line: 113, column: 23, scope: !6949)
!6953 = !DILocation(line: 113, column: 7, scope: !6950)
!6954 = !DILocation(line: 118, column: 23, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6950, file: !525, line: 118, column: 7)
!6956 = !DILocation(line: 119, column: 7, scope: !6955)
!6957 = !DILocation(line: 118, column: 7, scope: !6950)
!6958 = !DILocation(line: 124, column: 36, scope: !6950)
!6959 = !DILocation(line: 124, column: 15, scope: !6950)
!6960 = !DILocation(line: 126, column: 17, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6950, file: !525, line: 126, column: 7)
!6962 = !DILocation(line: 126, column: 7, scope: !6950)
!6963 = !DILocation(line: 131, column: 12, scope: !6950)
!6964 = !DILocation(line: 132, column: 2, scope: !6950)
!6965 = !DILocation(line: 112, column: 32, scope: !6945)
!6966 = distinct !{!6966, !6947, !6967}
!6967 = !DILocation(line: 132, column: 2, scope: !6946)
!6968 = !DILocation(line: 135, column: 1, scope: !6932)
!6969 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6917, file: !6917, line: 63, type: !6970, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6972)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!107, !6896}
!6972 = !{!6973, !6974}
!6973 = !DILocalVariable(name: "part", arg: 1, scope: !6969, file: !6917, line: 63, type: !6896)
!6974 = !DILocalVariable(name: "partition_is_valid", scope: !6969, file: !6917, line: 70, type: !107)
!6975 = !DILocation(line: 0, scope: !6969)
!6976 = !DILocation(line: 71, column: 11, scope: !6969)
!6977 = !DILocation(line: 71, column: 37, scope: !6969)
!6978 = !DILocation(line: 72, column: 3, scope: !6969)
!6979 = !DILocation(line: 71, column: 30, scope: !6969)
!6980 = !DILocation(line: 75, column: 11, scope: !6969)
!6981 = !DILocation(line: 75, column: 17, scope: !6969)
!6982 = !DILocation(line: 75, column: 38, scope: !6969)
!6983 = !DILocation(line: 77, column: 2, scope: !6969)
!6984 = distinct !DISubprogram(name: "mpu_configure_region", scope: !525, file: !525, line: 79, type: !6985, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6987)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{!107, !177, !6896}
!6987 = !{!6988, !6989, !6990}
!6988 = !DILocalVariable(name: "index", arg: 1, scope: !6984, file: !525, line: 79, type: !177)
!6989 = !DILocalVariable(name: "new_region", arg: 2, scope: !6984, file: !525, line: 80, type: !6896)
!6990 = !DILocalVariable(name: "region_conf", scope: !6984, file: !525, line: 82, type: !514)
!6991 = !DILocation(line: 0, scope: !6984)
!6992 = !DILocation(line: 82, column: 2, scope: !6984)
!6993 = !DILocation(line: 82, column: 24, scope: !6984)
!6994 = !DILocation(line: 87, column: 33, scope: !6984)
!6995 = !DILocation(line: 87, column: 14, scope: !6984)
!6996 = !DILocation(line: 87, column: 19, scope: !6984)
!6997 = !DILocation(line: 91, column: 55, scope: !6984)
!6998 = !DILocation(line: 92, column: 16, scope: !6984)
!6999 = !DILocation(line: 92, column: 53, scope: !6984)
!7000 = !DILocation(line: 91, column: 2, scope: !6984)
!7001 = !DILocation(line: 95, column: 9, scope: !6984)
!7002 = !DILocation(line: 97, column: 1, scope: !6984)
!7003 = !DILocation(line: 95, column: 2, scope: !6984)
!7004 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6917, file: !6917, line: 113, type: !7005, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7010)
!7005 = !DISubroutineType(types: !7006)
!7006 = !{null, !7007, !7008, !162, !162}
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!7008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7009, size: 32)
!7009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6903)
!7010 = !{!7011, !7012, !7013, !7014}
!7011 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7004, file: !6917, line: 114, type: !7007)
!7012 = !DILocalVariable(name: "attr", arg: 2, scope: !7004, file: !6917, line: 115, type: !7008)
!7013 = !DILocalVariable(name: "base", arg: 3, scope: !7004, file: !6917, line: 115, type: !162)
!7014 = !DILocalVariable(name: "size", arg: 4, scope: !7004, file: !6917, line: 115, type: !162)
!7015 = !DILocation(line: 0, scope: !7004)
!7016 = !DILocation(line: 127, column: 23, scope: !7004)
!7017 = !DILocation(line: 127, column: 35, scope: !7004)
!7018 = !DILocation(line: 127, column: 33, scope: !7004)
!7019 = !DILocation(line: 127, column: 10, scope: !7004)
!7020 = !DILocation(line: 127, column: 15, scope: !7004)
!7021 = !DILocation(line: 129, column: 1, scope: !7004)
!7022 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !525, file: !525, line: 57, type: !7023, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7025)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{!107, !177, !512}
!7025 = !{!7026, !7027}
!7026 = !DILocalVariable(name: "index", arg: 1, scope: !7022, file: !525, line: 57, type: !177)
!7027 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7022, file: !525, line: 58, type: !512)
!7028 = !DILocation(line: 0, scope: !7022)
!7029 = !DILocation(line: 61, column: 6, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7022, file: !525, line: 61, column: 6)
!7031 = !DILocation(line: 61, column: 12, scope: !7030)
!7032 = !DILocation(line: 61, column: 6, scope: !7022)
!7033 = !DILocation(line: 71, column: 2, scope: !7022)
!7034 = !DILocation(line: 73, column: 2, scope: !7022)
!7035 = !DILocation(line: 74, column: 1, scope: !7022)
!7036 = distinct !DISubprogram(name: "region_init", scope: !6917, file: !6917, line: 29, type: !7037, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7039)
!7037 = !DISubroutineType(types: !7038)
!7038 = !{null, !6321, !512}
!7039 = !{!7040, !7041}
!7040 = !DILocalVariable(name: "index", arg: 1, scope: !7036, file: !6917, line: 29, type: !6321)
!7041 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7036, file: !6917, line: 30, type: !512)
!7042 = !DILocation(line: 0, scope: !7036)
!7043 = !DILocation(line: 33, column: 2, scope: !7036)
!7044 = !DILocation(line: 47, column: 28, scope: !7036)
!7045 = !DILocation(line: 47, column: 33, scope: !7036)
!7046 = !DILocation(line: 48, column: 26, scope: !7036)
!7047 = !DILocation(line: 47, column: 12, scope: !7036)
!7048 = !DILocation(line: 49, column: 32, scope: !7036)
!7049 = !DILocation(line: 49, column: 37, scope: !7036)
!7050 = !DILocation(line: 49, column: 12, scope: !7036)
!7051 = !DILocation(line: 53, column: 1, scope: !7036)
!7052 = distinct !DISubprogram(name: "set_region_number", scope: !7053, file: !7053, line: 32, type: !6144, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7054)
!7053 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7054 = !{!7055}
!7055 = !DILocalVariable(name: "index", arg: 1, scope: !7052, file: !7053, line: 32, type: !162)
!7056 = !DILocation(line: 0, scope: !7052)
!7057 = !DILocation(line: 34, column: 11, scope: !7052)
!7058 = !DILocation(line: 35, column: 1, scope: !7052)
!7059 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6917, file: !6917, line: 88, type: !7060, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7062)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!162, !162}
!7062 = !{!7063}
!7063 = !DILocalVariable(name: "size", arg: 1, scope: !7059, file: !6917, line: 88, type: !162)
!7064 = !DILocation(line: 0, scope: !7059)
!7065 = !DILocation(line: 91, column: 11, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7059, file: !6917, line: 91, column: 6)
!7067 = !DILocation(line: 91, column: 6, scope: !7059)
!7068 = !DILocation(line: 100, column: 11, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7059, file: !6917, line: 100, column: 6)
!7070 = !DILocation(line: 100, column: 6, scope: !7059)
!7071 = !DILocation(line: 104, column: 35, scope: !7059)
!7072 = !DILocation(line: 104, column: 16, scope: !7059)
!7073 = !DILocation(line: 104, column: 50, scope: !7059)
!7074 = !DILocation(line: 104, column: 72, scope: !7059)
!7075 = !DILocation(line: 104, column: 2, scope: !7059)
!7076 = !DILocation(line: 106, column: 1, scope: !7059)
!7077 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !525, file: !525, line: 307, type: !7078, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7080)
!7078 = !DISubroutineType(types: !7079)
!7079 = !{null, !6896, !133}
!7080 = !{!7081, !7082}
!7081 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7077, file: !525, line: 308, type: !6896)
!7082 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7077, file: !525, line: 308, type: !133)
!7083 = !DILocation(line: 0, scope: !7077)
!7084 = !DILocation(line: 310, column: 6, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7077, file: !525, line: 310, column: 6)
!7086 = !DILocation(line: 316, column: 1, scope: !7077)
!7087 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6917, file: !6917, line: 249, type: !7088, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7090)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{!107, !6896, !133}
!7090 = !{!7091, !7092, !7093, !7094}
!7091 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7087, file: !6917, line: 250, type: !6896)
!7092 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7087, file: !6917, line: 250, type: !133)
!7093 = !DILocalVariable(name: "mpu_reg_index", scope: !7087, file: !6917, line: 252, type: !107)
!7094 = !DILocalVariable(name: "i", scope: !7095, file: !6917, line: 264, type: !107)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6917, line: 264, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6917, line: 261, column: 32)
!7097 = distinct !DILexicalBlock(scope: !7087, file: !6917, line: 261, column: 6)
!7098 = !DILocation(line: 0, scope: !7087)
!7099 = !DILocation(line: 252, column: 22, scope: !7087)
!7100 = !DILocation(line: 258, column: 18, scope: !7087)
!7101 = !DILocation(line: 261, column: 20, scope: !7097)
!7102 = !DILocation(line: 261, column: 6, scope: !7087)
!7103 = !DILocation(line: 0, scope: !7095)
!7104 = !DILocation(line: 265, column: 4, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !6917, line: 264, column: 59)
!7106 = distinct !DILexicalBlock(scope: !7095, file: !6917, line: 264, column: 3)
!7107 = !DILocation(line: 264, column: 55, scope: !7106)
!7108 = !DILocation(line: 264, column: 33, scope: !7106)
!7109 = !DILocation(line: 264, column: 3, scope: !7095)
!7110 = distinct !{!7110, !7109, !7111}
!7111 = !DILocation(line: 266, column: 3, scope: !7095)
!7112 = !DILocation(line: 269, column: 2, scope: !7087)
!7113 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7114, file: !7114, line: 218, type: !6144, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7115)
!7114 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7115 = !{!7116}
!7116 = !DILocalVariable(name: "rnr", arg: 1, scope: !7113, file: !7114, line: 218, type: !162)
!7117 = !DILocation(line: 0, scope: !7113)
!7118 = !DILocation(line: 220, column: 12, scope: !7113)
!7119 = !DILocation(line: 221, column: 13, scope: !7113)
!7120 = !DILocation(line: 222, column: 1, scope: !7113)
!7121 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !525, file: !525, line: 326, type: !7122, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7124)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{!107}
!7124 = !{!7125}
!7125 = !DILocalVariable(name: "r_index", scope: !7121, file: !525, line: 328, type: !162)
!7126 = !DILocation(line: 330, column: 17, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7121, file: !525, line: 330, column: 6)
!7128 = !DILocation(line: 330, column: 29, scope: !7127)
!7129 = !DILocation(line: 330, column: 6, scope: !7121)
!7130 = !DILocation(line: 347, column: 2, scope: !7121)
!7131 = !DILocation(line: 0, scope: !7121)
!7132 = !DILocation(line: 364, column: 29, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !525, line: 364, column: 2)
!7134 = distinct !DILexicalBlock(scope: !7121, file: !525, line: 364, column: 2)
!7135 = !DILocation(line: 364, column: 2, scope: !7134)
!7136 = !DILocation(line: 365, column: 25, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7133, file: !525, line: 364, column: 66)
!7138 = !DILocation(line: 365, column: 3, scope: !7137)
!7139 = !DILocation(line: 364, column: 62, scope: !7133)
!7140 = distinct !{!7140, !7135, !7141}
!7141 = !DILocation(line: 366, column: 2, scope: !7134)
!7142 = !DILocation(line: 369, column: 23, scope: !7121)
!7143 = !DILocation(line: 369, column: 21, scope: !7121)
!7144 = !DILocation(line: 372, column: 2, scope: !7121)
!7145 = !DILocation(line: 443, column: 2, scope: !7121)
!7146 = !DILocation(line: 444, column: 1, scope: !7121)
!7147 = distinct !DISubprogram(name: "strcpy", scope: !7148, file: !7148, line: 20, type: !7149, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7153)
!7148 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7149 = !DISubroutineType(types: !7150)
!7150 = !{!256, !7151, !7152}
!7151 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7152 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !123)
!7153 = !{!7154, !7155, !7156}
!7154 = !DILocalVariable(name: "d", arg: 1, scope: !7147, file: !7148, line: 20, type: !7151)
!7155 = !DILocalVariable(name: "s", arg: 2, scope: !7147, file: !7148, line: 20, type: !7152)
!7156 = !DILocalVariable(name: "dest", scope: !7147, file: !7148, line: 22, type: !256)
!7157 = !DILocation(line: 0, scope: !7147)
!7158 = !DILocation(line: 24, column: 9, scope: !7147)
!7159 = !DILocation(line: 24, column: 12, scope: !7147)
!7160 = !DILocation(line: 24, column: 2, scope: !7147)
!7161 = !DILocation(line: 25, column: 6, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7147, file: !7148, line: 24, column: 21)
!7163 = !DILocation(line: 26, column: 4, scope: !7162)
!7164 = !DILocation(line: 27, column: 4, scope: !7162)
!7165 = distinct !{!7165, !7160, !7166}
!7166 = !DILocation(line: 28, column: 2, scope: !7147)
!7167 = !DILocation(line: 30, column: 5, scope: !7147)
!7168 = !DILocation(line: 32, column: 2, scope: !7147)
!7169 = distinct !DISubprogram(name: "strncpy", scope: !7148, file: !7148, line: 42, type: !7170, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7172)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{!256, !7151, !7152, !252}
!7172 = !{!7173, !7174, !7175, !7176}
!7173 = !DILocalVariable(name: "d", arg: 1, scope: !7169, file: !7148, line: 42, type: !7151)
!7174 = !DILocalVariable(name: "s", arg: 2, scope: !7169, file: !7148, line: 42, type: !7152)
!7175 = !DILocalVariable(name: "n", arg: 3, scope: !7169, file: !7148, line: 42, type: !252)
!7176 = !DILocalVariable(name: "dest", scope: !7169, file: !7148, line: 44, type: !256)
!7177 = !DILocation(line: 0, scope: !7169)
!7178 = !DILocation(line: 46, column: 12, scope: !7169)
!7179 = !DILocation(line: 46, column: 17, scope: !7169)
!7180 = !DILocation(line: 46, column: 20, scope: !7169)
!7181 = !DILocation(line: 46, column: 23, scope: !7169)
!7182 = !DILocation(line: 46, column: 2, scope: !7169)
!7183 = !DILocation(line: 47, column: 6, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7169, file: !7148, line: 46, column: 32)
!7185 = !DILocation(line: 48, column: 4, scope: !7184)
!7186 = !DILocation(line: 49, column: 4, scope: !7184)
!7187 = !DILocation(line: 50, column: 4, scope: !7184)
!7188 = distinct !{!7188, !7182, !7189}
!7189 = !DILocation(line: 51, column: 2, scope: !7169)
!7190 = !DILocation(line: 54, column: 6, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7169, file: !7148, line: 53, column: 16)
!7192 = !DILocation(line: 55, column: 4, scope: !7191)
!7193 = !DILocation(line: 56, column: 4, scope: !7191)
!7194 = !DILocation(line: 53, column: 11, scope: !7169)
!7195 = !DILocation(line: 53, column: 2, scope: !7169)
!7196 = distinct !{!7196, !7195, !7197}
!7197 = !DILocation(line: 57, column: 2, scope: !7169)
!7198 = !DILocation(line: 59, column: 2, scope: !7169)
!7199 = distinct !DISubprogram(name: "strchr", scope: !7148, file: !7148, line: 69, type: !7200, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7202)
!7200 = !DISubroutineType(types: !7201)
!7201 = !{!256, !123, !107}
!7202 = !{!7203, !7204, !7205}
!7203 = !DILocalVariable(name: "s", arg: 1, scope: !7199, file: !7148, line: 69, type: !123)
!7204 = !DILocalVariable(name: "c", arg: 2, scope: !7199, file: !7148, line: 69, type: !107)
!7205 = !DILocalVariable(name: "tmp", scope: !7199, file: !7148, line: 71, type: !125)
!7206 = !DILocation(line: 0, scope: !7199)
!7207 = !DILocation(line: 73, column: 2, scope: !7199)
!7208 = !DILocation(line: 73, column: 10, scope: !7199)
!7209 = !DILocation(line: 73, column: 13, scope: !7199)
!7210 = !DILocation(line: 73, column: 21, scope: !7199)
!7211 = !DILocation(line: 74, column: 4, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7199, file: !7148, line: 73, column: 38)
!7213 = distinct !{!7213, !7207, !7214}
!7214 = !DILocation(line: 75, column: 2, scope: !7199)
!7215 = !DILocation(line: 77, column: 9, scope: !7199)
!7216 = !DILocation(line: 77, column: 2, scope: !7199)
!7217 = distinct !DISubprogram(name: "strrchr", scope: !7148, file: !7148, line: 87, type: !7200, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7218)
!7218 = !{!7219, !7220, !7221}
!7219 = !DILocalVariable(name: "s", arg: 1, scope: !7217, file: !7148, line: 87, type: !123)
!7220 = !DILocalVariable(name: "c", arg: 2, scope: !7217, file: !7148, line: 87, type: !107)
!7221 = !DILocalVariable(name: "match", scope: !7217, file: !7148, line: 89, type: !256)
!7222 = !DILocation(line: 0, scope: !7217)
!7223 = !DILocation(line: 91, column: 2, scope: !7217)
!7224 = !DILocation(line: 92, column: 7, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !7148, line: 92, column: 7)
!7226 = distinct !DILexicalBlock(scope: !7217, file: !7148, line: 91, column: 5)
!7227 = !DILocation(line: 92, column: 10, scope: !7225)
!7228 = !DILocation(line: 92, column: 7, scope: !7226)
!7229 = !DILocation(line: 95, column: 13, scope: !7217)
!7230 = !DILocation(line: 95, column: 2, scope: !7226)
!7231 = distinct !{!7231, !7223, !7232}
!7232 = !DILocation(line: 95, column: 15, scope: !7217)
!7233 = !DILocation(line: 97, column: 2, scope: !7217)
!7234 = distinct !DISubprogram(name: "strlen", scope: !7148, file: !7148, line: 107, type: !7235, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7237)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{!252, !123}
!7237 = !{!7238, !7239}
!7238 = !DILocalVariable(name: "s", arg: 1, scope: !7234, file: !7148, line: 107, type: !123)
!7239 = !DILocalVariable(name: "n", scope: !7234, file: !7148, line: 109, type: !252)
!7240 = !DILocation(line: 0, scope: !7234)
!7241 = !DILocation(line: 111, column: 9, scope: !7234)
!7242 = !DILocation(line: 111, column: 12, scope: !7234)
!7243 = !DILocation(line: 111, column: 2, scope: !7234)
!7244 = !DILocation(line: 112, column: 4, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7234, file: !7148, line: 111, column: 21)
!7246 = !DILocation(line: 113, column: 4, scope: !7245)
!7247 = distinct !{!7247, !7243, !7248}
!7248 = !DILocation(line: 114, column: 2, scope: !7234)
!7249 = !DILocation(line: 116, column: 2, scope: !7234)
!7250 = distinct !DISubprogram(name: "strnlen", scope: !7148, file: !7148, line: 126, type: !7251, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7253)
!7251 = !DISubroutineType(types: !7252)
!7252 = !{!252, !123, !252}
!7253 = !{!7254, !7255, !7256}
!7254 = !DILocalVariable(name: "s", arg: 1, scope: !7250, file: !7148, line: 126, type: !123)
!7255 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7250, file: !7148, line: 126, type: !252)
!7256 = !DILocalVariable(name: "n", scope: !7250, file: !7148, line: 128, type: !252)
!7257 = !DILocation(line: 0, scope: !7250)
!7258 = !DILocation(line: 130, column: 9, scope: !7250)
!7259 = !DILocation(line: 130, column: 12, scope: !7250)
!7260 = !DILocation(line: 130, column: 20, scope: !7250)
!7261 = !DILocation(line: 130, column: 2, scope: !7250)
!7262 = !DILocation(line: 131, column: 4, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7250, file: !7148, line: 130, column: 35)
!7264 = !DILocation(line: 132, column: 4, scope: !7263)
!7265 = distinct !{!7265, !7261, !7266}
!7266 = !DILocation(line: 133, column: 2, scope: !7250)
!7267 = !DILocation(line: 135, column: 2, scope: !7250)
!7268 = distinct !DISubprogram(name: "strcmp", scope: !7148, file: !7148, line: 145, type: !7269, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7271)
!7269 = !DISubroutineType(types: !7270)
!7270 = !{!107, !123, !123}
!7271 = !{!7272, !7273}
!7272 = !DILocalVariable(name: "s1", arg: 1, scope: !7268, file: !7148, line: 145, type: !123)
!7273 = !DILocalVariable(name: "s2", arg: 2, scope: !7268, file: !7148, line: 145, type: !123)
!7274 = !DILocation(line: 0, scope: !7268)
!7275 = !DILocation(line: 147, column: 10, scope: !7268)
!7276 = !DILocation(line: 147, column: 17, scope: !7268)
!7277 = !DILocation(line: 147, column: 14, scope: !7268)
!7278 = !DILocation(line: 147, column: 22, scope: !7268)
!7279 = !DILocation(line: 148, column: 5, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7268, file: !7148, line: 147, column: 40)
!7281 = !DILocation(line: 149, column: 5, scope: !7280)
!7282 = distinct !{!7282, !7283, !7284}
!7283 = !DILocation(line: 147, column: 2, scope: !7268)
!7284 = !DILocation(line: 150, column: 2, scope: !7268)
!7285 = !DILocation(line: 152, column: 9, scope: !7268)
!7286 = !DILocation(line: 152, column: 15, scope: !7268)
!7287 = !DILocation(line: 152, column: 13, scope: !7268)
!7288 = !DILocation(line: 152, column: 2, scope: !7268)
!7289 = distinct !DISubprogram(name: "strncmp", scope: !7148, file: !7148, line: 162, type: !7290, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7292)
!7290 = !DISubroutineType(types: !7291)
!7291 = !{!107, !123, !123, !252}
!7292 = !{!7293, !7294, !7295}
!7293 = !DILocalVariable(name: "s1", arg: 1, scope: !7289, file: !7148, line: 162, type: !123)
!7294 = !DILocalVariable(name: "s2", arg: 2, scope: !7289, file: !7148, line: 162, type: !123)
!7295 = !DILocalVariable(name: "n", arg: 3, scope: !7289, file: !7148, line: 162, type: !252)
!7296 = !DILocation(line: 0, scope: !7289)
!7297 = !DILocation(line: 164, column: 17, scope: !7289)
!7298 = !DILocation(line: 164, column: 21, scope: !7289)
!7299 = !DILocation(line: 164, column: 28, scope: !7289)
!7300 = !DILocation(line: 164, column: 25, scope: !7289)
!7301 = !DILocation(line: 164, column: 33, scope: !7289)
!7302 = !DILocation(line: 165, column: 5, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7289, file: !7148, line: 164, column: 51)
!7304 = !DILocation(line: 166, column: 5, scope: !7303)
!7305 = !DILocation(line: 167, column: 4, scope: !7303)
!7306 = distinct !{!7306, !7307, !7308}
!7307 = !DILocation(line: 164, column: 2, scope: !7289)
!7308 = !DILocation(line: 168, column: 2, scope: !7289)
!7309 = !DILocation(line: 170, column: 25, scope: !7289)
!7310 = !DILocation(line: 170, column: 31, scope: !7289)
!7311 = !DILocation(line: 170, column: 29, scope: !7289)
!7312 = !DILocation(line: 170, column: 9, scope: !7289)
!7313 = !DILocation(line: 170, column: 2, scope: !7289)
!7314 = distinct !DISubprogram(name: "strtok_r", scope: !7148, file: !7148, line: 180, type: !7315, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7318)
!7315 = !DISubroutineType(types: !7316)
!7316 = !{!256, !256, !123, !7317}
!7317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!7318 = !{!7319, !7320, !7321, !7322, !7323}
!7319 = !DILocalVariable(name: "str", arg: 1, scope: !7314, file: !7148, line: 180, type: !256)
!7320 = !DILocalVariable(name: "sep", arg: 2, scope: !7314, file: !7148, line: 180, type: !123)
!7321 = !DILocalVariable(name: "state", arg: 3, scope: !7314, file: !7148, line: 180, type: !7317)
!7322 = !DILocalVariable(name: "start", scope: !7314, file: !7148, line: 182, type: !256)
!7323 = !DILocalVariable(name: "end", scope: !7314, file: !7148, line: 182, type: !256)
!7324 = !DILocation(line: 0, scope: !7314)
!7325 = !DILocation(line: 184, column: 10, scope: !7314)
!7326 = !DILocation(line: 184, column: 22, scope: !7314)
!7327 = !DILocation(line: 187, column: 9, scope: !7314)
!7328 = !DILocation(line: 187, column: 16, scope: !7314)
!7329 = !DILocation(line: 187, column: 19, scope: !7314)
!7330 = !DILocation(line: 187, column: 2, scope: !7314)
!7331 = !DILocation(line: 188, column: 8, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7314, file: !7148, line: 187, column: 40)
!7333 = distinct !{!7333, !7330, !7334}
!7334 = !DILocation(line: 189, column: 2, scope: !7314)
!7335 = !DILocation(line: 198, column: 9, scope: !7314)
!7336 = !DILocation(line: 198, column: 18, scope: !7314)
!7337 = !DILocation(line: 198, column: 17, scope: !7314)
!7338 = !DILocation(line: 198, column: 2, scope: !7314)
!7339 = !DILocation(line: 199, column: 6, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7314, file: !7148, line: 198, column: 37)
!7341 = !DILocation(line: 198, column: 14, scope: !7314)
!7342 = distinct !{!7342, !7338, !7343}
!7343 = !DILocation(line: 200, column: 2, scope: !7314)
!7344 = !DILocation(line: 203, column: 8, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7346, file: !7148, line: 202, column: 20)
!7346 = distinct !DILexicalBlock(scope: !7314, file: !7148, line: 202, column: 6)
!7347 = !DILocation(line: 204, column: 16, scope: !7345)
!7348 = !DILocation(line: 205, column: 2, scope: !7345)
!7349 = !DILocation(line: 210, column: 1, scope: !7314)
!7350 = distinct !DISubprogram(name: "strcat", scope: !7148, file: !7148, line: 212, type: !7149, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7351)
!7351 = !{!7352, !7353}
!7352 = !DILocalVariable(name: "dest", arg: 1, scope: !7350, file: !7148, line: 212, type: !7151)
!7353 = !DILocalVariable(name: "src", arg: 2, scope: !7350, file: !7148, line: 212, type: !7152)
!7354 = !DILocation(line: 0, scope: !7350)
!7355 = !DILocation(line: 214, column: 16, scope: !7350)
!7356 = !DILocation(line: 214, column: 14, scope: !7350)
!7357 = !DILocation(line: 214, column: 2, scope: !7350)
!7358 = !DILocation(line: 215, column: 2, scope: !7350)
!7359 = distinct !DISubprogram(name: "strncat", scope: !7148, file: !7148, line: 218, type: !7170, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7360)
!7360 = !{!7361, !7362, !7363, !7364, !7365}
!7361 = !DILocalVariable(name: "dest", arg: 1, scope: !7359, file: !7148, line: 218, type: !7151)
!7362 = !DILocalVariable(name: "src", arg: 2, scope: !7359, file: !7148, line: 218, type: !7152)
!7363 = !DILocalVariable(name: "n", arg: 3, scope: !7359, file: !7148, line: 219, type: !252)
!7364 = !DILocalVariable(name: "orig_dest", scope: !7359, file: !7148, line: 221, type: !256)
!7365 = !DILocalVariable(name: "len", scope: !7359, file: !7148, line: 222, type: !252)
!7366 = !DILocation(line: 0, scope: !7359)
!7367 = !DILocation(line: 222, column: 15, scope: !7359)
!7368 = !DILocation(line: 224, column: 7, scope: !7359)
!7369 = !DILocation(line: 225, column: 14, scope: !7359)
!7370 = !DILocation(line: 225, column: 19, scope: !7359)
!7371 = !DILocation(line: 225, column: 11, scope: !7359)
!7372 = !DILocation(line: 225, column: 23, scope: !7359)
!7373 = !DILocation(line: 225, column: 28, scope: !7359)
!7374 = !DILocation(line: 225, column: 2, scope: !7359)
!7375 = !DILocation(line: 226, column: 17, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7359, file: !7148, line: 225, column: 38)
!7377 = !DILocation(line: 226, column: 8, scope: !7376)
!7378 = !DILocation(line: 226, column: 11, scope: !7376)
!7379 = distinct !{!7379, !7374, !7380}
!7380 = !DILocation(line: 227, column: 2, scope: !7359)
!7381 = !DILocation(line: 228, column: 8, scope: !7359)
!7382 = !DILocation(line: 230, column: 2, scope: !7359)
!7383 = distinct !DISubprogram(name: "memcmp", scope: !7148, file: !7148, line: 239, type: !7384, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7386)
!7384 = !DISubroutineType(types: !7385)
!7385 = !{!107, !13, !13, !252}
!7386 = !{!7387, !7388, !7389, !7390, !7391}
!7387 = !DILocalVariable(name: "m1", arg: 1, scope: !7383, file: !7148, line: 239, type: !13)
!7388 = !DILocalVariable(name: "m2", arg: 2, scope: !7383, file: !7148, line: 239, type: !13)
!7389 = !DILocalVariable(name: "n", arg: 3, scope: !7383, file: !7148, line: 239, type: !252)
!7390 = !DILocalVariable(name: "c1", scope: !7383, file: !7148, line: 241, type: !123)
!7391 = !DILocalVariable(name: "c2", scope: !7383, file: !7148, line: 242, type: !123)
!7392 = !DILocation(line: 0, scope: !7383)
!7393 = !DILocation(line: 244, column: 7, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7383, file: !7148, line: 244, column: 6)
!7395 = !DILocation(line: 244, column: 6, scope: !7383)
!7396 = !DILocation(line: 248, column: 10, scope: !7383)
!7397 = !DILocation(line: 248, column: 14, scope: !7383)
!7398 = !DILocation(line: 248, column: 19, scope: !7383)
!7399 = !DILocation(line: 248, column: 2, scope: !7383)
!7400 = !DILocation(line: 248, column: 23, scope: !7383)
!7401 = !DILocation(line: 248, column: 30, scope: !7383)
!7402 = !DILocation(line: 248, column: 27, scope: !7383)
!7403 = !DILocation(line: 249, column: 5, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7383, file: !7148, line: 248, column: 36)
!7405 = !DILocation(line: 250, column: 5, scope: !7404)
!7406 = distinct !{!7406, !7399, !7407}
!7407 = !DILocation(line: 251, column: 2, scope: !7383)
!7408 = !DILocation(line: 253, column: 9, scope: !7383)
!7409 = !DILocation(line: 253, column: 15, scope: !7383)
!7410 = !DILocation(line: 253, column: 13, scope: !7383)
!7411 = !DILocation(line: 253, column: 2, scope: !7383)
!7412 = !DILocation(line: 254, column: 1, scope: !7383)
!7413 = distinct !DISubprogram(name: "memmove", scope: !7148, file: !7148, line: 263, type: !7414, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7416)
!7414 = !DISubroutineType(types: !7415)
!7415 = !{!102, !102, !13, !252}
!7416 = !{!7417, !7418, !7419, !7420, !7421}
!7417 = !DILocalVariable(name: "d", arg: 1, scope: !7413, file: !7148, line: 263, type: !102)
!7418 = !DILocalVariable(name: "s", arg: 2, scope: !7413, file: !7148, line: 263, type: !13)
!7419 = !DILocalVariable(name: "n", arg: 3, scope: !7413, file: !7148, line: 263, type: !252)
!7420 = !DILocalVariable(name: "dest", scope: !7413, file: !7148, line: 265, type: !256)
!7421 = !DILocalVariable(name: "src", scope: !7413, file: !7148, line: 266, type: !123)
!7422 = !DILocation(line: 0, scope: !7413)
!7423 = !DILocation(line: 268, column: 21, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7413, file: !7148, line: 268, column: 6)
!7425 = !DILocation(line: 268, column: 28, scope: !7424)
!7426 = !DILocation(line: 268, column: 6, scope: !7413)
!7427 = !DILocation(line: 280, column: 12, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7424, file: !7148, line: 278, column: 9)
!7429 = !DILocation(line: 280, column: 3, scope: !7428)
!7430 = !DILocation(line: 275, column: 5, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7432, file: !7148, line: 274, column: 17)
!7432 = distinct !DILexicalBlock(scope: !7424, file: !7148, line: 268, column: 33)
!7433 = !DILocation(line: 276, column: 14, scope: !7431)
!7434 = !DILocation(line: 276, column: 4, scope: !7431)
!7435 = !DILocation(line: 276, column: 12, scope: !7431)
!7436 = !DILocation(line: 274, column: 12, scope: !7432)
!7437 = !DILocation(line: 274, column: 3, scope: !7432)
!7438 = distinct !{!7438, !7437, !7439}
!7439 = !DILocation(line: 277, column: 3, scope: !7432)
!7440 = !DILocation(line: 281, column: 12, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7428, file: !7148, line: 280, column: 17)
!7442 = !DILocation(line: 281, column: 10, scope: !7441)
!7443 = !DILocation(line: 282, column: 8, scope: !7441)
!7444 = !DILocation(line: 283, column: 7, scope: !7441)
!7445 = !DILocation(line: 284, column: 5, scope: !7441)
!7446 = distinct !{!7446, !7429, !7447}
!7447 = !DILocation(line: 285, column: 3, scope: !7428)
!7448 = !DILocation(line: 288, column: 2, scope: !7413)
!7449 = distinct !DISubprogram(name: "memcpy", scope: !7148, file: !7148, line: 298, type: !7450, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7454)
!7450 = !DISubroutineType(types: !7451)
!7451 = !{!102, !7452, !7453, !252}
!7452 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7453 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7454 = !{!7455, !7456, !7457, !7458, !7459}
!7455 = !DILocalVariable(name: "d", arg: 1, scope: !7449, file: !7148, line: 298, type: !7452)
!7456 = !DILocalVariable(name: "s", arg: 2, scope: !7449, file: !7148, line: 298, type: !7453)
!7457 = !DILocalVariable(name: "n", arg: 3, scope: !7449, file: !7148, line: 298, type: !252)
!7458 = !DILocalVariable(name: "d_byte", scope: !7449, file: !7148, line: 302, type: !144)
!7459 = !DILocalVariable(name: "s_byte", scope: !7449, file: !7148, line: 303, type: !2775)
!7460 = !DILocation(line: 0, scope: !7449)
!7461 = !DILocation(line: 337, column: 11, scope: !7449)
!7462 = !DILocation(line: 337, column: 2, scope: !7449)
!7463 = !DILocation(line: 338, column: 25, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7449, file: !7148, line: 337, column: 16)
!7465 = !DILocation(line: 338, column: 17, scope: !7464)
!7466 = !DILocation(line: 338, column: 11, scope: !7464)
!7467 = !DILocation(line: 338, column: 15, scope: !7464)
!7468 = !DILocation(line: 339, column: 4, scope: !7464)
!7469 = distinct !{!7469, !7462, !7470}
!7470 = !DILocation(line: 340, column: 2, scope: !7449)
!7471 = !DILocation(line: 342, column: 2, scope: !7449)
!7472 = distinct !DISubprogram(name: "memset", scope: !7148, file: !7148, line: 352, type: !7473, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7475)
!7473 = !DISubroutineType(types: !7474)
!7474 = !{!102, !102, !107, !252}
!7475 = !{!7476, !7477, !7478, !7479, !7480}
!7476 = !DILocalVariable(name: "buf", arg: 1, scope: !7472, file: !7148, line: 352, type: !102)
!7477 = !DILocalVariable(name: "c", arg: 2, scope: !7472, file: !7148, line: 352, type: !107)
!7478 = !DILocalVariable(name: "n", arg: 3, scope: !7472, file: !7148, line: 352, type: !252)
!7479 = !DILocalVariable(name: "d_byte", scope: !7472, file: !7148, line: 356, type: !144)
!7480 = !DILocalVariable(name: "c_byte", scope: !7472, file: !7148, line: 357, type: !134)
!7481 = !DILocation(line: 0, scope: !7472)
!7482 = !DILocation(line: 357, column: 25, scope: !7472)
!7483 = !DILocation(line: 389, column: 11, scope: !7472)
!7484 = !DILocation(line: 389, column: 2, scope: !7472)
!7485 = !DILocation(line: 390, column: 11, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7472, file: !7148, line: 389, column: 16)
!7487 = !DILocation(line: 390, column: 15, scope: !7486)
!7488 = !DILocation(line: 391, column: 4, scope: !7486)
!7489 = distinct !{!7489, !7484, !7490}
!7490 = !DILocation(line: 392, column: 2, scope: !7472)
!7491 = !DILocation(line: 394, column: 2, scope: !7472)
!7492 = distinct !DISubprogram(name: "memchr", scope: !7148, file: !7148, line: 404, type: !7493, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7495)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{!102, !13, !107, !252}
!7495 = !{!7496, !7497, !7498, !7499}
!7496 = !DILocalVariable(name: "s", arg: 1, scope: !7492, file: !7148, line: 404, type: !13)
!7497 = !DILocalVariable(name: "c", arg: 2, scope: !7492, file: !7148, line: 404, type: !107)
!7498 = !DILocalVariable(name: "n", arg: 3, scope: !7492, file: !7148, line: 404, type: !252)
!7499 = !DILocalVariable(name: "p", scope: !7500, file: !7148, line: 407, type: !2775)
!7500 = distinct !DILexicalBlock(scope: !7501, file: !7148, line: 406, column: 14)
!7501 = distinct !DILexicalBlock(scope: !7492, file: !7148, line: 406, column: 6)
!7502 = !DILocation(line: 0, scope: !7492)
!7503 = !DILocation(line: 406, column: 8, scope: !7501)
!7504 = !DILocation(line: 406, column: 6, scope: !7492)
!7505 = !DILocation(line: 409, column: 3, scope: !7500)
!7506 = !DILocation(line: 0, scope: !7500)
!7507 = !DILocation(line: 410, column: 8, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !7148, line: 410, column: 8)
!7509 = distinct !DILexicalBlock(scope: !7500, file: !7148, line: 409, column: 6)
!7510 = !DILocation(line: 410, column: 13, scope: !7508)
!7511 = !DILocation(line: 410, column: 8, scope: !7509)
!7512 = distinct !{!7512, !7505, !7513}
!7513 = !DILocation(line: 414, column: 20, scope: !7500)
!7514 = !DILocation(line: 417, column: 2, scope: !7492)
!7515 = !DILocation(line: 418, column: 1, scope: !7492)
!7516 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !535, file: !535, line: 23, type: !3473, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7517)
!7517 = !{!7518}
!7518 = !DILocalVariable(name: "hook", arg: 1, scope: !7516, file: !535, line: 23, type: !269)
!7519 = !DILocation(line: 0, scope: !7516)
!7520 = !DILocation(line: 25, column: 15, scope: !7516)
!7521 = !DILocation(line: 26, column: 1, scope: !7516)
!7522 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !535, file: !535, line: 14, type: !270, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7523)
!7523 = !{!7524}
!7524 = !DILocalVariable(name: "c", arg: 1, scope: !7522, file: !535, line: 14, type: !107)
!7525 = !DILocation(line: 0, scope: !7522)
!7526 = !DILocation(line: 18, column: 2, scope: !7522)
!7527 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !535, file: !535, line: 28, type: !7528, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7530)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{!107, !107, !531}
!7530 = !{!7531, !7532}
!7531 = !DILocalVariable(name: "c", arg: 1, scope: !7527, file: !535, line: 28, type: !107)
!7532 = !DILocalVariable(name: "stream", arg: 2, scope: !7527, file: !535, line: 28, type: !531)
!7533 = !DILocation(line: 0, scope: !7527)
!7534 = !DILocation(line: 30, column: 27, scope: !7527)
!7535 = !DILocation(line: 30, column: 50, scope: !7527)
!7536 = !DILocation(line: 30, column: 9, scope: !7527)
!7537 = !DILocation(line: 30, column: 2, scope: !7527)
!7538 = distinct !DISubprogram(name: "fputc", scope: !535, file: !535, line: 41, type: !7528, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7539)
!7539 = !{!7540, !7541}
!7540 = !DILocalVariable(name: "c", arg: 1, scope: !7538, file: !535, line: 41, type: !107)
!7541 = !DILocalVariable(name: "stream", arg: 2, scope: !7538, file: !535, line: 41, type: !531)
!7542 = !DILocation(line: 0, scope: !7538)
!7543 = !DILocation(line: 43, column: 9, scope: !7538)
!7544 = !DILocation(line: 43, column: 2, scope: !7538)
!7545 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7546, file: !7546, line: 72, type: !7528, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7547)
!7546 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/echo_bot")
!7547 = !{!7548, !7549}
!7548 = !DILocalVariable(name: "c", arg: 1, scope: !7545, file: !7546, line: 72, type: !107)
!7549 = !DILocalVariable(name: "stream", arg: 2, scope: !7545, file: !7546, line: 72, type: !531)
!7550 = !DILocation(line: 0, scope: !7545)
!7551 = !DILocation(line: 81, column: 2, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7545, file: !7546, line: 81, column: 2)
!7553 = !{i64 2154126585}
!7554 = !DILocation(line: 82, column: 9, scope: !7545)
!7555 = !DILocation(line: 82, column: 2, scope: !7545)
!7556 = distinct !DISubprogram(name: "fputs", scope: !535, file: !535, line: 46, type: !7557, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7560)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!107, !7152, !7559}
!7559 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !531)
!7560 = !{!7561, !7562, !7563, !7564}
!7561 = !DILocalVariable(name: "s", arg: 1, scope: !7556, file: !535, line: 46, type: !7152)
!7562 = !DILocalVariable(name: "stream", arg: 2, scope: !7556, file: !535, line: 46, type: !7559)
!7563 = !DILocalVariable(name: "len", scope: !7556, file: !535, line: 48, type: !107)
!7564 = !DILocalVariable(name: "ret", scope: !7556, file: !535, line: 49, type: !107)
!7565 = !DILocation(line: 0, scope: !7556)
!7566 = !DILocation(line: 48, column: 12, scope: !7556)
!7567 = !DILocation(line: 51, column: 8, scope: !7556)
!7568 = !DILocation(line: 53, column: 13, scope: !7556)
!7569 = !DILocation(line: 53, column: 9, scope: !7556)
!7570 = !DILocation(line: 53, column: 2, scope: !7556)
!7571 = distinct !DISubprogram(name: "fwrite", scope: !535, file: !535, line: 99, type: !7572, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7574)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!252, !7453, !252, !252, !7559}
!7574 = !{!7575, !7576, !7577, !7578}
!7575 = !DILocalVariable(name: "ptr", arg: 1, scope: !7571, file: !535, line: 99, type: !7453)
!7576 = !DILocalVariable(name: "size", arg: 2, scope: !7571, file: !535, line: 99, type: !252)
!7577 = !DILocalVariable(name: "nitems", arg: 3, scope: !7571, file: !535, line: 99, type: !252)
!7578 = !DILocalVariable(name: "stream", arg: 4, scope: !7571, file: !535, line: 100, type: !7559)
!7579 = !DILocation(line: 0, scope: !7571)
!7580 = !DILocation(line: 102, column: 9, scope: !7571)
!7581 = !DILocation(line: 102, column: 2, scope: !7571)
!7582 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7546, file: !7546, line: 96, type: !7572, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7583)
!7583 = !{!7584, !7585, !7586, !7587}
!7584 = !DILocalVariable(name: "ptr", arg: 1, scope: !7582, file: !7546, line: 96, type: !7453)
!7585 = !DILocalVariable(name: "size", arg: 2, scope: !7582, file: !7546, line: 96, type: !252)
!7586 = !DILocalVariable(name: "nitems", arg: 3, scope: !7582, file: !7546, line: 96, type: !252)
!7587 = !DILocalVariable(name: "stream", arg: 4, scope: !7582, file: !7546, line: 96, type: !7559)
!7588 = !DILocation(line: 0, scope: !7582)
!7589 = !DILocation(line: 107, column: 2, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7582, file: !7546, line: 107, column: 2)
!7591 = !{i64 2154126689}
!7592 = !DILocation(line: 108, column: 9, scope: !7582)
!7593 = !DILocation(line: 108, column: 2, scope: !7582)
!7594 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !535, file: !535, line: 56, type: !7572, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7595)
!7595 = !{!7596, !7597, !7598, !7599, !7600, !7601, !7602, !7603}
!7596 = !DILocalVariable(name: "ptr", arg: 1, scope: !7594, file: !535, line: 56, type: !7453)
!7597 = !DILocalVariable(name: "size", arg: 2, scope: !7594, file: !535, line: 56, type: !252)
!7598 = !DILocalVariable(name: "nitems", arg: 3, scope: !7594, file: !535, line: 57, type: !252)
!7599 = !DILocalVariable(name: "stream", arg: 4, scope: !7594, file: !535, line: 57, type: !7559)
!7600 = !DILocalVariable(name: "i", scope: !7594, file: !535, line: 59, type: !252)
!7601 = !DILocalVariable(name: "j", scope: !7594, file: !535, line: 60, type: !252)
!7602 = !DILocalVariable(name: "p", scope: !7594, file: !535, line: 61, type: !2775)
!7603 = !DILabel(scope: !7594, name: "done", file: !535, line: 82)
!7604 = !DILocation(line: 0, scope: !7594)
!7605 = !DILocation(line: 63, column: 14, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7594, file: !535, line: 63, column: 6)
!7607 = !DILocation(line: 63, column: 24, scope: !7606)
!7608 = !DILocation(line: 72, column: 3, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7594, file: !535, line: 70, column: 5)
!7610 = !DILocation(line: 0, scope: !7609)
!7611 = !DILocation(line: 73, column: 8, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !535, line: 73, column: 8)
!7613 = distinct !DILexicalBlock(scope: !7609, file: !535, line: 72, column: 6)
!7614 = !DILocation(line: 73, column: 29, scope: !7612)
!7615 = !DILocation(line: 73, column: 27, scope: !7612)
!7616 = !DILocation(line: 73, column: 21, scope: !7612)
!7617 = !DILocation(line: 73, column: 33, scope: !7612)
!7618 = !DILocation(line: 73, column: 8, scope: !7613)
!7619 = !DILocation(line: 76, column: 5, scope: !7613)
!7620 = !DILocation(line: 77, column: 14, scope: !7609)
!7621 = !DILocation(line: 77, column: 3, scope: !7613)
!7622 = distinct !{!7622, !7608, !7623}
!7623 = !DILocation(line: 77, column: 17, scope: !7609)
!7624 = !DILocation(line: 79, column: 4, scope: !7609)
!7625 = !DILocation(line: 80, column: 13, scope: !7594)
!7626 = !DILocation(line: 80, column: 2, scope: !7609)
!7627 = distinct !{!7627, !7628, !7629}
!7628 = !DILocation(line: 70, column: 2, scope: !7594)
!7629 = !DILocation(line: 80, column: 16, scope: !7594)
!7630 = !DILocation(line: 82, column: 1, scope: !7594)
!7631 = !DILocation(line: 83, column: 17, scope: !7594)
!7632 = !DILocation(line: 83, column: 2, scope: !7594)
!7633 = !DILocation(line: 84, column: 1, scope: !7594)
!7634 = distinct !DISubprogram(name: "puts", scope: !535, file: !535, line: 106, type: !7635, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7637)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{!107, !123}
!7637 = !{!7638}
!7638 = !DILocalVariable(name: "s", arg: 1, scope: !7634, file: !535, line: 106, type: !123)
!7639 = !DILocation(line: 0, scope: !7634)
!7640 = !DILocation(line: 108, column: 6, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7634, file: !535, line: 108, column: 6)
!7642 = !DILocation(line: 108, column: 23, scope: !7641)
!7643 = !DILocation(line: 108, column: 6, scope: !7634)
!7644 = !DILocation(line: 112, column: 9, scope: !7634)
!7645 = !DILocation(line: 112, column: 29, scope: !7634)
!7646 = !DILocation(line: 112, column: 2, scope: !7634)
!7647 = !DILocation(line: 113, column: 1, scope: !7634)
!7648 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !647, file: !647, line: 368, type: !700, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7649)
!7649 = !{!7650}
!7650 = !DILocalVariable(name: "dev", arg: 1, scope: !7648, file: !647, line: 368, type: !676)
!7651 = !DILocation(line: 0, scope: !7648)
!7652 = !DILocation(line: 370, column: 2, scope: !7648)
!7653 = !DILocation(line: 371, column: 1, scope: !7648)
!7654 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !647, file: !647, line: 243, type: !7655, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7657)
!7655 = !DISubroutineType(types: !7656)
!7656 = !{null, !107, !107, !676}
!7657 = !{!7658, !7659, !7660, !7661, !7663}
!7658 = !DILocalVariable(name: "min", arg: 1, scope: !7654, file: !647, line: 243, type: !107)
!7659 = !DILocalVariable(name: "max", arg: 2, scope: !7654, file: !647, line: 243, type: !107)
!7660 = !DILocalVariable(name: "dev", arg: 3, scope: !7654, file: !647, line: 243, type: !676)
!7661 = !DILocalVariable(name: "data", scope: !7654, file: !647, line: 245, type: !7662)
!7662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!7663 = !DILocalVariable(name: "line", scope: !7654, file: !647, line: 246, type: !107)
!7664 = !DILocation(line: 0, scope: !7654)
!7665 = !DILocation(line: 245, column: 38, scope: !7654)
!7666 = !DILocation(line: 249, column: 24, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !647, line: 249, column: 2)
!7668 = distinct !DILexicalBlock(scope: !7654, file: !647, line: 249, column: 2)
!7669 = !DILocation(line: 249, column: 2, scope: !7668)
!7670 = !DILocation(line: 251, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !647, line: 251, column: 7)
!7672 = distinct !DILexicalBlock(scope: !7667, file: !647, line: 249, column: 39)
!7673 = !DILocation(line: 251, column: 7, scope: !7672)
!7674 = !DILocation(line: 253, column: 4, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7671, file: !647, line: 251, column: 36)
!7676 = !DILocation(line: 256, column: 24, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7675, file: !647, line: 256, column: 8)
!7678 = !DILocation(line: 256, column: 9, scope: !7677)
!7679 = !DILocation(line: 256, column: 8, scope: !7675)
!7680 = !DILocation(line: 260, column: 43, scope: !7675)
!7681 = !DILocation(line: 260, column: 4, scope: !7675)
!7682 = !DILocation(line: 261, column: 3, scope: !7675)
!7683 = !DILocation(line: 249, column: 35, scope: !7667)
!7684 = distinct !{!7684, !7669, !7685}
!7685 = !DILocation(line: 262, column: 2, scope: !7668)
!7686 = !DILocation(line: 263, column: 1, scope: !7654)
!7687 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !647, file: !647, line: 158, type: !270, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7688)
!7688 = !{!7689}
!7689 = !DILocalVariable(name: "line", arg: 1, scope: !7687, file: !647, line: 158, type: !107)
!7690 = !DILocation(line: 0, scope: !7687)
!7691 = !DILocation(line: 170, column: 38, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !647, line: 160, column: 17)
!7693 = distinct !DILexicalBlock(scope: !7687, file: !647, line: 160, column: 6)
!7694 = !DILocation(line: 170, column: 10, scope: !7692)
!7695 = !DILocation(line: 176, column: 1, scope: !7687)
!7696 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !647, file: !647, line: 183, type: !7697, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7699)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{null, !107}
!7699 = !{!7700}
!7700 = !DILocalVariable(name: "line", arg: 1, scope: !7696, file: !647, line: 183, type: !107)
!7701 = !DILocation(line: 0, scope: !7696)
!7702 = !DILocation(line: 195, column: 28, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7704, file: !647, line: 185, column: 17)
!7704 = distinct !DILexicalBlock(scope: !7696, file: !647, line: 185, column: 6)
!7705 = !DILocation(line: 195, column: 3, scope: !7703)
!7706 = !DILocation(line: 200, column: 1, scope: !7696)
!7707 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7708, file: !7708, line: 910, type: !6144, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7709)
!7708 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7709 = !{!7710}
!7710 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7707, file: !7708, line: 910, type: !162)
!7711 = !DILocation(line: 0, scope: !7707)
!7712 = !DILocation(line: 912, column: 3, scope: !7707)
!7713 = !DILocation(line: 913, column: 1, scope: !7707)
!7714 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7708, file: !7708, line: 834, type: !7060, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7715)
!7715 = !{!7716}
!7716 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7714, file: !7708, line: 834, type: !162)
!7717 = !DILocation(line: 0, scope: !7714)
!7718 = !DILocation(line: 836, column: 11, scope: !7714)
!7719 = !DILocation(line: 836, column: 40, scope: !7714)
!7720 = !DILocation(line: 836, column: 3, scope: !7714)
!7721 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !647, file: !647, line: 304, type: !700, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7722)
!7722 = !{!7723}
!7723 = !DILocalVariable(name: "dev", arg: 1, scope: !7721, file: !647, line: 304, type: !676)
!7724 = !DILocation(line: 0, scope: !7721)
!7725 = !DILocation(line: 306, column: 2, scope: !7721)
!7726 = !DILocation(line: 307, column: 1, scope: !7721)
!7727 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !647, file: !647, line: 299, type: !700, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7728)
!7728 = !{!7729}
!7729 = !DILocalVariable(name: "dev", arg: 1, scope: !7727, file: !647, line: 299, type: !676)
!7730 = !DILocation(line: 0, scope: !7727)
!7731 = !DILocation(line: 301, column: 2, scope: !7727)
!7732 = !DILocation(line: 302, column: 1, scope: !7727)
!7733 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !647, file: !647, line: 294, type: !700, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7734)
!7734 = !{!7735}
!7735 = !DILocalVariable(name: "dev", arg: 1, scope: !7733, file: !647, line: 294, type: !676)
!7736 = !DILocation(line: 0, scope: !7733)
!7737 = !DILocation(line: 296, column: 2, scope: !7733)
!7738 = !DILocation(line: 297, column: 1, scope: !7733)
!7739 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !647, file: !647, line: 397, type: !700, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7740)
!7740 = !{!7741}
!7741 = !DILocalVariable(name: "dev", arg: 1, scope: !7739, file: !647, line: 397, type: !676)
!7742 = !DILocation(line: 0, scope: !7739)
!7743 = !DILocation(line: 399, column: 2, scope: !7739)
!7744 = !DILocation(line: 400, column: 1, scope: !7739)
!7745 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !647, file: !647, line: 392, type: !700, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7746)
!7746 = !{!7747}
!7747 = !DILocalVariable(name: "dev", arg: 1, scope: !7745, file: !647, line: 392, type: !676)
!7748 = !DILocation(line: 0, scope: !7745)
!7749 = !DILocation(line: 394, column: 2, scope: !7745)
!7750 = !DILocation(line: 395, column: 1, scope: !7745)
!7751 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !647, file: !647, line: 289, type: !700, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7752)
!7752 = !{!7753}
!7753 = !DILocalVariable(name: "dev", arg: 1, scope: !7751, file: !647, line: 289, type: !676)
!7754 = !DILocation(line: 0, scope: !7751)
!7755 = !DILocation(line: 291, column: 2, scope: !7751)
!7756 = !DILocation(line: 292, column: 1, scope: !7751)
!7757 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !647, file: !647, line: 387, type: !700, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7758)
!7758 = !{!7759}
!7759 = !DILocalVariable(name: "dev", arg: 1, scope: !7757, file: !647, line: 387, type: !676)
!7760 = !DILocation(line: 0, scope: !7757)
!7761 = !DILocation(line: 389, column: 2, scope: !7757)
!7762 = !DILocation(line: 390, column: 1, scope: !7757)
!7763 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !647, file: !647, line: 382, type: !700, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7764)
!7764 = !{!7765}
!7765 = !DILocalVariable(name: "dev", arg: 1, scope: !7763, file: !647, line: 382, type: !676)
!7766 = !DILocation(line: 0, scope: !7763)
!7767 = !DILocation(line: 384, column: 2, scope: !7763)
!7768 = !DILocation(line: 385, column: 1, scope: !7763)
!7769 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !647, file: !647, line: 373, type: !700, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7770)
!7770 = !{!7771}
!7771 = !DILocalVariable(name: "dev", arg: 1, scope: !7769, file: !647, line: 373, type: !676)
!7772 = !DILocation(line: 0, scope: !7769)
!7773 = !DILocation(line: 375, column: 2, scope: !7769)
!7774 = !DILocation(line: 376, column: 1, scope: !7769)
!7775 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !647, file: !647, line: 284, type: !700, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7776)
!7776 = !{!7777}
!7777 = !DILocalVariable(name: "dev", arg: 1, scope: !7775, file: !647, line: 284, type: !676)
!7778 = !DILocation(line: 0, scope: !7775)
!7779 = !DILocation(line: 286, column: 2, scope: !7775)
!7780 = !DILocation(line: 287, column: 1, scope: !7775)
!7781 = distinct !DISubprogram(name: "stm32_exti_init", scope: !647, file: !647, line: 416, type: !674, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7782)
!7782 = !{!7783}
!7783 = !DILocalVariable(name: "dev", arg: 1, scope: !7781, file: !647, line: 416, type: !676)
!7784 = !DILocation(line: 0, scope: !7781)
!7785 = !DILocation(line: 418, column: 2, scope: !7781)
!7786 = !DILocation(line: 420, column: 2, scope: !7781)
!7787 = !DILocation(line: 0, scope: !699)
!7788 = !DILocation(line: 493, column: 2, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !699, file: !647, line: 493, column: 2)
!7790 = !DILocation(line: 497, column: 2, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !699, file: !647, line: 497, column: 2)
!7792 = !DILocation(line: 507, column: 2, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !699, file: !647, line: 507, column: 2)
!7794 = !DILocation(line: 512, column: 2, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !699, file: !647, line: 512, column: 2)
!7796 = !DILocation(line: 516, column: 2, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !699, file: !647, line: 516, column: 2)
!7798 = !DILocation(line: 523, column: 2, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !699, file: !647, line: 523, column: 2)
!7800 = !DILocation(line: 527, column: 2, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !699, file: !647, line: 527, column: 2)
!7802 = !DILocation(line: 581, column: 2, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !699, file: !647, line: 581, column: 2)
!7804 = !DILocation(line: 586, column: 2, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !699, file: !647, line: 586, column: 2)
!7806 = !DILocation(line: 591, column: 2, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !699, file: !647, line: 591, column: 2)
!7808 = !DILocation(line: 595, column: 2, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !699, file: !647, line: 595, column: 2)
!7810 = !DILocation(line: 607, column: 1, scope: !699)
!7811 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !647, file: !647, line: 112, type: !7697, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7812)
!7812 = !{!7813, !7814}
!7813 = !DILocalVariable(name: "line", arg: 1, scope: !7811, file: !647, line: 112, type: !107)
!7814 = !DILocalVariable(name: "irqnum", scope: !7811, file: !647, line: 114, type: !107)
!7815 = !DILocation(line: 0, scope: !7811)
!7816 = !DILocation(line: 121, column: 11, scope: !7811)
!7817 = !DILocation(line: 130, column: 26, scope: !7811)
!7818 = !DILocation(line: 130, column: 2, scope: !7811)
!7819 = !DILocation(line: 134, column: 2, scope: !7811)
!7820 = !DILocation(line: 135, column: 1, scope: !7811)
!7821 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7708, file: !7708, line: 268, type: !6144, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7822)
!7822 = !{!7823}
!7823 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7821, file: !7708, line: 268, type: !162)
!7824 = !DILocation(line: 0, scope: !7821)
!7825 = !DILocation(line: 270, column: 3, scope: !7821)
!7826 = !DILocation(line: 271, column: 1, scope: !7821)
!7827 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !647, file: !647, line: 137, type: !7697, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7828)
!7828 = !{!7829}
!7829 = !DILocalVariable(name: "line", arg: 1, scope: !7827, file: !647, line: 137, type: !107)
!7830 = !DILocation(line: 0, scope: !7827)
!7831 = !DILocation(line: 141, column: 11, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7827, file: !647, line: 141, column: 6)
!7833 = !DILocation(line: 141, column: 6, scope: !7827)
!7834 = !DILocation(line: 145, column: 28, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7832, file: !647, line: 141, column: 17)
!7836 = !DILocation(line: 145, column: 3, scope: !7835)
!7837 = !DILocation(line: 147, column: 2, scope: !7835)
!7838 = !DILocation(line: 151, column: 1, scope: !7827)
!7839 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7708, file: !7708, line: 309, type: !6144, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7840)
!7840 = !{!7841}
!7841 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7839, file: !7708, line: 309, type: !162)
!7842 = !DILocation(line: 0, scope: !7839)
!7843 = !DILocation(line: 311, column: 3, scope: !7839)
!7844 = !DILocation(line: 312, column: 1, scope: !7839)
!7845 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !647, file: !647, line: 202, type: !7846, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7848)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{null, !107, !107}
!7848 = !{!7849, !7850}
!7849 = !DILocalVariable(name: "line", arg: 1, scope: !7845, file: !647, line: 202, type: !107)
!7850 = !DILocalVariable(name: "trigger", arg: 2, scope: !7845, file: !647, line: 202, type: !107)
!7851 = !DILocation(line: 0, scope: !7845)
!7852 = !DILocation(line: 211, column: 2, scope: !7845)
!7853 = !DILocation(line: 213, column: 36, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7845, file: !647, line: 211, column: 19)
!7855 = !DILocation(line: 213, column: 3, scope: !7854)
!7856 = !DILocation(line: 214, column: 3, scope: !7854)
!7857 = !DILocation(line: 215, column: 3, scope: !7854)
!7858 = !DILocation(line: 217, column: 35, scope: !7854)
!7859 = !DILocation(line: 217, column: 3, scope: !7854)
!7860 = !DILocation(line: 218, column: 3, scope: !7854)
!7861 = !DILocation(line: 219, column: 3, scope: !7854)
!7862 = !DILocation(line: 221, column: 36, scope: !7854)
!7863 = !DILocation(line: 221, column: 3, scope: !7854)
!7864 = !DILocation(line: 222, column: 3, scope: !7854)
!7865 = !DILocation(line: 223, column: 3, scope: !7854)
!7866 = !DILocation(line: 225, column: 35, scope: !7854)
!7867 = !DILocation(line: 225, column: 3, scope: !7854)
!7868 = !DILocation(line: 226, column: 3, scope: !7854)
!7869 = !DILocation(line: 227, column: 3, scope: !7854)
!7870 = !DILocation(line: 232, column: 1, scope: !7845)
!7871 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7708, file: !7708, line: 573, type: !6144, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7872)
!7872 = !{!7873}
!7873 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7871, file: !7708, line: 573, type: !162)
!7874 = !DILocation(line: 0, scope: !7871)
!7875 = !DILocation(line: 575, column: 3, scope: !7871)
!7876 = !DILocation(line: 577, column: 1, scope: !7871)
!7877 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7708, file: !7708, line: 703, type: !6144, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7878)
!7878 = !{!7879}
!7879 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7877, file: !7708, line: 703, type: !162)
!7880 = !DILocation(line: 0, scope: !7877)
!7881 = !DILocation(line: 705, column: 3, scope: !7877)
!7882 = !DILocation(line: 706, column: 1, scope: !7877)
!7883 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7708, file: !7708, line: 529, type: !6144, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7884)
!7884 = !{!7885}
!7885 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7883, file: !7708, line: 529, type: !162)
!7886 = !DILocation(line: 0, scope: !7883)
!7887 = !DILocation(line: 531, column: 3, scope: !7883)
!7888 = !DILocation(line: 533, column: 1, scope: !7883)
!7889 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7708, file: !7708, line: 661, type: !6144, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7890)
!7890 = !{!7891}
!7891 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7889, file: !7708, line: 661, type: !162)
!7892 = !DILocation(line: 0, scope: !7889)
!7893 = !DILocation(line: 663, column: 3, scope: !7889)
!7894 = !DILocation(line: 664, column: 1, scope: !7889)
!7895 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !647, file: !647, line: 433, type: !7896, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7898)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!107, !107, !687, !102}
!7898 = !{!7899, !7900, !7901, !7902, !7904}
!7899 = !DILocalVariable(name: "line", arg: 1, scope: !7895, file: !647, line: 433, type: !107)
!7900 = !DILocalVariable(name: "cb", arg: 2, scope: !7895, file: !647, line: 433, type: !687)
!7901 = !DILocalVariable(name: "arg", arg: 3, scope: !7895, file: !647, line: 433, type: !102)
!7902 = !DILocalVariable(name: "dev", scope: !7895, file: !647, line: 435, type: !7903)
!7903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!7904 = !DILocalVariable(name: "data", scope: !7895, file: !647, line: 436, type: !7662)
!7905 = !DILocation(line: 0, scope: !7895)
!7906 = !DILocation(line: 438, column: 21, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7895, file: !647, line: 438, column: 6)
!7908 = !DILocation(line: 438, column: 6, scope: !7907)
!7909 = !DILocation(line: 438, column: 6, scope: !7895)
!7910 = !DILocation(line: 442, column: 20, scope: !7895)
!7911 = !DILocation(line: 443, column: 17, scope: !7895)
!7912 = !DILocation(line: 443, column: 22, scope: !7895)
!7913 = !DILocation(line: 445, column: 2, scope: !7895)
!7914 = !DILocation(line: 446, column: 1, scope: !7895)
!7915 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !647, file: !647, line: 448, type: !7697, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7916)
!7916 = !{!7917, !7918, !7919}
!7917 = !DILocalVariable(name: "line", arg: 1, scope: !7915, file: !647, line: 448, type: !107)
!7918 = !DILocalVariable(name: "dev", scope: !7915, file: !647, line: 450, type: !7903)
!7919 = !DILocalVariable(name: "data", scope: !7915, file: !647, line: 451, type: !7662)
!7920 = !DILocation(line: 0, scope: !7915)
!7921 = !DILocation(line: 453, column: 17, scope: !7915)
!7922 = !DILocation(line: 453, column: 20, scope: !7915)
!7923 = !DILocation(line: 454, column: 17, scope: !7915)
!7924 = !DILocation(line: 454, column: 22, scope: !7915)
!7925 = !DILocation(line: 455, column: 1, scope: !7915)
!7926 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !832, file: !832, line: 183, type: !870, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7927)
!7927 = !{!7928, !7929, !7930, !7931, !7932}
!7928 = !DILocalVariable(name: "dev", arg: 1, scope: !7926, file: !832, line: 183, type: !861)
!7929 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7926, file: !832, line: 184, type: !872)
!7930 = !DILocalVariable(name: "pclken", scope: !7926, file: !832, line: 186, type: !822)
!7931 = !DILocalVariable(name: "reg", scope: !7926, file: !832, line: 187, type: !1470)
!7932 = !DILocalVariable(name: "reg_val", scope: !7926, file: !832, line: 188, type: !162)
!7933 = !DILocation(line: 0, scope: !7926)
!7934 = !DILocation(line: 192, column: 6, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7926, file: !832, line: 192, column: 6)
!7936 = !DILocation(line: 192, column: 6, scope: !7926)
!7937 = !DILocation(line: 197, column: 52, scope: !7926)
!7938 = !DILocation(line: 197, column: 8, scope: !7926)
!7939 = !DILocation(line: 198, column: 12, scope: !7926)
!7940 = !DILocation(line: 199, column: 21, scope: !7926)
!7941 = !DILocation(line: 199, column: 10, scope: !7926)
!7942 = !DILocation(line: 200, column: 7, scope: !7926)
!7943 = !DILocation(line: 202, column: 2, scope: !7926)
!7944 = !DILocation(line: 203, column: 1, scope: !7926)
!7945 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !832, file: !832, line: 205, type: !870, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7946)
!7946 = !{!7947, !7948, !7949, !7950, !7951}
!7947 = !DILocalVariable(name: "dev", arg: 1, scope: !7945, file: !832, line: 205, type: !861)
!7948 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7945, file: !832, line: 206, type: !872)
!7949 = !DILocalVariable(name: "pclken", scope: !7945, file: !832, line: 208, type: !822)
!7950 = !DILocalVariable(name: "reg", scope: !7945, file: !832, line: 209, type: !1470)
!7951 = !DILocalVariable(name: "reg_val", scope: !7945, file: !832, line: 210, type: !162)
!7952 = !DILocation(line: 0, scope: !7945)
!7953 = !DILocation(line: 214, column: 6, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7945, file: !832, line: 214, column: 6)
!7955 = !DILocation(line: 214, column: 6, scope: !7945)
!7956 = !DILocation(line: 219, column: 52, scope: !7945)
!7957 = !DILocation(line: 219, column: 8, scope: !7945)
!7958 = !DILocation(line: 220, column: 12, scope: !7945)
!7959 = !DILocation(line: 221, column: 22, scope: !7945)
!7960 = !DILocation(line: 221, column: 13, scope: !7945)
!7961 = !DILocation(line: 221, column: 10, scope: !7945)
!7962 = !DILocation(line: 222, column: 7, scope: !7945)
!7963 = !DILocation(line: 224, column: 2, scope: !7945)
!7964 = !DILocation(line: 225, column: 1, scope: !7945)
!7965 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !832, file: !832, line: 262, type: !886, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7966)
!7966 = !{!7967, !7968, !7969, !7970, !7971, !7972, !7973, !7974}
!7967 = !DILocalVariable(name: "clock", arg: 1, scope: !7965, file: !832, line: 262, type: !861)
!7968 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7965, file: !832, line: 263, type: !872)
!7969 = !DILocalVariable(name: "rate", arg: 3, scope: !7965, file: !832, line: 264, type: !828)
!7970 = !DILocalVariable(name: "pclken", scope: !7965, file: !832, line: 266, type: !822)
!7971 = !DILocalVariable(name: "ahb_clock", scope: !7965, file: !832, line: 273, type: !162)
!7972 = !DILocalVariable(name: "apb1_clock", scope: !7965, file: !832, line: 274, type: !162)
!7973 = !DILocalVariable(name: "apb2_clock", scope: !7965, file: !832, line: 276, type: !162)
!7974 = !DILocalVariable(name: "ahb3_clock", scope: !7965, file: !832, line: 286, type: !162)
!7975 = !DILocation(line: 0, scope: !7965)
!7976 = !DILocation(line: 273, column: 23, scope: !7965)
!7977 = !DILocation(line: 299, column: 18, scope: !7965)
!7978 = !DILocation(line: 299, column: 2, scope: !7965)
!7979 = !DILocation(line: 274, column: 24, scope: !7965)
!7980 = !DILocation(line: 319, column: 3, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7965, file: !832, line: 299, column: 23)
!7982 = !DILocation(line: 276, column: 24, scope: !7965)
!7983 = !DILocation(line: 323, column: 3, scope: !7981)
!7984 = !DILocation(line: 346, column: 33, scope: !7981)
!7985 = !DILocation(line: 346, column: 11, scope: !7981)
!7986 = !DILocation(line: 350, column: 3, scope: !7981)
!7987 = !DILocation(line: 374, column: 3, scope: !7981)
!7988 = !DILocation(line: 379, column: 3, scope: !7981)
!7989 = !DILocation(line: 0, scope: !7981)
!7990 = !DILocation(line: 396, column: 1, scope: !7965)
!7991 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !832, file: !832, line: 227, type: !902, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7992)
!7992 = !{!7993, !7994, !7995, !7996, !7997, !7998, !7999, !8000}
!7993 = !DILocalVariable(name: "dev", arg: 1, scope: !7991, file: !832, line: 227, type: !861)
!7994 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7991, file: !832, line: 228, type: !872)
!7995 = !DILocalVariable(name: "data", arg: 3, scope: !7991, file: !832, line: 229, type: !102)
!7996 = !DILocalVariable(name: "pclken", scope: !7991, file: !832, line: 233, type: !822)
!7997 = !DILocalVariable(name: "reg", scope: !7991, file: !832, line: 234, type: !1470)
!7998 = !DILocalVariable(name: "reg_val", scope: !7991, file: !832, line: 235, type: !162)
!7999 = !DILocalVariable(name: "dt_val", scope: !7991, file: !832, line: 235, type: !162)
!8000 = !DILocalVariable(name: "err", scope: !7991, file: !832, line: 236, type: !107)
!8001 = !DILocation(line: 0, scope: !7991)
!8002 = !DILocation(line: 241, column: 30, scope: !7991)
!8003 = !DILocation(line: 241, column: 8, scope: !7991)
!8004 = !DILocation(line: 242, column: 10, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7991, file: !832, line: 242, column: 6)
!8006 = !DILocation(line: 242, column: 6, scope: !7991)
!8007 = !DILocation(line: 247, column: 11, scope: !7991)
!8008 = !DILocation(line: 248, column: 6, scope: !7991)
!8009 = !DILocation(line: 247, column: 44, scope: !7991)
!8010 = !DILocation(line: 250, column: 6, scope: !7991)
!8011 = !DILocation(line: 249, column: 52, scope: !7991)
!8012 = !DILocation(line: 249, column: 8, scope: !7991)
!8013 = !DILocation(line: 251, column: 12, scope: !7991)
!8014 = !DILocation(line: 252, column: 10, scope: !7991)
!8015 = !DILocation(line: 253, column: 7, scope: !7991)
!8016 = !DILocation(line: 255, column: 2, scope: !7991)
!8017 = !DILocation(line: 260, column: 1, scope: !7991)
!8018 = distinct !DISubprogram(name: "enabled_clock", scope: !832, file: !832, line: 100, type: !8019, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !8021)
!8019 = !DISubroutineType(types: !8020)
!8020 = !{!107, !162}
!8021 = !{!8022, !8023}
!8022 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8018, file: !832, line: 100, type: !162)
!8023 = !DILocalVariable(name: "r", scope: !8018, file: !832, line: 102, type: !107)
!8024 = !DILocation(line: 0, scope: !8018)
!8025 = !DILocation(line: 104, column: 2, scope: !8018)
!8026 = !DILocation(line: 180, column: 2, scope: !8018)
!8027 = !DILocation(line: 181, column: 1, scope: !8018)
!8028 = distinct !DISubprogram(name: "get_bus_clock", scope: !832, file: !832, line: 79, type: !8029, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !8031)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{!162, !162, !162}
!8031 = !{!8032, !8033}
!8032 = !DILocalVariable(name: "clock", arg: 1, scope: !8028, file: !832, line: 79, type: !162)
!8033 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8028, file: !832, line: 79, type: !162)
!8034 = !DILocation(line: 0, scope: !8028)
!8035 = !DILocation(line: 81, column: 15, scope: !8028)
!8036 = !DILocation(line: 81, column: 2, scope: !8028)
!8037 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !832, file: !832, line: 68, type: !8038, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !8040)
!8038 = !DISubroutineType(types: !8039)
!8039 = !{!162, !162, !107, !107, !107}
!8040 = !{!8041, !8042, !8043, !8044}
!8041 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8037, file: !832, line: 68, type: !162)
!8042 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8037, file: !832, line: 69, type: !107)
!8043 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8037, file: !832, line: 70, type: !107)
!8044 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8037, file: !832, line: 71, type: !107)
!8045 = !DILocation(line: 0, scope: !8037)
!8046 = !DILocation(line: 75, column: 22, scope: !8037)
!8047 = !DILocation(line: 75, column: 34, scope: !8037)
!8048 = !DILocation(line: 75, column: 2, scope: !8037)
!8049 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !832, file: !832, line: 641, type: !859, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !8050)
!8050 = !{!8051, !8052, !8053}
!8051 = !DILocalVariable(name: "dev", arg: 1, scope: !8049, file: !832, line: 641, type: !861)
!8052 = !DILocalVariable(name: "old_flash_freq", scope: !8049, file: !832, line: 664, type: !162)
!8053 = !DILocalVariable(name: "new_flash_freq", scope: !8049, file: !832, line: 665, type: !162)
!8054 = !DILocation(line: 0, scope: !8049)
!8055 = !DILocation(line: 646, column: 2, scope: !8049)
!8056 = !DILocation(line: 667, column: 19, scope: !8049)
!8057 = !DILocation(line: 674, column: 21, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8049, file: !832, line: 674, column: 6)
!8059 = !DILocation(line: 674, column: 6, scope: !8049)
!8060 = !DILocation(line: 675, column: 3, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8058, file: !832, line: 674, column: 59)
!8062 = !DILocation(line: 676, column: 2, scope: !8061)
!8063 = !DILocation(line: 680, column: 2, scope: !8049)
!8064 = !DILocation(line: 683, column: 2, scope: !8049)
!8065 = !DILocation(line: 690, column: 3, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !832, line: 689, column: 9)
!8067 = distinct !DILexicalBlock(scope: !8049, file: !832, line: 685, column: 6)
!8068 = !DILocation(line: 695, column: 2, scope: !8049)
!8069 = !DILocation(line: 696, column: 2, scope: !8049)
!8070 = !DILocation(line: 696, column: 9, scope: !8049)
!8071 = !DILocation(line: 696, column: 34, scope: !8049)
!8072 = distinct !{!8072, !8069, !8073}
!8073 = !DILocation(line: 697, column: 2, scope: !8049)
!8074 = !DILocation(line: 720, column: 21, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8049, file: !832, line: 720, column: 6)
!8076 = !DILocation(line: 720, column: 6, scope: !8049)
!8077 = !DILocation(line: 721, column: 3, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8075, file: !832, line: 720, column: 60)
!8079 = !DILocation(line: 722, column: 2, scope: !8078)
!8080 = !DILocation(line: 725, column: 18, scope: !8049)
!8081 = !DILocation(line: 728, column: 2, scope: !8049)
!8082 = !DILocation(line: 730, column: 2, scope: !8049)
!8083 = !DILocation(line: 745, column: 2, scope: !8049)
!8084 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8085, file: !8085, line: 3275, type: !6134, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8085 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8086 = !DILocation(line: 3277, column: 21, scope: !8084)
!8087 = !DILocation(line: 3277, column: 3, scope: !8084)
!8088 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !832, file: !832, line: 507, type: !3113, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8089 = !DILocation(line: 534, column: 7, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !832, line: 534, column: 7)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !832, line: 532, column: 37)
!8092 = distinct !DILexicalBlock(scope: !8088, file: !832, line: 532, column: 6)
!8093 = !DILocation(line: 534, column: 28, scope: !8090)
!8094 = !DILocation(line: 534, column: 7, scope: !8091)
!8095 = !DILocation(line: 536, column: 4, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8090, file: !832, line: 534, column: 34)
!8097 = !DILocation(line: 537, column: 4, scope: !8096)
!8098 = !DILocation(line: 537, column: 11, scope: !8096)
!8099 = !DILocation(line: 537, column: 32, scope: !8096)
!8100 = distinct !{!8100, !8097, !8101}
!8101 = !DILocation(line: 539, column: 4, scope: !8096)
!8102 = !DILocation(line: 583, column: 3, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !832, line: 577, column: 37)
!8104 = distinct !DILexicalBlock(scope: !8088, file: !832, line: 577, column: 6)
!8105 = !DILocation(line: 584, column: 3, scope: !8103)
!8106 = !DILocation(line: 584, column: 10, scope: !8103)
!8107 = !DILocation(line: 584, column: 31, scope: !8103)
!8108 = distinct !{!8108, !8105, !8109}
!8109 = !DILocation(line: 585, column: 3, scope: !8103)
!8110 = !DILocation(line: 627, column: 1, scope: !8088)
!8111 = distinct !DISubprogram(name: "set_up_plls", scope: !832, file: !832, line: 448, type: !3113, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8112 = !DILocation(line: 460, column: 6, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8111, file: !832, line: 460, column: 6)
!8114 = !DILocation(line: 460, column: 31, scope: !8113)
!8115 = !DILocation(line: 460, column: 6, scope: !8111)
!8116 = !DILocation(line: 461, column: 3, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8113, file: !832, line: 460, column: 67)
!8118 = !DILocation(line: 462, column: 3, scope: !8117)
!8119 = !DILocation(line: 463, column: 2, scope: !8117)
!8120 = !DILocation(line: 464, column: 2, scope: !8111)
!8121 = !DILocation(line: 488, column: 2, scope: !8111)
!8122 = !DILocation(line: 496, column: 2, scope: !8111)
!8123 = !DILocation(line: 499, column: 2, scope: !8111)
!8124 = !DILocation(line: 500, column: 2, scope: !8111)
!8125 = !DILocation(line: 500, column: 9, scope: !8111)
!8126 = !DILocation(line: 500, column: 30, scope: !8111)
!8127 = distinct !{!8127, !8124, !8128}
!8128 = !DILocation(line: 502, column: 2, scope: !8111)
!8129 = !DILocation(line: 505, column: 1, scope: !8111)
!8130 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8085, file: !8085, line: 3224, type: !6144, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !8131)
!8131 = !{!8132}
!8132 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8130, file: !8085, line: 3224, type: !162)
!8133 = !DILocation(line: 0, scope: !8130)
!8134 = !DILocation(line: 3226, column: 3, scope: !8130)
!8135 = !DILocation(line: 3227, column: 1, scope: !8130)
!8136 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8085, file: !8085, line: 3188, type: !6144, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !8137)
!8137 = !{!8138}
!8138 = !DILocalVariable(name: "Source", arg: 1, scope: !8136, file: !8085, line: 3188, type: !162)
!8139 = !DILocation(line: 0, scope: !8136)
!8140 = !DILocation(line: 3190, column: 3, scope: !8136)
!8141 = !DILocation(line: 3191, column: 1, scope: !8136)
!8142 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8085, file: !8085, line: 3204, type: !6134, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8143 = !DILocation(line: 3206, column: 21, scope: !8142)
!8144 = !DILocation(line: 3206, column: 3, scope: !8142)
!8145 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8085, file: !8085, line: 3240, type: !6144, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !8146)
!8146 = !{!8147}
!8147 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8145, file: !8085, line: 3240, type: !162)
!8148 = !DILocation(line: 0, scope: !8145)
!8149 = !DILocation(line: 3242, column: 3, scope: !8145)
!8150 = !DILocation(line: 3243, column: 1, scope: !8145)
!8151 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8085, file: !8085, line: 3256, type: !6144, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !8152)
!8152 = !{!8153}
!8153 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8151, file: !8085, line: 3256, type: !162)
!8154 = !DILocation(line: 0, scope: !8151)
!8155 = !DILocation(line: 3258, column: 3, scope: !8151)
!8156 = !DILocation(line: 3259, column: 1, scope: !8151)
!8157 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !832, file: !832, line: 409, type: !3113, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8158 = !DILocation(line: 412, column: 6, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8157, file: !832, line: 412, column: 6)
!8160 = !DILocation(line: 412, column: 27, scope: !8159)
!8161 = !DILocation(line: 412, column: 6, scope: !8157)
!8162 = !DILocation(line: 414, column: 3, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8159, file: !832, line: 412, column: 33)
!8164 = !DILocation(line: 415, column: 3, scope: !8163)
!8165 = !DILocation(line: 415, column: 10, scope: !8163)
!8166 = !DILocation(line: 415, column: 31, scope: !8163)
!8167 = distinct !{!8167, !8164, !8168}
!8168 = !DILocation(line: 417, column: 3, scope: !8163)
!8169 = !DILocation(line: 421, column: 2, scope: !8157)
!8170 = !DILocation(line: 422, column: 2, scope: !8157)
!8171 = !DILocation(line: 422, column: 9, scope: !8157)
!8172 = !DILocation(line: 422, column: 34, scope: !8157)
!8173 = distinct !{!8173, !8170, !8174}
!8174 = !DILocation(line: 423, column: 2, scope: !8157)
!8175 = !DILocation(line: 424, column: 1, scope: !8157)
!8176 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8085, file: !8085, line: 4195, type: !3113, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8177 = !DILocation(line: 4197, column: 3, scope: !8176)
!8178 = !DILocation(line: 4198, column: 1, scope: !8176)
!8179 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8085, file: !8085, line: 4184, type: !3113, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8180 = !DILocation(line: 4186, column: 3, scope: !8179)
!8181 = !DILocation(line: 4187, column: 1, scope: !8179)
!8182 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8085, file: !8085, line: 4205, type: !6134, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8183 = !DILocation(line: 4207, column: 11, scope: !8182)
!8184 = !DILocation(line: 4207, column: 44, scope: !8182)
!8185 = !DILocation(line: 4207, column: 3, scope: !8182)
!8186 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8085, file: !8085, line: 3007, type: !6134, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8187 = !DILocation(line: 3009, column: 11, scope: !8186)
!8188 = !DILocation(line: 3009, column: 44, scope: !8186)
!8189 = !DILocation(line: 3009, column: 3, scope: !8186)
!8190 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8085, file: !8085, line: 2987, type: !3113, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8191 = !DILocation(line: 2989, column: 3, scope: !8190)
!8192 = !DILocation(line: 2990, column: 1, scope: !8190)
!8193 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8085, file: !8085, line: 3143, type: !3113, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8194 = !DILocation(line: 3145, column: 3, scope: !8193)
!8195 = !DILocation(line: 3146, column: 1, scope: !8193)
!8196 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8085, file: !8085, line: 3163, type: !6134, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !250)
!8197 = !DILocation(line: 3165, column: 11, scope: !8196)
!8198 = !DILocation(line: 3165, column: 46, scope: !8196)
!8199 = !DILocation(line: 3165, column: 3, scope: !8196)
!8200 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8201, file: !8201, line: 40, type: !6134, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !250)
!8201 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8202 = !DILocation(line: 43, column: 3, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !8201, line: 42, column: 37)
!8204 = distinct !DILexicalBlock(scope: !8200, file: !8201, line: 42, column: 6)
!8205 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8201, file: !8201, line: 56, type: !3113, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !250)
!8206 = !DILocation(line: 58, column: 2, scope: !8205)
!8207 = !DILocation(line: 62, column: 1, scope: !8205)
!8208 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8085, file: !8085, line: 4304, type: !8209, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8211)
!8209 = !DISubroutineType(types: !8210)
!8210 = !{null, !162, !162, !162, !162}
!8211 = !{!8212, !8213, !8214, !8215}
!8212 = !DILocalVariable(name: "Source", arg: 1, scope: !8208, file: !8085, line: 4304, type: !162)
!8213 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8208, file: !8085, line: 4304, type: !162)
!8214 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8208, file: !8085, line: 4304, type: !162)
!8215 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8208, file: !8085, line: 4304, type: !162)
!8216 = !DILocation(line: 0, scope: !8208)
!8217 = !DILocation(line: 4306, column: 3, scope: !8208)
!8218 = !DILocation(line: 4308, column: 3, scope: !8208)
!8219 = !DILocation(line: 4312, column: 1, scope: !8208)
!8220 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8201, file: !8201, line: 69, type: !3113, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !250)
!8221 = !DILocation(line: 72, column: 2, scope: !8220)
!8222 = !DILocation(line: 73, column: 1, scope: !8220)
!8223 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8224, file: !8224, line: 1185, type: !6144, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8225)
!8224 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8225 = !{!8226, !8227}
!8226 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8223, file: !8224, line: 1185, type: !162)
!8227 = !DILocalVariable(name: "tmpreg", scope: !8223, file: !8224, line: 1187, type: !283)
!8228 = !DILocation(line: 0, scope: !8223)
!8229 = !DILocation(line: 1187, column: 3, scope: !8223)
!8230 = !DILocation(line: 1187, column: 17, scope: !8223)
!8231 = !DILocation(line: 1188, column: 3, scope: !8223)
!8232 = !DILocation(line: 1190, column: 12, scope: !8223)
!8233 = !DILocation(line: 1190, column: 10, scope: !8223)
!8234 = !DILocation(line: 1191, column: 9, scope: !8223)
!8235 = !DILocation(line: 1192, column: 1, scope: !8223)
!8236 = distinct !DISubprogram(name: "uart_console_init", scope: !991, file: !991, line: 588, type: !938, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !8237)
!8237 = !{!8238}
!8238 = !DILocalVariable(name: "arg", arg: 1, scope: !8236, file: !991, line: 588, type: !917)
!8239 = !DILocation(line: 0, scope: !8236)
!8240 = !DILocation(line: 593, column: 7, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8236, file: !991, line: 593, column: 6)
!8242 = !DILocation(line: 593, column: 6, scope: !8236)
!8243 = !DILocation(line: 597, column: 2, scope: !8236)
!8244 = !DILocation(line: 599, column: 2, scope: !8236)
!8245 = !DILocation(line: 600, column: 1, scope: !8236)
!8246 = distinct !DISubprogram(name: "device_is_ready", scope: !3396, file: !3396, line: 47, type: !8247, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !8249)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{!136, !917}
!8249 = !{!8250}
!8250 = !DILocalVariable(name: "dev", arg: 1, scope: !8246, file: !3396, line: 47, type: !917)
!8251 = !DILocation(line: 0, scope: !8246)
!8252 = !DILocation(line: 55, column: 2, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8246, file: !3396, line: 55, column: 2)
!8254 = !{i64 2154265984}
!8255 = !DILocation(line: 56, column: 9, scope: !8246)
!8256 = !DILocation(line: 56, column: 2, scope: !8246)
!8257 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !991, file: !991, line: 573, type: !3113, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !250)
!8258 = !DILocation(line: 576, column: 2, scope: !8257)
!8259 = !DILocation(line: 579, column: 2, scope: !8257)
!8260 = !DILocation(line: 581, column: 1, scope: !8257)
!8261 = distinct !DISubprogram(name: "console_out", scope: !991, file: !991, line: 77, type: !270, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !8262)
!8262 = !{!8263}
!8263 = !DILocalVariable(name: "c", arg: 1, scope: !8261, file: !991, line: 77, type: !107)
!8264 = !DILocation(line: 0, scope: !8261)
!8265 = !DILocation(line: 89, column: 11, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8261, file: !991, line: 89, column: 6)
!8267 = !DILocation(line: 89, column: 6, scope: !8261)
!8268 = !DILocation(line: 90, column: 3, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8266, file: !991, line: 89, column: 17)
!8270 = !DILocation(line: 91, column: 2, scope: !8269)
!8271 = !DILocation(line: 92, column: 34, scope: !8261)
!8272 = !DILocation(line: 92, column: 2, scope: !8261)
!8273 = !DILocation(line: 94, column: 2, scope: !8261)
!8274 = distinct !DISubprogram(name: "uart_poll_out", scope: !3260, file: !3260, line: 95, type: !934, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !8275)
!8275 = !{!8276, !8277}
!8276 = !DILocalVariable(name: "dev", arg: 1, scope: !8274, file: !3260, line: 95, type: !917)
!8277 = !DILocalVariable(name: "out_char", arg: 2, scope: !8274, file: !3260, line: 95, type: !134)
!8278 = !DILocation(line: 0, scope: !8274)
!8279 = !DILocation(line: 105, column: 2, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8274, file: !3260, line: 105, column: 2)
!8281 = !{i64 2154349229}
!8282 = !DILocation(line: 106, column: 2, scope: !8274)
!8283 = !DILocation(line: 107, column: 1, scope: !8274)
!8284 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !934, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !8285)
!8285 = !{!8286, !8287, !8288}
!8286 = !DILocalVariable(name: "dev", arg: 1, scope: !8284, file: !111, line: 574, type: !917)
!8287 = !DILocalVariable(name: "out_char", arg: 2, scope: !8284, file: !111, line: 575, type: !134)
!8288 = !DILocalVariable(name: "api", scope: !8284, file: !111, line: 577, type: !909)
!8289 = !DILocation(line: 0, scope: !8284)
!8290 = !DILocation(line: 578, column: 40, scope: !8284)
!8291 = !DILocation(line: 580, column: 7, scope: !8284)
!8292 = !DILocation(line: 580, column: 2, scope: !8284)
!8293 = !DILocation(line: 581, column: 1, scope: !8284)
!8294 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !8247, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !8295)
!8295 = !{!8296}
!8296 = !DILocalVariable(name: "dev", arg: 1, scope: !8294, file: !120, line: 730, type: !917)
!8297 = !DILocation(line: 0, scope: !8294)
!8298 = !DILocation(line: 732, column: 9, scope: !8294)
!8299 = !DILocation(line: 732, column: 2, scope: !8294)
!8300 = distinct !DISubprogram(name: "uart_register_input", scope: !991, file: !991, line: 560, type: !8301, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !906, retainedNodes: !8346)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{null, !8303, !8303, !8343}
!8303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8304, size: 32)
!8304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !224, line: 2208, size: 128, elements: !8305)
!8305 = !{!8306}
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8304, file: !224, line: 2209, baseType: !8307, size: 128)
!8307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !224, line: 1709, size: 128, elements: !8308)
!8308 = !{!8309, !8322, !8324}
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8307, file: !224, line: 1710, baseType: !8310, size: 64)
!8310 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8311, line: 46, baseType: !8312)
!8311 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8311, line: 41, size: 64, elements: !8313)
!8313 = !{!8314, !8321}
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8312, file: !8311, line: 42, baseType: !8315, size: 32)
!8315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8316, size: 32)
!8316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8311, line: 39, baseType: !8317)
!8317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8311, line: 35, size: 32, elements: !8318)
!8318 = !{!8319}
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8317, file: !8311, line: 36, baseType: !8320, size: 32)
!8320 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8311, line: 32, baseType: !162)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8312, file: !8311, line: 43, baseType: !8315, size: 32, offset: 32)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8307, file: !224, line: 1711, baseType: !8323, offset: 64)
!8323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8307, file: !224, line: 1712, baseType: !8325, size: 64, offset: 64)
!8325 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !8326)
!8326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !8327)
!8327 = !{!8328}
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8326, file: !228, line: 232, baseType: !8329, size: 64)
!8329 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !8330)
!8330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !8331)
!8331 = !{!8332, !8338}
!8332 = !DIDerivedType(tag: DW_TAG_member, scope: !8330, file: !233, line: 38, baseType: !8333, size: 32)
!8333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8330, file: !233, line: 38, size: 32, elements: !8334)
!8334 = !{!8335, !8337}
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8333, file: !233, line: 39, baseType: !8336, size: 32)
!8336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8330, size: 32)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8333, file: !233, line: 40, baseType: !8336, size: 32)
!8338 = !DIDerivedType(tag: DW_TAG_member, scope: !8330, file: !233, line: 42, baseType: !8339, size: 32, offset: 32)
!8339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8330, file: !233, line: 42, size: 32, elements: !8340)
!8340 = !{!8341, !8342}
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8339, file: !233, line: 43, baseType: !8336, size: 32)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8339, file: !233, line: 44, baseType: !8336, size: 32)
!8343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8344, size: 32)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{!133, !256, !133}
!8346 = !{!8347, !8348, !8349}
!8347 = !DILocalVariable(name: "avail", arg: 1, scope: !8300, file: !991, line: 560, type: !8303)
!8348 = !DILocalVariable(name: "lines", arg: 2, scope: !8300, file: !991, line: 560, type: !8303)
!8349 = !DILocalVariable(name: "completion", arg: 3, scope: !8300, file: !991, line: 561, type: !8343)
!8350 = !DILocation(line: 0, scope: !8300)
!8351 = !DILocation(line: 566, column: 1, scope: !8300)
!8352 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1169, file: !1169, line: 523, type: !1027, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8353)
!8353 = !{!8354, !8355, !8356, !8357, !8358}
!8354 = !DILocalVariable(name: "dev", arg: 1, scope: !8352, file: !1169, line: 523, type: !1029)
!8355 = !DILocalVariable(name: "pin", arg: 2, scope: !8352, file: !1169, line: 524, type: !1044)
!8356 = !DILocalVariable(name: "flags", arg: 3, scope: !8352, file: !1169, line: 524, type: !1045)
!8357 = !DILocalVariable(name: "err", scope: !8352, file: !1169, line: 526, type: !107)
!8358 = !DILocalVariable(name: "pincfg", scope: !8352, file: !1169, line: 527, type: !107)
!8359 = !DILocation(line: 0, scope: !8352)
!8360 = !DILocation(line: 527, column: 2, scope: !8352)
!8361 = !DILocation(line: 532, column: 8, scope: !8352)
!8362 = !DILocation(line: 533, column: 10, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8352, file: !1169, line: 533, column: 6)
!8364 = !DILocation(line: 533, column: 6, scope: !8352)
!8365 = !DILocation(line: 543, column: 13, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8352, file: !1169, line: 543, column: 6)
!8367 = !DILocation(line: 543, column: 28, scope: !8366)
!8368 = !DILocation(line: 543, column: 6, scope: !8352)
!8369 = !DILocation(line: 544, column: 14, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !1169, line: 544, column: 7)
!8371 = distinct !DILexicalBlock(scope: !8366, file: !1169, line: 543, column: 34)
!8372 = !DILocation(line: 544, column: 39, scope: !8370)
!8373 = !DILocation(line: 544, column: 7, scope: !8371)
!8374 = !DILocation(line: 545, column: 38, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8370, file: !1169, line: 544, column: 45)
!8376 = !DILocation(line: 545, column: 4, scope: !8375)
!8377 = !DILocation(line: 546, column: 3, scope: !8375)
!8378 = !DILocation(line: 546, column: 21, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8370, file: !1169, line: 546, column: 14)
!8380 = !DILocation(line: 546, column: 45, scope: !8379)
!8381 = !DILocation(line: 546, column: 14, scope: !8370)
!8382 = !DILocation(line: 547, column: 40, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8379, file: !1169, line: 546, column: 51)
!8384 = !DILocation(line: 547, column: 4, scope: !8383)
!8385 = !DILocation(line: 548, column: 3, scope: !8383)
!8386 = !DILocation(line: 551, column: 32, scope: !8352)
!8387 = !DILocation(line: 551, column: 37, scope: !8352)
!8388 = !DILocation(line: 551, column: 2, scope: !8352)
!8389 = !DILocation(line: 554, column: 6, scope: !8352)
!8390 = !DILocation(line: 562, column: 1, scope: !8352)
!8391 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1169, file: !1169, line: 410, type: !8392, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8394)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!107, !1029, !828}
!8394 = !{!8395, !8396, !8397, !8399}
!8395 = !DILocalVariable(name: "dev", arg: 1, scope: !8391, file: !1169, line: 410, type: !1029)
!8396 = !DILocalVariable(name: "value", arg: 2, scope: !8391, file: !1169, line: 410, type: !828)
!8397 = !DILocalVariable(name: "cfg", scope: !8391, file: !1169, line: 412, type: !8398)
!8398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!8399 = !DILocalVariable(name: "gpio", scope: !8391, file: !1169, line: 413, type: !1102)
!8400 = !DILocation(line: 0, scope: !8391)
!8401 = !DILocation(line: 412, column: 45, scope: !8391)
!8402 = !DILocation(line: 413, column: 44, scope: !8391)
!8403 = !DILocation(line: 415, column: 11, scope: !8391)
!8404 = !DILocation(line: 415, column: 9, scope: !8391)
!8405 = !DILocation(line: 417, column: 2, scope: !8391)
!8406 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1169, file: !1169, line: 420, type: !1054, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8407)
!8407 = !{!8408, !8409, !8410, !8411, !8412, !8413}
!8408 = !DILocalVariable(name: "dev", arg: 1, scope: !8406, file: !1169, line: 420, type: !1029)
!8409 = !DILocalVariable(name: "mask", arg: 2, scope: !8406, file: !1169, line: 421, type: !1056)
!8410 = !DILocalVariable(name: "value", arg: 3, scope: !8406, file: !1169, line: 422, type: !1051)
!8411 = !DILocalVariable(name: "cfg", scope: !8406, file: !1169, line: 424, type: !8398)
!8412 = !DILocalVariable(name: "gpio", scope: !8406, file: !1169, line: 425, type: !1102)
!8413 = !DILocalVariable(name: "port_value", scope: !8406, file: !1169, line: 426, type: !162)
!8414 = !DILocation(line: 0, scope: !8406)
!8415 = !DILocation(line: 424, column: 45, scope: !8406)
!8416 = !DILocation(line: 425, column: 44, scope: !8406)
!8417 = !DILocation(line: 430, column: 15, scope: !8406)
!8418 = !DILocation(line: 431, column: 46, scope: !8406)
!8419 = !DILocation(line: 431, column: 44, scope: !8406)
!8420 = !DILocation(line: 431, column: 61, scope: !8406)
!8421 = !DILocation(line: 431, column: 53, scope: !8406)
!8422 = !DILocation(line: 431, column: 2, scope: !8406)
!8423 = !DILocation(line: 435, column: 2, scope: !8406)
!8424 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1169, file: !1169, line: 438, type: !1059, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8425)
!8425 = !{!8426, !8427, !8428, !8429}
!8426 = !DILocalVariable(name: "dev", arg: 1, scope: !8424, file: !1169, line: 438, type: !1029)
!8427 = !DILocalVariable(name: "pins", arg: 2, scope: !8424, file: !1169, line: 439, type: !1056)
!8428 = !DILocalVariable(name: "cfg", scope: !8424, file: !1169, line: 441, type: !8398)
!8429 = !DILocalVariable(name: "gpio", scope: !8424, file: !1169, line: 442, type: !1102)
!8430 = !DILocation(line: 0, scope: !8424)
!8431 = !DILocation(line: 441, column: 45, scope: !8424)
!8432 = !DILocation(line: 442, column: 44, scope: !8424)
!8433 = !DILocation(line: 448, column: 2, scope: !8424)
!8434 = !DILocation(line: 450, column: 2, scope: !8424)
!8435 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1169, file: !1169, line: 453, type: !1059, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8436)
!8436 = !{!8437, !8438, !8439, !8440}
!8437 = !DILocalVariable(name: "dev", arg: 1, scope: !8435, file: !1169, line: 453, type: !1029)
!8438 = !DILocalVariable(name: "pins", arg: 2, scope: !8435, file: !1169, line: 454, type: !1056)
!8439 = !DILocalVariable(name: "cfg", scope: !8435, file: !1169, line: 456, type: !8398)
!8440 = !DILocalVariable(name: "gpio", scope: !8435, file: !1169, line: 457, type: !1102)
!8441 = !DILocation(line: 0, scope: !8435)
!8442 = !DILocation(line: 456, column: 45, scope: !8435)
!8443 = !DILocation(line: 457, column: 44, scope: !8435)
!8444 = !DILocation(line: 467, column: 2, scope: !8435)
!8445 = !DILocation(line: 470, column: 2, scope: !8435)
!8446 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1169, file: !1169, line: 473, type: !1059, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8447)
!8447 = !{!8448, !8449, !8450, !8451}
!8448 = !DILocalVariable(name: "dev", arg: 1, scope: !8446, file: !1169, line: 473, type: !1029)
!8449 = !DILocalVariable(name: "pins", arg: 2, scope: !8446, file: !1169, line: 474, type: !1056)
!8450 = !DILocalVariable(name: "cfg", scope: !8446, file: !1169, line: 476, type: !8398)
!8451 = !DILocalVariable(name: "gpio", scope: !8446, file: !1169, line: 477, type: !1102)
!8452 = !DILocation(line: 0, scope: !8446)
!8453 = !DILocation(line: 476, column: 45, scope: !8446)
!8454 = !DILocation(line: 477, column: 44, scope: !8446)
!8455 = !DILocation(line: 484, column: 2, scope: !8446)
!8456 = !DILocation(line: 487, column: 2, scope: !8446)
!8457 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1169, file: !1169, line: 594, type: !1065, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8458)
!8458 = !{!8459, !8460, !8461, !8462, !8463, !8464, !8466, !8467, !8468}
!8459 = !DILocalVariable(name: "dev", arg: 1, scope: !8457, file: !1169, line: 594, type: !1029)
!8460 = !DILocalVariable(name: "pin", arg: 2, scope: !8457, file: !1169, line: 595, type: !1044)
!8461 = !DILocalVariable(name: "mode", arg: 3, scope: !8457, file: !1169, line: 596, type: !1003)
!8462 = !DILocalVariable(name: "trig", arg: 4, scope: !8457, file: !1169, line: 597, type: !1009)
!8463 = !DILocalVariable(name: "cfg", scope: !8457, file: !1169, line: 599, type: !8398)
!8464 = !DILocalVariable(name: "data", scope: !8457, file: !1169, line: 600, type: !8465)
!8465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!8466 = !DILocalVariable(name: "edge", scope: !8457, file: !1169, line: 601, type: !107)
!8467 = !DILocalVariable(name: "err", scope: !8457, file: !1169, line: 602, type: !107)
!8468 = !DILabel(scope: !8457, name: "exit", file: !1169, line: 643)
!8469 = !DILocation(line: 0, scope: !8457)
!8470 = !DILocation(line: 599, column: 45, scope: !8457)
!8471 = !DILocation(line: 604, column: 6, scope: !8457)
!8472 = !DILocation(line: 605, column: 34, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !1169, line: 605, column: 7)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !1169, line: 604, column: 38)
!8475 = distinct !DILexicalBlock(scope: !8457, file: !1169, line: 604, column: 6)
!8476 = !DILocation(line: 605, column: 7, scope: !8473)
!8477 = !DILocation(line: 605, column: 47, scope: !8473)
!8478 = !DILocation(line: 605, column: 39, scope: !8473)
!8479 = !DILocation(line: 605, column: 7, scope: !8474)
!8480 = !DILocation(line: 606, column: 4, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8473, file: !1169, line: 605, column: 53)
!8482 = !DILocation(line: 607, column: 4, scope: !8481)
!8483 = !DILocation(line: 608, column: 4, scope: !8481)
!8484 = !DILocation(line: 609, column: 3, scope: !8481)
!8485 = !DILocation(line: 600, column: 38, scope: !8457)
!8486 = !DILocation(line: 620, column: 30, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8457, file: !1169, line: 620, column: 6)
!8488 = !DILocation(line: 620, column: 6, scope: !8487)
!8489 = !DILocation(line: 620, column: 57, scope: !8487)
!8490 = !DILocation(line: 620, column: 6, scope: !8457)
!8491 = !DILocation(line: 625, column: 29, scope: !8457)
!8492 = !DILocation(line: 625, column: 2, scope: !8457)
!8493 = !DILocation(line: 627, column: 2, scope: !8457)
!8494 = !DILocation(line: 630, column: 3, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8457, file: !1169, line: 627, column: 16)
!8496 = !DILocation(line: 633, column: 3, scope: !8495)
!8497 = !DILocation(line: 636, column: 3, scope: !8495)
!8498 = !DILocation(line: 639, column: 2, scope: !8457)
!8499 = !DILocation(line: 641, column: 2, scope: !8457)
!8500 = !DILocation(line: 643, column: 1, scope: !8457)
!8501 = !DILocation(line: 644, column: 2, scope: !8457)
!8502 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1169, file: !1169, line: 647, type: !1069, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8503)
!8503 = !{!8504, !8505, !8506, !8507}
!8504 = !DILocalVariable(name: "dev", arg: 1, scope: !8502, file: !1169, line: 647, type: !1029)
!8505 = !DILocalVariable(name: "callback", arg: 2, scope: !8502, file: !1169, line: 648, type: !1071)
!8506 = !DILocalVariable(name: "set", arg: 3, scope: !8502, file: !1169, line: 649, type: !136)
!8507 = !DILocalVariable(name: "data", scope: !8502, file: !1169, line: 651, type: !8465)
!8508 = !DILocation(line: 0, scope: !8502)
!8509 = !DILocation(line: 651, column: 38, scope: !8502)
!8510 = !DILocation(line: 653, column: 37, scope: !8502)
!8511 = !DILocation(line: 653, column: 9, scope: !8502)
!8512 = !DILocation(line: 653, column: 2, scope: !8502)
!8513 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8514, file: !8514, line: 38, type: !8515, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8518)
!8514 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8515 = !DISubroutineType(types: !8516)
!8516 = !{!107, !8517, !1071, !136}
!8517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!8518 = !{!8519, !8520, !8521}
!8519 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8513, file: !8514, line: 38, type: !8517)
!8520 = !DILocalVariable(name: "callback", arg: 2, scope: !8513, file: !8514, line: 39, type: !1071)
!8521 = !DILocalVariable(name: "set", arg: 3, scope: !8513, file: !8514, line: 40, type: !136)
!8522 = !DILocation(line: 0, scope: !8513)
!8523 = !DILocation(line: 45, column: 7, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8513, file: !8514, line: 45, column: 6)
!8525 = !DILocation(line: 45, column: 6, scope: !8513)
!8526 = !DILocation(line: 46, column: 56, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !8514, line: 46, column: 7)
!8528 = distinct !DILexicalBlock(scope: !8524, file: !8514, line: 45, column: 38)
!8529 = !DILocation(line: 46, column: 8, scope: !8527)
!8530 = !DILocation(line: 46, column: 7, scope: !8528)
!8531 = !DILocation(line: 51, column: 13, scope: !8524)
!8532 = !DILocation(line: 56, column: 43, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !8514, line: 55, column: 11)
!8534 = distinct !DILexicalBlock(scope: !8513, file: !8514, line: 55, column: 6)
!8535 = !DILocation(line: 56, column: 3, scope: !8533)
!8536 = !DILocation(line: 57, column: 2, scope: !8533)
!8537 = !DILocation(line: 60, column: 1, scope: !8513)
!8538 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1076, file: !1076, line: 261, type: !8539, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8541)
!8539 = !DISubroutineType(types: !8540)
!8540 = !{!136, !8517}
!8541 = !{!8542}
!8542 = !DILocalVariable(name: "list", arg: 1, scope: !8538, file: !1076, line: 261, type: !8517)
!8543 = !DILocation(line: 0, scope: !8538)
!8544 = !DILocation(line: 261, column: 1, scope: !8538)
!8545 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1076, file: !1076, line: 417, type: !8546, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8548)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{!136, !8517, !1242}
!8548 = !{!8549, !8550, !8551, !8552}
!8549 = !DILocalVariable(name: "list", arg: 1, scope: !8545, file: !1076, line: 417, type: !8517)
!8550 = !DILocalVariable(name: "node", arg: 2, scope: !8545, file: !1076, line: 417, type: !1242)
!8551 = !DILocalVariable(name: "prev", scope: !8545, file: !1076, line: 417, type: !1242)
!8552 = !DILocalVariable(name: "test", scope: !8545, file: !1076, line: 417, type: !1242)
!8553 = !DILocation(line: 0, scope: !8545)
!8554 = !DILocation(line: 417, column: 1, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8545, file: !1076, line: 417, column: 1)
!8556 = !DILocation(line: 417, column: 1, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8555, file: !1076, line: 417, column: 1)
!8558 = !DILocation(line: 417, column: 1, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !1076, line: 417, column: 1)
!8560 = distinct !DILexicalBlock(scope: !8557, file: !1076, line: 417, column: 1)
!8561 = !DILocation(line: 417, column: 1, scope: !8560)
!8562 = distinct !{!8562, !8554, !8554}
!8563 = !DILocation(line: 417, column: 1, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8559, file: !1076, line: 417, column: 1)
!8565 = !DILocation(line: 417, column: 1, scope: !8545)
!8566 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1076, file: !1076, line: 298, type: !8567, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8569)
!8567 = !DISubroutineType(types: !8568)
!8568 = !{null, !8517, !1242}
!8569 = !{!8570, !8571}
!8570 = !DILocalVariable(name: "list", arg: 1, scope: !8566, file: !1076, line: 298, type: !8517)
!8571 = !DILocalVariable(name: "node", arg: 2, scope: !8566, file: !1076, line: 298, type: !1242)
!8572 = !DILocation(line: 0, scope: !8566)
!8573 = !DILocation(line: 298, column: 1, scope: !8566)
!8574 = !DILocation(line: 298, column: 1, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8566, file: !1076, line: 298, column: 1)
!8576 = !DILocation(line: 298, column: 1, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8575, file: !1076, line: 298, column: 1)
!8578 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1076, file: !1076, line: 231, type: !8579, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8581)
!8579 = !DISubroutineType(types: !8580)
!8580 = !{!1242, !8517}
!8581 = !{!8582}
!8582 = !DILocalVariable(name: "list", arg: 1, scope: !8578, file: !1076, line: 231, type: !8517)
!8583 = !DILocation(line: 0, scope: !8578)
!8584 = !DILocation(line: 233, column: 15, scope: !8578)
!8585 = !DILocation(line: 233, column: 2, scope: !8578)
!8586 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1076, file: !1076, line: 209, type: !8587, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8589)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{null, !1242, !1242}
!8589 = !{!8590, !8591}
!8590 = !DILocalVariable(name: "parent", arg: 1, scope: !8586, file: !1076, line: 209, type: !1242)
!8591 = !DILocalVariable(name: "child", arg: 2, scope: !8586, file: !1076, line: 209, type: !1242)
!8592 = !DILocation(line: 0, scope: !8586)
!8593 = !DILocation(line: 211, column: 10, scope: !8586)
!8594 = !DILocation(line: 211, column: 15, scope: !8586)
!8595 = !DILocation(line: 212, column: 1, scope: !8586)
!8596 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1076, file: !1076, line: 214, type: !8567, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8597)
!8597 = !{!8598, !8599}
!8598 = !DILocalVariable(name: "list", arg: 1, scope: !8596, file: !1076, line: 214, type: !8517)
!8599 = !DILocalVariable(name: "node", arg: 2, scope: !8596, file: !1076, line: 214, type: !1242)
!8600 = !DILocation(line: 0, scope: !8596)
!8601 = !DILocation(line: 216, column: 8, scope: !8596)
!8602 = !DILocation(line: 216, column: 13, scope: !8596)
!8603 = !DILocation(line: 217, column: 1, scope: !8596)
!8604 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1076, file: !1076, line: 243, type: !8579, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8605)
!8605 = !{!8606}
!8606 = !DILocalVariable(name: "list", arg: 1, scope: !8604, file: !1076, line: 243, type: !8517)
!8607 = !DILocation(line: 0, scope: !8604)
!8608 = !DILocation(line: 245, column: 15, scope: !8604)
!8609 = !DILocation(line: 245, column: 2, scope: !8604)
!8610 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1076, file: !1076, line: 219, type: !8567, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8611)
!8611 = !{!8612, !8613}
!8612 = !DILocalVariable(name: "list", arg: 1, scope: !8610, file: !1076, line: 219, type: !8517)
!8613 = !DILocalVariable(name: "node", arg: 2, scope: !8610, file: !1076, line: 219, type: !1242)
!8614 = !DILocation(line: 0, scope: !8610)
!8615 = !DILocation(line: 221, column: 8, scope: !8610)
!8616 = !DILocation(line: 221, column: 13, scope: !8610)
!8617 = !DILocation(line: 222, column: 1, scope: !8610)
!8618 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1076, file: !1076, line: 401, type: !8619, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8621)
!8619 = !DISubroutineType(types: !8620)
!8620 = !{null, !8517, !1242, !1242}
!8621 = !{!8622, !8623, !8624}
!8622 = !DILocalVariable(name: "list", arg: 1, scope: !8618, file: !1076, line: 401, type: !8517)
!8623 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8618, file: !1076, line: 401, type: !1242)
!8624 = !DILocalVariable(name: "node", arg: 3, scope: !8618, file: !1076, line: 401, type: !1242)
!8625 = !DILocation(line: 0, scope: !8618)
!8626 = !DILocation(line: 401, column: 1, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8618, file: !1076, line: 401, column: 1)
!8628 = !DILocation(line: 0, scope: !8627)
!8629 = !DILocation(line: 401, column: 1, scope: !8618)
!8630 = !DILocation(line: 401, column: 1, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8627, file: !1076, line: 401, column: 1)
!8632 = !DILocation(line: 401, column: 1, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8631, file: !1076, line: 401, column: 1)
!8634 = !DILocation(line: 401, column: 1, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8633, file: !1076, line: 401, column: 1)
!8636 = !DILocation(line: 401, column: 1, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8627, file: !1076, line: 401, column: 1)
!8638 = !DILocation(line: 401, column: 1, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8637, file: !1076, line: 401, column: 1)
!8640 = !DILocation(line: 401, column: 1, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8639, file: !1076, line: 401, column: 1)
!8642 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1076, file: !1076, line: 285, type: !8643, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8645)
!8643 = !DISubroutineType(types: !8644)
!8644 = !{!1242, !1242}
!8645 = !{!8646}
!8646 = !DILocalVariable(name: "node", arg: 1, scope: !8642, file: !1076, line: 285, type: !1242)
!8647 = !DILocation(line: 0, scope: !8642)
!8648 = !DILocation(line: 285, column: 1, scope: !8642)
!8649 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1076, file: !1076, line: 274, type: !8643, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8650)
!8650 = !{!8651}
!8651 = !DILocalVariable(name: "node", arg: 1, scope: !8649, file: !1076, line: 274, type: !1242)
!8652 = !DILocation(line: 0, scope: !8649)
!8653 = !DILocation(line: 274, column: 1, scope: !8649)
!8654 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1076, file: !1076, line: 204, type: !8643, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8655)
!8655 = !{!8656}
!8656 = !DILocalVariable(name: "node", arg: 1, scope: !8654, file: !1076, line: 204, type: !1242)
!8657 = !DILocation(line: 0, scope: !8654)
!8658 = !DILocation(line: 206, column: 15, scope: !8654)
!8659 = !DILocation(line: 206, column: 2, scope: !8654)
!8660 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1169, file: !1169, line: 342, type: !270, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8661)
!8661 = !{!8662, !8663, !8664}
!8662 = !DILocalVariable(name: "pin", arg: 1, scope: !8660, file: !1169, line: 342, type: !107)
!8663 = !DILocalVariable(name: "line", scope: !8660, file: !1169, line: 344, type: !162)
!8664 = !DILocalVariable(name: "port", scope: !8660, file: !1169, line: 345, type: !107)
!8665 = !DILocation(line: 0, scope: !8660)
!8666 = !DILocation(line: 344, column: 18, scope: !8660)
!8667 = !{i32 983040, i32 0}
!8668 = !DILocation(line: 356, column: 9, scope: !8660)
!8669 = !DILocation(line: 370, column: 2, scope: !8660)
!8670 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1169, file: !1169, line: 37, type: !690, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8671)
!8671 = !{!8672, !8673, !8674}
!8672 = !DILocalVariable(name: "line", arg: 1, scope: !8670, file: !1169, line: 37, type: !107)
!8673 = !DILocalVariable(name: "arg", arg: 2, scope: !8670, file: !1169, line: 37, type: !102)
!8674 = !DILocalVariable(name: "data", scope: !8670, file: !1169, line: 39, type: !8465)
!8675 = !DILocation(line: 0, scope: !8670)
!8676 = !DILocation(line: 41, column: 29, scope: !8670)
!8677 = !DILocation(line: 41, column: 39, scope: !8670)
!8678 = !DILocation(line: 41, column: 44, scope: !8670)
!8679 = !DILocation(line: 41, column: 2, scope: !8670)
!8680 = !DILocation(line: 42, column: 1, scope: !8670)
!8681 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1169, file: !1169, line: 376, type: !8682, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8684)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!107, !107, !107}
!8684 = !{!8685, !8686, !8687, !8689, !8690}
!8685 = !DILocalVariable(name: "port", arg: 1, scope: !8681, file: !1169, line: 376, type: !107)
!8686 = !DILocalVariable(name: "pin", arg: 2, scope: !8681, file: !1169, line: 376, type: !107)
!8687 = !DILocalVariable(name: "clk", scope: !8681, file: !1169, line: 386, type: !8688)
!8688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!8689 = !DILocalVariable(name: "pclken", scope: !8681, file: !1169, line: 387, type: !1285)
!8690 = !DILocalVariable(name: "ret", scope: !8681, file: !1169, line: 396, type: !107)
!8691 = !DILocation(line: 0, scope: !8681)
!8692 = !DILocation(line: 387, column: 2, scope: !8681)
!8693 = !DILocation(line: 387, column: 22, scope: !8681)
!8694 = !DILocation(line: 399, column: 8, scope: !8681)
!8695 = !DILocation(line: 400, column: 10, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8681, file: !1169, line: 400, column: 6)
!8697 = !DILocation(line: 400, column: 6, scope: !8681)
!8698 = !DILocation(line: 405, column: 2, scope: !8681)
!8699 = !DILocation(line: 407, column: 2, scope: !8681)
!8700 = !DILocation(line: 408, column: 1, scope: !8681)
!8701 = distinct !DISubprogram(name: "clock_control_on", scope: !777, file: !777, line: 123, type: !1134, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8702)
!8702 = !{!8703, !8704, !8705}
!8703 = !DILocalVariable(name: "dev", arg: 1, scope: !8701, file: !777, line: 123, type: !1029)
!8704 = !DILocalVariable(name: "sys", arg: 2, scope: !8701, file: !777, line: 124, type: !872)
!8705 = !DILocalVariable(name: "api", scope: !8701, file: !777, line: 126, type: !1127)
!8706 = !DILocation(line: 0, scope: !8701)
!8707 = !DILocation(line: 127, column: 49, scope: !8701)
!8708 = !DILocation(line: 129, column: 14, scope: !8701)
!8709 = !DILocation(line: 129, column: 9, scope: !8701)
!8710 = !DILocation(line: 129, column: 2, scope: !8701)
!8711 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1169, file: !1169, line: 311, type: !7846, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8712)
!8712 = !{!8713, !8714, !8715}
!8713 = !DILocalVariable(name: "port", arg: 1, scope: !8711, file: !1169, line: 311, type: !107)
!8714 = !DILocalVariable(name: "pin", arg: 2, scope: !8711, file: !1169, line: 311, type: !107)
!8715 = !DILocalVariable(name: "line", scope: !8711, file: !1169, line: 313, type: !162)
!8716 = !DILocation(line: 0, scope: !8711)
!8717 = !DILocation(line: 313, column: 18, scope: !8711)
!8718 = !DILocation(line: 337, column: 2, scope: !8711)
!8719 = !DILocation(line: 340, column: 1, scope: !8711)
!8720 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1169, file: !1169, line: 295, type: !8721, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8723)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!162, !107}
!8723 = !{!8724}
!8724 = !DILocalVariable(name: "pin", arg: 1, scope: !8720, file: !1169, line: 295, type: !107)
!8725 = !DILocation(line: 0, scope: !8720)
!8726 = !DILocation(line: 307, column: 46, scope: !8720)
!8727 = !DILocation(line: 307, column: 27, scope: !8720)
!8728 = !DILocation(line: 307, column: 32, scope: !8720)
!8729 = !DILocation(line: 307, column: 14, scope: !8720)
!8730 = !DILocation(line: 307, column: 39, scope: !8720)
!8731 = !DILocation(line: 307, column: 2, scope: !8720)
!8732 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5900, file: !5900, line: 671, type: !8733, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8735)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{null, !162, !162}
!8735 = !{!8736, !8737}
!8736 = !DILocalVariable(name: "Port", arg: 1, scope: !8732, file: !5900, line: 671, type: !162)
!8737 = !DILocalVariable(name: "Line", arg: 2, scope: !8732, file: !5900, line: 671, type: !162)
!8738 = !DILocation(line: 0, scope: !8732)
!8739 = !DILocation(line: 673, column: 3, scope: !8732)
!8740 = !DILocalVariable(name: "value", arg: 1, scope: !8741, file: !6053, line: 373, type: !162)
!8741 = distinct !DISubprogram(name: "__RBIT", scope: !6053, file: !6053, line: 373, type: !7060, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8742)
!8742 = !{!8740, !8743}
!8743 = !DILocalVariable(name: "result", scope: !8741, file: !6053, line: 375, type: !162)
!8744 = !DILocation(line: 0, scope: !8741, inlinedAt: !8745)
!8745 = distinct !DILocation(line: 673, column: 3, scope: !8732)
!8746 = !DILocation(line: 380, column: 4, scope: !8741, inlinedAt: !8745)
!8747 = !{i64 2831596}
!8748 = !DILocalVariable(name: "value", arg: 1, scope: !8749, file: !6053, line: 403, type: !162)
!8749 = distinct !DISubprogram(name: "__CLZ", scope: !6053, file: !6053, line: 403, type: !8750, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8752)
!8750 = !DISubroutineType(types: !8751)
!8751 = !{!133, !162}
!8752 = !{!8748}
!8753 = !DILocation(line: 0, scope: !8749, inlinedAt: !8754)
!8754 = distinct !DILocation(line: 673, column: 3, scope: !8732)
!8755 = !DILocation(line: 414, column: 7, scope: !8749, inlinedAt: !8754)
!8756 = !DILocation(line: 674, column: 1, scope: !8732)
!8757 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8514, file: !8514, line: 69, type: !8758, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8760)
!8758 = !DISubroutineType(types: !8759)
!8759 = !{null, !8517, !1029, !162}
!8760 = !{!8761, !8762, !8763, !8764, !8765}
!8761 = !DILocalVariable(name: "list", arg: 1, scope: !8757, file: !8514, line: 69, type: !8517)
!8762 = !DILocalVariable(name: "port", arg: 2, scope: !8757, file: !8514, line: 70, type: !1029)
!8763 = !DILocalVariable(name: "pins", arg: 3, scope: !8757, file: !8514, line: 71, type: !162)
!8764 = !DILocalVariable(name: "cb", scope: !8757, file: !8514, line: 73, type: !1071)
!8765 = !DILocalVariable(name: "tmp", scope: !8757, file: !8514, line: 73, type: !1071)
!8766 = !DILocation(line: 0, scope: !8757)
!8767 = !DILocation(line: 75, column: 2, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8757, file: !8514, line: 75, column: 2)
!8769 = !DILocation(line: 0, scope: !8768)
!8770 = !DILocation(line: 76, column: 11, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !8514, line: 76, column: 7)
!8772 = distinct !DILexicalBlock(scope: !8773, file: !8514, line: 75, column: 57)
!8773 = distinct !DILexicalBlock(scope: !8768, file: !8514, line: 75, column: 2)
!8774 = !DILocation(line: 76, column: 20, scope: !8771)
!8775 = !DILocation(line: 76, column: 7, scope: !8772)
!8776 = !DILocation(line: 78, column: 8, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8771, file: !8514, line: 76, column: 28)
!8778 = !DILocation(line: 78, column: 4, scope: !8777)
!8779 = !DILocation(line: 79, column: 3, scope: !8777)
!8780 = !DILocation(line: 75, column: 2, scope: !8773)
!8781 = !DILocation(line: 81, column: 1, scope: !8757)
!8782 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5900, file: !5900, line: 710, type: !7060, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8783)
!8783 = !{!8784}
!8784 = !DILocalVariable(name: "Line", arg: 1, scope: !8782, file: !5900, line: 710, type: !162)
!8785 = !DILocation(line: 0, scope: !8782)
!8786 = !DILocation(line: 712, column: 21, scope: !8782)
!8787 = !DILocation(line: 0, scope: !8741, inlinedAt: !8788)
!8788 = distinct !DILocation(line: 712, column: 76, scope: !8782)
!8789 = !DILocation(line: 380, column: 4, scope: !8741, inlinedAt: !8788)
!8790 = !DILocation(line: 0, scope: !8749, inlinedAt: !8791)
!8791 = distinct !DILocation(line: 712, column: 76, scope: !8782)
!8792 = !DILocation(line: 414, column: 7, scope: !8749, inlinedAt: !8791)
!8793 = !DILocation(line: 712, column: 73, scope: !8782)
!8794 = !DILocation(line: 712, column: 3, scope: !8782)
!8795 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8796, file: !8796, line: 910, type: !8797, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8799)
!8796 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8797 = !DISubroutineType(types: !8798)
!8798 = !{null, !1102, !162}
!8799 = !{!8800, !8801}
!8800 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8795, file: !8796, line: 910, type: !1102)
!8801 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8795, file: !8796, line: 910, type: !162)
!8802 = !DILocation(line: 0, scope: !8795)
!8803 = !DILocation(line: 912, column: 3, scope: !8795)
!8804 = !DILocation(line: 913, column: 1, scope: !8795)
!8805 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8796, file: !8796, line: 823, type: !8806, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!162, !1102}
!8808 = !{!8809}
!8809 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8805, file: !8796, line: 823, type: !1102)
!8810 = !DILocation(line: 0, scope: !8805)
!8811 = !DILocation(line: 825, column: 21, scope: !8805)
!8812 = !DILocation(line: 825, column: 3, scope: !8805)
!8813 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8796, file: !8796, line: 812, type: !8797, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8814)
!8814 = !{!8815, !8816}
!8815 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8813, file: !8796, line: 812, type: !1102)
!8816 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8813, file: !8796, line: 812, type: !162)
!8817 = !DILocation(line: 0, scope: !8813)
!8818 = !DILocation(line: 814, column: 3, scope: !8813)
!8819 = !DILocation(line: 815, column: 1, scope: !8813)
!8820 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8796, file: !8796, line: 771, type: !8806, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8821)
!8821 = !{!8822}
!8822 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8820, file: !8796, line: 771, type: !1102)
!8823 = !DILocation(line: 0, scope: !8820)
!8824 = !DILocation(line: 773, column: 21, scope: !8820)
!8825 = !DILocation(line: 773, column: 3, scope: !8820)
!8826 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1169, file: !1169, line: 47, type: !8827, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8829)
!8827 = !DISubroutineType(types: !8828)
!8828 = !{!107, !1045, !2458}
!8829 = !{!8830, !8831}
!8830 = !DILocalVariable(name: "flags", arg: 1, scope: !8826, file: !1169, line: 47, type: !1045)
!8831 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8826, file: !1169, line: 47, type: !2458)
!8832 = !DILocation(line: 0, scope: !8826)
!8833 = !DILocation(line: 50, column: 13, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8826, file: !1169, line: 50, column: 6)
!8835 = !DILocation(line: 50, column: 28, scope: !8834)
!8836 = !DILocation(line: 50, column: 6, scope: !8826)
!8837 = !DILocation(line: 53, column: 11, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8834, file: !1169, line: 50, column: 34)
!8839 = !DILocation(line: 55, column: 14, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8838, file: !1169, line: 55, column: 7)
!8841 = !DILocation(line: 55, column: 35, scope: !8840)
!8842 = !DILocation(line: 55, column: 7, scope: !8838)
!8843 = !DILocation(line: 56, column: 14, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !1169, line: 56, column: 8)
!8845 = distinct !DILexicalBlock(scope: !8840, file: !1169, line: 55, column: 41)
!8846 = !DILocation(line: 56, column: 8, scope: !8845)
!8847 = !DILocation(line: 0, scope: !8840)
!8848 = !DILocation(line: 66, column: 14, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8838, file: !1169, line: 66, column: 7)
!8850 = !DILocation(line: 66, column: 30, scope: !8849)
!8851 = !DILocation(line: 66, column: 7, scope: !8838)
!8852 = !DILocation(line: 67, column: 12, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8849, file: !1169, line: 66, column: 36)
!8854 = !DILocation(line: 68, column: 3, scope: !8853)
!8855 = !DILocation(line: 68, column: 21, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8849, file: !1169, line: 68, column: 14)
!8857 = !DILocation(line: 68, column: 39, scope: !8856)
!8858 = !DILocation(line: 68, column: 14, scope: !8849)
!8859 = !DILocation(line: 69, column: 12, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8856, file: !1169, line: 68, column: 45)
!8861 = !DILocation(line: 70, column: 3, scope: !8860)
!8862 = !DILocation(line: 72, column: 21, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8834, file: !1169, line: 72, column: 14)
!8864 = !DILocation(line: 72, column: 35, scope: !8863)
!8865 = !DILocation(line: 72, column: 14, scope: !8834)
!8866 = !DILocation(line: 77, column: 14, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8868, file: !1169, line: 77, column: 7)
!8868 = distinct !DILexicalBlock(scope: !8863, file: !1169, line: 72, column: 41)
!8869 = !DILocation(line: 77, column: 30, scope: !8867)
!8870 = !DILocation(line: 77, column: 7, scope: !8868)
!8871 = !DILocation(line: 0, scope: !8834)
!8872 = !DILocation(line: 90, column: 1, scope: !8826)
!8873 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1169, file: !1169, line: 157, type: !8874, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8876)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{null, !1029, !107, !107, !107}
!8876 = !{!8877, !8878, !8879, !8880, !8881, !8882, !8883, !8884, !8885, !8886, !8887}
!8877 = !DILocalVariable(name: "dev", arg: 1, scope: !8873, file: !1169, line: 157, type: !1029)
!8878 = !DILocalVariable(name: "pin", arg: 2, scope: !8873, file: !1169, line: 157, type: !107)
!8879 = !DILocalVariable(name: "conf", arg: 3, scope: !8873, file: !1169, line: 158, type: !107)
!8880 = !DILocalVariable(name: "func", arg: 4, scope: !8873, file: !1169, line: 158, type: !107)
!8881 = !DILocalVariable(name: "cfg", scope: !8873, file: !1169, line: 160, type: !8398)
!8882 = !DILocalVariable(name: "gpio", scope: !8873, file: !1169, line: 161, type: !1102)
!8883 = !DILocalVariable(name: "pin_ll", scope: !8873, file: !1169, line: 163, type: !107)
!8884 = !DILocalVariable(name: "mode", scope: !8873, file: !1169, line: 227, type: !32)
!8885 = !DILocalVariable(name: "otype", scope: !8873, file: !1169, line: 227, type: !32)
!8886 = !DILocalVariable(name: "ospeed", scope: !8873, file: !1169, line: 227, type: !32)
!8887 = !DILocalVariable(name: "pupd", scope: !8873, file: !1169, line: 227, type: !32)
!8888 = !DILocation(line: 0, scope: !8873)
!8889 = !DILocation(line: 160, column: 45, scope: !8873)
!8890 = !DILocation(line: 161, column: 44, scope: !8873)
!8891 = !DILocation(line: 163, column: 15, scope: !8873)
!8892 = !DILocation(line: 229, column: 14, scope: !8873)
!8893 = !DILocation(line: 246, column: 47, scope: !8873)
!8894 = !DILocation(line: 246, column: 2, scope: !8873)
!8895 = !DILocation(line: 248, column: 43, scope: !8873)
!8896 = !DILocation(line: 248, column: 2, scope: !8873)
!8897 = !DILocation(line: 250, column: 40, scope: !8873)
!8898 = !DILocation(line: 250, column: 2, scope: !8873)
!8899 = !DILocation(line: 252, column: 11, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8873, file: !1169, line: 252, column: 6)
!8901 = !DILocation(line: 252, column: 6, scope: !8873)
!8902 = !DILocation(line: 253, column: 11, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !1169, line: 253, column: 7)
!8904 = distinct !DILexicalBlock(scope: !8900, file: !1169, line: 252, column: 36)
!8905 = !DILocation(line: 253, column: 7, scope: !8904)
!8906 = !DILocation(line: 254, column: 4, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8903, file: !1169, line: 253, column: 16)
!8908 = !DILocation(line: 255, column: 3, scope: !8907)
!8909 = !DILocation(line: 256, column: 4, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8903, file: !1169, line: 255, column: 10)
!8911 = !DILocation(line: 260, column: 40, scope: !8873)
!8912 = !DILocation(line: 260, column: 2, scope: !8873)
!8913 = !DILocation(line: 265, column: 1, scope: !8873)
!8914 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1169, file: !1169, line: 137, type: !8721, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8915)
!8915 = !{!8916, !8917}
!8916 = !DILocalVariable(name: "pin", arg: 1, scope: !8914, file: !1169, line: 137, type: !107)
!8917 = !DILocalVariable(name: "pinval", scope: !8914, file: !1169, line: 139, type: !162)
!8918 = !DILocation(line: 0, scope: !8914)
!8919 = !DILocation(line: 149, column: 13, scope: !8914)
!8920 = !DILocation(line: 151, column: 2, scope: !8914)
!8921 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8796, file: !8796, line: 342, type: !8922, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8924)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{null, !1102, !162, !162}
!8924 = !{!8925, !8926, !8927}
!8925 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8921, file: !8796, line: 342, type: !1102)
!8926 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8921, file: !8796, line: 342, type: !162)
!8927 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8921, file: !8796, line: 342, type: !162)
!8928 = !DILocation(line: 0, scope: !8921)
!8929 = !DILocation(line: 344, column: 3, scope: !8921)
!8930 = !DILocation(line: 345, column: 1, scope: !8921)
!8931 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8796, file: !8796, line: 413, type: !8922, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8932)
!8932 = !{!8933, !8934, !8935}
!8933 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8931, file: !8796, line: 413, type: !1102)
!8934 = !DILocalVariable(name: "Pin", arg: 2, scope: !8931, file: !8796, line: 413, type: !162)
!8935 = !DILocalVariable(name: "Speed", arg: 3, scope: !8931, file: !8796, line: 413, type: !162)
!8936 = !DILocation(line: 0, scope: !8931)
!8937 = !DILocation(line: 415, column: 3, scope: !8931)
!8938 = !DILocation(line: 0, scope: !8741, inlinedAt: !8939)
!8939 = distinct !DILocation(line: 415, column: 3, scope: !8931)
!8940 = !DILocation(line: 380, column: 4, scope: !8741, inlinedAt: !8939)
!8941 = !DILocation(line: 0, scope: !8749, inlinedAt: !8942)
!8942 = distinct !DILocation(line: 415, column: 3, scope: !8931)
!8943 = !DILocation(line: 414, column: 7, scope: !8749, inlinedAt: !8942)
!8944 = !DILocation(line: 0, scope: !8741, inlinedAt: !8945)
!8945 = distinct !DILocation(line: 415, column: 3, scope: !8931)
!8946 = !DILocation(line: 0, scope: !8749, inlinedAt: !8947)
!8947 = distinct !DILocation(line: 415, column: 3, scope: !8931)
!8948 = !DILocation(line: 417, column: 1, scope: !8931)
!8949 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8796, file: !8796, line: 484, type: !8922, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8950)
!8950 = !{!8951, !8952, !8953}
!8951 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8949, file: !8796, line: 484, type: !1102)
!8952 = !DILocalVariable(name: "Pin", arg: 2, scope: !8949, file: !8796, line: 484, type: !162)
!8953 = !DILocalVariable(name: "Pull", arg: 3, scope: !8949, file: !8796, line: 484, type: !162)
!8954 = !DILocation(line: 0, scope: !8949)
!8955 = !DILocation(line: 486, column: 3, scope: !8949)
!8956 = !DILocation(line: 0, scope: !8741, inlinedAt: !8957)
!8957 = distinct !DILocation(line: 486, column: 3, scope: !8949)
!8958 = !DILocation(line: 380, column: 4, scope: !8741, inlinedAt: !8957)
!8959 = !DILocation(line: 0, scope: !8749, inlinedAt: !8960)
!8960 = distinct !DILocation(line: 486, column: 3, scope: !8949)
!8961 = !DILocation(line: 414, column: 7, scope: !8749, inlinedAt: !8960)
!8962 = !DILocation(line: 0, scope: !8741, inlinedAt: !8963)
!8963 = distinct !DILocation(line: 486, column: 3, scope: !8949)
!8964 = !DILocation(line: 0, scope: !8749, inlinedAt: !8965)
!8965 = distinct !DILocation(line: 486, column: 3, scope: !8949)
!8966 = !DILocation(line: 487, column: 1, scope: !8949)
!8967 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8796, file: !8796, line: 556, type: !8922, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8968)
!8968 = !{!8969, !8970, !8971}
!8969 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8967, file: !8796, line: 556, type: !1102)
!8970 = !DILocalVariable(name: "Pin", arg: 2, scope: !8967, file: !8796, line: 556, type: !162)
!8971 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8967, file: !8796, line: 556, type: !162)
!8972 = !DILocation(line: 0, scope: !8967)
!8973 = !DILocation(line: 558, column: 3, scope: !8967)
!8974 = !DILocation(line: 0, scope: !8741, inlinedAt: !8975)
!8975 = distinct !DILocation(line: 558, column: 3, scope: !8967)
!8976 = !DILocation(line: 380, column: 4, scope: !8741, inlinedAt: !8975)
!8977 = !DILocation(line: 0, scope: !8749, inlinedAt: !8978)
!8978 = distinct !DILocation(line: 558, column: 3, scope: !8967)
!8979 = !DILocation(line: 414, column: 7, scope: !8749, inlinedAt: !8978)
!8980 = !DILocation(line: 0, scope: !8741, inlinedAt: !8981)
!8981 = distinct !DILocation(line: 558, column: 3, scope: !8967)
!8982 = !DILocation(line: 0, scope: !8749, inlinedAt: !8983)
!8983 = distinct !DILocation(line: 558, column: 3, scope: !8967)
!8984 = !DILocation(line: 560, column: 1, scope: !8967)
!8985 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8796, file: !8796, line: 633, type: !8922, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8986)
!8986 = !{!8987, !8988, !8989}
!8987 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8985, file: !8796, line: 633, type: !1102)
!8988 = !DILocalVariable(name: "Pin", arg: 2, scope: !8985, file: !8796, line: 633, type: !162)
!8989 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8985, file: !8796, line: 633, type: !162)
!8990 = !DILocation(line: 0, scope: !8985)
!8991 = !DILocation(line: 635, column: 3, scope: !8985)
!8992 = !DILocation(line: 0, scope: !8741, inlinedAt: !8993)
!8993 = distinct !DILocation(line: 635, column: 3, scope: !8985)
!8994 = !DILocation(line: 380, column: 4, scope: !8741, inlinedAt: !8993)
!8995 = !DILocation(line: 0, scope: !8749, inlinedAt: !8996)
!8996 = distinct !DILocation(line: 635, column: 3, scope: !8985)
!8997 = !DILocation(line: 414, column: 7, scope: !8749, inlinedAt: !8996)
!8998 = !DILocation(line: 0, scope: !8741, inlinedAt: !8999)
!8999 = distinct !DILocation(line: 635, column: 3, scope: !8985)
!9000 = !DILocation(line: 0, scope: !8749, inlinedAt: !9001)
!9001 = distinct !DILocation(line: 635, column: 3, scope: !8985)
!9002 = !DILocation(line: 637, column: 1, scope: !8985)
!9003 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8796, file: !8796, line: 273, type: !8922, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9004)
!9004 = !{!9005, !9006, !9007}
!9005 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9003, file: !8796, line: 273, type: !1102)
!9006 = !DILocalVariable(name: "Pin", arg: 2, scope: !9003, file: !8796, line: 273, type: !162)
!9007 = !DILocalVariable(name: "Mode", arg: 3, scope: !9003, file: !8796, line: 273, type: !162)
!9008 = !DILocation(line: 0, scope: !9003)
!9009 = !DILocation(line: 275, column: 3, scope: !9003)
!9010 = !DILocation(line: 0, scope: !8741, inlinedAt: !9011)
!9011 = distinct !DILocation(line: 275, column: 3, scope: !9003)
!9012 = !DILocation(line: 380, column: 4, scope: !8741, inlinedAt: !9011)
!9013 = !DILocation(line: 0, scope: !8749, inlinedAt: !9014)
!9014 = distinct !DILocation(line: 275, column: 3, scope: !9003)
!9015 = !DILocation(line: 414, column: 7, scope: !8749, inlinedAt: !9014)
!9016 = !DILocation(line: 0, scope: !8741, inlinedAt: !9017)
!9017 = distinct !DILocation(line: 275, column: 3, scope: !9003)
!9018 = !DILocation(line: 0, scope: !8749, inlinedAt: !9019)
!9019 = distinct !DILocation(line: 275, column: 3, scope: !9003)
!9020 = !DILocation(line: 276, column: 1, scope: !9003)
!9021 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1169, file: !1169, line: 698, type: !1182, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9022)
!9022 = !{!9023, !9024, !9025}
!9023 = !DILocalVariable(name: "dev", arg: 1, scope: !9021, file: !1169, line: 698, type: !1029)
!9024 = !DILocalVariable(name: "data", scope: !9021, file: !1169, line: 700, type: !8465)
!9025 = !DILocalVariable(name: "ret", scope: !9021, file: !1169, line: 701, type: !107)
!9026 = !DILocation(line: 0, scope: !9021)
!9027 = !DILocation(line: 700, column: 38, scope: !9021)
!9028 = !DILocation(line: 703, column: 8, scope: !9021)
!9029 = !DILocation(line: 703, column: 12, scope: !9021)
!9030 = !DILocation(line: 705, column: 7, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9021, file: !1169, line: 705, column: 6)
!9032 = !DILocation(line: 705, column: 6, scope: !9021)
!9033 = !DILocation(line: 722, column: 8, scope: !9021)
!9034 = !DILocation(line: 723, column: 10, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9021, file: !1169, line: 723, column: 6)
!9036 = !DILocation(line: 723, column: 6, scope: !9021)
!9037 = !DILocation(line: 731, column: 1, scope: !9021)
!9038 = distinct !DISubprogram(name: "device_is_ready", scope: !3396, file: !3396, line: 47, type: !9039, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9041)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{!136, !1029}
!9041 = !{!9042}
!9042 = !DILocalVariable(name: "dev", arg: 1, scope: !9038, file: !3396, line: 47, type: !1029)
!9043 = !DILocation(line: 0, scope: !9038)
!9044 = !DILocation(line: 55, column: 2, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9038, file: !3396, line: 55, column: 2)
!9046 = !{i64 2154257191}
!9047 = !DILocation(line: 56, column: 9, scope: !9038)
!9048 = !DILocation(line: 56, column: 2, scope: !9038)
!9049 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1169, file: !1169, line: 270, type: !9050, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9052)
!9050 = !DISubroutineType(types: !9051)
!9051 = !{!107, !1029, !136}
!9052 = !{!9053, !9054, !9055, !9056, !9057}
!9053 = !DILocalVariable(name: "dev", arg: 1, scope: !9049, file: !1169, line: 270, type: !1029)
!9054 = !DILocalVariable(name: "on", arg: 2, scope: !9049, file: !1169, line: 270, type: !136)
!9055 = !DILocalVariable(name: "cfg", scope: !9049, file: !1169, line: 272, type: !8398)
!9056 = !DILocalVariable(name: "ret", scope: !9049, file: !1169, line: 273, type: !107)
!9057 = !DILocalVariable(name: "clk", scope: !9049, file: !1169, line: 278, type: !8688)
!9058 = !DILocation(line: 0, scope: !9049)
!9059 = !DILocation(line: 272, column: 45, scope: !9049)
!9060 = !DILocation(line: 282, column: 38, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !1169, line: 280, column: 10)
!9062 = distinct !DILexicalBlock(scope: !9049, file: !1169, line: 280, column: 6)
!9063 = !DILocation(line: 282, column: 6, scope: !9061)
!9064 = !DILocation(line: 281, column: 9, scope: !9061)
!9065 = !DILocation(line: 293, column: 1, scope: !9049)
!9066 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !9039, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9067)
!9067 = !{!9068}
!9068 = !DILocalVariable(name: "dev", arg: 1, scope: !9066, file: !120, line: 730, type: !1029)
!9069 = !DILocation(line: 0, scope: !9066)
!9070 = !DILocation(line: 732, column: 9, scope: !9066)
!9071 = !DILocation(line: 732, column: 2, scope: !9066)
!9072 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1169, file: !1169, line: 496, type: !9073, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9075)
!9073 = !DISubroutineType(types: !9074)
!9074 = !{!107, !1029, !107, !107, !107}
!9075 = !{!9076, !9077, !9078, !9079, !9080, !9081}
!9076 = !DILocalVariable(name: "dev", arg: 1, scope: !9072, file: !1169, line: 496, type: !1029)
!9077 = !DILocalVariable(name: "pin", arg: 2, scope: !9072, file: !1169, line: 496, type: !107)
!9078 = !DILocalVariable(name: "conf", arg: 3, scope: !9072, file: !1169, line: 496, type: !107)
!9079 = !DILocalVariable(name: "func", arg: 4, scope: !9072, file: !1169, line: 496, type: !107)
!9080 = !DILocalVariable(name: "ret", scope: !9072, file: !1169, line: 498, type: !107)
!9081 = !DILocalVariable(name: "gpio_out", scope: !9082, file: !1169, line: 508, type: !162)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !1169, line: 507, column: 27)
!9083 = distinct !DILexicalBlock(scope: !9072, file: !1169, line: 507, column: 6)
!9084 = !DILocation(line: 0, scope: !9072)
!9085 = !DILocation(line: 505, column: 2, scope: !9072)
!9086 = !DILocation(line: 507, column: 11, scope: !9083)
!9087 = !DILocation(line: 507, column: 6, scope: !9072)
!9088 = !DILocation(line: 508, column: 28, scope: !9082)
!9089 = !DILocation(line: 0, scope: !9082)
!9090 = !DILocation(line: 510, column: 16, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9082, file: !1169, line: 510, column: 7)
!9092 = !DILocation(line: 0, scope: !9091)
!9093 = !DILocation(line: 510, column: 7, scope: !9082)
!9094 = !DILocation(line: 511, column: 4, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9091, file: !1169, line: 510, column: 32)
!9096 = !DILocation(line: 512, column: 3, scope: !9095)
!9097 = !DILocation(line: 513, column: 4, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !1169, line: 512, column: 39)
!9099 = distinct !DILexicalBlock(scope: !9091, file: !1169, line: 512, column: 14)
!9100 = !DILocation(line: 514, column: 3, scope: !9098)
!9101 = !DILocation(line: 518, column: 1, scope: !9072)
!9102 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1474, file: !1474, line: 526, type: !1345, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9103)
!9103 = !{!9104, !9105, !9106}
!9104 = !DILocalVariable(name: "dev", arg: 1, scope: !9102, file: !1474, line: 526, type: !1347)
!9105 = !DILocalVariable(name: "c", arg: 2, scope: !9102, file: !1474, line: 526, type: !144)
!9106 = !DILocalVariable(name: "config", scope: !9102, file: !1474, line: 528, type: !9107)
!9107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!9108 = !DILocation(line: 0, scope: !9102)
!9109 = !DILocation(line: 528, column: 48, scope: !9102)
!9110 = !DILocation(line: 531, column: 40, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9102, file: !1474, line: 531, column: 6)
!9112 = !DILocation(line: 531, column: 6, scope: !9111)
!9113 = !DILocation(line: 531, column: 6, scope: !9102)
!9114 = !DILocation(line: 532, column: 34, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9111, file: !1474, line: 531, column: 48)
!9116 = !DILocation(line: 532, column: 3, scope: !9115)
!9117 = !DILocation(line: 533, column: 2, scope: !9115)
!9118 = !DILocation(line: 539, column: 42, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9102, file: !1474, line: 539, column: 6)
!9120 = !DILocation(line: 539, column: 7, scope: !9119)
!9121 = !DILocation(line: 539, column: 6, scope: !9102)
!9122 = !DILocation(line: 543, column: 52, scope: !9102)
!9123 = !DILocation(line: 543, column: 22, scope: !9102)
!9124 = !DILocation(line: 543, column: 5, scope: !9102)
!9125 = !DILocation(line: 545, column: 2, scope: !9102)
!9126 = !DILocation(line: 546, column: 1, scope: !9102)
!9127 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1474, file: !1474, line: 548, type: !1364, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9128)
!9128 = !{!9129, !9130, !9131, !9132}
!9129 = !DILocalVariable(name: "dev", arg: 1, scope: !9127, file: !1474, line: 548, type: !1347)
!9130 = !DILocalVariable(name: "c", arg: 2, scope: !9127, file: !1474, line: 549, type: !134)
!9131 = !DILocalVariable(name: "config", scope: !9127, file: !1474, line: 551, type: !9107)
!9132 = !DILocalVariable(name: "key", scope: !9127, file: !1474, line: 555, type: !32)
!9133 = !DILocation(line: 0, scope: !9127)
!9134 = !DILocation(line: 551, column: 48, scope: !9127)
!9135 = !DILocation(line: 562, column: 2, scope: !9127)
!9136 = !DILocation(line: 563, column: 41, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !1474, line: 563, column: 7)
!9138 = distinct !DILexicalBlock(scope: !9127, file: !1474, line: 562, column: 12)
!9139 = !DILocation(line: 563, column: 7, scope: !9137)
!9140 = !DILocation(line: 563, column: 7, scope: !9138)
!9141 = !DILocation(line: 55, column: 2, scope: !9142, inlinedAt: !9146)
!9142 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9143)
!9143 = !{!9144, !9145}
!9144 = !DILocalVariable(name: "key", scope: !9142, file: !5879, line: 44, type: !32)
!9145 = !DILocalVariable(name: "tmp", scope: !9142, file: !5879, line: 53, type: !32)
!9146 = distinct !DILocation(line: 564, column: 10, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9137, file: !1474, line: 563, column: 49)
!9148 = !{i64 1997141}
!9149 = !DILocation(line: 0, scope: !9142, inlinedAt: !9146)
!9150 = !DILocation(line: 565, column: 42, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9147, file: !1474, line: 565, column: 8)
!9152 = !DILocation(line: 565, column: 8, scope: !9151)
!9153 = !DILocation(line: 565, column: 8, scope: !9147)
!9154 = !DILocalVariable(name: "key", arg: 1, scope: !9155, file: !5879, line: 84, type: !32)
!9155 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9156)
!9156 = !{!9154}
!9157 = !DILocation(line: 0, scope: !9155, inlinedAt: !9158)
!9158 = distinct !DILocation(line: 568, column: 4, scope: !9147)
!9159 = !DILocation(line: 95, column: 2, scope: !9155, inlinedAt: !9158)
!9160 = !{i64 1997958}
!9161 = !DILocation(line: 569, column: 3, scope: !9147)
!9162 = distinct !{!9162, !9135, !9163}
!9163 = !DILocation(line: 570, column: 2, scope: !9127)
!9164 = !DILocation(line: 592, column: 33, scope: !9127)
!9165 = !DILocation(line: 592, column: 2, scope: !9127)
!9166 = !DILocation(line: 0, scope: !9155, inlinedAt: !9167)
!9167 = distinct !DILocation(line: 593, column: 2, scope: !9127)
!9168 = !DILocation(line: 95, column: 2, scope: !9155, inlinedAt: !9167)
!9169 = !DILocation(line: 594, column: 1, scope: !9127)
!9170 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1474, file: !1474, line: 596, type: !1368, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9171)
!9171 = !{!9172, !9173, !9174}
!9172 = !DILocalVariable(name: "dev", arg: 1, scope: !9170, file: !1474, line: 596, type: !1347)
!9173 = !DILocalVariable(name: "config", scope: !9170, file: !1474, line: 598, type: !9107)
!9174 = !DILocalVariable(name: "err", scope: !9170, file: !1474, line: 599, type: !162)
!9175 = !DILocation(line: 0, scope: !9170)
!9176 = !DILocation(line: 598, column: 48, scope: !9170)
!9177 = !DILocation(line: 606, column: 40, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9170, file: !1474, line: 606, column: 6)
!9179 = !DILocation(line: 606, column: 6, scope: !9178)
!9180 = !DILocation(line: 606, column: 6, scope: !9170)
!9181 = !DILocation(line: 610, column: 39, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9170, file: !1474, line: 610, column: 6)
!9183 = !DILocation(line: 610, column: 6, scope: !9182)
!9184 = !DILocation(line: 610, column: 6, scope: !9170)
!9185 = !DILocation(line: 614, column: 39, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9170, file: !1474, line: 614, column: 6)
!9187 = !DILocation(line: 614, column: 6, scope: !9186)
!9188 = !DILocation(line: 614, column: 6, scope: !9170)
!9189 = !DILocation(line: 619, column: 40, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9170, file: !1474, line: 619, column: 6)
!9191 = !DILocation(line: 619, column: 6, scope: !9190)
!9192 = !DILocation(line: 619, column: 6, scope: !9170)
!9193 = !DILocation(line: 623, column: 10, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9170, file: !1474, line: 623, column: 6)
!9195 = !DILocation(line: 623, column: 6, scope: !9170)
!9196 = !DILocation(line: 624, column: 34, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9194, file: !1474, line: 623, column: 24)
!9198 = !DILocation(line: 624, column: 3, scope: !9197)
!9199 = !DILocation(line: 625, column: 2, scope: !9197)
!9200 = !DILocation(line: 632, column: 10, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9170, file: !1474, line: 632, column: 6)
!9202 = !DILocation(line: 632, column: 6, scope: !9170)
!9203 = !DILocation(line: 633, column: 34, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9201, file: !1474, line: 632, column: 32)
!9205 = !DILocation(line: 633, column: 3, scope: !9204)
!9206 = !DILocation(line: 634, column: 2, scope: !9204)
!9207 = !DILocation(line: 636, column: 10, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9170, file: !1474, line: 636, column: 6)
!9209 = !DILocation(line: 636, column: 6, scope: !9170)
!9210 = !DILocation(line: 637, column: 33, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9208, file: !1474, line: 636, column: 31)
!9212 = !DILocation(line: 637, column: 3, scope: !9211)
!9213 = !DILocation(line: 638, column: 2, scope: !9211)
!9214 = !DILocation(line: 640, column: 10, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9170, file: !1474, line: 640, column: 6)
!9216 = !DILocation(line: 640, column: 6, scope: !9170)
!9217 = !DILocation(line: 641, column: 33, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9215, file: !1474, line: 640, column: 32)
!9219 = !DILocation(line: 641, column: 3, scope: !9218)
!9220 = !DILocation(line: 642, column: 2, scope: !9218)
!9221 = !DILocation(line: 646, column: 32, scope: !9170)
!9222 = !DILocation(line: 646, column: 2, scope: !9170)
!9223 = !DILocation(line: 648, column: 2, scope: !9170)
!9224 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1474, file: !1474, line: 419, type: !1372, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9225)
!9225 = !{!9226, !9227, !9228, !9229, !9231, !9232, !9233, !9234}
!9226 = !DILocalVariable(name: "dev", arg: 1, scope: !9224, file: !1474, line: 419, type: !1347)
!9227 = !DILocalVariable(name: "cfg", arg: 2, scope: !9224, file: !1474, line: 420, type: !1374)
!9228 = !DILocalVariable(name: "config", scope: !9224, file: !1474, line: 422, type: !9107)
!9229 = !DILocalVariable(name: "data", scope: !9224, file: !1474, line: 423, type: !9230)
!9230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!9231 = !DILocalVariable(name: "parity", scope: !9224, file: !1474, line: 424, type: !6321)
!9232 = !DILocalVariable(name: "stopbits", scope: !9224, file: !1474, line: 425, type: !6321)
!9233 = !DILocalVariable(name: "databits", scope: !9224, file: !1474, line: 426, type: !6321)
!9234 = !DILocalVariable(name: "flowctrl", scope: !9224, file: !1474, line: 428, type: !6321)
!9235 = !DILocation(line: 0, scope: !9224)
!9236 = !DILocation(line: 422, column: 48, scope: !9224)
!9237 = !DILocation(line: 423, column: 38, scope: !9224)
!9238 = !DILocation(line: 424, column: 56, scope: !9224)
!9239 = !DILocation(line: 424, column: 51, scope: !9224)
!9240 = !DILocation(line: 424, column: 26, scope: !9224)
!9241 = !DILocation(line: 425, column: 60, scope: !9224)
!9242 = !DILocation(line: 425, column: 55, scope: !9224)
!9243 = !DILocation(line: 425, column: 28, scope: !9224)
!9244 = !DILocation(line: 426, column: 60, scope: !9224)
!9245 = !DILocation(line: 426, column: 55, scope: !9224)
!9246 = !DILocation(line: 426, column: 28, scope: !9224)
!9247 = !DILocation(line: 428, column: 58, scope: !9224)
!9248 = !DILocation(line: 428, column: 53, scope: !9224)
!9249 = !DILocation(line: 428, column: 28, scope: !9224)
!9250 = !DILocation(line: 431, column: 44, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 431, column: 6)
!9252 = !DILocation(line: 438, column: 22, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 437, column: 6)
!9254 = !DILocation(line: 437, column: 6, scope: !9224)
!9255 = !DILocation(line: 448, column: 6, scope: !9224)
!9256 = !DILocation(line: 465, column: 47, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 465, column: 6)
!9258 = !DILocation(line: 475, column: 21, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 475, column: 6)
!9260 = !DILocation(line: 475, column: 6, scope: !9224)
!9261 = !DILocation(line: 476, column: 8, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !1474, line: 476, column: 7)
!9263 = distinct !DILexicalBlock(scope: !9259, file: !1474, line: 475, column: 49)
!9264 = !DILocation(line: 477, column: 34, scope: !9262)
!9265 = !DILocation(line: 476, column: 7, scope: !9263)
!9266 = !DILocation(line: 482, column: 27, scope: !9224)
!9267 = !DILocation(line: 482, column: 2, scope: !9224)
!9268 = !DILocation(line: 484, column: 16, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 484, column: 6)
!9270 = !DILocation(line: 484, column: 13, scope: !9269)
!9271 = !DILocation(line: 484, column: 6, scope: !9224)
!9272 = !DILocation(line: 485, column: 3, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9269, file: !1474, line: 484, column: 44)
!9274 = !DILocation(line: 486, column: 2, scope: !9273)
!9275 = !DILocation(line: 488, column: 18, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 488, column: 6)
!9277 = !DILocation(line: 488, column: 15, scope: !9276)
!9278 = !DILocation(line: 488, column: 6, scope: !9224)
!9279 = !DILocation(line: 489, column: 3, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9276, file: !1474, line: 488, column: 48)
!9281 = !DILocation(line: 490, column: 2, scope: !9280)
!9282 = !DILocation(line: 492, column: 18, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 492, column: 6)
!9284 = !DILocation(line: 492, column: 15, scope: !9283)
!9285 = !DILocation(line: 492, column: 6, scope: !9224)
!9286 = !DILocation(line: 493, column: 3, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9283, file: !1474, line: 492, column: 48)
!9288 = !DILocation(line: 494, column: 2, scope: !9287)
!9289 = !DILocation(line: 496, column: 18, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 496, column: 6)
!9291 = !DILocation(line: 496, column: 15, scope: !9290)
!9292 = !DILocation(line: 496, column: 6, scope: !9224)
!9293 = !DILocation(line: 497, column: 3, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9290, file: !1474, line: 496, column: 46)
!9295 = !DILocation(line: 498, column: 2, scope: !9294)
!9296 = !DILocation(line: 500, column: 11, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9224, file: !1474, line: 500, column: 6)
!9298 = !DILocation(line: 500, column: 29, scope: !9297)
!9299 = !DILocation(line: 500, column: 20, scope: !9297)
!9300 = !DILocation(line: 500, column: 6, scope: !9224)
!9301 = !DILocation(line: 501, column: 3, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9297, file: !1474, line: 500, column: 40)
!9303 = !DILocation(line: 502, column: 26, scope: !9302)
!9304 = !DILocation(line: 502, column: 19, scope: !9302)
!9305 = !DILocation(line: 503, column: 2, scope: !9302)
!9306 = !DILocation(line: 505, column: 26, scope: !9224)
!9307 = !DILocation(line: 505, column: 2, scope: !9224)
!9308 = !DILocation(line: 506, column: 2, scope: !9224)
!9309 = !DILocation(line: 507, column: 1, scope: !9224)
!9310 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1474, file: !1474, line: 509, type: !1385, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9311)
!9311 = !{!9312, !9313, !9314}
!9312 = !DILocalVariable(name: "dev", arg: 1, scope: !9310, file: !1474, line: 509, type: !1347)
!9313 = !DILocalVariable(name: "cfg", arg: 2, scope: !9310, file: !1474, line: 510, type: !1387)
!9314 = !DILocalVariable(name: "data", scope: !9310, file: !1474, line: 512, type: !9230)
!9315 = !DILocation(line: 0, scope: !9310)
!9316 = !DILocation(line: 512, column: 38, scope: !9310)
!9317 = !DILocation(line: 514, column: 24, scope: !9310)
!9318 = !DILocation(line: 514, column: 7, scope: !9310)
!9319 = !DILocation(line: 514, column: 16, scope: !9310)
!9320 = !DILocation(line: 515, column: 41, scope: !9310)
!9321 = !{i32 0, i32 1537}
!9322 = !DILocation(line: 515, column: 16, scope: !9310)
!9323 = !DILocation(line: 515, column: 7, scope: !9310)
!9324 = !DILocation(line: 515, column: 14, scope: !9310)
!9325 = !DILocation(line: 517, column: 3, scope: !9310)
!9326 = !{i32 0, i32 12289}
!9327 = !DILocation(line: 516, column: 19, scope: !9310)
!9328 = !DILocation(line: 516, column: 7, scope: !9310)
!9329 = !DILocation(line: 516, column: 17, scope: !9310)
!9330 = !DILocation(line: 519, column: 3, scope: !9310)
!9331 = !DILocation(line: 519, column: 33, scope: !9310)
!9332 = !DILocation(line: 518, column: 19, scope: !9310)
!9333 = !DILocation(line: 518, column: 7, scope: !9310)
!9334 = !DILocation(line: 518, column: 17, scope: !9310)
!9335 = !DILocation(line: 521, column: 3, scope: !9310)
!9336 = !{i32 0, i32 769}
!9337 = !DILocation(line: 520, column: 19, scope: !9310)
!9338 = !DILocation(line: 520, column: 7, scope: !9310)
!9339 = !DILocation(line: 520, column: 17, scope: !9310)
!9340 = !DILocation(line: 522, column: 2, scope: !9310)
!9341 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1474, file: !1474, line: 661, type: !1390, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9342)
!9342 = !{!9343, !9344, !9345, !9346, !9347, !9348}
!9343 = !DILocalVariable(name: "dev", arg: 1, scope: !9341, file: !1474, line: 661, type: !1347)
!9344 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9341, file: !1474, line: 662, type: !176)
!9345 = !DILocalVariable(name: "size", arg: 3, scope: !9341, file: !1474, line: 663, type: !107)
!9346 = !DILocalVariable(name: "config", scope: !9341, file: !1474, line: 665, type: !9107)
!9347 = !DILocalVariable(name: "num_tx", scope: !9341, file: !1474, line: 666, type: !133)
!9348 = !DILocalVariable(name: "key", scope: !9341, file: !1474, line: 667, type: !32)
!9349 = !DILocation(line: 0, scope: !9341)
!9350 = !DILocation(line: 665, column: 48, scope: !9341)
!9351 = !DILocation(line: 669, column: 41, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9341, file: !1474, line: 669, column: 6)
!9353 = !DILocation(line: 669, column: 7, scope: !9352)
!9354 = !DILocation(line: 669, column: 6, scope: !9341)
!9355 = !DILocation(line: 55, column: 2, scope: !9142, inlinedAt: !9356)
!9356 = distinct !DILocation(line: 674, column: 8, scope: !9341)
!9357 = !DILocation(line: 0, scope: !9142, inlinedAt: !9356)
!9358 = !DILocation(line: 676, column: 24, scope: !9341)
!9359 = !DILocation(line: 676, column: 29, scope: !9341)
!9360 = !DILocation(line: 677, column: 43, scope: !9341)
!9361 = !DILocation(line: 677, column: 9, scope: !9341)
!9362 = !DILocation(line: 676, column: 2, scope: !9341)
!9363 = !DILocation(line: 681, column: 34, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9341, file: !1474, line: 677, column: 51)
!9365 = !DILocation(line: 681, column: 55, scope: !9364)
!9366 = !DILocation(line: 681, column: 41, scope: !9364)
!9367 = !DILocation(line: 681, column: 3, scope: !9364)
!9368 = !DILocation(line: 676, column: 17, scope: !9341)
!9369 = distinct !{!9369, !9362, !9370}
!9370 = !DILocation(line: 682, column: 2, scope: !9341)
!9371 = !DILocation(line: 0, scope: !9155, inlinedAt: !9372)
!9372 = distinct !DILocation(line: 684, column: 2, scope: !9341)
!9373 = !DILocation(line: 95, column: 2, scope: !9155, inlinedAt: !9372)
!9374 = !DILocation(line: 686, column: 2, scope: !9341)
!9375 = !DILocation(line: 687, column: 1, scope: !9341)
!9376 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1474, file: !1474, line: 689, type: !1394, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9377)
!9377 = !{!9378, !9379, !9380, !9381, !9382}
!9378 = !DILocalVariable(name: "dev", arg: 1, scope: !9376, file: !1474, line: 689, type: !1347)
!9379 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9376, file: !1474, line: 689, type: !182)
!9380 = !DILocalVariable(name: "size", arg: 3, scope: !9376, file: !1474, line: 690, type: !183)
!9381 = !DILocalVariable(name: "config", scope: !9376, file: !1474, line: 692, type: !9107)
!9382 = !DILocalVariable(name: "num_rx", scope: !9376, file: !1474, line: 693, type: !133)
!9383 = !DILocation(line: 0, scope: !9376)
!9384 = !DILocation(line: 692, column: 48, scope: !9376)
!9385 = !DILocation(line: 696, column: 44, scope: !9376)
!9386 = !DILocation(line: 695, column: 24, scope: !9376)
!9387 = !DILocation(line: 695, column: 29, scope: !9376)
!9388 = !DILocation(line: 696, column: 9, scope: !9376)
!9389 = !DILocation(line: 695, column: 2, scope: !9376)
!9390 = !DILocation(line: 700, column: 53, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9376, file: !1474, line: 696, column: 52)
!9392 = !DILocation(line: 700, column: 23, scope: !9391)
!9393 = !DILocation(line: 700, column: 17, scope: !9391)
!9394 = !DILocation(line: 700, column: 3, scope: !9391)
!9395 = !DILocation(line: 700, column: 21, scope: !9391)
!9396 = !DILocation(line: 703, column: 41, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9391, file: !1474, line: 703, column: 7)
!9398 = !DILocation(line: 703, column: 7, scope: !9397)
!9399 = !DILocation(line: 703, column: 7, scope: !9391)
!9400 = !DILocation(line: 704, column: 35, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9397, file: !1474, line: 703, column: 49)
!9402 = !DILocation(line: 704, column: 4, scope: !9401)
!9403 = !DILocation(line: 709, column: 3, scope: !9401)
!9404 = !DILocation(line: 695, column: 17, scope: !9376)
!9405 = distinct !{!9405, !9389, !9406}
!9406 = !DILocation(line: 710, column: 2, scope: !9376)
!9407 = !DILocation(line: 712, column: 2, scope: !9376)
!9408 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1474, file: !1474, line: 715, type: !1398, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9409)
!9409 = !{!9410, !9411}
!9410 = !DILocalVariable(name: "dev", arg: 1, scope: !9408, file: !1474, line: 715, type: !1347)
!9411 = !DILocalVariable(name: "config", scope: !9408, file: !1474, line: 717, type: !9107)
!9412 = !DILocation(line: 0, scope: !9408)
!9413 = !DILocation(line: 717, column: 48, scope: !9408)
!9414 = !DILocation(line: 729, column: 31, scope: !9408)
!9415 = !DILocation(line: 729, column: 2, scope: !9408)
!9416 = !DILocation(line: 734, column: 1, scope: !9408)
!9417 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1474, file: !1474, line: 736, type: !1398, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9418)
!9418 = !{!9419, !9420}
!9419 = !DILocalVariable(name: "dev", arg: 1, scope: !9417, file: !1474, line: 736, type: !1347)
!9420 = !DILocalVariable(name: "config", scope: !9417, file: !1474, line: 738, type: !9107)
!9421 = !DILocation(line: 0, scope: !9417)
!9422 = !DILocation(line: 738, column: 48, scope: !9417)
!9423 = !DILocation(line: 746, column: 32, scope: !9417)
!9424 = !DILocation(line: 746, column: 2, scope: !9417)
!9425 = !DILocation(line: 756, column: 1, scope: !9417)
!9426 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1474, file: !1474, line: 758, type: !1368, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9427)
!9427 = !{!9428, !9429}
!9428 = !DILocalVariable(name: "dev", arg: 1, scope: !9426, file: !1474, line: 758, type: !1347)
!9429 = !DILocalVariable(name: "config", scope: !9426, file: !1474, line: 760, type: !9107)
!9430 = !DILocation(line: 0, scope: !9426)
!9431 = !DILocation(line: 760, column: 48, scope: !9426)
!9432 = !DILocation(line: 762, column: 43, scope: !9426)
!9433 = !DILocation(line: 762, column: 9, scope: !9426)
!9434 = !DILocation(line: 762, column: 50, scope: !9426)
!9435 = !DILocation(line: 763, column: 35, scope: !9426)
!9436 = !DILocation(line: 763, column: 3, scope: !9426)
!9437 = !DILocation(line: 762, column: 2, scope: !9426)
!9438 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1474, file: !1474, line: 773, type: !1398, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9439)
!9439 = !{!9440, !9441}
!9440 = !DILocalVariable(name: "dev", arg: 1, scope: !9438, file: !1474, line: 773, type: !1347)
!9441 = !DILocalVariable(name: "config", scope: !9438, file: !1474, line: 775, type: !9107)
!9442 = !DILocation(line: 0, scope: !9438)
!9443 = !DILocation(line: 775, column: 48, scope: !9438)
!9444 = !DILocation(line: 777, column: 33, scope: !9438)
!9445 = !DILocation(line: 777, column: 2, scope: !9438)
!9446 = !DILocation(line: 778, column: 1, scope: !9438)
!9447 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1474, file: !1474, line: 780, type: !1398, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9448)
!9448 = !{!9449, !9450}
!9449 = !DILocalVariable(name: "dev", arg: 1, scope: !9447, file: !1474, line: 780, type: !1347)
!9450 = !DILocalVariable(name: "config", scope: !9447, file: !1474, line: 782, type: !9107)
!9451 = !DILocation(line: 0, scope: !9447)
!9452 = !DILocation(line: 782, column: 48, scope: !9447)
!9453 = !DILocation(line: 784, column: 34, scope: !9447)
!9454 = !DILocation(line: 784, column: 2, scope: !9447)
!9455 = !DILocation(line: 785, column: 1, scope: !9447)
!9456 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1474, file: !1474, line: 766, type: !1368, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9457)
!9457 = !{!9458, !9459}
!9458 = !DILocalVariable(name: "dev", arg: 1, scope: !9456, file: !1474, line: 766, type: !1347)
!9459 = !DILocalVariable(name: "config", scope: !9456, file: !1474, line: 768, type: !9107)
!9460 = !DILocation(line: 0, scope: !9456)
!9461 = !DILocation(line: 768, column: 48, scope: !9456)
!9462 = !DILocation(line: 770, column: 42, scope: !9456)
!9463 = !DILocation(line: 770, column: 9, scope: !9456)
!9464 = !DILocation(line: 770, column: 2, scope: !9456)
!9465 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1474, file: !1474, line: 787, type: !1368, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9466)
!9466 = !{!9467, !9468}
!9467 = !DILocalVariable(name: "dev", arg: 1, scope: !9465, file: !1474, line: 787, type: !1347)
!9468 = !DILocalVariable(name: "config", scope: !9465, file: !1474, line: 789, type: !9107)
!9469 = !DILocation(line: 0, scope: !9465)
!9470 = !DILocation(line: 789, column: 48, scope: !9465)
!9471 = !DILocation(line: 794, column: 44, scope: !9465)
!9472 = !DILocation(line: 794, column: 9, scope: !9465)
!9473 = !DILocation(line: 794, column: 2, scope: !9465)
!9474 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1474, file: !1474, line: 797, type: !1398, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9475)
!9475 = !{!9476, !9477}
!9476 = !DILocalVariable(name: "dev", arg: 1, scope: !9474, file: !1474, line: 797, type: !1347)
!9477 = !DILocalVariable(name: "config", scope: !9474, file: !1474, line: 799, type: !9107)
!9478 = !DILocation(line: 0, scope: !9474)
!9479 = !DILocation(line: 799, column: 48, scope: !9474)
!9480 = !DILocation(line: 802, column: 34, scope: !9474)
!9481 = !DILocation(line: 802, column: 2, scope: !9474)
!9482 = !DILocation(line: 805, column: 6, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9474, file: !1474, line: 805, column: 6)
!9484 = !DILocation(line: 806, column: 3, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9483, file: !1474, line: 805, column: 43)
!9486 = !DILocation(line: 810, column: 31, scope: !9474)
!9487 = !DILocation(line: 807, column: 2, scope: !9485)
!9488 = !DILocation(line: 810, column: 2, scope: !9474)
!9489 = !DILocation(line: 811, column: 1, scope: !9474)
!9490 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1474, file: !1474, line: 813, type: !1398, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9491)
!9491 = !{!9492, !9493}
!9492 = !DILocalVariable(name: "dev", arg: 1, scope: !9490, file: !1474, line: 813, type: !1347)
!9493 = !DILocalVariable(name: "config", scope: !9490, file: !1474, line: 815, type: !9107)
!9494 = !DILocation(line: 0, scope: !9490)
!9495 = !DILocation(line: 815, column: 48, scope: !9490)
!9496 = !DILocation(line: 818, column: 35, scope: !9490)
!9497 = !DILocation(line: 818, column: 2, scope: !9490)
!9498 = !DILocation(line: 821, column: 6, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9490, file: !1474, line: 821, column: 6)
!9500 = !DILocation(line: 822, column: 3, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9499, file: !1474, line: 821, column: 43)
!9502 = !DILocation(line: 826, column: 32, scope: !9490)
!9503 = !DILocation(line: 823, column: 2, scope: !9501)
!9504 = !DILocation(line: 826, column: 2, scope: !9490)
!9505 = !DILocation(line: 827, column: 1, scope: !9490)
!9506 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1474, file: !1474, line: 829, type: !1368, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9507)
!9507 = !{!9508, !9509}
!9508 = !DILocalVariable(name: "dev", arg: 1, scope: !9506, file: !1474, line: 829, type: !1347)
!9509 = !DILocalVariable(name: "config", scope: !9506, file: !1474, line: 831, type: !9107)
!9510 = !DILocation(line: 0, scope: !9506)
!9511 = !DILocation(line: 831, column: 48, scope: !9506)
!9512 = !DILocation(line: 833, column: 46, scope: !9506)
!9513 = !DILocation(line: 833, column: 11, scope: !9506)
!9514 = !DILocation(line: 833, column: 53, scope: !9506)
!9515 = !DILocation(line: 834, column: 38, scope: !9506)
!9516 = !DILocation(line: 834, column: 4, scope: !9506)
!9517 = !DILocation(line: 834, column: 46, scope: !9506)
!9518 = !DILocation(line: 835, column: 37, scope: !9506)
!9519 = !DILocation(line: 835, column: 4, scope: !9506)
!9520 = !DILocation(line: 835, column: 44, scope: !9506)
!9521 = !DILocation(line: 836, column: 36, scope: !9506)
!9522 = !DILocation(line: 836, column: 4, scope: !9506)
!9523 = !DILocation(line: 833, column: 2, scope: !9506)
!9524 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1474, file: !1474, line: 839, type: !1368, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9525)
!9525 = !{!9526}
!9526 = !DILocalVariable(name: "dev", arg: 1, scope: !9524, file: !1474, line: 839, type: !1347)
!9527 = !DILocation(line: 0, scope: !9524)
!9528 = !DILocation(line: 841, column: 2, scope: !9524)
!9529 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1474, file: !1474, line: 844, type: !1412, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9530)
!9530 = !{!9531, !9532, !9533, !9534}
!9531 = !DILocalVariable(name: "dev", arg: 1, scope: !9529, file: !1474, line: 844, type: !1347)
!9532 = !DILocalVariable(name: "cb", arg: 2, scope: !9529, file: !1474, line: 845, type: !1414)
!9533 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9529, file: !1474, line: 846, type: !102)
!9534 = !DILocalVariable(name: "data", scope: !9529, file: !1474, line: 848, type: !9230)
!9535 = !DILocation(line: 0, scope: !9529)
!9536 = !DILocation(line: 848, column: 38, scope: !9529)
!9537 = !DILocation(line: 850, column: 8, scope: !9529)
!9538 = !DILocation(line: 850, column: 16, scope: !9529)
!9539 = !DILocation(line: 851, column: 8, scope: !9529)
!9540 = !DILocation(line: 851, column: 18, scope: !9529)
!9541 = !DILocation(line: 852, column: 1, scope: !9529)
!9542 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9543, file: !9543, line: 1792, type: !9544, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9546)
!9543 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9544 = !DISubroutineType(types: !9545)
!9545 = !{!162, !1418}
!9546 = !{!9547}
!9547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9542, file: !9543, line: 1792, type: !1418)
!9548 = !DILocation(line: 0, scope: !9542)
!9549 = !DILocation(line: 1794, column: 11, scope: !9542)
!9550 = !DILocation(line: 1794, column: 47, scope: !9542)
!9551 = !DILocation(line: 1794, column: 3, scope: !9542)
!9552 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !9543, file: !9543, line: 2227, type: !9544, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9553)
!9553 = !{!9554}
!9554 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9552, file: !9543, line: 2227, type: !1418)
!9555 = !DILocation(line: 0, scope: !9552)
!9556 = !DILocation(line: 2229, column: 11, scope: !9552)
!9557 = !DILocation(line: 2229, column: 51, scope: !9552)
!9558 = !DILocation(line: 2229, column: 3, scope: !9552)
!9559 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !9543, file: !9543, line: 1803, type: !9544, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9560)
!9560 = !{!9561}
!9561 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9559, file: !9543, line: 1803, type: !1418)
!9562 = !DILocation(line: 0, scope: !9559)
!9563 = !DILocation(line: 1805, column: 11, scope: !9559)
!9564 = !DILocation(line: 1805, column: 45, scope: !9559)
!9565 = !DILocation(line: 1805, column: 3, scope: !9559)
!9566 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !9543, file: !9543, line: 2238, type: !9544, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9567)
!9567 = !{!9568}
!9568 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9566, file: !9543, line: 2238, type: !1418)
!9569 = !DILocation(line: 0, scope: !9566)
!9570 = !DILocation(line: 2240, column: 11, scope: !9566)
!9571 = !DILocation(line: 2240, column: 49, scope: !9566)
!9572 = !DILocation(line: 2240, column: 3, scope: !9566)
!9573 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !9543, file: !9543, line: 2192, type: !9574, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9576)
!9574 = !DISubroutineType(types: !9575)
!9575 = !{null, !1418}
!9576 = !{!9577, !9578}
!9577 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9573, file: !9543, line: 2192, type: !1418)
!9578 = !DILocalVariable(name: "val", scope: !9579, file: !9543, line: 2194, type: !162)
!9579 = distinct !DILexicalBlock(scope: !9573, file: !9543, line: 2194, column: 3)
!9580 = !DILocation(line: 0, scope: !9573)
!9581 = !DILocation(line: 2194, column: 3, scope: !9579)
!9582 = !DILocalVariable(name: "addr", arg: 1, scope: !9583, file: !6053, line: 476, type: !1470)
!9583 = distinct !DISubprogram(name: "__LDREXW", scope: !6053, file: !6053, line: 476, type: !9584, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9586)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{!162, !1470}
!9586 = !{!9582, !9587}
!9587 = !DILocalVariable(name: "result", scope: !9583, file: !6053, line: 478, type: !162)
!9588 = !DILocation(line: 0, scope: !9583, inlinedAt: !9589)
!9589 = distinct !DILocation(line: 2194, column: 3, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9579, file: !9543, line: 2194, column: 3)
!9591 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !9589)
!9592 = !{i64 2859203}
!9593 = !DILocation(line: 2194, column: 3, scope: !9590)
!9594 = !DILocation(line: 0, scope: !9579)
!9595 = !DILocalVariable(name: "value", arg: 1, scope: !9596, file: !6053, line: 527, type: !162)
!9596 = distinct !DISubprogram(name: "__STREXW", scope: !6053, file: !6053, line: 527, type: !9597, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9599)
!9597 = !DISubroutineType(types: !9598)
!9598 = !{!162, !162, !1470}
!9599 = !{!9595, !9600, !9601}
!9600 = !DILocalVariable(name: "addr", arg: 2, scope: !9596, file: !6053, line: 527, type: !1470)
!9601 = !DILocalVariable(name: "result", scope: !9596, file: !6053, line: 529, type: !162)
!9602 = !DILocation(line: 0, scope: !9596, inlinedAt: !9603)
!9603 = distinct !DILocation(line: 2194, column: 3, scope: !9579)
!9604 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !9603)
!9605 = !{i64 2860639}
!9606 = distinct !{!9606, !9581, !9581}
!9607 = !DILocation(line: 2195, column: 1, scope: !9573)
!9608 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !9543, file: !9543, line: 2177, type: !9574, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9609)
!9609 = !{!9610}
!9610 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9608, file: !9543, line: 2177, type: !1418)
!9611 = !DILocation(line: 0, scope: !9608)
!9612 = !DILocation(line: 2179, column: 3, scope: !9608)
!9613 = !DILocation(line: 2180, column: 1, scope: !9608)
!9614 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !9543, file: !9543, line: 2164, type: !9574, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9615)
!9615 = !{!9616, !9617}
!9616 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9614, file: !9543, line: 2164, type: !1418)
!9617 = !DILocalVariable(name: "val", scope: !9618, file: !9543, line: 2166, type: !162)
!9618 = distinct !DILexicalBlock(scope: !9614, file: !9543, line: 2166, column: 3)
!9619 = !DILocation(line: 0, scope: !9614)
!9620 = !DILocation(line: 2166, column: 3, scope: !9618)
!9621 = !DILocation(line: 0, scope: !9583, inlinedAt: !9622)
!9622 = distinct !DILocation(line: 2166, column: 3, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9618, file: !9543, line: 2166, column: 3)
!9624 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !9622)
!9625 = !DILocation(line: 2166, column: 3, scope: !9623)
!9626 = !DILocation(line: 0, scope: !9618)
!9627 = !DILocation(line: 0, scope: !9596, inlinedAt: !9628)
!9628 = distinct !DILocation(line: 2166, column: 3, scope: !9618)
!9629 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !9628)
!9630 = distinct !{!9630, !9620, !9620}
!9631 = !DILocation(line: 2167, column: 1, scope: !9614)
!9632 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !9543, file: !9543, line: 2096, type: !9574, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9633)
!9633 = !{!9634, !9635}
!9634 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9632, file: !9543, line: 2096, type: !1418)
!9635 = !DILocalVariable(name: "val", scope: !9636, file: !9543, line: 2098, type: !162)
!9636 = distinct !DILexicalBlock(scope: !9632, file: !9543, line: 2098, column: 3)
!9637 = !DILocation(line: 0, scope: !9632)
!9638 = !DILocation(line: 2098, column: 3, scope: !9636)
!9639 = !DILocation(line: 0, scope: !9583, inlinedAt: !9640)
!9640 = distinct !DILocation(line: 2098, column: 3, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9636, file: !9543, line: 2098, column: 3)
!9642 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !9640)
!9643 = !DILocation(line: 2098, column: 3, scope: !9641)
!9644 = !DILocation(line: 0, scope: !9636)
!9645 = !DILocation(line: 0, scope: !9596, inlinedAt: !9646)
!9646 = distinct !DILocation(line: 2098, column: 3, scope: !9636)
!9647 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !9646)
!9648 = distinct !{!9648, !9638, !9638}
!9649 = !DILocation(line: 2099, column: 1, scope: !9632)
!9650 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !9543, file: !9543, line: 2081, type: !9574, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9651)
!9651 = !{!9652}
!9652 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9650, file: !9543, line: 2081, type: !1418)
!9653 = !DILocation(line: 0, scope: !9650)
!9654 = !DILocation(line: 2083, column: 3, scope: !9650)
!9655 = !DILocation(line: 2084, column: 1, scope: !9650)
!9656 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !9543, file: !9543, line: 2068, type: !9574, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9657)
!9657 = !{!9658, !9659}
!9658 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9656, file: !9543, line: 2068, type: !1418)
!9659 = !DILocalVariable(name: "val", scope: !9660, file: !9543, line: 2070, type: !162)
!9660 = distinct !DILexicalBlock(scope: !9656, file: !9543, line: 2070, column: 3)
!9661 = !DILocation(line: 0, scope: !9656)
!9662 = !DILocation(line: 2070, column: 3, scope: !9660)
!9663 = !DILocation(line: 0, scope: !9583, inlinedAt: !9664)
!9664 = distinct !DILocation(line: 2070, column: 3, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9660, file: !9543, line: 2070, column: 3)
!9666 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !9664)
!9667 = !DILocation(line: 2070, column: 3, scope: !9665)
!9668 = !DILocation(line: 0, scope: !9660)
!9669 = !DILocation(line: 0, scope: !9596, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 2070, column: 3, scope: !9660)
!9671 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !9670)
!9672 = distinct !{!9672, !9662, !9662}
!9673 = !DILocation(line: 2071, column: 1, scope: !9656)
!9674 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !9543, file: !9543, line: 2131, type: !9574, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9675)
!9675 = !{!9676, !9677}
!9676 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9674, file: !9543, line: 2131, type: !1418)
!9677 = !DILocalVariable(name: "val", scope: !9678, file: !9543, line: 2133, type: !162)
!9678 = distinct !DILexicalBlock(scope: !9674, file: !9543, line: 2133, column: 3)
!9679 = !DILocation(line: 0, scope: !9674)
!9680 = !DILocation(line: 2133, column: 3, scope: !9678)
!9681 = !DILocation(line: 0, scope: !9583, inlinedAt: !9682)
!9682 = distinct !DILocation(line: 2133, column: 3, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9678, file: !9543, line: 2133, column: 3)
!9684 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !9682)
!9685 = !DILocation(line: 2133, column: 3, scope: !9683)
!9686 = !DILocation(line: 0, scope: !9678)
!9687 = !DILocation(line: 0, scope: !9596, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 2133, column: 3, scope: !9678)
!9689 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !9688)
!9690 = distinct !{!9690, !9680, !9680}
!9691 = !DILocation(line: 2134, column: 1, scope: !9674)
!9692 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !9543, file: !9543, line: 2035, type: !9574, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9693)
!9693 = !{!9694, !9695}
!9694 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9692, file: !9543, line: 2035, type: !1418)
!9695 = !DILocalVariable(name: "val", scope: !9696, file: !9543, line: 2037, type: !162)
!9696 = distinct !DILexicalBlock(scope: !9692, file: !9543, line: 2037, column: 3)
!9697 = !DILocation(line: 0, scope: !9692)
!9698 = !DILocation(line: 2037, column: 3, scope: !9696)
!9699 = !DILocation(line: 0, scope: !9583, inlinedAt: !9700)
!9700 = distinct !DILocation(line: 2037, column: 3, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9696, file: !9543, line: 2037, column: 3)
!9702 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !9700)
!9703 = !DILocation(line: 2037, column: 3, scope: !9701)
!9704 = !DILocation(line: 0, scope: !9696)
!9705 = !DILocation(line: 0, scope: !9596, inlinedAt: !9706)
!9706 = distinct !DILocation(line: 2037, column: 3, scope: !9696)
!9707 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !9706)
!9708 = distinct !{!9708, !9698, !9698}
!9709 = !DILocation(line: 2038, column: 1, scope: !9692)
!9710 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9543, file: !9543, line: 1814, type: !9544, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9711)
!9711 = !{!9712}
!9712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9710, file: !9543, line: 1814, type: !1418)
!9713 = !DILocation(line: 0, scope: !9710)
!9714 = !DILocation(line: 1816, column: 11, scope: !9710)
!9715 = !DILocation(line: 1816, column: 46, scope: !9710)
!9716 = !DILocation(line: 1816, column: 3, scope: !9710)
!9717 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !9543, file: !9543, line: 2142, type: !9574, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9718)
!9718 = !{!9719, !9720}
!9719 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9717, file: !9543, line: 2142, type: !1418)
!9720 = !DILocalVariable(name: "val", scope: !9721, file: !9543, line: 2144, type: !162)
!9721 = distinct !DILexicalBlock(scope: !9717, file: !9543, line: 2144, column: 3)
!9722 = !DILocation(line: 0, scope: !9717)
!9723 = !DILocation(line: 2144, column: 3, scope: !9721)
!9724 = !DILocation(line: 0, scope: !9583, inlinedAt: !9725)
!9725 = distinct !DILocation(line: 2144, column: 3, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9721, file: !9543, line: 2144, column: 3)
!9727 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !9725)
!9728 = !DILocation(line: 2144, column: 3, scope: !9726)
!9729 = !DILocation(line: 0, scope: !9721)
!9730 = !DILocation(line: 0, scope: !9596, inlinedAt: !9731)
!9731 = distinct !DILocation(line: 2144, column: 3, scope: !9721)
!9732 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !9731)
!9733 = distinct !{!9733, !9723, !9723}
!9734 = !DILocation(line: 2145, column: 1, scope: !9717)
!9735 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !9543, file: !9543, line: 2046, type: !9574, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9736)
!9736 = !{!9737, !9738}
!9737 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9735, file: !9543, line: 2046, type: !1418)
!9738 = !DILocalVariable(name: "val", scope: !9739, file: !9543, line: 2048, type: !162)
!9739 = distinct !DILexicalBlock(scope: !9735, file: !9543, line: 2048, column: 3)
!9740 = !DILocation(line: 0, scope: !9735)
!9741 = !DILocation(line: 2048, column: 3, scope: !9739)
!9742 = !DILocation(line: 0, scope: !9583, inlinedAt: !9743)
!9743 = distinct !DILocation(line: 2048, column: 3, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9739, file: !9543, line: 2048, column: 3)
!9745 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !9743)
!9746 = !DILocation(line: 2048, column: 3, scope: !9744)
!9747 = !DILocation(line: 0, scope: !9739)
!9748 = !DILocation(line: 0, scope: !9596, inlinedAt: !9749)
!9749 = distinct !DILocation(line: 2048, column: 3, scope: !9739)
!9750 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !9749)
!9751 = distinct !{!9751, !9741, !9741}
!9752 = !DILocation(line: 2049, column: 1, scope: !9735)
!9753 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9543, file: !9543, line: 2403, type: !9754, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9756)
!9754 = !DISubroutineType(types: !9755)
!9755 = !{!133, !1418}
!9756 = !{!9757}
!9757 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9753, file: !9543, line: 2403, type: !1418)
!9758 = !DILocation(line: 0, scope: !9753)
!9759 = !DILocation(line: 2405, column: 20, scope: !9753)
!9760 = !DILocation(line: 2405, column: 10, scope: !9753)
!9761 = !DILocation(line: 2405, column: 3, scope: !9753)
!9762 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9543, file: !9543, line: 1770, type: !9544, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9763)
!9763 = !{!9764}
!9764 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9762, file: !9543, line: 1770, type: !1418)
!9765 = !DILocation(line: 0, scope: !9762)
!9766 = !DILocation(line: 1772, column: 11, scope: !9762)
!9767 = !DILocation(line: 1772, column: 46, scope: !9762)
!9768 = !DILocation(line: 1772, column: 3, scope: !9762)
!9769 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9543, file: !9543, line: 1934, type: !9574, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9770)
!9770 = !{!9771, !9772}
!9771 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9769, file: !9543, line: 1934, type: !1418)
!9772 = !DILocalVariable(name: "tmpreg", scope: !9769, file: !9543, line: 1936, type: !283)
!9773 = !DILocation(line: 0, scope: !9769)
!9774 = !DILocation(line: 1936, column: 3, scope: !9769)
!9775 = !DILocation(line: 1936, column: 17, scope: !9769)
!9776 = !DILocation(line: 1937, column: 20, scope: !9769)
!9777 = !DILocation(line: 1937, column: 10, scope: !9769)
!9778 = !DILocation(line: 1938, column: 10, scope: !9769)
!9779 = !DILocation(line: 1939, column: 20, scope: !9769)
!9780 = !DILocation(line: 1939, column: 10, scope: !9769)
!9781 = !DILocation(line: 1940, column: 10, scope: !9769)
!9782 = !DILocation(line: 1941, column: 1, scope: !9769)
!9783 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9543, file: !9543, line: 2426, type: !9784, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9786)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{null, !1418, !133}
!9786 = !{!9787, !9788}
!9787 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9783, file: !9543, line: 2426, type: !1418)
!9788 = !DILocalVariable(name: "Value", arg: 2, scope: !9783, file: !9543, line: 2426, type: !133)
!9789 = !DILocation(line: 0, scope: !9783)
!9790 = !DILocation(line: 2428, column: 16, scope: !9783)
!9791 = !DILocation(line: 2428, column: 11, scope: !9783)
!9792 = !DILocation(line: 2428, column: 14, scope: !9783)
!9793 = !DILocation(line: 2429, column: 1, scope: !9783)
!9794 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1474, file: !1474, line: 205, type: !9795, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9797)
!9795 = !DISubroutineType(types: !9796)
!9796 = !{!162, !1347}
!9797 = !{!9798, !9799}
!9798 = !DILocalVariable(name: "dev", arg: 1, scope: !9794, file: !1474, line: 205, type: !1347)
!9799 = !DILocalVariable(name: "config", scope: !9794, file: !1474, line: 207, type: !9107)
!9800 = !DILocation(line: 0, scope: !9794)
!9801 = !DILocation(line: 207, column: 48, scope: !9794)
!9802 = !DILocation(line: 209, column: 36, scope: !9794)
!9803 = !DILocation(line: 209, column: 9, scope: !9794)
!9804 = !DILocation(line: 209, column: 2, scope: !9794)
!9805 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1474, file: !1474, line: 270, type: !9806, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9808)
!9806 = !DISubroutineType(types: !9807)
!9807 = !{!1313, !162}
!9808 = !{!9809}
!9809 = !DILocalVariable(name: "parity", arg: 1, scope: !9805, file: !1474, line: 270, type: !162)
!9810 = !DILocation(line: 0, scope: !9805)
!9811 = !DILocation(line: 272, column: 2, scope: !9805)
!9812 = !DILocation(line: 281, column: 1, scope: !9805)
!9813 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1474, file: !1474, line: 220, type: !9795, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9814)
!9814 = !{!9815, !9816}
!9815 = !DILocalVariable(name: "dev", arg: 1, scope: !9813, file: !1474, line: 220, type: !1347)
!9816 = !DILocalVariable(name: "config", scope: !9813, file: !1474, line: 222, type: !9107)
!9817 = !DILocation(line: 0, scope: !9813)
!9818 = !DILocation(line: 222, column: 48, scope: !9813)
!9819 = !DILocation(line: 224, column: 44, scope: !9813)
!9820 = !DILocation(line: 224, column: 9, scope: !9813)
!9821 = !DILocation(line: 224, column: 2, scope: !9813)
!9822 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1474, file: !1474, line: 304, type: !9823, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9825)
!9823 = !DISubroutineType(types: !9824)
!9824 = !{!1327, !162}
!9825 = !{!9826}
!9826 = !DILocalVariable(name: "sb", arg: 1, scope: !9822, file: !1474, line: 304, type: !162)
!9827 = !DILocation(line: 0, scope: !9822)
!9828 = !DILocation(line: 306, column: 2, scope: !9822)
!9829 = !DILocation(line: 0, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9822, file: !1474, line: 306, column: 14)
!9831 = !DILocation(line: 323, column: 1, scope: !9822)
!9832 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1474, file: !1474, line: 235, type: !9795, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9833)
!9833 = !{!9834, !9835}
!9834 = !DILocalVariable(name: "dev", arg: 1, scope: !9832, file: !1474, line: 235, type: !1347)
!9835 = !DILocalVariable(name: "config", scope: !9832, file: !1474, line: 237, type: !9107)
!9836 = !DILocation(line: 0, scope: !9832)
!9837 = !DILocation(line: 237, column: 48, scope: !9832)
!9838 = !DILocation(line: 239, column: 39, scope: !9832)
!9839 = !DILocation(line: 239, column: 9, scope: !9832)
!9840 = !DILocation(line: 239, column: 2, scope: !9832)
!9841 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1474, file: !1474, line: 355, type: !9842, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9844)
!9842 = !DISubroutineType(types: !9843)
!9843 = !{!1320, !162, !162}
!9844 = !{!9845, !9846}
!9845 = !DILocalVariable(name: "db", arg: 1, scope: !9841, file: !1474, line: 355, type: !162)
!9846 = !DILocalVariable(name: "p", arg: 2, scope: !9841, file: !1474, line: 356, type: !162)
!9847 = !DILocation(line: 0, scope: !9841)
!9848 = !DILocation(line: 358, column: 2, scope: !9841)
!9849 = !DILocation(line: 384, column: 1, scope: !9841)
!9850 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1474, file: !1474, line: 250, type: !9795, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9851)
!9851 = !{!9852, !9853}
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9850, file: !1474, line: 250, type: !1347)
!9853 = !DILocalVariable(name: "config", scope: !9850, file: !1474, line: 252, type: !9107)
!9854 = !DILocation(line: 0, scope: !9850)
!9855 = !DILocation(line: 252, column: 48, scope: !9850)
!9856 = !DILocation(line: 254, column: 40, scope: !9850)
!9857 = !DILocation(line: 254, column: 9, scope: !9850)
!9858 = !DILocation(line: 254, column: 2, scope: !9850)
!9859 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1474, file: !1474, line: 409, type: !9860, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9862)
!9860 = !DISubroutineType(types: !9861)
!9861 = !{!1333, !162}
!9862 = !{!9863}
!9863 = !DILocalVariable(name: "fc", arg: 1, scope: !9859, file: !1474, line: 409, type: !162)
!9864 = !DILocation(line: 0, scope: !9859)
!9865 = !DILocation(line: 411, column: 9, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9859, file: !1474, line: 411, column: 6)
!9867 = !DILocation(line: 416, column: 1, scope: !9859)
!9868 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9543, file: !9543, line: 967, type: !9544, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9869)
!9869 = !{!9870}
!9870 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9868, file: !9543, line: 967, type: !1418)
!9871 = !DILocation(line: 0, scope: !9868)
!9872 = !DILocation(line: 969, column: 21, scope: !9868)
!9873 = !DILocation(line: 969, column: 3, scope: !9868)
!9874 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9543, file: !9543, line: 601, type: !9544, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9875)
!9875 = !{!9876}
!9876 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9874, file: !9543, line: 601, type: !1418)
!9877 = !DILocation(line: 0, scope: !9874)
!9878 = !DILocation(line: 603, column: 21, scope: !9874)
!9879 = !DILocation(line: 603, column: 3, scope: !9874)
!9880 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9543, file: !9543, line: 820, type: !9544, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9881)
!9881 = !{!9882}
!9882 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9880, file: !9543, line: 820, type: !1418)
!9883 = !DILocation(line: 0, scope: !9880)
!9884 = !DILocation(line: 822, column: 21, scope: !9880)
!9885 = !DILocation(line: 822, column: 3, scope: !9880)
!9886 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9543, file: !9543, line: 547, type: !9544, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9887)
!9887 = !{!9888}
!9888 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9886, file: !9543, line: 547, type: !1418)
!9889 = !DILocation(line: 0, scope: !9886)
!9890 = !DILocation(line: 549, column: 21, scope: !9886)
!9891 = !DILocation(line: 549, column: 3, scope: !9886)
!9892 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1474, file: !1474, line: 257, type: !9893, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9895)
!9893 = !DISubroutineType(types: !9894)
!9894 = !{!162, !1313}
!9895 = !{!9896}
!9896 = !DILocalVariable(name: "parity", arg: 1, scope: !9892, file: !1474, line: 257, type: !1313)
!9897 = !DILocation(line: 0, scope: !9892)
!9898 = !DILocation(line: 259, column: 2, scope: !9892)
!9899 = !DILocation(line: 268, column: 1, scope: !9892)
!9900 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1474, file: !1474, line: 283, type: !9901, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9903)
!9901 = !DISubroutineType(types: !9902)
!9902 = !{!162, !1327}
!9903 = !{!9904}
!9904 = !DILocalVariable(name: "sb", arg: 1, scope: !9900, file: !1474, line: 283, type: !1327)
!9905 = !DILocation(line: 0, scope: !9900)
!9906 = !DILocation(line: 285, column: 2, scope: !9900)
!9907 = !DILocation(line: 0, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9900, file: !1474, line: 285, column: 14)
!9909 = !DILocation(line: 302, column: 1, scope: !9900)
!9910 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1474, file: !1474, line: 325, type: !9911, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9913)
!9911 = !DISubroutineType(types: !9912)
!9912 = !{!162, !1320, !1313}
!9913 = !{!9914, !9915}
!9914 = !DILocalVariable(name: "db", arg: 1, scope: !9910, file: !1474, line: 325, type: !1320)
!9915 = !DILocalVariable(name: "p", arg: 2, scope: !9910, file: !1474, line: 326, type: !1313)
!9916 = !DILocation(line: 0, scope: !9910)
!9917 = !DILocation(line: 328, column: 2, scope: !9910)
!9918 = !DILocation(line: 353, column: 1, scope: !9910)
!9919 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1474, file: !1474, line: 393, type: !9920, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9922)
!9920 = !DISubroutineType(types: !9921)
!9921 = !{!162, !1333}
!9922 = !{!9923}
!9923 = !DILocalVariable(name: "fc", arg: 1, scope: !9919, file: !1474, line: 393, type: !1333)
!9924 = !DILocation(line: 0, scope: !9919)
!9925 = !DILocation(line: 395, column: 9, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9919, file: !1474, line: 395, column: 6)
!9927 = !DILocation(line: 400, column: 1, scope: !9919)
!9928 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9543, file: !9543, line: 424, type: !9574, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9929)
!9929 = !{!9930}
!9930 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9928, file: !9543, line: 424, type: !1418)
!9931 = !DILocation(line: 0, scope: !9928)
!9932 = !DILocation(line: 426, column: 3, scope: !9928)
!9933 = !DILocation(line: 427, column: 1, scope: !9928)
!9934 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1474, file: !1474, line: 197, type: !9935, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9937)
!9935 = !DISubroutineType(types: !9936)
!9936 = !{null, !1347, !162}
!9937 = !{!9938, !9939, !9940}
!9938 = !DILocalVariable(name: "dev", arg: 1, scope: !9934, file: !1474, line: 197, type: !1347)
!9939 = !DILocalVariable(name: "parity", arg: 2, scope: !9934, file: !1474, line: 198, type: !162)
!9940 = !DILocalVariable(name: "config", scope: !9934, file: !1474, line: 200, type: !9107)
!9941 = !DILocation(line: 0, scope: !9934)
!9942 = !DILocation(line: 200, column: 48, scope: !9934)
!9943 = !DILocation(line: 202, column: 29, scope: !9934)
!9944 = !DILocation(line: 202, column: 2, scope: !9934)
!9945 = !DILocation(line: 203, column: 1, scope: !9934)
!9946 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1474, file: !1474, line: 212, type: !9935, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9947)
!9947 = !{!9948, !9949, !9950}
!9948 = !DILocalVariable(name: "dev", arg: 1, scope: !9946, file: !1474, line: 212, type: !1347)
!9949 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9946, file: !1474, line: 213, type: !162)
!9950 = !DILocalVariable(name: "config", scope: !9946, file: !1474, line: 215, type: !9107)
!9951 = !DILocation(line: 0, scope: !9946)
!9952 = !DILocation(line: 215, column: 48, scope: !9946)
!9953 = !DILocation(line: 217, column: 37, scope: !9946)
!9954 = !DILocation(line: 217, column: 2, scope: !9946)
!9955 = !DILocation(line: 218, column: 1, scope: !9946)
!9956 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1474, file: !1474, line: 227, type: !9935, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9957)
!9957 = !{!9958, !9959, !9960}
!9958 = !DILocalVariable(name: "dev", arg: 1, scope: !9956, file: !1474, line: 227, type: !1347)
!9959 = !DILocalVariable(name: "databits", arg: 2, scope: !9956, file: !1474, line: 228, type: !162)
!9960 = !DILocalVariable(name: "config", scope: !9956, file: !1474, line: 230, type: !9107)
!9961 = !DILocation(line: 0, scope: !9956)
!9962 = !DILocation(line: 230, column: 48, scope: !9956)
!9963 = !DILocation(line: 232, column: 32, scope: !9956)
!9964 = !DILocation(line: 232, column: 2, scope: !9956)
!9965 = !DILocation(line: 233, column: 1, scope: !9956)
!9966 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1474, file: !1474, line: 242, type: !9935, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9967)
!9967 = !{!9968, !9969, !9970}
!9968 = !DILocalVariable(name: "dev", arg: 1, scope: !9966, file: !1474, line: 242, type: !1347)
!9969 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9966, file: !1474, line: 243, type: !162)
!9970 = !DILocalVariable(name: "config", scope: !9966, file: !1474, line: 245, type: !9107)
!9971 = !DILocation(line: 0, scope: !9966)
!9972 = !DILocation(line: 245, column: 48, scope: !9966)
!9973 = !DILocation(line: 247, column: 33, scope: !9966)
!9974 = !DILocation(line: 247, column: 2, scope: !9966)
!9975 = !DILocation(line: 248, column: 1, scope: !9966)
!9976 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1474, file: !1474, line: 107, type: !9935, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !9977)
!9977 = !{!9978, !9979, !9980, !9981, !9982}
!9978 = !DILocalVariable(name: "dev", arg: 1, scope: !9976, file: !1474, line: 107, type: !1347)
!9979 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9976, file: !1474, line: 107, type: !162)
!9980 = !DILocalVariable(name: "config", scope: !9976, file: !1474, line: 109, type: !9107)
!9981 = !DILocalVariable(name: "data", scope: !9976, file: !1474, line: 110, type: !9230)
!9982 = !DILocalVariable(name: "clock_rate", scope: !9976, file: !1474, line: 112, type: !162)
!9983 = !DILocation(line: 0, scope: !9976)
!9984 = !DILocation(line: 109, column: 48, scope: !9976)
!9985 = !DILocation(line: 110, column: 38, scope: !9976)
!9986 = !DILocation(line: 112, column: 2, scope: !9976)
!9987 = !DILocation(line: 123, column: 36, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !1474, line: 123, column: 7)
!9989 = distinct !DILexicalBlock(scope: !9990, file: !1474, line: 122, column: 9)
!9990 = distinct !DILexicalBlock(scope: !9976, file: !1474, line: 115, column: 6)
!9991 = !DILocation(line: 124, column: 42, scope: !9988)
!9992 = !DILocation(line: 123, column: 7, scope: !9988)
!9993 = !DILocation(line: 125, column: 22, scope: !9988)
!9994 = !DILocation(line: 123, column: 7, scope: !9989)
!9995 = !DILocation(line: 176, column: 36, scope: !9976)
!9996 = !DILocation(line: 176, column: 3, scope: !9976)
!9997 = !DILocation(line: 179, column: 32, scope: !9976)
!9998 = !DILocation(line: 180, column: 10, scope: !9976)
!9999 = !DILocation(line: 179, column: 3, scope: !9976)
!10000 = !DILocation(line: 195, column: 1, scope: !9976)
!10001 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9543, file: !9543, line: 410, type: !9574, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10002)
!10002 = !{!10003}
!10003 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10001, file: !9543, line: 410, type: !1418)
!10004 = !DILocation(line: 0, scope: !10001)
!10005 = !DILocation(line: 412, column: 3, scope: !10001)
!10006 = !DILocation(line: 413, column: 1, scope: !10001)
!10007 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !777, file: !777, line: 216, type: !1451, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10008)
!10008 = !{!10009, !10010, !10011, !10012}
!10009 = !DILocalVariable(name: "dev", arg: 1, scope: !10007, file: !777, line: 216, type: !1347)
!10010 = !DILocalVariable(name: "sys", arg: 2, scope: !10007, file: !777, line: 217, type: !872)
!10011 = !DILocalVariable(name: "rate", arg: 3, scope: !10007, file: !777, line: 218, type: !828)
!10012 = !DILocalVariable(name: "api", scope: !10007, file: !777, line: 220, type: !1429)
!10013 = !DILocation(line: 0, scope: !10007)
!10014 = !DILocation(line: 221, column: 49, scope: !10007)
!10015 = !DILocation(line: 223, column: 11, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10007, file: !777, line: 223, column: 6)
!10017 = !DILocation(line: 223, column: 20, scope: !10016)
!10018 = !DILocation(line: 223, column: 6, scope: !10007)
!10019 = !DILocation(line: 227, column: 9, scope: !10007)
!10020 = !DILocation(line: 227, column: 2, scope: !10007)
!10021 = !DILocation(line: 228, column: 1, scope: !10007)
!10022 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9543, file: !9543, line: 615, type: !10023, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10025)
!10023 = !DISubroutineType(types: !10024)
!10024 = !{null, !1418, !162}
!10025 = !{!10026, !10027}
!10026 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10022, file: !9543, line: 615, type: !1418)
!10027 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10022, file: !9543, line: 615, type: !162)
!10028 = !DILocation(line: 0, scope: !10022)
!10029 = !DILocation(line: 617, column: 3, scope: !10022)
!10030 = !DILocation(line: 618, column: 1, scope: !10022)
!10031 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9543, file: !9543, line: 1020, type: !10032, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10034)
!10032 = !DISubroutineType(types: !10033)
!10033 = !{null, !1418, !162, !162, !162}
!10034 = !{!10035, !10036, !10037, !10038}
!10035 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10031, file: !9543, line: 1020, type: !1418)
!10036 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10031, file: !9543, line: 1020, type: !162)
!10037 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10031, file: !9543, line: 1020, type: !162)
!10038 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10031, file: !9543, line: 1021, type: !162)
!10039 = !DILocation(line: 0, scope: !10031)
!10040 = !DILocation(line: 1029, column: 30, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10042, file: !9543, line: 1028, column: 3)
!10042 = distinct !DILexicalBlock(scope: !10031, file: !9543, line: 1023, column: 7)
!10043 = !DILocation(line: 1029, column: 19, scope: !10041)
!10044 = !DILocation(line: 1029, column: 13, scope: !10041)
!10045 = !DILocation(line: 1029, column: 17, scope: !10041)
!10046 = !DILocation(line: 1031, column: 1, scope: !10031)
!10047 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9543, file: !9543, line: 949, type: !10023, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10048)
!10048 = !{!10049, !10050}
!10049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10047, file: !9543, line: 949, type: !1418)
!10050 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10047, file: !9543, line: 949, type: !162)
!10051 = !DILocation(line: 0, scope: !10047)
!10052 = !DILocation(line: 951, column: 3, scope: !10047)
!10053 = !DILocation(line: 952, column: 1, scope: !10047)
!10054 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9543, file: !9543, line: 588, type: !10023, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10055)
!10055 = !{!10056, !10057}
!10056 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10054, file: !9543, line: 588, type: !1418)
!10057 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10054, file: !9543, line: 588, type: !162)
!10058 = !DILocation(line: 0, scope: !10054)
!10059 = !DILocation(line: 590, column: 3, scope: !10054)
!10060 = !DILocation(line: 591, column: 1, scope: !10054)
!10061 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9543, file: !9543, line: 805, type: !10023, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10062)
!10062 = !{!10063, !10064}
!10063 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10061, file: !9543, line: 805, type: !1418)
!10064 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10061, file: !9543, line: 805, type: !162)
!10065 = !DILocation(line: 0, scope: !10061)
!10066 = !DILocation(line: 807, column: 3, scope: !10061)
!10067 = !DILocation(line: 808, column: 1, scope: !10061)
!10068 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9543, file: !9543, line: 532, type: !10023, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10069)
!10069 = !{!10070, !10071}
!10070 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10068, file: !9543, line: 532, type: !1418)
!10071 = !DILocalVariable(name: "Parity", arg: 2, scope: !10068, file: !9543, line: 532, type: !162)
!10072 = !DILocation(line: 0, scope: !10068)
!10073 = !DILocation(line: 534, column: 3, scope: !10068)
!10074 = !DILocation(line: 535, column: 1, scope: !10068)
!10075 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9543, file: !9543, line: 1737, type: !9544, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10076)
!10076 = !{!10077}
!10077 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10075, file: !9543, line: 1737, type: !1418)
!10078 = !DILocation(line: 0, scope: !10075)
!10079 = !DILocation(line: 1739, column: 11, scope: !10075)
!10080 = !DILocation(line: 1739, column: 3, scope: !10075)
!10081 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9543, file: !9543, line: 1748, type: !9544, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10082)
!10082 = !{!10083}
!10083 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10081, file: !9543, line: 1748, type: !1418)
!10084 = !DILocation(line: 0, scope: !10081)
!10085 = !DILocation(line: 1750, column: 11, scope: !10081)
!10086 = !DILocation(line: 1750, column: 45, scope: !10081)
!10087 = !DILocation(line: 1750, column: 3, scope: !10081)
!10088 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9543, file: !9543, line: 1827, type: !9544, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10089)
!10089 = !{!10090}
!10090 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10088, file: !9543, line: 1827, type: !1418)
!10091 = !DILocation(line: 0, scope: !10088)
!10092 = !DILocation(line: 1829, column: 11, scope: !10088)
!10093 = !DILocation(line: 1829, column: 46, scope: !10088)
!10094 = !DILocation(line: 1829, column: 3, scope: !10088)
!10095 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9543, file: !9543, line: 1992, type: !9574, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10096)
!10096 = !{!10097}
!10097 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10095, file: !9543, line: 1992, type: !1418)
!10098 = !DILocation(line: 0, scope: !10095)
!10099 = !DILocation(line: 1994, column: 3, scope: !10095)
!10100 = !DILocation(line: 1995, column: 1, scope: !10095)
!10101 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9543, file: !9543, line: 1877, type: !9574, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10102)
!10102 = !{!10103, !10104}
!10103 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10101, file: !9543, line: 1877, type: !1418)
!10104 = !DILocalVariable(name: "tmpreg", scope: !10101, file: !9543, line: 1879, type: !283)
!10105 = !DILocation(line: 0, scope: !10101)
!10106 = !DILocation(line: 1879, column: 3, scope: !10101)
!10107 = !DILocation(line: 1879, column: 17, scope: !10101)
!10108 = !DILocation(line: 1880, column: 20, scope: !10101)
!10109 = !DILocation(line: 1880, column: 10, scope: !10101)
!10110 = !DILocation(line: 1881, column: 10, scope: !10101)
!10111 = !DILocation(line: 1882, column: 20, scope: !10101)
!10112 = !DILocation(line: 1882, column: 10, scope: !10101)
!10113 = !DILocation(line: 1883, column: 10, scope: !10101)
!10114 = !DILocation(line: 1884, column: 1, scope: !10101)
!10115 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9543, file: !9543, line: 1896, type: !9574, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10116)
!10116 = !{!10117, !10118}
!10117 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10115, file: !9543, line: 1896, type: !1418)
!10118 = !DILocalVariable(name: "tmpreg", scope: !10115, file: !9543, line: 1898, type: !283)
!10119 = !DILocation(line: 0, scope: !10115)
!10120 = !DILocation(line: 1898, column: 3, scope: !10115)
!10121 = !DILocation(line: 1898, column: 17, scope: !10115)
!10122 = !DILocation(line: 1899, column: 20, scope: !10115)
!10123 = !DILocation(line: 1899, column: 10, scope: !10115)
!10124 = !DILocation(line: 1900, column: 10, scope: !10115)
!10125 = !DILocation(line: 1901, column: 20, scope: !10115)
!10126 = !DILocation(line: 1901, column: 10, scope: !10115)
!10127 = !DILocation(line: 1902, column: 10, scope: !10115)
!10128 = !DILocation(line: 1903, column: 1, scope: !10115)
!10129 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9543, file: !9543, line: 1915, type: !9574, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10130)
!10130 = !{!10131, !10132}
!10131 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10129, file: !9543, line: 1915, type: !1418)
!10132 = !DILocalVariable(name: "tmpreg", scope: !10129, file: !9543, line: 1917, type: !283)
!10133 = !DILocation(line: 0, scope: !10129)
!10134 = !DILocation(line: 1917, column: 3, scope: !10129)
!10135 = !DILocation(line: 1917, column: 17, scope: !10129)
!10136 = !DILocation(line: 1918, column: 20, scope: !10129)
!10137 = !DILocation(line: 1918, column: 10, scope: !10129)
!10138 = !DILocation(line: 1919, column: 10, scope: !10129)
!10139 = !DILocation(line: 1920, column: 20, scope: !10129)
!10140 = !DILocation(line: 1920, column: 10, scope: !10129)
!10141 = !DILocation(line: 1921, column: 10, scope: !10129)
!10142 = !DILocation(line: 1922, column: 1, scope: !10129)
!10143 = !DILocation(line: 0, scope: !1528)
!10144 = !DILocation(line: 1914, column: 1, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !1528, file: !1474, line: 1914, column: 1)
!10146 = !DILocation(line: 1914, column: 1, scope: !1528)
!10147 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1474, file: !1474, line: 987, type: !1398, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10148)
!10148 = !{!10149, !10150}
!10149 = !DILocalVariable(name: "dev", arg: 1, scope: !10147, file: !1474, line: 987, type: !1347)
!10150 = !DILocalVariable(name: "data", scope: !10147, file: !1474, line: 989, type: !9230)
!10151 = !DILocation(line: 0, scope: !10147)
!10152 = !DILocation(line: 989, column: 38, scope: !10147)
!10153 = !DILocation(line: 1014, column: 12, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10147, file: !1474, line: 1014, column: 6)
!10155 = !DILocation(line: 1014, column: 6, scope: !10154)
!10156 = !DILocation(line: 1014, column: 6, scope: !10147)
!10157 = !DILocation(line: 1015, column: 28, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10154, file: !1474, line: 1014, column: 21)
!10159 = !DILocation(line: 1015, column: 3, scope: !10158)
!10160 = !DILocation(line: 1016, column: 2, scope: !10158)
!10161 = !DILocation(line: 1059, column: 1, scope: !10147)
!10162 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1474, file: !1474, line: 1583, type: !1368, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10163)
!10163 = !{!10164, !10165, !10166, !10167, !10168, !10169}
!10164 = !DILocalVariable(name: "dev", arg: 1, scope: !10162, file: !1474, line: 1583, type: !1347)
!10165 = !DILocalVariable(name: "config", scope: !10162, file: !1474, line: 1585, type: !9107)
!10166 = !DILocalVariable(name: "data", scope: !10162, file: !1474, line: 1586, type: !9230)
!10167 = !DILocalVariable(name: "ll_parity", scope: !10162, file: !1474, line: 1587, type: !162)
!10168 = !DILocalVariable(name: "ll_datawidth", scope: !10162, file: !1474, line: 1588, type: !162)
!10169 = !DILocalVariable(name: "err", scope: !10162, file: !1474, line: 1589, type: !107)
!10170 = !DILocation(line: 0, scope: !10162)
!10171 = !DILocation(line: 1585, column: 48, scope: !10162)
!10172 = !DILocation(line: 1586, column: 38, scope: !10162)
!10173 = !DILocation(line: 1591, column: 2, scope: !10162)
!10174 = !DILocation(line: 1593, column: 29, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10162, file: !1474, line: 1593, column: 6)
!10176 = !DILocation(line: 1593, column: 7, scope: !10175)
!10177 = !DILocation(line: 1593, column: 6, scope: !10162)
!10178 = !DILocation(line: 1599, column: 31, scope: !10162)
!10179 = !DILocation(line: 1599, column: 71, scope: !10162)
!10180 = !DILocation(line: 1599, column: 8, scope: !10162)
!10181 = !DILocation(line: 1600, column: 10, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10162, file: !1474, line: 1600, column: 6)
!10183 = !DILocation(line: 1600, column: 6, scope: !10162)
!10184 = !DILocation(line: 1616, column: 36, scope: !10162)
!10185 = !DILocation(line: 1616, column: 8, scope: !10162)
!10186 = !DILocation(line: 1617, column: 10, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10162, file: !1474, line: 1617, column: 6)
!10188 = !DILocation(line: 1617, column: 6, scope: !10162)
!10189 = !DILocation(line: 1621, column: 27, scope: !10162)
!10190 = !DILocation(line: 1621, column: 2, scope: !10162)
!10191 = !DILocation(line: 1624, column: 40, scope: !10162)
!10192 = !DILocation(line: 1624, column: 2, scope: !10162)
!10193 = !DILocation(line: 1630, column: 14, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10162, file: !1474, line: 1630, column: 6)
!10195 = !DILocation(line: 1630, column: 6, scope: !10162)
!10196 = !DILocation(line: 1638, column: 2, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !1474, line: 1634, column: 34)
!10198 = distinct !DILexicalBlock(scope: !10194, file: !1474, line: 1634, column: 13)
!10199 = !DILocation(line: 0, scope: !10194)
!10200 = !DILocation(line: 1649, column: 35, scope: !10162)
!10201 = !DILocation(line: 1649, column: 2, scope: !10162)
!10202 = !DILocation(line: 1654, column: 14, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10162, file: !1474, line: 1654, column: 6)
!10204 = !DILocation(line: 1654, column: 6, scope: !10162)
!10205 = !DILocation(line: 1655, column: 3, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10203, file: !1474, line: 1654, column: 31)
!10207 = !DILocation(line: 1656, column: 2, scope: !10206)
!10208 = !DILocation(line: 1659, column: 37, scope: !10162)
!10209 = !DILocation(line: 1659, column: 2, scope: !10162)
!10210 = !DILocation(line: 1662, column: 14, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10162, file: !1474, line: 1662, column: 6)
!10212 = !DILocation(line: 1662, column: 6, scope: !10162)
!10213 = !DILocation(line: 1663, column: 37, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10211, file: !1474, line: 1662, column: 27)
!10215 = !DILocation(line: 1663, column: 3, scope: !10214)
!10216 = !DILocation(line: 1664, column: 2, scope: !10214)
!10217 = !DILocation(line: 1684, column: 26, scope: !10162)
!10218 = !DILocation(line: 1684, column: 2, scope: !10162)
!10219 = !DILocation(line: 1701, column: 10, scope: !10162)
!10220 = !DILocation(line: 1701, column: 2, scope: !10162)
!10221 = !DILocation(line: 1722, column: 2, scope: !10162)
!10222 = !DILocation(line: 1724, column: 1, scope: !10162)
!10223 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1474, file: !1474, line: 651, type: !1398, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10224)
!10224 = !{!10225, !10226, !10227}
!10225 = !DILocalVariable(name: "dev", arg: 1, scope: !10223, file: !1474, line: 651, type: !1347)
!10226 = !DILocalVariable(name: "data", scope: !10223, file: !1474, line: 653, type: !9230)
!10227 = !DILocalVariable(name: "clk", scope: !10223, file: !1474, line: 654, type: !10228)
!10228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!10229 = !DILocation(line: 0, scope: !10223)
!10230 = !DILocation(line: 653, column: 38, scope: !10223)
!10231 = !DILocation(line: 656, column: 8, scope: !10223)
!10232 = !DILocation(line: 656, column: 14, scope: !10223)
!10233 = !DILocation(line: 657, column: 1, scope: !10223)
!10234 = distinct !DISubprogram(name: "device_is_ready", scope: !3396, file: !3396, line: 47, type: !10235, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10237)
!10235 = !DISubroutineType(types: !10236)
!10236 = !{!136, !1347}
!10237 = !{!10238}
!10238 = !DILocalVariable(name: "dev", arg: 1, scope: !10234, file: !3396, line: 47, type: !1347)
!10239 = !DILocation(line: 0, scope: !10234)
!10240 = !DILocation(line: 55, column: 2, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10234, file: !3396, line: 55, column: 2)
!10242 = !{i64 2154348354}
!10243 = !DILocation(line: 56, column: 9, scope: !10234)
!10244 = !DILocation(line: 56, column: 2, scope: !10234)
!10245 = distinct !DISubprogram(name: "clock_control_on", scope: !777, file: !777, line: 123, type: !1436, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10246)
!10246 = !{!10247, !10248, !10249}
!10247 = !DILocalVariable(name: "dev", arg: 1, scope: !10245, file: !777, line: 123, type: !1347)
!10248 = !DILocalVariable(name: "sys", arg: 2, scope: !10245, file: !777, line: 124, type: !872)
!10249 = !DILocalVariable(name: "api", scope: !10245, file: !777, line: 126, type: !1429)
!10250 = !DILocation(line: 0, scope: !10245)
!10251 = !DILocation(line: 127, column: 49, scope: !10245)
!10252 = !DILocation(line: 129, column: 14, scope: !10245)
!10253 = !DILocation(line: 129, column: 9, scope: !10245)
!10254 = !DILocation(line: 129, column: 2, scope: !10245)
!10255 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1501, file: !1501, line: 342, type: !10256, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10258)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{!107, !1562, !133}
!10258 = !{!10259, !10260, !10261, !10262}
!10259 = !DILocalVariable(name: "config", arg: 1, scope: !10255, file: !1501, line: 342, type: !1562)
!10260 = !DILocalVariable(name: "id", arg: 2, scope: !10255, file: !1501, line: 343, type: !133)
!10261 = !DILocalVariable(name: "ret", scope: !10255, file: !1501, line: 345, type: !107)
!10262 = !DILocalVariable(name: "state", scope: !10255, file: !1501, line: 346, type: !1504)
!10263 = !DILocation(line: 0, scope: !10255)
!10264 = !DILocation(line: 346, column: 2, scope: !10255)
!10265 = !DILocation(line: 348, column: 8, scope: !10255)
!10266 = !DILocation(line: 349, column: 10, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10255, file: !1501, line: 349, column: 6)
!10268 = !DILocation(line: 349, column: 6, scope: !10255)
!10269 = !DILocation(line: 353, column: 44, scope: !10255)
!10270 = !DILocation(line: 353, column: 9, scope: !10255)
!10271 = !DILocation(line: 353, column: 2, scope: !10255)
!10272 = !DILocation(line: 354, column: 1, scope: !10255)
!10273 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9543, file: !9543, line: 497, type: !10023, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10274)
!10274 = !{!10275, !10276, !10277}
!10275 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10273, file: !9543, line: 497, type: !1418)
!10276 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10273, file: !9543, line: 497, type: !162)
!10277 = !DILocalVariable(name: "val", scope: !10278, file: !9543, line: 499, type: !162)
!10278 = distinct !DILexicalBlock(scope: !10273, file: !9543, line: 499, column: 3)
!10279 = !DILocation(line: 0, scope: !10273)
!10280 = !DILocation(line: 499, column: 3, scope: !10278)
!10281 = !DILocation(line: 0, scope: !9583, inlinedAt: !10282)
!10282 = distinct !DILocation(line: 499, column: 3, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10278, file: !9543, line: 499, column: 3)
!10284 = !DILocation(line: 480, column: 4, scope: !9583, inlinedAt: !10282)
!10285 = !DILocation(line: 499, column: 3, scope: !10283)
!10286 = !DILocation(line: 0, scope: !10278)
!10287 = !DILocation(line: 0, scope: !9596, inlinedAt: !10288)
!10288 = distinct !DILocation(line: 499, column: 3, scope: !10278)
!10289 = !DILocation(line: 531, column: 4, scope: !9596, inlinedAt: !10288)
!10290 = distinct !{!10290, !10280, !10280}
!10291 = !DILocation(line: 500, column: 1, scope: !10273)
!10292 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9543, file: !9543, line: 850, type: !10032, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10293)
!10293 = !{!10294, !10295, !10296, !10297}
!10294 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10292, file: !9543, line: 850, type: !1418)
!10295 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10292, file: !9543, line: 850, type: !162)
!10296 = !DILocalVariable(name: "Parity", arg: 3, scope: !10292, file: !9543, line: 850, type: !162)
!10297 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10292, file: !9543, line: 851, type: !162)
!10298 = !DILocation(line: 0, scope: !10292)
!10299 = !DILocation(line: 853, column: 3, scope: !10292)
!10300 = !DILocation(line: 854, column: 3, scope: !10292)
!10301 = !DILocation(line: 855, column: 1, scope: !10292)
!10302 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9543, file: !9543, line: 1337, type: !9574, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10303)
!10303 = !{!10304}
!10304 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10302, file: !9543, line: 1337, type: !1418)
!10305 = !DILocation(line: 0, scope: !10302)
!10306 = !DILocation(line: 1339, column: 3, scope: !10302)
!10307 = !DILocation(line: 1340, column: 1, scope: !10302)
!10308 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1501, file: !1501, line: 316, type: !10309, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10311)
!10309 = !DISubroutineType(types: !10310)
!10310 = !{!107, !1562, !1504}
!10311 = !{!10312, !10313, !10314}
!10312 = !DILocalVariable(name: "config", arg: 1, scope: !10308, file: !1501, line: 317, type: !1562)
!10313 = !DILocalVariable(name: "state", arg: 2, scope: !10308, file: !1501, line: 318, type: !1504)
!10314 = !DILocalVariable(name: "reg", scope: !10308, file: !1501, line: 320, type: !22)
!10315 = !DILocation(line: 0, scope: !10308)
!10316 = !DILocation(line: 329, column: 39, scope: !10308)
!10317 = !DILocation(line: 329, column: 52, scope: !10308)
!10318 = !DILocation(line: 329, column: 9, scope: !10308)
!10319 = !DILocation(line: 329, column: 2, scope: !10308)
!10320 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10235, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1303, retainedNodes: !10321)
!10321 = !{!10322}
!10322 = !DILocalVariable(name: "dev", arg: 1, scope: !10320, file: !120, line: 730, type: !1347)
!10323 = !DILocation(line: 0, scope: !10320)
!10324 = !DILocation(line: 732, column: 9, scope: !10320)
!10325 = !DILocation(line: 732, column: 2, scope: !10320)
!10326 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1643, file: !1643, line: 270, type: !1649, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10327)
!10327 = !{!10328}
!10328 = !DILocalVariable(name: "dev", arg: 1, scope: !10326, file: !1643, line: 270, type: !1651)
!10329 = !DILocation(line: 0, scope: !10326)
!10330 = !DILocation(line: 274, column: 2, scope: !10326)
!10331 = !DILocation(line: 275, column: 12, scope: !10326)
!10332 = !DILocation(line: 276, column: 15, scope: !10326)
!10333 = !DILocation(line: 277, column: 16, scope: !10326)
!10334 = !DILocation(line: 278, column: 15, scope: !10326)
!10335 = !DILocation(line: 279, column: 16, scope: !10326)
!10336 = !DILocation(line: 282, column: 2, scope: !10326)
!10337 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6087, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10338)
!10338 = !{!10339, !10340}
!10339 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10337, file: !497, line: 1814, type: !733)
!10340 = !DILocalVariable(name: "priority", arg: 2, scope: !10337, file: !497, line: 1814, type: !162)
!10341 = !DILocation(line: 0, scope: !10337)
!10342 = !DILocation(line: 1822, column: 46, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10344, file: !497, line: 1821, column: 3)
!10344 = distinct !DILexicalBlock(scope: !10337, file: !497, line: 1816, column: 7)
!10345 = !DILocation(line: 1824, column: 1, scope: !10337)
!10346 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1643, file: !1643, line: 118, type: !5990, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10347)
!10347 = !{!10348, !10349}
!10348 = !DILocalVariable(name: "arg", arg: 1, scope: !10346, file: !1643, line: 118, type: !102)
!10349 = !DILocalVariable(name: "dticks", scope: !10346, file: !1643, line: 121, type: !162)
!10350 = !DILocation(line: 0, scope: !10346)
!10351 = !DILocation(line: 124, column: 2, scope: !10346)
!10352 = !DILocation(line: 129, column: 17, scope: !10346)
!10353 = !DILocation(line: 129, column: 14, scope: !10346)
!10354 = !DILocation(line: 130, column: 15, scope: !10346)
!10355 = !DILocation(line: 145, column: 27, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10357, file: !1643, line: 132, column: 16)
!10357 = distinct !DILexicalBlock(scope: !10346, file: !1643, line: 132, column: 6)
!10358 = !DILocation(line: 145, column: 25, scope: !10356)
!10359 = !DILocation(line: 145, column: 45, scope: !10356)
!10360 = !DILocation(line: 146, column: 30, scope: !10356)
!10361 = !DILocation(line: 146, column: 20, scope: !10356)
!10362 = !DILocation(line: 147, column: 3, scope: !10356)
!10363 = !DILocation(line: 151, column: 2, scope: !10346)
!10364 = !DILocation(line: 152, column: 1, scope: !10346)
!10365 = distinct !DISubprogram(name: "elapsed", scope: !1643, file: !1643, line: 85, type: !6134, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10366)
!10366 = !{!10367, !10368, !10369}
!10367 = !DILocalVariable(name: "val1", scope: !10365, file: !1643, line: 87, type: !162)
!10368 = !DILocalVariable(name: "ctrl", scope: !10365, file: !1643, line: 88, type: !162)
!10369 = !DILocalVariable(name: "val2", scope: !10365, file: !1643, line: 89, type: !162)
!10370 = !DILocation(line: 87, column: 27, scope: !10365)
!10371 = !DILocation(line: 0, scope: !10365)
!10372 = !DILocation(line: 88, column: 27, scope: !10365)
!10373 = !DILocation(line: 89, column: 27, scope: !10365)
!10374 = !DILocation(line: 105, column: 12, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10365, file: !1643, line: 105, column: 6)
!10376 = !DILocation(line: 106, column: 6, scope: !10375)
!10377 = !DILocation(line: 107, column: 16, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10375, file: !1643, line: 106, column: 24)
!10379 = !DILocation(line: 111, column: 18, scope: !10378)
!10380 = !DILocation(line: 112, column: 2, scope: !10378)
!10381 = !DILocation(line: 114, column: 20, scope: !10365)
!10382 = !DILocation(line: 114, column: 30, scope: !10365)
!10383 = !DILocation(line: 114, column: 28, scope: !10365)
!10384 = !DILocation(line: 114, column: 2, scope: !10365)
!10385 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1643, file: !1643, line: 154, type: !10386, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10388)
!10386 = !DISubroutineType(types: !10387)
!10387 = !{null, !707, !136}
!10388 = !{!10389, !10390, !10391, !10392, !10393, !10394, !10395, !10400, !10401}
!10389 = !DILocalVariable(name: "ticks", arg: 1, scope: !10385, file: !1643, line: 154, type: !707)
!10390 = !DILocalVariable(name: "idle", arg: 2, scope: !10385, file: !1643, line: 154, type: !136)
!10391 = !DILocalVariable(name: "delay", scope: !10385, file: !1643, line: 169, type: !162)
!10392 = !DILocalVariable(name: "val1", scope: !10385, file: !1643, line: 170, type: !162)
!10393 = !DILocalVariable(name: "val2", scope: !10385, file: !1643, line: 170, type: !162)
!10394 = !DILocalVariable(name: "last_load_", scope: !10385, file: !1643, line: 171, type: !162)
!10395 = !DILocalVariable(name: "key", scope: !10385, file: !1643, line: 176, type: !10396)
!10396 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !10397)
!10397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !10398)
!10398 = !{!10399}
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10397, file: !249, line: 33, baseType: !107, size: 32)
!10400 = !DILocalVariable(name: "pending", scope: !10385, file: !1643, line: 178, type: !162)
!10401 = !DILocalVariable(name: "unannounced", scope: !10385, file: !1643, line: 185, type: !162)
!10402 = !DILocation(line: 0, scope: !10385)
!10403 = !DILocation(line: 162, column: 49, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10385, file: !1643, line: 162, column: 6)
!10405 = !DILocation(line: 163, column: 17, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10404, file: !1643, line: 162, column: 78)
!10407 = !DILocation(line: 164, column: 13, scope: !10406)
!10408 = !DILocation(line: 165, column: 3, scope: !10406)
!10409 = !DILocation(line: 171, column: 24, scope: !10385)
!10410 = !DILocation(line: 173, column: 10, scope: !10385)
!10411 = !DILocation(line: 174, column: 10, scope: !10385)
!10412 = !DILocalVariable(name: "l", arg: 1, scope: !10413, file: !249, line: 136, type: !10416)
!10413 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !10414, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10417)
!10414 = !DISubroutineType(types: !10415)
!10415 = !{!10396, !10416}
!10416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!10417 = !{!10412, !10418}
!10418 = !DILocalVariable(name: "k", scope: !10413, file: !249, line: 139, type: !10396)
!10419 = !DILocation(line: 0, scope: !10413, inlinedAt: !10420)
!10420 = distinct !DILocation(line: 176, column: 25, scope: !10385)
!10421 = !DILocation(line: 55, column: 2, scope: !10422, inlinedAt: !10426)
!10422 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10423)
!10423 = !{!10424, !10425}
!10424 = !DILocalVariable(name: "key", scope: !10422, file: !5879, line: 44, type: !32)
!10425 = !DILocalVariable(name: "tmp", scope: !10422, file: !5879, line: 53, type: !32)
!10426 = distinct !DILocation(line: 145, column: 10, scope: !10413, inlinedAt: !10420)
!10427 = !{i64 1920995}
!10428 = !DILocation(line: 0, scope: !10422, inlinedAt: !10426)
!10429 = !DILocation(line: 178, column: 21, scope: !10385)
!10430 = !DILocation(line: 180, column: 18, scope: !10385)
!10431 = !DILocation(line: 182, column: 14, scope: !10385)
!10432 = !DILocation(line: 183, column: 15, scope: !10385)
!10433 = !DILocation(line: 185, column: 39, scope: !10385)
!10434 = !DILocation(line: 185, column: 37, scope: !10385)
!10435 = !DILocation(line: 187, column: 27, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10385, file: !1643, line: 187, column: 6)
!10437 = !DILocation(line: 187, column: 6, scope: !10385)
!10438 = !DILocation(line: 202, column: 27, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10436, file: !1643, line: 195, column: 9)
!10440 = !DILocation(line: 202, column: 48, scope: !10439)
!10441 = !DILocation(line: 203, column: 9, scope: !10439)
!10442 = !DILocation(line: 204, column: 11, scope: !10439)
!10443 = !DILocation(line: 205, column: 13, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10439, file: !1643, line: 205, column: 7)
!10445 = !DILocation(line: 205, column: 7, scope: !10439)
!10446 = !DILocation(line: 0, scope: !10436)
!10447 = !DILocation(line: 212, column: 18, scope: !10385)
!10448 = !DILocation(line: 214, column: 28, scope: !10385)
!10449 = !DILocation(line: 214, column: 16, scope: !10385)
!10450 = !DILocation(line: 215, column: 15, scope: !10385)
!10451 = !DILocation(line: 227, column: 11, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10385, file: !1643, line: 227, column: 6)
!10453 = !DILocation(line: 227, column: 6, scope: !10385)
!10454 = !DILocation(line: 228, column: 15, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10452, file: !1643, line: 227, column: 19)
!10456 = !DILocation(line: 228, column: 38, scope: !10455)
!10457 = !DILocation(line: 228, column: 24, scope: !10455)
!10458 = !DILocation(line: 229, column: 2, scope: !10455)
!10459 = !DILocation(line: 230, column: 24, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10452, file: !1643, line: 229, column: 9)
!10461 = !DILocation(line: 230, column: 15, scope: !10460)
!10462 = !DILocation(line: 0, scope: !10452)
!10463 = !DILocalVariable(name: "key", arg: 2, scope: !10464, file: !249, line: 190, type: !10396)
!10464 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !10465, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10467)
!10465 = !DISubroutineType(types: !10466)
!10466 = !{null, !10416, !10396}
!10467 = !{!10468, !10463}
!10468 = !DILocalVariable(name: "l", arg: 1, scope: !10464, file: !249, line: 189, type: !10416)
!10469 = !DILocation(line: 0, scope: !10464, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 232, column: 2, scope: !10385)
!10471 = !DILocalVariable(name: "key", arg: 1, scope: !10472, file: !5879, line: 84, type: !32)
!10472 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10473)
!10473 = !{!10471}
!10474 = !DILocation(line: 0, scope: !10472, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 215, column: 2, scope: !10464, inlinedAt: !10470)
!10476 = !DILocation(line: 95, column: 2, scope: !10472, inlinedAt: !10475)
!10477 = !{i64 1921812}
!10478 = !DILocation(line: 234, column: 1, scope: !10385)
!10479 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1643, file: !1643, line: 236, type: !6134, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10480)
!10480 = !{!10481, !10482}
!10481 = !DILocalVariable(name: "key", scope: !10479, file: !1643, line: 242, type: !10396)
!10482 = !DILocalVariable(name: "cyc", scope: !10479, file: !1643, line: 243, type: !162)
!10483 = !DILocation(line: 0, scope: !10413, inlinedAt: !10484)
!10484 = distinct !DILocation(line: 242, column: 25, scope: !10479)
!10485 = !DILocation(line: 55, column: 2, scope: !10422, inlinedAt: !10486)
!10486 = distinct !DILocation(line: 145, column: 10, scope: !10413, inlinedAt: !10484)
!10487 = !DILocation(line: 0, scope: !10422, inlinedAt: !10486)
!10488 = !DILocation(line: 0, scope: !10479)
!10489 = !DILocation(line: 243, column: 17, scope: !10479)
!10490 = !DILocation(line: 243, column: 29, scope: !10479)
!10491 = !DILocation(line: 243, column: 27, scope: !10479)
!10492 = !DILocation(line: 243, column: 43, scope: !10479)
!10493 = !DILocation(line: 243, column: 41, scope: !10479)
!10494 = !DILocation(line: 0, scope: !10464, inlinedAt: !10495)
!10495 = distinct !DILocation(line: 245, column: 2, scope: !10479)
!10496 = !DILocation(line: 0, scope: !10472, inlinedAt: !10497)
!10497 = distinct !DILocation(line: 215, column: 2, scope: !10464, inlinedAt: !10495)
!10498 = !DILocation(line: 95, column: 2, scope: !10472, inlinedAt: !10497)
!10499 = !DILocation(line: 246, column: 13, scope: !10479)
!10500 = !DILocation(line: 246, column: 2, scope: !10479)
!10501 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1643, file: !1643, line: 249, type: !6134, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10502)
!10502 = !{!10503, !10504}
!10503 = !DILocalVariable(name: "key", scope: !10501, file: !1643, line: 251, type: !10396)
!10504 = !DILocalVariable(name: "ret", scope: !10501, file: !1643, line: 252, type: !162)
!10505 = !DILocation(line: 0, scope: !10413, inlinedAt: !10506)
!10506 = distinct !DILocation(line: 251, column: 25, scope: !10501)
!10507 = !DILocation(line: 55, column: 2, scope: !10422, inlinedAt: !10508)
!10508 = distinct !DILocation(line: 145, column: 10, scope: !10413, inlinedAt: !10506)
!10509 = !DILocation(line: 0, scope: !10422, inlinedAt: !10508)
!10510 = !DILocation(line: 0, scope: !10501)
!10511 = !DILocation(line: 252, column: 17, scope: !10501)
!10512 = !DILocation(line: 252, column: 29, scope: !10501)
!10513 = !DILocation(line: 252, column: 27, scope: !10501)
!10514 = !DILocation(line: 0, scope: !10464, inlinedAt: !10515)
!10515 = distinct !DILocation(line: 254, column: 2, scope: !10501)
!10516 = !DILocation(line: 0, scope: !10472, inlinedAt: !10517)
!10517 = distinct !DILocation(line: 215, column: 2, scope: !10464, inlinedAt: !10515)
!10518 = !DILocation(line: 95, column: 2, scope: !10472, inlinedAt: !10517)
!10519 = !DILocation(line: 255, column: 2, scope: !10501)
!10520 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1643, file: !1643, line: 258, type: !3113, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !250)
!10521 = !DILocation(line: 260, column: 6, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10520, file: !1643, line: 260, column: 6)
!10523 = !DILocation(line: 260, column: 16, scope: !10522)
!10524 = !DILocation(line: 260, column: 6, scope: !10520)
!10525 = !DILocation(line: 261, column: 17, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10522, file: !1643, line: 260, column: 34)
!10527 = !DILocation(line: 262, column: 2, scope: !10526)
!10528 = !DILocation(line: 263, column: 1, scope: !10520)
!10529 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1643, file: !1643, line: 265, type: !3113, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !250)
!10530 = !DILocation(line: 267, column: 16, scope: !10529)
!10531 = !DILocation(line: 268, column: 1, scope: !10529)
!10532 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10533, file: !10533, line: 9, type: !10534, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !10557)
!10533 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10534 = !DISubroutineType(types: !10535)
!10535 = !{!107, !10536, !133, !10556}
!10536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10537, size: 32)
!10537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10538)
!10538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1501, line: 60, size: 64, elements: !10539)
!10539 = !{!10540, !10555}
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10538, file: !1501, line: 69, baseType: !10541, size: 32)
!10541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10542, size: 32)
!10542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10543)
!10543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1501, line: 50, size: 64, elements: !10544)
!10544 = !{!10545, !10553, !10554}
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10543, file: !1501, line: 52, baseType: !10546, size: 32)
!10546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10547, size: 32)
!10547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10548)
!10548 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1512, line: 37, baseType: !10549)
!10549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1512, line: 32, size: 64, elements: !10550)
!10550 = !{!10551, !10552}
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10549, file: !1512, line: 34, baseType: !162, size: 32)
!10552 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10549, file: !1512, line: 36, baseType: !162, size: 32, offset: 32)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10543, file: !1501, line: 54, baseType: !133, size: 8, offset: 32)
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10543, file: !1501, line: 56, baseType: !133, size: 8, offset: 40)
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10538, file: !1501, line: 71, baseType: !133, size: 8, offset: 32)
!10556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10541, size: 32)
!10557 = !{!10558, !10559, !10560}
!10558 = !DILocalVariable(name: "config", arg: 1, scope: !10532, file: !10533, line: 9, type: !10536)
!10559 = !DILocalVariable(name: "id", arg: 2, scope: !10532, file: !10533, line: 9, type: !133)
!10560 = !DILocalVariable(name: "state", arg: 3, scope: !10532, file: !10533, line: 10, type: !10556)
!10561 = !DILocation(line: 0, scope: !10532)
!10562 = !DILocation(line: 12, column: 20, scope: !10532)
!10563 = !DILocation(line: 13, column: 27, scope: !10532)
!10564 = !DILocation(line: 13, column: 42, scope: !10532)
!10565 = !DILocation(line: 13, column: 19, scope: !10532)
!10566 = !DILocation(line: 13, column: 16, scope: !10532)
!10567 = !DILocation(line: 13, column: 2, scope: !10532)
!10568 = distinct !{!10568, !10567, !10569}
!10569 = !DILocation(line: 19, column: 2, scope: !10532)
!10570 = !DILocation(line: 14, column: 23, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !10533, line: 14, column: 7)
!10572 = distinct !DILexicalBlock(scope: !10532, file: !10533, line: 13, column: 54)
!10573 = !DILocation(line: 14, column: 10, scope: !10571)
!10574 = !DILocation(line: 18, column: 11, scope: !10572)
!10575 = !DILocation(line: 14, column: 7, scope: !10572)
!10576 = !DILocation(line: 22, column: 1, scope: !10532)
!10577 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1760, file: !1760, line: 193, type: !10578, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !10587)
!10578 = !DISubroutineType(types: !10579)
!10579 = !{!107, !10580, !133, !22}
!10580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10581, size: 32)
!10581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10582)
!10582 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1512, line: 37, baseType: !10583)
!10583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1512, line: 32, size: 64, elements: !10584)
!10584 = !{!10585, !10586}
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10583, file: !1512, line: 34, baseType: !162, size: 32)
!10586 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10583, file: !1512, line: 36, baseType: !162, size: 32, offset: 32)
!10587 = !{!10588, !10589, !10590, !10591, !10592, !10593, !10594, !10595, !10597}
!10588 = !DILocalVariable(name: "pins", arg: 1, scope: !10577, file: !1760, line: 193, type: !10580)
!10589 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10577, file: !1760, line: 193, type: !133)
!10590 = !DILocalVariable(name: "reg", arg: 3, scope: !10577, file: !1760, line: 194, type: !22)
!10591 = !DILocalVariable(name: "pin", scope: !10577, file: !1760, line: 196, type: !162)
!10592 = !DILocalVariable(name: "mux", scope: !10577, file: !1760, line: 196, type: !162)
!10593 = !DILocalVariable(name: "pin_cgf", scope: !10577, file: !1760, line: 197, type: !162)
!10594 = !DILocalVariable(name: "ret", scope: !10577, file: !1760, line: 198, type: !107)
!10595 = !DILocalVariable(name: "i", scope: !10596, file: !1760, line: 209, type: !133)
!10596 = distinct !DILexicalBlock(scope: !10577, file: !1760, line: 209, column: 2)
!10597 = !DILocalVariable(name: "gpio_out", scope: !10598, file: !1760, line: 239, type: !162)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !1760, line: 238, column: 55)
!10599 = distinct !DILexicalBlock(scope: !10600, file: !1760, line: 238, column: 14)
!10600 = distinct !DILexicalBlock(scope: !10601, file: !1760, line: 236, column: 14)
!10601 = distinct !DILexicalBlock(scope: !10602, file: !1760, line: 234, column: 7)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !1760, line: 209, column: 41)
!10603 = distinct !DILexicalBlock(scope: !10596, file: !1760, line: 209, column: 2)
!10604 = !DILocation(line: 0, scope: !10577)
!10605 = !DILocation(line: 0, scope: !10596)
!10606 = !DILocation(line: 209, column: 25, scope: !10603)
!10607 = !DILocation(line: 209, column: 2, scope: !10596)
!10608 = distinct !{!10608, !10607, !10609}
!10609 = !DILocation(line: 259, column: 2, scope: !10596)
!10610 = !DILocation(line: 210, column: 17, scope: !10602)
!10611 = !DILocation(line: 234, column: 7, scope: !10601)
!10612 = !DILocation(line: 234, column: 33, scope: !10601)
!10613 = !DILocation(line: 234, column: 7, scope: !10602)
!10614 = !DILocation(line: 235, column: 22, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10601, file: !1760, line: 234, column: 49)
!10616 = !DILocation(line: 235, column: 29, scope: !10615)
!10617 = !DILocation(line: 236, column: 3, scope: !10615)
!10618 = !DILocation(line: 236, column: 14, scope: !10601)
!10619 = !DILocation(line: 239, column: 32, scope: !10598)
!10620 = !DILocation(line: 0, scope: !10598)
!10621 = !DILocation(line: 241, column: 8, scope: !10598)
!10622 = !DILocation(line: 246, column: 3, scope: !10598)
!10623 = !DILocation(line: 252, column: 9, scope: !10602)
!10624 = !DILocation(line: 255, column: 9, scope: !10602)
!10625 = !DILocation(line: 256, column: 11, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10602, file: !1760, line: 256, column: 7)
!10627 = !DILocation(line: 209, column: 37, scope: !10603)
!10628 = !DILocation(line: 256, column: 7, scope: !10602)
!10629 = !DILocation(line: 262, column: 1, scope: !10577)
!10630 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1760, file: !1760, line: 176, type: !10631, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !10633)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{!107, !162, !162, !162}
!10633 = !{!10634, !10635, !10636, !10637}
!10634 = !DILocalVariable(name: "pin", arg: 1, scope: !10630, file: !1760, line: 176, type: !162)
!10635 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10630, file: !1760, line: 176, type: !162)
!10636 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10630, file: !1760, line: 176, type: !162)
!10637 = !DILocalVariable(name: "port_device", scope: !10630, file: !1760, line: 178, type: !1690)
!10638 = !DILocation(line: 0, scope: !10630)
!10639 = !DILocation(line: 180, column: 22, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10630, file: !1760, line: 180, column: 6)
!10641 = !DILocation(line: 180, column: 6, scope: !10630)
!10642 = !DILocation(line: 180, column: 6, scope: !10640)
!10643 = !DILocation(line: 184, column: 16, scope: !10630)
!10644 = !DILocation(line: 186, column: 19, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10630, file: !1760, line: 186, column: 6)
!10646 = !DILocation(line: 186, column: 28, scope: !10645)
!10647 = !DILocation(line: 186, column: 33, scope: !10645)
!10648 = !DILocation(line: 186, column: 6, scope: !10630)
!10649 = !DILocation(line: 190, column: 43, scope: !10630)
!10650 = !DILocation(line: 190, column: 9, scope: !10630)
!10651 = !DILocation(line: 190, column: 2, scope: !10630)
!10652 = !DILocation(line: 191, column: 1, scope: !10630)
!10653 = distinct !DISubprogram(name: "device_is_ready", scope: !3396, file: !3396, line: 47, type: !10654, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !10656)
!10654 = !DISubroutineType(types: !10655)
!10655 = !{!136, !1690}
!10656 = !{!10657}
!10657 = !DILocalVariable(name: "dev", arg: 1, scope: !10653, file: !3396, line: 47, type: !1690)
!10658 = !DILocation(line: 0, scope: !10653)
!10659 = !DILocation(line: 55, column: 2, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10653, file: !3396, line: 55, column: 2)
!10661 = !{i64 2149155004}
!10662 = !DILocation(line: 56, column: 9, scope: !10653)
!10663 = !DILocation(line: 56, column: 2, scope: !10653)
!10664 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10654, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !10665)
!10665 = !{!10666}
!10666 = !DILocalVariable(name: "dev", arg: 1, scope: !10664, file: !120, line: 730, type: !1690)
!10667 = !DILocation(line: 0, scope: !10664)
!10668 = !DILocation(line: 732, column: 9, scope: !10664)
!10669 = !DILocation(line: 732, column: 2, scope: !10664)
!10670 = distinct !DISubprogram(name: "SystemInit", scope: !1810, file: !1810, line: 167, type: !3113, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1768, retainedNodes: !250)
!10671 = !DILocation(line: 182, column: 1, scope: !10670)
!10672 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1810, file: !1810, line: 220, type: !3113, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1768, retainedNodes: !10673)
!10673 = !{!10674, !10675, !10676, !10677, !10678}
!10674 = !DILocalVariable(name: "tmp", scope: !10672, file: !1810, line: 222, type: !162)
!10675 = !DILocalVariable(name: "pllvco", scope: !10672, file: !1810, line: 222, type: !162)
!10676 = !DILocalVariable(name: "pllp", scope: !10672, file: !1810, line: 222, type: !162)
!10677 = !DILocalVariable(name: "pllsource", scope: !10672, file: !1810, line: 222, type: !162)
!10678 = !DILocalVariable(name: "pllm", scope: !10672, file: !1810, line: 222, type: !162)
!10679 = !DILocation(line: 0, scope: !10672)
!10680 = !DILocation(line: 225, column: 14, scope: !10672)
!10681 = !DILocation(line: 225, column: 19, scope: !10672)
!10682 = !DILocation(line: 227, column: 3, scope: !10672)
!10683 = !DILocation(line: 234, column: 7, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10672, file: !1810, line: 228, column: 3)
!10685 = !DILocation(line: 240, column: 25, scope: !10684)
!10686 = !DILocation(line: 241, column: 19, scope: !10684)
!10687 = !DILocation(line: 241, column: 27, scope: !10684)
!10688 = !DILocation(line: 243, column: 21, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10684, file: !1810, line: 243, column: 11)
!10690 = !DILocation(line: 0, scope: !10689)
!10691 = !DILocation(line: 254, column: 22, scope: !10684)
!10692 = !DILocation(line: 254, column: 62, scope: !10684)
!10693 = !DILocation(line: 255, column: 31, scope: !10684)
!10694 = !DILocation(line: 256, column: 7, scope: !10684)
!10695 = !DILocation(line: 0, scope: !10684)
!10696 = !DILocation(line: 263, column: 30, scope: !10672)
!10697 = !DILocation(line: 263, column: 52, scope: !10672)
!10698 = !DILocation(line: 263, column: 9, scope: !10672)
!10699 = !DILocation(line: 265, column: 19, scope: !10672)
!10700 = !DILocation(line: 266, column: 1, scope: !10672)
!10701 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10702, file: !10702, line: 200, type: !10703, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !250)
!10702 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10703 = !DISubroutineType(types: !10704)
!10704 = !{!10705}
!10705 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2822, line: 44, baseType: !2821)
!10706 = !DILocation(line: 202, column: 3, scope: !10701)
!10707 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10702, file: !10702, line: 219, type: !10708, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !10732)
!10708 = !DISubroutineType(types: !10709)
!10709 = !{!10705, !10710}
!10710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10711, size: 32)
!10711 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10712, line: 70, baseType: !10713)
!10712 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10712, line: 49, size: 384, elements: !10714)
!10714 = !{!10715, !10716, !10717, !10718, !10719, !10720, !10721}
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10713, file: !10712, line: 51, baseType: !162, size: 32)
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10713, file: !10712, line: 54, baseType: !162, size: 32, offset: 32)
!10717 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10713, file: !10712, line: 57, baseType: !162, size: 32, offset: 64)
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10713, file: !10712, line: 60, baseType: !162, size: 32, offset: 96)
!10719 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10713, file: !10712, line: 63, baseType: !162, size: 32, offset: 128)
!10720 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10713, file: !10712, line: 66, baseType: !162, size: 32, offset: 160)
!10721 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10713, file: !10712, line: 69, baseType: !10722, size: 192, offset: 192)
!10722 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10723, line: 73, baseType: !10724)
!10723 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10723, line: 45, size: 192, elements: !10725)
!10725 = !{!10726, !10727, !10728, !10729, !10730, !10731}
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10724, file: !10723, line: 47, baseType: !162, size: 32)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10724, file: !10723, line: 50, baseType: !162, size: 32, offset: 32)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10724, file: !10723, line: 53, baseType: !162, size: 32, offset: 64)
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10724, file: !10723, line: 56, baseType: !162, size: 32, offset: 96)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10724, file: !10723, line: 60, baseType: !162, size: 32, offset: 128)
!10731 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10724, file: !10723, line: 63, baseType: !162, size: 32, offset: 160)
!10732 = !{!10733, !10734, !10735, !10736, !10740}
!10733 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10707, file: !10702, line: 219, type: !10710)
!10734 = !DILocalVariable(name: "tickstart", scope: !10707, file: !10702, line: 221, type: !162)
!10735 = !DILocalVariable(name: "pll_config", scope: !10707, file: !10702, line: 221, type: !162)
!10736 = !DILocalVariable(name: "pwrclkchanged", scope: !10737, file: !10702, line: 391, type: !10739)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !10702, line: 390, column: 3)
!10738 = distinct !DILexicalBlock(scope: !10707, file: !10702, line: 389, column: 6)
!10739 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !772, line: 188, baseType: !2828)
!10740 = !DILocalVariable(name: "tmpreg", scope: !10741, file: !10702, line: 400, type: !283)
!10741 = distinct !DILexicalBlock(scope: !10742, file: !10702, line: 400, column: 7)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !10702, line: 399, column: 5)
!10743 = distinct !DILexicalBlock(scope: !10737, file: !10702, line: 398, column: 8)
!10744 = !DILocation(line: 0, scope: !10707)
!10745 = !DILocation(line: 224, column: 24, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10707, file: !10702, line: 224, column: 6)
!10747 = !DILocation(line: 224, column: 6, scope: !10707)
!10748 = !DILocation(line: 232, column: 27, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10707, file: !10702, line: 232, column: 6)
!10750 = !DILocation(line: 232, column: 43, scope: !10749)
!10751 = !DILocation(line: 232, column: 69, scope: !10749)
!10752 = !DILocation(line: 232, column: 6, scope: !10707)
!10753 = !DILocation(line: 237, column: 9, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10755, file: !10702, line: 237, column: 8)
!10755 = distinct !DILexicalBlock(scope: !10749, file: !10702, line: 233, column: 3)
!10756 = !DILocation(line: 237, column: 39, scope: !10754)
!10757 = !DILocation(line: 237, column: 60, scope: !10754)
!10758 = !DILocation(line: 238, column: 9, scope: !10754)
!10759 = !DILocation(line: 238, column: 39, scope: !10754)
!10760 = !DILocation(line: 238, column: 60, scope: !10754)
!10761 = !DILocation(line: 238, column: 70, scope: !10754)
!10762 = !DILocation(line: 238, column: 78, scope: !10754)
!10763 = !DILocation(line: 238, column: 100, scope: !10754)
!10764 = !DILocation(line: 237, column: 8, scope: !10755)
!10765 = !DILocation(line: 240, column: 11, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !10702, line: 240, column: 10)
!10767 = distinct !DILexicalBlock(scope: !10754, file: !10702, line: 239, column: 5)
!10768 = !DILocation(line: 240, column: 57, scope: !10766)
!10769 = !DILocation(line: 240, column: 80, scope: !10766)
!10770 = !DILocation(line: 240, column: 89, scope: !10766)
!10771 = !DILocation(line: 240, column: 10, scope: !10767)
!10772 = !DILocation(line: 248, column: 7, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10774, file: !10702, line: 248, column: 7)
!10774 = distinct !DILexicalBlock(scope: !10775, file: !10702, line: 248, column: 7)
!10775 = distinct !DILexicalBlock(scope: !10754, file: !10702, line: 246, column: 5)
!10776 = !DILocation(line: 248, column: 7, scope: !10774)
!10777 = !DILocation(line: 248, column: 7, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10773, file: !10702, line: 248, column: 7)
!10779 = !DILocation(line: 248, column: 7, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !10702, line: 248, column: 7)
!10781 = distinct !DILexicalBlock(scope: !10773, file: !10702, line: 248, column: 7)
!10782 = !DILocation(line: 248, column: 7, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10781, file: !10702, line: 248, column: 7)
!10784 = !DILocation(line: 0, scope: !10773)
!10785 = !DILocation(line: 251, column: 30, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10775, file: !10702, line: 251, column: 10)
!10787 = !DILocation(line: 251, column: 40, scope: !10786)
!10788 = !DILocation(line: 0, scope: !10786)
!10789 = !DILocation(line: 251, column: 10, scope: !10775)
!10790 = !DILocation(line: 257, column: 15, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10786, file: !10702, line: 252, column: 7)
!10792 = !DILocation(line: 257, column: 51, scope: !10791)
!10793 = !DILocation(line: 257, column: 9, scope: !10791)
!10794 = !DILocation(line: 259, column: 15, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !10702, line: 259, column: 14)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !10702, line: 258, column: 9)
!10797 = !DILocation(line: 259, column: 29, scope: !10795)
!10798 = !DILocation(line: 259, column: 43, scope: !10795)
!10799 = !DILocation(line: 259, column: 14, scope: !10796)
!10800 = distinct !{!10800, !10793, !10801}
!10801 = !DILocation(line: 263, column: 9, scope: !10791)
!10802 = !DILocation(line: 271, column: 15, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10786, file: !10702, line: 266, column: 7)
!10804 = !DILocation(line: 271, column: 9, scope: !10803)
!10805 = !DILocation(line: 273, column: 15, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10807, file: !10702, line: 273, column: 14)
!10807 = distinct !DILexicalBlock(scope: !10803, file: !10702, line: 272, column: 9)
!10808 = !DILocation(line: 273, column: 29, scope: !10806)
!10809 = !DILocation(line: 273, column: 43, scope: !10806)
!10810 = !DILocation(line: 273, column: 14, scope: !10807)
!10811 = distinct !{!10811, !10804, !10812}
!10812 = !DILocation(line: 277, column: 9, scope: !10803)
!10813 = !DILocation(line: 282, column: 27, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10707, file: !10702, line: 282, column: 6)
!10815 = !DILocation(line: 282, column: 43, scope: !10814)
!10816 = !DILocation(line: 282, column: 69, scope: !10814)
!10817 = !DILocation(line: 282, column: 6, scope: !10707)
!10818 = !DILocation(line: 289, column: 9, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10820, file: !10702, line: 289, column: 8)
!10820 = distinct !DILexicalBlock(scope: !10814, file: !10702, line: 283, column: 3)
!10821 = !DILocation(line: 289, column: 39, scope: !10819)
!10822 = !DILocation(line: 289, column: 60, scope: !10819)
!10823 = !DILocation(line: 290, column: 9, scope: !10819)
!10824 = !DILocation(line: 290, column: 39, scope: !10819)
!10825 = !DILocation(line: 290, column: 60, scope: !10819)
!10826 = !DILocation(line: 290, column: 70, scope: !10819)
!10827 = !DILocation(line: 290, column: 78, scope: !10819)
!10828 = !DILocation(line: 290, column: 100, scope: !10819)
!10829 = !DILocation(line: 289, column: 8, scope: !10820)
!10830 = !DILocation(line: 293, column: 11, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !10702, line: 293, column: 10)
!10832 = distinct !DILexicalBlock(scope: !10819, file: !10702, line: 291, column: 5)
!10833 = !DILocation(line: 293, column: 57, scope: !10831)
!10834 = !DILocation(line: 293, column: 80, scope: !10831)
!10835 = !DILocation(line: 293, column: 89, scope: !10831)
!10836 = !DILocation(line: 293, column: 10, scope: !10832)
!10837 = !DILocation(line: 307, column: 30, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !10702, line: 307, column: 10)
!10839 = distinct !DILexicalBlock(scope: !10819, file: !10702, line: 305, column: 5)
!10840 = !DILocation(line: 307, column: 39, scope: !10838)
!10841 = !DILocation(line: 307, column: 10, scope: !10839)
!10842 = !DILocation(line: 310, column: 9, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10838, file: !10702, line: 308, column: 7)
!10844 = !DILocation(line: 313, column: 21, scope: !10843)
!10845 = !DILocation(line: 316, column: 9, scope: !10843)
!10846 = !DILocation(line: 316, column: 15, scope: !10843)
!10847 = !DILocation(line: 316, column: 51, scope: !10843)
!10848 = !DILocation(line: 318, column: 15, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !10702, line: 318, column: 14)
!10850 = distinct !DILexicalBlock(scope: !10843, file: !10702, line: 317, column: 9)
!10851 = !DILocation(line: 318, column: 29, scope: !10849)
!10852 = !DILocation(line: 318, column: 43, scope: !10849)
!10853 = !DILocation(line: 318, column: 14, scope: !10850)
!10854 = distinct !{!10854, !10845, !10855}
!10855 = !DILocation(line: 322, column: 9, scope: !10843)
!10856 = !DILocation(line: 330, column: 9, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10838, file: !10702, line: 328, column: 7)
!10858 = !DILocation(line: 333, column: 21, scope: !10857)
!10859 = !DILocation(line: 336, column: 9, scope: !10857)
!10860 = !DILocation(line: 336, column: 15, scope: !10857)
!10861 = !DILocation(line: 338, column: 15, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10863, file: !10702, line: 338, column: 14)
!10863 = distinct !DILexicalBlock(scope: !10857, file: !10702, line: 337, column: 9)
!10864 = !DILocation(line: 338, column: 29, scope: !10862)
!10865 = !DILocation(line: 338, column: 43, scope: !10862)
!10866 = !DILocation(line: 338, column: 14, scope: !10863)
!10867 = distinct !{!10867, !10859, !10868}
!10868 = !DILocation(line: 342, column: 9, scope: !10857)
!10869 = !DILocation(line: 0, scope: !10819)
!10870 = !DILocation(line: 347, column: 27, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10707, file: !10702, line: 347, column: 6)
!10872 = !DILocation(line: 347, column: 43, scope: !10871)
!10873 = !DILocation(line: 347, column: 69, scope: !10871)
!10874 = !DILocation(line: 347, column: 6, scope: !10707)
!10875 = !DILocation(line: 353, column: 28, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !10702, line: 353, column: 8)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !10702, line: 348, column: 3)
!10878 = !DILocation(line: 353, column: 37, scope: !10876)
!10879 = !DILocation(line: 353, column: 8, scope: !10877)
!10880 = !DILocation(line: 356, column: 7, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10876, file: !10702, line: 354, column: 5)
!10882 = !DILocation(line: 359, column: 19, scope: !10881)
!10883 = !DILocation(line: 362, column: 7, scope: !10881)
!10884 = !DILocation(line: 362, column: 13, scope: !10881)
!10885 = !DILocation(line: 362, column: 49, scope: !10881)
!10886 = !DILocation(line: 364, column: 13, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !10702, line: 364, column: 12)
!10888 = distinct !DILexicalBlock(scope: !10881, file: !10702, line: 363, column: 7)
!10889 = !DILocation(line: 364, column: 27, scope: !10887)
!10890 = !DILocation(line: 364, column: 41, scope: !10887)
!10891 = !DILocation(line: 364, column: 12, scope: !10888)
!10892 = distinct !{!10892, !10883, !10893}
!10893 = !DILocation(line: 368, column: 7, scope: !10881)
!10894 = !DILocation(line: 373, column: 7, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10876, file: !10702, line: 371, column: 5)
!10896 = !DILocation(line: 376, column: 19, scope: !10895)
!10897 = !DILocation(line: 379, column: 7, scope: !10895)
!10898 = !DILocation(line: 379, column: 13, scope: !10895)
!10899 = !DILocation(line: 381, column: 13, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !10702, line: 381, column: 12)
!10901 = distinct !DILexicalBlock(scope: !10895, file: !10702, line: 380, column: 7)
!10902 = !DILocation(line: 381, column: 27, scope: !10900)
!10903 = !DILocation(line: 381, column: 41, scope: !10900)
!10904 = !DILocation(line: 381, column: 12, scope: !10901)
!10905 = distinct !{!10905, !10897, !10906}
!10906 = !DILocation(line: 385, column: 7, scope: !10895)
!10907 = !DILocation(line: 389, column: 27, scope: !10738)
!10908 = !DILocation(line: 389, column: 43, scope: !10738)
!10909 = !DILocation(line: 389, column: 69, scope: !10738)
!10910 = !DILocation(line: 389, column: 6, scope: !10707)
!10911 = !DILocation(line: 0, scope: !10737)
!10912 = !DILocation(line: 398, column: 8, scope: !10743)
!10913 = !DILocation(line: 398, column: 8, scope: !10737)
!10914 = !DILocation(line: 400, column: 7, scope: !10741)
!10915 = !DILocation(line: 400, column: 7, scope: !10742)
!10916 = !DILocation(line: 402, column: 5, scope: !10742)
!10917 = !DILocation(line: 404, column: 8, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10737, file: !10702, line: 404, column: 8)
!10919 = !DILocation(line: 404, column: 8, scope: !10737)
!10920 = !DILocation(line: 407, column: 7, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10918, file: !10702, line: 405, column: 5)
!10922 = !DILocation(line: 410, column: 19, scope: !10921)
!10923 = !DILocation(line: 412, column: 7, scope: !10921)
!10924 = !DILocation(line: 412, column: 13, scope: !10921)
!10925 = !DILocation(line: 414, column: 13, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !10702, line: 414, column: 12)
!10927 = distinct !DILexicalBlock(scope: !10921, file: !10702, line: 413, column: 7)
!10928 = !DILocation(line: 414, column: 27, scope: !10926)
!10929 = !DILocation(line: 414, column: 40, scope: !10926)
!10930 = !DILocation(line: 414, column: 12, scope: !10927)
!10931 = distinct !{!10931, !10923, !10932}
!10932 = !DILocation(line: 418, column: 7, scope: !10921)
!10933 = !DILocation(line: 422, column: 5, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !10702, line: 422, column: 5)
!10935 = distinct !DILexicalBlock(scope: !10737, file: !10702, line: 422, column: 5)
!10936 = !DILocation(line: 422, column: 5, scope: !10935)
!10937 = !DILocation(line: 422, column: 5, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10934, file: !10702, line: 422, column: 5)
!10939 = !DILocation(line: 422, column: 5, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !10702, line: 422, column: 5)
!10941 = distinct !DILexicalBlock(scope: !10934, file: !10702, line: 422, column: 5)
!10942 = !DILocation(line: 422, column: 5, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10941, file: !10702, line: 422, column: 5)
!10944 = !DILocation(line: 0, scope: !10934)
!10945 = !DILocation(line: 424, column: 28, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10737, file: !10702, line: 424, column: 8)
!10947 = !DILocation(line: 424, column: 38, scope: !10946)
!10948 = !DILocation(line: 0, scope: !10946)
!10949 = !DILocation(line: 424, column: 8, scope: !10737)
!10950 = !DILocation(line: 430, column: 13, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10946, file: !10702, line: 425, column: 5)
!10952 = !DILocation(line: 430, column: 49, scope: !10951)
!10953 = !DILocation(line: 430, column: 7, scope: !10951)
!10954 = !DILocation(line: 432, column: 13, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10956, file: !10702, line: 432, column: 12)
!10956 = distinct !DILexicalBlock(scope: !10951, file: !10702, line: 431, column: 7)
!10957 = !DILocation(line: 432, column: 27, scope: !10955)
!10958 = !DILocation(line: 432, column: 41, scope: !10955)
!10959 = !DILocation(line: 432, column: 12, scope: !10956)
!10960 = distinct !{!10960, !10953, !10961}
!10961 = !DILocation(line: 436, column: 7, scope: !10951)
!10962 = !DILocation(line: 444, column: 13, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10946, file: !10702, line: 439, column: 5)
!10964 = !DILocation(line: 444, column: 7, scope: !10963)
!10965 = !DILocation(line: 446, column: 13, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !10702, line: 446, column: 12)
!10967 = distinct !DILexicalBlock(scope: !10963, file: !10702, line: 445, column: 7)
!10968 = !DILocation(line: 446, column: 27, scope: !10966)
!10969 = !DILocation(line: 446, column: 41, scope: !10966)
!10970 = !DILocation(line: 446, column: 12, scope: !10967)
!10971 = distinct !{!10971, !10964, !10972}
!10972 = !DILocation(line: 450, column: 7, scope: !10963)
!10973 = !DILocation(line: 454, column: 8, scope: !10737)
!10974 = !DILocation(line: 456, column: 7, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !10702, line: 455, column: 5)
!10976 = distinct !DILexicalBlock(scope: !10737, file: !10702, line: 454, column: 8)
!10977 = !DILocation(line: 457, column: 5, scope: !10975)
!10978 = !DILocation(line: 462, column: 31, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10707, file: !10702, line: 462, column: 7)
!10980 = !DILocation(line: 462, column: 41, scope: !10979)
!10981 = !DILocation(line: 462, column: 7, scope: !10707)
!10982 = !DILocation(line: 465, column: 8, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !10702, line: 465, column: 8)
!10984 = distinct !DILexicalBlock(scope: !10979, file: !10702, line: 463, column: 3)
!10985 = !DILocation(line: 465, column: 38, scope: !10983)
!10986 = !DILocation(line: 465, column: 8, scope: !10984)
!10987 = !DILocation(line: 467, column: 44, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !10702, line: 467, column: 10)
!10989 = distinct !DILexicalBlock(scope: !10983, file: !10702, line: 466, column: 5)
!10990 = !DILocation(line: 0, scope: !10988)
!10991 = !DILocation(line: 467, column: 10, scope: !10989)
!10992 = !DILocation(line: 483, column: 15, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10988, file: !10702, line: 468, column: 7)
!10994 = !DILocation(line: 483, column: 9, scope: !10993)
!10995 = !DILocation(line: 485, column: 15, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !10702, line: 485, column: 14)
!10997 = distinct !DILexicalBlock(scope: !10993, file: !10702, line: 484, column: 9)
!10998 = !DILocation(line: 485, column: 29, scope: !10996)
!10999 = !DILocation(line: 485, column: 43, scope: !10996)
!11000 = !DILocation(line: 485, column: 14, scope: !10997)
!11001 = distinct !{!11001, !10994, !11002}
!11002 = !DILocation(line: 489, column: 9, scope: !10993)
!11003 = !DILocation(line: 492, column: 9, scope: !10993)
!11004 = !DILocation(line: 498, column: 9, scope: !10993)
!11005 = !DILocation(line: 501, column: 21, scope: !10993)
!11006 = !DILocation(line: 504, column: 9, scope: !10993)
!11007 = !DILocation(line: 504, column: 15, scope: !10993)
!11008 = !DILocation(line: 504, column: 51, scope: !10993)
!11009 = !DILocation(line: 506, column: 15, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !10702, line: 506, column: 14)
!11011 = distinct !DILexicalBlock(scope: !10993, file: !10702, line: 505, column: 9)
!11012 = !DILocation(line: 506, column: 29, scope: !11010)
!11013 = !DILocation(line: 506, column: 43, scope: !11010)
!11014 = !DILocation(line: 506, column: 14, scope: !11011)
!11015 = distinct !{!11015, !11006, !11016}
!11016 = !DILocation(line: 510, column: 9, scope: !10993)
!11017 = !DILocation(line: 521, column: 15, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !10988, file: !10702, line: 513, column: 7)
!11019 = !DILocation(line: 521, column: 9, scope: !11018)
!11020 = !DILocation(line: 523, column: 15, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11022, file: !10702, line: 523, column: 14)
!11022 = distinct !DILexicalBlock(scope: !11018, file: !10702, line: 522, column: 9)
!11023 = !DILocation(line: 523, column: 29, scope: !11021)
!11024 = !DILocation(line: 523, column: 43, scope: !11021)
!11025 = !DILocation(line: 523, column: 14, scope: !11022)
!11026 = distinct !{!11026, !11019, !11027}
!11027 = !DILocation(line: 527, column: 9, scope: !11018)
!11028 = !DILocation(line: 533, column: 44, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11030, file: !10702, line: 533, column: 10)
!11030 = distinct !DILexicalBlock(scope: !10983, file: !10702, line: 531, column: 5)
!11031 = !DILocation(line: 533, column: 10, scope: !11030)
!11032 = !DILocation(line: 540, column: 27, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11029, file: !10702, line: 538, column: 7)
!11034 = !DILocation(line: 551, column: 14, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11033, file: !10702, line: 550, column: 13)
!11036 = !DILocation(line: 551, column: 81, scope: !11035)
!11037 = !DILocation(line: 551, column: 55, scope: !11035)
!11038 = !DILocation(line: 551, column: 92, scope: !11035)
!11039 = !DILocation(line: 552, column: 14, scope: !11035)
!11040 = !DILocation(line: 552, column: 80, scope: !11035)
!11041 = !DILocation(line: 552, column: 53, scope: !11035)
!11042 = !DILocation(line: 552, column: 111, scope: !11035)
!11043 = !DILocation(line: 553, column: 14, scope: !11035)
!11044 = !DILocation(line: 553, column: 80, scope: !11035)
!11045 = !DILocation(line: 553, column: 86, scope: !11035)
!11046 = !DILocation(line: 553, column: 53, scope: !11035)
!11047 = !DILocation(line: 553, column: 111, scope: !11035)
!11048 = !DILocation(line: 554, column: 14, scope: !11035)
!11049 = !DILocation(line: 554, column: 82, scope: !11035)
!11050 = !DILocation(line: 554, column: 101, scope: !11035)
!11051 = !DILocation(line: 554, column: 53, scope: !11035)
!11052 = !DILocation(line: 554, column: 126, scope: !11035)
!11053 = !DILocation(line: 555, column: 14, scope: !11035)
!11054 = !DILocation(line: 555, column: 80, scope: !11035)
!11055 = !DILocation(line: 555, column: 85, scope: !11035)
!11056 = !DILocation(line: 555, column: 53, scope: !11035)
!11057 = !DILocation(line: 550, column: 13, scope: !11033)
!11058 = !DILocation(line: 563, column: 3, scope: !10707)
!11059 = !DILocation(line: 564, column: 1, scope: !10707)
!11060 = !DISubprogram(name: "HAL_GetTick", scope: !11061, file: !11061, line: 234, type: !6134, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11061 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11062 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10702, file: !10702, line: 591, type: !11063, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !11074)
!11063 = !DISubroutineType(types: !11064)
!11064 = !{!10705, !11065, !162}
!11065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11066, size: 32)
!11066 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10712, line: 92, baseType: !11067)
!11067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10712, line: 75, size: 160, elements: !11068)
!11068 = !{!11069, !11070, !11071, !11072, !11073}
!11069 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11067, file: !10712, line: 77, baseType: !162, size: 32)
!11070 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11067, file: !10712, line: 80, baseType: !162, size: 32, offset: 32)
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11067, file: !10712, line: 83, baseType: !162, size: 32, offset: 64)
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11067, file: !10712, line: 86, baseType: !162, size: 32, offset: 96)
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11067, file: !10712, line: 89, baseType: !162, size: 32, offset: 128)
!11074 = !{!11075, !11076, !11077}
!11075 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11062, file: !10702, line: 591, type: !11065)
!11076 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11062, file: !10702, line: 591, type: !162)
!11077 = !DILocalVariable(name: "tickstart", scope: !11062, file: !10702, line: 593, type: !162)
!11078 = !DILocation(line: 0, scope: !11062)
!11079 = !DILocation(line: 596, column: 24, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11062, file: !10702, line: 596, column: 6)
!11081 = !DILocation(line: 596, column: 6, scope: !11062)
!11082 = !DILocation(line: 610, column: 17, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11062, file: !10702, line: 610, column: 6)
!11084 = !DILocation(line: 610, column: 15, scope: !11083)
!11085 = !DILocation(line: 610, column: 6, scope: !11062)
!11086 = !DILocation(line: 613, column: 5, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11083, file: !10702, line: 611, column: 3)
!11088 = !DILocation(line: 617, column: 8, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11087, file: !10702, line: 617, column: 8)
!11090 = !DILocation(line: 617, column: 34, scope: !11089)
!11091 = !DILocation(line: 617, column: 8, scope: !11087)
!11092 = !DILocation(line: 624, column: 27, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11062, file: !10702, line: 624, column: 6)
!11094 = !DILocation(line: 624, column: 38, scope: !11093)
!11095 = !DILocation(line: 624, column: 60, scope: !11093)
!11096 = !DILocation(line: 624, column: 6, scope: !11062)
!11097 = !DILocation(line: 628, column: 40, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11099, file: !10702, line: 628, column: 8)
!11099 = distinct !DILexicalBlock(scope: !11093, file: !10702, line: 625, column: 3)
!11100 = !DILocation(line: 628, column: 63, scope: !11098)
!11101 = !DILocation(line: 628, column: 8, scope: !11099)
!11102 = !DILocation(line: 630, column: 7, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11098, file: !10702, line: 629, column: 5)
!11104 = !DILocation(line: 633, column: 29, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11099, file: !10702, line: 633, column: 8)
!11106 = !DILocation(line: 631, column: 5, scope: !11103)
!11107 = !DILocation(line: 633, column: 40, scope: !11105)
!11108 = !DILocation(line: 633, column: 63, scope: !11105)
!11109 = !DILocation(line: 633, column: 8, scope: !11099)
!11110 = !DILocation(line: 635, column: 7, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11105, file: !10702, line: 634, column: 5)
!11112 = !DILocation(line: 636, column: 5, scope: !11111)
!11113 = !DILocation(line: 639, column: 5, scope: !11099)
!11114 = !DILocation(line: 643, column: 27, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11062, file: !10702, line: 643, column: 6)
!11116 = !DILocation(line: 640, column: 3, scope: !11099)
!11117 = !DILocation(line: 643, column: 38, scope: !11115)
!11118 = !DILocation(line: 643, column: 62, scope: !11115)
!11119 = !DILocation(line: 643, column: 6, scope: !11062)
!11120 = !DILocation(line: 648, column: 27, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !10702, line: 648, column: 8)
!11122 = distinct !DILexicalBlock(scope: !11115, file: !10702, line: 644, column: 3)
!11123 = !DILocation(line: 648, column: 8, scope: !11122)
!11124 = !DILocation(line: 651, column: 10, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11126, file: !10702, line: 651, column: 10)
!11126 = distinct !DILexicalBlock(scope: !11121, file: !10702, line: 649, column: 5)
!11127 = !DILocation(line: 651, column: 46, scope: !11125)
!11128 = !DILocation(line: 651, column: 10, scope: !11126)
!11129 = !DILocation(line: 661, column: 10, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !10702, line: 661, column: 10)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !10702, line: 659, column: 5)
!11132 = distinct !DILexicalBlock(scope: !11121, file: !10702, line: 657, column: 13)
!11133 = !DILocation(line: 661, column: 46, scope: !11130)
!11134 = !DILocation(line: 661, column: 10, scope: !11131)
!11135 = !DILocation(line: 670, column: 10, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11137, file: !10702, line: 670, column: 10)
!11137 = distinct !DILexicalBlock(scope: !11132, file: !10702, line: 668, column: 5)
!11138 = !DILocation(line: 670, column: 46, scope: !11136)
!11139 = !DILocation(line: 670, column: 10, scope: !11137)
!11140 = !DILocation(line: 676, column: 5, scope: !11122)
!11141 = !DILocation(line: 679, column: 17, scope: !11122)
!11142 = !DILocation(line: 681, column: 5, scope: !11122)
!11143 = !DILocation(line: 681, column: 12, scope: !11122)
!11144 = !DILocation(line: 681, column: 65, scope: !11122)
!11145 = !DILocation(line: 681, column: 78, scope: !11122)
!11146 = !DILocation(line: 681, column: 42, scope: !11122)
!11147 = !DILocation(line: 683, column: 12, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !10702, line: 683, column: 11)
!11149 = distinct !DILexicalBlock(scope: !11122, file: !10702, line: 682, column: 5)
!11150 = !DILocation(line: 683, column: 26, scope: !11148)
!11151 = !DILocation(line: 683, column: 39, scope: !11148)
!11152 = !DILocation(line: 683, column: 11, scope: !11149)
!11153 = distinct !{!11153, !11142, !11154}
!11154 = !DILocation(line: 687, column: 5, scope: !11122)
!11155 = !DILocation(line: 691, column: 17, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11062, file: !10702, line: 691, column: 6)
!11157 = !DILocation(line: 691, column: 15, scope: !11156)
!11158 = !DILocation(line: 691, column: 6, scope: !11062)
!11159 = !DILocation(line: 694, column: 5, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11156, file: !10702, line: 692, column: 3)
!11161 = !DILocation(line: 698, column: 8, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11160, file: !10702, line: 698, column: 8)
!11163 = !DILocation(line: 698, column: 34, scope: !11162)
!11164 = !DILocation(line: 698, column: 8, scope: !11160)
!11165 = !DILocation(line: 705, column: 27, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11062, file: !10702, line: 705, column: 6)
!11167 = !DILocation(line: 705, column: 38, scope: !11166)
!11168 = !DILocation(line: 705, column: 61, scope: !11166)
!11169 = !DILocation(line: 705, column: 6, scope: !11062)
!11170 = !DILocation(line: 708, column: 5, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11166, file: !10702, line: 706, column: 3)
!11172 = !DILocation(line: 712, column: 27, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11062, file: !10702, line: 712, column: 6)
!11174 = !DILocation(line: 709, column: 3, scope: !11171)
!11175 = !DILocation(line: 712, column: 38, scope: !11173)
!11176 = !DILocation(line: 712, column: 61, scope: !11173)
!11177 = !DILocation(line: 712, column: 6, scope: !11062)
!11178 = !DILocation(line: 715, column: 5, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11173, file: !10702, line: 713, column: 3)
!11180 = !DILocation(line: 716, column: 3, scope: !11179)
!11181 = !DILocation(line: 719, column: 21, scope: !11062)
!11182 = !DILocation(line: 719, column: 70, scope: !11062)
!11183 = !DILocation(line: 719, column: 91, scope: !11062)
!11184 = !DILocation(line: 719, column: 50, scope: !11062)
!11185 = !DILocation(line: 719, column: 47, scope: !11062)
!11186 = !DILocation(line: 719, column: 19, scope: !11062)
!11187 = !DILocation(line: 722, column: 17, scope: !11062)
!11188 = !DILocation(line: 722, column: 3, scope: !11062)
!11189 = !DILocation(line: 724, column: 3, scope: !11062)
!11190 = !DILocation(line: 725, column: 1, scope: !11062)
!11191 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10702, file: !10702, line: 885, type: !6134, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !11192)
!11192 = !{!11193, !11194, !11195, !11196}
!11193 = !DILocalVariable(name: "pllm", scope: !11191, file: !10702, line: 887, type: !162)
!11194 = !DILocalVariable(name: "pllvco", scope: !11191, file: !10702, line: 887, type: !162)
!11195 = !DILocalVariable(name: "pllp", scope: !11191, file: !10702, line: 887, type: !162)
!11196 = !DILocalVariable(name: "sysclockfreq", scope: !11191, file: !10702, line: 888, type: !162)
!11197 = !DILocation(line: 0, scope: !11191)
!11198 = !DILocation(line: 891, column: 16, scope: !11191)
!11199 = !DILocation(line: 891, column: 21, scope: !11191)
!11200 = !DILocation(line: 891, column: 3, scope: !11191)
!11201 = !DILocation(line: 901, column: 7, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !10702, line: 899, column: 5)
!11203 = distinct !DILexicalBlock(scope: !11191, file: !10702, line: 892, column: 3)
!11204 = !DILocation(line: 907, column: 19, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11203, file: !10702, line: 904, column: 5)
!11206 = !DILocation(line: 907, column: 27, scope: !11205)
!11207 = !DILocation(line: 908, column: 10, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11205, file: !10702, line: 908, column: 10)
!11209 = !DILocation(line: 908, column: 40, scope: !11208)
!11210 = !DILocation(line: 0, scope: !11208)
!11211 = !DILocation(line: 908, column: 10, scope: !11205)
!11212 = !DILocation(line: 911, column: 53, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11208, file: !10702, line: 909, column: 7)
!11214 = !DILocation(line: 911, column: 130, scope: !11213)
!11215 = !DILocation(line: 912, column: 7, scope: !11213)
!11216 = !DILocation(line: 916, column: 56, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11208, file: !10702, line: 914, column: 7)
!11218 = !DILocation(line: 916, column: 53, scope: !11217)
!11219 = !DILocation(line: 916, column: 132, scope: !11217)
!11220 = !DILocation(line: 916, column: 130, scope: !11217)
!11221 = !DILocation(line: 916, column: 18, scope: !11217)
!11222 = !DILocation(line: 918, column: 23, scope: !11205)
!11223 = !DILocation(line: 918, column: 82, scope: !11205)
!11224 = !DILocation(line: 920, column: 28, scope: !11205)
!11225 = !DILocation(line: 921, column: 7, scope: !11205)
!11226 = !DILocation(line: 0, scope: !11203)
!11227 = !DILocation(line: 929, column: 3, scope: !11191)
!11228 = !DISubprogram(name: "HAL_InitTick", scope: !11061, file: !11061, line: 223, type: !11229, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11229 = !DISubroutineType(types: !11230)
!11230 = !{!10705, !162}
!11231 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10702, file: !10702, line: 775, type: !11232, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !11234)
!11232 = !DISubroutineType(types: !11233)
!11233 = !{null, !162, !162, !162}
!11234 = !{!11235, !11236, !11237, !11238, !11248, !11252}
!11235 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11231, file: !10702, line: 775, type: !162)
!11236 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11231, file: !10702, line: 775, type: !162)
!11237 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11231, file: !10702, line: 775, type: !162)
!11238 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11231, file: !10702, line: 777, type: !11239)
!11239 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11240, line: 62, baseType: !11241)
!11240 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11240, line: 46, size: 160, elements: !11242)
!11242 = !{!11243, !11244, !11245, !11246, !11247}
!11243 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11241, file: !11240, line: 48, baseType: !162, size: 32)
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11241, file: !11240, line: 51, baseType: !162, size: 32, offset: 32)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11241, file: !11240, line: 54, baseType: !162, size: 32, offset: 64)
!11246 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11241, file: !11240, line: 57, baseType: !162, size: 32, offset: 96)
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11241, file: !11240, line: 60, baseType: !162, size: 32, offset: 128)
!11248 = !DILocalVariable(name: "tmpreg", scope: !11249, file: !10702, line: 787, type: !283)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !10702, line: 787, column: 5)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !10702, line: 783, column: 3)
!11251 = distinct !DILexicalBlock(scope: !11231, file: !10702, line: 782, column: 6)
!11252 = !DILocalVariable(name: "tmpreg", scope: !11253, file: !10702, line: 811, type: !283)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !10702, line: 811, column: 5)
!11254 = distinct !DILexicalBlock(scope: !11251, file: !10702, line: 807, column: 3)
!11255 = !DILocation(line: 0, scope: !11231)
!11256 = !DILocation(line: 777, column: 3, scope: !11231)
!11257 = !DILocation(line: 777, column: 20, scope: !11231)
!11258 = !DILocation(line: 782, column: 15, scope: !11251)
!11259 = !DILocation(line: 782, column: 6, scope: !11231)
!11260 = !DILocation(line: 787, column: 5, scope: !11249)
!11261 = !DILocation(line: 787, column: 5, scope: !11250)
!11262 = !DILocation(line: 790, column: 21, scope: !11250)
!11263 = !DILocation(line: 790, column: 25, scope: !11250)
!11264 = !DILocation(line: 791, column: 21, scope: !11250)
!11265 = !DILocation(line: 791, column: 26, scope: !11250)
!11266 = !DILocation(line: 792, column: 21, scope: !11250)
!11267 = !DILocation(line: 792, column: 27, scope: !11250)
!11268 = !DILocation(line: 793, column: 21, scope: !11250)
!11269 = !DILocation(line: 793, column: 26, scope: !11250)
!11270 = !DILocation(line: 794, column: 21, scope: !11250)
!11271 = !DILocation(line: 794, column: 31, scope: !11250)
!11272 = !DILocation(line: 795, column: 5, scope: !11250)
!11273 = !DILocation(line: 798, column: 5, scope: !11250)
!11274 = !DILocation(line: 804, column: 3, scope: !11250)
!11275 = !DILocation(line: 811, column: 5, scope: !11253)
!11276 = !DILocation(line: 811, column: 5, scope: !11254)
!11277 = !DILocation(line: 814, column: 21, scope: !11254)
!11278 = !DILocation(line: 814, column: 25, scope: !11254)
!11279 = !DILocation(line: 815, column: 21, scope: !11254)
!11280 = !DILocation(line: 815, column: 26, scope: !11254)
!11281 = !DILocation(line: 816, column: 21, scope: !11254)
!11282 = !DILocation(line: 816, column: 27, scope: !11254)
!11283 = !DILocation(line: 817, column: 21, scope: !11254)
!11284 = !DILocation(line: 817, column: 26, scope: !11254)
!11285 = !DILocation(line: 818, column: 21, scope: !11254)
!11286 = !DILocation(line: 818, column: 31, scope: !11254)
!11287 = !DILocation(line: 819, column: 5, scope: !11254)
!11288 = !DILocation(line: 822, column: 5, scope: !11254)
!11289 = !DILocation(line: 0, scope: !11251)
!11290 = !DILocation(line: 830, column: 1, scope: !11231)
!11291 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11240, file: !11240, line: 224, type: !11292, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11292 = !DISubroutineType(types: !11293)
!11293 = !{null, !2891, !11294}
!11294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11239, size: 32)
!11295 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10702, file: !10702, line: 841, type: !3113, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !250)
!11296 = !DILocation(line: 843, column: 38, scope: !11295)
!11297 = !DILocation(line: 844, column: 1, scope: !11295)
!11298 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10702, file: !10702, line: 850, type: !3113, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !250)
!11299 = !DILocation(line: 852, column: 38, scope: !11298)
!11300 = !DILocation(line: 853, column: 1, scope: !11298)
!11301 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10702, file: !10702, line: 941, type: !6134, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !250)
!11302 = !DILocation(line: 943, column: 10, scope: !11301)
!11303 = !DILocation(line: 943, column: 3, scope: !11301)
!11304 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10702, file: !10702, line: 952, type: !6134, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !250)
!11305 = !DILocation(line: 955, column: 11, scope: !11304)
!11306 = !DILocation(line: 955, column: 56, scope: !11304)
!11307 = !DILocation(line: 955, column: 78, scope: !11304)
!11308 = !DILocation(line: 955, column: 36, scope: !11304)
!11309 = !DILocation(line: 955, column: 33, scope: !11304)
!11310 = !DILocation(line: 955, column: 3, scope: !11304)
!11311 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10702, file: !10702, line: 964, type: !6134, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !250)
!11312 = !DILocation(line: 967, column: 11, scope: !11311)
!11313 = !DILocation(line: 967, column: 55, scope: !11311)
!11314 = !DILocation(line: 967, column: 77, scope: !11311)
!11315 = !DILocation(line: 967, column: 35, scope: !11311)
!11316 = !DILocation(line: 967, column: 32, scope: !11311)
!11317 = !DILocation(line: 967, column: 3, scope: !11311)
!11318 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10702, file: !10702, line: 977, type: !11319, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !11321)
!11319 = !DISubroutineType(types: !11320)
!11320 = !{null, !10710}
!11321 = !{!11322}
!11322 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11318, file: !10702, line: 977, type: !10710)
!11323 = !DILocation(line: 0, scope: !11318)
!11324 = !DILocation(line: 980, column: 22, scope: !11318)
!11325 = !DILocation(line: 980, column: 37, scope: !11318)
!11326 = !DILocation(line: 983, column: 12, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11318, file: !10702, line: 983, column: 6)
!11328 = !DILocation(line: 983, column: 15, scope: !11327)
!11329 = !DILocation(line: 983, column: 31, scope: !11327)
!11330 = !DILocation(line: 983, column: 6, scope: !11318)
!11331 = !DILocation(line: 985, column: 24, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11327, file: !10702, line: 984, column: 3)
!11333 = !DILocation(line: 985, column: 33, scope: !11332)
!11334 = !DILocation(line: 986, column: 3, scope: !11332)
!11335 = !DILocation(line: 987, column: 17, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11327, file: !10702, line: 987, column: 11)
!11337 = !DILocation(line: 987, column: 20, scope: !11336)
!11338 = !DILocation(line: 987, column: 35, scope: !11336)
!11339 = !DILocation(line: 0, scope: !11336)
!11340 = !DILocation(line: 987, column: 11, scope: !11327)
!11341 = !DILocation(line: 989, column: 33, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11336, file: !10702, line: 988, column: 3)
!11343 = !DILocation(line: 990, column: 3, scope: !11342)
!11344 = !DILocation(line: 993, column: 33, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11336, file: !10702, line: 992, column: 3)
!11346 = !DILocation(line: 997, column: 12, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11318, file: !10702, line: 997, column: 6)
!11348 = !DILocation(line: 997, column: 15, scope: !11347)
!11349 = !DILocation(line: 1003, column: 24, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11347, file: !10702, line: 1002, column: 3)
!11351 = !DILocation(line: 1003, column: 33, scope: !11350)
!11352 = !DILocation(line: 1006, column: 61, scope: !11318)
!11353 = !DILocation(line: 1006, column: 81, scope: !11318)
!11354 = !DILocation(line: 1006, column: 22, scope: !11318)
!11355 = !DILocation(line: 1006, column: 42, scope: !11318)
!11356 = !DILocation(line: 1009, column: 12, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11318, file: !10702, line: 1009, column: 6)
!11358 = !DILocation(line: 1009, column: 17, scope: !11357)
!11359 = !DILocation(line: 1009, column: 35, scope: !11357)
!11360 = !DILocation(line: 1009, column: 6, scope: !11318)
!11361 = !DILocation(line: 1011, column: 24, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11357, file: !10702, line: 1010, column: 3)
!11363 = !DILocation(line: 1011, column: 33, scope: !11362)
!11364 = !DILocation(line: 1012, column: 3, scope: !11362)
!11365 = !DILocation(line: 1013, column: 17, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11357, file: !10702, line: 1013, column: 11)
!11367 = !DILocation(line: 1013, column: 22, scope: !11366)
!11368 = !DILocation(line: 1013, column: 39, scope: !11366)
!11369 = !DILocation(line: 0, scope: !11366)
!11370 = !DILocation(line: 1013, column: 11, scope: !11357)
!11371 = !DILocation(line: 1015, column: 33, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11366, file: !10702, line: 1014, column: 3)
!11373 = !DILocation(line: 1016, column: 3, scope: !11372)
!11374 = !DILocation(line: 1019, column: 33, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11366, file: !10702, line: 1018, column: 3)
!11376 = !DILocation(line: 1023, column: 12, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11318, file: !10702, line: 1023, column: 6)
!11378 = !DILocation(line: 1023, column: 16, scope: !11377)
!11379 = !DILocation(line: 1029, column: 24, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11377, file: !10702, line: 1028, column: 3)
!11381 = !DILocation(line: 1029, column: 33, scope: !11380)
!11382 = !DILocation(line: 1033, column: 12, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11318, file: !10702, line: 1033, column: 6)
!11384 = !DILocation(line: 1033, column: 15, scope: !11383)
!11385 = !DILocation(line: 1033, column: 30, scope: !11383)
!11386 = !DILocation(line: 1033, column: 6, scope: !11318)
!11387 = !DILocation(line: 1039, column: 28, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11383, file: !10702, line: 1038, column: 3)
!11389 = !DILocation(line: 1039, column: 37, scope: !11388)
!11390 = !DILocation(line: 1041, column: 54, scope: !11318)
!11391 = !DILocation(line: 1041, column: 62, scope: !11318)
!11392 = !DILocation(line: 1041, column: 26, scope: !11318)
!11393 = !DILocation(line: 1041, column: 36, scope: !11318)
!11394 = !DILocation(line: 1042, column: 49, scope: !11318)
!11395 = !DILocation(line: 1042, column: 57, scope: !11318)
!11396 = !DILocation(line: 1042, column: 26, scope: !11318)
!11397 = !DILocation(line: 1042, column: 31, scope: !11318)
!11398 = !DILocation(line: 1043, column: 50, scope: !11318)
!11399 = !DILocation(line: 1043, column: 78, scope: !11318)
!11400 = !DILocation(line: 1043, column: 26, scope: !11318)
!11401 = !DILocation(line: 1043, column: 31, scope: !11318)
!11402 = !DILocation(line: 1044, column: 52, scope: !11318)
!11403 = !DILocation(line: 1044, column: 102, scope: !11318)
!11404 = !DILocation(line: 1044, column: 109, scope: !11318)
!11405 = !DILocation(line: 1044, column: 26, scope: !11318)
!11406 = !DILocation(line: 1044, column: 31, scope: !11318)
!11407 = !DILocation(line: 1045, column: 50, scope: !11318)
!11408 = !DILocation(line: 1045, column: 78, scope: !11318)
!11409 = !DILocation(line: 1045, column: 26, scope: !11318)
!11410 = !DILocation(line: 1045, column: 31, scope: !11318)
!11411 = !DILocation(line: 1046, column: 1, scope: !11318)
!11412 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10702, file: !10702, line: 1056, type: !11413, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !11415)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{null, !11065, !828}
!11415 = !{!11416, !11417}
!11416 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11412, file: !10702, line: 1056, type: !11065)
!11417 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11412, file: !10702, line: 1056, type: !828)
!11418 = !DILocation(line: 0, scope: !11412)
!11419 = !DILocation(line: 1059, column: 22, scope: !11412)
!11420 = !DILocation(line: 1059, column: 32, scope: !11412)
!11421 = !DILocation(line: 1062, column: 53, scope: !11412)
!11422 = !DILocation(line: 1062, column: 58, scope: !11412)
!11423 = !DILocation(line: 1062, column: 22, scope: !11412)
!11424 = !DILocation(line: 1062, column: 35, scope: !11412)
!11425 = !DILocation(line: 1065, column: 54, scope: !11412)
!11426 = !DILocation(line: 1065, column: 59, scope: !11412)
!11427 = !DILocation(line: 1065, column: 22, scope: !11412)
!11428 = !DILocation(line: 1065, column: 36, scope: !11412)
!11429 = !DILocation(line: 1068, column: 55, scope: !11412)
!11430 = !DILocation(line: 1068, column: 60, scope: !11412)
!11431 = !DILocation(line: 1068, column: 22, scope: !11412)
!11432 = !DILocation(line: 1068, column: 37, scope: !11412)
!11433 = !DILocation(line: 1071, column: 56, scope: !11412)
!11434 = !DILocation(line: 1071, column: 79, scope: !11412)
!11435 = !DILocation(line: 1071, column: 22, scope: !11412)
!11436 = !DILocation(line: 1071, column: 37, scope: !11412)
!11437 = !DILocation(line: 1074, column: 34, scope: !11412)
!11438 = !DILocation(line: 1074, column: 38, scope: !11412)
!11439 = !DILocation(line: 1074, column: 14, scope: !11412)
!11440 = !DILocation(line: 1075, column: 1, scope: !11412)
!11441 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10702, file: !10702, line: 1082, type: !3113, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !250)
!11442 = !DILocation(line: 1085, column: 6, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11441, file: !10702, line: 1085, column: 6)
!11444 = !DILocation(line: 1085, column: 6, scope: !11441)
!11445 = !DILocation(line: 1088, column: 5, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11443, file: !10702, line: 1086, column: 3)
!11447 = !DILocation(line: 1091, column: 5, scope: !11446)
!11448 = !DILocation(line: 1092, column: 3, scope: !11446)
!11449 = !DILocation(line: 1093, column: 1, scope: !11441)
!11450 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10702, file: !10702, line: 1099, type: !3113, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !250)
!11451 = !DILocation(line: 1104, column: 1, scope: !11450)
!11452 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11453, file: !11453, line: 257, type: !6144, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11454)
!11453 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11454 = !{!11455}
!11455 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11452, file: !11453, line: 257, type: !162)
!11456 = !DILocation(line: 0, scope: !11452)
!11457 = !DILocation(line: 260, column: 3, scope: !11452)
!11458 = !DILocation(line: 261, column: 1, scope: !11452)
!11459 = distinct !DISubprogram(name: "LL_InitTick", scope: !11460, file: !11460, line: 260, type: !8733, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11461)
!11460 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11461 = !{!11462, !11463}
!11462 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11459, file: !11460, line: 260, type: !162)
!11463 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11459, file: !11460, line: 260, type: !162)
!11464 = !DILocation(line: 0, scope: !11459)
!11465 = !DILocation(line: 263, column: 46, scope: !11459)
!11466 = !DILocation(line: 263, column: 55, scope: !11459)
!11467 = !DILocation(line: 263, column: 18, scope: !11459)
!11468 = !DILocation(line: 264, column: 18, scope: !11459)
!11469 = !DILocation(line: 265, column: 18, scope: !11459)
!11470 = !DILocation(line: 267, column: 1, scope: !11459)
!11471 = distinct !DISubprogram(name: "LL_mDelay", scope: !11453, file: !11453, line: 273, type: !6144, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11472)
!11472 = !{!11473, !11474}
!11473 = !DILocalVariable(name: "Delay", arg: 1, scope: !11471, file: !11453, line: 273, type: !162)
!11474 = !DILocalVariable(name: "tmp", scope: !11471, file: !11453, line: 275, type: !283)
!11475 = !DILocation(line: 0, scope: !11471)
!11476 = !DILocation(line: 275, column: 3, scope: !11471)
!11477 = !DILocation(line: 275, column: 18, scope: !11471)
!11478 = !DILocation(line: 275, column: 33, scope: !11471)
!11479 = !DILocation(line: 277, column: 10, scope: !11471)
!11480 = !DILocation(line: 280, column: 12, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11471, file: !11453, line: 280, column: 6)
!11482 = !DILocation(line: 285, column: 3, scope: !11471)
!11483 = !DILocation(line: 287, column: 18, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !11453, line: 287, column: 8)
!11485 = distinct !DILexicalBlock(scope: !11471, file: !11453, line: 286, column: 3)
!11486 = !DILocation(line: 292, column: 1, scope: !11471)
!11487 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11453, file: !11453, line: 323, type: !6144, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11488)
!11488 = !{!11489}
!11489 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11487, file: !11453, line: 323, type: !162)
!11490 = !DILocation(line: 0, scope: !11487)
!11491 = !DILocation(line: 326, column: 19, scope: !11487)
!11492 = !DILocation(line: 327, column: 1, scope: !11487)
!11493 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11453, file: !11453, line: 338, type: !11494, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11497)
!11494 = !DISubroutineType(types: !11495)
!11495 = !{!11496, !162}
!11496 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !772, line: 201, baseType: !771)
!11497 = !{!11498, !11499, !11500, !11501, !11502}
!11498 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11493, file: !11453, line: 338, type: !162)
!11499 = !DILocalVariable(name: "timeout", scope: !11493, file: !11453, line: 340, type: !162)
!11500 = !DILocalVariable(name: "getlatency", scope: !11493, file: !11453, line: 341, type: !162)
!11501 = !DILocalVariable(name: "latency", scope: !11493, file: !11453, line: 342, type: !162)
!11502 = !DILocalVariable(name: "status", scope: !11493, file: !11453, line: 343, type: !11496)
!11503 = !DILocation(line: 0, scope: !11493)
!11504 = !DILocation(line: 347, column: 21, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11493, file: !11453, line: 347, column: 6)
!11506 = !DILocation(line: 347, column: 6, scope: !11493)
!11507 = !DILocation(line: 353, column: 8, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !11453, line: 353, column: 8)
!11509 = distinct !DILexicalBlock(scope: !11505, file: !11453, line: 352, column: 3)
!11510 = !DILocation(line: 353, column: 40, scope: !11508)
!11511 = !DILocation(line: 353, column: 8, scope: !11509)
!11512 = !DILocation(line: 374, column: 55, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !11453, line: 374, column: 10)
!11514 = distinct !DILexicalBlock(scope: !11508, file: !11453, line: 354, column: 5)
!11515 = !DILocation(line: 368, column: 26, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11514, file: !11453, line: 368, column: 10)
!11517 = !DILocation(line: 368, column: 55, scope: !11516)
!11518 = !DILocation(line: 380, column: 57, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11520, file: !11453, line: 380, column: 12)
!11520 = distinct !DILexicalBlock(scope: !11513, file: !11453, line: 379, column: 7)
!11521 = !DILocation(line: 387, column: 8, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11509, file: !11453, line: 387, column: 8)
!11523 = !DILocation(line: 387, column: 40, scope: !11522)
!11524 = !DILocation(line: 387, column: 8, scope: !11509)
!11525 = !DILocation(line: 407, column: 26, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !11453, line: 407, column: 10)
!11527 = distinct !DILexicalBlock(scope: !11522, file: !11453, line: 388, column: 5)
!11528 = !DILocation(line: 407, column: 55, scope: !11526)
!11529 = !DILocation(line: 413, column: 28, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !11453, line: 413, column: 12)
!11531 = distinct !DILexicalBlock(scope: !11526, file: !11453, line: 412, column: 7)
!11532 = !DILocation(line: 413, column: 57, scope: !11530)
!11533 = !DILocation(line: 0, scope: !11509)
!11534 = !DILocation(line: 420, column: 8, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11509, file: !11453, line: 420, column: 8)
!11536 = !DILocation(line: 420, column: 40, scope: !11535)
!11537 = !DILocation(line: 420, column: 8, scope: !11509)
!11538 = !DILocation(line: 429, column: 26, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !11453, line: 429, column: 10)
!11540 = distinct !DILexicalBlock(scope: !11535, file: !11453, line: 421, column: 5)
!11541 = !DILocation(line: 429, column: 55, scope: !11539)
!11542 = !DILocation(line: 435, column: 28, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !11453, line: 435, column: 12)
!11544 = distinct !DILexicalBlock(scope: !11539, file: !11453, line: 434, column: 7)
!11545 = !DILocation(line: 435, column: 57, scope: !11543)
!11546 = !DILocation(line: 444, column: 5, scope: !11509)
!11547 = !DILocation(line: 448, column: 5, scope: !11509)
!11548 = !DILocation(line: 451, column: 18, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11509, file: !11453, line: 449, column: 5)
!11550 = !DILocation(line: 452, column: 12, scope: !11549)
!11551 = !DILocation(line: 453, column: 26, scope: !11509)
!11552 = !DILocation(line: 453, column: 38, scope: !11509)
!11553 = !DILocation(line: 453, column: 5, scope: !11549)
!11554 = distinct !{!11554, !11547, !11555}
!11555 = !DILocation(line: 453, column: 54, scope: !11509)
!11556 = !DILocation(line: 0, scope: !11505)
!11557 = !DILocation(line: 464, column: 3, scope: !11493)
!11558 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11559, file: !11559, line: 519, type: !6134, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11559 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11560 = !DILocation(line: 521, column: 21, scope: !11558)
!11561 = !DILocation(line: 521, column: 3, scope: !11558)
!11562 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5900, file: !5900, line: 1543, type: !6144, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11563)
!11563 = !{!11564}
!11564 = !DILocalVariable(name: "Latency", arg: 1, scope: !11562, file: !5900, line: 1543, type: !162)
!11565 = !DILocation(line: 0, scope: !11562)
!11566 = !DILocation(line: 1545, column: 3, scope: !11562)
!11567 = !DILocation(line: 1546, column: 1, scope: !11562)
!11568 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5900, file: !5900, line: 1569, type: !6134, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11569 = !DILocation(line: 1571, column: 21, scope: !11568)
!11570 = !DILocation(line: 1571, column: 3, scope: !11568)
!11571 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11453, file: !11453, line: 483, type: !11572, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11588)
!11572 = !DISubroutineType(types: !11573)
!11573 = !{!11496, !11574, !11581}
!11574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11575, size: 32)
!11575 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11460, line: 114, baseType: !11576)
!11576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11460, line: 94, size: 96, elements: !11577)
!11577 = !{!11578, !11579, !11580}
!11578 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11576, file: !11460, line: 96, baseType: !162, size: 32)
!11579 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11576, file: !11460, line: 102, baseType: !162, size: 32, offset: 32)
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11576, file: !11460, line: 109, baseType: !162, size: 32, offset: 64)
!11581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11582, size: 32)
!11582 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11460, line: 139, baseType: !11583)
!11583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11460, line: 119, size: 96, elements: !11584)
!11584 = !{!11585, !11586, !11587}
!11585 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11583, file: !11460, line: 121, baseType: !162, size: 32)
!11586 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11583, file: !11460, line: 127, baseType: !162, size: 32, offset: 32)
!11587 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11583, file: !11460, line: 133, baseType: !162, size: 32, offset: 64)
!11588 = !{!11589, !11590, !11591, !11592}
!11589 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11571, file: !11453, line: 483, type: !11574)
!11590 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11571, file: !11453, line: 484, type: !11581)
!11591 = !DILocalVariable(name: "status", scope: !11571, file: !11453, line: 486, type: !11496)
!11592 = !DILocalVariable(name: "pllfreq", scope: !11571, file: !11453, line: 487, type: !162)
!11593 = !DILocation(line: 0, scope: !11571)
!11594 = !DILocation(line: 490, column: 6, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11571, file: !11453, line: 490, column: 6)
!11596 = !DILocation(line: 490, column: 25, scope: !11595)
!11597 = !DILocation(line: 490, column: 6, scope: !11571)
!11598 = !DILocation(line: 493, column: 15, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11595, file: !11453, line: 491, column: 3)
!11600 = !DILocation(line: 496, column: 8, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11599, file: !11453, line: 496, column: 8)
!11602 = !DILocation(line: 496, column: 29, scope: !11601)
!11603 = !DILocation(line: 496, column: 8, scope: !11599)
!11604 = !DILocation(line: 498, column: 7, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11601, file: !11453, line: 497, column: 5)
!11606 = !DILocation(line: 499, column: 7, scope: !11605)
!11607 = !DILocation(line: 499, column: 14, scope: !11605)
!11608 = !DILocation(line: 499, column: 35, scope: !11605)
!11609 = distinct !{!11609, !11606, !11610}
!11610 = !DILocation(line: 502, column: 7, scope: !11605)
!11611 = !DILocation(line: 506, column: 76, scope: !11599)
!11612 = !DILocation(line: 506, column: 103, scope: !11599)
!11613 = !DILocation(line: 507, column: 54, scope: !11599)
!11614 = !DILocation(line: 506, column: 5, scope: !11599)
!11615 = !DILocation(line: 510, column: 14, scope: !11599)
!11616 = !DILocation(line: 511, column: 3, scope: !11599)
!11617 = !DILocation(line: 0, scope: !11595)
!11618 = !DILocation(line: 518, column: 3, scope: !11571)
!11619 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11453, file: !11453, line: 642, type: !11620, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11622)
!11620 = !DISubroutineType(types: !11621)
!11621 = !{!11496}
!11622 = !{!11623}
!11623 = !DILocalVariable(name: "status", scope: !11619, file: !11453, line: 644, type: !11496)
!11624 = !DILocation(line: 0, scope: !11619)
!11625 = !DILocation(line: 647, column: 6, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11619, file: !11453, line: 647, column: 6)
!11627 = !DILocation(line: 647, column: 27, scope: !11626)
!11628 = !DILocation(line: 663, column: 6, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11619, file: !11453, line: 663, column: 6)
!11630 = !DILocation(line: 663, column: 30, scope: !11629)
!11631 = !DILocation(line: 663, column: 6, scope: !11619)
!11632 = !DILocation(line: 669, column: 3, scope: !11619)
!11633 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11453, file: !11453, line: 611, type: !11634, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11636)
!11634 = !DISubroutineType(types: !11635)
!11635 = !{!162, !162, !11574}
!11636 = !{!11637, !11638, !11639}
!11637 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11633, file: !11453, line: 611, type: !162)
!11638 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11633, file: !11453, line: 611, type: !11574)
!11639 = !DILocalVariable(name: "pllfreq", scope: !11633, file: !11453, line: 613, type: !162)
!11640 = !DILocation(line: 0, scope: !11633)
!11641 = !DILocation(line: 622, column: 56, scope: !11633)
!11642 = !DILocation(line: 622, column: 61, scope: !11633)
!11643 = !DILocation(line: 622, column: 32, scope: !11633)
!11644 = !DILocation(line: 626, column: 45, scope: !11633)
!11645 = !DILocation(line: 626, column: 50, scope: !11633)
!11646 = !DILocation(line: 626, column: 21, scope: !11633)
!11647 = !DILocation(line: 630, column: 47, scope: !11633)
!11648 = !DILocation(line: 630, column: 82, scope: !11633)
!11649 = !DILocation(line: 630, column: 21, scope: !11633)
!11650 = !DILocation(line: 633, column: 3, scope: !11633)
!11651 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8085, file: !8085, line: 3007, type: !6134, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11652 = !DILocation(line: 3009, column: 11, scope: !11651)
!11653 = !DILocation(line: 3009, column: 44, scope: !11651)
!11654 = !DILocation(line: 3009, column: 3, scope: !11651)
!11655 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8085, file: !8085, line: 2987, type: !3113, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11656 = !DILocation(line: 2989, column: 3, scope: !11655)
!11657 = !DILocation(line: 2990, column: 1, scope: !11655)
!11658 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8085, file: !8085, line: 4304, type: !8209, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11659)
!11659 = !{!11660, !11661, !11662, !11663}
!11660 = !DILocalVariable(name: "Source", arg: 1, scope: !11658, file: !8085, line: 4304, type: !162)
!11661 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11658, file: !8085, line: 4304, type: !162)
!11662 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11658, file: !8085, line: 4304, type: !162)
!11663 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11658, file: !8085, line: 4304, type: !162)
!11664 = !DILocation(line: 0, scope: !11658)
!11665 = !DILocation(line: 4306, column: 3, scope: !11658)
!11666 = !DILocation(line: 4308, column: 3, scope: !11658)
!11667 = !DILocation(line: 4312, column: 1, scope: !11658)
!11668 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11453, file: !11453, line: 681, type: !11669, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11671)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{!11496, !162, !11581}
!11671 = !{!11672, !11673, !11674, !11675}
!11672 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11668, file: !11453, line: 681, type: !162)
!11673 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11668, file: !11453, line: 681, type: !11581)
!11674 = !DILocalVariable(name: "status", scope: !11668, file: !11453, line: 683, type: !11496)
!11675 = !DILocalVariable(name: "hclk_frequency", scope: !11668, file: !11453, line: 684, type: !162)
!11676 = !DILocation(line: 0, scope: !11668)
!11677 = !DILocation(line: 691, column: 20, scope: !11668)
!11678 = !DILocation(line: 694, column: 6, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11668, file: !11453, line: 694, column: 6)
!11680 = !DILocation(line: 694, column: 22, scope: !11679)
!11681 = !DILocation(line: 694, column: 6, scope: !11668)
!11682 = !DILocation(line: 697, column: 14, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11679, file: !11453, line: 695, column: 3)
!11684 = !DILocation(line: 701, column: 13, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11668, file: !11453, line: 701, column: 6)
!11686 = !DILocation(line: 701, column: 6, scope: !11668)
!11687 = !DILocation(line: 704, column: 5, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11685, file: !11453, line: 702, column: 3)
!11689 = !DILocation(line: 705, column: 5, scope: !11688)
!11690 = !DILocation(line: 705, column: 12, scope: !11688)
!11691 = !DILocation(line: 705, column: 33, scope: !11688)
!11692 = distinct !{!11692, !11689, !11693}
!11693 = !DILocation(line: 708, column: 5, scope: !11688)
!11694 = !DILocation(line: 711, column: 49, scope: !11688)
!11695 = !DILocation(line: 711, column: 5, scope: !11688)
!11696 = !DILocation(line: 712, column: 5, scope: !11688)
!11697 = !DILocation(line: 713, column: 5, scope: !11688)
!11698 = !DILocation(line: 713, column: 12, scope: !11688)
!11699 = !DILocation(line: 713, column: 37, scope: !11688)
!11700 = distinct !{!11700, !11697, !11701}
!11701 = !DILocation(line: 716, column: 5, scope: !11688)
!11702 = !DILocation(line: 719, column: 50, scope: !11688)
!11703 = !DILocation(line: 719, column: 5, scope: !11688)
!11704 = !DILocation(line: 720, column: 50, scope: !11688)
!11705 = !DILocation(line: 720, column: 5, scope: !11688)
!11706 = !DILocation(line: 721, column: 3, scope: !11688)
!11707 = !DILocation(line: 724, column: 6, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11668, file: !11453, line: 724, column: 6)
!11709 = !DILocation(line: 724, column: 22, scope: !11708)
!11710 = !DILocation(line: 724, column: 6, scope: !11668)
!11711 = !DILocation(line: 727, column: 14, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11708, file: !11453, line: 725, column: 3)
!11713 = !DILocation(line: 728, column: 3, scope: !11712)
!11714 = !DILocation(line: 731, column: 13, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11668, file: !11453, line: 731, column: 6)
!11716 = !DILocation(line: 731, column: 6, scope: !11668)
!11717 = !DILocation(line: 733, column: 5, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11715, file: !11453, line: 732, column: 3)
!11719 = !DILocation(line: 734, column: 3, scope: !11718)
!11720 = !DILocation(line: 736, column: 3, scope: !11668)
!11721 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8085, file: !8085, line: 4184, type: !3113, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11722 = !DILocation(line: 4186, column: 3, scope: !11721)
!11723 = !DILocation(line: 4187, column: 1, scope: !11721)
!11724 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8085, file: !8085, line: 4205, type: !6134, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11725 = !DILocation(line: 4207, column: 11, scope: !11724)
!11726 = !DILocation(line: 4207, column: 44, scope: !11724)
!11727 = !DILocation(line: 4207, column: 3, scope: !11724)
!11728 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8085, file: !8085, line: 3224, type: !6144, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11729)
!11729 = !{!11730}
!11730 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11728, file: !8085, line: 3224, type: !162)
!11731 = !DILocation(line: 0, scope: !11728)
!11732 = !DILocation(line: 3226, column: 3, scope: !11728)
!11733 = !DILocation(line: 3227, column: 1, scope: !11728)
!11734 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8085, file: !8085, line: 3188, type: !6144, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11735)
!11735 = !{!11736}
!11736 = !DILocalVariable(name: "Source", arg: 1, scope: !11734, file: !8085, line: 3188, type: !162)
!11737 = !DILocation(line: 0, scope: !11734)
!11738 = !DILocation(line: 3190, column: 3, scope: !11734)
!11739 = !DILocation(line: 3191, column: 1, scope: !11734)
!11740 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8085, file: !8085, line: 3204, type: !6134, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11741 = !DILocation(line: 3206, column: 21, scope: !11740)
!11742 = !DILocation(line: 3206, column: 3, scope: !11740)
!11743 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8085, file: !8085, line: 3240, type: !6144, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11744)
!11744 = !{!11745}
!11745 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11743, file: !8085, line: 3240, type: !162)
!11746 = !DILocation(line: 0, scope: !11743)
!11747 = !DILocation(line: 3242, column: 3, scope: !11743)
!11748 = !DILocation(line: 3243, column: 1, scope: !11743)
!11749 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8085, file: !8085, line: 3256, type: !6144, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11750)
!11750 = !{!11751}
!11751 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11749, file: !8085, line: 3256, type: !162)
!11752 = !DILocation(line: 0, scope: !11749)
!11753 = !DILocation(line: 3258, column: 3, scope: !11749)
!11754 = !DILocation(line: 3259, column: 1, scope: !11749)
!11755 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8085, file: !8085, line: 5153, type: !6134, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11756 = !DILocation(line: 5155, column: 11, scope: !11755)
!11757 = !DILocation(line: 5155, column: 47, scope: !11755)
!11758 = !DILocation(line: 5155, column: 3, scope: !11755)
!11759 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11453, file: !11453, line: 540, type: !11760, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !11762)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!11496, !162, !162, !11574, !11581}
!11762 = !{!11763, !11764, !11765, !11766, !11767, !11768}
!11763 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11759, file: !11453, line: 540, type: !162)
!11764 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11759, file: !11453, line: 540, type: !162)
!11765 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11759, file: !11453, line: 541, type: !11574)
!11766 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11759, file: !11453, line: 541, type: !11581)
!11767 = !DILocalVariable(name: "status", scope: !11759, file: !11453, line: 543, type: !11496)
!11768 = !DILocalVariable(name: "pllfreq", scope: !11759, file: !11453, line: 544, type: !162)
!11769 = !DILocation(line: 0, scope: !11759)
!11770 = !DILocation(line: 551, column: 6, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11759, file: !11453, line: 551, column: 6)
!11772 = !DILocation(line: 551, column: 25, scope: !11771)
!11773 = !DILocation(line: 551, column: 6, scope: !11759)
!11774 = !DILocation(line: 554, column: 15, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11771, file: !11453, line: 552, column: 3)
!11776 = !DILocation(line: 557, column: 8, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11775, file: !11453, line: 557, column: 8)
!11778 = !DILocation(line: 557, column: 29, scope: !11777)
!11779 = !DILocation(line: 557, column: 8, scope: !11775)
!11780 = !DILocation(line: 560, column: 20, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !11453, line: 560, column: 10)
!11782 = distinct !DILexicalBlock(scope: !11777, file: !11453, line: 558, column: 5)
!11783 = !DILocation(line: 560, column: 10, scope: !11782)
!11784 = !DILocation(line: 562, column: 9, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11781, file: !11453, line: 561, column: 7)
!11786 = !DILocation(line: 563, column: 7, scope: !11785)
!11787 = !DILocation(line: 566, column: 9, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11781, file: !11453, line: 565, column: 7)
!11789 = !DILocation(line: 570, column: 7, scope: !11782)
!11790 = !DILocation(line: 571, column: 7, scope: !11782)
!11791 = !DILocation(line: 571, column: 14, scope: !11782)
!11792 = !DILocation(line: 571, column: 35, scope: !11782)
!11793 = distinct !{!11793, !11790, !11794}
!11794 = !DILocation(line: 574, column: 7, scope: !11782)
!11795 = !DILocation(line: 578, column: 76, scope: !11775)
!11796 = !DILocation(line: 578, column: 103, scope: !11775)
!11797 = !DILocation(line: 579, column: 54, scope: !11775)
!11798 = !DILocation(line: 578, column: 5, scope: !11775)
!11799 = !DILocation(line: 582, column: 14, scope: !11775)
!11800 = !DILocation(line: 583, column: 3, scope: !11775)
!11801 = !DILocation(line: 0, scope: !11771)
!11802 = !DILocation(line: 590, column: 3, scope: !11759)
!11803 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8085, file: !8085, line: 2969, type: !6134, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11804 = !DILocation(line: 2971, column: 11, scope: !11803)
!11805 = !DILocation(line: 2971, column: 44, scope: !11803)
!11806 = !DILocation(line: 2971, column: 3, scope: !11803)
!11807 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8085, file: !8085, line: 2929, type: !3113, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11808 = !DILocation(line: 2931, column: 3, scope: !11807)
!11809 = !DILocation(line: 2932, column: 1, scope: !11807)
!11810 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8085, file: !8085, line: 2939, type: !3113, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11811 = !DILocation(line: 2941, column: 3, scope: !11810)
!11812 = !DILocation(line: 2942, column: 1, scope: !11810)
!11813 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8085, file: !8085, line: 2949, type: !3113, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2904, retainedNodes: !250)
!11814 = !DILocation(line: 2951, column: 3, scope: !11813)
!11815 = !DILocation(line: 2952, column: 1, scope: !11813)
!11816 = distinct !DISubprogram(name: "z_device_state_init", scope: !11817, file: !11817, line: 23, type: !3113, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11818)
!11817 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11818 = !{!11819}
!11819 = !DILocalVariable(name: "dev", scope: !11816, file: !11817, line: 25, type: !11820)
!11820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11821, size: 32)
!11821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11822)
!11822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !11823)
!11823 = !{!11824, !11825, !11826, !11827, !11833, !11834}
!11824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11822, file: !120, line: 380, baseType: !123, size: 32)
!11825 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11822, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!11826 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11822, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!11827 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11822, file: !120, line: 386, baseType: !11828, size: 32, offset: 96)
!11828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11829, size: 32)
!11829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !11830)
!11830 = !{!11831, !11832}
!11831 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11829, file: !120, line: 359, baseType: !133, size: 8)
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11829, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11822, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11822, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!11835 = !DILocation(line: 0, scope: !11816)
!11836 = !DILocation(line: 31, column: 1, scope: !11816)
!11837 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11817, file: !11817, line: 33, type: !11838, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11840)
!11838 = !DISubroutineType(types: !11839)
!11839 = !{!11820, !123}
!11840 = !{!11841, !11842}
!11841 = !DILocalVariable(name: "name", arg: 1, scope: !11837, file: !11817, line: 33, type: !123)
!11842 = !DILocalVariable(name: "dev", scope: !11837, file: !11817, line: 35, type: !11820)
!11843 = !DILocation(line: 0, scope: !11837)
!11844 = !DILocation(line: 40, column: 12, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11837, file: !11817, line: 40, column: 6)
!11846 = !DILocation(line: 40, column: 21, scope: !11845)
!11847 = !DILocation(line: 40, column: 25, scope: !11845)
!11848 = !DILocation(line: 40, column: 33, scope: !11845)
!11849 = !DILocation(line: 40, column: 6, scope: !11837)
!11850 = !DILocation(line: 55, column: 2, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11837, file: !11817, line: 55, column: 2)
!11852 = !DILocation(line: 50, column: 7, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11854, file: !11817, line: 50, column: 7)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !11817, line: 49, column: 57)
!11855 = distinct !DILexicalBlock(scope: !11856, file: !11817, line: 49, column: 2)
!11856 = distinct !DILexicalBlock(scope: !11837, file: !11817, line: 49, column: 2)
!11857 = !DILocation(line: 50, column: 30, scope: !11853)
!11858 = !DILocation(line: 50, column: 39, scope: !11853)
!11859 = !DILocation(line: 50, column: 44, scope: !11853)
!11860 = !DILocation(line: 50, column: 7, scope: !11854)
!11861 = !DILocation(line: 49, column: 53, scope: !11855)
!11862 = !DILocation(line: 49, column: 33, scope: !11855)
!11863 = !DILocation(line: 49, column: 2, scope: !11856)
!11864 = distinct !{!11864, !11863, !11865}
!11865 = !DILocation(line: 53, column: 2, scope: !11856)
!11866 = !DILocation(line: 56, column: 7, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !11817, line: 56, column: 7)
!11868 = distinct !DILexicalBlock(scope: !11869, file: !11817, line: 55, column: 57)
!11869 = distinct !DILexicalBlock(scope: !11851, file: !11817, line: 55, column: 2)
!11870 = !DILocation(line: 56, column: 30, scope: !11867)
!11871 = !DILocation(line: 56, column: 52, scope: !11867)
!11872 = !DILocation(line: 56, column: 34, scope: !11867)
!11873 = !DILocation(line: 56, column: 58, scope: !11867)
!11874 = !DILocation(line: 56, column: 7, scope: !11868)
!11875 = !DILocation(line: 55, column: 53, scope: !11869)
!11876 = !DILocation(line: 55, column: 33, scope: !11869)
!11877 = distinct !{!11877, !11850, !11878}
!11878 = !DILocation(line: 59, column: 2, scope: !11851)
!11879 = !DILocation(line: 62, column: 1, scope: !11837)
!11880 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11817, file: !11817, line: 93, type: !11881, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11883)
!11881 = !DISubroutineType(types: !11882)
!11882 = !{!136, !11820}
!11883 = !{!11884}
!11884 = !DILocalVariable(name: "dev", arg: 1, scope: !11880, file: !11817, line: 93, type: !11820)
!11885 = !DILocation(line: 0, scope: !11880)
!11886 = !DILocation(line: 99, column: 10, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11880, file: !11817, line: 99, column: 6)
!11888 = !DILocation(line: 99, column: 6, scope: !11880)
!11889 = !DILocation(line: 103, column: 14, scope: !11880)
!11890 = !DILocation(line: 103, column: 21, scope: !11880)
!11891 = !DILocation(line: 103, column: 33, scope: !11880)
!11892 = !DILocation(line: 103, column: 49, scope: !11880)
!11893 = !DILocation(line: 103, column: 58, scope: !11880)
!11894 = !DILocation(line: 104, column: 1, scope: !11880)
!11895 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11817, file: !11817, line: 87, type: !11896, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11899)
!11896 = !DISubroutineType(types: !11897)
!11897 = !{!252, !11898}
!11898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11820, size: 32)
!11899 = !{!11900}
!11900 = !DILocalVariable(name: "devices", arg: 1, scope: !11895, file: !11817, line: 87, type: !11898)
!11901 = !DILocation(line: 0, scope: !11895)
!11902 = !DILocation(line: 89, column: 11, scope: !11895)
!11903 = !DILocation(line: 90, column: 2, scope: !11895)
!11904 = distinct !DISubprogram(name: "device_required_foreach", scope: !11817, file: !11817, line: 125, type: !11905, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11911)
!11905 = !DISubroutineType(types: !11906)
!11906 = !{!107, !11820, !11907, !102}
!11907 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !120, line: 471, baseType: !11908)
!11908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11909, size: 32)
!11909 = !DISubroutineType(types: !11910)
!11910 = !{!107, !11820, !102}
!11911 = !{!11912, !11913, !11914, !11915, !11916}
!11912 = !DILocalVariable(name: "dev", arg: 1, scope: !11904, file: !11817, line: 125, type: !11820)
!11913 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11904, file: !11817, line: 126, type: !11907)
!11914 = !DILocalVariable(name: "context", arg: 3, scope: !11904, file: !11817, line: 127, type: !102)
!11915 = !DILocalVariable(name: "handle_count", scope: !11904, file: !11817, line: 129, type: !252)
!11916 = !DILocalVariable(name: "handles", scope: !11904, file: !11817, line: 130, type: !139)
!11917 = !DILocation(line: 0, scope: !11904)
!11918 = !DILocation(line: 129, column: 2, scope: !11904)
!11919 = !DILocation(line: 129, column: 9, scope: !11904)
!11920 = !DILocation(line: 130, column: 35, scope: !11904)
!11921 = !DILocation(line: 132, column: 33, scope: !11904)
!11922 = !DILocation(line: 132, column: 9, scope: !11904)
!11923 = !DILocation(line: 133, column: 1, scope: !11904)
!11924 = !DILocation(line: 132, column: 2, scope: !11904)
!11925 = distinct !DISubprogram(name: "device_required_handles_get", scope: !120, file: !120, line: 493, type: !11926, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11928)
!11926 = !DISubroutineType(types: !11927)
!11927 = !{!139, !11820, !2465}
!11928 = !{!11929, !11930, !11931, !11932}
!11929 = !DILocalVariable(name: "dev", arg: 1, scope: !11925, file: !120, line: 493, type: !11820)
!11930 = !DILocalVariable(name: "count", arg: 2, scope: !11925, file: !120, line: 493, type: !2465)
!11931 = !DILocalVariable(name: "rv", scope: !11925, file: !120, line: 495, type: !139)
!11932 = !DILocalVariable(name: "i", scope: !11933, file: !120, line: 498, type: !252)
!11933 = distinct !DILexicalBlock(scope: !11934, file: !120, line: 497, column: 18)
!11934 = distinct !DILexicalBlock(scope: !11925, file: !120, line: 497, column: 6)
!11935 = !DILocation(line: 0, scope: !11925)
!11936 = !DILocation(line: 495, column: 35, scope: !11925)
!11937 = !DILocation(line: 497, column: 9, scope: !11934)
!11938 = !DILocation(line: 497, column: 6, scope: !11925)
!11939 = !DILocation(line: 0, scope: !11933)
!11940 = !DILocation(line: 500, column: 11, scope: !11933)
!11941 = !DILocation(line: 500, column: 40, scope: !11933)
!11942 = !DILocation(line: 502, column: 4, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11933, file: !120, line: 501, column: 40)
!11944 = distinct !{!11944, !11945, !11946}
!11945 = !DILocation(line: 500, column: 3, scope: !11933)
!11946 = !DILocation(line: 503, column: 3, scope: !11933)
!11947 = !DILocation(line: 504, column: 10, scope: !11933)
!11948 = !DILocation(line: 505, column: 2, scope: !11933)
!11949 = !DILocation(line: 507, column: 2, scope: !11925)
!11950 = distinct !DISubprogram(name: "device_visitor", scope: !11817, file: !11817, line: 106, type: !11951, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11953)
!11951 = !DISubroutineType(types: !11952)
!11952 = !{!107, !139, !252, !11907, !102}
!11953 = !{!11954, !11955, !11956, !11957, !11958, !11960, !11963, !11964}
!11954 = !DILocalVariable(name: "handles", arg: 1, scope: !11950, file: !11817, line: 106, type: !139)
!11955 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11950, file: !11817, line: 107, type: !252)
!11956 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11950, file: !11817, line: 108, type: !11907)
!11957 = !DILocalVariable(name: "context", arg: 4, scope: !11950, file: !11817, line: 109, type: !102)
!11958 = !DILocalVariable(name: "i", scope: !11959, file: !11817, line: 112, type: !252)
!11959 = distinct !DILexicalBlock(scope: !11950, file: !11817, line: 112, column: 2)
!11960 = !DILocalVariable(name: "dh", scope: !11961, file: !11817, line: 113, type: !141)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !11817, line: 112, column: 44)
!11962 = distinct !DILexicalBlock(scope: !11959, file: !11817, line: 112, column: 2)
!11963 = !DILocalVariable(name: "rdev", scope: !11961, file: !11817, line: 114, type: !11820)
!11964 = !DILocalVariable(name: "rc", scope: !11961, file: !11817, line: 115, type: !107)
!11965 = !DILocation(line: 0, scope: !11950)
!11966 = !DILocation(line: 0, scope: !11959)
!11967 = !DILocation(line: 112, column: 23, scope: !11962)
!11968 = !DILocation(line: 112, column: 2, scope: !11959)
!11969 = distinct !{!11969, !11968, !11970}
!11970 = !DILocation(line: 120, column: 2, scope: !11959)
!11971 = !DILocation(line: 113, column: 24, scope: !11961)
!11972 = !DILocation(line: 0, scope: !11961)
!11973 = !DILocation(line: 114, column: 31, scope: !11961)
!11974 = !DILocation(line: 115, column: 12, scope: !11961)
!11975 = !DILocation(line: 117, column: 10, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11961, file: !11817, line: 117, column: 7)
!11977 = !DILocation(line: 112, column: 39, scope: !11962)
!11978 = !DILocation(line: 123, column: 1, scope: !11950)
!11979 = distinct !DISubprogram(name: "device_from_handle", scope: !120, file: !120, line: 439, type: !11980, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11982)
!11980 = !DISubroutineType(types: !11981)
!11981 = !{!11820, !141}
!11982 = !{!11983, !11984, !11985}
!11983 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11979, file: !120, line: 439, type: !141)
!11984 = !DILocalVariable(name: "dev", scope: !11979, file: !120, line: 443, type: !11820)
!11985 = !DILocalVariable(name: "numdev", scope: !11979, file: !120, line: 444, type: !252)
!11986 = !DILocation(line: 0, scope: !11979)
!11987 = !DILocation(line: 446, column: 7, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11979, file: !120, line: 446, column: 6)
!11989 = !DILocation(line: 446, column: 18, scope: !11988)
!11990 = !DILocation(line: 446, column: 23, scope: !11988)
!11991 = !DILocation(line: 450, column: 2, scope: !11979)
!11992 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11817, file: !11817, line: 135, type: !11905, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !11993)
!11993 = !{!11994, !11995, !11996, !11997, !11998}
!11994 = !DILocalVariable(name: "dev", arg: 1, scope: !11992, file: !11817, line: 135, type: !11820)
!11995 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11992, file: !11817, line: 136, type: !11907)
!11996 = !DILocalVariable(name: "context", arg: 3, scope: !11992, file: !11817, line: 137, type: !102)
!11997 = !DILocalVariable(name: "handle_count", scope: !11992, file: !11817, line: 139, type: !252)
!11998 = !DILocalVariable(name: "handles", scope: !11992, file: !11817, line: 140, type: !139)
!11999 = !DILocation(line: 0, scope: !11992)
!12000 = !DILocation(line: 139, column: 2, scope: !11992)
!12001 = !DILocation(line: 139, column: 9, scope: !11992)
!12002 = !DILocation(line: 140, column: 35, scope: !11992)
!12003 = !DILocation(line: 142, column: 33, scope: !11992)
!12004 = !DILocation(line: 142, column: 9, scope: !11992)
!12005 = !DILocation(line: 143, column: 1, scope: !11992)
!12006 = !DILocation(line: 142, column: 2, scope: !11992)
!12007 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !120, file: !120, line: 573, type: !11926, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !12008)
!12008 = !{!12009, !12010, !12011, !12012, !12013}
!12009 = !DILocalVariable(name: "dev", arg: 1, scope: !12007, file: !120, line: 573, type: !11820)
!12010 = !DILocalVariable(name: "count", arg: 2, scope: !12007, file: !120, line: 573, type: !2465)
!12011 = !DILocalVariable(name: "rv", scope: !12007, file: !120, line: 575, type: !139)
!12012 = !DILocalVariable(name: "region", scope: !12007, file: !120, line: 576, type: !252)
!12013 = !DILocalVariable(name: "i", scope: !12007, file: !120, line: 577, type: !252)
!12014 = !DILocation(line: 0, scope: !12007)
!12015 = !DILocation(line: 575, column: 35, scope: !12007)
!12016 = !DILocation(line: 579, column: 9, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12007, file: !120, line: 579, column: 6)
!12018 = !DILocation(line: 579, column: 6, scope: !12007)
!12019 = !DILocation(line: 582, column: 8, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !120, line: 582, column: 8)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !120, line: 581, column: 23)
!12022 = distinct !DILexicalBlock(scope: !12017, file: !120, line: 579, column: 18)
!12023 = !DILocation(line: 582, column: 12, scope: !12020)
!12024 = !DILocation(line: 585, column: 6, scope: !12021)
!12025 = !DILocation(line: 0, scope: !12022)
!12026 = !DILocation(line: 581, column: 17, scope: !12022)
!12027 = !DILocation(line: 581, column: 3, scope: !12022)
!12028 = !DILocation(line: 588, column: 10, scope: !12022)
!12029 = !DILocation(line: 588, column: 16, scope: !12022)
!12030 = !DILocation(line: 589, column: 4, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12022, file: !120, line: 588, column: 39)
!12032 = !DILocation(line: 588, column: 3, scope: !12022)
!12033 = distinct !{!12033, !12032, !12034}
!12034 = !DILocation(line: 590, column: 3, scope: !12022)
!12035 = !DILocation(line: 591, column: 10, scope: !12022)
!12036 = !DILocation(line: 592, column: 2, scope: !12022)
!12037 = !DILocation(line: 575, column: 25, scope: !12007)
!12038 = !DILocation(line: 594, column: 2, scope: !12007)
!12039 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1822, file: !1822, line: 49, type: !12040, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !250)
!12040 = !DISubroutineType(types: !12041)
!12041 = !{!2458}
!12042 = !DILocation(line: 51, column: 10, scope: !12039)
!12043 = !DILocation(line: 51, column: 20, scope: !12039)
!12044 = !DILocation(line: 51, column: 2, scope: !12039)
!12045 = distinct !DISubprogram(name: "coredump", scope: !2976, file: !2976, line: 209, type: !12046, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12192)
!12046 = !DISubroutineType(types: !12047)
!12047 = !{null, !32, !12048, !12092}
!12048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12049, size: 32)
!12049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12050)
!12050 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2590, line: 141, baseType: !12051)
!12051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2590, line: 97, size: 256, elements: !12052)
!12052 = !{!12053}
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12051, file: !2590, line: 107, baseType: !12054, size: 256)
!12054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2590, line: 98, size: 256, elements: !12055)
!12055 = !{!12056, !12061, !12066, !12071, !12076, !12081, !12086, !12091}
!12056 = !DIDerivedType(tag: DW_TAG_member, scope: !12054, file: !2590, line: 99, baseType: !12057, size: 32)
!12057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12054, file: !2590, line: 99, size: 32, elements: !12058)
!12058 = !{!12059, !12060}
!12059 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12057, file: !2590, line: 99, baseType: !162, size: 32)
!12060 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12057, file: !2590, line: 99, baseType: !162, size: 32)
!12061 = !DIDerivedType(tag: DW_TAG_member, scope: !12054, file: !2590, line: 100, baseType: !12062, size: 32, offset: 32)
!12062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12054, file: !2590, line: 100, size: 32, elements: !12063)
!12063 = !{!12064, !12065}
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12062, file: !2590, line: 100, baseType: !162, size: 32)
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12062, file: !2590, line: 100, baseType: !162, size: 32)
!12066 = !DIDerivedType(tag: DW_TAG_member, scope: !12054, file: !2590, line: 101, baseType: !12067, size: 32, offset: 64)
!12067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12054, file: !2590, line: 101, size: 32, elements: !12068)
!12068 = !{!12069, !12070}
!12069 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12067, file: !2590, line: 101, baseType: !162, size: 32)
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12067, file: !2590, line: 101, baseType: !162, size: 32)
!12071 = !DIDerivedType(tag: DW_TAG_member, scope: !12054, file: !2590, line: 102, baseType: !12072, size: 32, offset: 96)
!12072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12054, file: !2590, line: 102, size: 32, elements: !12073)
!12073 = !{!12074, !12075}
!12074 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12072, file: !2590, line: 102, baseType: !162, size: 32)
!12075 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12072, file: !2590, line: 102, baseType: !162, size: 32)
!12076 = !DIDerivedType(tag: DW_TAG_member, scope: !12054, file: !2590, line: 103, baseType: !12077, size: 32, offset: 128)
!12077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12054, file: !2590, line: 103, size: 32, elements: !12078)
!12078 = !{!12079, !12080}
!12079 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12077, file: !2590, line: 103, baseType: !162, size: 32)
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12077, file: !2590, line: 103, baseType: !162, size: 32)
!12081 = !DIDerivedType(tag: DW_TAG_member, scope: !12054, file: !2590, line: 104, baseType: !12082, size: 32, offset: 160)
!12082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12054, file: !2590, line: 104, size: 32, elements: !12083)
!12083 = !{!12084, !12085}
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12082, file: !2590, line: 104, baseType: !162, size: 32)
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12082, file: !2590, line: 104, baseType: !162, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_member, scope: !12054, file: !2590, line: 105, baseType: !12087, size: 32, offset: 192)
!12087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12054, file: !2590, line: 105, size: 32, elements: !12088)
!12088 = !{!12089, !12090}
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12087, file: !2590, line: 105, baseType: !162, size: 32)
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12087, file: !2590, line: 105, baseType: !162, size: 32)
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12054, file: !2590, line: 106, baseType: !162, size: 32, offset: 224)
!12092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12093, size: 32)
!12093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !12094)
!12094 = !{!12095, !12153, !12165, !12166, !12167, !12168, !12174, !12187}
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12093, file: !359, line: 247, baseType: !12096, size: 384)
!12096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !12097)
!12097 = !{!12098, !12122, !12129, !12130, !12131, !12140, !12141, !12142}
!12098 = !DIDerivedType(tag: DW_TAG_member, scope: !12096, file: !359, line: 60, baseType: !12099, size: 64)
!12099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12096, file: !359, line: 60, size: 64, elements: !12100)
!12100 = !{!12101, !12116}
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12099, file: !359, line: 61, baseType: !12102, size: 64)
!12102 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !12103)
!12103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !12104)
!12104 = !{!12105, !12111}
!12105 = !DIDerivedType(tag: DW_TAG_member, scope: !12103, file: !233, line: 38, baseType: !12106, size: 32)
!12106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12103, file: !233, line: 38, size: 32, elements: !12107)
!12107 = !{!12108, !12110}
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12106, file: !233, line: 39, baseType: !12109, size: 32)
!12109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12103, size: 32)
!12110 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12106, file: !233, line: 40, baseType: !12109, size: 32)
!12111 = !DIDerivedType(tag: DW_TAG_member, scope: !12103, file: !233, line: 42, baseType: !12112, size: 32, offset: 32)
!12112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12103, file: !233, line: 42, size: 32, elements: !12113)
!12113 = !{!12114, !12115}
!12114 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12112, file: !233, line: 43, baseType: !12109, size: 32)
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12112, file: !233, line: 44, baseType: !12109, size: 32)
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12099, file: !359, line: 62, baseType: !12117, size: 64)
!12117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !12118)
!12118 = !{!12119}
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12117, file: !384, line: 50, baseType: !12120, size: 64)
!12120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12121, size: 64, elements: !389)
!12121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12117, size: 32)
!12122 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12096, file: !359, line: 68, baseType: !12123, size: 32, offset: 64)
!12123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12124, size: 32)
!12124 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !12125)
!12125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !12126)
!12126 = !{!12127}
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12125, file: !228, line: 232, baseType: !12128, size: 64)
!12128 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !12103)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12096, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12096, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!12131 = !DIDerivedType(tag: DW_TAG_member, scope: !12096, file: !359, line: 90, baseType: !12132, size: 16, offset: 112)
!12132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12096, file: !359, line: 90, size: 16, elements: !12133)
!12133 = !{!12134, !12139}
!12134 = !DIDerivedType(tag: DW_TAG_member, scope: !12132, file: !359, line: 91, baseType: !12135, size: 16)
!12135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12132, file: !359, line: 91, size: 16, elements: !12136)
!12136 = !{!12137, !12138}
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12135, file: !359, line: 96, baseType: !407, size: 8)
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12135, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12132, file: !359, line: 100, baseType: !411, size: 16)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12096, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12096, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12096, file: !359, line: 131, baseType: !12143, size: 192, offset: 192)
!12143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !12144)
!12144 = !{!12145, !12146, !12152}
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12143, file: !228, line: 245, baseType: !12102, size: 64)
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12143, file: !228, line: 246, baseType: !12147, size: 32, offset: 64)
!12147 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !12148)
!12148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12149, size: 32)
!12149 = !DISubroutineType(types: !12150)
!12150 = !{null, !12151}
!12151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12143, size: 32)
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12143, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12093, file: !359, line: 250, baseType: !12154, size: 288, offset: 384)
!12154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !12155)
!12155 = !{!12156, !12157, !12158, !12159, !12160, !12161, !12162, !12163, !12164}
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12154, file: !428, line: 26, baseType: !162, size: 32)
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12154, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12154, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12154, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12154, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12154, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12154, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12154, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12154, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12093, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!12166 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12093, file: !359, line: 256, baseType: !12124, size: 64, offset: 704)
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12093, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12093, file: !359, line: 300, baseType: !12169, size: 96, offset: 800)
!12169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !12170)
!12170 = !{!12171, !12172, !12173}
!12171 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12169, file: !359, line: 153, baseType: !22, size: 32)
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12169, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12169, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12093, file: !359, line: 325, baseType: !12175, size: 32, offset: 896)
!12175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12176, size: 32)
!12176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !12177)
!12177 = !{!12178, !12184, !12185}
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12176, file: !224, line: 5074, baseType: !12179, size: 96)
!12179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !12180)
!12180 = !{!12181, !12182, !12183}
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12179, file: !454, line: 57, baseType: !457, size: 32)
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12179, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12179, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12176, file: !224, line: 5075, baseType: !12124, size: 64, offset: 96)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12176, file: !224, line: 5076, baseType: !12186, offset: 160)
!12186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!12187 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12093, file: !359, line: 343, baseType: !12188, size: 64, offset: 928)
!12188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !12189)
!12189 = !{!12190, !12191}
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12188, file: !428, line: 63, baseType: !162, size: 32)
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12188, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!12192 = !{!12193, !12194, !12195}
!12193 = !DILocalVariable(name: "reason", arg: 1, scope: !12045, file: !2976, line: 209, type: !32)
!12194 = !DILocalVariable(name: "esf", arg: 2, scope: !12045, file: !2976, line: 209, type: !12048)
!12195 = !DILocalVariable(name: "thread", arg: 3, scope: !12045, file: !2976, line: 210, type: !12092)
!12196 = !DILocation(line: 0, scope: !12045)
!12197 = !DILocation(line: 212, column: 1, scope: !12045)
!12198 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2976, file: !2976, line: 214, type: !12199, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12201)
!12199 = !DISubroutineType(types: !12200)
!12200 = !{null, !22, !22}
!12201 = !{!12202, !12203}
!12202 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12198, file: !2976, line: 214, type: !22)
!12203 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12198, file: !2976, line: 214, type: !22)
!12204 = !DILocation(line: 0, scope: !12198)
!12205 = !DILocation(line: 216, column: 1, scope: !12198)
!12206 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2976, file: !2976, line: 218, type: !12207, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12209)
!12207 = !DISubroutineType(types: !12208)
!12208 = !{null, !182, !252}
!12209 = !{!12210, !12211}
!12210 = !DILocalVariable(name: "buf", arg: 1, scope: !12206, file: !2976, line: 218, type: !182)
!12211 = !DILocalVariable(name: "buflen", arg: 2, scope: !12206, file: !2976, line: 218, type: !252)
!12212 = !DILocation(line: 0, scope: !12206)
!12213 = !DILocation(line: 220, column: 1, scope: !12206)
!12214 = distinct !DISubprogram(name: "coredump_query", scope: !2976, file: !2976, line: 222, type: !12215, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12217)
!12215 = !DISubroutineType(types: !12216)
!12216 = !{!107, !2975, !102}
!12217 = !{!12218, !12219}
!12218 = !DILocalVariable(name: "query_id", arg: 1, scope: !12214, file: !2976, line: 222, type: !2975)
!12219 = !DILocalVariable(name: "arg", arg: 2, scope: !12214, file: !2976, line: 222, type: !102)
!12220 = !DILocation(line: 0, scope: !12214)
!12221 = !DILocation(line: 224, column: 2, scope: !12214)
!12222 = distinct !DISubprogram(name: "coredump_cmd", scope: !2976, file: !2976, line: 227, type: !12223, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12225)
!12223 = !DISubroutineType(types: !12224)
!12224 = !{!107, !2982, !102}
!12225 = !{!12226, !12227}
!12226 = !DILocalVariable(name: "query_id", arg: 1, scope: !12222, file: !2976, line: 227, type: !2982)
!12227 = !DILocalVariable(name: "arg", arg: 2, scope: !12222, file: !2976, line: 227, type: !102)
!12228 = !DILocation(line: 0, scope: !12222)
!12229 = !DILocation(line: 229, column: 2, scope: !12222)
!12230 = distinct !DISubprogram(name: "arch_system_halt", scope: !12231, file: !12231, line: 23, type: !5890, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12232)
!12231 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12232 = !{!12233}
!12233 = !DILocalVariable(name: "reason", arg: 1, scope: !12230, file: !12231, line: 23, type: !32)
!12234 = !DILocation(line: 0, scope: !12230)
!12235 = !DILocation(line: 55, column: 2, scope: !12236, inlinedAt: !12240)
!12236 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12237)
!12237 = !{!12238, !12239}
!12238 = !DILocalVariable(name: "key", scope: !12236, file: !5879, line: 44, type: !32)
!12239 = !DILocalVariable(name: "tmp", scope: !12236, file: !5879, line: 53, type: !32)
!12240 = distinct !DILocation(line: 31, column: 8, scope: !12230)
!12241 = !{i64 1949701}
!12242 = !DILocation(line: 0, scope: !12236, inlinedAt: !12240)
!12243 = !DILocation(line: 32, column: 2, scope: !12230)
!12244 = !DILocation(line: 32, column: 2, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12246, file: !12231, line: 32, column: 2)
!12246 = distinct !DILexicalBlock(scope: !12230, file: !12231, line: 32, column: 2)
!12247 = distinct !{!12247, !12248, !12249}
!12248 = !DILocation(line: 32, column: 2, scope: !12246)
!12249 = !DILocation(line: 34, column: 2, scope: !12246)
!12250 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12231, file: !12231, line: 39, type: !12251, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12253)
!12251 = !DISubroutineType(types: !12252)
!12252 = !{null, !32, !12048}
!12253 = !{!12254, !12255}
!12254 = !DILocalVariable(name: "reason", arg: 1, scope: !12250, file: !12231, line: 39, type: !32)
!12255 = !DILocalVariable(name: "esf", arg: 2, scope: !12250, file: !12231, line: 40, type: !12048)
!12256 = !DILocation(line: 0, scope: !12250)
!12257 = !DILocation(line: 46, column: 2, scope: !12250)
!12258 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12231, file: !12231, line: 81, type: !5890, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12259)
!12259 = !{!12260}
!12260 = !DILocalVariable(name: "reason", arg: 1, scope: !12258, file: !12231, line: 81, type: !32)
!12261 = !DILocation(line: 0, scope: !12258)
!12262 = !DILocation(line: 83, column: 2, scope: !12258)
!12263 = distinct !DISubprogram(name: "z_fatal_error", scope: !12231, file: !12231, line: 96, type: !12251, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12264)
!12264 = !{!12265, !12266, !12267, !12268}
!12265 = !DILocalVariable(name: "reason", arg: 1, scope: !12263, file: !12231, line: 96, type: !32)
!12266 = !DILocalVariable(name: "esf", arg: 2, scope: !12263, file: !12231, line: 96, type: !12048)
!12267 = !DILocalVariable(name: "key", scope: !12263, file: !12231, line: 102, type: !32)
!12268 = !DILocalVariable(name: "thread", scope: !12263, file: !12231, line: 103, type: !12092)
!12269 = !DILocation(line: 0, scope: !12263)
!12270 = !DILocation(line: 55, column: 2, scope: !12236, inlinedAt: !12271)
!12271 = distinct !DILocation(line: 102, column: 21, scope: !12263)
!12272 = !DILocation(line: 0, scope: !12236, inlinedAt: !12271)
!12273 = !DILocation(line: 119, column: 11, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12263, file: !12231, line: 119, column: 6)
!12275 = !DILocation(line: 119, column: 20, scope: !12274)
!12276 = !DILocation(line: 131, column: 2, scope: !12263)
!12277 = !DILocation(line: 151, column: 7, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12279, file: !12231, line: 146, column: 32)
!12279 = distinct !DILexicalBlock(scope: !12263, file: !12231, line: 146, column: 6)
!12280 = !DILocation(line: 151, column: 21, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12278, file: !12231, line: 151, column: 7)
!12282 = !DILocation(line: 104, column: 4, scope: !12263)
!12283 = !DILocalVariable(name: "key", arg: 1, scope: !12284, file: !5879, line: 84, type: !32)
!12284 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12285)
!12285 = !{!12283}
!12286 = !DILocation(line: 0, scope: !12284, inlinedAt: !12287)
!12287 = distinct !DILocation(line: 186, column: 2, scope: !12263)
!12288 = !DILocation(line: 95, column: 2, scope: !12284, inlinedAt: !12287)
!12289 = !{i64 1950518}
!12290 = !DILocation(line: 189, column: 3, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12292, file: !12231, line: 188, column: 41)
!12292 = distinct !DILexicalBlock(scope: !12263, file: !12231, line: 188, column: 6)
!12293 = !DILocation(line: 191, column: 1, scope: !12263)
!12294 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !12295, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !250)
!12295 = !DISubroutineType(types: !12296)
!12296 = !{!12297}
!12297 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !12092)
!12298 = !DILocation(line: 535, column: 9, scope: !12294)
!12299 = !DILocation(line: 535, column: 2, scope: !12294)
!12300 = distinct !DISubprogram(name: "k_thread_abort", scope: !3298, file: !3298, line: 188, type: !12301, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !12303)
!12301 = !DISubroutineType(types: !12302)
!12302 = !{null, !12297}
!12303 = !{!12304}
!12304 = !DILocalVariable(name: "thread", arg: 1, scope: !12300, file: !3298, line: 188, type: !12297)
!12305 = !DILocation(line: 0, scope: !12300)
!12306 = !DILocation(line: 197, column: 2, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12300, file: !3298, line: 197, column: 2)
!12308 = !{i64 2154064741}
!12309 = !DILocation(line: 198, column: 2, scope: !12300)
!12310 = !DILocation(line: 199, column: 1, scope: !12300)
!12311 = distinct !DISubprogram(name: "z_current_get", scope: !3298, file: !3298, line: 173, type: !12295, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !250)
!12312 = !DILocation(line: 180, column: 2, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12311, file: !3298, line: 180, column: 2)
!12314 = !{i64 2154064673}
!12315 = !DILocation(line: 181, column: 9, scope: !12311)
!12316 = !DILocation(line: 181, column: 2, scope: !12311)
!12317 = distinct !DISubprogram(name: "z_early_memset", scope: !1829, file: !1829, line: 108, type: !12318, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12320)
!12318 = !DISubroutineType(types: !12319)
!12319 = !{null, !102, !107, !252}
!12320 = !{!12321, !12322, !12323}
!12321 = !DILocalVariable(name: "dst", arg: 1, scope: !12317, file: !1829, line: 108, type: !102)
!12322 = !DILocalVariable(name: "c", arg: 2, scope: !12317, file: !1829, line: 108, type: !107)
!12323 = !DILocalVariable(name: "n", arg: 3, scope: !12317, file: !1829, line: 108, type: !252)
!12324 = !DILocation(line: 0, scope: !12317)
!12325 = !DILocation(line: 110, column: 9, scope: !12317)
!12326 = !DILocation(line: 111, column: 1, scope: !12317)
!12327 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1829, file: !1829, line: 121, type: !12328, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12330)
!12328 = !DISubroutineType(types: !12329)
!12329 = !{null, !102, !13, !252}
!12330 = !{!12331, !12332, !12333}
!12331 = !DILocalVariable(name: "dst", arg: 1, scope: !12327, file: !1829, line: 121, type: !102)
!12332 = !DILocalVariable(name: "src", arg: 2, scope: !12327, file: !1829, line: 121, type: !13)
!12333 = !DILocalVariable(name: "n", arg: 3, scope: !12327, file: !1829, line: 121, type: !252)
!12334 = !DILocation(line: 0, scope: !12327)
!12335 = !DILocation(line: 123, column: 9, scope: !12327)
!12336 = !DILocation(line: 124, column: 1, scope: !12327)
!12337 = distinct !DISubprogram(name: "z_bss_zero", scope: !1829, file: !1829, line: 132, type: !3113, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !250)
!12338 = !DILocation(line: 143, column: 2, scope: !12337)
!12339 = !DILocation(line: 168, column: 1, scope: !12337)
!12340 = distinct !DISubprogram(name: "z_init_cpu", scope: !1829, file: !1829, line: 372, type: !7697, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12341)
!12341 = !{!12342}
!12342 = !DILocalVariable(name: "id", arg: 1, scope: !12340, file: !1829, line: 372, type: !107)
!12343 = !DILocation(line: 0, scope: !12340)
!12344 = !DILocation(line: 374, column: 2, scope: !12340)
!12345 = !DILocation(line: 375, column: 34, scope: !12340)
!12346 = !DILocation(line: 375, column: 19, scope: !12340)
!12347 = !DILocation(line: 375, column: 31, scope: !12340)
!12348 = !DILocation(line: 376, column: 24, scope: !12340)
!12349 = !DILocation(line: 376, column: 19, scope: !12340)
!12350 = !DILocation(line: 376, column: 22, scope: !12340)
!12351 = !DILocation(line: 378, column: 26, scope: !12340)
!12352 = !DILocation(line: 378, column: 4, scope: !12340)
!12353 = !DILocation(line: 378, column: 50, scope: !12340)
!12354 = !DILocation(line: 377, column: 19, scope: !12340)
!12355 = !DILocation(line: 377, column: 29, scope: !12340)
!12356 = !DILocation(line: 384, column: 1, scope: !12340)
!12357 = distinct !DISubprogram(name: "init_idle_thread", scope: !1829, file: !1829, line: 343, type: !7697, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12358)
!12358 = !{!12359, !12360, !12361, !12364}
!12359 = !DILocalVariable(name: "i", arg: 1, scope: !12357, file: !1829, line: 343, type: !107)
!12360 = !DILocalVariable(name: "thread", scope: !12357, file: !1829, line: 345, type: !1921)
!12361 = !DILocalVariable(name: "stack", scope: !12357, file: !1829, line: 346, type: !12362)
!12362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12363, size: 32)
!12363 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3654, line: 44, baseType: !2035)
!12364 = !DILocalVariable(name: "tname", scope: !12357, file: !1829, line: 358, type: !256)
!12365 = !DILocation(line: 0, scope: !12357)
!12366 = !DILocation(line: 345, column: 29, scope: !12357)
!12367 = !DILocation(line: 346, column: 28, scope: !12357)
!12368 = !DILocation(line: 362, column: 37, scope: !12357)
!12369 = !DILocation(line: 362, column: 36, scope: !12357)
!12370 = !DILocation(line: 361, column: 2, scope: !12357)
!12371 = !DILocation(line: 365, column: 2, scope: !12357)
!12372 = !DILocation(line: 370, column: 1, scope: !12357)
!12373 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2036, file: !2036, line: 331, type: !12374, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12376)
!12374 = !DISubroutineType(types: !12375)
!12375 = !{!256, !12362}
!12376 = !{!12377}
!12377 = !DILocalVariable(name: "sym", arg: 1, scope: !12373, file: !2036, line: 331, type: !12362)
!12378 = !DILocation(line: 0, scope: !12373)
!12379 = !DILocation(line: 333, column: 21, scope: !12373)
!12380 = !DILocation(line: 333, column: 2, scope: !12373)
!12381 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12382, file: !12382, line: 155, type: !12383, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12385)
!12382 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12383 = !DISubroutineType(types: !12384)
!12384 = !{null, !1921}
!12385 = !{!12386}
!12386 = !DILocalVariable(name: "thread", arg: 1, scope: !12381, file: !12382, line: 155, type: !1921)
!12387 = !DILocation(line: 0, scope: !12381)
!12388 = !DILocation(line: 157, column: 15, scope: !12381)
!12389 = !DILocation(line: 157, column: 28, scope: !12381)
!12390 = !DILocation(line: 158, column: 1, scope: !12381)
!12391 = distinct !DISubprogram(name: "z_cstart", scope: !1829, file: !1829, line: 501, type: !3113, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12392)
!12392 = !{!12393}
!12393 = !DILocalVariable(name: "dummy_thread", scope: !12391, file: !1829, line: 518, type: !1922)
!12394 = !DILocation(line: 507, column: 2, scope: !12391)
!12395 = !DILocation(line: 43, column: 14, scope: !12396, inlinedAt: !12400)
!12396 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12397, file: !12397, line: 40, type: !3113, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12398)
!12397 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12398 = !{!12399}
!12399 = !DILocalVariable(name: "msp", scope: !12396, file: !12397, line: 42, type: !162)
!12400 = distinct !DILocation(line: 44, column: 2, scope: !12401, inlinedAt: !12403)
!12401 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12402, file: !12402, line: 42, type: !3113, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !250)
!12402 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12403 = distinct !DILocation(line: 510, column: 2, scope: !12391)
!12404 = !DILocation(line: 43, column: 3, scope: !12396, inlinedAt: !12400)
!12405 = !DILocation(line: 43, column: 60, scope: !12396, inlinedAt: !12400)
!12406 = !DILocation(line: 0, scope: !12396, inlinedAt: !12400)
!12407 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12408, file: !6053, line: 1153, type: !162)
!12408 = distinct !DISubprogram(name: "__set_MSP", scope: !6053, file: !6053, line: 1153, type: !6144, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12409)
!12409 = !{!12407}
!12410 = !DILocation(line: 0, scope: !12408, inlinedAt: !12411)
!12411 = distinct !DILocation(line: 46, column: 2, scope: !12396, inlinedAt: !12400)
!12412 = !DILocation(line: 1155, column: 3, scope: !12408, inlinedAt: !12411)
!12413 = !{i64 2846945}
!12414 = !DILocation(line: 62, column: 11, scope: !12396, inlinedAt: !12400)
!12415 = !DILocation(line: 102, column: 2, scope: !12416, inlinedAt: !12417)
!12416 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6847, file: !6847, line: 97, type: !3113, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !250)
!12417 = distinct !DILocation(line: 45, column: 2, scope: !12401, inlinedAt: !12403)
!12418 = !DILocation(line: 108, column: 2, scope: !12416, inlinedAt: !12417)
!12419 = !DILocation(line: 112, column: 2, scope: !12416, inlinedAt: !12417)
!12420 = !DILocation(line: 113, column: 2, scope: !12416, inlinedAt: !12417)
!12421 = !DILocation(line: 114, column: 2, scope: !12416, inlinedAt: !12417)
!12422 = !DILocation(line: 116, column: 2, scope: !12416, inlinedAt: !12417)
!12423 = !DILocation(line: 123, column: 13, scope: !12416, inlinedAt: !12417)
!12424 = !DILocation(line: 46, column: 2, scope: !12401, inlinedAt: !12403)
!12425 = !DILocation(line: 47, column: 2, scope: !12401, inlinedAt: !12403)
!12426 = !DILocation(line: 174, column: 12, scope: !12427, inlinedAt: !12428)
!12427 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6847, file: !6847, line: 169, type: !3113, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !250)
!12428 = distinct !DILocation(line: 48, column: 2, scope: !12401, inlinedAt: !12403)
!12429 = !DILocation(line: 179, column: 12, scope: !12427, inlinedAt: !12428)
!12430 = !DILocation(line: 50, column: 2, scope: !12401, inlinedAt: !12403)
!12431 = !DILocation(line: 57, column: 2, scope: !12401, inlinedAt: !12403)
!12432 = !DILocation(line: 518, column: 2, scope: !12391)
!12433 = !DILocation(line: 518, column: 18, scope: !12391)
!12434 = !DILocation(line: 520, column: 2, scope: !12391)
!12435 = !DILocation(line: 523, column: 2, scope: !12391)
!12436 = !DILocation(line: 526, column: 2, scope: !12391)
!12437 = !DILocation(line: 527, column: 2, scope: !12391)
!12438 = !DILocation(line: 543, column: 24, scope: !12391)
!12439 = !DILocation(line: 543, column: 2, scope: !12391)
!12440 = !DILocation(line: 0, scope: !2055)
!12441 = !DILocation(line: 246, column: 15, scope: !2073)
!12442 = !DILocation(line: 246, column: 36, scope: !2072)
!12443 = !DILocation(line: 246, column: 2, scope: !2073)
!12444 = !DILocation(line: 247, column: 37, scope: !2071)
!12445 = !DILocation(line: 0, scope: !2071)
!12446 = !DILocation(line: 248, column: 19, scope: !2071)
!12447 = !DILocation(line: 248, column: 12, scope: !2071)
!12448 = !DILocation(line: 250, column: 11, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !2071, file: !1829, line: 250, column: 7)
!12450 = !DILocation(line: 250, column: 7, scope: !2071)
!12451 = !DILocation(line: 254, column: 11, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12453, file: !1829, line: 254, column: 8)
!12453 = distinct !DILexicalBlock(scope: !12449, file: !1829, line: 250, column: 20)
!12454 = !DILocation(line: 254, column: 8, scope: !12453)
!12455 = !DILocation(line: 255, column: 9, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12452, file: !1829, line: 254, column: 17)
!12457 = !DILocation(line: 258, column: 9, scope: !12456)
!12458 = !DILocation(line: 261, column: 28, scope: !12456)
!12459 = !DILocation(line: 261, column: 10, scope: !12456)
!12460 = !DILocation(line: 261, column: 17, scope: !12456)
!12461 = !DILocation(line: 261, column: 26, scope: !12456)
!12462 = !DILocation(line: 262, column: 4, scope: !12456)
!12463 = !DILocation(line: 263, column: 9, scope: !12453)
!12464 = !DILocation(line: 263, column: 16, scope: !12453)
!12465 = !DILocation(line: 263, column: 28, scope: !12453)
!12466 = !DILocation(line: 264, column: 3, scope: !12453)
!12467 = !DILocation(line: 246, column: 60, scope: !2072)
!12468 = distinct !{!12468, !12443, !12469}
!12469 = !DILocation(line: 265, column: 2, scope: !2073)
!12470 = !DILocation(line: 266, column: 1, scope: !2055)
!12471 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6087, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12472)
!12472 = !{!12473, !12474}
!12473 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12471, file: !497, line: 1814, type: !733)
!12474 = !DILocalVariable(name: "priority", arg: 2, scope: !12471, file: !497, line: 1814, type: !162)
!12475 = !DILocation(line: 0, scope: !12471)
!12476 = !DILocation(line: 1822, column: 48, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !497, line: 1821, column: 3)
!12478 = distinct !DILexicalBlock(scope: !12471, file: !497, line: 1816, column: 7)
!12479 = !DILocation(line: 1822, column: 32, scope: !12477)
!12480 = !DILocation(line: 1822, column: 40, scope: !12477)
!12481 = !DILocation(line: 1822, column: 5, scope: !12477)
!12482 = !DILocation(line: 1822, column: 46, scope: !12477)
!12483 = !DILocation(line: 1824, column: 1, scope: !12471)
!12484 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12402, file: !12402, line: 32, type: !3113, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!12485 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12486, file: !12486, line: 215, type: !12383, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12487)
!12486 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12487 = !{!12488}
!12488 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12485, file: !12486, line: 215, type: !1921)
!12489 = !DILocation(line: 0, scope: !12485)
!12490 = !DILocation(line: 217, column: 21, scope: !12485)
!12491 = !DILocation(line: 217, column: 34, scope: !12485)
!12492 = !DILocation(line: 221, column: 21, scope: !12485)
!12493 = !DILocation(line: 221, column: 34, scope: !12485)
!12494 = !DILocation(line: 223, column: 27, scope: !12485)
!12495 = !DILocation(line: 223, column: 33, scope: !12485)
!12496 = !DILocation(line: 224, column: 27, scope: !12485)
!12497 = !DILocation(line: 224, column: 32, scope: !12485)
!12498 = !DILocation(line: 232, column: 16, scope: !12485)
!12499 = !DILocation(line: 232, column: 30, scope: !12485)
!12500 = !DILocation(line: 239, column: 24, scope: !12485)
!12501 = !DILocation(line: 240, column: 1, scope: !12485)
!12502 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1829, file: !1829, line: 399, type: !12503, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12505)
!12503 = !DISubroutineType(types: !12504)
!12504 = !{!256}
!12505 = !{!12506}
!12506 = !DILocalVariable(name: "stack_ptr", scope: !12502, file: !1829, line: 401, type: !256)
!12507 = !DILocation(line: 404, column: 2, scope: !12502)
!12508 = !DILocation(line: 416, column: 24, scope: !12502)
!12509 = !DILocation(line: 418, column: 14, scope: !12502)
!12510 = !DILocation(line: 0, scope: !12502)
!12511 = !DILocation(line: 423, column: 2, scope: !12502)
!12512 = !DILocation(line: 424, column: 2, scope: !12502)
!12513 = !DILocation(line: 426, column: 2, scope: !12502)
!12514 = !DILocation(line: 428, column: 2, scope: !12502)
!12515 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1829, file: !1829, line: 432, type: !3330, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12516)
!12516 = !{!12517}
!12517 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12515, file: !1829, line: 432, type: !256)
!12518 = !DILocation(line: 0, scope: !12515)
!12519 = !DILocation(line: 435, column: 2, scope: !12515)
!12520 = !DILocation(line: 445, column: 2, scope: !12515)
!12521 = distinct !DISubprogram(name: "bg_thread_main", scope: !1829, file: !1829, line: 277, type: !3656, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12522)
!12522 = !{!12523, !12524, !12525}
!12523 = !DILocalVariable(name: "unused1", arg: 1, scope: !12521, file: !1829, line: 277, type: !102)
!12524 = !DILocalVariable(name: "unused2", arg: 2, scope: !12521, file: !1829, line: 277, type: !102)
!12525 = !DILocalVariable(name: "unused3", arg: 3, scope: !12521, file: !1829, line: 277, type: !102)
!12526 = !DILocation(line: 0, scope: !12521)
!12527 = !DILocation(line: 291, column: 20, scope: !12521)
!12528 = !DILocation(line: 293, column: 2, scope: !12521)
!12529 = !DILocation(line: 297, column: 2, scope: !12521)
!12530 = !DILocation(line: 305, column: 2, scope: !12521)
!12531 = !DILocation(line: 307, column: 2, scope: !12521)
!12532 = !DILocation(line: 330, column: 8, scope: !12521)
!12533 = !DILocation(line: 333, column: 34, scope: !12521)
!12534 = !DILocation(line: 339, column: 1, scope: !12521)
!12535 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2084, file: !2084, line: 45, type: !12536, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12544)
!12536 = !DISubroutineType(types: !12537)
!12537 = !{null, !12538, !102}
!12538 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !224, line: 103, baseType: !12539)
!12539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12540, size: 32)
!12540 = !DISubroutineType(types: !12541)
!12541 = !{null, !12542, !102}
!12542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12543, size: 32)
!12543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2089)
!12544 = !{!12545, !12546}
!12545 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12535, file: !2084, line: 45, type: !12538)
!12546 = !DILocalVariable(name: "user_data", arg: 2, scope: !12535, file: !2084, line: 45, type: !102)
!12547 = !DILocation(line: 0, scope: !12535)
!12548 = !DILocation(line: 71, column: 1, scope: !12535)
!12549 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2084, file: !2084, line: 73, type: !12536, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12550)
!12550 = !{!12551, !12552}
!12551 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12549, file: !2084, line: 73, type: !12538)
!12552 = !DILocalVariable(name: "user_data", arg: 2, scope: !12549, file: !2084, line: 73, type: !102)
!12553 = !DILocation(line: 0, scope: !12549)
!12554 = !DILocation(line: 95, column: 1, scope: !12549)
!12555 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2084, file: !2084, line: 97, type: !6848, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !250)
!12556 = !DILocation(line: 1031, column: 3, scope: !12557, inlinedAt: !12560)
!12557 = distinct !DISubprogram(name: "__get_IPSR", scope: !6053, file: !6053, line: 1027, type: !6134, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12558)
!12558 = !{!12559}
!12559 = !DILocalVariable(name: "result", scope: !12557, file: !6053, line: 1029, type: !162)
!12560 = distinct !DILocation(line: 48, column: 10, scope: !12561, inlinedAt: !12562)
!12561 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6847, file: !6847, line: 46, type: !6848, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !250)
!12562 = distinct !DILocation(line: 99, column: 9, scope: !12555)
!12563 = !{i64 2852596}
!12564 = !DILocation(line: 0, scope: !12557, inlinedAt: !12560)
!12565 = !DILocation(line: 48, column: 9, scope: !12561, inlinedAt: !12562)
!12566 = !DILocation(line: 99, column: 2, scope: !12555)
!12567 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2084, file: !2084, line: 106, type: !3113, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !250)
!12568 = !DILocation(line: 108, column: 2, scope: !12567)
!12569 = !DILocation(line: 108, column: 17, scope: !12567)
!12570 = !DILocation(line: 108, column: 30, scope: !12567)
!12571 = !DILocation(line: 109, column: 1, scope: !12567)
!12572 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2084, file: !2084, line: 116, type: !3113, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !250)
!12573 = !DILocation(line: 118, column: 2, scope: !12572)
!12574 = !DILocation(line: 118, column: 17, scope: !12572)
!12575 = !DILocation(line: 118, column: 30, scope: !12572)
!12576 = !DILocation(line: 119, column: 1, scope: !12572)
!12577 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2084, file: !2084, line: 126, type: !6848, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !250)
!12578 = !DILocation(line: 128, column: 10, scope: !12577)
!12579 = !DILocation(line: 128, column: 25, scope: !12577)
!12580 = !DILocation(line: 128, column: 38, scope: !12577)
!12581 = !DILocation(line: 128, column: 53, scope: !12577)
!12582 = !DILocation(line: 128, column: 2, scope: !12577)
!12583 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2084, file: !2084, line: 187, type: !12584, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12586)
!12584 = !DISubroutineType(types: !12585)
!12585 = !{!107, !2088, !123}
!12586 = !{!12587, !12588}
!12587 = !DILocalVariable(name: "thread", arg: 1, scope: !12583, file: !2084, line: 187, type: !2088)
!12588 = !DILocalVariable(name: "value", arg: 2, scope: !12583, file: !2084, line: 187, type: !123)
!12589 = !DILocation(line: 0, scope: !12583)
!12590 = !DILocation(line: 206, column: 2, scope: !12583)
!12591 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2084, file: !2084, line: 238, type: !12592, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12594)
!12592 = !DISubroutineType(types: !12593)
!12593 = !{!123, !2088}
!12594 = !{!12595}
!12595 = !DILocalVariable(name: "thread", arg: 1, scope: !12591, file: !2084, line: 238, type: !2088)
!12596 = !DILocation(line: 0, scope: !12591)
!12597 = !DILocation(line: 244, column: 2, scope: !12591)
!12598 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2084, file: !2084, line: 248, type: !12599, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12601)
!12599 = !DISubroutineType(types: !12600)
!12600 = !{!107, !2087, !256, !252}
!12601 = !{!12602, !12603, !12604}
!12602 = !DILocalVariable(name: "thread", arg: 1, scope: !12598, file: !2084, line: 248, type: !2087)
!12603 = !DILocalVariable(name: "buf", arg: 2, scope: !12598, file: !2084, line: 248, type: !256)
!12604 = !DILocalVariable(name: "size", arg: 3, scope: !12598, file: !2084, line: 248, type: !252)
!12605 = !DILocation(line: 0, scope: !12598)
!12606 = !DILocation(line: 257, column: 2, scope: !12598)
!12607 = !DILocation(line: 0, scope: !2083)
!12608 = !DILocation(line: 281, column: 11, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !2083, file: !2084, line: 281, column: 6)
!12610 = !DILocation(line: 281, column: 20, scope: !12609)
!12611 = !DILocation(line: 275, column: 45, scope: !2083)
!12612 = !DILocation(line: 285, column: 10, scope: !2083)
!12613 = !DILocation(line: 0, scope: !2204)
!12614 = !DILocation(line: 293, column: 39, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !2204, file: !2084, line: 293, column: 2)
!12616 = !DILocation(line: 293, column: 2, scope: !2204)
!12617 = !DILocation(line: 273, column: 14, scope: !2083)
!12618 = !DILocation(line: 309, column: 2, scope: !2083)
!12619 = !DILocation(line: 309, column: 11, scope: !2083)
!12620 = !DILocation(line: 311, column: 2, scope: !2083)
!12621 = !DILocation(line: 293, column: 26, scope: !12615)
!12622 = !DILocation(line: 294, column: 9, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12615, file: !2084, line: 293, column: 54)
!12624 = !DILocation(line: 295, column: 21, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12623, file: !2084, line: 295, column: 7)
!12626 = !DILocation(line: 295, column: 28, scope: !12625)
!12627 = !DILocation(line: 295, column: 7, scope: !12623)
!12628 = !DILocation(line: 299, column: 25, scope: !12623)
!12629 = !DILocation(line: 299, column: 41, scope: !12623)
!12630 = !DILocation(line: 300, column: 7, scope: !12623)
!12631 = !DILocation(line: 300, column: 26, scope: !12623)
!12632 = !DILocation(line: 299, column: 10, scope: !12623)
!12633 = !DILocation(line: 299, column: 7, scope: !12623)
!12634 = !DILocation(line: 302, column: 16, scope: !12623)
!12635 = !DILocation(line: 304, column: 20, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12623, file: !2084, line: 304, column: 7)
!12637 = !DILocation(line: 304, column: 7, scope: !12623)
!12638 = !DILocation(line: 305, column: 26, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12636, file: !2084, line: 304, column: 26)
!12640 = !DILocation(line: 305, column: 42, scope: !12639)
!12641 = !DILocation(line: 305, column: 11, scope: !12639)
!12642 = !DILocation(line: 305, column: 8, scope: !12639)
!12643 = !DILocation(line: 306, column: 3, scope: !12639)
!12644 = !DILocation(line: 293, column: 50, scope: !12615)
!12645 = !DILocation(line: 312, column: 1, scope: !2083)
!12646 = distinct !DISubprogram(name: "copy_bytes", scope: !2084, file: !2084, line: 261, type: !12647, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12649)
!12647 = !DISubroutineType(types: !12648)
!12648 = !{!252, !256, !252, !123, !252}
!12649 = !{!12650, !12651, !12652, !12653, !12654}
!12650 = !DILocalVariable(name: "dest", arg: 1, scope: !12646, file: !2084, line: 261, type: !256)
!12651 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12646, file: !2084, line: 261, type: !252)
!12652 = !DILocalVariable(name: "src", arg: 3, scope: !12646, file: !2084, line: 261, type: !123)
!12653 = !DILocalVariable(name: "src_size", arg: 4, scope: !12646, file: !2084, line: 261, type: !252)
!12654 = !DILocalVariable(name: "bytes_to_copy", scope: !12646, file: !2084, line: 263, type: !252)
!12655 = !DILocation(line: 0, scope: !12646)
!12656 = !DILocation(line: 265, column: 18, scope: !12646)
!12657 = !DILocation(line: 266, column: 2, scope: !12646)
!12658 = !DILocation(line: 268, column: 2, scope: !12646)
!12659 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2084, file: !2084, line: 383, type: !12660, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12662)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{null, !2088}
!12662 = !{!12663}
!12663 = !DILocalVariable(name: "thread", arg: 1, scope: !12659, file: !2084, line: 383, type: !2088)
!12664 = !DILocation(line: 0, scope: !12659)
!12665 = !DILocation(line: 387, column: 2, scope: !12659)
!12666 = !DILocation(line: 388, column: 1, scope: !12659)
!12667 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2084, file: !2084, line: 528, type: !12668, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12675)
!12668 = !DISubroutineType(types: !12669)
!12669 = !{!256, !2088, !12670, !252, !3653, !102, !102, !102, !107, !162, !123}
!12670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12671, size: 32)
!12671 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3654, line: 44, baseType: !12672)
!12672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2036, line: 47, size: 8, elements: !12673)
!12673 = !{!12674}
!12674 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12672, file: !2036, line: 48, baseType: !125, size: 8)
!12675 = !{!12676, !12677, !12678, !12679, !12680, !12681, !12682, !12683, !12684, !12685, !12686}
!12676 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12667, file: !2084, line: 528, type: !2088)
!12677 = !DILocalVariable(name: "stack", arg: 2, scope: !12667, file: !2084, line: 529, type: !12670)
!12678 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12667, file: !2084, line: 529, type: !252)
!12679 = !DILocalVariable(name: "entry", arg: 4, scope: !12667, file: !2084, line: 530, type: !3653)
!12680 = !DILocalVariable(name: "p1", arg: 5, scope: !12667, file: !2084, line: 531, type: !102)
!12681 = !DILocalVariable(name: "p2", arg: 6, scope: !12667, file: !2084, line: 531, type: !102)
!12682 = !DILocalVariable(name: "p3", arg: 7, scope: !12667, file: !2084, line: 531, type: !102)
!12683 = !DILocalVariable(name: "prio", arg: 8, scope: !12667, file: !2084, line: 532, type: !107)
!12684 = !DILocalVariable(name: "options", arg: 9, scope: !12667, file: !2084, line: 532, type: !162)
!12685 = !DILocalVariable(name: "name", arg: 10, scope: !12667, file: !2084, line: 532, type: !123)
!12686 = !DILocalVariable(name: "stack_ptr", scope: !12667, file: !2084, line: 534, type: !256)
!12687 = !DILocation(line: 0, scope: !12667)
!12688 = !DILocation(line: 550, column: 28, scope: !12667)
!12689 = !DILocation(line: 550, column: 2, scope: !12667)
!12690 = !DILocation(line: 553, column: 34, scope: !12667)
!12691 = !DILocation(line: 553, column: 2, scope: !12667)
!12692 = !DILocation(line: 554, column: 14, scope: !12667)
!12693 = !DILocation(line: 564, column: 2, scope: !12667)
!12694 = !DILocation(line: 567, column: 14, scope: !12667)
!12695 = !DILocation(line: 567, column: 24, scope: !12667)
!12696 = !DILocation(line: 612, column: 7, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12667, file: !2084, line: 612, column: 6)
!12698 = !DILocation(line: 612, column: 6, scope: !12667)
!12699 = !DILocation(line: 627, column: 40, scope: !12667)
!12700 = !DILocation(line: 637, column: 2, scope: !12667)
!12701 = !DILocation(line: 613, column: 15, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12697, file: !2084, line: 612, column: 17)
!12703 = !DILocation(line: 613, column: 29, scope: !12702)
!12704 = !DILocation(line: 638, column: 1, scope: !12667)
!12705 = distinct !DISubprogram(name: "z_waitq_init", scope: !12706, file: !12706, line: 47, type: !12707, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12709)
!12706 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12707 = !DISubroutineType(types: !12708)
!12708 = !{null, !2119}
!12709 = !{!12710}
!12710 = !DILocalVariable(name: "w", arg: 1, scope: !12705, file: !12706, line: 47, type: !2119)
!12711 = !DILocation(line: 0, scope: !12705)
!12712 = !DILocation(line: 49, column: 21, scope: !12705)
!12713 = !DILocation(line: 49, column: 2, scope: !12705)
!12714 = !DILocation(line: 50, column: 1, scope: !12705)
!12715 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2084, file: !2084, line: 791, type: !12716, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12719)
!12716 = !DISubroutineType(types: !12717)
!12717 = !{null, !12718, !107, !162, !32}
!12718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!12719 = !{!12720, !12721, !12722, !12723}
!12720 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12715, file: !2084, line: 791, type: !12718)
!12721 = !DILocalVariable(name: "priority", arg: 2, scope: !12715, file: !2084, line: 791, type: !107)
!12722 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12715, file: !2084, line: 792, type: !162)
!12723 = !DILocalVariable(name: "options", arg: 4, scope: !12715, file: !2084, line: 792, type: !32)
!12724 = !DILocation(line: 0, scope: !12715)
!12725 = !DILocation(line: 795, column: 15, scope: !12715)
!12726 = !DILocation(line: 795, column: 25, scope: !12715)
!12727 = !DILocation(line: 796, column: 30, scope: !12715)
!12728 = !DILocation(line: 796, column: 15, scope: !12715)
!12729 = !DILocation(line: 796, column: 28, scope: !12715)
!12730 = !DILocation(line: 797, column: 30, scope: !12715)
!12731 = !DILocation(line: 797, column: 15, scope: !12715)
!12732 = !DILocation(line: 797, column: 28, scope: !12715)
!12733 = !DILocation(line: 799, column: 22, scope: !12715)
!12734 = !DILocation(line: 799, column: 15, scope: !12715)
!12735 = !DILocation(line: 799, column: 20, scope: !12715)
!12736 = !DILocation(line: 801, column: 15, scope: !12715)
!12737 = !DILocation(line: 801, column: 28, scope: !12715)
!12738 = !DILocation(line: 814, column: 2, scope: !12715)
!12739 = !DILocation(line: 815, column: 1, scope: !12715)
!12740 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2084, file: !2084, line: 449, type: !12741, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12743)
!12741 = !DISubroutineType(types: !12742)
!12742 = !{!256, !2088, !12670, !252}
!12743 = !{!12744, !12745, !12746, !12747, !12748, !12749, !12750, !12751}
!12744 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12740, file: !2084, line: 449, type: !2088)
!12745 = !DILocalVariable(name: "stack", arg: 2, scope: !12740, file: !2084, line: 450, type: !12670)
!12746 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12740, file: !2084, line: 450, type: !252)
!12747 = !DILocalVariable(name: "stack_obj_size", scope: !12740, file: !2084, line: 452, type: !252)
!12748 = !DILocalVariable(name: "stack_buf_size", scope: !12740, file: !2084, line: 452, type: !252)
!12749 = !DILocalVariable(name: "stack_ptr", scope: !12740, file: !2084, line: 453, type: !256)
!12750 = !DILocalVariable(name: "stack_buf_start", scope: !12740, file: !2084, line: 453, type: !256)
!12751 = !DILocalVariable(name: "delta", scope: !12740, file: !2084, line: 454, type: !252)
!12752 = !DILocation(line: 0, scope: !12740)
!12753 = !DILocation(line: 465, column: 20, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12740, file: !2084, line: 463, column: 2)
!12755 = !DILocation(line: 466, column: 21, scope: !12754)
!12756 = !DILocation(line: 473, column: 28, scope: !12740)
!12757 = !DILocation(line: 514, column: 33, scope: !12740)
!12758 = !DILocation(line: 514, column: 25, scope: !12740)
!12759 = !DILocation(line: 514, column: 31, scope: !12740)
!12760 = !DILocation(line: 515, column: 25, scope: !12740)
!12761 = !DILocation(line: 515, column: 30, scope: !12740)
!12762 = !DILocation(line: 516, column: 25, scope: !12740)
!12763 = !DILocation(line: 516, column: 31, scope: !12740)
!12764 = !DILocation(line: 520, column: 2, scope: !12740)
!12765 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2036, file: !2036, line: 331, type: !12766, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12768)
!12766 = !DISubroutineType(types: !12767)
!12767 = !{!256, !12670}
!12768 = !{!12769}
!12769 = !DILocalVariable(name: "sym", arg: 1, scope: !12765, file: !2036, line: 331, type: !12670)
!12770 = !DILocation(line: 0, scope: !12765)
!12771 = !DILocation(line: 333, column: 21, scope: !12765)
!12772 = !DILocation(line: 333, column: 2, scope: !12765)
!12773 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12774, file: !12774, line: 40, type: !12775, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12777)
!12774 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12775 = !DISubroutineType(types: !12776)
!12776 = !{null, !12718}
!12777 = !{!12778}
!12778 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12773, file: !12774, line: 40, type: !12718)
!12779 = !DILocation(line: 0, scope: !12773)
!12780 = !DILocation(line: 42, column: 31, scope: !12773)
!12781 = !DILocation(line: 42, column: 2, scope: !12773)
!12782 = !DILocation(line: 43, column: 1, scope: !12773)
!12783 = distinct !DISubprogram(name: "z_init_timeout", scope: !12774, file: !12774, line: 25, type: !2145, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12784)
!12784 = !{!12785}
!12785 = !DILocalVariable(name: "to", arg: 1, scope: !12783, file: !12774, line: 25, type: !2147)
!12786 = !DILocation(line: 0, scope: !12783)
!12787 = !DILocation(line: 27, column: 22, scope: !12783)
!12788 = !DILocation(line: 27, column: 2, scope: !12783)
!12789 = !DILocation(line: 28, column: 1, scope: !12783)
!12790 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !12791, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12793)
!12791 = !DISubroutineType(types: !12792)
!12792 = !{null, !2191}
!12793 = !{!12794}
!12794 = !DILocalVariable(name: "node", arg: 1, scope: !12790, file: !233, line: 211, type: !2191)
!12795 = !DILocation(line: 0, scope: !12790)
!12796 = !DILocation(line: 213, column: 8, scope: !12790)
!12797 = !DILocation(line: 213, column: 13, scope: !12790)
!12798 = !DILocation(line: 214, column: 8, scope: !12790)
!12799 = !DILocation(line: 214, column: 13, scope: !12790)
!12800 = !DILocation(line: 215, column: 1, scope: !12790)
!12801 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !12802, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12805)
!12802 = !DISubroutineType(types: !12803)
!12803 = !{null, !12804}
!12804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!12805 = !{!12806}
!12806 = !DILocalVariable(name: "list", arg: 1, scope: !12801, file: !233, line: 197, type: !12804)
!12807 = !DILocation(line: 0, scope: !12801)
!12808 = !DILocation(line: 199, column: 8, scope: !12801)
!12809 = !DILocation(line: 199, column: 13, scope: !12801)
!12810 = !DILocation(line: 200, column: 8, scope: !12801)
!12811 = !DILocation(line: 200, column: 13, scope: !12801)
!12812 = !DILocation(line: 201, column: 1, scope: !12801)
!12813 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2084, file: !2084, line: 641, type: !12814, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12820)
!12814 = !DISubroutineType(types: !12815)
!12815 = !{!2087, !2088, !12670, !252, !3653, !102, !102, !102, !107, !162, !12816}
!12816 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !12817)
!12817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !12818)
!12818 = !{!12819}
!12819 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12817, file: !104, line: 66, baseType: !103, size: 64)
!12820 = !{!12821, !12822, !12823, !12824, !12825, !12826, !12827, !12828, !12829, !12830}
!12821 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12813, file: !2084, line: 641, type: !2088)
!12822 = !DILocalVariable(name: "stack", arg: 2, scope: !12813, file: !2084, line: 642, type: !12670)
!12823 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12813, file: !2084, line: 643, type: !252)
!12824 = !DILocalVariable(name: "entry", arg: 4, scope: !12813, file: !2084, line: 643, type: !3653)
!12825 = !DILocalVariable(name: "p1", arg: 5, scope: !12813, file: !2084, line: 644, type: !102)
!12826 = !DILocalVariable(name: "p2", arg: 6, scope: !12813, file: !2084, line: 644, type: !102)
!12827 = !DILocalVariable(name: "p3", arg: 7, scope: !12813, file: !2084, line: 644, type: !102)
!12828 = !DILocalVariable(name: "prio", arg: 8, scope: !12813, file: !2084, line: 645, type: !107)
!12829 = !DILocalVariable(name: "options", arg: 9, scope: !12813, file: !2084, line: 645, type: !162)
!12830 = !DILocalVariable(name: "delay", arg: 10, scope: !12813, file: !2084, line: 645, type: !12816)
!12831 = !DILocation(line: 0, scope: !12813)
!12832 = !DILocation(line: 649, column: 2, scope: !12813)
!12833 = !DILocation(line: 652, column: 7, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12813, file: !2084, line: 652, column: 6)
!12835 = !DILocation(line: 652, column: 6, scope: !12813)
!12836 = !DILocation(line: 653, column: 3, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12834, file: !2084, line: 652, column: 39)
!12838 = !DILocation(line: 654, column: 2, scope: !12837)
!12839 = !DILocation(line: 656, column: 2, scope: !12813)
!12840 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2084, file: !2084, line: 401, type: !12841, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12843)
!12841 = !DISubroutineType(types: !12842)
!12842 = !{null, !2088, !12816}
!12843 = !{!12844, !12845}
!12844 = !DILocalVariable(name: "thread", arg: 1, scope: !12840, file: !2084, line: 401, type: !2088)
!12845 = !DILocalVariable(name: "delay", arg: 2, scope: !12840, file: !2084, line: 401, type: !12816)
!12846 = !DILocation(line: 0, scope: !12840)
!12847 = !DILocation(line: 404, column: 6, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12840, file: !2084, line: 404, column: 6)
!12849 = !DILocation(line: 404, column: 6, scope: !12840)
!12850 = !DILocation(line: 405, column: 3, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12848, file: !2084, line: 404, column: 38)
!12852 = !DILocation(line: 406, column: 2, scope: !12851)
!12853 = !DILocation(line: 407, column: 3, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12848, file: !2084, line: 406, column: 9)
!12855 = !DILocation(line: 413, column: 1, scope: !12840)
!12856 = distinct !DISubprogram(name: "k_thread_start", scope: !3298, file: !3298, line: 205, type: !12857, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12859)
!12857 = !DISubroutineType(types: !12858)
!12858 = !{null, !2087}
!12859 = !{!12860}
!12860 = !DILocalVariable(name: "thread", arg: 1, scope: !12856, file: !3298, line: 205, type: !2087)
!12861 = !DILocation(line: 0, scope: !12856)
!12862 = !DILocation(line: 214, column: 2, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12856, file: !3298, line: 214, column: 2)
!12864 = !{i64 2154089965}
!12865 = !DILocation(line: 215, column: 2, scope: !12856)
!12866 = !DILocation(line: 216, column: 1, scope: !12856)
!12867 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12774, file: !12774, line: 47, type: !12841, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12868)
!12868 = !{!12869, !12870}
!12869 = !DILocalVariable(name: "thread", arg: 1, scope: !12867, file: !12774, line: 47, type: !2088)
!12870 = !DILocalVariable(name: "ticks", arg: 2, scope: !12867, file: !12774, line: 47, type: !12816)
!12871 = !DILocation(line: 0, scope: !12867)
!12872 = !DILocation(line: 49, column: 30, scope: !12867)
!12873 = !DILocation(line: 49, column: 2, scope: !12867)
!12874 = !DILocation(line: 50, column: 1, scope: !12867)
!12875 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2084, file: !2084, line: 748, type: !3113, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12876)
!12876 = !{!12877, !12895}
!12877 = !DILocalVariable(name: "thread_data", scope: !12878, file: !2084, line: 750, type: !12879)
!12878 = distinct !DILexicalBlock(scope: !12875, file: !2084, line: 750, column: 2)
!12879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12880, size: 32)
!12880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !224, line: 620, size: 384, elements: !12881)
!12881 = !{!12882, !12883, !12884, !12885, !12886, !12887, !12888, !12889, !12890, !12891, !12892, !12894}
!12882 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12880, file: !224, line: 621, baseType: !2088, size: 32)
!12883 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12880, file: !224, line: 622, baseType: !12670, size: 32, offset: 32)
!12884 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12880, file: !224, line: 623, baseType: !32, size: 32, offset: 64)
!12885 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12880, file: !224, line: 624, baseType: !3653, size: 32, offset: 96)
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12880, file: !224, line: 625, baseType: !102, size: 32, offset: 128)
!12887 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12880, file: !224, line: 626, baseType: !102, size: 32, offset: 160)
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12880, file: !224, line: 627, baseType: !102, size: 32, offset: 192)
!12889 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12880, file: !224, line: 628, baseType: !107, size: 32, offset: 224)
!12890 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12880, file: !224, line: 629, baseType: !162, size: 32, offset: 256)
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12880, file: !224, line: 630, baseType: !707, size: 32, offset: 288)
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12880, file: !224, line: 631, baseType: !12893, size: 32, offset: 320)
!12893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 32)
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12880, file: !224, line: 632, baseType: !123, size: 32, offset: 352)
!12895 = !DILocalVariable(name: "thread_data", scope: !12896, file: !2084, line: 781, type: !12879)
!12896 = distinct !DILexicalBlock(scope: !12875, file: !2084, line: 781, column: 2)
!12897 = !DILocation(line: 0, scope: !12878)
!12898 = !DILocation(line: 750, column: 2, scope: !12878)
!12899 = !DILocation(line: 780, column: 2, scope: !12875)
!12900 = !DILocation(line: 0, scope: !12896)
!12901 = !DILocation(line: 781, column: 2, scope: !12896)
!12902 = !DILocation(line: 752, column: 17, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12904, file: !2084, line: 750, column: 38)
!12904 = distinct !DILexicalBlock(scope: !12878, file: !2084, line: 750, column: 2)
!12905 = !DILocation(line: 753, column: 17, scope: !12903)
!12906 = !DILocation(line: 754, column: 17, scope: !12903)
!12907 = !DILocation(line: 755, column: 17, scope: !12903)
!12908 = !DILocation(line: 756, column: 17, scope: !12903)
!12909 = !DILocation(line: 757, column: 17, scope: !12903)
!12910 = !DILocation(line: 758, column: 17, scope: !12903)
!12911 = !DILocation(line: 759, column: 17, scope: !12903)
!12912 = !DILocation(line: 760, column: 17, scope: !12903)
!12913 = !DILocation(line: 751, column: 3, scope: !12903)
!12914 = !DILocation(line: 763, column: 16, scope: !12903)
!12915 = !DILocation(line: 763, column: 29, scope: !12903)
!12916 = !DILocation(line: 763, column: 39, scope: !12903)
!12917 = !DILocation(line: 750, column: 2, scope: !12904)
!12918 = !DILocation(line: 750, column: 2, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12904, file: !2084, line: 750, column: 2)
!12920 = distinct !{!12920, !12898, !12921}
!12921 = !DILocation(line: 764, column: 2, scope: !12878)
!12922 = !DILocation(line: 787, column: 2, scope: !12875)
!12923 = !DILocation(line: 788, column: 1, scope: !12875)
!12924 = !DILocation(line: 782, column: 20, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !2084, line: 782, column: 7)
!12926 = distinct !DILexicalBlock(scope: !12927, file: !2084, line: 781, column: 38)
!12927 = distinct !DILexicalBlock(scope: !12896, file: !2084, line: 781, column: 2)
!12928 = !DILocation(line: 782, column: 31, scope: !12925)
!12929 = !DILocation(line: 782, column: 7, scope: !12926)
!12930 = !DILocation(line: 783, column: 37, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12925, file: !2084, line: 782, column: 51)
!12932 = !DILocation(line: 784, column: 10, scope: !12931)
!12933 = !DILocation(line: 783, column: 4, scope: !12931)
!12934 = !DILocation(line: 785, column: 3, scope: !12931)
!12935 = !DILocation(line: 781, column: 2, scope: !12927)
!12936 = !DILocation(line: 781, column: 2, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12927, file: !2084, line: 781, column: 2)
!12938 = distinct !{!12938, !12901, !12939}
!12939 = !DILocation(line: 786, column: 2, scope: !12896)
!12940 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12941, file: !12941, line: 403, type: !12942, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12944)
!12941 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12942 = !DISubroutineType(types: !12943)
!12943 = !{!1468, !1468}
!12944 = !{!12945}
!12945 = !DILocalVariable(name: "t", arg: 1, scope: !12940, file: !12941, line: 403, type: !1468)
!12946 = !DILocation(line: 0, scope: !12940)
!12947 = !DILocalVariable(name: "t", arg: 1, scope: !12948, file: !12941, line: 102, type: !1468)
!12948 = distinct !DISubprogram(name: "z_tmcvt", scope: !12941, file: !12941, line: 102, type: !12949, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12951)
!12949 = !DISubroutineType(types: !12950)
!12950 = !{!1468, !1468, !162, !162, !136, !136, !136, !136}
!12951 = !{!12947, !12952, !12953, !12954, !12955, !12956, !12957, !12958, !12959, !12960, !12961}
!12952 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12948, file: !12941, line: 102, type: !162)
!12953 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12948, file: !12941, line: 103, type: !162)
!12954 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12948, file: !12941, line: 103, type: !136)
!12955 = !DILocalVariable(name: "result32", arg: 5, scope: !12948, file: !12941, line: 104, type: !136)
!12956 = !DILocalVariable(name: "round_up", arg: 6, scope: !12948, file: !12941, line: 104, type: !136)
!12957 = !DILocalVariable(name: "round_off", arg: 7, scope: !12948, file: !12941, line: 105, type: !136)
!12958 = !DILocalVariable(name: "mul_ratio", scope: !12948, file: !12941, line: 107, type: !136)
!12959 = !DILocalVariable(name: "div_ratio", scope: !12948, file: !12941, line: 109, type: !136)
!12960 = !DILocalVariable(name: "off", scope: !12948, file: !12941, line: 116, type: !1468)
!12961 = !DILocalVariable(name: "rdivisor", scope: !12962, file: !12941, line: 119, type: !162)
!12962 = distinct !DILexicalBlock(scope: !12963, file: !12941, line: 118, column: 18)
!12963 = distinct !DILexicalBlock(scope: !12948, file: !12941, line: 118, column: 6)
!12964 = !DILocation(line: 0, scope: !12948, inlinedAt: !12965)
!12965 = distinct !DILocation(line: 406, column: 9, scope: !12940)
!12966 = !DILocation(line: 145, column: 13, scope: !12967, inlinedAt: !12965)
!12967 = distinct !DILexicalBlock(scope: !12968, file: !12941, line: 144, column: 10)
!12968 = distinct !DILexicalBlock(scope: !12969, file: !12941, line: 142, column: 7)
!12969 = distinct !DILexicalBlock(scope: !12970, file: !12941, line: 141, column: 24)
!12970 = distinct !DILexicalBlock(scope: !12971, file: !12941, line: 141, column: 13)
!12971 = distinct !DILexicalBlock(scope: !12948, file: !12941, line: 134, column: 6)
!12972 = !DILocation(line: 406, column: 2, scope: !12940)
!12973 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2084, file: !2084, line: 817, type: !3651, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12974)
!12974 = !{!12975, !12976, !12977, !12978}
!12975 = !DILocalVariable(name: "entry", arg: 1, scope: !12973, file: !2084, line: 817, type: !3653)
!12976 = !DILocalVariable(name: "p1", arg: 2, scope: !12973, file: !2084, line: 818, type: !102)
!12977 = !DILocalVariable(name: "p2", arg: 3, scope: !12973, file: !2084, line: 818, type: !102)
!12978 = !DILocalVariable(name: "p3", arg: 4, scope: !12973, file: !2084, line: 818, type: !102)
!12979 = !DILocation(line: 0, scope: !12973)
!12980 = !DILocation(line: 822, column: 2, scope: !12973)
!12981 = !DILocation(line: 822, column: 17, scope: !12973)
!12982 = !DILocation(line: 822, column: 30, scope: !12973)
!12983 = !DILocation(line: 823, column: 2, scope: !12973)
!12984 = !DILocation(line: 845, column: 2, scope: !12973)
!12985 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2084, file: !2084, line: 888, type: !12986, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12988)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{!107, !2088}
!12988 = !{!12989}
!12989 = !DILocalVariable(name: "thread", arg: 1, scope: !12985, file: !2084, line: 888, type: !2088)
!12990 = !DILocation(line: 0, scope: !12985)
!12991 = !DILocation(line: 893, column: 2, scope: !12985)
!12992 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2084, file: !2084, line: 897, type: !12993, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !12995)
!12993 = !DISubroutineType(types: !12994)
!12994 = !{!107, !2088, !32}
!12995 = !{!12996, !12997}
!12996 = !DILocalVariable(name: "thread", arg: 1, scope: !12992, file: !2084, line: 897, type: !2088)
!12997 = !DILocalVariable(name: "options", arg: 2, scope: !12992, file: !2084, line: 897, type: !32)
!12998 = !DILocation(line: 0, scope: !12992)
!12999 = !DILocation(line: 902, column: 2, scope: !12992)
!13000 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2084, file: !2084, line: 1072, type: !13001, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !13006)
!13001 = !DISubroutineType(types: !13002)
!13002 = !{!107, !2087, !13003}
!13003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13004, size: 32)
!13004 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !359, line: 234, baseType: !13005)
!13005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !359, line: 192, elements: !250)
!13006 = !{!13007, !13008}
!13007 = !DILocalVariable(name: "thread", arg: 1, scope: !13000, file: !2084, line: 1072, type: !2087)
!13008 = !DILocalVariable(name: "stats", arg: 2, scope: !13000, file: !2084, line: 1073, type: !13003)
!13009 = !DILocation(line: 0, scope: !13000)
!13010 = !DILocation(line: 1075, column: 14, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !13000, file: !2084, line: 1075, column: 6)
!13012 = !DILocation(line: 1075, column: 23, scope: !13011)
!13013 = !DILocation(line: 1086, column: 1, scope: !13000)
!13014 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2084, file: !2084, line: 1088, type: !13015, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2188, retainedNodes: !13017)
!13015 = !DISubroutineType(types: !13016)
!13016 = !{!107, !13003}
!13017 = !{!13018}
!13018 = !DILocalVariable(name: "stats", arg: 1, scope: !13014, file: !2084, line: 1088, type: !13003)
!13019 = !DILocation(line: 0, scope: !13014)
!13020 = !DILocation(line: 1094, column: 12, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13014, file: !2084, line: 1094, column: 6)
!13022 = !DILocation(line: 1120, column: 1, scope: !13014)
!13023 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13024, file: !13024, line: 20, type: !3113, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !250)
!13024 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13025 = !DILocation(line: 30, column: 2, scope: !13023)
!13026 = !DILocation(line: 31, column: 1, scope: !13023)
!13027 = distinct !DISubprogram(name: "idle", scope: !13024, file: !13024, line: 33, type: !3656, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !13028)
!13028 = !{!13029, !13030, !13031}
!13029 = !DILocalVariable(name: "unused1", arg: 1, scope: !13027, file: !13024, line: 33, type: !102)
!13030 = !DILocalVariable(name: "unused2", arg: 2, scope: !13027, file: !13024, line: 33, type: !102)
!13031 = !DILocalVariable(name: "unused3", arg: 3, scope: !13027, file: !13024, line: 33, type: !102)
!13032 = !DILocation(line: 0, scope: !13027)
!13033 = !DILocation(line: 41, column: 2, scope: !13027)
!13034 = !DILocation(line: 55, column: 2, scope: !13035, inlinedAt: !13039)
!13035 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !13036)
!13036 = !{!13037, !13038}
!13037 = !DILocalVariable(name: "key", scope: !13035, file: !5879, line: 44, type: !32)
!13038 = !DILocalVariable(name: "tmp", scope: !13035, file: !5879, line: 53, type: !32)
!13039 = distinct !DILocation(line: 62, column: 10, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13027, file: !13024, line: 41, column: 15)
!13041 = !{i64 1948043}
!13042 = !DILocation(line: 0, scope: !13035, inlinedAt: !13039)
!13043 = !DILocation(line: 86, column: 3, scope: !13040)
!13044 = distinct !{!13044, !13033, !13045}
!13045 = !DILocation(line: 105, column: 2, scope: !13027)
!13046 = distinct !DISubprogram(name: "k_cpu_idle", scope: !224, file: !224, line: 5627, type: !3113, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !250)
!13047 = !DILocation(line: 5629, column: 2, scope: !13046)
!13048 = !DILocation(line: 5630, column: 1, scope: !13046)
!13049 = !DISubprogram(name: "arch_cpu_idle", scope: !3654, file: !3654, line: 167, type: !3113, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13050 = distinct !DISubprogram(name: "k_msgq_init", scope: !13051, file: !13051, line: 35, type: !13052, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13067)
!13051 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13052 = !DISubroutineType(types: !13053)
!13053 = !{null, !13054, !256, !252, !162}
!13054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13055, size: 32)
!13055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !13056)
!13056 = !{!13057, !13058, !13059, !13060, !13061, !13062, !13063, !13064, !13065, !13066}
!13057 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13055, file: !224, line: 4206, baseType: !3028, size: 64)
!13058 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13055, file: !224, line: 4208, baseType: !3090, offset: 64)
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13055, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!13060 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13055, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!13061 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13055, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!13062 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13055, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!13063 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13055, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!13064 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13055, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!13065 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13055, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13055, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!13067 = !{!13068, !13069, !13070, !13071}
!13068 = !DILocalVariable(name: "msgq", arg: 1, scope: !13050, file: !13051, line: 35, type: !13054)
!13069 = !DILocalVariable(name: "buffer", arg: 2, scope: !13050, file: !13051, line: 35, type: !256)
!13070 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13050, file: !13051, line: 35, type: !252)
!13071 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13050, file: !13051, line: 36, type: !162)
!13072 = !DILocation(line: 0, scope: !13050)
!13073 = !DILocation(line: 38, column: 8, scope: !13050)
!13074 = !DILocation(line: 38, column: 17, scope: !13050)
!13075 = !DILocation(line: 39, column: 8, scope: !13050)
!13076 = !DILocation(line: 39, column: 17, scope: !13050)
!13077 = !DILocation(line: 40, column: 8, scope: !13050)
!13078 = !DILocation(line: 40, column: 21, scope: !13050)
!13079 = !DILocation(line: 41, column: 40, scope: !13050)
!13080 = !DILocation(line: 41, column: 28, scope: !13050)
!13081 = !DILocation(line: 41, column: 8, scope: !13050)
!13082 = !DILocation(line: 41, column: 19, scope: !13050)
!13083 = !DILocation(line: 42, column: 8, scope: !13050)
!13084 = !DILocation(line: 42, column: 17, scope: !13050)
!13085 = !DILocation(line: 43, column: 8, scope: !13050)
!13086 = !DILocation(line: 43, column: 18, scope: !13050)
!13087 = !DILocation(line: 44, column: 8, scope: !13050)
!13088 = !DILocation(line: 44, column: 18, scope: !13050)
!13089 = !DILocation(line: 45, column: 8, scope: !13050)
!13090 = !DILocation(line: 45, column: 14, scope: !13050)
!13091 = !DILocation(line: 46, column: 22, scope: !13050)
!13092 = !DILocation(line: 46, column: 2, scope: !13050)
!13093 = !DILocation(line: 55, column: 1, scope: !13050)
!13094 = distinct !DISubprogram(name: "z_waitq_init", scope: !12706, file: !12706, line: 47, type: !13095, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13097)
!13095 = !DISubroutineType(types: !13096)
!13096 = !{null, !3027}
!13097 = !{!13098}
!13098 = !DILocalVariable(name: "w", arg: 1, scope: !13094, file: !12706, line: 47, type: !3027)
!13099 = !DILocation(line: 0, scope: !13094)
!13100 = !DILocation(line: 49, column: 21, scope: !13094)
!13101 = !DILocation(line: 49, column: 2, scope: !13094)
!13102 = !DILocation(line: 50, column: 1, scope: !13094)
!13103 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !13104, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13107)
!13104 = !DISubroutineType(types: !13105)
!13105 = !{null, !13106}
!13106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 32)
!13107 = !{!13108}
!13108 = !DILocalVariable(name: "list", arg: 1, scope: !13103, file: !233, line: 197, type: !13106)
!13109 = !DILocation(line: 0, scope: !13103)
!13110 = !DILocation(line: 199, column: 8, scope: !13103)
!13111 = !DILocation(line: 199, column: 13, scope: !13103)
!13112 = !DILocation(line: 200, column: 8, scope: !13103)
!13113 = !DILocation(line: 200, column: 13, scope: !13103)
!13114 = !DILocation(line: 201, column: 1, scope: !13103)
!13115 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13051, file: !13051, line: 57, type: !13116, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13118)
!13116 = !DISubroutineType(types: !13117)
!13117 = !{!107, !13054, !252, !162}
!13118 = !{!13119, !13120, !13121, !13122, !13123, !13124}
!13119 = !DILocalVariable(name: "msgq", arg: 1, scope: !13115, file: !13051, line: 57, type: !13054)
!13120 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13115, file: !13051, line: 57, type: !252)
!13121 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13115, file: !13051, line: 58, type: !162)
!13122 = !DILocalVariable(name: "buffer", scope: !13115, file: !13051, line: 60, type: !102)
!13123 = !DILocalVariable(name: "ret", scope: !13115, file: !13051, line: 61, type: !107)
!13124 = !DILocalVariable(name: "total_size", scope: !13115, file: !13051, line: 62, type: !252)
!13125 = !DILocation(line: 0, scope: !13115)
!13126 = !DILocation(line: 62, column: 2, scope: !13115)
!13127 = !DILocation(line: 66, column: 6, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13115, file: !13051, line: 66, column: 6)
!13129 = !DILocation(line: 66, column: 6, scope: !13115)
!13130 = !DILocation(line: 69, column: 28, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13128, file: !13051, line: 68, column: 9)
!13132 = !DILocation(line: 69, column: 12, scope: !13131)
!13133 = !DILocation(line: 70, column: 14, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13131, file: !13051, line: 70, column: 7)
!13135 = !DILocation(line: 70, column: 7, scope: !13131)
!13136 = !DILocation(line: 71, column: 4, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13134, file: !13051, line: 70, column: 23)
!13138 = !DILocation(line: 72, column: 10, scope: !13137)
!13139 = !DILocation(line: 72, column: 16, scope: !13137)
!13140 = !DILocation(line: 74, column: 3, scope: !13137)
!13141 = !DILocation(line: 0, scope: !13128)
!13142 = !DILocation(line: 82, column: 1, scope: !13115)
!13143 = !DILocation(line: 81, column: 2, scope: !13115)
!13144 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13145, file: !13145, line: 105, type: !13146, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13148)
!13145 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13146 = !DISubroutineType(types: !13147)
!13147 = !{!136, !252, !252, !2465}
!13148 = !{!13149, !13150, !13151}
!13149 = !DILocalVariable(name: "a", arg: 1, scope: !13144, file: !13145, line: 105, type: !252)
!13150 = !DILocalVariable(name: "b", arg: 2, scope: !13144, file: !13145, line: 105, type: !252)
!13151 = !DILocalVariable(name: "result", arg: 3, scope: !13144, file: !13145, line: 105, type: !2465)
!13152 = !DILocation(line: 0, scope: !13144)
!13153 = !DILocation(line: 107, column: 9, scope: !13144)
!13154 = !DILocation(line: 107, column: 2, scope: !13144)
!13155 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13156, file: !13156, line: 102, type: !13157, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13158)
!13156 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13157 = !DISubroutineType(types: !2971)
!13158 = !{!13159}
!13159 = !DILocalVariable(name: "size", arg: 1, scope: !13155, file: !13156, line: 102, type: !252)
!13160 = !DILocation(line: 0, scope: !13155)
!13161 = !DILocation(line: 104, column: 9, scope: !13155)
!13162 = !DILocation(line: 104, column: 2, scope: !13155)
!13163 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13156, file: !13156, line: 87, type: !13164, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13164 = !DISubroutineType(types: !13165)
!13165 = !{!102, !252, !252}
!13166 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13051, file: !13051, line: 95, type: !13167, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13169)
!13167 = !DISubroutineType(types: !13168)
!13168 = !{!107, !13054}
!13169 = !{!13170}
!13170 = !DILocalVariable(name: "msgq", arg: 1, scope: !13166, file: !13051, line: 95, type: !13054)
!13171 = !DILocation(line: 0, scope: !13166)
!13172 = !DILocation(line: 99, column: 2, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13166, file: !13051, line: 99, column: 2)
!13174 = !DILocation(line: 99, column: 2, scope: !13166)
!13175 = !DILocation(line: 105, column: 13, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13166, file: !13051, line: 105, column: 6)
!13177 = !DILocation(line: 105, column: 19, scope: !13176)
!13178 = !DILocation(line: 105, column: 40, scope: !13176)
!13179 = !DILocation(line: 105, column: 6, scope: !13166)
!13180 = !DILocation(line: 106, column: 16, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13176, file: !13051, line: 105, column: 47)
!13182 = !DILocation(line: 106, column: 3, scope: !13181)
!13183 = !DILocation(line: 107, column: 15, scope: !13181)
!13184 = !DILocation(line: 108, column: 2, scope: !13181)
!13185 = !DILocation(line: 113, column: 1, scope: !13166)
!13186 = distinct !DISubprogram(name: "z_waitq_head", scope: !12706, file: !12706, line: 52, type: !13187, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13189)
!13187 = !DISubroutineType(types: !13188)
!13188 = !{!3010, !3027}
!13189 = !{!13190}
!13190 = !DILocalVariable(name: "w", arg: 1, scope: !13186, file: !12706, line: 52, type: !3027)
!13191 = !DILocation(line: 0, scope: !13186)
!13192 = !DILocation(line: 54, column: 52, scope: !13186)
!13193 = !DILocation(line: 54, column: 28, scope: !13186)
!13194 = !DILocation(line: 54, column: 9, scope: !13186)
!13195 = !DILocation(line: 54, column: 2, scope: !13186)
!13196 = !DISubprogram(name: "k_free", scope: !224, file: !224, line: 5272, type: !5990, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13197 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13198, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13200)
!13198 = !DISubroutineType(types: !13199)
!13199 = !{!2995, !13106}
!13200 = !{!13201}
!13201 = !DILocalVariable(name: "list", arg: 1, scope: !13197, file: !233, line: 294, type: !13106)
!13202 = !DILocation(line: 0, scope: !13197)
!13203 = !DILocation(line: 296, column: 9, scope: !13197)
!13204 = !DILocation(line: 296, column: 49, scope: !13197)
!13205 = !DILocation(line: 296, column: 2, scope: !13197)
!13206 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13207, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13209)
!13207 = !DISubroutineType(types: !13208)
!13208 = !{!136, !13106}
!13209 = !{!13210}
!13210 = !DILocalVariable(name: "list", arg: 1, scope: !13206, file: !233, line: 266, type: !13106)
!13211 = !DILocation(line: 0, scope: !13206)
!13212 = !DILocation(line: 268, column: 15, scope: !13206)
!13213 = !DILocation(line: 268, column: 20, scope: !13206)
!13214 = !DILocation(line: 268, column: 2, scope: !13206)
!13215 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13051, file: !13051, line: 116, type: !13216, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13222)
!13216 = !DISubroutineType(types: !13217)
!13217 = !{!107, !13054, !13, !13218}
!13218 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13219)
!13219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13220)
!13220 = !{!13221}
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13219, file: !104, line: 66, baseType: !103, size: 64)
!13222 = !{!13223, !13224, !13225, !13226, !13227, !13232}
!13223 = !DILocalVariable(name: "msgq", arg: 1, scope: !13215, file: !13051, line: 116, type: !13054)
!13224 = !DILocalVariable(name: "data", arg: 2, scope: !13215, file: !13051, line: 116, type: !13)
!13225 = !DILocalVariable(name: "timeout", arg: 3, scope: !13215, file: !13051, line: 116, type: !13218)
!13226 = !DILocalVariable(name: "pending_thread", scope: !13215, file: !13051, line: 120, type: !3010)
!13227 = !DILocalVariable(name: "key", scope: !13215, file: !13051, line: 121, type: !13228)
!13228 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13229)
!13229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13230)
!13230 = !{!13231}
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13229, file: !249, line: 33, baseType: !107, size: 32)
!13232 = !DILocalVariable(name: "result", scope: !13215, file: !13051, line: 122, type: !107)
!13233 = !DILocation(line: 0, scope: !13215)
!13234 = !DILocation(line: 124, column: 27, scope: !13215)
!13235 = !DILocalVariable(name: "l", arg: 1, scope: !13236, file: !249, line: 136, type: !13239)
!13236 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13237, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13240)
!13237 = !DISubroutineType(types: !13238)
!13238 = !{!13228, !13239}
!13239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 32)
!13240 = !{!13235, !13241}
!13241 = !DILocalVariable(name: "k", scope: !13236, file: !249, line: 139, type: !13228)
!13242 = !DILocation(line: 0, scope: !13236, inlinedAt: !13243)
!13243 = distinct !DILocation(line: 124, column: 8, scope: !13215)
!13244 = !DILocation(line: 55, column: 2, scope: !13245, inlinedAt: !13249)
!13245 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13246)
!13246 = !{!13247, !13248}
!13247 = !DILocalVariable(name: "key", scope: !13245, file: !5879, line: 44, type: !32)
!13248 = !DILocalVariable(name: "tmp", scope: !13245, file: !5879, line: 53, type: !32)
!13249 = distinct !DILocation(line: 145, column: 10, scope: !13236, inlinedAt: !13243)
!13250 = !{i64 1954180}
!13251 = !DILocation(line: 0, scope: !13245, inlinedAt: !13249)
!13252 = !DILocation(line: 128, column: 12, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13215, file: !13051, line: 128, column: 6)
!13254 = !DILocation(line: 128, column: 30, scope: !13253)
!13255 = !DILocation(line: 128, column: 22, scope: !13253)
!13256 = !DILocation(line: 128, column: 6, scope: !13215)
!13257 = !DILocation(line: 130, column: 49, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13253, file: !13051, line: 128, column: 40)
!13259 = !DILocation(line: 130, column: 20, scope: !13258)
!13260 = !DILocation(line: 131, column: 22, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13258, file: !13051, line: 131, column: 7)
!13262 = !DILocation(line: 131, column: 7, scope: !13258)
!13263 = !DILocation(line: 135, column: 38, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13261, file: !13051, line: 131, column: 31)
!13265 = !DILocation(line: 136, column: 17, scope: !13264)
!13266 = !DILocation(line: 135, column: 10, scope: !13264)
!13267 = !DILocalVariable(name: "thread", arg: 1, scope: !13268, file: !12402, line: 65, type: !3010)
!13268 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12402, file: !12402, line: 65, type: !13269, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13271)
!13269 = !DISubroutineType(types: !13270)
!13270 = !{null, !3010, !32}
!13271 = !{!13267, !13272}
!13272 = !DILocalVariable(name: "value", arg: 2, scope: !13268, file: !12402, line: 65, type: !32)
!13273 = !DILocation(line: 0, scope: !13268, inlinedAt: !13274)
!13274 = distinct !DILocation(line: 138, column: 4, scope: !13264)
!13275 = !DILocation(line: 67, column: 15, scope: !13268, inlinedAt: !13274)
!13276 = !DILocation(line: 67, column: 33, scope: !13268, inlinedAt: !13274)
!13277 = !DILocation(line: 139, column: 4, scope: !13264)
!13278 = !DILocation(line: 140, column: 4, scope: !13264)
!13279 = !DILocation(line: 141, column: 4, scope: !13264)
!13280 = !DILocation(line: 144, column: 23, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13261, file: !13051, line: 142, column: 10)
!13282 = !DILocation(line: 144, column: 46, scope: !13281)
!13283 = !DILocation(line: 144, column: 10, scope: !13281)
!13284 = !DILocation(line: 145, column: 29, scope: !13281)
!13285 = !DILocation(line: 145, column: 20, scope: !13281)
!13286 = !DILocation(line: 146, column: 33, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13281, file: !13051, line: 146, column: 8)
!13288 = !DILocation(line: 146, column: 24, scope: !13287)
!13289 = !DILocation(line: 146, column: 8, scope: !13281)
!13290 = !DILocation(line: 147, column: 29, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13287, file: !13051, line: 146, column: 45)
!13292 = !DILocation(line: 147, column: 21, scope: !13291)
!13293 = !DILocation(line: 148, column: 4, scope: !13291)
!13294 = !DILocation(line: 149, column: 19, scope: !13281)
!13295 = !DILocation(line: 155, column: 2, scope: !13258)
!13296 = !DILocation(line: 155, column: 13, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13253, file: !13051, line: 155, column: 13)
!13298 = !DILocation(line: 155, column: 13, scope: !13253)
!13299 = !DILocation(line: 162, column: 3, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13297, file: !13051, line: 158, column: 9)
!13301 = !DILocation(line: 162, column: 18, scope: !13300)
!13302 = !DILocation(line: 162, column: 28, scope: !13300)
!13303 = !DILocation(line: 164, column: 49, scope: !13300)
!13304 = !DILocation(line: 164, column: 12, scope: !13300)
!13305 = !DILocation(line: 166, column: 3, scope: !13300)
!13306 = !DILocation(line: 0, scope: !13253)
!13307 = !DILocalVariable(name: "key", arg: 2, scope: !13308, file: !249, line: 190, type: !13228)
!13308 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13309, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13311)
!13309 = !DISubroutineType(types: !13310)
!13310 = !{null, !13239, !13228}
!13311 = !{!13312, !13307}
!13312 = !DILocalVariable(name: "l", arg: 1, scope: !13308, file: !249, line: 189, type: !13239)
!13313 = !DILocation(line: 0, scope: !13308, inlinedAt: !13314)
!13314 = distinct !DILocation(line: 171, column: 2, scope: !13215)
!13315 = !DILocalVariable(name: "key", arg: 1, scope: !13316, file: !5879, line: 84, type: !32)
!13316 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13317)
!13317 = !{!13315}
!13318 = !DILocation(line: 0, scope: !13316, inlinedAt: !13319)
!13319 = distinct !DILocation(line: 215, column: 2, scope: !13308, inlinedAt: !13314)
!13320 = !DILocation(line: 95, column: 2, scope: !13316, inlinedAt: !13319)
!13321 = !{i64 1954997}
!13322 = !DILocation(line: 173, column: 2, scope: !13215)
!13323 = !DILocation(line: 174, column: 1, scope: !13215)
!13324 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13051, file: !13051, line: 188, type: !13325, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13333)
!13325 = !DISubroutineType(types: !13326)
!13326 = !{null, !13054, !13327}
!13327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13328, size: 32)
!13328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !224, line: 4259, size: 96, elements: !13329)
!13329 = !{!13330, !13331, !13332}
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13328, file: !224, line: 4261, baseType: !252, size: 32)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13328, file: !224, line: 4263, baseType: !162, size: 32, offset: 32)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13328, file: !224, line: 4265, baseType: !162, size: 32, offset: 64)
!13333 = !{!13334, !13335}
!13334 = !DILocalVariable(name: "msgq", arg: 1, scope: !13324, file: !13051, line: 188, type: !13054)
!13335 = !DILocalVariable(name: "attrs", arg: 2, scope: !13324, file: !13051, line: 188, type: !13327)
!13336 = !DILocation(line: 0, scope: !13324)
!13337 = !DILocation(line: 190, column: 26, scope: !13324)
!13338 = !DILocation(line: 190, column: 9, scope: !13324)
!13339 = !DILocation(line: 190, column: 18, scope: !13324)
!13340 = !DILocation(line: 191, column: 26, scope: !13324)
!13341 = !DILocation(line: 191, column: 9, scope: !13324)
!13342 = !DILocation(line: 191, column: 18, scope: !13324)
!13343 = !DILocation(line: 192, column: 27, scope: !13324)
!13344 = !DILocation(line: 192, column: 9, scope: !13324)
!13345 = !DILocation(line: 192, column: 19, scope: !13324)
!13346 = !DILocation(line: 193, column: 1, scope: !13324)
!13347 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13051, file: !13051, line: 206, type: !13348, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13350)
!13348 = !DISubroutineType(types: !13349)
!13349 = !{!107, !13054, !102, !13218}
!13350 = !{!13351, !13352, !13353, !13354, !13355, !13356}
!13351 = !DILocalVariable(name: "msgq", arg: 1, scope: !13347, file: !13051, line: 206, type: !13054)
!13352 = !DILocalVariable(name: "data", arg: 2, scope: !13347, file: !13051, line: 206, type: !102)
!13353 = !DILocalVariable(name: "timeout", arg: 3, scope: !13347, file: !13051, line: 206, type: !13218)
!13354 = !DILocalVariable(name: "key", scope: !13347, file: !13051, line: 210, type: !13228)
!13355 = !DILocalVariable(name: "pending_thread", scope: !13347, file: !13051, line: 211, type: !3010)
!13356 = !DILocalVariable(name: "result", scope: !13347, file: !13051, line: 212, type: !107)
!13357 = !DILocation(line: 0, scope: !13347)
!13358 = !DILocation(line: 214, column: 27, scope: !13347)
!13359 = !DILocation(line: 0, scope: !13236, inlinedAt: !13360)
!13360 = distinct !DILocation(line: 214, column: 8, scope: !13347)
!13361 = !DILocation(line: 55, column: 2, scope: !13245, inlinedAt: !13362)
!13362 = distinct !DILocation(line: 145, column: 10, scope: !13236, inlinedAt: !13360)
!13363 = !DILocation(line: 0, scope: !13245, inlinedAt: !13362)
!13364 = !DILocation(line: 218, column: 12, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13347, file: !13051, line: 218, column: 6)
!13366 = !DILocation(line: 218, column: 22, scope: !13365)
!13367 = !DILocation(line: 218, column: 6, scope: !13347)
!13368 = !DILocation(line: 220, column: 28, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13365, file: !13051, line: 218, column: 28)
!13370 = !DILocation(line: 220, column: 44, scope: !13369)
!13371 = !DILocation(line: 220, column: 9, scope: !13369)
!13372 = !DILocation(line: 221, column: 27, scope: !13369)
!13373 = !DILocation(line: 221, column: 18, scope: !13369)
!13374 = !DILocation(line: 222, column: 31, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13369, file: !13051, line: 222, column: 7)
!13376 = !DILocation(line: 222, column: 22, scope: !13375)
!13377 = !DILocation(line: 222, column: 7, scope: !13369)
!13378 = !DILocation(line: 223, column: 27, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13375, file: !13051, line: 222, column: 43)
!13380 = !DILocation(line: 223, column: 19, scope: !13379)
!13381 = !DILocation(line: 224, column: 3, scope: !13379)
!13382 = !DILocation(line: 225, column: 18, scope: !13369)
!13383 = !DILocation(line: 228, column: 49, scope: !13369)
!13384 = !DILocation(line: 228, column: 20, scope: !13369)
!13385 = !DILocation(line: 229, column: 22, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13369, file: !13051, line: 229, column: 7)
!13387 = !DILocation(line: 229, column: 7, scope: !13369)
!13388 = !DILocation(line: 233, column: 23, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13386, file: !13051, line: 229, column: 31)
!13390 = !DILocation(line: 233, column: 55, scope: !13389)
!13391 = !DILocation(line: 234, column: 17, scope: !13389)
!13392 = !DILocation(line: 233, column: 10, scope: !13389)
!13393 = !DILocation(line: 235, column: 29, scope: !13389)
!13394 = !DILocation(line: 235, column: 20, scope: !13389)
!13395 = !DILocation(line: 236, column: 33, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13389, file: !13051, line: 236, column: 8)
!13397 = !DILocation(line: 236, column: 24, scope: !13396)
!13398 = !DILocation(line: 236, column: 8, scope: !13389)
!13399 = !DILocation(line: 237, column: 29, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13396, file: !13051, line: 236, column: 45)
!13401 = !DILocation(line: 237, column: 21, scope: !13400)
!13402 = !DILocation(line: 238, column: 4, scope: !13400)
!13403 = !DILocation(line: 239, column: 19, scope: !13389)
!13404 = !DILocation(line: 0, scope: !13268, inlinedAt: !13405)
!13405 = distinct !DILocation(line: 242, column: 4, scope: !13389)
!13406 = !DILocation(line: 67, column: 15, scope: !13268, inlinedAt: !13405)
!13407 = !DILocation(line: 67, column: 33, scope: !13268, inlinedAt: !13405)
!13408 = !DILocation(line: 243, column: 4, scope: !13389)
!13409 = !DILocation(line: 244, column: 4, scope: !13389)
!13410 = !DILocation(line: 248, column: 4, scope: !13389)
!13411 = !DILocation(line: 251, column: 13, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13365, file: !13051, line: 251, column: 13)
!13413 = !DILocation(line: 251, column: 13, scope: !13365)
!13414 = !DILocation(line: 258, column: 3, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !13412, file: !13051, line: 254, column: 9)
!13416 = !DILocation(line: 258, column: 18, scope: !13415)
!13417 = !DILocation(line: 258, column: 28, scope: !13415)
!13418 = !DILocation(line: 260, column: 49, scope: !13415)
!13419 = !DILocation(line: 260, column: 12, scope: !13415)
!13420 = !DILocation(line: 262, column: 3, scope: !13415)
!13421 = !DILocation(line: 0, scope: !13365)
!13422 = !DILocation(line: 0, scope: !13308, inlinedAt: !13423)
!13423 = distinct !DILocation(line: 267, column: 2, scope: !13347)
!13424 = !DILocation(line: 0, scope: !13316, inlinedAt: !13425)
!13425 = distinct !DILocation(line: 215, column: 2, scope: !13308, inlinedAt: !13423)
!13426 = !DILocation(line: 95, column: 2, scope: !13316, inlinedAt: !13425)
!13427 = !DILocation(line: 269, column: 2, scope: !13347)
!13428 = !DILocation(line: 270, column: 1, scope: !13347)
!13429 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13051, file: !13051, line: 284, type: !13430, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13432)
!13430 = !DISubroutineType(types: !13431)
!13431 = !{!107, !13054, !102}
!13432 = !{!13433, !13434, !13435, !13436}
!13433 = !DILocalVariable(name: "msgq", arg: 1, scope: !13429, file: !13051, line: 284, type: !13054)
!13434 = !DILocalVariable(name: "data", arg: 2, scope: !13429, file: !13051, line: 284, type: !102)
!13435 = !DILocalVariable(name: "key", scope: !13429, file: !13051, line: 286, type: !13228)
!13436 = !DILocalVariable(name: "result", scope: !13429, file: !13051, line: 287, type: !107)
!13437 = !DILocation(line: 0, scope: !13429)
!13438 = !DILocation(line: 0, scope: !13236, inlinedAt: !13439)
!13439 = distinct !DILocation(line: 289, column: 8, scope: !13429)
!13440 = !DILocation(line: 55, column: 2, scope: !13245, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 145, column: 10, scope: !13236, inlinedAt: !13439)
!13442 = !DILocation(line: 0, scope: !13245, inlinedAt: !13441)
!13443 = !DILocation(line: 291, column: 12, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13429, file: !13051, line: 291, column: 6)
!13445 = !DILocation(line: 291, column: 22, scope: !13444)
!13446 = !DILocation(line: 291, column: 6, scope: !13429)
!13447 = !DILocation(line: 293, column: 28, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13444, file: !13051, line: 291, column: 28)
!13449 = !DILocation(line: 293, column: 44, scope: !13448)
!13450 = !DILocation(line: 293, column: 9, scope: !13448)
!13451 = !DILocation(line: 295, column: 2, scope: !13448)
!13452 = !DILocation(line: 0, scope: !13444)
!13453 = !DILocation(line: 0, scope: !13308, inlinedAt: !13454)
!13454 = distinct !DILocation(line: 302, column: 2, scope: !13429)
!13455 = !DILocation(line: 0, scope: !13316, inlinedAt: !13456)
!13456 = distinct !DILocation(line: 215, column: 2, scope: !13308, inlinedAt: !13454)
!13457 = !DILocation(line: 95, column: 2, scope: !13316, inlinedAt: !13456)
!13458 = !DILocation(line: 304, column: 2, scope: !13429)
!13459 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13051, file: !13051, line: 318, type: !13460, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !13462)
!13460 = !DISubroutineType(types: !13461)
!13461 = !{null, !13054}
!13462 = !{!13463, !13464, !13465}
!13463 = !DILocalVariable(name: "msgq", arg: 1, scope: !13459, file: !13051, line: 318, type: !13054)
!13464 = !DILocalVariable(name: "key", scope: !13459, file: !13051, line: 320, type: !13228)
!13465 = !DILocalVariable(name: "pending_thread", scope: !13459, file: !13051, line: 321, type: !3010)
!13466 = !DILocation(line: 0, scope: !13459)
!13467 = !DILocation(line: 0, scope: !13236, inlinedAt: !13468)
!13468 = distinct !DILocation(line: 323, column: 8, scope: !13459)
!13469 = !DILocation(line: 55, column: 2, scope: !13245, inlinedAt: !13470)
!13470 = distinct !DILocation(line: 145, column: 10, scope: !13236, inlinedAt: !13468)
!13471 = !DILocation(line: 0, scope: !13245, inlinedAt: !13470)
!13472 = !DILocation(line: 328, column: 27, scope: !13459)
!13473 = !DILocation(line: 328, column: 65, scope: !13459)
!13474 = !DILocation(line: 328, column: 2, scope: !13459)
!13475 = !DILocation(line: 0, scope: !13268, inlinedAt: !13476)
!13476 = distinct !DILocation(line: 329, column: 3, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13459, file: !13051, line: 328, column: 74)
!13478 = !DILocation(line: 67, column: 15, scope: !13268, inlinedAt: !13476)
!13479 = !DILocation(line: 67, column: 33, scope: !13268, inlinedAt: !13476)
!13480 = !DILocation(line: 330, column: 3, scope: !13477)
!13481 = distinct !{!13481, !13474, !13482}
!13482 = !DILocation(line: 331, column: 2, scope: !13459)
!13483 = !DILocation(line: 323, column: 27, scope: !13459)
!13484 = !DILocation(line: 333, column: 8, scope: !13459)
!13485 = !DILocation(line: 333, column: 18, scope: !13459)
!13486 = !DILocation(line: 334, column: 25, scope: !13459)
!13487 = !DILocation(line: 334, column: 8, scope: !13459)
!13488 = !DILocation(line: 334, column: 17, scope: !13459)
!13489 = !DILocation(line: 336, column: 2, scope: !13459)
!13490 = !DILocation(line: 337, column: 1, scope: !13459)
!13491 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2316, file: !2316, line: 93, type: !13492, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13494)
!13492 = !DISubroutineType(types: !13493)
!13493 = !{!707, !2211, !2211}
!13494 = !{!13495, !13496, !13497, !13498}
!13495 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13491, file: !2316, line: 93, type: !2211)
!13496 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13491, file: !2316, line: 94, type: !2211)
!13497 = !DILocalVariable(name: "b1", scope: !13491, file: !2316, line: 97, type: !707)
!13498 = !DILocalVariable(name: "b2", scope: !13491, file: !2316, line: 98, type: !707)
!13499 = !DILocation(line: 0, scope: !13491)
!13500 = !DILocation(line: 97, column: 30, scope: !13491)
!13501 = !DILocation(line: 98, column: 30, scope: !13491)
!13502 = !DILocation(line: 100, column: 9, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13491, file: !2316, line: 100, column: 6)
!13504 = !DILocation(line: 100, column: 6, scope: !13491)
!13505 = !DILocation(line: 125, column: 1, scope: !13491)
!13506 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2316, file: !2316, line: 428, type: !13507, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13509)
!13507 = !DISubroutineType(types: !13508)
!13508 = !{null, !2211}
!13509 = !{!13510}
!13510 = !DILocalVariable(name: "curr", arg: 1, scope: !13506, file: !2316, line: 428, type: !2211)
!13511 = !DILocation(line: 0, scope: !13506)
!13512 = !DILocation(line: 434, column: 6, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13506, file: !2316, line: 434, column: 6)
!13514 = !DILocation(line: 434, column: 23, scope: !13513)
!13515 = !DILocation(line: 434, column: 6, scope: !13506)
!13516 = !DILocation(line: 435, column: 50, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13513, file: !2316, line: 434, column: 29)
!13518 = !DILocation(line: 435, column: 48, scope: !13517)
!13519 = !DILocation(line: 435, column: 29, scope: !13517)
!13520 = !DILocation(line: 436, column: 24, scope: !13517)
!13521 = !DILocation(line: 436, column: 3, scope: !13517)
!13522 = !DILocation(line: 437, column: 2, scope: !13517)
!13523 = !DILocation(line: 438, column: 1, scope: !13506)
!13524 = distinct !DISubprogram(name: "slice_time", scope: !2316, file: !2316, line: 407, type: !13525, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13527)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{!107, !2211}
!13527 = !{!13528, !13529}
!13528 = !DILocalVariable(name: "curr", arg: 1, scope: !13524, file: !2316, line: 407, type: !2211)
!13529 = !DILocalVariable(name: "ret", scope: !13524, file: !2316, line: 409, type: !107)
!13530 = !DILocation(line: 0, scope: !13524)
!13531 = !DILocation(line: 409, column: 12, scope: !13524)
!13532 = !DILocation(line: 416, column: 2, scope: !13524)
!13533 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2316, file: !2316, line: 440, type: !13534, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13536)
!13534 = !DISubroutineType(types: !13535)
!13535 = !{null, !707, !107}
!13536 = !{!13537, !13538, !13539, !13545}
!13537 = !DILocalVariable(name: "slice", arg: 1, scope: !13533, file: !2316, line: 440, type: !707)
!13538 = !DILocalVariable(name: "prio", arg: 2, scope: !13533, file: !2316, line: 440, type: !107)
!13539 = !DILocalVariable(name: "__i", scope: !13540, file: !2316, line: 442, type: !13541)
!13540 = distinct !DILexicalBlock(scope: !13533, file: !2316, line: 442, column: 2)
!13541 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13542)
!13542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13543)
!13543 = !{!13544}
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13542, file: !249, line: 33, baseType: !107, size: 32)
!13545 = !DILocalVariable(name: "__key", scope: !13540, file: !2316, line: 442, type: !13541)
!13546 = !DILocation(line: 0, scope: !13533)
!13547 = !DILocation(line: 0, scope: !13540)
!13548 = !DILocalVariable(name: "l", arg: 1, scope: !13549, file: !249, line: 136, type: !13552)
!13549 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13550, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13553)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{!13541, !13552}
!13552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!13553 = !{!13548, !13554}
!13554 = !DILocalVariable(name: "k", scope: !13549, file: !249, line: 139, type: !13541)
!13555 = !DILocation(line: 0, scope: !13549, inlinedAt: !13556)
!13556 = distinct !DILocation(line: 442, column: 2, scope: !13540)
!13557 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !13562)
!13558 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13559)
!13559 = !{!13560, !13561}
!13560 = !DILocalVariable(name: "key", scope: !13558, file: !5879, line: 44, type: !32)
!13561 = !DILocalVariable(name: "tmp", scope: !13558, file: !5879, line: 53, type: !32)
!13562 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !13556)
!13563 = !{i64 1992014}
!13564 = !DILocation(line: 0, scope: !13558, inlinedAt: !13562)
!13565 = !DILocation(line: 443, column: 29, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !2316, line: 442, column: 26)
!13567 = distinct !DILexicalBlock(scope: !13540, file: !2316, line: 442, column: 2)
!13568 = !DILocation(line: 444, column: 17, scope: !13566)
!13569 = !DILocation(line: 445, column: 51, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13566, file: !2316, line: 445, column: 7)
!13571 = !DILocation(line: 445, column: 7, scope: !13566)
!13572 = !DILocation(line: 0, scope: !13566)
!13573 = !DILocation(line: 451, column: 18, scope: !13566)
!13574 = !DILocation(line: 452, column: 3, scope: !13566)
!13575 = !DILocalVariable(name: "key", arg: 2, scope: !13576, file: !249, line: 190, type: !13541)
!13576 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13577, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13579)
!13577 = !DISubroutineType(types: !13578)
!13578 = !{null, !13552, !13541}
!13579 = !{!13580, !13575}
!13580 = !DILocalVariable(name: "l", arg: 1, scope: !13576, file: !249, line: 189, type: !13552)
!13581 = !DILocation(line: 0, scope: !13576, inlinedAt: !13582)
!13582 = distinct !DILocation(line: 442, column: 2, scope: !13567)
!13583 = !DILocalVariable(name: "key", arg: 1, scope: !13584, file: !5879, line: 84, type: !32)
!13584 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13585)
!13585 = !{!13583}
!13586 = !DILocation(line: 0, scope: !13584, inlinedAt: !13587)
!13587 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !13582)
!13588 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !13587)
!13589 = !{i64 1992831}
!13590 = !DILocation(line: 454, column: 1, scope: !13533)
!13591 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12941, file: !12941, line: 389, type: !7060, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13592)
!13592 = !{!13593}
!13593 = !DILocalVariable(name: "t", arg: 1, scope: !13591, file: !12941, line: 389, type: !162)
!13594 = !DILocation(line: 0, scope: !13591)
!13595 = !DILocalVariable(name: "t", arg: 1, scope: !13596, file: !12941, line: 102, type: !1468)
!13596 = distinct !DISubprogram(name: "z_tmcvt", scope: !12941, file: !12941, line: 102, type: !12949, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13597)
!13597 = !{!13595, !13598, !13599, !13600, !13601, !13602, !13603, !13604, !13605, !13606, !13607}
!13598 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13596, file: !12941, line: 102, type: !162)
!13599 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13596, file: !12941, line: 103, type: !162)
!13600 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13596, file: !12941, line: 103, type: !136)
!13601 = !DILocalVariable(name: "result32", arg: 5, scope: !13596, file: !12941, line: 104, type: !136)
!13602 = !DILocalVariable(name: "round_up", arg: 6, scope: !13596, file: !12941, line: 104, type: !136)
!13603 = !DILocalVariable(name: "round_off", arg: 7, scope: !13596, file: !12941, line: 105, type: !136)
!13604 = !DILocalVariable(name: "mul_ratio", scope: !13596, file: !12941, line: 107, type: !136)
!13605 = !DILocalVariable(name: "div_ratio", scope: !13596, file: !12941, line: 109, type: !136)
!13606 = !DILocalVariable(name: "off", scope: !13596, file: !12941, line: 116, type: !1468)
!13607 = !DILocalVariable(name: "rdivisor", scope: !13608, file: !12941, line: 119, type: !162)
!13608 = distinct !DILexicalBlock(scope: !13609, file: !12941, line: 118, column: 18)
!13609 = distinct !DILexicalBlock(scope: !13596, file: !12941, line: 118, column: 6)
!13610 = !DILocation(line: 0, scope: !13596, inlinedAt: !13611)
!13611 = distinct !DILocation(line: 392, column: 9, scope: !13591)
!13612 = !DILocation(line: 143, column: 25, scope: !13613, inlinedAt: !13611)
!13613 = distinct !DILexicalBlock(scope: !13614, file: !12941, line: 142, column: 17)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !12941, line: 142, column: 7)
!13615 = distinct !DILexicalBlock(scope: !13616, file: !12941, line: 141, column: 24)
!13616 = distinct !DILexicalBlock(scope: !13617, file: !12941, line: 141, column: 13)
!13617 = distinct !DILexicalBlock(scope: !13596, file: !12941, line: 134, column: 6)
!13618 = !DILocation(line: 392, column: 2, scope: !13591)
!13619 = distinct !DISubprogram(name: "z_time_slice", scope: !2316, file: !2316, line: 502, type: !7697, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13620)
!13620 = !{!13621, !13622}
!13621 = !DILocalVariable(name: "ticks", arg: 1, scope: !13619, file: !2316, line: 502, type: !107)
!13622 = !DILocalVariable(name: "key", scope: !13619, file: !2316, line: 511, type: !13541)
!13623 = !DILocation(line: 0, scope: !13619)
!13624 = !DILocation(line: 0, scope: !13549, inlinedAt: !13625)
!13625 = distinct !DILocation(line: 511, column: 25, scope: !13619)
!13626 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !13627)
!13627 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !13625)
!13628 = !DILocation(line: 0, scope: !13558, inlinedAt: !13627)
!13629 = !DILocation(line: 514, column: 6, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13619, file: !2316, line: 514, column: 6)
!13631 = !DILocation(line: 514, column: 25, scope: !13630)
!13632 = !DILocation(line: 514, column: 22, scope: !13630)
!13633 = !DILocation(line: 514, column: 6, scope: !13619)
!13634 = !DILocation(line: 515, column: 3, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13630, file: !2316, line: 514, column: 35)
!13636 = !DILocation(line: 0, scope: !13576, inlinedAt: !13637)
!13637 = distinct !DILocation(line: 516, column: 3, scope: !13635)
!13638 = !DILocation(line: 0, scope: !13584, inlinedAt: !13639)
!13639 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !13637)
!13640 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !13639)
!13641 = !DILocation(line: 517, column: 3, scope: !13635)
!13642 = !DILocation(line: 519, column: 18, scope: !13619)
!13643 = !DILocation(line: 522, column: 6, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13619, file: !2316, line: 522, column: 6)
!13645 = !DILocation(line: 522, column: 27, scope: !13644)
!13646 = !DILocation(line: 522, column: 30, scope: !13644)
!13647 = !DILocation(line: 522, column: 6, scope: !13619)
!13648 = !DILocation(line: 523, column: 30, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13650, file: !2316, line: 523, column: 7)
!13650 = distinct !DILexicalBlock(scope: !13644, file: !2316, line: 522, column: 51)
!13651 = !DILocation(line: 523, column: 13, scope: !13649)
!13652 = !DILocation(line: 523, column: 7, scope: !13650)
!13653 = !DILocation(line: 530, column: 10, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13649, file: !2316, line: 523, column: 43)
!13655 = !DILocation(line: 531, column: 3, scope: !13654)
!13656 = !DILocation(line: 532, column: 30, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13649, file: !2316, line: 531, column: 10)
!13658 = !DILocation(line: 535, column: 29, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13644, file: !2316, line: 534, column: 9)
!13660 = !DILocation(line: 0, scope: !13576, inlinedAt: !13661)
!13661 = distinct !DILocation(line: 537, column: 2, scope: !13619)
!13662 = !DILocation(line: 0, scope: !13584, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !13661)
!13664 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !13663)
!13665 = !DILocation(line: 538, column: 1, scope: !13619)
!13666 = distinct !DISubprogram(name: "sliceable", scope: !2316, file: !2316, line: 468, type: !13667, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13669)
!13667 = !DISubroutineType(types: !13668)
!13668 = !{!136, !2211}
!13669 = !{!13670, !13671}
!13670 = !DILocalVariable(name: "thread", arg: 1, scope: !13666, file: !2316, line: 468, type: !2211)
!13671 = !DILocalVariable(name: "ret", scope: !13666, file: !2316, line: 470, type: !136)
!13672 = !DILocation(line: 0, scope: !13666)
!13673 = !DILocation(line: 470, column: 13, scope: !13666)
!13674 = !DILocation(line: 471, column: 3, scope: !13666)
!13675 = !DILocation(line: 471, column: 7, scope: !13666)
!13676 = !DILocation(line: 472, column: 3, scope: !13666)
!13677 = !DILocation(line: 472, column: 37, scope: !13666)
!13678 = !DILocation(line: 472, column: 24, scope: !13666)
!13679 = !DILocation(line: 472, column: 43, scope: !13666)
!13680 = !DILocation(line: 472, column: 7, scope: !13666)
!13681 = !DILocation(line: 473, column: 3, scope: !13666)
!13682 = !DILocation(line: 473, column: 7, scope: !13666)
!13683 = !DILocation(line: 473, column: 6, scope: !13666)
!13684 = !DILocation(line: 479, column: 2, scope: !13666)
!13685 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2316, file: !2316, line: 482, type: !13686, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13688)
!13686 = !DISubroutineType(types: !13687)
!13687 = !{!13541, !13541}
!13688 = !{!13689, !13690}
!13689 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13685, file: !2316, line: 482, type: !13541)
!13690 = !DILocalVariable(name: "curr", scope: !13685, file: !2316, line: 484, type: !2211)
!13691 = !DILocation(line: 0, scope: !13685)
!13692 = !DILocation(line: 484, column: 26, scope: !13685)
!13693 = !DILocation(line: 493, column: 7, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13685, file: !2316, line: 493, column: 6)
!13695 = !DILocation(line: 493, column: 6, scope: !13685)
!13696 = !DILocation(line: 494, column: 3, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13694, file: !2316, line: 493, column: 49)
!13698 = !DILocation(line: 495, column: 2, scope: !13697)
!13699 = !DILocation(line: 496, column: 2, scope: !13685)
!13700 = !DILocation(line: 499, column: 1, scope: !13685)
!13701 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12382, file: !12382, line: 106, type: !13667, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13702)
!13702 = !{!13703, !13704}
!13703 = !DILocalVariable(name: "thread", arg: 1, scope: !13701, file: !12382, line: 106, type: !2211)
!13704 = !DILocalVariable(name: "state", scope: !13701, file: !12382, line: 108, type: !133)
!13705 = !DILocation(line: 0, scope: !13701)
!13706 = !DILocation(line: 108, column: 31, scope: !13701)
!13707 = !DILocation(line: 110, column: 16, scope: !13701)
!13708 = !DILocation(line: 111, column: 41, scope: !13701)
!13709 = !DILocation(line: 110, column: 2, scope: !13701)
!13710 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2316, file: !2316, line: 393, type: !13507, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13711)
!13711 = !{!13712}
!13712 = !DILocalVariable(name: "thread", arg: 1, scope: !13710, file: !2316, line: 393, type: !2211)
!13713 = !DILocation(line: 0, scope: !13710)
!13714 = !DILocation(line: 395, column: 6, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13710, file: !2316, line: 395, column: 6)
!13716 = !DILocation(line: 395, column: 6, scope: !13710)
!13717 = !DILocalVariable(name: "thread", arg: 1, scope: !13718, file: !2316, line: 264, type: !2211)
!13718 = distinct !DISubprogram(name: "dequeue_thread", scope: !2316, file: !2316, line: 264, type: !13507, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13719)
!13719 = !{!13717}
!13720 = !DILocation(line: 0, scope: !13718, inlinedAt: !13721)
!13721 = distinct !DILocation(line: 396, column: 3, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13715, file: !2316, line: 395, column: 34)
!13723 = !DILocation(line: 266, column: 15, scope: !13718, inlinedAt: !13721)
!13724 = !DILocation(line: 266, column: 28, scope: !13718, inlinedAt: !13721)
!13725 = !DILocalVariable(name: "thread", arg: 1, scope: !13726, file: !2316, line: 232, type: !2211)
!13726 = distinct !DISubprogram(name: "runq_remove", scope: !2316, file: !2316, line: 232, type: !13507, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13727)
!13727 = !{!13725}
!13728 = !DILocation(line: 0, scope: !13726, inlinedAt: !13729)
!13729 = distinct !DILocation(line: 268, column: 3, scope: !13730, inlinedAt: !13721)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !2316, line: 267, column: 35)
!13731 = distinct !DILexicalBlock(scope: !13718, file: !2316, line: 267, column: 6)
!13732 = !DILocation(line: 234, column: 2, scope: !13726, inlinedAt: !13729)
!13733 = !DILocation(line: 397, column: 2, scope: !13722)
!13734 = !DILocalVariable(name: "thread", arg: 1, scope: !13735, file: !2316, line: 250, type: !2211)
!13735 = distinct !DISubprogram(name: "queue_thread", scope: !2316, file: !2316, line: 250, type: !13507, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13736)
!13736 = !{!13734}
!13737 = !DILocation(line: 0, scope: !13735, inlinedAt: !13738)
!13738 = distinct !DILocation(line: 398, column: 2, scope: !13710)
!13739 = !DILocation(line: 252, column: 15, scope: !13735, inlinedAt: !13738)
!13740 = !DILocation(line: 252, column: 28, scope: !13735, inlinedAt: !13738)
!13741 = !DILocalVariable(name: "thread", arg: 1, scope: !13742, file: !2316, line: 227, type: !2211)
!13742 = distinct !DISubprogram(name: "runq_add", scope: !2316, file: !2316, line: 227, type: !13507, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13743)
!13743 = !{!13741}
!13744 = !DILocation(line: 0, scope: !13742, inlinedAt: !13745)
!13745 = distinct !DILocation(line: 254, column: 3, scope: !13746, inlinedAt: !13738)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !2316, line: 253, column: 35)
!13747 = distinct !DILexicalBlock(scope: !13735, file: !2316, line: 253, column: 6)
!13748 = !DILocalVariable(name: "pq", arg: 1, scope: !13749, file: !2316, line: 181, type: !13752)
!13749 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2316, file: !2316, line: 181, type: !13750, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13753)
!13750 = !DISubroutineType(types: !13751)
!13751 = !{null, !13752, !2211}
!13752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!13753 = !{!13748, !13754, !13755}
!13754 = !DILocalVariable(name: "thread", arg: 2, scope: !13749, file: !2316, line: 182, type: !2211)
!13755 = !DILocalVariable(name: "t", scope: !13749, file: !2316, line: 184, type: !2211)
!13756 = !DILocation(line: 0, scope: !13749, inlinedAt: !13757)
!13757 = distinct !DILocation(line: 229, column: 2, scope: !13742, inlinedAt: !13745)
!13758 = !DILocation(line: 188, column: 2, scope: !13759, inlinedAt: !13757)
!13759 = distinct !DILexicalBlock(scope: !13749, file: !2316, line: 188, column: 2)
!13760 = !DILocation(line: 188, column: 2, scope: !13761, inlinedAt: !13757)
!13761 = distinct !DILexicalBlock(scope: !13759, file: !2316, line: 188, column: 2)
!13762 = !DILocation(line: 0, scope: !13759, inlinedAt: !13757)
!13763 = !DILocation(line: 189, column: 7, scope: !13764, inlinedAt: !13757)
!13764 = distinct !DILexicalBlock(scope: !13765, file: !2316, line: 189, column: 7)
!13765 = distinct !DILexicalBlock(scope: !13761, file: !2316, line: 188, column: 56)
!13766 = !DILocation(line: 189, column: 35, scope: !13764, inlinedAt: !13757)
!13767 = !DILocation(line: 189, column: 7, scope: !13765, inlinedAt: !13757)
!13768 = !DILocation(line: 191, column: 21, scope: !13769, inlinedAt: !13757)
!13769 = distinct !DILexicalBlock(scope: !13764, file: !2316, line: 189, column: 40)
!13770 = !DILocation(line: 190, column: 4, scope: !13769, inlinedAt: !13757)
!13771 = !DILocation(line: 192, column: 4, scope: !13769, inlinedAt: !13757)
!13772 = distinct !{!13772, !13758, !13773}
!13773 = !DILocation(line: 194, column: 2, scope: !13759, inlinedAt: !13757)
!13774 = !DILocation(line: 196, column: 37, scope: !13749, inlinedAt: !13757)
!13775 = !DILocation(line: 196, column: 2, scope: !13749, inlinedAt: !13757)
!13776 = !DILocation(line: 197, column: 1, scope: !13749, inlinedAt: !13757)
!13777 = !DILocation(line: 399, column: 25, scope: !13710)
!13778 = !DILocation(line: 399, column: 22, scope: !13710)
!13779 = !DILocation(line: 399, column: 2, scope: !13710)
!13780 = !DILocation(line: 400, column: 1, scope: !13710)
!13781 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12382, file: !12382, line: 136, type: !13667, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13782)
!13782 = !{!13783}
!13783 = !DILocalVariable(name: "thread", arg: 1, scope: !13781, file: !12382, line: 136, type: !2211)
!13784 = !DILocation(line: 0, scope: !13781)
!13785 = !DILocation(line: 138, column: 9, scope: !13781)
!13786 = !DILocation(line: 138, column: 2, scope: !13781)
!13787 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2316, file: !2316, line: 1137, type: !13750, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13788)
!13788 = !{!13789, !13790}
!13789 = !DILocalVariable(name: "pq", arg: 1, scope: !13787, file: !2316, line: 1137, type: !13752)
!13790 = !DILocalVariable(name: "thread", arg: 2, scope: !13787, file: !2316, line: 1137, type: !2211)
!13791 = !DILocation(line: 0, scope: !13787)
!13792 = !DILocation(line: 1141, column: 33, scope: !13787)
!13793 = !DILocation(line: 1141, column: 2, scope: !13787)
!13794 = !DILocation(line: 1142, column: 1, scope: !13787)
!13795 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13796, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13798)
!13796 = !DISubroutineType(types: !13797)
!13797 = !{!2312, !13752}
!13798 = !{!13799}
!13799 = !DILocalVariable(name: "list", arg: 1, scope: !13795, file: !233, line: 294, type: !13752)
!13800 = !DILocation(line: 0, scope: !13795)
!13801 = !DILocation(line: 296, column: 9, scope: !13795)
!13802 = !DILocation(line: 296, column: 49, scope: !13795)
!13803 = !DILocation(line: 296, column: 2, scope: !13795)
!13804 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !13805, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13807)
!13805 = !DISubroutineType(types: !13806)
!13806 = !{null, !2312, !2312}
!13807 = !{!13808, !13809, !13810}
!13808 = !DILocalVariable(name: "successor", arg: 1, scope: !13804, file: !233, line: 443, type: !2312)
!13809 = !DILocalVariable(name: "node", arg: 2, scope: !13804, file: !233, line: 443, type: !2312)
!13810 = !DILocalVariable(name: "prev", scope: !13804, file: !233, line: 445, type: !13811)
!13811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2312)
!13812 = !DILocation(line: 0, scope: !13804)
!13813 = !DILocation(line: 445, column: 39, scope: !13804)
!13814 = !DILocation(line: 447, column: 8, scope: !13804)
!13815 = !DILocation(line: 447, column: 13, scope: !13804)
!13816 = !DILocation(line: 448, column: 8, scope: !13804)
!13817 = !DILocation(line: 448, column: 13, scope: !13804)
!13818 = !DILocation(line: 449, column: 8, scope: !13804)
!13819 = !DILocation(line: 449, column: 13, scope: !13804)
!13820 = !DILocation(line: 450, column: 18, scope: !13804)
!13821 = !DILocation(line: 451, column: 1, scope: !13804)
!13822 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !13823, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13825)
!13823 = !DISubroutineType(types: !13824)
!13824 = !{!2312, !13752, !2312}
!13825 = !{!13826, !13827}
!13826 = !DILocalVariable(name: "list", arg: 1, scope: !13822, file: !233, line: 341, type: !13752)
!13827 = !DILocalVariable(name: "node", arg: 2, scope: !13822, file: !233, line: 342, type: !2312)
!13828 = !DILocation(line: 0, scope: !13822)
!13829 = !DILocation(line: 344, column: 15, scope: !13822)
!13830 = !DILocation(line: 344, column: 9, scope: !13822)
!13831 = !DILocation(line: 344, column: 26, scope: !13822)
!13832 = !DILocation(line: 344, column: 2, scope: !13822)
!13833 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !13834, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13836)
!13834 = !DISubroutineType(types: !13835)
!13835 = !{null, !13752, !2312}
!13836 = !{!13837, !13838, !13839}
!13837 = !DILocalVariable(name: "list", arg: 1, scope: !13833, file: !233, line: 404, type: !13752)
!13838 = !DILocalVariable(name: "node", arg: 2, scope: !13833, file: !233, line: 404, type: !2312)
!13839 = !DILocalVariable(name: "tail", scope: !13833, file: !233, line: 406, type: !13811)
!13840 = !DILocation(line: 0, scope: !13833)
!13841 = !DILocation(line: 406, column: 34, scope: !13833)
!13842 = !DILocation(line: 408, column: 8, scope: !13833)
!13843 = !DILocation(line: 408, column: 13, scope: !13833)
!13844 = !DILocation(line: 409, column: 8, scope: !13833)
!13845 = !DILocation(line: 409, column: 13, scope: !13833)
!13846 = !DILocation(line: 411, column: 8, scope: !13833)
!13847 = !DILocation(line: 411, column: 13, scope: !13833)
!13848 = !DILocation(line: 412, column: 13, scope: !13833)
!13849 = !DILocation(line: 413, column: 1, scope: !13833)
!13850 = distinct !DISubprogram(name: "update_cache", scope: !2316, file: !2316, line: 559, type: !7697, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13851)
!13851 = !{!13852, !13853}
!13852 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13850, file: !2316, line: 559, type: !107)
!13853 = !DILocalVariable(name: "thread", scope: !13850, file: !2316, line: 562, type: !2211)
!13854 = !DILocation(line: 0, scope: !13850)
!13855 = !DILocation(line: 239, column: 9, scope: !13856, inlinedAt: !13859)
!13856 = distinct !DISubprogram(name: "runq_best", scope: !2316, file: !2316, line: 237, type: !13857, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!2211}
!13859 = distinct !DILocation(line: 314, column: 28, scope: !13860, inlinedAt: !13863)
!13860 = distinct !DISubprogram(name: "next_up", scope: !2316, file: !2316, line: 312, type: !13857, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13861)
!13861 = !{!13862}
!13862 = !DILocalVariable(name: "thread", scope: !13860, file: !2316, line: 314, type: !2211)
!13863 = distinct !DILocation(line: 562, column: 28, scope: !13850)
!13864 = !DILocation(line: 0, scope: !13860, inlinedAt: !13863)
!13865 = !DILocation(line: 340, column: 17, scope: !13860, inlinedAt: !13863)
!13866 = !DILocation(line: 340, column: 9, scope: !13860, inlinedAt: !13863)
!13867 = !DILocalVariable(name: "thread", arg: 1, scope: !13868, file: !2316, line: 127, type: !2211)
!13868 = distinct !DISubprogram(name: "should_preempt", scope: !2316, file: !2316, line: 127, type: !13869, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13871)
!13869 = !DISubroutineType(types: !13870)
!13870 = !{!136, !2211, !107}
!13871 = !{!13867, !13872}
!13872 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13868, file: !2316, line: 128, type: !107)
!13873 = !DILocation(line: 0, scope: !13868, inlinedAt: !13874)
!13874 = distinct !DILocation(line: 564, column: 6, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13850, file: !2316, line: 564, column: 6)
!13876 = !DILocation(line: 133, column: 17, scope: !13877, inlinedAt: !13874)
!13877 = distinct !DILexicalBlock(scope: !13868, file: !2316, line: 133, column: 6)
!13878 = !DILocation(line: 0, scope: !13875)
!13879 = !DILocation(line: 133, column: 6, scope: !13868, inlinedAt: !13874)
!13880 = !DILocation(line: 140, column: 6, scope: !13881, inlinedAt: !13874)
!13881 = distinct !DILexicalBlock(scope: !13868, file: !2316, line: 140, column: 6)
!13882 = !DILocation(line: 140, column: 6, scope: !13868, inlinedAt: !13874)
!13883 = !DILocation(line: 150, column: 9, scope: !13884, inlinedAt: !13874)
!13884 = distinct !DILexicalBlock(scope: !13868, file: !2316, line: 149, column: 6)
!13885 = !DILocation(line: 149, column: 6, scope: !13868, inlinedAt: !13874)
!13886 = !DILocation(line: 157, column: 6, scope: !13887, inlinedAt: !13874)
!13887 = distinct !DILexicalBlock(scope: !13868, file: !2316, line: 157, column: 6)
!13888 = !DILocation(line: 564, column: 6, scope: !13850)
!13889 = !DILocation(line: 566, column: 14, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13891, file: !2316, line: 566, column: 7)
!13891 = distinct !DILexicalBlock(scope: !13875, file: !2316, line: 564, column: 42)
!13892 = !DILocation(line: 566, column: 7, scope: !13891)
!13893 = !DILocation(line: 567, column: 4, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13890, file: !2316, line: 566, column: 27)
!13895 = !DILocation(line: 568, column: 3, scope: !13894)
!13896 = !DILocation(line: 585, column: 1, scope: !13850)
!13897 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2316, file: !2316, line: 1144, type: !13898, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13900)
!13898 = !DISubroutineType(types: !13899)
!13899 = !{!2211, !13752}
!13900 = !{!13901, !13902, !13903}
!13901 = !DILocalVariable(name: "pq", arg: 1, scope: !13897, file: !2316, line: 1144, type: !13752)
!13902 = !DILocalVariable(name: "thread", scope: !13897, file: !2316, line: 1146, type: !2211)
!13903 = !DILocalVariable(name: "n", scope: !13897, file: !2316, line: 1147, type: !2312)
!13904 = !DILocation(line: 0, scope: !13897)
!13905 = !DILocation(line: 1147, column: 19, scope: !13897)
!13906 = !DILocation(line: 1152, column: 2, scope: !13897)
!13907 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12382, file: !12382, line: 115, type: !13667, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13908)
!13908 = !{!13909}
!13909 = !DILocalVariable(name: "thread", arg: 1, scope: !13907, file: !12382, line: 115, type: !2211)
!13910 = !DILocation(line: 0, scope: !13907)
!13911 = !DILocation(line: 117, column: 46, scope: !13907)
!13912 = !DILocation(line: 117, column: 10, scope: !13907)
!13913 = !DILocation(line: 117, column: 9, scope: !13907)
!13914 = !DILocation(line: 117, column: 2, scope: !13907)
!13915 = distinct !DISubprogram(name: "is_preempt", scope: !2316, file: !2316, line: 62, type: !13525, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13916)
!13916 = !{!13917}
!13917 = !DILocalVariable(name: "thread", arg: 1, scope: !13915, file: !2316, line: 62, type: !2211)
!13918 = !DILocation(line: 0, scope: !13915)
!13919 = !DILocation(line: 65, column: 22, scope: !13915)
!13920 = !DILocation(line: 65, column: 30, scope: !13915)
!13921 = !DILocation(line: 65, column: 2, scope: !13915)
!13922 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12774, file: !12774, line: 35, type: !13923, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13927)
!13923 = !DISubroutineType(types: !13924)
!13924 = !{!136, !13925}
!13925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13926, size: 32)
!13926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2262)
!13927 = !{!13928}
!13928 = !DILocalVariable(name: "to", arg: 1, scope: !13922, file: !12774, line: 35, type: !13925)
!13929 = !DILocation(line: 0, scope: !13922)
!13930 = !DILocation(line: 37, column: 35, scope: !13922)
!13931 = !DILocation(line: 37, column: 10, scope: !13922)
!13932 = !DILocation(line: 37, column: 9, scope: !13922)
!13933 = !DILocation(line: 37, column: 2, scope: !13922)
!13934 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !13935, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13939)
!13935 = !DISubroutineType(types: !13936)
!13936 = !{!136, !13937}
!13937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13938, size: 32)
!13938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!13939 = !{!13940}
!13940 = !DILocalVariable(name: "node", arg: 1, scope: !13934, file: !233, line: 225, type: !13937)
!13941 = !DILocation(line: 0, scope: !13934)
!13942 = !DILocation(line: 227, column: 15, scope: !13934)
!13943 = !DILocation(line: 227, column: 20, scope: !13934)
!13944 = !DILocation(line: 227, column: 2, scope: !13934)
!13945 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !13823, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13946)
!13946 = !{!13947, !13948}
!13947 = !DILocalVariable(name: "list", arg: 1, scope: !13945, file: !233, line: 325, type: !13752)
!13948 = !DILocalVariable(name: "node", arg: 2, scope: !13945, file: !233, line: 326, type: !2312)
!13949 = !DILocation(line: 0, scope: !13945)
!13950 = !DILocation(line: 328, column: 24, scope: !13945)
!13951 = !DILocation(line: 328, column: 15, scope: !13945)
!13952 = !DILocation(line: 328, column: 9, scope: !13945)
!13953 = !DILocation(line: 328, column: 45, scope: !13945)
!13954 = !DILocation(line: 328, column: 2, scope: !13945)
!13955 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13956, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13958)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{!136, !13752}
!13958 = !{!13959}
!13959 = !DILocalVariable(name: "list", arg: 1, scope: !13955, file: !233, line: 266, type: !13752)
!13960 = !DILocation(line: 0, scope: !13955)
!13961 = !DILocation(line: 268, column: 15, scope: !13955)
!13962 = !DILocation(line: 268, column: 20, scope: !13955)
!13963 = !DILocation(line: 268, column: 2, scope: !13955)
!13964 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !13965, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13967)
!13965 = !DISubroutineType(types: !13966)
!13966 = !{null, !2312}
!13967 = !{!13968, !13969, !13970}
!13968 = !DILocalVariable(name: "node", arg: 1, scope: !13964, file: !233, line: 496, type: !2312)
!13969 = !DILocalVariable(name: "prev", scope: !13964, file: !233, line: 498, type: !13811)
!13970 = !DILocalVariable(name: "next", scope: !13964, file: !233, line: 499, type: !13811)
!13971 = !DILocation(line: 0, scope: !13964)
!13972 = !DILocation(line: 498, column: 34, scope: !13964)
!13973 = !DILocation(line: 499, column: 34, scope: !13964)
!13974 = !DILocation(line: 501, column: 8, scope: !13964)
!13975 = !DILocation(line: 501, column: 13, scope: !13964)
!13976 = !DILocation(line: 502, column: 8, scope: !13964)
!13977 = !DILocation(line: 502, column: 13, scope: !13964)
!13978 = !DILocation(line: 503, column: 2, scope: !13964)
!13979 = !DILocation(line: 504, column: 1, scope: !13964)
!13980 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !13965, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13981)
!13981 = !{!13982}
!13982 = !DILocalVariable(name: "node", arg: 1, scope: !13980, file: !233, line: 211, type: !2312)
!13983 = !DILocation(line: 0, scope: !13980)
!13984 = !DILocation(line: 213, column: 8, scope: !13980)
!13985 = !DILocation(line: 213, column: 13, scope: !13980)
!13986 = !DILocation(line: 214, column: 8, scope: !13980)
!13987 = !DILocation(line: 214, column: 13, scope: !13980)
!13988 = !DILocation(line: 215, column: 1, scope: !13980)
!13989 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12382, file: !12382, line: 131, type: !13990, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13992)
!13990 = !DISubroutineType(types: !13991)
!13991 = !{!136, !2211, !162}
!13992 = !{!13993, !13994}
!13993 = !DILocalVariable(name: "thread", arg: 1, scope: !13989, file: !12382, line: 131, type: !2211)
!13994 = !DILocalVariable(name: "state", arg: 2, scope: !13989, file: !12382, line: 131, type: !162)
!13995 = !DILocation(line: 0, scope: !13989)
!13996 = !DILocation(line: 133, column: 23, scope: !13989)
!13997 = !DILocation(line: 133, column: 45, scope: !13989)
!13998 = !DILocation(line: 133, column: 2, scope: !13989)
!13999 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12382, file: !12382, line: 211, type: !14000, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14002)
!14000 = !DISubroutineType(types: !14001)
!14001 = !{!136, !107, !107}
!14002 = !{!14003, !14004}
!14003 = !DILocalVariable(name: "prio", arg: 1, scope: !13999, file: !12382, line: 211, type: !107)
!14004 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13999, file: !12382, line: 211, type: !107)
!14005 = !DILocation(line: 0, scope: !13999)
!14006 = !DILocation(line: 213, column: 9, scope: !13999)
!14007 = !DILocation(line: 213, column: 2, scope: !13999)
!14008 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12382, file: !12382, line: 83, type: !13667, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14009)
!14009 = !{!14010}
!14010 = !DILocalVariable(name: "thread", arg: 1, scope: !14008, file: !12382, line: 83, type: !2211)
!14011 = !DILocation(line: 0, scope: !14008)
!14012 = !DILocation(line: 89, column: 16, scope: !14008)
!14013 = !DILocation(line: 89, column: 2, scope: !14008)
!14014 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12382, file: !12382, line: 206, type: !14000, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14015)
!14015 = !{!14016, !14017}
!14016 = !DILocalVariable(name: "prio1", arg: 1, scope: !14014, file: !12382, line: 206, type: !107)
!14017 = !DILocalVariable(name: "prio2", arg: 2, scope: !14014, file: !12382, line: 206, type: !107)
!14018 = !DILocation(line: 0, scope: !14014)
!14019 = !DILocation(line: 208, column: 15, scope: !14014)
!14020 = !DILocation(line: 208, column: 2, scope: !14014)
!14021 = distinct !DISubprogram(name: "z_ready_thread", scope: !2316, file: !2316, line: 635, type: !13507, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14022)
!14022 = !{!14023, !14024, !14026}
!14023 = !DILocalVariable(name: "thread", arg: 1, scope: !14021, file: !2316, line: 635, type: !2211)
!14024 = !DILocalVariable(name: "__i", scope: !14025, file: !2316, line: 637, type: !13541)
!14025 = distinct !DILexicalBlock(scope: !14021, file: !2316, line: 637, column: 2)
!14026 = !DILocalVariable(name: "__key", scope: !14025, file: !2316, line: 637, type: !13541)
!14027 = !DILocation(line: 0, scope: !14021)
!14028 = !DILocation(line: 0, scope: !14025)
!14029 = !DILocation(line: 0, scope: !13549, inlinedAt: !14030)
!14030 = distinct !DILocation(line: 637, column: 2, scope: !14025)
!14031 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14032)
!14032 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14030)
!14033 = !DILocation(line: 0, scope: !13558, inlinedAt: !14032)
!14034 = !DILocation(line: 639, column: 4, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14036, file: !2316, line: 638, column: 41)
!14036 = distinct !DILexicalBlock(scope: !14037, file: !2316, line: 638, column: 7)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !2316, line: 637, column: 26)
!14038 = distinct !DILexicalBlock(scope: !14025, file: !2316, line: 637, column: 2)
!14039 = !DILocation(line: 0, scope: !13576, inlinedAt: !14040)
!14040 = distinct !DILocation(line: 637, column: 2, scope: !14038)
!14041 = !DILocation(line: 0, scope: !13584, inlinedAt: !14042)
!14042 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14040)
!14043 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14042)
!14044 = !DILocation(line: 642, column: 1, scope: !14021)
!14045 = distinct !DISubprogram(name: "ready_thread", scope: !2316, file: !2316, line: 617, type: !13507, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14046)
!14046 = !{!14047}
!14047 = !DILocalVariable(name: "thread", arg: 1, scope: !14045, file: !2316, line: 617, type: !2211)
!14048 = !DILocation(line: 0, scope: !14045)
!14049 = !DILocation(line: 626, column: 7, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14045, file: !2316, line: 626, column: 6)
!14051 = !DILocation(line: 626, column: 34, scope: !14050)
!14052 = !DILocation(line: 626, column: 37, scope: !14050)
!14053 = !DILocation(line: 626, column: 6, scope: !14045)
!14054 = !DILocation(line: 0, scope: !13735, inlinedAt: !14055)
!14055 = distinct !DILocation(line: 629, column: 3, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14050, file: !2316, line: 626, column: 64)
!14057 = !DILocation(line: 252, column: 15, scope: !13735, inlinedAt: !14055)
!14058 = !DILocation(line: 252, column: 28, scope: !13735, inlinedAt: !14055)
!14059 = !DILocation(line: 0, scope: !13742, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 254, column: 3, scope: !13746, inlinedAt: !14055)
!14061 = !DILocation(line: 0, scope: !13749, inlinedAt: !14062)
!14062 = distinct !DILocation(line: 229, column: 2, scope: !13742, inlinedAt: !14060)
!14063 = !DILocation(line: 188, column: 2, scope: !13759, inlinedAt: !14062)
!14064 = !DILocation(line: 188, column: 2, scope: !13761, inlinedAt: !14062)
!14065 = !DILocation(line: 0, scope: !13759, inlinedAt: !14062)
!14066 = !DILocation(line: 189, column: 7, scope: !13764, inlinedAt: !14062)
!14067 = !DILocation(line: 189, column: 35, scope: !13764, inlinedAt: !14062)
!14068 = !DILocation(line: 189, column: 7, scope: !13765, inlinedAt: !14062)
!14069 = !DILocation(line: 191, column: 21, scope: !13769, inlinedAt: !14062)
!14070 = !DILocation(line: 190, column: 4, scope: !13769, inlinedAt: !14062)
!14071 = !DILocation(line: 192, column: 4, scope: !13769, inlinedAt: !14062)
!14072 = distinct !{!14072, !14063, !14073}
!14073 = !DILocation(line: 194, column: 2, scope: !13759, inlinedAt: !14062)
!14074 = !DILocation(line: 196, column: 37, scope: !13749, inlinedAt: !14062)
!14075 = !DILocation(line: 196, column: 2, scope: !13749, inlinedAt: !14062)
!14076 = !DILocation(line: 197, column: 1, scope: !13749, inlinedAt: !14062)
!14077 = !DILocation(line: 630, column: 3, scope: !14056)
!14078 = !DILocation(line: 632, column: 2, scope: !14056)
!14079 = !DILocation(line: 633, column: 1, scope: !14045)
!14080 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12382, file: !12382, line: 120, type: !13667, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14081)
!14081 = !{!14082}
!14082 = !DILocalVariable(name: "thread", arg: 1, scope: !14080, file: !12382, line: 120, type: !2211)
!14083 = !DILocation(line: 0, scope: !14080)
!14084 = !DILocation(line: 122, column: 12, scope: !14080)
!14085 = !DILocation(line: 122, column: 62, scope: !14080)
!14086 = !DILocation(line: 123, column: 4, scope: !14080)
!14087 = !DILocation(line: 122, column: 2, scope: !14080)
!14088 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2316, file: !2316, line: 644, type: !13507, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14089)
!14089 = !{!14090, !14091, !14093}
!14090 = !DILocalVariable(name: "thread", arg: 1, scope: !14088, file: !2316, line: 644, type: !2211)
!14091 = !DILocalVariable(name: "__i", scope: !14092, file: !2316, line: 646, type: !13541)
!14092 = distinct !DILexicalBlock(scope: !14088, file: !2316, line: 646, column: 2)
!14093 = !DILocalVariable(name: "__key", scope: !14092, file: !2316, line: 646, type: !13541)
!14094 = !DILocation(line: 0, scope: !14088)
!14095 = !DILocation(line: 0, scope: !14092)
!14096 = !DILocation(line: 0, scope: !13549, inlinedAt: !14097)
!14097 = distinct !DILocation(line: 646, column: 2, scope: !14092)
!14098 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14099)
!14099 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14097)
!14100 = !DILocation(line: 0, scope: !13558, inlinedAt: !14099)
!14101 = !DILocation(line: 647, column: 3, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !2316, line: 646, column: 26)
!14103 = distinct !DILexicalBlock(scope: !14092, file: !2316, line: 646, column: 2)
!14104 = !DILocation(line: 0, scope: !13576, inlinedAt: !14105)
!14105 = distinct !DILocation(line: 646, column: 2, scope: !14103)
!14106 = !DILocation(line: 0, scope: !13584, inlinedAt: !14107)
!14107 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14105)
!14108 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14107)
!14109 = !DILocation(line: 649, column: 1, scope: !14088)
!14110 = distinct !DISubprogram(name: "z_sched_start", scope: !2316, file: !2316, line: 651, type: !13507, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14111)
!14111 = !{!14112, !14113}
!14112 = !DILocalVariable(name: "thread", arg: 1, scope: !14110, file: !2316, line: 651, type: !2211)
!14113 = !DILocalVariable(name: "key", scope: !14110, file: !2316, line: 653, type: !13541)
!14114 = !DILocation(line: 0, scope: !14110)
!14115 = !DILocation(line: 0, scope: !13549, inlinedAt: !14116)
!14116 = distinct !DILocation(line: 653, column: 25, scope: !14110)
!14117 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14118)
!14118 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14116)
!14119 = !DILocation(line: 0, scope: !13558, inlinedAt: !14118)
!14120 = !DILocation(line: 655, column: 6, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14110, file: !2316, line: 655, column: 6)
!14122 = !DILocation(line: 655, column: 6, scope: !14110)
!14123 = !DILocation(line: 0, scope: !13576, inlinedAt: !14124)
!14124 = distinct !DILocation(line: 656, column: 3, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14121, file: !2316, line: 655, column: 36)
!14126 = !DILocation(line: 0, scope: !13584, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14124)
!14128 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14127)
!14129 = !DILocation(line: 657, column: 3, scope: !14125)
!14130 = !DILocation(line: 660, column: 2, scope: !14110)
!14131 = !DILocation(line: 661, column: 2, scope: !14110)
!14132 = !DILocation(line: 662, column: 2, scope: !14110)
!14133 = !DILocation(line: 663, column: 1, scope: !14110)
!14134 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12382, file: !12382, line: 126, type: !13667, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14135)
!14135 = !{!14136}
!14136 = !DILocalVariable(name: "thread", arg: 1, scope: !14134, file: !12382, line: 126, type: !2211)
!14137 = !DILocation(line: 0, scope: !14134)
!14138 = !DILocation(line: 128, column: 23, scope: !14134)
!14139 = !DILocation(line: 128, column: 36, scope: !14134)
!14140 = !DILocation(line: 128, column: 56, scope: !14134)
!14141 = !DILocation(line: 128, column: 2, scope: !14134)
!14142 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12382, file: !12382, line: 155, type: !13507, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14143)
!14143 = !{!14144}
!14144 = !DILocalVariable(name: "thread", arg: 1, scope: !14142, file: !12382, line: 155, type: !2211)
!14145 = !DILocation(line: 0, scope: !14142)
!14146 = !DILocation(line: 157, column: 15, scope: !14142)
!14147 = !DILocation(line: 157, column: 28, scope: !14142)
!14148 = !DILocation(line: 158, column: 1, scope: !14142)
!14149 = distinct !DISubprogram(name: "z_reschedule", scope: !2316, file: !2316, line: 967, type: !13577, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14150)
!14150 = !{!14151, !14152}
!14151 = !DILocalVariable(name: "lock", arg: 1, scope: !14149, file: !2316, line: 967, type: !13552)
!14152 = !DILocalVariable(name: "key", arg: 2, scope: !14149, file: !2316, line: 967, type: !13541)
!14153 = !DILocation(line: 0, scope: !14149)
!14154 = !DILocation(line: 969, column: 6, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14149, file: !2316, line: 969, column: 6)
!14156 = !DILocation(line: 969, column: 23, scope: !14155)
!14157 = !DILocation(line: 969, column: 26, scope: !14155)
!14158 = !DILocation(line: 969, column: 6, scope: !14149)
!14159 = !DILocalVariable(name: "key", arg: 2, scope: !14160, file: !12486, line: 193, type: !13541)
!14160 = distinct !DISubprogram(name: "z_swap", scope: !12486, file: !12486, line: 193, type: !14161, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14163)
!14161 = !DISubroutineType(types: !14162)
!14162 = !{!107, !13552, !13541}
!14163 = !{!14164, !14159}
!14164 = !DILocalVariable(name: "lock", arg: 1, scope: !14160, file: !12486, line: 193, type: !13552)
!14165 = !DILocation(line: 0, scope: !14160, inlinedAt: !14166)
!14166 = distinct !DILocation(line: 970, column: 3, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14155, file: !2316, line: 969, column: 39)
!14168 = !DILocation(line: 196, column: 9, scope: !14160, inlinedAt: !14166)
!14169 = !DILocation(line: 971, column: 2, scope: !14167)
!14170 = !DILocation(line: 0, scope: !13576, inlinedAt: !14171)
!14171 = distinct !DILocation(line: 972, column: 3, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14155, file: !2316, line: 971, column: 9)
!14173 = !DILocation(line: 0, scope: !13584, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14171)
!14175 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14174)
!14176 = !DILocation(line: 975, column: 1, scope: !14149)
!14177 = distinct !DISubprogram(name: "resched", scope: !2316, file: !2316, line: 940, type: !14178, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14180)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!136, !162}
!14180 = !{!14181}
!14181 = !DILocalVariable(name: "key", arg: 1, scope: !14177, file: !2316, line: 940, type: !162)
!14182 = !DILocation(line: 0, scope: !14177)
!14183 = !DILocalVariable(name: "key", arg: 1, scope: !14184, file: !5879, line: 112, type: !32)
!14184 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5879, file: !5879, line: 112, type: !14185, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14187)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{!136, !32}
!14187 = !{!14183}
!14188 = !DILocation(line: 0, scope: !14184, inlinedAt: !14189)
!14189 = distinct !DILocation(line: 946, column: 9, scope: !14177)
!14190 = !DILocation(line: 115, column: 13, scope: !14184, inlinedAt: !14189)
!14191 = !DILocation(line: 946, column: 32, scope: !14177)
!14192 = !DILocation(line: 1031, column: 3, scope: !14193, inlinedAt: !14196)
!14193 = distinct !DISubprogram(name: "__get_IPSR", scope: !6053, file: !6053, line: 1027, type: !6134, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14194)
!14194 = !{!14195}
!14195 = !DILocalVariable(name: "result", scope: !14193, file: !6053, line: 1029, type: !162)
!14196 = distinct !DILocation(line: 48, column: 10, scope: !14197, inlinedAt: !14198)
!14197 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6847, file: !6847, line: 46, type: !6848, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!14198 = distinct !DILocation(line: 946, column: 36, scope: !14177)
!14199 = !{i64 2869753}
!14200 = !DILocation(line: 0, scope: !14193, inlinedAt: !14196)
!14201 = !DILocation(line: 48, column: 9, scope: !14197, inlinedAt: !14198)
!14202 = !DILocation(line: 946, column: 2, scope: !14177)
!14203 = distinct !DISubprogram(name: "need_swap", scope: !2316, file: !2316, line: 953, type: !6848, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14204)
!14204 = !{!14205}
!14205 = !DILocalVariable(name: "new_thread", scope: !14203, file: !2316, line: 959, type: !2211)
!14206 = !DILocation(line: 962, column: 31, scope: !14203)
!14207 = !DILocation(line: 0, scope: !14203)
!14208 = !DILocation(line: 963, column: 23, scope: !14203)
!14209 = !DILocation(line: 963, column: 20, scope: !14203)
!14210 = !DILocation(line: 963, column: 2, scope: !14203)
!14211 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12486, file: !12486, line: 181, type: !6063, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14212)
!14212 = !{!14213, !14214}
!14213 = !DILocalVariable(name: "key", arg: 1, scope: !14211, file: !12486, line: 181, type: !32)
!14214 = !DILocalVariable(name: "ret", scope: !14211, file: !12486, line: 183, type: !107)
!14215 = !DILocation(line: 0, scope: !14211)
!14216 = !DILocation(line: 185, column: 8, scope: !14211)
!14217 = !DILocation(line: 186, column: 2, scope: !14211)
!14218 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2316, file: !2316, line: 665, type: !13507, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14219)
!14219 = !{!14220, !14221, !14223}
!14220 = !DILocalVariable(name: "thread", arg: 1, scope: !14218, file: !2316, line: 665, type: !2211)
!14221 = !DILocalVariable(name: "__i", scope: !14222, file: !2316, line: 671, type: !13541)
!14222 = distinct !DILexicalBlock(scope: !14218, file: !2316, line: 671, column: 2)
!14223 = !DILocalVariable(name: "__key", scope: !14222, file: !2316, line: 671, type: !13541)
!14224 = !DILocation(line: 0, scope: !14218)
!14225 = !DILocation(line: 669, column: 8, scope: !14218)
!14226 = !DILocation(line: 0, scope: !14222)
!14227 = !DILocation(line: 0, scope: !13549, inlinedAt: !14228)
!14228 = distinct !DILocation(line: 671, column: 2, scope: !14222)
!14229 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14228)
!14231 = !DILocation(line: 0, scope: !13558, inlinedAt: !14230)
!14232 = !DILocation(line: 672, column: 7, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14234, file: !2316, line: 672, column: 7)
!14234 = distinct !DILexicalBlock(scope: !14235, file: !2316, line: 671, column: 26)
!14235 = distinct !DILexicalBlock(scope: !14222, file: !2316, line: 671, column: 2)
!14236 = !DILocation(line: 672, column: 7, scope: !14234)
!14237 = !DILocation(line: 0, scope: !13718, inlinedAt: !14238)
!14238 = distinct !DILocation(line: 673, column: 4, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14233, file: !2316, line: 672, column: 35)
!14240 = !DILocation(line: 266, column: 15, scope: !13718, inlinedAt: !14238)
!14241 = !DILocation(line: 266, column: 28, scope: !13718, inlinedAt: !14238)
!14242 = !DILocation(line: 0, scope: !13726, inlinedAt: !14243)
!14243 = distinct !DILocation(line: 268, column: 3, scope: !13730, inlinedAt: !14238)
!14244 = !DILocation(line: 234, column: 2, scope: !13726, inlinedAt: !14243)
!14245 = !DILocation(line: 674, column: 3, scope: !14239)
!14246 = !DILocation(line: 675, column: 3, scope: !14234)
!14247 = !DILocation(line: 676, column: 26, scope: !14234)
!14248 = !DILocation(line: 676, column: 23, scope: !14234)
!14249 = !DILocation(line: 676, column: 3, scope: !14234)
!14250 = !DILocation(line: 0, scope: !13576, inlinedAt: !14251)
!14251 = distinct !DILocation(line: 671, column: 2, scope: !14235)
!14252 = !DILocation(line: 0, scope: !13584, inlinedAt: !14253)
!14253 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14251)
!14254 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14253)
!14255 = !DILocation(line: 679, column: 16, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14218, file: !2316, line: 679, column: 6)
!14257 = !DILocation(line: 679, column: 13, scope: !14256)
!14258 = !DILocation(line: 679, column: 6, scope: !14218)
!14259 = !DILocation(line: 680, column: 3, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14256, file: !2316, line: 679, column: 26)
!14261 = !DILocation(line: 681, column: 2, scope: !14260)
!14262 = !DILocation(line: 684, column: 1, scope: !14218)
!14263 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12774, file: !12774, line: 52, type: !13525, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14264)
!14264 = !{!14265}
!14265 = !DILocalVariable(name: "thread", arg: 1, scope: !14263, file: !12774, line: 52, type: !2211)
!14266 = !DILocation(line: 0, scope: !14263)
!14267 = !DILocation(line: 54, column: 39, scope: !14263)
!14268 = !DILocation(line: 54, column: 9, scope: !14263)
!14269 = !DILocation(line: 54, column: 2, scope: !14263)
!14270 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12382, file: !12382, line: 141, type: !13507, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14271)
!14271 = !{!14272}
!14272 = !DILocalVariable(name: "thread", arg: 1, scope: !14270, file: !12382, line: 141, type: !2211)
!14273 = !DILocation(line: 0, scope: !14270)
!14274 = !DILocation(line: 143, column: 15, scope: !14270)
!14275 = !DILocation(line: 143, column: 28, scope: !14270)
!14276 = !DILocation(line: 146, column: 1, scope: !14270)
!14277 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12382, file: !12382, line: 73, type: !3113, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!14278 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 75, column: 30, scope: !14277)
!14280 = !DILocation(line: 0, scope: !13558, inlinedAt: !14279)
!14281 = !DILocation(line: 75, column: 9, scope: !14277)
!14282 = !DILocation(line: 76, column: 1, scope: !14277)
!14283 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2316, file: !2316, line: 977, type: !6144, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14284)
!14284 = !{!14285}
!14285 = !DILocalVariable(name: "key", arg: 1, scope: !14283, file: !2316, line: 977, type: !162)
!14286 = !DILocation(line: 0, scope: !14283)
!14287 = !DILocation(line: 979, column: 6, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14283, file: !2316, line: 979, column: 6)
!14289 = !DILocation(line: 979, column: 6, scope: !14283)
!14290 = !DILocation(line: 980, column: 3, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14288, file: !2316, line: 979, column: 20)
!14292 = !DILocation(line: 981, column: 2, scope: !14291)
!14293 = !DILocation(line: 0, scope: !13584, inlinedAt: !14294)
!14294 = distinct !DILocation(line: 982, column: 3, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14288, file: !2316, line: 981, column: 9)
!14296 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14294)
!14297 = !DILocation(line: 985, column: 1, scope: !14283)
!14298 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2316, file: !2316, line: 695, type: !13507, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14299)
!14299 = !{!14300, !14301}
!14300 = !DILocalVariable(name: "thread", arg: 1, scope: !14298, file: !2316, line: 695, type: !2211)
!14301 = !DILocalVariable(name: "key", scope: !14298, file: !2316, line: 699, type: !13541)
!14302 = !DILocation(line: 0, scope: !14298)
!14303 = !DILocation(line: 0, scope: !13549, inlinedAt: !14304)
!14304 = distinct !DILocation(line: 699, column: 25, scope: !14298)
!14305 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14306)
!14306 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14304)
!14307 = !DILocation(line: 0, scope: !13558, inlinedAt: !14306)
!14308 = !DILocation(line: 702, column: 7, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14298, file: !2316, line: 702, column: 6)
!14310 = !DILocation(line: 702, column: 6, scope: !14298)
!14311 = !DILocation(line: 0, scope: !13576, inlinedAt: !14312)
!14312 = distinct !DILocation(line: 703, column: 3, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14309, file: !2316, line: 702, column: 38)
!14314 = !DILocation(line: 0, scope: !13584, inlinedAt: !14315)
!14315 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14312)
!14316 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14315)
!14317 = !DILocation(line: 704, column: 3, scope: !14313)
!14318 = !DILocation(line: 707, column: 2, scope: !14298)
!14319 = !DILocation(line: 708, column: 2, scope: !14298)
!14320 = !DILocation(line: 710, column: 2, scope: !14298)
!14321 = !DILocation(line: 713, column: 1, scope: !14298)
!14322 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12382, file: !12382, line: 96, type: !13667, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14323)
!14323 = !{!14324}
!14324 = !DILocalVariable(name: "thread", arg: 1, scope: !14322, file: !12382, line: 96, type: !2211)
!14325 = !DILocation(line: 0, scope: !14322)
!14326 = !DILocation(line: 98, column: 23, scope: !14322)
!14327 = !DILocation(line: 98, column: 36, scope: !14322)
!14328 = !DILocation(line: 98, column: 57, scope: !14322)
!14329 = !DILocation(line: 98, column: 2, scope: !14322)
!14330 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12382, file: !12382, line: 148, type: !13507, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14331)
!14331 = !{!14332}
!14332 = !DILocalVariable(name: "thread", arg: 1, scope: !14330, file: !12382, line: 148, type: !2211)
!14333 = !DILocation(line: 0, scope: !14330)
!14334 = !DILocation(line: 150, column: 15, scope: !14330)
!14335 = !DILocation(line: 150, column: 28, scope: !14330)
!14336 = !DILocation(line: 153, column: 1, scope: !14330)
!14337 = distinct !DISubprogram(name: "z_pend_thread", scope: !2316, file: !2316, line: 770, type: !14338, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14344)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{null, !2211, !2242, !14340}
!14340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14341)
!14341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14342)
!14342 = !{!14343}
!14343 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14341, file: !104, line: 66, baseType: !103, size: 64)
!14344 = !{!14345, !14346, !14347, !14348, !14350}
!14345 = !DILocalVariable(name: "thread", arg: 1, scope: !14337, file: !2316, line: 770, type: !2211)
!14346 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14337, file: !2316, line: 770, type: !2242)
!14347 = !DILocalVariable(name: "timeout", arg: 3, scope: !14337, file: !2316, line: 771, type: !14340)
!14348 = !DILocalVariable(name: "__i", scope: !14349, file: !2316, line: 774, type: !13541)
!14349 = distinct !DILexicalBlock(scope: !14337, file: !2316, line: 774, column: 2)
!14350 = !DILocalVariable(name: "__key", scope: !14349, file: !2316, line: 774, type: !13541)
!14351 = !DILocation(line: 0, scope: !14337)
!14352 = !DILocation(line: 0, scope: !14349)
!14353 = !DILocation(line: 0, scope: !13549, inlinedAt: !14354)
!14354 = distinct !DILocation(line: 774, column: 2, scope: !14349)
!14355 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14356)
!14356 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14354)
!14357 = !DILocation(line: 0, scope: !13558, inlinedAt: !14356)
!14358 = !DILocation(line: 775, column: 3, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14360, file: !2316, line: 774, column: 26)
!14360 = distinct !DILexicalBlock(scope: !14349, file: !2316, line: 774, column: 2)
!14361 = !DILocation(line: 0, scope: !13576, inlinedAt: !14362)
!14362 = distinct !DILocation(line: 774, column: 2, scope: !14360)
!14363 = !DILocation(line: 0, scope: !13584, inlinedAt: !14364)
!14364 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14362)
!14365 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14364)
!14366 = !DILocation(line: 777, column: 1, scope: !14337)
!14367 = distinct !DISubprogram(name: "pend_locked", scope: !2316, file: !2316, line: 760, type: !14338, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14368)
!14368 = !{!14369, !14370, !14371}
!14369 = !DILocalVariable(name: "thread", arg: 1, scope: !14367, file: !2316, line: 760, type: !2211)
!14370 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14367, file: !2316, line: 760, type: !2242)
!14371 = !DILocalVariable(name: "timeout", arg: 3, scope: !14367, file: !2316, line: 761, type: !14340)
!14372 = !DILocation(line: 0, scope: !14367)
!14373 = !DILocation(line: 766, column: 2, scope: !14367)
!14374 = !DILocation(line: 767, column: 2, scope: !14367)
!14375 = !DILocation(line: 768, column: 1, scope: !14367)
!14376 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2316, file: !2316, line: 740, type: !14377, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14379)
!14377 = !DISubroutineType(types: !14378)
!14378 = !{null, !2211, !2242}
!14379 = !{!14380, !14381}
!14380 = !DILocalVariable(name: "thread", arg: 1, scope: !14376, file: !2316, line: 740, type: !2211)
!14381 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14376, file: !2316, line: 740, type: !2242)
!14382 = !DILocation(line: 0, scope: !14376)
!14383 = !DILocation(line: 742, column: 2, scope: !14376)
!14384 = !DILocation(line: 743, column: 2, scope: !14376)
!14385 = !DILocation(line: 747, column: 13, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14376, file: !2316, line: 747, column: 6)
!14387 = !DILocation(line: 747, column: 6, scope: !14376)
!14388 = !DILocation(line: 748, column: 16, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14386, file: !2316, line: 747, column: 22)
!14390 = !DILocation(line: 748, column: 26, scope: !14389)
!14391 = !DILocation(line: 749, column: 28, scope: !14389)
!14392 = !DILocation(line: 0, scope: !13749, inlinedAt: !14393)
!14393 = distinct !DILocation(line: 749, column: 3, scope: !14389)
!14394 = !DILocation(line: 188, column: 2, scope: !13759, inlinedAt: !14393)
!14395 = !DILocation(line: 188, column: 2, scope: !13761, inlinedAt: !14393)
!14396 = !DILocation(line: 0, scope: !13759, inlinedAt: !14393)
!14397 = !DILocation(line: 189, column: 7, scope: !13764, inlinedAt: !14393)
!14398 = !DILocation(line: 189, column: 35, scope: !13764, inlinedAt: !14393)
!14399 = !DILocation(line: 189, column: 7, scope: !13765, inlinedAt: !14393)
!14400 = !DILocation(line: 191, column: 21, scope: !13769, inlinedAt: !14393)
!14401 = !DILocation(line: 190, column: 4, scope: !13769, inlinedAt: !14393)
!14402 = !DILocation(line: 192, column: 4, scope: !13769, inlinedAt: !14393)
!14403 = distinct !{!14403, !14394, !14404}
!14404 = !DILocation(line: 194, column: 2, scope: !13759, inlinedAt: !14393)
!14405 = !DILocation(line: 196, column: 37, scope: !13749, inlinedAt: !14393)
!14406 = !DILocation(line: 196, column: 2, scope: !13749, inlinedAt: !14393)
!14407 = !DILocation(line: 197, column: 1, scope: !13749, inlinedAt: !14393)
!14408 = !DILocation(line: 751, column: 1, scope: !14376)
!14409 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2316, file: !2316, line: 753, type: !14410, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14412)
!14410 = !DISubroutineType(types: !14411)
!14411 = !{null, !2211, !14340}
!14412 = !{!14413, !14414}
!14413 = !DILocalVariable(name: "thread", arg: 1, scope: !14409, file: !2316, line: 753, type: !2211)
!14414 = !DILocalVariable(name: "timeout", arg: 2, scope: !14409, file: !2316, line: 753, type: !14340)
!14415 = !DILocation(line: 0, scope: !14409)
!14416 = !DILocation(line: 755, column: 7, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14409, file: !2316, line: 755, column: 6)
!14418 = !DILocation(line: 755, column: 6, scope: !14409)
!14419 = !DILocation(line: 756, column: 3, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14417, file: !2316, line: 755, column: 41)
!14421 = !DILocation(line: 757, column: 2, scope: !14420)
!14422 = !DILocation(line: 758, column: 1, scope: !14409)
!14423 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12774, file: !12774, line: 47, type: !14410, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14424)
!14424 = !{!14425, !14426}
!14425 = !DILocalVariable(name: "thread", arg: 1, scope: !14423, file: !12774, line: 47, type: !2211)
!14426 = !DILocalVariable(name: "ticks", arg: 2, scope: !14423, file: !12774, line: 47, type: !14340)
!14427 = !DILocation(line: 0, scope: !14423)
!14428 = !DILocation(line: 49, column: 30, scope: !14423)
!14429 = !DILocation(line: 49, column: 2, scope: !14423)
!14430 = !DILocation(line: 50, column: 1, scope: !14423)
!14431 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2316, file: !2316, line: 795, type: !2268, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14432)
!14432 = !{!14433, !14434, !14435, !14437, !14438}
!14433 = !DILocalVariable(name: "timeout", arg: 1, scope: !14431, file: !2316, line: 795, type: !2270)
!14434 = !DILocalVariable(name: "thread", scope: !14431, file: !2316, line: 797, type: !2211)
!14435 = !DILocalVariable(name: "__i", scope: !14436, file: !2316, line: 800, type: !13541)
!14436 = distinct !DILexicalBlock(scope: !14431, file: !2316, line: 800, column: 2)
!14437 = !DILocalVariable(name: "__key", scope: !14436, file: !2316, line: 800, type: !13541)
!14438 = !DILocalVariable(name: "killed", scope: !14439, file: !2316, line: 801, type: !136)
!14439 = distinct !DILexicalBlock(scope: !14440, file: !2316, line: 800, column: 26)
!14440 = distinct !DILexicalBlock(scope: !14436, file: !2316, line: 800, column: 2)
!14441 = !DILocation(line: 0, scope: !14431)
!14442 = !DILocation(line: 797, column: 28, scope: !14431)
!14443 = !DILocation(line: 0, scope: !14436)
!14444 = !DILocation(line: 0, scope: !13549, inlinedAt: !14445)
!14445 = distinct !DILocation(line: 800, column: 2, scope: !14436)
!14446 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14447)
!14447 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14445)
!14448 = !DILocation(line: 0, scope: !13558, inlinedAt: !14447)
!14449 = !DILocation(line: 801, column: 27, scope: !14439)
!14450 = !DILocation(line: 801, column: 32, scope: !14439)
!14451 = !DILocation(line: 801, column: 61, scope: !14439)
!14452 = !DILocation(line: 0, scope: !14439)
!14453 = !DILocation(line: 804, column: 7, scope: !14439)
!14454 = !DILocation(line: 805, column: 21, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14456, file: !2316, line: 805, column: 8)
!14456 = distinct !DILexicalBlock(scope: !14457, file: !2316, line: 804, column: 16)
!14457 = distinct !DILexicalBlock(scope: !14439, file: !2316, line: 804, column: 7)
!14458 = !DILocation(line: 805, column: 31, scope: !14455)
!14459 = !DILocation(line: 805, column: 8, scope: !14456)
!14460 = !DILocation(line: 806, column: 5, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14455, file: !2316, line: 805, column: 40)
!14462 = !DILocation(line: 807, column: 4, scope: !14461)
!14463 = !DILocation(line: 808, column: 4, scope: !14456)
!14464 = !DILocation(line: 809, column: 4, scope: !14456)
!14465 = !DILocation(line: 810, column: 4, scope: !14456)
!14466 = !DILocation(line: 811, column: 3, scope: !14456)
!14467 = !DILocation(line: 0, scope: !13576, inlinedAt: !14468)
!14468 = distinct !DILocation(line: 800, column: 2, scope: !14440)
!14469 = !DILocation(line: 0, scope: !13584, inlinedAt: !14470)
!14470 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14468)
!14471 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14470)
!14472 = !DILocation(line: 813, column: 1, scope: !14431)
!14473 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2316, file: !2316, line: 779, type: !13507, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14474)
!14474 = !{!14475}
!14475 = !DILocalVariable(name: "thread", arg: 1, scope: !14473, file: !2316, line: 779, type: !2211)
!14476 = !DILocation(line: 0, scope: !14473)
!14477 = !DILocation(line: 781, column: 2, scope: !14473)
!14478 = !DILocation(line: 782, column: 2, scope: !14473)
!14479 = !DILocation(line: 783, column: 15, scope: !14473)
!14480 = !DILocation(line: 783, column: 25, scope: !14473)
!14481 = !DILocation(line: 784, column: 1, scope: !14473)
!14482 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12382, file: !12382, line: 165, type: !13507, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14483)
!14483 = !{!14484}
!14484 = !DILocalVariable(name: "thread", arg: 1, scope: !14482, file: !12382, line: 165, type: !2211)
!14485 = !DILocation(line: 0, scope: !14482)
!14486 = !DILocation(line: 167, column: 15, scope: !14482)
!14487 = !DILocation(line: 167, column: 28, scope: !14482)
!14488 = !DILocation(line: 168, column: 1, scope: !14482)
!14489 = distinct !DISubprogram(name: "unready_thread", scope: !2316, file: !2316, line: 731, type: !13507, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14490)
!14490 = !{!14491}
!14491 = !DILocalVariable(name: "thread", arg: 1, scope: !14489, file: !2316, line: 731, type: !2211)
!14492 = !DILocation(line: 0, scope: !14489)
!14493 = !DILocation(line: 733, column: 6, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14489, file: !2316, line: 733, column: 6)
!14495 = !DILocation(line: 733, column: 6, scope: !14489)
!14496 = !DILocation(line: 0, scope: !13718, inlinedAt: !14497)
!14497 = distinct !DILocation(line: 734, column: 3, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14494, file: !2316, line: 733, column: 34)
!14499 = !DILocation(line: 266, column: 15, scope: !13718, inlinedAt: !14497)
!14500 = !DILocation(line: 266, column: 28, scope: !13718, inlinedAt: !14497)
!14501 = !DILocation(line: 0, scope: !13726, inlinedAt: !14502)
!14502 = distinct !DILocation(line: 268, column: 3, scope: !13730, inlinedAt: !14497)
!14503 = !DILocation(line: 234, column: 2, scope: !13726, inlinedAt: !14502)
!14504 = !DILocation(line: 735, column: 2, scope: !14498)
!14505 = !DILocation(line: 736, column: 25, scope: !14489)
!14506 = !DILocation(line: 736, column: 22, scope: !14489)
!14507 = !DILocation(line: 736, column: 2, scope: !14489)
!14508 = !DILocation(line: 737, column: 1, scope: !14489)
!14509 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12382, file: !12382, line: 160, type: !13507, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14510)
!14510 = !{!14511}
!14511 = !DILocalVariable(name: "thread", arg: 1, scope: !14509, file: !12382, line: 160, type: !2211)
!14512 = !DILocation(line: 0, scope: !14509)
!14513 = !DILocation(line: 162, column: 15, scope: !14509)
!14514 = !DILocation(line: 162, column: 28, scope: !14509)
!14515 = !DILocation(line: 163, column: 1, scope: !14509)
!14516 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2316, file: !2316, line: 786, type: !13507, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14517)
!14517 = !{!14518, !14519, !14521}
!14518 = !DILocalVariable(name: "thread", arg: 1, scope: !14516, file: !2316, line: 786, type: !2211)
!14519 = !DILocalVariable(name: "__i", scope: !14520, file: !2316, line: 788, type: !13541)
!14520 = distinct !DILexicalBlock(scope: !14516, file: !2316, line: 788, column: 2)
!14521 = !DILocalVariable(name: "__key", scope: !14520, file: !2316, line: 788, type: !13541)
!14522 = !DILocation(line: 0, scope: !14516)
!14523 = !DILocation(line: 0, scope: !14520)
!14524 = !DILocation(line: 0, scope: !13549, inlinedAt: !14525)
!14525 = distinct !DILocation(line: 788, column: 2, scope: !14520)
!14526 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14527)
!14527 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14525)
!14528 = !DILocation(line: 0, scope: !13558, inlinedAt: !14527)
!14529 = !DILocation(line: 789, column: 3, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14531, file: !2316, line: 788, column: 26)
!14531 = distinct !DILexicalBlock(scope: !14520, file: !2316, line: 788, column: 2)
!14532 = !DILocation(line: 0, scope: !13576, inlinedAt: !14533)
!14533 = distinct !DILocation(line: 788, column: 2, scope: !14531)
!14534 = !DILocation(line: 0, scope: !13584, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14533)
!14536 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14535)
!14537 = !DILocation(line: 791, column: 1, scope: !14516)
!14538 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2316, file: !2316, line: 816, type: !14539, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14541)
!14539 = !DISubroutineType(types: !14540)
!14540 = !{!107, !162, !2242, !14340}
!14541 = !{!14542, !14543, !14544, !14545, !14546, !14548}
!14542 = !DILocalVariable(name: "key", arg: 1, scope: !14538, file: !2316, line: 816, type: !162)
!14543 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14538, file: !2316, line: 816, type: !2242)
!14544 = !DILocalVariable(name: "timeout", arg: 3, scope: !14538, file: !2316, line: 816, type: !14340)
!14545 = !DILocalVariable(name: "ret", scope: !14538, file: !2316, line: 828, type: !107)
!14546 = !DILocalVariable(name: "__i", scope: !14547, file: !2316, line: 829, type: !13541)
!14547 = distinct !DILexicalBlock(scope: !14538, file: !2316, line: 829, column: 2)
!14548 = !DILocalVariable(name: "__key", scope: !14547, file: !2316, line: 829, type: !13541)
!14549 = !DILocation(line: 0, scope: !14538)
!14550 = !DILocation(line: 823, column: 14, scope: !14538)
!14551 = !DILocation(line: 823, column: 2, scope: !14538)
!14552 = !DILocation(line: 826, column: 20, scope: !14538)
!14553 = !DILocation(line: 826, column: 18, scope: !14538)
!14554 = !DILocation(line: 828, column: 12, scope: !14538)
!14555 = !DILocation(line: 0, scope: !14547)
!14556 = !DILocation(line: 0, scope: !13549, inlinedAt: !14557)
!14557 = distinct !DILocation(line: 829, column: 2, scope: !14547)
!14558 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14559)
!14559 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14557)
!14560 = !DILocation(line: 0, scope: !13558, inlinedAt: !14559)
!14561 = !DILocation(line: 830, column: 7, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14563, file: !2316, line: 830, column: 7)
!14563 = distinct !DILexicalBlock(scope: !14564, file: !2316, line: 829, column: 26)
!14564 = distinct !DILexicalBlock(scope: !14547, file: !2316, line: 829, column: 2)
!14565 = !DILocation(line: 830, column: 26, scope: !14562)
!14566 = !DILocation(line: 830, column: 23, scope: !14562)
!14567 = !DILocation(line: 830, column: 7, scope: !14563)
!14568 = !DILocation(line: 831, column: 20, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14562, file: !2316, line: 830, column: 36)
!14570 = !DILocation(line: 832, column: 3, scope: !14569)
!14571 = !DILocation(line: 0, scope: !13576, inlinedAt: !14572)
!14572 = distinct !DILocation(line: 829, column: 2, scope: !14564)
!14573 = !DILocation(line: 0, scope: !13584, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14572)
!14575 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14574)
!14576 = !DILocation(line: 834, column: 2, scope: !14538)
!14577 = distinct !DISubprogram(name: "z_pend_curr", scope: !2316, file: !2316, line: 840, type: !14578, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14580)
!14578 = !DISubroutineType(types: !14579)
!14579 = !{!107, !13552, !13541, !2242, !14340}
!14580 = !{!14581, !14582, !14583, !14584}
!14581 = !DILocalVariable(name: "lock", arg: 1, scope: !14577, file: !2316, line: 840, type: !13552)
!14582 = !DILocalVariable(name: "key", arg: 2, scope: !14577, file: !2316, line: 840, type: !13541)
!14583 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14577, file: !2316, line: 841, type: !2242)
!14584 = !DILocalVariable(name: "timeout", arg: 4, scope: !14577, file: !2316, line: 841, type: !14340)
!14585 = !DILocation(line: 0, scope: !14577)
!14586 = !DILocation(line: 844, column: 20, scope: !14577)
!14587 = !DILocation(line: 844, column: 18, scope: !14577)
!14588 = !DILocation(line: 0, scope: !13549, inlinedAt: !14589)
!14589 = distinct !DILocation(line: 856, column: 9, scope: !14577)
!14590 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14591)
!14591 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14589)
!14592 = !DILocation(line: 0, scope: !13558, inlinedAt: !14591)
!14593 = !DILocation(line: 857, column: 14, scope: !14577)
!14594 = !DILocation(line: 857, column: 2, scope: !14577)
!14595 = !DILocation(line: 0, scope: !14160, inlinedAt: !14596)
!14596 = distinct !DILocation(line: 859, column: 9, scope: !14577)
!14597 = !DILocation(line: 196, column: 9, scope: !14160, inlinedAt: !14596)
!14598 = !DILocation(line: 859, column: 2, scope: !14577)
!14599 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2316, file: !2316, line: 862, type: !14600, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14602)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{!2211, !2242}
!14602 = !{!14603, !14604, !14605, !14607}
!14603 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14599, file: !2316, line: 862, type: !2242)
!14604 = !DILocalVariable(name: "thread", scope: !14599, file: !2316, line: 864, type: !2211)
!14605 = !DILocalVariable(name: "__i", scope: !14606, file: !2316, line: 866, type: !13541)
!14606 = distinct !DILexicalBlock(scope: !14599, file: !2316, line: 866, column: 2)
!14607 = !DILocalVariable(name: "__key", scope: !14606, file: !2316, line: 866, type: !13541)
!14608 = !DILocation(line: 0, scope: !14599)
!14609 = !DILocation(line: 0, scope: !14606)
!14610 = !DILocation(line: 0, scope: !13549, inlinedAt: !14611)
!14611 = distinct !DILocation(line: 866, column: 2, scope: !14606)
!14612 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14613)
!14613 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14611)
!14614 = !DILocation(line: 0, scope: !13558, inlinedAt: !14613)
!14615 = !DILocation(line: 867, column: 12, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14617, file: !2316, line: 866, column: 26)
!14617 = distinct !DILexicalBlock(scope: !14606, file: !2316, line: 866, column: 2)
!14618 = !DILocation(line: 869, column: 14, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14616, file: !2316, line: 869, column: 7)
!14620 = !DILocation(line: 869, column: 7, scope: !14616)
!14621 = !DILocation(line: 870, column: 4, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14619, file: !2316, line: 869, column: 23)
!14623 = !DILocation(line: 871, column: 3, scope: !14622)
!14624 = !DILocation(line: 0, scope: !13576, inlinedAt: !14625)
!14625 = distinct !DILocation(line: 866, column: 2, scope: !14617)
!14626 = !DILocation(line: 0, scope: !13584, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14625)
!14628 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14627)
!14629 = !DILocation(line: 874, column: 2, scope: !14599)
!14630 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2316, file: !2316, line: 877, type: !14600, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14631)
!14631 = !{!14632, !14633, !14634, !14636}
!14632 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14630, file: !2316, line: 877, type: !2242)
!14633 = !DILocalVariable(name: "thread", scope: !14630, file: !2316, line: 879, type: !2211)
!14634 = !DILocalVariable(name: "__i", scope: !14635, file: !2316, line: 881, type: !13541)
!14635 = distinct !DILexicalBlock(scope: !14630, file: !2316, line: 881, column: 2)
!14636 = !DILocalVariable(name: "__key", scope: !14635, file: !2316, line: 881, type: !13541)
!14637 = !DILocation(line: 0, scope: !14630)
!14638 = !DILocation(line: 0, scope: !14635)
!14639 = !DILocation(line: 0, scope: !13549, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 881, column: 2, scope: !14635)
!14641 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14642)
!14642 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14640)
!14643 = !DILocation(line: 0, scope: !13558, inlinedAt: !14642)
!14644 = !DILocation(line: 882, column: 12, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !2316, line: 881, column: 26)
!14646 = distinct !DILexicalBlock(scope: !14635, file: !2316, line: 881, column: 2)
!14647 = !DILocation(line: 884, column: 14, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14645, file: !2316, line: 884, column: 7)
!14649 = !DILocation(line: 884, column: 7, scope: !14645)
!14650 = !DILocation(line: 885, column: 4, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14648, file: !2316, line: 884, column: 23)
!14652 = !DILocation(line: 886, column: 10, scope: !14651)
!14653 = !DILocation(line: 887, column: 3, scope: !14651)
!14654 = !DILocation(line: 0, scope: !13576, inlinedAt: !14655)
!14655 = distinct !DILocation(line: 881, column: 2, scope: !14646)
!14656 = !DILocation(line: 0, scope: !13584, inlinedAt: !14657)
!14657 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14655)
!14658 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14657)
!14659 = !DILocation(line: 890, column: 2, scope: !14630)
!14660 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2316, file: !2316, line: 893, type: !13507, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14661)
!14661 = !{!14662}
!14662 = !DILocalVariable(name: "thread", arg: 1, scope: !14660, file: !2316, line: 893, type: !2211)
!14663 = !DILocation(line: 0, scope: !14660)
!14664 = !DILocation(line: 0, scope: !14516, inlinedAt: !14665)
!14665 = distinct !DILocation(line: 895, column: 2, scope: !14660)
!14666 = !DILocation(line: 0, scope: !14520, inlinedAt: !14665)
!14667 = !DILocation(line: 0, scope: !13549, inlinedAt: !14668)
!14668 = distinct !DILocation(line: 788, column: 2, scope: !14520, inlinedAt: !14665)
!14669 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14670)
!14670 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14668)
!14671 = !DILocation(line: 0, scope: !13558, inlinedAt: !14670)
!14672 = !DILocation(line: 789, column: 3, scope: !14530, inlinedAt: !14665)
!14673 = !DILocation(line: 0, scope: !13576, inlinedAt: !14674)
!14674 = distinct !DILocation(line: 788, column: 2, scope: !14531, inlinedAt: !14665)
!14675 = !DILocation(line: 0, scope: !13584, inlinedAt: !14676)
!14676 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14674)
!14677 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14676)
!14678 = !DILocation(line: 896, column: 8, scope: !14660)
!14679 = !DILocation(line: 897, column: 1, scope: !14660)
!14680 = distinct !DISubprogram(name: "z_set_prio", scope: !2316, file: !2316, line: 902, type: !13869, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14681)
!14681 = !{!14682, !14683, !14684, !14685, !14687}
!14682 = !DILocalVariable(name: "thread", arg: 1, scope: !14680, file: !2316, line: 902, type: !2211)
!14683 = !DILocalVariable(name: "prio", arg: 2, scope: !14680, file: !2316, line: 902, type: !107)
!14684 = !DILocalVariable(name: "need_sched", scope: !14680, file: !2316, line: 904, type: !136)
!14685 = !DILocalVariable(name: "__i", scope: !14686, file: !2316, line: 906, type: !13541)
!14686 = distinct !DILexicalBlock(scope: !14680, file: !2316, line: 906, column: 2)
!14687 = !DILocalVariable(name: "__key", scope: !14686, file: !2316, line: 906, type: !13541)
!14688 = !DILocation(line: 0, scope: !14680)
!14689 = !DILocation(line: 0, scope: !14686)
!14690 = !DILocation(line: 0, scope: !13549, inlinedAt: !14691)
!14691 = distinct !DILocation(line: 906, column: 2, scope: !14686)
!14692 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14691)
!14694 = !DILocation(line: 0, scope: !13558, inlinedAt: !14693)
!14695 = !DILocation(line: 907, column: 16, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14697, file: !2316, line: 906, column: 26)
!14697 = distinct !DILexicalBlock(scope: !14686, file: !2316, line: 906, column: 2)
!14698 = !DILocation(line: 909, column: 7, scope: !14696)
!14699 = !DILocation(line: 0, scope: !13718, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 912, column: 5, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14702, file: !2316, line: 911, column: 63)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !2316, line: 911, column: 8)
!14703 = distinct !DILexicalBlock(scope: !14704, file: !2316, line: 909, column: 19)
!14704 = distinct !DILexicalBlock(scope: !14696, file: !2316, line: 909, column: 7)
!14705 = !DILocation(line: 266, column: 28, scope: !13718, inlinedAt: !14700)
!14706 = !DILocation(line: 0, scope: !13726, inlinedAt: !14707)
!14707 = distinct !DILocation(line: 268, column: 3, scope: !13730, inlinedAt: !14700)
!14708 = !DILocation(line: 234, column: 2, scope: !13726, inlinedAt: !14707)
!14709 = !DILocation(line: 913, column: 23, scope: !14701)
!14710 = !DILocation(line: 0, scope: !13735, inlinedAt: !14711)
!14711 = distinct !DILocation(line: 914, column: 5, scope: !14701)
!14712 = !DILocation(line: 252, column: 28, scope: !13735, inlinedAt: !14711)
!14713 = !DILocation(line: 0, scope: !13742, inlinedAt: !14714)
!14714 = distinct !DILocation(line: 254, column: 3, scope: !13746, inlinedAt: !14711)
!14715 = !DILocation(line: 0, scope: !13749, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 229, column: 2, scope: !13742, inlinedAt: !14714)
!14717 = !DILocation(line: 188, column: 2, scope: !13759, inlinedAt: !14716)
!14718 = !DILocation(line: 188, column: 2, scope: !13761, inlinedAt: !14716)
!14719 = !DILocation(line: 0, scope: !13759, inlinedAt: !14716)
!14720 = !DILocation(line: 189, column: 7, scope: !13764, inlinedAt: !14716)
!14721 = !DILocation(line: 189, column: 35, scope: !13764, inlinedAt: !14716)
!14722 = !DILocation(line: 189, column: 7, scope: !13765, inlinedAt: !14716)
!14723 = !DILocation(line: 190, column: 4, scope: !13769, inlinedAt: !14716)
!14724 = !DILocation(line: 192, column: 4, scope: !13769, inlinedAt: !14716)
!14725 = distinct !{!14725, !14717, !14726}
!14726 = !DILocation(line: 194, column: 2, scope: !13759, inlinedAt: !14716)
!14727 = !DILocation(line: 196, column: 2, scope: !13749, inlinedAt: !14716)
!14728 = !DILocation(line: 197, column: 1, scope: !13749, inlinedAt: !14716)
!14729 = !DILocation(line: 918, column: 4, scope: !14703)
!14730 = !DILocation(line: 919, column: 3, scope: !14703)
!14731 = !DILocation(line: 920, column: 22, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14704, file: !2316, line: 919, column: 10)
!14733 = !DILocation(line: 0, scope: !13576, inlinedAt: !14734)
!14734 = distinct !DILocation(line: 906, column: 2, scope: !14697)
!14735 = !DILocation(line: 0, scope: !13584, inlinedAt: !14736)
!14736 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14734)
!14737 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14736)
!14738 = !DILocation(line: 926, column: 2, scope: !14680)
!14739 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2316, file: !2316, line: 929, type: !14740, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14742)
!14740 = !DISubroutineType(types: !14741)
!14741 = !{null, !2211, !107}
!14742 = !{!14743, !14744, !14745}
!14743 = !DILocalVariable(name: "thread", arg: 1, scope: !14739, file: !2316, line: 929, type: !2211)
!14744 = !DILocalVariable(name: "prio", arg: 2, scope: !14739, file: !2316, line: 929, type: !107)
!14745 = !DILocalVariable(name: "need_sched", scope: !14739, file: !2316, line: 931, type: !136)
!14746 = !DILocation(line: 0, scope: !14739)
!14747 = !DILocation(line: 931, column: 20, scope: !14739)
!14748 = !DILocation(line: 935, column: 17, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14739, file: !2316, line: 935, column: 6)
!14750 = !DILocation(line: 935, column: 20, scope: !14749)
!14751 = !DILocation(line: 935, column: 35, scope: !14749)
!14752 = !DILocation(line: 935, column: 48, scope: !14749)
!14753 = !DILocation(line: 935, column: 6, scope: !14739)
!14754 = !DILocation(line: 936, column: 3, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14749, file: !2316, line: 935, column: 55)
!14756 = !DILocation(line: 937, column: 2, scope: !14755)
!14757 = !DILocation(line: 938, column: 1, scope: !14739)
!14758 = distinct !DISubprogram(name: "k_sched_lock", scope: !2316, file: !2316, line: 987, type: !3113, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14759)
!14759 = !{!14760, !14762}
!14760 = !DILocalVariable(name: "__i", scope: !14761, file: !2316, line: 989, type: !13541)
!14761 = distinct !DILexicalBlock(scope: !14758, file: !2316, line: 989, column: 2)
!14762 = !DILocalVariable(name: "__key", scope: !14761, file: !2316, line: 989, type: !13541)
!14763 = !DILocation(line: 0, scope: !14761)
!14764 = !DILocation(line: 0, scope: !13549, inlinedAt: !14765)
!14765 = distinct !DILocation(line: 989, column: 2, scope: !14761)
!14766 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14767)
!14767 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14765)
!14768 = !DILocation(line: 0, scope: !13558, inlinedAt: !14767)
!14769 = !DILocation(line: 992, column: 3, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14771, file: !2316, line: 989, column: 26)
!14771 = distinct !DILexicalBlock(scope: !14761, file: !2316, line: 989, column: 2)
!14772 = !DILocation(line: 0, scope: !13576, inlinedAt: !14773)
!14773 = distinct !DILocation(line: 989, column: 2, scope: !14771)
!14774 = !DILocation(line: 0, scope: !13584, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14773)
!14776 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14775)
!14777 = !DILocation(line: 994, column: 1, scope: !14758)
!14778 = distinct !DISubprogram(name: "z_sched_lock", scope: !12382, file: !12382, line: 251, type: !3113, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!14779 = !DILocation(line: 256, column: 4, scope: !14778)
!14780 = !DILocation(line: 256, column: 19, scope: !14778)
!14781 = !DILocation(line: 256, column: 2, scope: !14778)
!14782 = !DILocation(line: 258, column: 2, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14778, file: !12382, line: 258, column: 2)
!14784 = !{i64 2154189141}
!14785 = !DILocation(line: 259, column: 1, scope: !14778)
!14786 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2316, file: !2316, line: 996, type: !3113, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14787)
!14787 = !{!14788, !14790}
!14788 = !DILocalVariable(name: "__i", scope: !14789, file: !2316, line: 998, type: !13541)
!14789 = distinct !DILexicalBlock(scope: !14786, file: !2316, line: 998, column: 2)
!14790 = !DILocalVariable(name: "__key", scope: !14789, file: !2316, line: 998, type: !13541)
!14791 = !DILocation(line: 0, scope: !14789)
!14792 = !DILocation(line: 0, scope: !13549, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 998, column: 2, scope: !14789)
!14794 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !14793)
!14796 = !DILocation(line: 0, scope: !13558, inlinedAt: !14795)
!14797 = !DILocation(line: 1002, column: 5, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14799, file: !2316, line: 998, column: 26)
!14799 = distinct !DILexicalBlock(scope: !14789, file: !2316, line: 998, column: 2)
!14800 = !DILocation(line: 1002, column: 20, scope: !14798)
!14801 = !DILocation(line: 1002, column: 3, scope: !14798)
!14802 = !DILocation(line: 1003, column: 3, scope: !14798)
!14803 = !DILocation(line: 0, scope: !13576, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 998, column: 2, scope: !14799)
!14805 = !DILocation(line: 0, scope: !13584, inlinedAt: !14806)
!14806 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !14804)
!14807 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !14806)
!14808 = !DILocation(line: 1011, column: 2, scope: !14786)
!14809 = !DILocation(line: 1012, column: 1, scope: !14786)
!14810 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2316, file: !2316, line: 1014, type: !13857, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!14811 = !DILocation(line: 1028, column: 25, scope: !14810)
!14812 = !DILocation(line: 1028, column: 2, scope: !14810)
!14813 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2316, file: !2316, line: 1155, type: !14814, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14816)
!14814 = !DISubroutineType(types: !14815)
!14815 = !{!136, !2240, !2240}
!14816 = !{!14817, !14818, !14819, !14820, !14821}
!14817 = !DILocalVariable(name: "a", arg: 1, scope: !14813, file: !2316, line: 1155, type: !2240)
!14818 = !DILocalVariable(name: "b", arg: 2, scope: !14813, file: !2316, line: 1155, type: !2240)
!14819 = !DILocalVariable(name: "thread_a", scope: !14813, file: !2316, line: 1157, type: !2211)
!14820 = !DILocalVariable(name: "thread_b", scope: !14813, file: !2316, line: 1157, type: !2211)
!14821 = !DILocalVariable(name: "cmp", scope: !14813, file: !2316, line: 1158, type: !707)
!14822 = !DILocation(line: 0, scope: !14813)
!14823 = !DILocation(line: 1160, column: 13, scope: !14813)
!14824 = !DILocation(line: 1161, column: 13, scope: !14813)
!14825 = !DILocation(line: 1163, column: 8, scope: !14813)
!14826 = !DILocation(line: 1165, column: 10, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14813, file: !2316, line: 1165, column: 6)
!14828 = !DILocation(line: 1165, column: 6, scope: !14813)
!14829 = !DILocation(line: 1167, column: 17, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14827, file: !2316, line: 1167, column: 13)
!14831 = !DILocation(line: 1167, column: 13, scope: !14827)
!14832 = !DILocation(line: 1170, column: 25, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14830, file: !2316, line: 1169, column: 9)
!14834 = !DILocation(line: 1170, column: 52, scope: !14833)
!14835 = !DILocation(line: 1170, column: 35, scope: !14833)
!14836 = !DILocation(line: 1170, column: 3, scope: !14833)
!14837 = !DILocation(line: 0, scope: !14827)
!14838 = !DILocation(line: 1173, column: 1, scope: !14813)
!14839 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2316, file: !2316, line: 1175, type: !14840, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14855)
!14840 = !DISubroutineType(types: !14841)
!14841 = !{null, !14842, !2211}
!14842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14843, size: 32)
!14843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14844, line: 37, size: 128, elements: !14845)
!14844 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14845 = !{!14846, !14854}
!14846 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14843, file: !14844, line: 38, baseType: !14847, size: 96)
!14847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !384, line: 83, size: 96, elements: !14848)
!14848 = !{!14849, !14850, !14853}
!14849 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14847, file: !384, line: 84, baseType: !2240, size: 32)
!14850 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14847, file: !384, line: 85, baseType: !14851, size: 32, offset: 32)
!14851 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !384, line: 81, baseType: !14852)
!14852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14814, size: 32)
!14853 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14847, file: !384, line: 86, baseType: !107, size: 32, offset: 64)
!14854 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14843, file: !14844, line: 39, baseType: !107, size: 32, offset: 96)
!14855 = !{!14856, !14857, !14858, !14859, !14868}
!14856 = !DILocalVariable(name: "pq", arg: 1, scope: !14839, file: !2316, line: 1175, type: !14842)
!14857 = !DILocalVariable(name: "thread", arg: 2, scope: !14839, file: !2316, line: 1175, type: !2211)
!14858 = !DILocalVariable(name: "t", scope: !14839, file: !2316, line: 1177, type: !2211)
!14859 = !DILocalVariable(name: "__f", scope: !14860, file: !2316, line: 1190, type: !14863)
!14860 = distinct !DILexicalBlock(scope: !14861, file: !2316, line: 1190, column: 3)
!14861 = distinct !DILexicalBlock(scope: !14862, file: !2316, line: 1189, column: 27)
!14862 = distinct !DILexicalBlock(scope: !14839, file: !2316, line: 1189, column: 6)
!14863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !384, line: 155, size: 96, elements: !14864)
!14864 = !{!14865, !14866, !14867}
!14865 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14863, file: !384, line: 156, baseType: !2311, size: 32)
!14866 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14863, file: !384, line: 157, baseType: !182, size: 32, offset: 32)
!14867 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14863, file: !384, line: 158, baseType: !707, size: 32, offset: 64)
!14868 = !DILocalVariable(name: "n", scope: !14869, file: !2316, line: 1190, type: !2240)
!14869 = distinct !DILexicalBlock(scope: !14870, file: !2316, line: 1190, column: 3)
!14870 = distinct !DILexicalBlock(scope: !14860, file: !2316, line: 1190, column: 3)
!14871 = !DILocation(line: 0, scope: !14839)
!14872 = !DILocation(line: 1181, column: 31, scope: !14839)
!14873 = !DILocation(line: 1181, column: 45, scope: !14839)
!14874 = !DILocation(line: 1181, column: 15, scope: !14839)
!14875 = !DILocation(line: 1181, column: 25, scope: !14839)
!14876 = !DILocation(line: 1189, column: 11, scope: !14862)
!14877 = !DILocation(line: 1189, column: 7, scope: !14862)
!14878 = !DILocation(line: 1189, column: 6, scope: !14839)
!14879 = !DILocation(line: 1190, column: 3, scope: !14860)
!14880 = !DILocation(line: 1190, column: 3, scope: !14869)
!14881 = !DILocation(line: 0, scope: !14869)
!14882 = !DILocation(line: 1190, column: 3, scope: !14870)
!14883 = !DILocation(line: 1193, column: 2, scope: !14861)
!14884 = !DILocation(line: 1191, column: 42, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14870, file: !2316, line: 1190, column: 54)
!14886 = !DILocation(line: 1191, column: 12, scope: !14885)
!14887 = !DILocation(line: 1191, column: 22, scope: !14885)
!14888 = distinct !{!14888, !14879, !14889}
!14889 = !DILocation(line: 1192, column: 3, scope: !14860)
!14890 = !DILocation(line: 1195, column: 17, scope: !14839)
!14891 = !DILocation(line: 1195, column: 37, scope: !14839)
!14892 = !DILocation(line: 1195, column: 2, scope: !14839)
!14893 = !DILocation(line: 1196, column: 1, scope: !14839)
!14894 = !DISubprogram(name: "z_rb_foreach_next", scope: !384, file: !384, line: 176, type: !14895, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14895 = !DISubroutineType(types: !14896)
!14896 = !{!2240, !14897, !14898}
!14897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14847, size: 32)
!14898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14863, size: 32)
!14899 = !DISubprogram(name: "rb_insert", scope: !384, file: !384, line: 105, type: !14900, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14900 = !DISubroutineType(types: !14901)
!14901 = !{null, !14897, !2240}
!14902 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2316, file: !2316, line: 1198, type: !14840, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14903)
!14903 = !{!14904, !14905}
!14904 = !DILocalVariable(name: "pq", arg: 1, scope: !14902, file: !2316, line: 1198, type: !14842)
!14905 = !DILocalVariable(name: "thread", arg: 2, scope: !14902, file: !2316, line: 1198, type: !2211)
!14906 = !DILocation(line: 0, scope: !14902)
!14907 = !DILocation(line: 1202, column: 17, scope: !14902)
!14908 = !DILocation(line: 1202, column: 37, scope: !14902)
!14909 = !DILocation(line: 1202, column: 2, scope: !14902)
!14910 = !DILocation(line: 1204, column: 16, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14902, file: !2316, line: 1204, column: 6)
!14912 = !DILocation(line: 1204, column: 7, scope: !14911)
!14913 = !DILocation(line: 1204, column: 6, scope: !14902)
!14914 = !DILocation(line: 1205, column: 7, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14911, file: !2316, line: 1204, column: 22)
!14916 = !DILocation(line: 1205, column: 22, scope: !14915)
!14917 = !DILocation(line: 1206, column: 2, scope: !14915)
!14918 = !DILocation(line: 1207, column: 1, scope: !14902)
!14919 = !DISubprogram(name: "rb_remove", scope: !384, file: !384, line: 110, type: !14900, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14920 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2316, file: !2316, line: 1209, type: !14921, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14923)
!14921 = !DISubroutineType(types: !14922)
!14922 = !{!2211, !14842}
!14923 = !{!14924, !14925, !14926}
!14924 = !DILocalVariable(name: "pq", arg: 1, scope: !14920, file: !2316, line: 1209, type: !14842)
!14925 = !DILocalVariable(name: "thread", scope: !14920, file: !2316, line: 1211, type: !2211)
!14926 = !DILocalVariable(name: "n", scope: !14920, file: !2316, line: 1212, type: !2240)
!14927 = !DILocation(line: 0, scope: !14920)
!14928 = !DILocation(line: 1212, column: 37, scope: !14920)
!14929 = !DILocation(line: 1212, column: 21, scope: !14920)
!14930 = !DILocation(line: 1217, column: 2, scope: !14920)
!14931 = distinct !DISubprogram(name: "rb_get_min", scope: !384, file: !384, line: 115, type: !14932, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14934)
!14932 = !DISubroutineType(types: !14933)
!14933 = !{!2240, !14897}
!14934 = !{!14935}
!14935 = !DILocalVariable(name: "tree", arg: 1, scope: !14931, file: !384, line: 115, type: !14897)
!14936 = !DILocation(line: 0, scope: !14931)
!14937 = !DILocation(line: 117, column: 9, scope: !14931)
!14938 = !DILocation(line: 117, column: 2, scope: !14931)
!14939 = !DISubprogram(name: "z_rb_get_minmax", scope: !384, file: !384, line: 100, type: !14940, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14940 = !DISubroutineType(types: !14941)
!14941 = !{!2240, !14897, !133}
!14942 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2316, file: !2316, line: 1246, type: !14943, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14951)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{!2211, !14945}
!14945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14946, size: 32)
!14946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14844, line: 53, size: 2080, elements: !14947)
!14947 = !{!14948, !14950}
!14948 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14946, file: !14844, line: 54, baseType: !14949, size: 2048)
!14949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2247, size: 2048, elements: !219)
!14950 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14946, file: !14844, line: 55, baseType: !32, size: 32, offset: 2048)
!14951 = !{!14952, !14953, !14954, !14955}
!14952 = !DILocalVariable(name: "pq", arg: 1, scope: !14942, file: !2316, line: 1246, type: !14945)
!14953 = !DILocalVariable(name: "thread", scope: !14942, file: !2316, line: 1252, type: !2211)
!14954 = !DILocalVariable(name: "l", scope: !14942, file: !2316, line: 1253, type: !13752)
!14955 = !DILocalVariable(name: "n", scope: !14942, file: !2316, line: 1254, type: !2312)
!14956 = !DILocation(line: 0, scope: !14942)
!14957 = !DILocation(line: 1248, column: 11, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14942, file: !2316, line: 1248, column: 6)
!14959 = !DILocation(line: 1248, column: 7, scope: !14958)
!14960 = !DILocation(line: 1248, column: 6, scope: !14942)
!14961 = !DILocation(line: 1253, column: 31, scope: !14942)
!14962 = !DILocation(line: 1253, column: 20, scope: !14942)
!14963 = !DILocation(line: 1254, column: 19, scope: !14942)
!14964 = !DILocation(line: 1260, column: 1, scope: !14942)
!14965 = distinct !DISubprogram(name: "z_unpend_all", scope: !2316, file: !2316, line: 1262, type: !14966, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14968)
!14966 = !DISubroutineType(types: !14967)
!14967 = !{!107, !2242}
!14968 = !{!14969, !14970, !14971}
!14969 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14965, file: !2316, line: 1262, type: !2242)
!14970 = !DILocalVariable(name: "need_sched", scope: !14965, file: !2316, line: 1264, type: !107)
!14971 = !DILocalVariable(name: "thread", scope: !14965, file: !2316, line: 1265, type: !2211)
!14972 = !DILocation(line: 0, scope: !14965)
!14973 = !DILocation(line: 1267, column: 19, scope: !14965)
!14974 = !DILocation(line: 1267, column: 41, scope: !14965)
!14975 = !DILocation(line: 1267, column: 2, scope: !14965)
!14976 = !DILocation(line: 1268, column: 3, scope: !14977)
!14977 = distinct !DILexicalBlock(scope: !14965, file: !2316, line: 1267, column: 50)
!14978 = !DILocation(line: 1269, column: 3, scope: !14977)
!14979 = distinct !{!14979, !14975, !14980}
!14980 = !DILocation(line: 1271, column: 2, scope: !14965)
!14981 = !DILocation(line: 1273, column: 2, scope: !14965)
!14982 = distinct !DISubprogram(name: "z_waitq_head", scope: !12706, file: !12706, line: 52, type: !14600, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14983)
!14983 = !{!14984}
!14984 = !DILocalVariable(name: "w", arg: 1, scope: !14982, file: !12706, line: 52, type: !2242)
!14985 = !DILocation(line: 0, scope: !14982)
!14986 = !DILocation(line: 54, column: 52, scope: !14982)
!14987 = !DILocation(line: 54, column: 28, scope: !14982)
!14988 = !DILocation(line: 54, column: 9, scope: !14982)
!14989 = !DILocation(line: 54, column: 2, scope: !14982)
!14990 = distinct !DISubprogram(name: "init_ready_q", scope: !2316, file: !2316, line: 1276, type: !14991, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !14998)
!14991 = !DISubroutineType(types: !14992)
!14992 = !{null, !14993}
!14993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14994, size: 32)
!14994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !14995)
!14995 = !{!14996, !14997}
!14996 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14994, file: !228, line: 86, baseType: !2211, size: 32)
!14997 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14994, file: !228, line: 90, baseType: !2247, size: 64, offset: 32)
!14998 = !{!14999}
!14999 = !DILocalVariable(name: "rq", arg: 1, scope: !14990, file: !2316, line: 1276, type: !14993)
!15000 = !DILocation(line: 0, scope: !14990)
!15001 = !DILocation(line: 1289, column: 22, scope: !14990)
!15002 = !DILocation(line: 1289, column: 2, scope: !14990)
!15003 = !DILocation(line: 1291, column: 1, scope: !14990)
!15004 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !15005, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15007)
!15005 = !DISubroutineType(types: !15006)
!15006 = !{null, !13752}
!15007 = !{!15008}
!15008 = !DILocalVariable(name: "list", arg: 1, scope: !15004, file: !233, line: 197, type: !13752)
!15009 = !DILocation(line: 0, scope: !15004)
!15010 = !DILocation(line: 199, column: 8, scope: !15004)
!15011 = !DILocation(line: 199, column: 13, scope: !15004)
!15012 = !DILocation(line: 200, column: 8, scope: !15004)
!15013 = !DILocation(line: 200, column: 13, scope: !15004)
!15014 = !DILocation(line: 201, column: 1, scope: !15004)
!15015 = distinct !DISubprogram(name: "z_sched_init", scope: !2316, file: !2316, line: 1293, type: !3113, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!15016 = !DILocation(line: 1302, column: 2, scope: !15015)
!15017 = !DILocation(line: 1306, column: 2, scope: !15015)
!15018 = !DILocation(line: 1309, column: 1, scope: !15015)
!15019 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2316, file: !2316, line: 1311, type: !15020, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15023)
!15020 = !DISubroutineType(types: !15021)
!15021 = !{!107, !15022}
!15022 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2211)
!15023 = !{!15024}
!15024 = !DILocalVariable(name: "thread", arg: 1, scope: !15019, file: !2316, line: 1311, type: !15022)
!15025 = !DILocation(line: 0, scope: !15019)
!15026 = !DILocation(line: 1313, column: 22, scope: !15019)
!15027 = !DILocation(line: 1313, column: 9, scope: !15019)
!15028 = !DILocation(line: 1313, column: 2, scope: !15019)
!15029 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2316, file: !2316, line: 1325, type: !15030, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15032)
!15030 = !DISubroutineType(types: !15031)
!15031 = !{null, !15022, !107}
!15032 = !{!15033, !15034, !15035}
!15033 = !DILocalVariable(name: "thread", arg: 1, scope: !15029, file: !2316, line: 1325, type: !15022)
!15034 = !DILocalVariable(name: "prio", arg: 2, scope: !15029, file: !2316, line: 1325, type: !107)
!15035 = !DILocalVariable(name: "th", scope: !15029, file: !2316, line: 1334, type: !2211)
!15036 = !DILocation(line: 0, scope: !15029)
!15037 = !DILocation(line: 1336, column: 2, scope: !15029)
!15038 = !DILocation(line: 1337, column: 1, scope: !15029)
!15039 = distinct !DISubprogram(name: "k_can_yield", scope: !2316, file: !2316, line: 1384, type: !6848, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!15040 = !DILocation(line: 1386, column: 11, scope: !15039)
!15041 = !DILocation(line: 1386, column: 29, scope: !15039)
!15042 = !DILocation(line: 1386, column: 32, scope: !15039)
!15043 = !DILocation(line: 1386, column: 46, scope: !15039)
!15044 = !DILocation(line: 1387, column: 28, scope: !15039)
!15045 = !DILocation(line: 1387, column: 4, scope: !15039)
!15046 = !DILocation(line: 1386, column: 2, scope: !15039)
!15047 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !224, file: !224, line: 989, type: !6848, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!15048 = !DILocation(line: 993, column: 10, scope: !15047)
!15049 = !DILocation(line: 993, column: 2, scope: !15047)
!15050 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2316, file: !2316, line: 1390, type: !3113, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15051)
!15051 = !{!15052}
!15052 = !DILocalVariable(name: "key", scope: !15050, file: !2316, line: 1396, type: !13541)
!15053 = !DILocation(line: 0, scope: !13549, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 1396, column: 25, scope: !15050)
!15055 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !15056)
!15056 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !15054)
!15057 = !DILocation(line: 0, scope: !13558, inlinedAt: !15056)
!15058 = !DILocation(line: 0, scope: !15050)
!15059 = !DILocation(line: 1400, column: 18, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15061, file: !2316, line: 1399, column: 36)
!15061 = distinct !DILexicalBlock(scope: !15050, file: !2316, line: 1398, column: 6)
!15062 = !DILocation(line: 0, scope: !13718, inlinedAt: !15063)
!15063 = distinct !DILocation(line: 1400, column: 3, scope: !15060)
!15064 = !DILocation(line: 266, column: 15, scope: !13718, inlinedAt: !15063)
!15065 = !DILocation(line: 266, column: 28, scope: !13718, inlinedAt: !15063)
!15066 = !DILocation(line: 0, scope: !13726, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 268, column: 3, scope: !13730, inlinedAt: !15063)
!15068 = !DILocation(line: 234, column: 2, scope: !13726, inlinedAt: !15067)
!15069 = !DILocation(line: 1402, column: 15, scope: !15050)
!15070 = !DILocation(line: 0, scope: !13735, inlinedAt: !15071)
!15071 = distinct !DILocation(line: 1402, column: 2, scope: !15050)
!15072 = !DILocation(line: 252, column: 15, scope: !13735, inlinedAt: !15071)
!15073 = !DILocation(line: 252, column: 28, scope: !13735, inlinedAt: !15071)
!15074 = !DILocation(line: 0, scope: !13742, inlinedAt: !15075)
!15075 = distinct !DILocation(line: 254, column: 3, scope: !13746, inlinedAt: !15071)
!15076 = !DILocation(line: 0, scope: !13749, inlinedAt: !15077)
!15077 = distinct !DILocation(line: 229, column: 2, scope: !13742, inlinedAt: !15075)
!15078 = !DILocation(line: 188, column: 2, scope: !13759, inlinedAt: !15077)
!15079 = !DILocation(line: 188, column: 2, scope: !13761, inlinedAt: !15077)
!15080 = !DILocation(line: 0, scope: !13759, inlinedAt: !15077)
!15081 = !DILocation(line: 189, column: 7, scope: !13764, inlinedAt: !15077)
!15082 = !DILocation(line: 189, column: 35, scope: !13764, inlinedAt: !15077)
!15083 = !DILocation(line: 189, column: 7, scope: !13765, inlinedAt: !15077)
!15084 = !DILocation(line: 191, column: 21, scope: !13769, inlinedAt: !15077)
!15085 = !DILocation(line: 190, column: 4, scope: !13769, inlinedAt: !15077)
!15086 = !DILocation(line: 192, column: 4, scope: !13769, inlinedAt: !15077)
!15087 = distinct !{!15087, !15078, !15088}
!15088 = !DILocation(line: 194, column: 2, scope: !13759, inlinedAt: !15077)
!15089 = !DILocation(line: 196, column: 37, scope: !13749, inlinedAt: !15077)
!15090 = !DILocation(line: 196, column: 2, scope: !13749, inlinedAt: !15077)
!15091 = !DILocation(line: 197, column: 1, scope: !13749, inlinedAt: !15077)
!15092 = !DILocation(line: 1403, column: 2, scope: !15050)
!15093 = !DILocation(line: 0, scope: !14160, inlinedAt: !15094)
!15094 = distinct !DILocation(line: 1404, column: 2, scope: !15050)
!15095 = !DILocation(line: 196, column: 9, scope: !14160, inlinedAt: !15094)
!15096 = !DILocation(line: 1405, column: 1, scope: !15050)
!15097 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2316, file: !2316, line: 1459, type: !15098, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15100)
!15098 = !DISubroutineType(types: !15099)
!15099 = !{!707, !14340}
!15100 = !{!15101, !15102, !15103}
!15101 = !DILocalVariable(name: "timeout", arg: 1, scope: !15097, file: !2316, line: 1459, type: !14340)
!15102 = !DILocalVariable(name: "ticks", scope: !15097, file: !2316, line: 1461, type: !103)
!15103 = !DILocalVariable(name: "ret", scope: !15097, file: !2316, line: 1480, type: !707)
!15104 = !DILocation(line: 0, scope: !15097)
!15105 = !DILocation(line: 1468, column: 6, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15097, file: !2316, line: 1468, column: 6)
!15107 = !DILocation(line: 1468, column: 6, scope: !15097)
!15108 = !DILocation(line: 1469, column: 20, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15106, file: !2316, line: 1468, column: 40)
!15110 = !DILocation(line: 1469, column: 3, scope: !15109)
!15111 = !DILocation(line: 1473, column: 3, scope: !15109)
!15112 = !DILocation(line: 1478, column: 10, scope: !15097)
!15113 = !DILocation(line: 1480, column: 16, scope: !15097)
!15114 = !DILocation(line: 1485, column: 1, scope: !15097)
!15115 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3298, file: !3298, line: 310, type: !15116, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15118)
!15116 = !DISubroutineType(types: !15117)
!15117 = !{null, !15022}
!15118 = !{!15119}
!15119 = !DILocalVariable(name: "thread", arg: 1, scope: !15115, file: !3298, line: 310, type: !15022)
!15120 = !DILocation(line: 0, scope: !15115)
!15121 = !DILocation(line: 319, column: 2, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15115, file: !3298, line: 319, column: 2)
!15123 = !{i64 2154107530}
!15124 = !DILocation(line: 320, column: 2, scope: !15115)
!15125 = !DILocation(line: 321, column: 1, scope: !15115)
!15126 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2316, file: !2316, line: 1415, type: !15127, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15129)
!15127 = !DISubroutineType(types: !15128)
!15128 = !{!707, !103}
!15129 = !{!15130, !15131, !15132, !15133}
!15130 = !DILocalVariable(name: "ticks", arg: 1, scope: !15126, file: !2316, line: 1415, type: !103)
!15131 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15126, file: !2316, line: 1418, type: !162)
!15132 = !DILocalVariable(name: "timeout", scope: !15126, file: !2316, line: 1430, type: !14340)
!15133 = !DILocalVariable(name: "key", scope: !15126, file: !2316, line: 1437, type: !13541)
!15134 = !DILocation(line: 0, scope: !15126)
!15135 = !DILocation(line: 1425, column: 12, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15126, file: !2316, line: 1425, column: 6)
!15137 = !DILocation(line: 1425, column: 6, scope: !15126)
!15138 = !DILocation(line: 1426, column: 3, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15136, file: !2316, line: 1425, column: 18)
!15140 = !DILocation(line: 1427, column: 3, scope: !15139)
!15141 = !DILocation(line: 1431, column: 24, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15126, file: !2316, line: 1431, column: 6)
!15143 = !DILocation(line: 1431, column: 6, scope: !15126)
!15144 = !DILocation(line: 1432, column: 35, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15142, file: !2316, line: 1431, column: 30)
!15146 = !DILocation(line: 1432, column: 27, scope: !15145)
!15147 = !DILocation(line: 1433, column: 2, scope: !15145)
!15148 = !DILocation(line: 1434, column: 27, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15142, file: !2316, line: 1433, column: 9)
!15150 = !DILocation(line: 0, scope: !15142)
!15151 = !DILocation(line: 0, scope: !13549, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 1437, column: 25, scope: !15126)
!15153 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !15154)
!15154 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !15152)
!15155 = !DILocation(line: 0, scope: !13558, inlinedAt: !15154)
!15156 = !DILocation(line: 1440, column: 20, scope: !15126)
!15157 = !DILocation(line: 1440, column: 18, scope: !15126)
!15158 = !DILocation(line: 1442, column: 2, scope: !15126)
!15159 = !DILocation(line: 1443, column: 23, scope: !15126)
!15160 = !DILocation(line: 1443, column: 2, scope: !15126)
!15161 = !DILocation(line: 1444, column: 29, scope: !15126)
!15162 = !DILocation(line: 1444, column: 2, scope: !15126)
!15163 = !DILocation(line: 0, scope: !14160, inlinedAt: !15164)
!15164 = distinct !DILocation(line: 1446, column: 8, scope: !15126)
!15165 = !DILocation(line: 196, column: 9, scope: !14160, inlinedAt: !15164)
!15166 = !DILocation(line: 1450, column: 10, scope: !15126)
!15167 = !DILocation(line: 1450, column: 45, scope: !15126)
!15168 = !DILocation(line: 1450, column: 43, scope: !15126)
!15169 = !DILocation(line: 1451, column: 6, scope: !15126)
!15170 = !DILocation(line: 1457, column: 1, scope: !15126)
!15171 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12941, file: !12941, line: 1103, type: !12942, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15172)
!15172 = !{!15173}
!15173 = !DILocalVariable(name: "t", arg: 1, scope: !15171, file: !12941, line: 1103, type: !1468)
!15174 = !DILocation(line: 0, scope: !15171)
!15175 = !DILocation(line: 0, scope: !13596, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 1106, column: 9, scope: !15171)
!15177 = !DILocation(line: 139, column: 13, scope: !15178, inlinedAt: !15176)
!15178 = distinct !DILexicalBlock(scope: !15179, file: !12941, line: 138, column: 10)
!15179 = distinct !DILexicalBlock(scope: !15180, file: !12941, line: 136, column: 7)
!15180 = distinct !DILexicalBlock(scope: !13617, file: !12941, line: 134, column: 17)
!15181 = !DILocation(line: 1106, column: 2, scope: !15171)
!15182 = distinct !DISubprogram(name: "k_yield", scope: !3298, file: !3298, line: 140, type: !3113, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!15183 = !DILocation(line: 148, column: 2, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15182, file: !3298, line: 148, column: 2)
!15185 = !{i64 2154106850}
!15186 = !DILocation(line: 149, column: 2, scope: !15182)
!15187 = !DILocation(line: 150, column: 1, scope: !15182)
!15188 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2316, file: !2316, line: 1495, type: !15189, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15191)
!15189 = !DISubroutineType(types: !15190)
!15190 = !{!707, !107}
!15191 = !{!15192, !15193}
!15192 = !DILocalVariable(name: "us", arg: 1, scope: !15188, file: !2316, line: 1495, type: !107)
!15193 = !DILocalVariable(name: "ticks", scope: !15188, file: !2316, line: 1497, type: !707)
!15194 = !DILocation(line: 0, scope: !15188)
!15195 = !DILocation(line: 1501, column: 31, scope: !15188)
!15196 = !DILocation(line: 1501, column: 10, scope: !15188)
!15197 = !DILocation(line: 1502, column: 23, scope: !15188)
!15198 = !DILocation(line: 1502, column: 10, scope: !15188)
!15199 = !DILocation(line: 1506, column: 31, scope: !15188)
!15200 = !DILocation(line: 1506, column: 9, scope: !15188)
!15201 = !DILocation(line: 1506, column: 2, scope: !15188)
!15202 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12941, file: !12941, line: 571, type: !12942, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15203)
!15203 = !{!15204}
!15204 = !DILocalVariable(name: "t", arg: 1, scope: !15202, file: !12941, line: 571, type: !1468)
!15205 = !DILocation(line: 0, scope: !15202)
!15206 = !DILocation(line: 0, scope: !13596, inlinedAt: !15207)
!15207 = distinct !DILocation(line: 574, column: 9, scope: !15202)
!15208 = !DILocation(line: 135, column: 5, scope: !15180, inlinedAt: !15207)
!15209 = !DILocation(line: 139, column: 13, scope: !15178, inlinedAt: !15207)
!15210 = !DILocation(line: 574, column: 2, scope: !15202)
!15211 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12941, file: !12941, line: 1187, type: !12942, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15212)
!15212 = !{!15213}
!15213 = !DILocalVariable(name: "t", arg: 1, scope: !15211, file: !12941, line: 1187, type: !1468)
!15214 = !DILocation(line: 0, scope: !15211)
!15215 = !DILocation(line: 0, scope: !13596, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 1190, column: 9, scope: !15211)
!15217 = !DILocation(line: 145, column: 13, scope: !15218, inlinedAt: !15216)
!15218 = distinct !DILexicalBlock(scope: !13614, file: !12941, line: 144, column: 10)
!15219 = !DILocation(line: 1190, column: 2, scope: !15211)
!15220 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2316, file: !2316, line: 1517, type: !15116, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15221)
!15221 = !{!15222}
!15222 = !DILocalVariable(name: "thread", arg: 1, scope: !15220, file: !2316, line: 1517, type: !15022)
!15223 = !DILocation(line: 0, scope: !15220)
!15224 = !DILocation(line: 1521, column: 6, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15220, file: !2316, line: 1521, column: 6)
!15226 = !DILocation(line: 1521, column: 6, scope: !15220)
!15227 = !DILocation(line: 1525, column: 6, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15220, file: !2316, line: 1525, column: 6)
!15229 = !DILocation(line: 1525, column: 37, scope: !15228)
!15230 = !DILocation(line: 1525, column: 6, scope: !15220)
!15231 = !DILocation(line: 1527, column: 20, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15233, file: !2316, line: 1527, column: 7)
!15233 = distinct !DILexicalBlock(scope: !15228, file: !2316, line: 1525, column: 42)
!15234 = !DILocation(line: 1527, column: 33, scope: !15232)
!15235 = !DILocation(line: 1527, column: 7, scope: !15233)
!15236 = !DILocation(line: 1532, column: 2, scope: !15220)
!15237 = !DILocation(line: 1533, column: 2, scope: !15220)
!15238 = !DILocation(line: 1031, column: 3, scope: !14193, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 48, column: 10, scope: !14197, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 1537, column: 7, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15220, file: !2316, line: 1537, column: 6)
!15242 = !DILocation(line: 0, scope: !14193, inlinedAt: !15239)
!15243 = !DILocation(line: 48, column: 9, scope: !14197, inlinedAt: !15240)
!15244 = !DILocation(line: 1537, column: 6, scope: !15220)
!15245 = !DILocation(line: 1538, column: 3, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15241, file: !2316, line: 1537, column: 25)
!15247 = !DILocation(line: 1539, column: 2, scope: !15246)
!15248 = !DILocation(line: 1540, column: 1, scope: !15220)
!15249 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12382, file: !12382, line: 101, type: !13667, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15250)
!15250 = !{!15251}
!15251 = !DILocalVariable(name: "thread", arg: 1, scope: !15249, file: !12382, line: 101, type: !2211)
!15252 = !DILocation(line: 0, scope: !15249)
!15253 = !DILocation(line: 103, column: 23, scope: !15249)
!15254 = !DILocation(line: 103, column: 36, scope: !15249)
!15255 = !DILocation(line: 103, column: 55, scope: !15249)
!15256 = !DILocation(line: 103, column: 2, scope: !15249)
!15257 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2316, file: !2316, line: 1567, type: !15258, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15260)
!15258 = !DISubroutineType(types: !15259)
!15259 = !{!15022}
!15260 = !{!15261}
!15261 = !DILocalVariable(name: "ret", scope: !15257, file: !2316, line: 1577, type: !15022)
!15262 = !DILocation(line: 1577, column: 30, scope: !15257)
!15263 = !DILocation(line: 0, scope: !15257)
!15264 = !DILocation(line: 1582, column: 2, scope: !15257)
!15265 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2316, file: !2316, line: 1593, type: !7122, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!15266 = !DILocation(line: 1031, column: 3, scope: !14193, inlinedAt: !15267)
!15267 = distinct !DILocation(line: 48, column: 10, scope: !14197, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 1595, column: 10, scope: !15265)
!15269 = !DILocation(line: 0, scope: !14193, inlinedAt: !15267)
!15270 = !DILocation(line: 48, column: 9, scope: !14197, inlinedAt: !15268)
!15271 = !DILocation(line: 1595, column: 27, scope: !15265)
!15272 = !DILocation(line: 1595, column: 41, scope: !15265)
!15273 = !DILocation(line: 1595, column: 30, scope: !15265)
!15274 = !DILocation(line: 1595, column: 2, scope: !15265)
!15275 = distinct !DISubprogram(name: "z_thread_abort", scope: !2316, file: !2316, line: 1725, type: !13507, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15276)
!15276 = !{!15277, !15278}
!15277 = !DILocalVariable(name: "thread", arg: 1, scope: !15275, file: !2316, line: 1725, type: !2211)
!15278 = !DILocalVariable(name: "key", scope: !15275, file: !2316, line: 1727, type: !13541)
!15279 = !DILocation(line: 0, scope: !15275)
!15280 = !DILocation(line: 0, scope: !13549, inlinedAt: !15281)
!15281 = distinct !DILocation(line: 1727, column: 25, scope: !15275)
!15282 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !15283)
!15283 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !15281)
!15284 = !DILocation(line: 0, scope: !13558, inlinedAt: !15283)
!15285 = !DILocation(line: 1729, column: 20, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15275, file: !2316, line: 1729, column: 6)
!15287 = !DILocation(line: 1729, column: 33, scope: !15286)
!15288 = !DILocation(line: 1729, column: 48, scope: !15286)
!15289 = !DILocation(line: 1729, column: 6, scope: !15275)
!15290 = !DILocation(line: 0, scope: !13576, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 1730, column: 3, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15286, file: !2316, line: 1729, column: 54)
!15293 = !DILocation(line: 0, scope: !13584, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !15291)
!15295 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !15294)
!15296 = !DILocation(line: 1732, column: 3, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !15292, file: !2316, line: 1732, column: 3)
!15298 = !{i64 2154844260, i64 2154844276, i64 2154844302, i64 2154844330, i64 2154844350}
!15299 = !DILocation(line: 1733, column: 3, scope: !15292)
!15300 = !DILocation(line: 1736, column: 20, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15275, file: !2316, line: 1736, column: 6)
!15302 = !DILocation(line: 1736, column: 33, scope: !15301)
!15303 = !DILocation(line: 1736, column: 49, scope: !15301)
!15304 = !DILocation(line: 1736, column: 6, scope: !15275)
!15305 = !DILocation(line: 0, scope: !13576, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 1737, column: 3, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15301, file: !2316, line: 1736, column: 56)
!15308 = !DILocation(line: 0, scope: !13584, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !15306)
!15310 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !15309)
!15311 = !DILocation(line: 1738, column: 3, scope: !15307)
!15312 = !DILocation(line: 1775, column: 2, scope: !15275)
!15313 = !DILocation(line: 1776, column: 16, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15275, file: !2316, line: 1776, column: 6)
!15315 = !DILocation(line: 1776, column: 13, scope: !15314)
!15316 = !DILocation(line: 1776, column: 25, scope: !15314)
!15317 = !DILocation(line: 1031, column: 3, scope: !14193, inlinedAt: !15318)
!15318 = distinct !DILocation(line: 48, column: 10, scope: !14197, inlinedAt: !15319)
!15319 = distinct !DILocation(line: 1776, column: 29, scope: !15314)
!15320 = !DILocation(line: 0, scope: !14193, inlinedAt: !15318)
!15321 = !DILocation(line: 48, column: 9, scope: !14197, inlinedAt: !15319)
!15322 = !DILocation(line: 1776, column: 6, scope: !15275)
!15323 = !DILocation(line: 0, scope: !14160, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 1777, column: 3, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15314, file: !2316, line: 1776, column: 47)
!15326 = !DILocation(line: 196, column: 9, scope: !14160, inlinedAt: !15324)
!15327 = !DILocation(line: 1779, column: 2, scope: !15325)
!15328 = !DILocation(line: 0, scope: !13576, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 1780, column: 2, scope: !15275)
!15330 = !DILocation(line: 0, scope: !13584, inlinedAt: !15331)
!15331 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !15329)
!15332 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !15331)
!15333 = !DILocation(line: 1781, column: 1, scope: !15275)
!15334 = distinct !DISubprogram(name: "end_thread", scope: !2316, file: !2316, line: 1690, type: !13507, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15335)
!15335 = !{!15336}
!15336 = !DILocalVariable(name: "thread", arg: 1, scope: !15334, file: !2316, line: 1690, type: !2211)
!15337 = !DILocation(line: 0, scope: !15334)
!15338 = !DILocation(line: 1695, column: 20, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15334, file: !2316, line: 1695, column: 6)
!15340 = !DILocation(line: 1695, column: 33, scope: !15339)
!15341 = !DILocation(line: 1695, column: 49, scope: !15339)
!15342 = !DILocation(line: 1695, column: 6, scope: !15334)
!15343 = !DILocation(line: 1697, column: 29, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15339, file: !2316, line: 1695, column: 56)
!15345 = !DILocation(line: 1698, column: 7, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15344, file: !2316, line: 1698, column: 7)
!15347 = !DILocation(line: 1698, column: 7, scope: !15344)
!15348 = !DILocation(line: 0, scope: !13718, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 1699, column: 4, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15346, file: !2316, line: 1698, column: 35)
!15351 = !DILocation(line: 266, column: 28, scope: !13718, inlinedAt: !15349)
!15352 = !DILocation(line: 0, scope: !13726, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 268, column: 3, scope: !13730, inlinedAt: !15349)
!15354 = !DILocation(line: 234, column: 2, scope: !13726, inlinedAt: !15353)
!15355 = !DILocation(line: 1700, column: 3, scope: !15350)
!15356 = !DILocation(line: 1701, column: 20, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15344, file: !2316, line: 1701, column: 7)
!15358 = !DILocation(line: 1701, column: 30, scope: !15357)
!15359 = !DILocation(line: 1701, column: 7, scope: !15344)
!15360 = !DILocation(line: 1702, column: 4, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15357, file: !2316, line: 1701, column: 39)
!15362 = !DILocation(line: 1703, column: 3, scope: !15361)
!15363 = !DILocation(line: 1704, column: 9, scope: !15344)
!15364 = !DILocation(line: 1705, column: 23, scope: !15344)
!15365 = !DILocation(line: 1705, column: 3, scope: !15344)
!15366 = !DILocation(line: 1706, column: 3, scope: !15344)
!15367 = !DILocation(line: 1722, column: 2, scope: !15344)
!15368 = !DILocation(line: 1723, column: 1, scope: !15334)
!15369 = distinct !DISubprogram(name: "unpend_all", scope: !2316, file: !2316, line: 1674, type: !15370, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15372)
!15370 = !DISubroutineType(types: !15371)
!15371 = !{null, !2242}
!15372 = !{!15373, !15374}
!15373 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15369, file: !2316, line: 1674, type: !2242)
!15374 = !DILocalVariable(name: "thread", scope: !15369, file: !2316, line: 1676, type: !2211)
!15375 = !DILocation(line: 0, scope: !15369)
!15376 = !DILocation(line: 1678, column: 19, scope: !15369)
!15377 = !DILocation(line: 1678, column: 41, scope: !15369)
!15378 = !DILocation(line: 1678, column: 2, scope: !15369)
!15379 = !DILocation(line: 1679, column: 3, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15369, file: !2316, line: 1678, column: 50)
!15381 = !DILocation(line: 1680, column: 9, scope: !15380)
!15382 = !DILocalVariable(name: "thread", arg: 1, scope: !15383, file: !12402, line: 65, type: !2211)
!15383 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12402, file: !12402, line: 65, type: !15384, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15386)
!15384 = !DISubroutineType(types: !15385)
!15385 = !{null, !2211, !32}
!15386 = !{!15382, !15387}
!15387 = !DILocalVariable(name: "value", arg: 2, scope: !15383, file: !12402, line: 65, type: !32)
!15388 = !DILocation(line: 0, scope: !15383, inlinedAt: !15389)
!15389 = distinct !DILocation(line: 1681, column: 3, scope: !15380)
!15390 = !DILocation(line: 67, column: 15, scope: !15383, inlinedAt: !15389)
!15391 = !DILocation(line: 67, column: 33, scope: !15383, inlinedAt: !15389)
!15392 = !DILocation(line: 1682, column: 3, scope: !15380)
!15393 = distinct !{!15393, !15378, !15394}
!15394 = !DILocation(line: 1683, column: 2, scope: !15369)
!15395 = !DILocation(line: 1684, column: 1, scope: !15369)
!15396 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2316, file: !2316, line: 1794, type: !15397, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15399)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{!107, !2211, !14340}
!15399 = !{!15400, !15401, !15402, !15403}
!15400 = !DILocalVariable(name: "thread", arg: 1, scope: !15396, file: !2316, line: 1794, type: !2211)
!15401 = !DILocalVariable(name: "timeout", arg: 2, scope: !15396, file: !2316, line: 1794, type: !14340)
!15402 = !DILocalVariable(name: "key", scope: !15396, file: !2316, line: 1796, type: !13541)
!15403 = !DILocalVariable(name: "ret", scope: !15396, file: !2316, line: 1797, type: !107)
!15404 = !DILocation(line: 0, scope: !15396)
!15405 = !DILocation(line: 0, scope: !13549, inlinedAt: !15406)
!15406 = distinct !DILocation(line: 1796, column: 25, scope: !15396)
!15407 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !15408)
!15408 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !15406)
!15409 = !DILocation(line: 0, scope: !13558, inlinedAt: !15408)
!15410 = !DILocation(line: 1801, column: 20, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15396, file: !2316, line: 1801, column: 6)
!15412 = !DILocation(line: 1801, column: 33, scope: !15411)
!15413 = !DILocation(line: 1801, column: 49, scope: !15411)
!15414 = !DILocation(line: 1801, column: 6, scope: !15396)
!15415 = !DILocation(line: 1803, column: 13, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15411, file: !2316, line: 1803, column: 13)
!15417 = !DILocation(line: 1803, column: 13, scope: !15411)
!15418 = !DILocation(line: 1805, column: 24, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15416, file: !2316, line: 1805, column: 13)
!15420 = !DILocation(line: 1805, column: 21, scope: !15419)
!15421 = !DILocation(line: 1805, column: 34, scope: !15419)
!15422 = !DILocation(line: 1806, column: 20, scope: !15419)
!15423 = !DILocation(line: 1806, column: 44, scope: !15419)
!15424 = !DILocation(line: 1806, column: 30, scope: !15419)
!15425 = !DILocation(line: 1805, column: 13, scope: !15416)
!15426 = !DILocation(line: 1810, column: 42, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15419, file: !2316, line: 1808, column: 9)
!15428 = !DILocation(line: 1810, column: 3, scope: !15427)
!15429 = !DILocation(line: 1811, column: 22, scope: !15427)
!15430 = !DILocation(line: 1811, column: 3, scope: !15427)
!15431 = !DILocation(line: 0, scope: !14160, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 1814, column: 9, scope: !15427)
!15433 = !DILocation(line: 196, column: 9, scope: !14160, inlinedAt: !15432)
!15434 = !DILocation(line: 1817, column: 3, scope: !15427)
!15435 = !DILocation(line: 0, scope: !15411)
!15436 = !DILocation(line: 0, scope: !13576, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 1822, column: 2, scope: !15396)
!15438 = !DILocation(line: 0, scope: !13584, inlinedAt: !15439)
!15439 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !15437)
!15440 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !15439)
!15441 = !DILocation(line: 1823, column: 2, scope: !15396)
!15442 = !DILocation(line: 1824, column: 1, scope: !15396)
!15443 = distinct !DISubprogram(name: "z_sched_wake", scope: !2316, file: !2316, line: 1882, type: !15444, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15446)
!15444 = !DISubroutineType(types: !15445)
!15445 = !{!136, !2242, !107, !102}
!15446 = !{!15447, !15448, !15449, !15450, !15451, !15452, !15454}
!15447 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15443, file: !2316, line: 1882, type: !2242)
!15448 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15443, file: !2316, line: 1882, type: !107)
!15449 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15443, file: !2316, line: 1882, type: !102)
!15450 = !DILocalVariable(name: "thread", scope: !15443, file: !2316, line: 1884, type: !2211)
!15451 = !DILocalVariable(name: "ret", scope: !15443, file: !2316, line: 1885, type: !136)
!15452 = !DILocalVariable(name: "__i", scope: !15453, file: !2316, line: 1887, type: !13541)
!15453 = distinct !DILexicalBlock(scope: !15443, file: !2316, line: 1887, column: 2)
!15454 = !DILocalVariable(name: "__key", scope: !15453, file: !2316, line: 1887, type: !13541)
!15455 = !DILocation(line: 0, scope: !15443)
!15456 = !DILocation(line: 0, scope: !15453)
!15457 = !DILocation(line: 0, scope: !13549, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 1887, column: 2, scope: !15453)
!15459 = !DILocation(line: 55, column: 2, scope: !13558, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 145, column: 10, scope: !13549, inlinedAt: !15458)
!15461 = !DILocation(line: 0, scope: !13558, inlinedAt: !15460)
!15462 = !DILocation(line: 1888, column: 12, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15464, file: !2316, line: 1887, column: 26)
!15464 = distinct !DILexicalBlock(scope: !15453, file: !2316, line: 1887, column: 2)
!15465 = !DILocation(line: 1890, column: 14, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15463, file: !2316, line: 1890, column: 7)
!15467 = !DILocation(line: 1890, column: 7, scope: !15463)
!15468 = !DILocalVariable(name: "thread", arg: 1, scope: !15469, file: !13156, line: 134, type: !2211)
!15469 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13156, file: !13156, line: 134, type: !15470, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15472)
!15470 = !DISubroutineType(types: !15471)
!15471 = !{null, !2211, !32, !102}
!15472 = !{!15468, !15473, !15474}
!15473 = !DILocalVariable(name: "value", arg: 2, scope: !15469, file: !13156, line: 135, type: !32)
!15474 = !DILocalVariable(name: "data", arg: 3, scope: !15469, file: !13156, line: 136, type: !102)
!15475 = !DILocation(line: 0, scope: !15469, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 1891, column: 4, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15466, file: !2316, line: 1890, column: 23)
!15478 = !DILocation(line: 0, scope: !15383, inlinedAt: !15479)
!15479 = distinct !DILocation(line: 138, column: 2, scope: !15469, inlinedAt: !15476)
!15480 = !DILocation(line: 67, column: 15, scope: !15383, inlinedAt: !15479)
!15481 = !DILocation(line: 67, column: 33, scope: !15383, inlinedAt: !15479)
!15482 = !DILocation(line: 139, column: 15, scope: !15469, inlinedAt: !15476)
!15483 = !DILocation(line: 139, column: 25, scope: !15469, inlinedAt: !15476)
!15484 = !DILocation(line: 1894, column: 4, scope: !15477)
!15485 = !DILocation(line: 1895, column: 10, scope: !15477)
!15486 = !DILocation(line: 1896, column: 4, scope: !15477)
!15487 = !DILocation(line: 1898, column: 3, scope: !15477)
!15488 = !DILocation(line: 0, scope: !13576, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 1887, column: 2, scope: !15464)
!15490 = !DILocation(line: 0, scope: !13584, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 215, column: 2, scope: !13576, inlinedAt: !15489)
!15492 = !DILocation(line: 95, column: 2, scope: !13584, inlinedAt: !15491)
!15493 = !DILocation(line: 1901, column: 2, scope: !15443)
!15494 = distinct !DISubprogram(name: "z_sched_wait", scope: !2316, file: !2316, line: 1904, type: !15495, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !15498)
!15495 = !DISubroutineType(types: !15496)
!15496 = !{!107, !13552, !13541, !2242, !14340, !15497}
!15497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15498 = !{!15499, !15500, !15501, !15502, !15503, !15504}
!15499 = !DILocalVariable(name: "lock", arg: 1, scope: !15494, file: !2316, line: 1904, type: !13552)
!15500 = !DILocalVariable(name: "key", arg: 2, scope: !15494, file: !2316, line: 1904, type: !13541)
!15501 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15494, file: !2316, line: 1905, type: !2242)
!15502 = !DILocalVariable(name: "timeout", arg: 4, scope: !15494, file: !2316, line: 1905, type: !14340)
!15503 = !DILocalVariable(name: "data", arg: 5, scope: !15494, file: !2316, line: 1905, type: !15497)
!15504 = !DILocalVariable(name: "ret", scope: !15494, file: !2316, line: 1907, type: !107)
!15505 = !DILocation(line: 0, scope: !15494)
!15506 = !DILocation(line: 1907, column: 12, scope: !15494)
!15507 = !DILocation(line: 1909, column: 11, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15494, file: !2316, line: 1909, column: 6)
!15509 = !DILocation(line: 1909, column: 6, scope: !15494)
!15510 = !DILocation(line: 1910, column: 11, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15508, file: !2316, line: 1909, column: 20)
!15512 = !DILocation(line: 1910, column: 26, scope: !15511)
!15513 = !DILocation(line: 1910, column: 9, scope: !15511)
!15514 = !DILocation(line: 1911, column: 2, scope: !15511)
!15515 = !DILocation(line: 1912, column: 2, scope: !15494)
!15516 = distinct !DISubprogram(name: "z_data_copy", scope: !15517, file: !15517, line: 22, type: !3113, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !250)
!15517 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15518 = !DILocation(line: 24, column: 2, scope: !15516)
!15519 = !DILocation(line: 27, column: 2, scope: !15516)
!15520 = !DILocation(line: 71, column: 1, scope: !15516)
!15521 = distinct !DISubprogram(name: "z_add_timeout", scope: !2353, file: !2353, line: 88, type: !15522, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15528)
!15522 = !DISubroutineType(types: !15523)
!15523 = !{null, !2326, !2345, !15524}
!15524 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15525)
!15525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15526)
!15526 = !{!15527}
!15527 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15525, file: !104, line: 66, baseType: !103, size: 64)
!15528 = !{!15529, !15530, !15531, !15532, !15538, !15539, !15542, !15545}
!15529 = !DILocalVariable(name: "to", arg: 1, scope: !15521, file: !2353, line: 88, type: !2326)
!15530 = !DILocalVariable(name: "fn", arg: 2, scope: !15521, file: !2353, line: 88, type: !2345)
!15531 = !DILocalVariable(name: "timeout", arg: 3, scope: !15521, file: !2353, line: 89, type: !15524)
!15532 = !DILocalVariable(name: "__i", scope: !15533, file: !2353, line: 102, type: !15534)
!15533 = distinct !DILexicalBlock(scope: !15521, file: !2353, line: 102, column: 2)
!15534 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !15535)
!15535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !15536)
!15536 = !{!15537}
!15537 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15535, file: !249, line: 33, baseType: !107, size: 32)
!15538 = !DILocalVariable(name: "__key", scope: !15533, file: !2353, line: 102, type: !15534)
!15539 = !DILocalVariable(name: "t", scope: !15540, file: !2353, line: 103, type: !2326)
!15540 = distinct !DILexicalBlock(scope: !15541, file: !2353, line: 102, column: 24)
!15541 = distinct !DILexicalBlock(scope: !15533, file: !2353, line: 102, column: 2)
!15542 = !DILocalVariable(name: "ticks", scope: !15543, file: !2353, line: 107, type: !103)
!15543 = distinct !DILexicalBlock(scope: !15544, file: !2353, line: 106, column: 39)
!15544 = distinct !DILexicalBlock(scope: !15540, file: !2353, line: 105, column: 7)
!15545 = !DILocalVariable(name: "next_time", scope: !15546, file: !2353, line: 137, type: !707)
!15546 = distinct !DILexicalBlock(scope: !15547, file: !2353, line: 127, column: 22)
!15547 = distinct !DILexicalBlock(scope: !15540, file: !2353, line: 127, column: 7)
!15548 = !DILocation(line: 0, scope: !15521)
!15549 = !DILocation(line: 91, column: 6, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15521, file: !2353, line: 91, column: 6)
!15551 = !DILocation(line: 91, column: 6, scope: !15521)
!15552 = !DILocation(line: 100, column: 6, scope: !15521)
!15553 = !DILocation(line: 100, column: 9, scope: !15521)
!15554 = !DILocation(line: 0, scope: !15533)
!15555 = !DILocalVariable(name: "l", arg: 1, scope: !15556, file: !249, line: 136, type: !15559)
!15556 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !15557, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15560)
!15557 = !DISubroutineType(types: !15558)
!15558 = !{!15534, !15559}
!15559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 32)
!15560 = !{!15555, !15561}
!15561 = !DILocalVariable(name: "k", scope: !15556, file: !249, line: 139, type: !15534)
!15562 = !DILocation(line: 0, scope: !15556, inlinedAt: !15563)
!15563 = distinct !DILocation(line: 102, column: 2, scope: !15533)
!15564 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !15569)
!15565 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15566)
!15566 = !{!15567, !15568}
!15567 = !DILocalVariable(name: "key", scope: !15565, file: !5879, line: 44, type: !32)
!15568 = !DILocalVariable(name: "tmp", scope: !15565, file: !5879, line: 53, type: !32)
!15569 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !15563)
!15570 = !{i64 1953556}
!15571 = !DILocation(line: 0, scope: !15565, inlinedAt: !15569)
!15572 = !DILocation(line: 106, column: 33, scope: !15544)
!15573 = !DILocation(line: 105, column: 7, scope: !15540)
!15574 = !DILocation(line: 107, column: 50, scope: !15543)
!15575 = !DILocation(line: 107, column: 48, scope: !15543)
!15576 = !DILocation(line: 0, scope: !15543)
!15577 = !DILocation(line: 109, column: 17, scope: !15543)
!15578 = !DILocation(line: 110, column: 3, scope: !15543)
!15579 = !DILocation(line: 111, column: 31, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15544, file: !2353, line: 110, column: 10)
!15581 = !DILocation(line: 111, column: 37, scope: !15580)
!15582 = !DILocation(line: 111, column: 35, scope: !15580)
!15583 = !DILocation(line: 0, scope: !15544)
!15584 = !DILocation(line: 109, column: 8, scope: !15543)
!15585 = !DILocation(line: 109, column: 15, scope: !15543)
!15586 = !DILocation(line: 114, column: 12, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15540, file: !2353, line: 114, column: 3)
!15588 = !DILocation(line: 0, scope: !15540)
!15589 = !DILocation(line: 114, column: 3, scope: !15587)
!15590 = !DILocation(line: 115, column: 24, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15592, file: !2353, line: 115, column: 8)
!15592 = distinct !DILexicalBlock(scope: !15593, file: !2353, line: 114, column: 45)
!15593 = distinct !DILexicalBlock(scope: !15587, file: !2353, line: 114, column: 3)
!15594 = !DILocation(line: 115, column: 11, scope: !15591)
!15595 = !DILocation(line: 115, column: 18, scope: !15591)
!15596 = !DILocation(line: 115, column: 8, scope: !15592)
!15597 = !DILocation(line: 116, column: 15, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15591, file: !2353, line: 115, column: 32)
!15599 = !DILocation(line: 117, column: 26, scope: !15598)
!15600 = !DILocation(line: 117, column: 37, scope: !15598)
!15601 = !DILocation(line: 117, column: 5, scope: !15598)
!15602 = !DILocation(line: 123, column: 7, scope: !15540)
!15603 = !DILocation(line: 120, column: 15, scope: !15592)
!15604 = !DILocation(line: 114, column: 36, scope: !15593)
!15605 = distinct !{!15605, !15589, !15606}
!15606 = !DILocation(line: 121, column: 3, scope: !15587)
!15607 = !DILocation(line: 124, column: 41, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15609, file: !2353, line: 123, column: 18)
!15609 = distinct !DILexicalBlock(scope: !15540, file: !2353, line: 123, column: 7)
!15610 = !DILocation(line: 124, column: 4, scope: !15608)
!15611 = !DILocation(line: 125, column: 3, scope: !15608)
!15612 = !DILocation(line: 127, column: 13, scope: !15547)
!15613 = !DILocation(line: 127, column: 10, scope: !15547)
!15614 = !DILocation(line: 127, column: 7, scope: !15540)
!15615 = !DILocation(line: 137, column: 24, scope: !15546)
!15616 = !DILocation(line: 0, scope: !15546)
!15617 = !DILocation(line: 139, column: 18, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15546, file: !2353, line: 139, column: 8)
!15619 = !DILocation(line: 139, column: 23, scope: !15618)
!15620 = !DILocation(line: 141, column: 5, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15618, file: !2353, line: 140, column: 48)
!15622 = !DILocation(line: 142, column: 4, scope: !15621)
!15623 = !DILocalVariable(name: "key", arg: 2, scope: !15624, file: !249, line: 190, type: !15534)
!15624 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !15625, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15627)
!15625 = !DISubroutineType(types: !15626)
!15626 = !{null, !15559, !15534}
!15627 = !{!15628, !15623}
!15628 = !DILocalVariable(name: "l", arg: 1, scope: !15624, file: !249, line: 189, type: !15559)
!15629 = !DILocation(line: 0, scope: !15624, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 102, column: 2, scope: !15541)
!15631 = !DILocalVariable(name: "key", arg: 1, scope: !15632, file: !5879, line: 84, type: !32)
!15632 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15633)
!15633 = !{!15631}
!15634 = !DILocation(line: 0, scope: !15632, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !15630)
!15636 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !15635)
!15637 = !{i64 1954373}
!15638 = !DILocation(line: 148, column: 1, scope: !15521)
!15639 = distinct !DISubprogram(name: "elapsed", scope: !2353, file: !2353, line: 62, type: !15640, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !250)
!15640 = !DISubroutineType(types: !15641)
!15641 = !{!707}
!15642 = !DILocation(line: 64, column: 9, scope: !15639)
!15643 = !DILocation(line: 64, column: 28, scope: !15639)
!15644 = !DILocation(line: 64, column: 35, scope: !15639)
!15645 = !DILocation(line: 64, column: 2, scope: !15639)
!15646 = distinct !DISubprogram(name: "first", scope: !2353, file: !2353, line: 39, type: !15647, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15649)
!15647 = !DISubroutineType(types: !15648)
!15648 = !{!2326}
!15649 = !{!15650}
!15650 = !DILocalVariable(name: "t", scope: !15646, file: !2353, line: 41, type: !15651)
!15651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 32)
!15652 = !DILocation(line: 41, column: 19, scope: !15646)
!15653 = !DILocation(line: 0, scope: !15646)
!15654 = !DILocation(line: 43, column: 9, scope: !15646)
!15655 = !DILocation(line: 43, column: 2, scope: !15646)
!15656 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !15657, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15659)
!15657 = !DISubroutineType(types: !15658)
!15658 = !{null, !15651, !15651}
!15659 = !{!15660, !15661, !15662}
!15660 = !DILocalVariable(name: "successor", arg: 1, scope: !15656, file: !233, line: 443, type: !15651)
!15661 = !DILocalVariable(name: "node", arg: 2, scope: !15656, file: !233, line: 443, type: !15651)
!15662 = !DILocalVariable(name: "prev", scope: !15656, file: !233, line: 445, type: !15663)
!15663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15651)
!15664 = !DILocation(line: 0, scope: !15656)
!15665 = !DILocation(line: 445, column: 39, scope: !15656)
!15666 = !DILocation(line: 447, column: 8, scope: !15656)
!15667 = !DILocation(line: 447, column: 13, scope: !15656)
!15668 = !DILocation(line: 448, column: 8, scope: !15656)
!15669 = !DILocation(line: 448, column: 13, scope: !15656)
!15670 = !DILocation(line: 449, column: 8, scope: !15656)
!15671 = !DILocation(line: 449, column: 13, scope: !15656)
!15672 = !DILocation(line: 450, column: 18, scope: !15656)
!15673 = !DILocation(line: 451, column: 1, scope: !15656)
!15674 = distinct !DISubprogram(name: "next", scope: !2353, file: !2353, line: 46, type: !15675, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15677)
!15675 = !DISubroutineType(types: !15676)
!15676 = !{!2326, !2326}
!15677 = !{!15678, !15679}
!15678 = !DILocalVariable(name: "t", arg: 1, scope: !15674, file: !2353, line: 46, type: !2326)
!15679 = !DILocalVariable(name: "n", scope: !15674, file: !2353, line: 48, type: !15651)
!15680 = !DILocation(line: 0, scope: !15674)
!15681 = !DILocation(line: 48, column: 58, scope: !15674)
!15682 = !DILocation(line: 48, column: 19, scope: !15674)
!15683 = !DILocation(line: 50, column: 9, scope: !15674)
!15684 = !DILocation(line: 50, column: 2, scope: !15674)
!15685 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !15686, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15689)
!15686 = !DISubroutineType(types: !15687)
!15687 = !{null, !15688, !15651}
!15688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!15689 = !{!15690, !15691, !15692}
!15690 = !DILocalVariable(name: "list", arg: 1, scope: !15685, file: !233, line: 404, type: !15688)
!15691 = !DILocalVariable(name: "node", arg: 2, scope: !15685, file: !233, line: 404, type: !15651)
!15692 = !DILocalVariable(name: "tail", scope: !15685, file: !233, line: 406, type: !15663)
!15693 = !DILocation(line: 0, scope: !15685)
!15694 = !DILocation(line: 406, column: 34, scope: !15685)
!15695 = !DILocation(line: 408, column: 8, scope: !15685)
!15696 = !DILocation(line: 408, column: 13, scope: !15685)
!15697 = !DILocation(line: 409, column: 8, scope: !15685)
!15698 = !DILocation(line: 409, column: 13, scope: !15685)
!15699 = !DILocation(line: 411, column: 8, scope: !15685)
!15700 = !DILocation(line: 411, column: 13, scope: !15685)
!15701 = !DILocation(line: 412, column: 13, scope: !15685)
!15702 = !DILocation(line: 413, column: 1, scope: !15685)
!15703 = distinct !DISubprogram(name: "next_timeout", scope: !2353, file: !2353, line: 67, type: !15640, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15704)
!15704 = !{!15705, !15706, !15707}
!15705 = !DILocalVariable(name: "to", scope: !15703, file: !2353, line: 69, type: !2326)
!15706 = !DILocalVariable(name: "ticks_elapsed", scope: !15703, file: !2353, line: 70, type: !707)
!15707 = !DILocalVariable(name: "ret", scope: !15703, file: !2353, line: 71, type: !707)
!15708 = !DILocation(line: 69, column: 24, scope: !15703)
!15709 = !DILocation(line: 0, scope: !15703)
!15710 = !DILocation(line: 70, column: 26, scope: !15703)
!15711 = !DILocation(line: 73, column: 10, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15703, file: !2353, line: 73, column: 6)
!15713 = !DILocation(line: 73, column: 19, scope: !15712)
!15714 = !DILocation(line: 74, column: 21, scope: !15712)
!15715 = !DILocation(line: 74, column: 30, scope: !15712)
!15716 = !DILocation(line: 74, column: 28, scope: !15712)
!15717 = !DILocation(line: 74, column: 45, scope: !15712)
!15718 = !DILocation(line: 73, column: 6, scope: !15703)
!15719 = !DILocation(line: 77, column: 9, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15712, file: !2353, line: 76, column: 9)
!15721 = !DILocation(line: 0, scope: !15712)
!15722 = !DILocation(line: 81, column: 20, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15703, file: !2353, line: 81, column: 6)
!15724 = !DILocation(line: 81, column: 6, scope: !15723)
!15725 = !DILocation(line: 81, column: 32, scope: !15723)
!15726 = !DILocation(line: 85, column: 2, scope: !15703)
!15727 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !15728, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15730)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{!15651, !15688, !15651}
!15730 = !{!15731, !15732}
!15731 = !DILocalVariable(name: "list", arg: 1, scope: !15727, file: !233, line: 341, type: !15688)
!15732 = !DILocalVariable(name: "node", arg: 2, scope: !15727, file: !233, line: 342, type: !15651)
!15733 = !DILocation(line: 0, scope: !15727)
!15734 = !DILocation(line: 344, column: 15, scope: !15727)
!15735 = !DILocation(line: 344, column: 9, scope: !15727)
!15736 = !DILocation(line: 344, column: 26, scope: !15727)
!15737 = !DILocation(line: 344, column: 2, scope: !15727)
!15738 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !15728, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15739)
!15739 = !{!15740, !15741}
!15740 = !DILocalVariable(name: "list", arg: 1, scope: !15738, file: !233, line: 325, type: !15688)
!15741 = !DILocalVariable(name: "node", arg: 2, scope: !15738, file: !233, line: 326, type: !15651)
!15742 = !DILocation(line: 0, scope: !15738)
!15743 = !DILocation(line: 328, column: 24, scope: !15738)
!15744 = !DILocation(line: 328, column: 15, scope: !15738)
!15745 = !DILocation(line: 328, column: 9, scope: !15738)
!15746 = !DILocation(line: 328, column: 45, scope: !15738)
!15747 = !DILocation(line: 328, column: 2, scope: !15738)
!15748 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !15749, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15751)
!15749 = !DISubroutineType(types: !15750)
!15750 = !{!15651, !15688}
!15751 = !{!15752}
!15752 = !DILocalVariable(name: "list", arg: 1, scope: !15748, file: !233, line: 294, type: !15688)
!15753 = !DILocation(line: 0, scope: !15748)
!15754 = !DILocation(line: 296, column: 9, scope: !15748)
!15755 = !DILocation(line: 296, column: 2, scope: !15748)
!15756 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !15757, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15759)
!15757 = !DISubroutineType(types: !15758)
!15758 = !{!136, !15688}
!15759 = !{!15760}
!15760 = !DILocalVariable(name: "list", arg: 1, scope: !15756, file: !233, line: 266, type: !15688)
!15761 = !DILocation(line: 0, scope: !15756)
!15762 = !DILocation(line: 268, column: 15, scope: !15756)
!15763 = !DILocation(line: 268, column: 20, scope: !15756)
!15764 = !DILocation(line: 268, column: 2, scope: !15756)
!15765 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2353, file: !2353, line: 150, type: !15766, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15768)
!15766 = !DISubroutineType(types: !15767)
!15767 = !{!107, !2326}
!15768 = !{!15769, !15770, !15771, !15773}
!15769 = !DILocalVariable(name: "to", arg: 1, scope: !15765, file: !2353, line: 150, type: !2326)
!15770 = !DILocalVariable(name: "ret", scope: !15765, file: !2353, line: 152, type: !107)
!15771 = !DILocalVariable(name: "__i", scope: !15772, file: !2353, line: 154, type: !15534)
!15772 = distinct !DILexicalBlock(scope: !15765, file: !2353, line: 154, column: 2)
!15773 = !DILocalVariable(name: "__key", scope: !15772, file: !2353, line: 154, type: !15534)
!15774 = !DILocation(line: 0, scope: !15765)
!15775 = !DILocation(line: 0, scope: !15772)
!15776 = !DILocation(line: 0, scope: !15556, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 154, column: 2, scope: !15772)
!15778 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !15777)
!15780 = !DILocation(line: 0, scope: !15565, inlinedAt: !15779)
!15781 = !DILocation(line: 155, column: 7, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15783, file: !2353, line: 155, column: 7)
!15783 = distinct !DILexicalBlock(scope: !15784, file: !2353, line: 154, column: 24)
!15784 = distinct !DILexicalBlock(scope: !15772, file: !2353, line: 154, column: 2)
!15785 = !DILocation(line: 155, column: 7, scope: !15783)
!15786 = !DILocation(line: 156, column: 4, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15782, file: !2353, line: 155, column: 39)
!15788 = !DILocation(line: 158, column: 3, scope: !15787)
!15789 = !DILocation(line: 0, scope: !15624, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 154, column: 2, scope: !15784)
!15791 = !DILocation(line: 0, scope: !15632, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !15790)
!15793 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !15792)
!15794 = !DILocation(line: 161, column: 2, scope: !15765)
!15795 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !15796, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15800)
!15796 = !DISubroutineType(types: !15797)
!15797 = !{!136, !15798}
!15798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15799, size: 32)
!15799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2330)
!15800 = !{!15801}
!15801 = !DILocalVariable(name: "node", arg: 1, scope: !15795, file: !233, line: 225, type: !15798)
!15802 = !DILocation(line: 0, scope: !15795)
!15803 = !DILocation(line: 227, column: 15, scope: !15795)
!15804 = !DILocation(line: 227, column: 20, scope: !15795)
!15805 = !DILocation(line: 227, column: 2, scope: !15795)
!15806 = distinct !DISubprogram(name: "remove_timeout", scope: !2353, file: !2353, line: 53, type: !2347, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15807)
!15807 = !{!15808}
!15808 = !DILocalVariable(name: "t", arg: 1, scope: !15806, file: !2353, line: 53, type: !2326)
!15809 = !DILocation(line: 0, scope: !15806)
!15810 = !DILocation(line: 55, column: 6, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15806, file: !2353, line: 55, column: 6)
!15812 = !DILocation(line: 55, column: 14, scope: !15811)
!15813 = !DILocation(line: 55, column: 6, scope: !15806)
!15814 = !DILocation(line: 56, column: 25, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15811, file: !2353, line: 55, column: 23)
!15816 = !DILocation(line: 56, column: 12, scope: !15815)
!15817 = !DILocation(line: 56, column: 19, scope: !15815)
!15818 = !DILocation(line: 57, column: 2, scope: !15815)
!15819 = !DILocation(line: 59, column: 23, scope: !15806)
!15820 = !DILocation(line: 59, column: 2, scope: !15806)
!15821 = !DILocation(line: 60, column: 1, scope: !15806)
!15822 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !15823, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15825)
!15823 = !DISubroutineType(types: !15824)
!15824 = !{null, !15651}
!15825 = !{!15826, !15827, !15828}
!15826 = !DILocalVariable(name: "node", arg: 1, scope: !15822, file: !233, line: 496, type: !15651)
!15827 = !DILocalVariable(name: "prev", scope: !15822, file: !233, line: 498, type: !15663)
!15828 = !DILocalVariable(name: "next", scope: !15822, file: !233, line: 499, type: !15663)
!15829 = !DILocation(line: 0, scope: !15822)
!15830 = !DILocation(line: 498, column: 34, scope: !15822)
!15831 = !DILocation(line: 499, column: 34, scope: !15822)
!15832 = !DILocation(line: 501, column: 8, scope: !15822)
!15833 = !DILocation(line: 501, column: 13, scope: !15822)
!15834 = !DILocation(line: 502, column: 8, scope: !15822)
!15835 = !DILocation(line: 502, column: 13, scope: !15822)
!15836 = !DILocation(line: 503, column: 2, scope: !15822)
!15837 = !DILocation(line: 504, column: 1, scope: !15822)
!15838 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !15823, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15839)
!15839 = !{!15840}
!15840 = !DILocalVariable(name: "node", arg: 1, scope: !15838, file: !233, line: 211, type: !15651)
!15841 = !DILocation(line: 0, scope: !15838)
!15842 = !DILocation(line: 213, column: 8, scope: !15838)
!15843 = !DILocation(line: 213, column: 13, scope: !15838)
!15844 = !DILocation(line: 214, column: 8, scope: !15838)
!15845 = !DILocation(line: 214, column: 13, scope: !15838)
!15846 = !DILocation(line: 215, column: 1, scope: !15838)
!15847 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2353, file: !2353, line: 183, type: !15848, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15852)
!15848 = !DISubroutineType(types: !15849)
!15849 = !{!103, !15850}
!15850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15851, size: 32)
!15851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2327)
!15852 = !{!15853, !15854, !15855, !15857}
!15853 = !DILocalVariable(name: "timeout", arg: 1, scope: !15847, file: !2353, line: 183, type: !15850)
!15854 = !DILocalVariable(name: "ticks", scope: !15847, file: !2353, line: 185, type: !103)
!15855 = !DILocalVariable(name: "__i", scope: !15856, file: !2353, line: 187, type: !15534)
!15856 = distinct !DILexicalBlock(scope: !15847, file: !2353, line: 187, column: 2)
!15857 = !DILocalVariable(name: "__key", scope: !15856, file: !2353, line: 187, type: !15534)
!15858 = !DILocation(line: 0, scope: !15847)
!15859 = !DILocation(line: 0, scope: !15856)
!15860 = !DILocation(line: 0, scope: !15556, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 187, column: 2, scope: !15856)
!15862 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !15861)
!15864 = !DILocation(line: 0, scope: !15565, inlinedAt: !15863)
!15865 = !DILocation(line: 188, column: 11, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15867, file: !2353, line: 187, column: 24)
!15867 = distinct !DILexicalBlock(scope: !15856, file: !2353, line: 187, column: 2)
!15868 = !DILocation(line: 0, scope: !15624, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 187, column: 2, scope: !15867)
!15870 = !DILocation(line: 0, scope: !15632, inlinedAt: !15871)
!15871 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !15869)
!15872 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !15871)
!15873 = !DILocation(line: 191, column: 2, scope: !15847)
!15874 = distinct !DISubprogram(name: "timeout_rem", scope: !2353, file: !2353, line: 165, type: !15848, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15875)
!15875 = !{!15876, !15877, !15878}
!15876 = !DILocalVariable(name: "timeout", arg: 1, scope: !15874, file: !2353, line: 165, type: !15850)
!15877 = !DILocalVariable(name: "ticks", scope: !15874, file: !2353, line: 167, type: !103)
!15878 = !DILocalVariable(name: "t", scope: !15879, file: !2353, line: 173, type: !2326)
!15879 = distinct !DILexicalBlock(scope: !15874, file: !2353, line: 173, column: 2)
!15880 = !DILocation(line: 0, scope: !15874)
!15881 = !DILocation(line: 169, column: 6, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15874, file: !2353, line: 169, column: 6)
!15883 = !DILocation(line: 169, column: 6, scope: !15874)
!15884 = !DILocation(line: 173, column: 28, scope: !15879)
!15885 = !DILocation(line: 0, scope: !15879)
!15886 = !DILocation(line: 173, column: 39, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !15879, file: !2353, line: 173, column: 2)
!15888 = !DILocation(line: 173, column: 2, scope: !15879)
!15889 = !DILocation(line: 174, column: 15, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15887, file: !2353, line: 173, column: 61)
!15891 = !DILocation(line: 174, column: 9, scope: !15890)
!15892 = !DILocation(line: 175, column: 15, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15890, file: !2353, line: 175, column: 7)
!15894 = !DILocation(line: 175, column: 7, scope: !15890)
!15895 = !DILocation(line: 173, column: 52, scope: !15887)
!15896 = distinct !{!15896, !15888, !15897}
!15897 = !DILocation(line: 178, column: 2, scope: !15879)
!15898 = !DILocation(line: 180, column: 17, scope: !15874)
!15899 = !DILocation(line: 180, column: 15, scope: !15874)
!15900 = !DILocation(line: 180, column: 2, scope: !15874)
!15901 = !DILocation(line: 181, column: 1, scope: !15874)
!15902 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12774, file: !12774, line: 35, type: !15903, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15905)
!15903 = !DISubroutineType(types: !15904)
!15904 = !{!136, !15850}
!15905 = !{!15906}
!15906 = !DILocalVariable(name: "to", arg: 1, scope: !15902, file: !12774, line: 35, type: !15850)
!15907 = !DILocation(line: 0, scope: !15902)
!15908 = !DILocation(line: 37, column: 35, scope: !15902)
!15909 = !DILocation(line: 37, column: 10, scope: !15902)
!15910 = !DILocation(line: 37, column: 9, scope: !15902)
!15911 = !DILocation(line: 37, column: 2, scope: !15902)
!15912 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2353, file: !2353, line: 194, type: !15848, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15913)
!15913 = !{!15914, !15915, !15916, !15918}
!15914 = !DILocalVariable(name: "timeout", arg: 1, scope: !15912, file: !2353, line: 194, type: !15850)
!15915 = !DILocalVariable(name: "ticks", scope: !15912, file: !2353, line: 196, type: !103)
!15916 = !DILocalVariable(name: "__i", scope: !15917, file: !2353, line: 198, type: !15534)
!15917 = distinct !DILexicalBlock(scope: !15912, file: !2353, line: 198, column: 2)
!15918 = !DILocalVariable(name: "__key", scope: !15917, file: !2353, line: 198, type: !15534)
!15919 = !DILocation(line: 0, scope: !15912)
!15920 = !DILocation(line: 0, scope: !15917)
!15921 = !DILocation(line: 0, scope: !15556, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 198, column: 2, scope: !15917)
!15923 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !15922)
!15925 = !DILocation(line: 0, scope: !15565, inlinedAt: !15924)
!15926 = !DILocation(line: 199, column: 11, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15928, file: !2353, line: 198, column: 24)
!15928 = distinct !DILexicalBlock(scope: !15917, file: !2353, line: 198, column: 2)
!15929 = !DILocation(line: 199, column: 23, scope: !15927)
!15930 = !DILocation(line: 0, scope: !15624, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 198, column: 2, scope: !15928)
!15932 = !DILocation(line: 0, scope: !15632, inlinedAt: !15933)
!15933 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !15931)
!15934 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !15933)
!15935 = !DILocation(line: 199, column: 21, scope: !15927)
!15936 = !DILocation(line: 202, column: 2, scope: !15912)
!15937 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2353, file: !2353, line: 205, type: !15640, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15938)
!15938 = !{!15939, !15940, !15942}
!15939 = !DILocalVariable(name: "ret", scope: !15937, file: !2353, line: 207, type: !707)
!15940 = !DILocalVariable(name: "__i", scope: !15941, file: !2353, line: 209, type: !15534)
!15941 = distinct !DILexicalBlock(scope: !15937, file: !2353, line: 209, column: 2)
!15942 = !DILocalVariable(name: "__key", scope: !15941, file: !2353, line: 209, type: !15534)
!15943 = !DILocation(line: 0, scope: !15937)
!15944 = !DILocation(line: 0, scope: !15941)
!15945 = !DILocation(line: 0, scope: !15556, inlinedAt: !15946)
!15946 = distinct !DILocation(line: 209, column: 2, scope: !15941)
!15947 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !15948)
!15948 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !15946)
!15949 = !DILocation(line: 0, scope: !15565, inlinedAt: !15948)
!15950 = !DILocation(line: 210, column: 9, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15952, file: !2353, line: 209, column: 24)
!15952 = distinct !DILexicalBlock(scope: !15941, file: !2353, line: 209, column: 2)
!15953 = !DILocation(line: 0, scope: !15624, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 209, column: 2, scope: !15952)
!15955 = !DILocation(line: 0, scope: !15632, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !15954)
!15957 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !15956)
!15958 = !DILocation(line: 212, column: 2, scope: !15937)
!15959 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2353, file: !2353, line: 215, type: !10386, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15960)
!15960 = !{!15961, !15962, !15963, !15965, !15966, !15969, !15970}
!15961 = !DILocalVariable(name: "ticks", arg: 1, scope: !15959, file: !2353, line: 215, type: !707)
!15962 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15959, file: !2353, line: 215, type: !136)
!15963 = !DILocalVariable(name: "__i", scope: !15964, file: !2353, line: 217, type: !15534)
!15964 = distinct !DILexicalBlock(scope: !15959, file: !2353, line: 217, column: 2)
!15965 = !DILocalVariable(name: "__key", scope: !15964, file: !2353, line: 217, type: !15534)
!15966 = !DILocalVariable(name: "next_to", scope: !15967, file: !2353, line: 218, type: !107)
!15967 = distinct !DILexicalBlock(scope: !15968, file: !2353, line: 217, column: 24)
!15968 = distinct !DILexicalBlock(scope: !15964, file: !2353, line: 217, column: 2)
!15969 = !DILocalVariable(name: "sooner", scope: !15967, file: !2353, line: 219, type: !136)
!15970 = !DILocalVariable(name: "imminent", scope: !15967, file: !2353, line: 221, type: !136)
!15971 = !DILocation(line: 0, scope: !15959)
!15972 = !DILocation(line: 0, scope: !15964)
!15973 = !DILocation(line: 0, scope: !15556, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 217, column: 2, scope: !15964)
!15975 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !15974)
!15977 = !DILocation(line: 0, scope: !15565, inlinedAt: !15976)
!15978 = !DILocation(line: 218, column: 17, scope: !15967)
!15979 = !DILocation(line: 0, scope: !15967)
!15980 = !DILocation(line: 221, column: 27, scope: !15967)
!15981 = !DILocation(line: 233, column: 17, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15967, file: !2353, line: 233, column: 7)
!15983 = !DILocation(line: 234, column: 26, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15982, file: !2353, line: 233, column: 56)
!15985 = !DILocation(line: 234, column: 4, scope: !15984)
!15986 = !DILocation(line: 235, column: 3, scope: !15984)
!15987 = !DILocation(line: 0, scope: !15624, inlinedAt: !15988)
!15988 = distinct !DILocation(line: 217, column: 2, scope: !15968)
!15989 = !DILocation(line: 0, scope: !15632, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !15988)
!15991 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !15990)
!15992 = !DILocation(line: 237, column: 1, scope: !15959)
!15993 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2353, file: !2353, line: 239, type: !15994, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15996)
!15994 = !DISubroutineType(types: !15995)
!15995 = !{null, !707}
!15996 = !{!15997, !15998, !15999, !16001}
!15997 = !DILocalVariable(name: "ticks", arg: 1, scope: !15993, file: !2353, line: 239, type: !707)
!15998 = !DILocalVariable(name: "key", scope: !15993, file: !2353, line: 245, type: !15534)
!15999 = !DILocalVariable(name: "t", scope: !16000, file: !2353, line: 262, type: !2326)
!16000 = distinct !DILexicalBlock(scope: !15993, file: !2353, line: 261, column: 67)
!16001 = !DILocalVariable(name: "dt", scope: !16000, file: !2353, line: 263, type: !107)
!16002 = !DILocation(line: 0, scope: !15993)
!16003 = !DILocation(line: 242, column: 2, scope: !15993)
!16004 = !DILocation(line: 0, scope: !15556, inlinedAt: !16005)
!16005 = distinct !DILocation(line: 245, column: 25, scope: !15993)
!16006 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !16005)
!16008 = !DILocation(line: 0, scope: !15565, inlinedAt: !16007)
!16009 = !DILocation(line: 261, column: 9, scope: !15993)
!16010 = !DILocation(line: 261, column: 17, scope: !15993)
!16011 = !DILocation(line: 261, column: 25, scope: !15993)
!16012 = !DILocation(line: 261, column: 37, scope: !15993)
!16013 = !DILocation(line: 261, column: 47, scope: !15993)
!16014 = !DILocation(line: 261, column: 44, scope: !15993)
!16015 = !DILocation(line: 261, column: 2, scope: !15993)
!16016 = !DILocation(line: 0, scope: !16000)
!16017 = !DILocation(line: 263, column: 12, scope: !16000)
!16018 = !DILocation(line: 265, column: 16, scope: !16000)
!16019 = !DILocation(line: 265, column: 13, scope: !16000)
!16020 = !DILocation(line: 266, column: 13, scope: !16000)
!16021 = !DILocation(line: 267, column: 3, scope: !16000)
!16022 = !DILocation(line: 0, scope: !15624, inlinedAt: !16023)
!16023 = distinct !DILocation(line: 269, column: 3, scope: !16000)
!16024 = !DILocation(line: 0, scope: !15632, inlinedAt: !16025)
!16025 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !16023)
!16026 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !16025)
!16027 = !DILocation(line: 270, column: 6, scope: !16000)
!16028 = !DILocation(line: 270, column: 3, scope: !16000)
!16029 = !DILocation(line: 0, scope: !15556, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 271, column: 9, scope: !16000)
!16031 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !16030)
!16033 = !DILocation(line: 0, scope: !15565, inlinedAt: !16032)
!16034 = !DILocation(line: 272, column: 22, scope: !16000)
!16035 = distinct !{!16035, !16015, !16036}
!16036 = !DILocation(line: 273, column: 2, scope: !15993)
!16037 = !DILocation(line: 276, column: 19, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16039, file: !2353, line: 275, column: 23)
!16039 = distinct !DILexicalBlock(scope: !15993, file: !2353, line: 275, column: 6)
!16040 = !DILocation(line: 277, column: 2, scope: !16038)
!16041 = !DILocation(line: 279, column: 15, scope: !15993)
!16042 = !DILocation(line: 279, column: 12, scope: !15993)
!16043 = !DILocation(line: 280, column: 21, scope: !15993)
!16044 = !DILocation(line: 282, column: 24, scope: !15993)
!16045 = !DILocation(line: 282, column: 2, scope: !15993)
!16046 = !DILocation(line: 0, scope: !15624, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 284, column: 2, scope: !15993)
!16048 = !DILocation(line: 0, scope: !15632, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !16047)
!16050 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !16049)
!16051 = !DILocation(line: 285, column: 1, scope: !15993)
!16052 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2353, file: !2353, line: 287, type: !16053, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16055)
!16053 = !DISubroutineType(types: !16054)
!16054 = !{!105}
!16055 = !{!16056, !16057, !16059}
!16056 = !DILocalVariable(name: "t", scope: !16052, file: !2353, line: 289, type: !1468)
!16057 = !DILocalVariable(name: "__i", scope: !16058, file: !2353, line: 291, type: !15534)
!16058 = distinct !DILexicalBlock(scope: !16052, file: !2353, line: 291, column: 2)
!16059 = !DILocalVariable(name: "__key", scope: !16058, file: !2353, line: 291, type: !15534)
!16060 = !DILocation(line: 0, scope: !16052)
!16061 = !DILocation(line: 0, scope: !16058)
!16062 = !DILocation(line: 0, scope: !15556, inlinedAt: !16063)
!16063 = distinct !DILocation(line: 291, column: 2, scope: !16058)
!16064 = !DILocation(line: 55, column: 2, scope: !15565, inlinedAt: !16065)
!16065 = distinct !DILocation(line: 145, column: 10, scope: !15556, inlinedAt: !16063)
!16066 = !DILocation(line: 0, scope: !15565, inlinedAt: !16065)
!16067 = !DILocation(line: 292, column: 7, scope: !16068)
!16068 = distinct !DILexicalBlock(scope: !16069, file: !2353, line: 291, column: 24)
!16069 = distinct !DILexicalBlock(scope: !16058, file: !2353, line: 291, column: 2)
!16070 = !DILocation(line: 292, column: 19, scope: !16068)
!16071 = !DILocation(line: 0, scope: !15624, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 291, column: 2, scope: !16069)
!16073 = !DILocation(line: 0, scope: !15632, inlinedAt: !16074)
!16074 = distinct !DILocation(line: 215, column: 2, scope: !15624, inlinedAt: !16072)
!16075 = !DILocation(line: 95, column: 2, scope: !15632, inlinedAt: !16074)
!16076 = !DILocation(line: 292, column: 17, scope: !16068)
!16077 = !DILocation(line: 294, column: 2, scope: !16052)
!16078 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2353, file: !2353, line: 297, type: !6134, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !250)
!16079 = !DILocation(line: 300, column: 19, scope: !16078)
!16080 = !DILocation(line: 300, column: 9, scope: !16078)
!16081 = !DILocation(line: 300, column: 2, scope: !16078)
!16082 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2353, file: !2353, line: 306, type: !16053, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !250)
!16083 = !DILocation(line: 308, column: 9, scope: !16082)
!16084 = !DILocation(line: 308, column: 2, scope: !16082)
!16085 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2353, file: !2353, line: 319, type: !6144, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16086)
!16086 = !{!16087, !16088, !16089, !16090}
!16087 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16085, file: !2353, line: 319, type: !162)
!16088 = !DILocalVariable(name: "start_cycles", scope: !16085, file: !2353, line: 328, type: !162)
!16089 = !DILocalVariable(name: "cycles_to_wait", scope: !16085, file: !2353, line: 331, type: !162)
!16090 = !DILocalVariable(name: "current_cycles", scope: !16091, file: !2353, line: 338, type: !162)
!16091 = distinct !DILexicalBlock(scope: !16092, file: !2353, line: 337, column: 11)
!16092 = distinct !DILexicalBlock(scope: !16093, file: !2353, line: 337, column: 2)
!16093 = distinct !DILexicalBlock(scope: !16085, file: !2353, line: 337, column: 2)
!16094 = !DILocation(line: 0, scope: !16085)
!16095 = !DILocation(line: 322, column: 19, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16085, file: !2353, line: 322, column: 6)
!16097 = !DILocation(line: 322, column: 6, scope: !16085)
!16098 = !DILocation(line: 328, column: 26, scope: !16085)
!16099 = !DILocation(line: 333, column: 43, scope: !16085)
!16100 = !DILocation(line: 337, column: 2, scope: !16085)
!16101 = !DILocation(line: 338, column: 29, scope: !16091)
!16102 = !DILocation(line: 0, scope: !16091)
!16103 = !DILocation(line: 341, column: 23, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16091, file: !2353, line: 341, column: 7)
!16105 = !DILocation(line: 341, column: 39, scope: !16104)
!16106 = !DILocation(line: 349, column: 1, scope: !16085)
!16107 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !224, file: !224, line: 1675, type: !6134, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !250)
!16108 = !DILocation(line: 1677, column: 9, scope: !16107)
!16109 = !DILocation(line: 1677, column: 2, scope: !16107)
!16110 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16111, file: !16111, line: 24, type: !6134, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !250)
!16111 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16112 = !DILocation(line: 26, column: 9, scope: !16110)
!16113 = !DILocation(line: 26, column: 2, scope: !16110)
!16114 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2353, file: !2353, line: 364, type: !16115, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16117)
!16115 = !DISubroutineType(types: !16116)
!16116 = !{!1468, !15524}
!16117 = !{!16118, !16119}
!16118 = !DILocalVariable(name: "timeout", arg: 1, scope: !16114, file: !2353, line: 364, type: !15524)
!16119 = !DILocalVariable(name: "dt", scope: !16114, file: !2353, line: 366, type: !103)
!16120 = !DILocation(line: 0, scope: !16114)
!16121 = !DILocation(line: 368, column: 6, scope: !16114)
!16122 = !DILocation(line: 371, column: 10, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16124, file: !2353, line: 370, column: 47)
!16124 = distinct !DILexicalBlock(scope: !16125, file: !2353, line: 370, column: 13)
!16125 = distinct !DILexicalBlock(scope: !16114, file: !2353, line: 368, column: 6)
!16126 = !DILocation(line: 371, column: 3, scope: !16123)
!16127 = !DILocation(line: 376, column: 58, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16129, file: !2353, line: 376, column: 7)
!16129 = distinct !DILexicalBlock(scope: !16124, file: !2353, line: 372, column: 9)
!16130 = !DILocation(line: 376, column: 7, scope: !16129)
!16131 = !DILocation(line: 376, column: 43, scope: !16128)
!16132 = !DILocation(line: 377, column: 4, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16128, file: !2353, line: 376, column: 64)
!16134 = !DILocation(line: 379, column: 10, scope: !16129)
!16135 = !DILocation(line: 379, column: 33, scope: !16129)
!16136 = !DILocation(line: 379, column: 31, scope: !16129)
!16137 = !DILocation(line: 379, column: 3, scope: !16129)
!16138 = !DILocation(line: 0, scope: !16125)
!16139 = !DILocation(line: 381, column: 1, scope: !16114)
!16140 = distinct !DISubprogram(name: "boot_banner", scope: !16141, file: !16141, line: 26, type: !3113, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !250)
!16141 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16142 = !DILocation(line: 34, column: 2, scope: !16140)
!16143 = !DILocation(line: 36, column: 1, scope: !16140)
!16144 = distinct !DISubprogram(name: "statics_init", scope: !2381, file: !2381, line: 21, type: !2387, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16145)
!16145 = !{!16146, !16147}
!16146 = !DILocalVariable(name: "unused", arg: 1, scope: !16144, file: !2381, line: 21, type: !2389)
!16147 = !DILocalVariable(name: "h", scope: !16148, file: !2381, line: 24, type: !16149)
!16148 = distinct !DILexicalBlock(scope: !16144, file: !2381, line: 24, column: 2)
!16149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16150, size: 32)
!16150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !16151)
!16151 = !{!16152, !16158, !16164}
!16152 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16150, file: !224, line: 5074, baseType: !16153, size: 96)
!16153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !16154)
!16154 = !{!16155, !16156, !16157}
!16155 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16153, file: !454, line: 57, baseType: !457, size: 32)
!16156 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16153, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!16157 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16153, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!16158 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16150, file: !224, line: 5075, baseType: !16159, size: 64, offset: 96)
!16159 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !16160)
!16160 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !16161)
!16161 = !{!16162}
!16162 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16160, file: !228, line: 232, baseType: !16163, size: 64)
!16163 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2367)
!16164 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16150, file: !224, line: 5076, baseType: !16165, offset: 160)
!16165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!16166 = !DILocation(line: 0, scope: !16144)
!16167 = !DILocation(line: 0, scope: !16148)
!16168 = !DILocation(line: 24, column: 2, scope: !16148)
!16169 = !DILocation(line: 52, column: 2, scope: !16144)
!16170 = !DILocation(line: 49, column: 27, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16172, file: !2381, line: 48, column: 3)
!16172 = distinct !DILexicalBlock(scope: !16173, file: !2381, line: 24, column: 36)
!16173 = distinct !DILexicalBlock(scope: !16148, file: !2381, line: 24, column: 2)
!16174 = !DILocation(line: 49, column: 45, scope: !16171)
!16175 = !DILocation(line: 49, column: 4, scope: !16171)
!16176 = !DILocation(line: 24, column: 2, scope: !16173)
!16177 = !DILocation(line: 24, column: 2, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16173, file: !2381, line: 24, column: 2)
!16179 = distinct !{!16179, !16168, !16180}
!16180 = !DILocation(line: 51, column: 2, scope: !16148)
!16181 = distinct !DISubprogram(name: "k_heap_init", scope: !2381, file: !2381, line: 13, type: !16182, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16184)
!16182 = !DISubroutineType(types: !16183)
!16183 = !{null, !16149, !102, !252}
!16184 = !{!16185, !16186, !16187}
!16185 = !DILocalVariable(name: "h", arg: 1, scope: !16181, file: !2381, line: 13, type: !16149)
!16186 = !DILocalVariable(name: "mem", arg: 2, scope: !16181, file: !2381, line: 13, type: !102)
!16187 = !DILocalVariable(name: "bytes", arg: 3, scope: !16181, file: !2381, line: 13, type: !252)
!16188 = !DILocation(line: 0, scope: !16181)
!16189 = !DILocation(line: 15, column: 19, scope: !16181)
!16190 = !DILocation(line: 15, column: 2, scope: !16181)
!16191 = !DILocation(line: 16, column: 20, scope: !16181)
!16192 = !DILocation(line: 16, column: 2, scope: !16181)
!16193 = !DILocation(line: 19, column: 1, scope: !16181)
!16194 = distinct !DISubprogram(name: "z_waitq_init", scope: !12706, file: !12706, line: 47, type: !16195, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16198)
!16195 = !DISubroutineType(types: !16196)
!16196 = !{null, !16197}
!16197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16159, size: 32)
!16198 = !{!16199}
!16199 = !DILocalVariable(name: "w", arg: 1, scope: !16194, file: !12706, line: 47, type: !16197)
!16200 = !DILocation(line: 0, scope: !16194)
!16201 = !DILocation(line: 49, column: 21, scope: !16194)
!16202 = !DILocation(line: 49, column: 2, scope: !16194)
!16203 = !DILocation(line: 50, column: 1, scope: !16194)
!16204 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !16205, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16208)
!16205 = !DISubroutineType(types: !16206)
!16206 = !{null, !16207}
!16207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16163, size: 32)
!16208 = !{!16209}
!16209 = !DILocalVariable(name: "list", arg: 1, scope: !16204, file: !233, line: 197, type: !16207)
!16210 = !DILocation(line: 0, scope: !16204)
!16211 = !DILocation(line: 199, column: 8, scope: !16204)
!16212 = !DILocation(line: 199, column: 13, scope: !16204)
!16213 = !DILocation(line: 200, column: 8, scope: !16204)
!16214 = !DILocation(line: 200, column: 13, scope: !16204)
!16215 = !DILocation(line: 201, column: 1, scope: !16204)
!16216 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2381, file: !2381, line: 64, type: !16217, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16223)
!16217 = !DISubroutineType(types: !16218)
!16218 = !{!102, !16149, !252, !252, !16219}
!16219 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16220)
!16220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16221)
!16221 = !{!16222}
!16222 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16220, file: !104, line: 66, baseType: !103, size: 64)
!16223 = !{!16224, !16225, !16226, !16227, !16228, !16229, !16230, !16231, !16236}
!16224 = !DILocalVariable(name: "h", arg: 1, scope: !16216, file: !2381, line: 64, type: !16149)
!16225 = !DILocalVariable(name: "align", arg: 2, scope: !16216, file: !2381, line: 64, type: !252)
!16226 = !DILocalVariable(name: "bytes", arg: 3, scope: !16216, file: !2381, line: 64, type: !252)
!16227 = !DILocalVariable(name: "timeout", arg: 4, scope: !16216, file: !2381, line: 65, type: !16219)
!16228 = !DILocalVariable(name: "now", scope: !16216, file: !2381, line: 67, type: !105)
!16229 = !DILocalVariable(name: "end", scope: !16216, file: !2381, line: 67, type: !105)
!16230 = !DILocalVariable(name: "ret", scope: !16216, file: !2381, line: 68, type: !102)
!16231 = !DILocalVariable(name: "key", scope: !16216, file: !2381, line: 72, type: !16232)
!16232 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !16233)
!16233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !16234)
!16234 = !{!16235}
!16235 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16233, file: !249, line: 33, baseType: !107, size: 32)
!16236 = !DILocalVariable(name: "blocked_alloc", scope: !16216, file: !2381, line: 78, type: !136)
!16237 = !DILocation(line: 0, scope: !16216)
!16238 = !DILocation(line: 67, column: 21, scope: !16216)
!16239 = !DILocation(line: 70, column: 8, scope: !16216)
!16240 = !DILocation(line: 72, column: 41, scope: !16216)
!16241 = !DILocalVariable(name: "l", arg: 1, scope: !16242, file: !249, line: 136, type: !16245)
!16242 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !16243, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16246)
!16243 = !DISubroutineType(types: !16244)
!16244 = !{!16232, !16245}
!16245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16165, size: 32)
!16246 = !{!16241, !16247}
!16247 = !DILocalVariable(name: "k", scope: !16242, file: !249, line: 139, type: !16232)
!16248 = !DILocation(line: 0, scope: !16242, inlinedAt: !16249)
!16249 = distinct !DILocation(line: 72, column: 25, scope: !16216)
!16250 = !DILocation(line: 55, column: 2, scope: !16251, inlinedAt: !16255)
!16251 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5879, file: !5879, line: 42, type: !5880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16252)
!16252 = !{!16253, !16254}
!16253 = !DILocalVariable(name: "key", scope: !16251, file: !5879, line: 44, type: !32)
!16254 = !DILocalVariable(name: "tmp", scope: !16251, file: !5879, line: 53, type: !32)
!16255 = distinct !DILocation(line: 145, column: 10, scope: !16242, inlinedAt: !16249)
!16256 = !{i64 1948610}
!16257 = !DILocation(line: 0, scope: !16251, inlinedAt: !16255)
!16258 = !DILocation(line: 81, column: 9, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16216, file: !2381, line: 80, column: 22)
!16260 = !DILocation(line: 83, column: 9, scope: !16259)
!16261 = !DILocation(line: 85, column: 12, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16259, file: !2381, line: 84, column: 7)
!16263 = !DILocation(line: 85, column: 21, scope: !16262)
!16264 = !DILocation(line: 85, column: 30, scope: !16262)
!16265 = !DILocation(line: 85, column: 37, scope: !16262)
!16266 = !DILocation(line: 84, column: 7, scope: !16259)
!16267 = !DILocation(line: 99, column: 10, scope: !16259)
!16268 = !DILocation(line: 0, scope: !16242, inlinedAt: !16269)
!16269 = distinct !DILocation(line: 101, column: 9, scope: !16259)
!16270 = !DILocation(line: 55, column: 2, scope: !16251, inlinedAt: !16271)
!16271 = distinct !DILocation(line: 145, column: 10, scope: !16242, inlinedAt: !16269)
!16272 = !DILocation(line: 0, scope: !16251, inlinedAt: !16271)
!16273 = distinct !{!16273, !16274, !16275}
!16274 = !DILocation(line: 80, column: 2, scope: !16216)
!16275 = !DILocation(line: 102, column: 2, scope: !16216)
!16276 = !DILocalVariable(name: "key", arg: 2, scope: !16277, file: !249, line: 190, type: !16232)
!16277 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !16278, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16280)
!16278 = !DISubroutineType(types: !16279)
!16279 = !{null, !16245, !16232}
!16280 = !{!16281, !16276}
!16281 = !DILocalVariable(name: "l", arg: 1, scope: !16277, file: !249, line: 189, type: !16245)
!16282 = !DILocation(line: 0, scope: !16277, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 106, column: 2, scope: !16216)
!16284 = !DILocalVariable(name: "key", arg: 1, scope: !16285, file: !5879, line: 84, type: !32)
!16285 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5879, file: !5879, line: 84, type: !5890, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16286)
!16286 = !{!16284}
!16287 = !DILocation(line: 0, scope: !16285, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 215, column: 2, scope: !16277, inlinedAt: !16283)
!16289 = !DILocation(line: 95, column: 2, scope: !16285, inlinedAt: !16288)
!16290 = !{i64 1949427}
!16291 = !DILocation(line: 107, column: 2, scope: !16216)
!16292 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2381, file: !2381, line: 110, type: !16293, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16295)
!16293 = !DISubroutineType(types: !16294)
!16294 = !{!102, !16149, !252, !16219}
!16295 = !{!16296, !16297, !16298, !16299}
!16296 = !DILocalVariable(name: "h", arg: 1, scope: !16292, file: !2381, line: 110, type: !16149)
!16297 = !DILocalVariable(name: "bytes", arg: 2, scope: !16292, file: !2381, line: 110, type: !252)
!16298 = !DILocalVariable(name: "timeout", arg: 3, scope: !16292, file: !2381, line: 110, type: !16219)
!16299 = !DILocalVariable(name: "ret", scope: !16292, file: !2381, line: 114, type: !102)
!16300 = !DILocation(line: 0, scope: !16292)
!16301 = !DILocation(line: 114, column: 14, scope: !16292)
!16302 = !DILocation(line: 118, column: 2, scope: !16292)
!16303 = distinct !DISubprogram(name: "k_heap_free", scope: !2381, file: !2381, line: 121, type: !16304, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16306)
!16304 = !DISubroutineType(types: !16305)
!16305 = !{null, !16149, !102}
!16306 = !{!16307, !16308, !16309}
!16307 = !DILocalVariable(name: "h", arg: 1, scope: !16303, file: !2381, line: 121, type: !16149)
!16308 = !DILocalVariable(name: "mem", arg: 2, scope: !16303, file: !2381, line: 121, type: !102)
!16309 = !DILocalVariable(name: "key", scope: !16303, file: !2381, line: 123, type: !16232)
!16310 = !DILocation(line: 0, scope: !16303)
!16311 = !DILocation(line: 0, scope: !16242, inlinedAt: !16312)
!16312 = distinct !DILocation(line: 123, column: 25, scope: !16303)
!16313 = !DILocation(line: 55, column: 2, scope: !16251, inlinedAt: !16314)
!16314 = distinct !DILocation(line: 145, column: 10, scope: !16242, inlinedAt: !16312)
!16315 = !DILocation(line: 0, scope: !16251, inlinedAt: !16314)
!16316 = !DILocation(line: 125, column: 20, scope: !16303)
!16317 = !DILocation(line: 125, column: 2, scope: !16303)
!16318 = !DILocation(line: 128, column: 60, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16303, file: !2381, line: 128, column: 6)
!16320 = !DILocation(line: 128, column: 43, scope: !16319)
!16321 = !DILocation(line: 128, column: 68, scope: !16319)
!16322 = !DILocation(line: 128, column: 6, scope: !16303)
!16323 = !DILocation(line: 123, column: 41, scope: !16303)
!16324 = !DILocation(line: 129, column: 3, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16319, file: !2381, line: 128, column: 74)
!16326 = !DILocation(line: 130, column: 2, scope: !16325)
!16327 = !DILocation(line: 0, scope: !16277, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 131, column: 3, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16319, file: !2381, line: 130, column: 9)
!16330 = !DILocation(line: 0, scope: !16285, inlinedAt: !16331)
!16331 = distinct !DILocation(line: 215, column: 2, scope: !16277, inlinedAt: !16328)
!16332 = !DILocation(line: 95, column: 2, scope: !16285, inlinedAt: !16331)
!16333 = !DILocation(line: 133, column: 1, scope: !16303)
